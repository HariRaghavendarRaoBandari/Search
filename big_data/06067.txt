Compositional and Non-Compositional Phrase Embeddings

Adaptive Joint Learning of

Kazuma Hashimoto and Yoshimasa Tsuruoka

The University of Tokyo, 3-7-1 Hongo, Bunkyo-ku, Tokyo, Japan

{hassy,tsuruoka}@logos.t.u-tokyo.ac.jp

6
1
0
2

 
r
a

 

M
2
2

 
 
]
L
C
.
s
c
[
 
 

2
v
7
6
0
6
0

.

3
0
6
1
:
v
i
X
r
a

Abstract

and

compositional

We present a novel method for jointly
learning
non-
compositional phrase
embeddings by
adaptively weighting both types of em-
beddings using a compositionality scoring
function. The scoring function is used to
quantify the level of compositionality of
each phrase, and the parameters of the
function are jointly optimized with the ob-
jective for learning phrase embeddings. In
experiments, we apply the adaptive joint
learning method to the task of learning
embeddings of transitive verb phrases,
and show that the compositionality scores
have
strong correlation with human
ratings for verb-object compositionality,
substantially outperforming the previous
state of the art. Moreover, our embeddings
improve upon the previous best model
on a transitive verb disambiguation task.
We also show that a simple ensemble
technique further improves the results for
both tasks.

Introduction

1
Representing words and phrases in a vector space
has proven effective in a variety of language pro-
cessing tasks (Pham et al., 2015; Sutskever et al.,
2014). In most of the previous work, phrase em-
beddings are computed from word embeddings
by using various kinds of composition functions.
Such composed embeddings are called composi-
tional embeddings. An alternative way of comput-
ing phrase embeddings is to treat phrases as single
units and assigning a unique embedding to each
candidate phrase (Mikolov et al., 2013; Yazdani
et al., 2015). Such embeddings are called non-
compositional embeddings.

Relying solely on non-compositional embed-
dings has the obvious problem of data sparsity (i.e.
rare or unknown phrase problems). At the same
time, however, using compositional embeddings
is not always the best option since some phrases
are inherently non-compositional. For example,
the phrase “bear fruits” means “to yield results”1
but it is hard to infer its meaning by composing
the meanings of “bear” and “fruit”. Treating all
phrases as compositional also has a negative ef-
fect in learning the composition function because
the words in those idiomatic phrases are not just
uninformative but can serve as noisy samples in
the training. These problems have motivated us to
adaptively combine both types of embeddings.

Most of the existing methods for learning
phrase embeddings can be divided into two ap-
proaches. One approach is to learn compositional
embeddings by regarding all phrases as composi-
tional (Pham et al., 2015; Socher et al., 2012). The
other approach is to learn both types of embed-
dings separately and use the better ones (Kartsak-
lis et al., 2014; Muraoka et al., 2014). Kartsaklis
et al. (2014) show that non-compositional embed-
dings are better suited for a phrase similarity task,
whereas Muraoka et al. (2014) report the opposite
results on other tasks. These results suggest that
we should not stick to either of the two types of
embeddings unconditionally and could learn better
phrase embeddings by considering the composi-
tionality levels of the individual phrases in a more
ﬂexible fashion.

In this paper, we propose a method that jointly
learns compositional and non-compositional em-
beddings by adaptively weighting both types of
phrase embeddings using a compositionality scor-
ing function. The scoring function is used to quan-
tify the level of compositionality of each phrase

1The

deﬁnition

thefreedictionary.com/bear+fruit.

is

found

at http://idioms.

task. Since compositional embeddings are built
on word-level (i.e. unigram) information, they are
less prone to the data sparseness problem.

i.e.,

2.2 Non-Compositional Phrase Embeddings
In contrast to the compositional embedding, the
non-compositional embedding of a phrase n(p) ∈
Rd×1 is independently parameterized,
the
phrase p is treated just like a single word. Mikolov
et al. (2013) show that non-compositional em-
beddings are preferable when dealing with id-
iomatic phrases. Some recent studies (Kartsak-
lis et al., 2014; Muraoka et al., 2014) have dis-
cussed the (dis)advantages of using compositional
or non-compositional embeddings. However, in
most cases, a phrase is neither completely com-
positional nor completely non-compositional. To
the best of our knowledge, there is no method that
allows us to jointly learn compositional and non-
compositional phrase embeddings by incorporat-
ing the levels of compositionality of the phrases as
real-valued scores.

2.3 Adaptive Joint Learning
To simultaneously consider both compositional
and non-compositional aspects of each phrase, we
compute a phrase embedding v(p) by adaptively
weighting c(p) and n(p) as follows:

v(p) = α(p)c(p) + (1 − α(p))n(p),

(2)
where α(·) is a scoring function that quantiﬁes
the compositionality levels, and outputs a real
value ranging from 0 to 1. What we expect from
the scoring function is that large scores indicate
high levels of compositionality.
In other words,
when α(p) is close to 1, the compositional em-
bedding is mainly considered, and vice versa. For
example, we expect α(buy car) to be large and
α(bear fruit) to be small as shown in Figure 1.

We parameterize the scoring function α(p) as

logistic regression:

α(p) = σ(W · φ(p)),

(3)
where φ(p) ∈ RN×1 is a feature vector of the
phrase p, W ∈ RN×1 is a weight vector, N is the
number of features, and σ(·) is the logistic func-
tion. The weight vector W is jointly optimized in
conjunction with the objective J for the target task
of learning phrase embeddings v(p).

Figure 1: The overview of our method and exam-
ples of the compositionality scores.

and learned in conjunction with the target task for
learning phrase embeddings. In experiments, we
apply our method to the task of learning transitive
verb phrase embeddings and demonstrate that it
allows us to achieve state-of-the-art performance
on standard datasets for compositionality detec-
tion and verb disambiguation.

2 Method
In this section, we describe our approach in the
most general form, without specifying the func-
tion to compute the compositional embeddings or
the target task for optimizing the embeddings.

Figure 1 shows the overview of our proposed
method. At each iteration of the training (i.e.
gradient calculation) of a certain target task (e.g.
language modeling, machine translation, or senti-
ment analysis), our method ﬁrst computes a com-
positionality score for each phrase. Then the
score is used to weight the compositional and non-
compositional embeddings of the phrase in order
to compute the expected embedding of the phrase
which is to be used in the target task. Some exam-
ples of the compositionality scores are also shown
in the ﬁgure.

2.1 Compositional Phrase Embeddings
The compositional embedding c(p) ∈ Rd×1 of a
phrase p = (w1,··· , wL) is formulated as
c(p) = f (v(w1),··· , v(wL)),

(1)

where d is the dimensionality, L is the phrase
length, v(·) ∈ Rd×1 is a word embedding, and
f (·) is a composition function. The function
can be simple ones such as element-wise addi-
tion or multiplication (Mitchell and Lapata, 2008).
More complex ones such as recurrent neural net-
works (Sutskever et al., 2014) are also commonly
used. The word embeddings and the composi-
tion function are jointly learned on a certain target

Updating the model parameters Given the par-
∂v(p) ∈ Rd×1 for the target
tial derivative δp = ∂J
task, we can compute the partial derivative for up-
dating W as follows:
δα = α(p)(1 − α(p)){δp · (c(p) − n(p))} (4)
∂J
(5)
∂W

= δαφ(p).

If φ(p) is not constructed by static features but is
computed by a feature learning model such as neu-
ral networks, we can propagate the error term δα
into the feature learning model by the following
equation:

∂J

∂φ(p)

= δαW .

(6)

When we use only static features, as in this work,
we can simply compute the partial derivatives of J
with respect to c(p) and n(p) as follows:

∂J

∂c(p)
∂J

∂n(p)

= α(p)δp
= (1 − α(p))δp.

(7)

(8)

∂J

As mentioned above, Eq. (7) and (8) show that
the non-compositional embeddings are mainly up-
dated when α(p) is close to 0, and vice versa.
The partial derivative
∂c(p) is used to update the
model parameters in the composition function via
the backpropagation algorithm. Any differentiable
composition functions can be used in our method.
Expected behavior of our method The training
of our method depends on the target task; that is,
the model parameters are updated so as to mini-
mize the cost function as described above. More
concretely, α(p) for each phrase p is adaptively ad-
justed so that the corresponding parameter updates
contribute to minimizing the cost function. As a
result, different phrases will have different α(p)
values depending on their compositionality.
If
the size of the training data were almost inﬁnitely
large, α(p) for all phrases would become nearly
zero, and the non-compositional embeddings n(p)
are dominantly used (since that would allow the
model to better ﬁt the data). In reality, however,
the amount of the training data is limited, and thus
the compositional embeddings c(p) are effectively
used to overcome the data sparseness problem.

3 Learning Verb Phrase Embeddings
This section describes a particular instantiation of
our approach presented in the previous section, fo-

cusing on the task of learning the embeddings of
transitive verb phrases.

3.1 Word and Phrase Prediction in
Predicate-Argument Relations

Acquisition of selectional preference using em-
beddings has been widely studied, where word
and/or phrase embeddings are learned based on
syntactic links (Bansal et al., 2014; Hashimoto and
Tsuruoka, 2015; Levy and Goldberg, 2014; Van de
Cruys, 2014). As with language modeling, these
methods perform word (or phrase) prediction us-
ing (syntactic) contexts.

In this work, we focus on verb-object rela-
tionships and employ a phrase embedding learn-
ing method presented in Hashimoto and Tsuruoka
(2015). The task is a plausibility judgment task
for predicate-argument tuples. They extracted
Subject-Verb-Object (SVO) and SVO-Preposition-
Noun (SVOPN) tuples using a probabilistic HPSG
parser, Enju (Miyao and Tsujii, 2008), from the
training corpora. Transitive verbs and preposi-
tions are extracted as predicates with two argu-
ments. For example, the extracted tuples include
(S, V, O) = (“importer”, “make”, “payment”) and
(SVO, P, N) = (“importer make payment”, “in”,
“currency”). The task is to discriminate between
observed and unobserved tuples, such as the (S, V,
O) tuple mentioned above and (S, V’, O) = (“im-
porter”, “eat”, “payment”), which is generated by
replacing “make” with “eat”. The (S, V’, O) tuple
is unlikely to be observed.

For each tuple (p, a1, a2) observed in the train-

ing data, a cost function is deﬁned as follows:
− log σ(s(p, a1, a2))− log σ(−s(p(cid:48), a1, a2))
1, a2))
2)),

− log σ(−s(p, a(cid:48)
− log σ(−s(p, a1, a(cid:48)

(9)

1, a2), and (p, a1, a(cid:48)

where s(·) is a plausibility scoring function, and
p, a1 and a2 are a predicate and its arguments, re-
spectively. Each of the three unobserved tuples
(p(cid:48), a1, a2), (p, a(cid:48)
2) is gener-
ated by replacing one of the entries with a random
sample.
In their method, each predicate p is represented
with a matrix M (p) ∈ Rd×d and each argument
a with an embedding v(a) ∈ Rd×1. The matri-
ces and embeddings are learned by minimizing the
cost function using AdaGrad (Duchi et al., 2011).
The scoring function is parameterized as
s(p, a1, a2) = v(a1) · (M (p)v(a2)),

(10)

and the VO and SVO embeddings are computed as

v(V O) = M (V )v(O)
v(SV O) = v(S) (cid:12) v(V O),

(11)
(12)

as proposed by Kartsaklis et al. (2012). The op-
erator (cid:12) denotes element-wise multiplication. In
summary, the scores are computed as
s(V, S, O) = v(S) · v(V O)

(13)

s(P, SV O, N ) = v(SV O) · (M (P )v(N )).

(14)

With this method, the word and composed phrase
embeddings are jointly learned based on co-
occurrence statistics of predicate-argument struc-
tures.
they
achieved state-of-the-art accuracy on a transi-
tive verb disambiguation task (Grefenstette and
Sadrzadeh, 2011).

Using the learned embeddings,

3.2 Applying the Adaptive Joint Learning
In this section, we apply our proposed method,
the adaptive joint learning, to the task described in
Section 3.1. We here redeﬁne the computation of
v(V O) by ﬁrst replacing v(V O) in Eq. (11) with
c(V O) as,

c(V O) = M (V )v(O),

(15)

and then assigning V O to p in Eq. (2) and (3):
v(V O) = α(V O)c(V O) + (1 − α(V O))n(V O),
(16)
(17)

α(V O) = σ(W · φ(V O)).

The v(V O) in Eq. (16) is used in Eq. (12) and
(13). We assume that the candidates of the phrases
are given in advance. For the phrases not included
in the candidates, we set v(V O) = c(V O). This
is analogous to the way a human guesses the
meaning of an idiomatic phrase she does not know.
We should note that φ(V O) can be computed for
phrases not included in the candidates, using par-
tial features among the features described below.
If any features do not ﬁre, φ(V O) becomes 0.5
according to the logistic function.

For the feature vector φ(V O), we use the fol-

lowing simple binary and real-valued features:

• indices of V, O, and VO
• frequency and Pointwise Mutual Information

(PMI) values of VO.

More concretely, the ﬁrst set of the features (in-
dices of V, O, and VO) is the concatenation of
traditional one-hot vectors. The second set of
features, frequency and PMI (Church and Hanks,
1990) features, have proven effective in detect-
ing the compositionality of transitive verbs in Mc-
Carthy et al. (2007) and Venkatapathy and Joshi
(2005). Given the training corpus, the frequency
feature for a VO pair is computed as

f req(V O) = log(count(V O)),

(18)

where count(V O) counts how many times the VO
pair appears in the training corpus, and the PMI
feature is computed as

count(V O)count(∗)
count(V )count(O)

,

PMI(V O) = log

(19)
where count(V ), count(O), and count(∗) are the
counts of the verb V , the object O, and all VO
pairs in the training corpus, respectively. We nor-
malize the frequency and PMI features so that their
maximum absolute value becomes 1.
4 Experimental Settings
4.1 Training Data
As the training data, we used two datasets, one
small and one large: the British National Corpus
(BNC) (Leech, 1992) and the English Wikipedia.
More concretely, we used the publicly available
data2 preprocessed by Hashimoto and Tsuruoka
(2015). The BNC data consists of 1.38 million
SVO tuples and 0.93 million SVOPN tuples. The
Wikipedia data consists of 23.6 million SVO tu-
ples and 17.3 million SVOPN tuples. Follow-
ing the provided code3, we used exactly the same
train/development/test split (0.8/0.1/0.1) for train-
ing the overall model. As the third training data,
we also used the concatenation of the two data,
which is hereafter referred to as BNC-Wikipedia.
We applied our adaptive joint learning method
to verb-object phrases observed more than K
times in each corpus.
to 10
for the BNC data and 100 for the Wikipedia
and BNC-Wikipedia data.
the
non-compositional embeddings were assigned to
17,817, 28,933, and 30,682 verb-object phrase
types in the BNC, Wikipedia, and BNC-Wikipedia
data, respectively.

Consequently,

K was set

2http://www.logos.t.u-tokyo.ac.jp/

˜hassy/publications/cvsc2015/
3https://github.com/hassyGo/

SVOembedding

4.2 Training Details
The model parameters consist of d-dimensional
word embeddings for nouns, non-compositional
phrase embeddings, d × d-dimensional matrices
for verbs and prepositions, and a weight vector
W for α(V O). All the model parameters are
jointly optimized. We initialized the embeddings
and matrices with zero-mean gaussian random val-
ues with a variance of 1
d2 , respectively, and
W with zeros. Initializing W with zeros forces
the initial value of each α(V O) to be 0.5 since we
use the logistic function to compute α(V O).

d and 1

The optimization was performed via mini-
batch AdaGrad (Duchi et al., 2011). We ﬁxed
d to 25 and the mini-batch size to 100. We
set candidate values for the learning rate to
{0.01, 0.02, 0.03, 0.04, 0.05}. For the weight vec-
tor W , we employed L2-norm regularization and
set the strength to {10−3, 10−4, 10−5, 10−6, 0}.
For selecting the hyperparameters, each training
process was stopped when the evaluation score
on the development split decreased. Then the
best performing hyperparameters were selected
for each training dataset. Once the training is ﬁn-
ished, we can use the learned embeddings and the
scoring function in downstream target tasks.

5 Evaluation on the Compositionality

Detection Function

5.1 Evaluation Settings
Datasets First, we evaluated the learned compo-
sitionality detection function on two composition-
ality detection datasets, VJ’054 and MC’075, pro-
vided by Venkatapathy and Joshi (2005) and Mc-
Carthy et al. (2007), respectively. VJ’05 consists
of 765 verb-object pairs with human ratings for
the compositionality. MC’07 is a subset of VJ’05
and consists of 638 verb-object pairs. For exam-
ple, the rating of “buy car” is 6, which is the high-
est score, indicating the phrase is highly composi-
tional. The rating of “bear fruit ” is 1, which is the
lowest score, indicating the phrase is highly non-
compositional.

Evaluation metric and ensembles The evalu-
ation was performed by calculating Spearman’s

4http://www.dianamccarthy.co.uk/
downloads/SVAJ2005compositionality_
rating.txt

5http://www.dianamccarthy.co.uk/

downloads/emnlp2007data.txt

Method
Proposed method (Wikipedia)
Proposed method (BNC)
Proposed method (BNC-Wikipedia)
Proposed method (Ensemble)
Kiela and Clark (2013) w/ WordNet
Kiela and Clark (2013)
DSPROTO+ (McCarthy et al., 2007)
DSPROTO (McCarthy et al., 2007)
PMI (McCarthy et al., 2007)
Frequency (McCarthy et al., 2007)
Human agreement

MC’07 VJ’05
0.508
0.514
0.507
0.507
0.527
0.518
0.552
0.550
0.461
n/a
n/a
0.420
n/a
0.454
n/a
0.398
n/a
0.274
0.141
n/a
0.716
0.702

Table 1: Compositionality detection task.

rank correlation scores6 between the averaged
human ratings and the learned compositionality
scores α(V O). We also produced the result by
employing an ensemble technique. More con-
cretely, we used the averaged compositionality
scores from the results of the BNC and Wikipedia
data for the ensemble result.

5.2 Results and Discussion
5.2.1 Result Overview
Table 1 shows our results and the state of the art.
Our method outperforms the previous state of the
art in all settings. The result denoted as Ensem-
ble is the one that employs the ensemble tech-
nique, and achieves the strongest correlation with
the human-annotated datasets. Even without the
ensemble technique, our method performs better
than all of the previous methods.

Kiela and Clark (2013) used window-based co-
occurrence vectors and improved their score us-
ing WordNet hypernyms. By contrast, our method
does not rely on such external resources, and only
needs parsed corpora. We should note that Kiela
and Clark (2013) reported that their score did not
improve when using parsed corpora. Our method
also outperforms DSPROTO+, which used a small
amount of the labeled data, while our method is
fully unsupervised.
5.2.2 Analysis of Compositionality Scores
Figure 2 shows how α(V O) changes for the seven
phrases during the training on the BNC data. As
shown in the ﬁgure, starting from 0.5, α(V O) for
each phrase converges to its corresponding value.
The differences in the trends indicate that our
method can adaptively learn compositionality lev-
els for the phrases. Table 2 shows the learned com-
positionality scores for the three groups of the ex-

6We used the Scipy 0.12.0 implementation in Python.

Phrase

Gold standard

(a) BNC (b) Wikipedia BNC-Wikipedia

Ensemble ((a)+(b))×0.5

(A)

buy car
own land
take toll
shed light
bear fruit
(B) make noise
have reason
smoke cigarette
catch eye

(C)

6
6
1.5
1
1
6
5
6
1

0.78
0.79
0.14
0.21
0.15
0.37
0.26
0.56
0.48

0.71
0.73
0.11
0.07
0.19
0.33
0.39
0.90
0.14

0.80
0.76
0.06
0.07
0.17
0.30
0.33
0.78
0.17

Table 2: Examples of the compositionality scores.

0.74
0.76
0.13
0.14
0.17
0.35
0.33
0.73
0.31

Highest average scores
approve
reject
discuss
visit
want
describe
involve
own
attend
reﬂect

0.83
0.72
0.71
0.70
0.70
0.70
0.69
0.68
0.68
0.67

Lowest average scores
bear
play
have
make
break
take
raise
reach
gain
draw

0.37
0.38
0.38
0.39
0.40
0.40
0.41
0.41
0.42
0.42

Table 3: The 10 highest and lowest average com-
positionality scores with the corresponding verbs
on the BNC data.

sponding verbs. We see that relatively low scores
are assigned to the light verbs as well as other
verbs which often form idiomatic phrases. As
shown in the group (B) in Table 2, however, light
verb phrases are not always non-compositional.
Despite this,
the learned function assigns low
scores to compositional phrases formed by the
light verbs.
that using
a more ﬂexible scoring function may further
strengthen our method.

These results suggest

Context dependence Both our method and the
two datasets, VJ’05 and MC’07, assume that the
compositionality score can be computed for each
phrase with no contextual information. However,
in general, the compositionality level of a phrase
depends on its contextual information. For ex-
ample, the meaning of the idiomatic phrase “bear
fruit” can be compositionaly interpreted as “to
yield fruit” for a plant or tree. We manually in-
spected the BNC data to check whether the phrase
“bear fruit” is used as the compositional mean-
ing or the idiomatic meaning (“to yield results”).
As a result, we have found that most of the usage
was its idiomatic meaning. In the model training,
our method is affected by the majority usage and
ﬁts the evaluation datasets where the phrase “bear

Figure 2: Trends of α(V O) during the training on
the BNC data.

amples along with the gold-standard scores given
by the annotators. The group (A) is considered
to be consistent with the gold-standard scores, the
group (B) is not, and the group (C) shows exam-
ples for which the difference between the compo-
sitionality scores of our results is large.

Characteristics of
light verbs The verbs
“take”, “make”, and “have” are known as light
verbs 7, and the scoring function tends to assign
low scores to light verbs.
In other words, our
method can recognize that the light verbs are
frequently used to form idiomatic (i.e.
non-
compositional) phrases. To verify the assumption,
we calculated the average compositionality score
for each verb by averaging the compositionality
scores paired with its candidate objects. Here we
used 135 verbs which take more than 30 types of
objects in the BNC data. Table 3 shows the 10
highest and lowest average scores with the corre-

7In Section 5.2.2 in Newton (2006), the term light verb is
used to refer to verbs which can be used in combination with
some other element where their contribution to the meaning
of the whole construction is reduced in some way.

fruit” is regarded as highly non-compositional. In-
corporating contextual information into the com-
positionality scoring function is a promising direc-
tion of future work.

5.2.3 Effects of Ensemble
We used the two different corpora for construct-
ing the training data, and our method achieves the
state-of-the-art results in all settings. To inspect
the results on VJ’05, we calculated the correlation
score between the outputs from our results of the
BNC and Wikipedia data. The correlation score is
0.674 and that is, the two different corpora lead to
reasonably consistent results, which indicates the
robustness of our method. However, the correla-
tion score is still much lower than perfect correla-
tion; in other words, there are disagreements be-
tween the outputs learned with the corpora. The
group (C) in Table 2 shows such two examples. In
these cases, the ensemble technique is helpful in
improving the results as shown in the examples.

Another interesting observation in our results is
that the result of the ensemble technique outper-
forms that of the BNC-Wikipedia data as shown in
Table 1. This shows that separately using the train-
ing corpora of different nature and then perform-
ing the ensemble technique can yield better re-
sults. By contrast, many of the previous studies on
embedding-based methods combine different cor-
pora into a single dataset, or use multiple corpora
just separately and compare them (Hashimoto and
Tsuruoka, 2015; Muraoka et al., 2014; Penning-
ton et al., 2014). It would be worth investigating
whether the results in the previous work can be
improved by ensemble techniques.

6 Evaluation on the Phrase Embeddings
6.1 Evaluation Settings
Dataset Next, we evaluated the learned embed-
dings on the transitive verb disambiguation dataset
GS’118 provided by Grefenstette and Sadrzadeh
(2011). GS’11 consists of 200 pairs of transitive
verbs and each verb pair takes the same subject
and object. For example, the transitive verb “run”
is known as a polysemous word and this task re-
quires one to identify the meanings of “run” and
“operate” as similar to each other when taking
“people” as their subject and “company” as their
object. In the same setting, however, the meanings

8http://www.cs.ox.ac.uk/activities/

compdistmeaning/GS2011data.txt

Method
Proposed method (Wikipedia)
Proposed method (BNC)
Proposed method (BNC-Wikipedia)
Proposed method (Ensemble A)
Proposed method (Ensemble B)
α(V O) = 1 (Wikipedia)
α(V O) = 1 (BNC)
Milajevs et al. (2014)
Polajnar et al. (2014)
Hashimoto et al. (2014)
Polajnar et al. (2015)
Grefenstette and Sadrzadeh (2011)
Human agreement

GS’11a GS’11b
0.598
0.461
0.463
0.595
0.483
0.623
0.511
0.661
0.524
0.680
0.576
n/a
n/a
0.574
0.456
n/a
0.370
n/a
0.340
0.420
n/a
0.330
0.210
n/a
0.750
0.620

Table 4: Transitive verb disambiguation task.

of “run” and “move” are not similar to each other.
Each pair has multiple human ratings indicating
how similar the phrases of the pair are.

Evaluation metric and ensembles The evalu-
ation was performed by calculating Spearman’s
rank correlation scores between the human rat-
ings and the cosine similarity scores of v(SV O)
in Eq. (12). Following the previous studies, we
used the gold-standard ratings in two ways: av-
eraging the human ratings for each SVO tuple
(GS’11a) and treating each human rating sepa-
rately (GS’11b). We used the same ensemble tech-
nique described in Section 5.1.
In this task we
produced two ensemble results: Ensemble A and
Ensemble B. The former used the averaged co-
sine similarity from the results of the BNC and
Wikipedia data, and the latter further incorporated
the result of the BNC-Wikipedia data.

6.2 Results and Discussion
6.2.1 Result Overview
Table 4 shows our results and the state of the art,
and our method outperforms all of the previous
methods in all settings. The scores in Hashimoto
and Tsuruoka (2015) have been the best to date
and are equivalent to those with α(V O) = 1 in
our method. We see that our method signiﬁcantly
improves the baseline scores by adaptively com-
bining compositional and non-compositional em-
beddings. Along with the results in Table 1, these
results show that our method allows us to improve
the composition function by jointly learning non-
compositional embeddings and the scoring func-
tion for compositionality detection. Again, the en-
semble technique further improves the results, and
overall, Ensemble B performs the best.

take toll

catch eye

bear fruit

Proposed method
put strain
place strain
cause strain
have affect
exacerbate injury
catch attention
grab attention
make impression
lift spirit
become favorite
accentuate effect
enhance beauty
enhance atmosphere
rejuvenate earth
enhance habitat

α(V O) = 1

deplete division
necessitate monitoring
deplete pool
create pollution
deplete ﬁeld
catch ear
catch heart
catch e-mail
catch imagination
catch attention
bear herb
bear grain
bear spore
bear variety
bear seed

Table 5: Examples of the closest neighbors in the
learned embedding space.

6.2.2 Analysis of the Learned Embeddings
We inspected the effects of adaptively weighting
the compositional and non-compositional embed-
dings. Table 5 shows the ﬁve closest neighbor
phrases in terms of the cosine similarity for the
three idiomatic phrases “take toll”, “catch eye”,
and “bear fruit”. The examples trained with the
Wikipedia data are shown for our method and the
baseline, i.e., α(V O) = 1. As shown in Table 2,
the compositionality levels of the three phrases are
low and their non-compositional embeddings are
dominantly used to represent their meaning.

One observation with α(V O) = 1 is that
head words (i.e. verbs) are emphasized in the
shown examples except “take toll”. As with other
embedding-based methods, the compositional em-
beddings are highly affected by their component
words. As a result, the phrases consisting of the
same verb and the similar objects are often listed
as the closest neighbors. By contrast, our method
ﬂexibly allows us to adaptively omit the infor-
mation about the component words. Therefore,
our method puts more weight on capturing the id-
iomatic aspects of the example phrases by adap-
tively using the non-compositional embeddings.

7 Related Work

Learning embeddings of words and phrases has
been widely studied in the ﬁeld of natural lan-
guage processing. The phrase embeddings have
proven effective in many language processing
tasks, such as machine translation (Cho et al.,
2014; Sutskever et al., 2014), sentiment analysis
and semantic textual similarity (Tai et al., 2015).

Most of the phrase embeddings are constructed
by word-level information via various kinds of
composition functions like long short-term mem-
ory (Hochreiter and Schmidhuber, 1997) recur-
rent neural networks. Such composition functions
should be powerful enough to efﬁciently encode
information about all the words into the phrase
embeddings. By simultaneously considering the
compositionality of the phrases, our method would
be helpful in saving the composition models from
having to be powerful enough to perfectly encode
the non-compositional phrases. As a ﬁrst step to-
wards this purpose, in this paper we have shown
the effectiveness of our method on the task of
learning verb phrase embeddings.

Many studies have focused on detecting the
compositionality of a variety of phrases (Lin,
1999), including the ones on verb phrases (Diab
and Bhutada, 2009; McCarthy et al., 2003) and
compound nouns (Farahmand et al., 2015; Reddy
et al., 2011; Yazdani et al., 2015).
Com-
pared to statistical feature-based methods (Mc-
Carthy et al., 2007; Venkatapathy and Joshi,
2005), recent methods use word and phrase em-
beddings (Kiela and Clark, 2013; Yazdani et
al., 2015). The embedding-based methods as-
sume that word embeddings are given in ad-
vance and as a post-processing step, and learn
or simply employ composition functions to com-
pute phrase embeddings.
In other words, there
is no distinction between compositional and non-
compositional phrases. Yazdani et al. (2015) fur-
ther proposed to incorporate latent annotations
(binary labels) for the compositionality of the
phrases. However, binary judgments cannot con-
sider numerical scores of the compositionality. By
contrast, our method adaptively weights the com-
positional and non-compositional embeddings us-
ing the compositionality scoring function.

8 Conclusion and Future Work

We have presented a method for adaptively learn-
ing compositional and non-compositional phrase
embeddings by jointly detecting compositionality
levels of phrases. Our method achieves the state
of the art on a compositionality detection task of
verb-object pairs, and also improves upon the pre-
vious state-of-the-art method on a transitive verb
disambiguation task. In future work, we will ap-
ply our method to other kinds of phrases and tasks.

Acknowledgments

This work was supported by CREST, JST.

References
[Bansal et al.2014] Mohit Bansal, Kevin Gimpel, and
Karen Livescu. 2014. Tailoring Continuous Word
In Pro-
Representations for Dependency Parsing.
ceedings of the 52nd Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 2: Short
Papers), pages 809–815.

[Cho et al.2014] Kyunghyun Cho, Bart van Merrien-
boer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi
Bougares, Holger Schwenk, and Yoshua Bengio.
2014. Learning Phrase Representations using RNN
Encoder–Decoder for Statistical Machine Transla-
In Proceedings of the 2014 Conference on
tion.
Empirical Methods in Natural Language Processing
(EMNLP), pages 1724–1734.

[Church and Hanks1990] Kenneth Church and Patrick
Hanks. 1990. Word Association Norms, Mutual
Information and Lexicography. Computational Lin-
guistics, 19(2):263–312.

[Diab and Bhutada2009] Mona Diab

Pravin
Bhutada. 2009. Verb Noun Construction MWE
In Proceedings of the Work-
Token Classiﬁcation.
shop on Multiword Expressions:
Identiﬁcation,
Interpretation, Disambiguation and Applications,
pages 17–22.

and

[Duchi et al.2011] John Duchi, Elad Hazan, and Yoram
Singer. 2011. Adaptive Subgradient Methods for
Online Learning and Stochastic Optimization. Jour-
nal of Machine Learning Research, 12:2121–2159.

[Farahmand et al.2015] Meghdad Farahmand, Aaron
Smith, and Joakim Nivre.
A Mul-
tiword Expression Data Set: Annotating Non-
Compositionality and Conventionalization for En-
glish Noun Compounds. In Proceedings of the 11th
Workshop on Multiword Expressions, pages 29–33.

2015.

[Grefenstette and Sadrzadeh2011] Edward Grefenstette
and Mehrnoosh Sadrzadeh. 2011. Experimental
Support for a Categorical Compositional Distribu-
In Proceedings of the
tional Model of Meaning.
2011 Conference on Empirical Methods in Natural
Language Processing, pages 1394–1404.

[Hashimoto and Tsuruoka2015] Kazuma Hashimoto
and Yoshimasa Tsuruoka.
2015. Learning Em-
beddings for Transitive Verb Disambiguation by
Implicit Tensor Factorization. In Proceedings of the
3rd Workshop on Continuous Vector Space Models
and their Compositionality, pages 1–11.

[Hashimoto et al.2014] Kazuma Hashimoto, Pontus
Stenetorp, Makoto Miwa, and Yoshimasa Tsuruoka.
2014. Jointly Learning Word Representations and
Composition Functions Using Predicate-Argument

Structures. In Proceedings of the 2014 Conference
on Empirical Methods in Natural Language Pro-
cessing (EMNLP), pages 1544–1555.

[Hochreiter and Schmidhuber1997] Sepp Hochreiter
and J¨urgen Schmidhuber. 1997. Long Short-Term
Memory. Neural Computation, 9(8):1735–1780.

[Kartsaklis et al.2012] Dimitri Kartsaklis, Mehrnoosh
Sadrzadeh, and Stephen Pulman. 2012. A Uni-
ﬁed Sentence Space for Categorical Distributional-
Compositional Semantics: Theory and Experiments.
In Proceedings of the 24th International Conference
on Computational Linguistics, pages 549–558.

[Kartsaklis et al.2014] Dimitri Kartsaklis, Nal Kalch-
brenner, and Mehrnoosh Sadrzadeh. 2014. Resolv-
ing Lexical Ambiguity in Tensor Regression Mod-
els of Meaning. In Proceedings of the 52nd Annual
Meeting of the Association for Computational Lin-
guistics (Volume 2: Short Papers), pages 212–217.

2013.

[Kiela and Clark2013] Douwe Kiela

and Stephen
Clark.
Detecting Compositionality of
Multi-Word Expressions using Nearest Neighbours
In Proceedings of the
in Vector Space Models.
2013 Conference on Empirical Methods in Natural
Language Processing, pages 1427–1432.

[Leech1992] Geoffrey Leech.

100 Million
Words of English: the British National Corpus. Lan-
guage Research, 28(1):1–13.

1992.

[Levy and Goldberg2014] Omer Levy and Yoav Gold-
berg. 2014. Dependency-Based Word Embeddings.
In Proceedings of the 52nd Annual Meeting of the
Association for Computational Linguistics (Volume
2: Short Papers), pages 302–308.

[Lin1999] Dekang Lin. 1999. Automatic Identiﬁcation
In Proceedings of
of Non-compositional Phrases.
the 37th Annual Meeting of the Association for Com-
putational Linguistics, pages 317–324.

[McCarthy et al.2003] Diana McCarthy, Bill Keller,
and John Carroll. 2003. Detecting a Continuum of
Compositionality in Phrasal Verbs. In Proceedings
of the ACL 2003 Workshop on Multiword Expres-
sions: Analysis, Acquisition and Treatment, pages
73–80.

[McCarthy et al.2007] Diana McCarthy,

Sriram
Venkatapathy, and Aravind Joshi. 2007. Detecting
Compositionality of Verb-Object Combinations
In Proceedings of
using Selectional Preferences.
the 2007 Joint Conference on Empirical Methods in
Natural Language Processing and Computational
Natural Language Learning, pages 369–379.

[Mikolov et al.2013] Tomas Mikolov, Ilya Sutskever,
Kai Chen, Greg S Corrado, and Jeff Dean. 2013.
Distributed Representations of Words and Phrases
In Advances in Neu-
and their Compositionality.
ral Information Processing Systems 26, pages 3111–
3119.

Compositionality in Compound Nouns. In Proceed-
ings of 5th International Joint Conference on Natu-
ral Language Processing, pages 210–218.

[Socher et al.2012] Richard Socher, Brody Huval,
Christopher D. Manning, and Andrew Y. Ng. 2012.
Semantic Compositionality
through Recursive
Matrix-Vector Spaces. In Proceedings of the 2012
Joint Conference on Empirical Methods in Natural
Language Processing and Computational Natural
Language Learning, pages 1201–1211.

[Sutskever et al.2014] Ilya Sutskever, Oriol Vinyals,
2014. Sequence to Sequence
and Quoc V Le.
In Advances in
Learning with Neural Networks.
Neural Information Processing Systems 27, pages
3104–3112.

[Tai et al.2015] Kai Sheng Tai, Richard Socher, and
Christopher D. Manning. 2015. Improved Semantic
Representations From Tree-Structured Long Short-
In Proceedings of the
Term Memory Networks.
53rd Annual Meeting of the Association for Compu-
tational Linguistics and the 7th International Joint
Conference on Natural Language Processing (Vol-
ume 1: Long Papers), pages 1556–1566.

[Van de Cruys2014] Tim Van de Cruys. 2014. A Neu-
ral Network Approach to Selectional Preference Ac-
quisition. In Proceedings of the 2014 Conference on
Empirical Methods in Natural Language Processing
(EMNLP), pages 26–35.

[Venkatapathy and Joshi2005] Sriram

Venkatapathy
and Aravind Joshi. 2005. Measuring the Relative
Compositionality of Verb-Noun (V-N) Collocations
by Integrating Features. In Proceedings of Human
Language Technology Conference and Confer-
ence on Empirical Methods in Natural Language
Processing, pages 899–906.

[Yazdani et al.2015] Majid Yazdani, Meghdad Farah-
Learn-
mand, and James Henderson.
to Detect Non-
ing Semantic Composition
compositionality
Expressions.
In Proceedings of the 2015 Conference on Empiri-
cal Methods in Natural Language Processing, pages
1733–1742.

of Multiword

2015.

[Milajevs et al.2014] Dmitrijs Milajevs, Dimitri Kart-
saklis, Mehrnoosh Sadrzadeh, and Matthew Purver.
2014. Evaluating Neural Word Representations in
Tensor-Based Compositional Settings. In Proceed-
ings of the 2014 Conference on Empirical Methods
in Natural Language Processing, pages 708–719.

[Mitchell and Lapata2008] Jeff Mitchell and Mirella
Lapata. 2008. Vector-based Models of Semantic
Composition. In Proceedings of 46th Annual Meet-
ing of the Association for Computational Linguis-
tics: Human Language Technologies, pages 236–
244.

[Miyao and Tsujii2008] Yusuke Miyao and Jun’ichi
Tsujii. 2008. Feature Forest Models for Proba-
bilistic HPSG Parsing. Computational Linguistics,
34(1):35–80, March.

[Muraoka et al.2014] Masayasu Muraoka, Sonse Shi-
maoka, Kazeto Yamamoto, Yotaro Watanabe,
Naoaki Okazaki, and Kentaro Inui. 2014. Find-
ing The Best Model Among Representative Com-
positional Models. In Proceedings of the 28th Pa-
ciﬁc Asia Conference on Language, Information,
and Computation, pages 65–74.

[Newton2006] Mark Newton.

2006. Basic English

Syntax with Exercises. B¨olcs´esz Konzorcium.

[Pennington et al.2014] Jeffrey Pennington, Richard
Socher, and Christopher Manning. 2014. Glove:
In Pro-
Global Vectors for Word Representation.
ceedings of the 2014 Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP),
pages 1532–1543.

[Pham et al.2015] Nghia

The

2015.

Pham,

Germ´an
and Marco
Kruszewski, Angeliki Lazaridou,
Jointly optimizing word repre-
Baroni.
tasks with
sentations for lexical and sentential
the
the C-PHRASE model.
53rd Annual Meeting of the Association for Com-
putational Linguistics and the 7th International
Joint Conference on Natural Language Processing
(Volume 1: Long Papers), pages 971–981.

In Proceedings of

[Polajnar et al.2014] Tamara Polajnar, Laura Rimell,
and Stephen Clark. 2014. Using Sentence Plau-
sibility to Learn the Semantics of Transitive Verbs.
In Proceedings of Workshop on Learning Semantics
at the 2014 Conference on Neural Information Pro-
cessing Systems.

[Polajnar et al.2015] Tamara Polajnar, Laura Rimell,
and Stephen Clark.
2015. An Exploration of
Discourse-Based Sentence Spaces for Composi-
In Proceedings of
tional Distributional Semantics.
the First Workshop on Linking Computational Mod-
els of Lexical, Sentential and Discourse-level Se-
mantics, pages 1–11.

[Reddy et al.2011] Siva Reddy, Diana McCarthy, and
Suresh Manandhar. 2011. An Empirical Study on

