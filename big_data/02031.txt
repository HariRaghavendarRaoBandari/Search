6
1
0
2

 
r
a

M
7

 

 
 
]

R
C
.
s
c
[
 
 

1
v
1
3
0
2
0

.

3
0
6
1
:
v
i
X
r
a

HOW TO MAKE RSA AND SOME OTHER ENCRYPTIONS

PROBABILISTIC

VITALI˘I ROMAN’KOV

Abstract. A new scheme of probabilistic subgroup-related encryption
is introduced. Some applications of this scheme based on the RSA,
Diﬃe-Hellman and ElGamal encryption algorithms are described. Se-
curity assumptions and main advantages of this scheme are discussed.
We outline that this scheme is potentially semantically secure under
reasonable cryptographic assumptions.

1. Some algorithmic problems for finite fields and modular

rings.

In [1], [2], we proposed a novel probabilistic public-key encryption, based
on the RSA cryptosystem.
Its security is based on intractability of the
membership and exponent problems for modular rings and usual security
assumptions for the RSA encryption (see exact deﬁnitions and explanations
below). Also these problems can be considered for ﬁnite ﬁelds. There are
many reasons to estimate these two problems as hard mathematical prob-
lems. We note in this connection that the well-known Quadratic residuosity
problem is a partial case of the membership problem.

1.1. The membership, order and exponent problems for ﬁnite ﬁelds
and modular rings. We consider multiplicative groups of ﬁnite ﬁelds and
modular rings, speciﬁed by a list of generators, or by some other eﬀective
way. The two most basic questions about such groups are membership in
and the order of the group. It is not known how to answer these questions
without solving hard number theoretic problems (factoring and discrete log).
Let n be a product of two diﬀerent primes p and q. Let Zn be the cor-
n consisting
responding modular ring. Let Qn be the subgroup of Gn = Z∗
of all quadratic residues. The following problem is one of the most known
decision problems in number theory and cryptography.

The Quadratic residuosity problem (QRP). Given an element f ∈

Gn, determine if f ∈ Qn.

We assume that this determination should be eﬀective. This problem
is considered by many authors as intractable. A number of cryptographic
schemes are based on this intractability, and the famous Goldwasser-Micali
cryptosystem is one of them.
It is important to note that the semantic
security property of the Goldwasser-Micali cryptosystem is based on the

1

2

VITALI˘I ROMAN’KOV

intractability of the QRP. The QRP is a particular case of the following
decision problem.

The Membership Problem (MPH ). Let G be a group, and H be a

subgroup of G. Given an element f ∈ G, determine if f ∈ H.

It seems that the following problem was previously considered only for

matrix groups.

The order problem (OP). Given an element g (subgroup H) of a group

G, determine order |g| (|H|).

Lemma 1. Let p and q be two diﬀerent odd primes such that p, q ≡
n implies solvability

3(mod 4), and n = pq. Then solvability of OP for Gn = Z∗
of QRP for Gn.

Proof. Let p = 4k + 3 and q = 4l + 3. Then |Gn| = (p − 1)(q − 1) =
4(2k + 1)(2l + 1). As index of Qn in Gn is 4, then Qn has odd order
m = (2k + 1)(2l + 1). An element g lies in Qn if and only if |g| is odd. Hence,
if we can determine |g| for each g ∈ Gn, we can solve QRP for Gn.

Let Fq, q = pr, be the ﬁnite ﬁeld of order q and characteristic p. If the pri-
mality decomposition of q − 1 is known then there is a polynomial algorithm
solving OP for elements of F∗

q (see [3]).

The exponent problem (EP). Given a subgroup H of a group G,
determine exponent e(H), i.e., the minimal positive integer e such that
he = 1 for every element h ∈ H.

Obviously, the solvability EP implies solvability OP, and by Lemma 1

solvability QRP in the case p, q ≡ 3(mod 4).

1.2. Constructing ﬁnite ﬁelds and modular rings that contain sub-
groups of prescribed exponent. Let r be a positive integer, and one
party, say Bob, wants to construct a ﬁeld F of a suﬃciently large size that
contains an element g ∈ F∗ such that |g| = r. Then he seeks to ﬁnd a prime
p in the form p = 1 + 2rx where x is taken randomly. He checks the pri-
mality of p with some of the known primality tests. When it turns out p
p such that |g| = r. It can be found by
is prime, there is an element g ∈ F∗
ordinary eﬀective procedure (see [3]). As r divides pk − 1 for any k, he can
take ﬁeld Fq for q = pk for suitable k, and to ﬁnd element g ∈ F∗
q such that
|g| = r. If he wants to get a couple g1, ..., gt of elements such that |gi| = ri,
for prescribed positive integers ri (i = 1, ..., t) he seeks to ﬁnd a prime p in
the form p = 1 + 2rx, where r = Qt
i=1 ri, and x is taken randomly. Then he
gets desired elements g1, ..., gt of a ﬁeld Fq, q = pk for a suitable k as above.
Let e be a positive integer, and Bob wants to construct a ﬁeld F of a suf-
ﬁciently large size such that the multiplicative group F∗ contains subgroup
H of exponent e. Then he generates a couple of positive integers r1, ..., rt
such that lcm(r1, ..., rk) = e, then constructs a ﬁeld Fq, q = pk, for a suitable
k, and ﬁnds elements g1, ..., gt ∈ F∗
q such that |gi| = ri for i = 1, ..., t, as
explained above, and then succeeds in determining H = gp(g1, ..., gt).

Let r be a positive integer, and Bob wants to construct a modular ring
Zn of a suﬃciently large size n = pq, where p and q are two diﬀerent odd

HOW TO MAKE RSA AND SOME OTHER ENCRYPTIONS PROBABILISTIC

3

n such that |g| = r. Then he
prime numbers, that contains an element g ∈ Z∗
seeks to ﬁnd primes p and q in the forms p = 1+ 2r1x and q = 1+ r2y, where
r1 and r2 are positive integers such that r = lcm(r1, r2), and x, y are taken
randomly. He checks the primality of p and q with some known primality
test. Then he ﬁnds elements g1 ∈ F∗
q such that |g1| = r1 and
|g2| = r2, as above. By the Chinese Remainder Theorem, he gets a solution
g of the set of equations g = g1(mod p), z = g2(modq). It follows that |g| = r.
Hence Bob can construct a couple g1, ..., gt of elements such that |gi| = ri,
for prescribed positive integers ri (i = 1, ..., t), and to construct a modular
ring Zn, n = pq, where p and q are diﬀerent odd primes, that contains a
subgroup H ≤ Z∗

n of prescribed exponent e(H) = e.

p and g2 ∈ F∗

When Bob publics the ﬁeld Fq, q = pk, or modular ring Zn, n = pq, and
the subgroup H = gp(g1, ..., gt), constructed as above, he doesn’t public the
primality decompositions of p − 1 in the ﬁeld case, and keeps secret the
factors of n in the modular ring case. In both cases the exponent e = e(H)
is private.

Oscar, an opponent, who wants to crack, modify, substitute, or replay
messages, cannot compute e without solving hard number theoretic primal-
ity factoring problem with respect to p − 1 in the ﬁeld case. In the modular
ring case, he needs not only in knowing of the factors of n, but also he needs
in primality factorings of p − 1 and q − 1. Hence, in both the cases, the
exponent problem with respect to H can be considered as intractable.

2. Basic scheme of probabilistic subgroup-related encryption

founded on the intractability of EP.

Suppose two parties, say Alice and Bob, want to establish a secure trans-
port connection through a non-secure channel. They agree to use the mul-
tiplicative group K ∗ as a platform, where K is a ﬁnite ﬁeld Fq, q = pk, or
a modular ring Zn, n = pq, where p and q are diﬀerent suﬃciently large
primes. Also they agree that Bob will choose all parameters and then he
will send all public parameters to Alice. The encryption by Alice, and the
decryption by Bob will be done as follows .

Field version.

(1) Bob creates a probabilistic cryptographic system. Namely, he chooses
a ﬁeld Fq, q = pk and two subgroups H and U of F∗
q of coprime
orders r and s respectively. Elements of U encode all possible mes-
sages, and elements of H play role of masks. Also Bob computes
t = r−1(mod s).

(2) Bob sends the public parameters, namely: p, k, H, U , to Alice. The
subgroups H and U are speciﬁed by their generating elements, or by
some other eﬀective method that does not reveal the secret param-
eters r and s.

(3) To transport a message u ∈ U, Alice chooses h ∈ H randomly, then

she sends g = hu to Bob through non-secure channel.

4

VITALI˘I ROMAN’KOV

(4) Bob receives g. Then he succeeds to reveal the message u as follows:

Remark 1.

grt = (hr)t(urt) = u.

• In particular, the subgroups H and U can be chosen such that F∗

q =
q can be uniquely written in the form

HU. Then every element g ∈ F∗
g = hu, where h ∈ H and u ∈ U.

• The orders |H| and |U | have to be suﬃciently large. The presen-
tations of H and U should be chosen in a way that doesn’t give a
possibility to ﬁnd the decomposition n = pq.

Modular ring version.

(1) Bob creates a probabilistic cryptographic system. Namely, he chooses
a modular ring Zn, n = pq, p and q diﬀerent primes, and two sub-
n of coprime orders r and s respectively.
groups H and U of Gn = Z∗
Elements of U encode all possible messages, and elements of H play
role of masks. Also Bob computes t = r−1(mod s).

(2) Bob sends the public parameters, namely: n, H, U , to Alice. The
subgroups H and U are speciﬁed by their generating elements, or by
some other eﬀective method that does not reveal the secret param-
eters r and s.

(3) To transport a message u ∈ U, Alice chooses h ∈ H randomly, then

she sends g = hu to Bob through non-secure channel.

(4) Bob receives g. Then he succeeds to reveal the message as follows.

Remark 2.

grt = (hr)t(urt) = u.

• In particular, the subgroups H and U can be chosen such that F∗

q =
q can be uniquely written in the form

HU. Then every element g ∈ F∗
g = hu, where h ∈ H and u ∈ U.

• The orders |H| and |U | have to be suﬃciently large. The presen-
tations of H and U should be chosen in a way that doesn’t give a
possibility to ﬁnd the decomposition n = pq.

3. Some applications.

3.1. Probabilistic encryption based on RSA encryption. The follow-
ing encrypting has been proposed in [1] and [2]. The described above basic
scheme is combined with the standard RSA algorithm.

Let p and q be two diﬀerent odd primes. Bob chooses subgroups H and
U of the multiplicative group Gn = Z∗
n of the modular ring Zn such that
their respective orders t and r are coprime. He presents these subgroups by
their generating elements as: U = gp(u1, ..., um) and H = gp(h1, ..., hs), or
in a diﬀerent eﬀective way. We suppose that U is the message space, i.e.,
each message u is presented as an element of U , and vice versa. Now we ﬁx
public and secret data that are established oﬀ-line as follows.

HOW TO MAKE RSA AND SOME OTHER ENCRYPTIONS PROBABILISTIC

5

Public data: n (and therefore Zn and Gn = Z∗

n), u1, ..., um (and therefore

U ), h1, ..., hs (and therefore H).

Secret data: p, q, ϕ(n) = (p − 1)(q − 1), r, t.
Alice chooses public key e ∈ Z such that gcd(e, r) = 1. Then she computes
the secret key d = td1 such that (te)d1 = 1(mod r). This is possible because
gcd(t, r) = gcd(e, r) = 1 by our assumption. Then ted = 1 + rk for some
integer k. Thus, Bob has the following keys:

Public key: e.
Secret key: d.
To send a message u ∈ U to Bob, the other party, Alice, chooses a random

element h ∈ H (secret session key) and acts as follows:

Encryption: u → c = (hu)e(mod n).
Bob recovers u as follows:
Decryption: c → u = cd(modn).
Correctness: cd = (ht)ed1 u(ur)k = u(mod n).
Security assumption. If the adversary can to ﬁnd the factors p and q of n
he can not reveal message u without knowing of primality factorings of p − 1
and q − 1. Hence, a security of the algorithm is based on intractability of
the full primality decomposition problem for positive integers. A priori, the
primality decomposition problem is harder than the decomposition problem
for positive integers of the form n = pq.

3.2. Probabilistic encryption based on the ElGamal key exchange
protocol. The ElGamal algorithm [4] is an asymmetric encryption algo-
rithm for public key cryptography, based on hardness of the Discrete loga-
rithm problem. ElGamal is semantically secure under reasonable assump-
tions, and is probabilistic [5]. The original ElGamal encryption scheme
[4] operates as follows. First, Bob ﬁxes a large prime p, a generating ele-
ment g of the multiplicative group F∗
p, and a positive integer a in the range
1 < a < p. Bob’s private key is taken to be a, while his public key is the
tuple (g, y = ga, p). Alice performs encryption by segmenting the plaintext
and encoding it as a sequence of integers in the range 0 < u < p. Alice
chooses a temporary secret in the form of an auxiliary random integer r
and encrypts a plaintext as c = u · yr = u · gar. Along with this encrypted
message c, Alice includes the header gr.

Bob performs decryption by ﬁrst manipulating the header (gr)a = gar. It
follows that the original message can be recovered by noting that c·(gar )−1 =
u.

The ElGamal cipher leverages the purported diﬃculty of computing the

discrete logarithm.

We propose a new version of the ElGamal encryption that does not use
header. As the original, our version is probabilistic, but uses a very diﬀerent
idea. This encryption scheme operates as follows. First, Bob chooses two
positive coprime integers r and s. Then he ﬁxes a large prime p such that
p − 1 divides to rs, i.e., p − 1 = rsk for some k. He sets a = sk and b = rk.

6

VITALI˘I ROMAN’KOV

Bob’s private key is taken to be the tuple (r, s, a) while his public key is the
tuple (g, y = ga, gb, p).

He announces that the message space is subgroup gp(gb) which order is

s. Then he computes t = r−1(mod s).

Alice chooses a temporary secret in the form of an auxiliary random

integer l and encrypts a plaintext u = (gb)x = gbx as c = u · yl = u · gal.

Bob performs decryption by ﬁrst manipulating cr = ur · (gal)r = ur ·
(grsk)l = ur · (gp−1)l = ur. It follows that the original message can be
recovered by noting that (ur)t = u.

Let u1, u2 ∈ gp(gb) be two diﬀerent messages, and ci = ui · gal (i ∈ {0, 1}
be the cipher text of one of them. The Oscar, opponent, has to guess about
correct value of i. Suppose that he can give correct answer with probability
signiﬁcantly greater than 1/2. As u−1
· ci lies in gp(ga) if and only if i = j,
Oscar can to solve the membership problem for gp(ga) with probability
signiﬁcantly greater than 1/2. Assuming the latter problem is hard when we
take elements from gp(ga)·gp(gb), we conclude that this version of ElGamal
encryption is semantically secure. Note that we can take a and b such that
gp(ga)·gp(gb) = F∗
p.

j

3.3. Probabilistic encryption based on the Diﬃe-Hellman key ex-
change protocol. The Diﬃe-Hellman algorithm [6] is an asymmetric en-
cryption algorithm for public key cryptography, based on hardness of the
Discrete logarithm problem. The original Diﬃe-Hellman encryption scheme
[6] operates as follows. First, Alice and Bob agree upon a large prime p,
number q = pt and a generating element g of the multiplicative group F∗
q.
Bob’s private key is taken to be a number b while his public key is gb. Alice’s
private key is a number a and her public key is ga. The secret key they ex-
change is then gab. Both users can compute this key. An unauthorized third
party will be unable to determine the key if it is computationally infeasible
to compute gab knowing only ga and gb.

We propose a new version of the Diﬃe-Hellman encryption that is prob-
abilistic. This encryption scheme operates as follows. First, Bob chooses
a private positive integer r, and Alice chooses a private positive integer s.
Then Bob takes randomly number x and publics r1 = rx. Alice takes ran-
domly y and publics s1 = sy. Then they agree upon prime of the form
p = 1 + 2r1s1z. They use ﬁeld Fp as platform and agree upon some ﬁxed
p; however, this
public element g ∈ F∗
p of exponent r and
is not absolutely necessary. Bob ﬁnds a subgroup H of F∗
publics its generators; Alice ﬁnds a subgroup U of exponent s and publics
its generators.

p. Ideally, g should be a generator of F∗

To exchange secret key Bob chooses randomly private number b, element
u ∈ U, and Alice chooses randomly private number a and element h ∈ H.
Bob sends ugbr to Alice, Alice sends hgas to Bob.

Bob computes (hgas)rb = gabrs. Alice computes (ugbr)sa = gabrs, that is

the exchanged secret key.

HOW TO MAKE RSA AND SOME OTHER ENCRYPTIONS PROBABILISTIC

7

References

[1] Roman’kov V. A semantically secure public-key cryptosystem based on RSA // Prikl.

Discr. Mat. — 2015. — No. 3. P. 32-40 (In Russian).

[2] Roman’kov V. New probabilistic public-key cryptosystem based on the RSA cryp-
tosystem // Groups, Complexity, Cryptology. — 2015. — V. 7. No. 2. — P. 153-156.
[3] Menezes A.J., Oorschot P.C. van, Vanstone S.A. Handbook of Applied Cryptography.

CRC Press. Taylor & Francis Group. Boca Raton, 1996.

[4] ElGamal T. A public-key cryptosystem and a signature scheme based on discrete

logarithms // IEEE Trans. Inform. Theory. — 1985. — V. 31. No. 4. P. 469-472.

[5] Goldwasser S., Micali S. Probabilistic encryption // J. of Computer and System

Sciences. — 28 (1984). — V. 28. — P. 270–299.

[6] Diﬃe W., Hellman M. E. New directions in cryptography // IEEE Trans. Inform.

Theory. — 1976. — V. 22. No 6. — P. 644–654.

Omsk State University n.a. F.M. Dostoevskii
E-mail address: romankov48@mail.ru

