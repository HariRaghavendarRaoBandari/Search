Geometric Hypergraph Learning for Visual Tracking

Dawei Du, Honggang Qi, Longyin Wen, Qi Tian, Qingming Huang, and Siwei Lyu

1

6
1
0
2

 
r
a

 

M
8
1

 
 
]

V
C
.
s
c
[
 
 

1
v
0
3
9
5
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—Graph based representation is widely used in visual
tracking ﬁeld by ﬁnding correct correspondences between target
parts in consecutive frames. However, most graph based trackers
consider pairwise geometric relations between local parts. They
do not make full use of the target’s intrinsic structure, thereby
making the representation easily disturbed by errors in pairwise
afﬁnities when large deformation and occlusion occur. In this
paper, we propose a geometric hypergraph learning based track-
ing method, which fully exploits high-order geometric relations
among multiple correspondences of parts in consecutive frames.
Then visual tracking is formulated as the mode-seeking problem
on the hypergraph in which vertices represent correspondence
hypotheses and hyperedges describe high-order geometric rela-
tions. Besides, a conﬁdence-aware sampling method is developed
to select representative vertices and hyperedges to construct
the geometric hypergraph for more robustness and scalability.
The experiments are carried out on two challenging datasets
(VOT2014 and Deform-SOT) to demonstrate that the proposed
method performs favorable against other existing trackers.

Index Terms—visual tracking, geometric hypergraph learn-
ing, correspondence hypotheses, deformation, occlusion, mode-
seeking, conﬁdence-aware sampling

I. INTRODUCTION

Visual

tracking has attracted much research interest

in
computer vision ﬁeld, because it is a critical step of various
applications, including video surveillance, sport analysis, auto-
drive car, etc. Despite having achieved promising progress over
the past decade, it still remains very challenging for designing
a robust tracker that can handle appearance changes caused
by various critical situations, such as large deformation, illu-
mination variation, partial and full occlusion, and background
clutter. In particular, the deformation and occlusion are the two
most notable challenges that degrade tracking performances.
For tracking scenarios where the target appearance is rela-
tively stable, methods based on global appearance models can
achieve satisfactory performances [20], [15], [33], [45], [9],
[17]. However, if large deformation and occlusion happen,
such approaches usually fail to track the target robustly. To
counter this problem, many approaches based on models of
local parts have received more attention [34], [30], [19], [32],
[44]. Moreover, several different methods to represent the tar-
get geometric structure have been proposed, such as structural
Support Vector Machine (SVM) [42], Markov Random Field
(MRF) [31], [18], keypoint constellation [29], [28], and graph
model [35], [6]. However, most approaches consider pairwise

Dawei Du, Honggang Qi, and Qingming Huang are with the School
of Computer and Control Engineering, University of Chinese Academy of
Sciences, Beijing, China. E-mail:cvdaviddo@gmail.com

Qi Tian is with the Department of Computer Science, the University of

Texas at San Antonio (UTSA), USA.

Longyin Wen and Siwei Lyu are with the Computer Science Department,
University at Albany, SUNY, Albany NY, USA. Siwei Lyu is also with School
of Computer and Information, Tianjin Normal University, Tianjin, China.

Fig. 1: In the top, between the target part set P and the candidate part set
Q, the correspondence hypotheses are generated and constrained by the high-
order relations among them. In the bottom, the geometric hypergraph G is
constructed based on P and Q. Then the mode is extracted by searching G.
For clarity, just a few vertices and hyperedges are shown.

relations between target parts are easily disturbed by errors in
pairwise afﬁnities, rendering difﬁculties to well preserve the
geometric structure underlying the target representation.

In this paper, we present a novel Geometric hyperGraph
Tracker (GGT) to handle the visual tracking task, especially
for the deformable ones. Different from the previous works
considering pairwise geometric relations between local parts,
our method exploits high-order relations among more than two
correspondences based on the geometric hypergraph. Specif-
ically, the geometric hypergraph is constructed and learned
based on the target part set and the candidate part set1. Then
we generate possible correspondences between parts in the
two sets, which are deﬁned as correspondence hypotheses.
In Fig. 1, we give a schematic diagram of constructing the
hypergraph G(V, Ψ), where vertices V encode correspondence
hypotheses, and hyperedges Ψ encode high-order geometric
relations among several correspondence hypotheses. Thus the
geometric structure of the target can be effectively character-
ized by the hypergraph, rendering more discriminative power
to extract the common appearance and geometric property
of correspondences from noises. Moreover, correspondence
hypotheses can form a set of modes where a large number
of hyperedges are involved with high conﬁdence; while other

1The candidate part set Q consists of candidate parts extracted from the
searching area in the current frame t. We employ the target part set P as the
part representation of the target, which is consisted by the target parts up to
the previous frame t − 1.

false correspondences have very few hyperedges with low
conﬁdence. For easier reading, we ﬁrst deﬁne the structural
correspondence mode as:
Deﬁnition 1. The structural correspondence mode is a group
of reliable correspondences between target parts with similar
appearance and consistent geometric structure that are inter-
connected with the local maximum of overall conﬁdences on
the geometric hypergraph.

The present work makes the following contributions:
• The geometric hypergraph is used to represent the tar-
get, which fully exploits high-order geometric relations
among correspondence hypotheses in consecutive frames.
• The conﬁdence-aware sampling method is proposed to
approximate the geometric hypergraph, which not only
alleviates sensitivity to noises, but also is scalable to
the large scale hypergraph. Thus we seek structural
correspondence modes on the hypergraph by the pairwise
coordinate update method in [24] efﬁciently.

• Our method is compared to existing methods on the
VOT2014 dataset and Deform-SOT dataset. The exper-
imental results demonstrate the effectiveness and robust-
ness of the proposed model.

The rest of the paper is organized as follows. In Section
II, we review relevant previous works. The methodology is
described in Section III and the model optimization is pre-
sented in Section IV. In Section VI, we evaluate the proposed
algorithm on two tracking datasets compared to other existing
methods. Then we conclude the paper with discussions on
future works in Section VII.

II. RELATED WORKS

Tracking methods based on modeling relations between
target parts have been shown to be less susceptible to the
problem posed by object deformation and occlusion. Recently,
many works have focused on how to incorporate geometric
information as an important clue to facilitate visual tracking.
Keypoint Based Tracking Methods. The keypoint based
trackers use the displacements of target parts to vote for the
target center in consecutive frames to consider the geometric
structure. Hare et al. [16] combine the feature matching,
learning, and object pose estimation into a coherent structured
output learning framework, resulting in learning for real-time
keypoint-based object detection and tracking. Yang et al. [41]
propose a visual tracking algorithm by incorporating the SIFT
features from the interest points to represent appearance and
exploiting their geometric structures, where a structured visual
dictionary is learned to enhance its discriminative strength
between the foreground object and the background. Yi et
al. [43] propose a tracking method using “motion saliency”
and “descriptor saliency” of local features and performs track-
ing based on generalized Hough transform. The tracking result
is obtained by combining the results of each local feature
of the target and the surroundings with generalized Hough
transform voting. Guo et al. [14] formulate the task of tracking
and recognition as a maximum posteriori estimation problem
under the manifold representation learnt from collections of
local features with preserving local appearance similarity and

2

spatial structure. Nebehay and Pﬂugfelder [29] develop a
keypoint-based tracking method in a combined matching-
and-tracking framework, where each keypoint casts votes for
the object center. Moreover, an improved algorithm in [28]
employs geometric dissimilarity measure to separate inlier
correspondences from outliers by considering both static and
adaptive correspondences. In [4], keypoints are considered as
elementary predictors localizing the target in a collaborative
search strategy, where the persistence, the spatial consistency,
and the predictive power of a local feature are used to to
measure the most reliable features for tracking. However,
keypoint based trackers focus on modeling the displacements
between parts and the corresponding target center, which are
insufﬁcient to exploit relations between local parts fully for
geometric structure representation.
Part Based Tracking Methods. To better solve the shape
deformation and partial occlusion issue, part based methods
are gaining popularity in visual tracking. Wen et al. [36]
present a discriminative learning method to infer the po-
sition, shape and size of each part, using the Metropolis-
Hastings algorithm integrated with an online SVM. Wang and
Nevatia [35] propose to track non-rigid objects with multiple
related parts and model tracking as Dynamic Bayesian Net-
work, where the spatial relations among parts are formulated
probabilistically. Improved from [15], Yao et al. [42] introduce
a part-based tracking algorithm with online latent structured
learning, and use a global object box and a small number
of part boxes to approximate the irregular object, to reduce
the amount of visual drift. Cehovin et al. [7] employ a global
representation to probabilistically models target’s global visual
properties. Meanwhile, the low-level patches are constrained
and updated with the global model during tracking. A dynamic
structure graph based tracker is used in [6] to formulate the
tracking problem as subgraph matching between the geometric
structure graph of the target and that of the candidate target
proposals graph. Nam et al. [27] use a new graphical model
to adapt sequence structure and propagate the posterior over
time, where each vertex has a single outgoing edge but may
has multiple incoming edges. Hong et al. [18] propose a
MRF-based tracker to consider geometric structure by the
hierarchical appearance representation, which exploits shared
information across multi-level quantization of an image space,
i.e., pixels, superpixels and bounding boxes. In [25], a real-
time tracking method is proposed based on parts with multiple
correlation ﬁlters, in which the Bayesian inference framework
and a structural constraint mask are adopted to handle various
appearance changes. However, the existing part based meth-
ods give less consideration to exploit high-order geometric
relations among target parts for more robustness.
Segmentation Based Tracking Methods. The segmentation
based methods consider the geometric information by ﬁnding
out the precise location of each pixel in the target. Based on
the generalized Hough-transform, Godec et al. [13] develop
an improved online Hough Forests and couple the voting
based detection and back-projection with a rough segmentation
based on GrabCut. Duffner and Garcia present a pixel-based
non-rigid object tracking method in [11], which consists of
a generalized Hough transform with pixel-based descriptors

based detector and a probabilistic segmentation method based
on a global model for foreground and background. Recently,
Wen et al. [38] develop a joint online tracking and segmen-
tation algorithm, which integrates the multi-part tracking and
segmentation into a uniﬁed energy optimization framework.

III. METHODOLOGY

We ﬁrst introduce terms and notations to be used in the
sequel. We denote the order of hypergraph as k. The hy-
pergraph is a generalization of a graph in which an edge
(hyperedge, strictly speaking) can connect more than k(k ≥ 3)
vertices, while a graph has its edges connecting 2 vertices. The
unconnected graph is a graph without edges between vertices.
Although our method is related with three previous works
including SPT [34], DGT [6] and TCP [22], there are sig-
niﬁcant differences between our method and them, which are
concluded below.

• Though both our method and SPT use superpixel repre-
sentation, our method uses a more effective representation
of the geometric information of target parts, which leads
to improved performance on more complex scenes. When
the hypergraph degenerates into an unconnected graph
(k = 1), SPT can be regarded as a special case of the
proposed algorithm.

• DGT uses a graph to exploit pairwise geometric relations
between neighboring parts. On the contrary, our method
employs a hypergraph that considers high-order geomet-
ric relations among correspondence hypotheses to exploit
abrupt deformation, motion change and target context
better. When the hypergraph reduces to a normal graph
(k = 2), DGT can be regarded as a special case of the
proposed algorithm.

• TCP mainly exploits temporal high-order relations among
different parts in consecutive frames, ignoring the geo-
metric structure information of local parts spatially. In
contrast, our method focuses on modeling the spatial
high-order relations among correspondence hypotheses.
Besides, the temporal relations of parts are also consid-
ered when updating the hypergraph.

In this work, the tracking problem is formulated as the
mode-seeking problem on the geometric hypergraph. In Sec-
tion III-A, we construct the hypergraph based on the target
part set and candidate part set. Then we give the detailed for-
mulation in Section III-B and deﬁne corresponding conﬁdence
measure in Section III-C.

3

(cid:40)V = {νi}N

coarse labeling of superpixels in the rest frames2. Based on P
and Q, we construct the vertex set V and hyperedge set Ψ of
the geometric hypergraph G as

i=1 = {p ∼ q|∀p ∈ P, q ∈ Q : dE(p, q) ≤ τd}

Ψ = {ψ|∀νi, νj ∈ ψ : νi ∩ νj = ∅}

(1)
where N is the number of vertices. νi and νj are the i-th and
j-th vertex in hyperedge ψ = {ν1,··· , νk} without conﬂicts
or duplicates. k is the order of hypergraph. dE(p, q) is the Eu-
clidean distance between the centers of parts p and q in image

plane. The distance threshold is set as τd = 3(cid:112)W · H/ρ,

where ρ is the number of superpixels in the searching area
with width W and height H in the current frame, as shown
in Fig. 2.

B. Formulation

As analyzed in the introduction, multiple correspondences
with similar structural geometric properties form a set of
structural correspondence modes. By measuring the overall
conﬁdence of modes, the tracking problem is formulated as

Ω(cid:0)D(cid:1),

D∗ = argmax
s.t. D ⊂ G,|D| = κ,

D

(2)
where D is the structural correspondence mode including κ
number of vertices. Ω(D) is the conﬁdence measure function
reﬂecting the conﬁdence distribution in the mode D, which is
described as follows.

C. Conﬁdence Measure

We design two terms to encode both the association con-
ﬁdence Γ of vertices and the geometric conﬁdence Ξ among
them, i.e.,

Ω(cid:0)D(cid:1) = ω1 · (cid:88)
(cid:124)
(cid:123)(cid:122)

ν∈N (D)

Γ(ν)

(cid:125)

+ω2 · (cid:88)
(cid:124)
(cid:123)(cid:122)

ψ∈E(D)

Ξ(ψ)

,

(3)

(cid:125)

Association Conﬁdence

Geometric Conﬁdence

where N (D) and E(D) denote the vertex set and the hyper-
edge set of mode D, respectively. ω1 and ω2 are the balancing
factors of the two terms.
Association Conﬁdence. The association conﬁdence Γ(ν)
encodes the probability of two parts in vertex ν ∈ N (D)
belonging to the same class, which is deﬁned as

Γ(ν) = exp(cid:2) − 1

dχ(p, q)(cid:3),

σ2
ν

(4)

A. Geometric Hypergraph

The superpixel representation is more ﬂexible for the de-
formable target compared to the holistic representation, how-
ever has low discriminative power because of small size.
Therefore we construct a geometric hypergraph to alleviate
the problem with geometric constraints. Given the annotated
bounding box in the ﬁrst frame, the target part set P is ﬁrst
initialized, and the candidate part set Q is determined by the

where dχ(p, q) is the χ2 distance between the appearance
feature of the two parts, i.e., ν = {p, q}, p ∈ P and q ∈ Q. In
the experiment, the appearance feature is concatenated by HSV
color feature and LBP texture. σν is the scaling parameter to
measure the importance of appearance similarity.

2Similar as [6], we ﬁrst use the SLIC algorithm [1] to over-segment the
searching area of the target into multiple parts (superpixels), and employ the
Graph Cut method [5] to coarsely separate the foreground parts from the
background, as shown in the top-left of Fig. 2(a).

4

Fig. 2: Tracking process on the waterski sequence. (a) Given the candidate part set Q, we aim to ﬁnd their reliable correspondence with the target part set
P . This is done by seeking structural correspondence modes with tolerance of deformation and scale change. For example, the green arrows in the ﬁgure
indicate the displacement between parts in P and Q. Then reliable target parts can be determined (e.g., part 8, 9, 10), and the geometric hypergraph is
updated incrementally. (b) The conﬁdence map is constructed based on the reliable target part set, and the tracking result is output by uniform sampling on
the conﬁdence map.

Geometric Conﬁdence. The geometric conﬁdence Ξ(ψ) de-
scribes the geometric relation among correspondence hypothe-
ses in hyperedge ψ. If the order of graph k ≥ 3, it is a
hypergraph describing high-order geometric relations among
correspondence hypotheses. When reducing the order of graph,
it degenerates into a graph to consider pairwise geometric
relations, and an unconnected graph ignoring geometric re-
lations. Therefore, for different order of hypergraph case, we
have different calculation of geometric conﬁdence, which is
discussed as follows.
1) Unconnected Graph: If k = 1, the hypergraph becomes
an unconnected graph, i.e., Ξ(ψ) = ∅. Thus visual tracking
only depends on the association conﬁdence Γ(ν) without any
geometric structural constraints. Similar to SPT [34], it is
actually a part-based template matching method. The appear-
ance information encoded in Γ(ν) is usually weak especially
for small superpixels, resulting in worse performance in the
scenarios with complex appearance variation.

2) Graph: If k = 2, the geometric information encoded in
Ξ(ψ) provides complementary pairwise geometric information
of edge ψ = {ν1, ν2} besides appearance than SPT [34] does.
Thus DGT [6] falls into this category. The pairwise similarity
to compare two correspondence hypotheses is calculated as

||(cid:126)L(p1, p2) − (cid:126)L(q1, q2)||2

(5)

Ξ(ψ) = exp(cid:2) − 1

σ2
ψ

(cid:3),

as shown in Fig. 3(b), we exploit the angle information of
triplets of correspondence hypotheses to achieve scale invari-
ance, leading to more correct associations between target parts.
For example, three correspondence hypotheses form two trian-
gles ((cid:52)1,2,3 and (cid:52)1(cid:48),2(cid:48),3(cid:48)). Although the target scale changes
drastically, the angles (high-order geometric relations) remain
more stable compared to the relative displacement between
parts (pairwise geometric relations). For better understanding,
a real example of structural correspondence in waterski is
shown in Fig. 1(b). Similar to [21], the geometric conﬁdence
is calculated by comparing corresponding angles, as

Ξ(ψ) = exp(cid:2) − 1

3(cid:88)

i=1

σ2
ψ

)|(cid:3),

| sin(θP

νi

) − sin(θQ

νi

(6)

where θP
in the set P and Q, respectively.

νi and θQ

νi denote angles of parts related to vertex νi

IV. OPTIMIZATION

Given the geometric hypergraph G, the mode-seeking prob-
lem is solved by searching G (Section IV-A). Before that, We
propose the conﬁdence-aware sampling technique to improve
the effectiveness of the proposed method (Section IV-B).

where p1 and p2 denote the parts in target part set P , q1
and q2 the parts in candidate part set Q. (cid:126)L(·,·) measures
the consistency of the two supporters, which is calculated as
the location displacement of two neighboring correspondence
hypotheses, as shown in Fig. 3(a). σψ is the scaling parameter
to measure the importance of geometric constraint.

3) Hypergraph: As shown in Fig. 3(a), the supporters pro-
vide pairwise relation measure that are restricted to distances,
making it hard to handle large scale change and conducting
wrong correspondences between target parts. On the contrary,

A. Mode-Seeking Problem

Since the maxima of (2) corresponds to a structural corre-
spondence mode, we fully search the hypergraph G by setting
each vertex ν(cid:63) in the hypergraph as a starting point. Let
Dν(cid:63) be the mode with vertex set N (Dν(cid:63) ) and hyperedge set
E(Dν(cid:63) ). Let P ∈ RN be the vector containing the probability
of each vertex in the hypergraph belonging to mode Dν(cid:63), i.e.,
if v ∈ N (Dν(cid:63) ), Pv > 0; otherwise, Pv = 0. N is the number
of vertices in the hypergraph. Combined with (3), the problem

5

hypergraph structure with signiﬁcant hypotheses. To this end,
we develop a conﬁdence-aware sampling method as follows.
1) Firstly, we reduce the number of vertices determinis-
tically by introducing two thresholds. We assume tar-
get parts move smoothly in consecutive frames, which
means that the appearances change little in a very short
time interval. To remove noises, for each target part
p ∈ P , we only consider a few correspondence hypothe-
ses with at most ς = 5 number of highest association
conﬁdence larger than an appearance threshold a.

2) Secondly, the number of hyperedges is greatly decreased
probabilistically. Based on a simple assumption that a
vertex with higher association conﬁdence has a higher
possibility of being reliable correspondence, we sample
more hyperedges around the vertex with higher associ-
ation conﬁdence. Speciﬁcally, starting from each vertex
ν in the reduced vertex set, we sample η = [ˆΓ(ν) · Nν]
number of hyperedges comprising three vertices without
conﬂicts. We regard the normalized conﬁdence ˆΓ(ν) as
the sampling probability, and the constant Nν as the
maximal number of sampled hyperedges for each vertex.
Different from other MRF or graph based approaches con-
sidering pairwise relations between the nearest neighboring
vertices, we sample hyperedges randomly without distance
constraints to exploit the geometric information fully, so that
the hypergraph is spanned globally over all correspondence
hypotheses. The additional beneﬁt is that we can consider
context information between target parts and background parts
for more robustness.
Based on the conﬁdence-aware sampling method, we sam-
ple vertices and hyperedges of G, obtaining a approximate
geometric hypergraph G∗. Then we directly perform mode-
seeking on G∗ instead of G. Speciﬁcally, the reduced vertex
set V∗ and hyperedge set Ψ∗ of G∗ are given as

(cid:40)V∗ = {ν|∀ν ∈ V : Γ(ν) ≥ a,|V p| ≤ ς},

Ψ∗ = {ψ|∀ν ∈ V∗, νi, νj ∈ ψ : |Ψν| ≤ η, νi ∩ νj = ∅}

(8)
where |V p| denotes the number of vertices including part p,
and |Ψν| denotes the number of hyperedges including vertex
ν. The sampling scheme ensures ﬁnding enough relevant cor-
respondence hypotheses. Moreover, it decreases the number of
vertices from n2 to at most nς and the number of hyperedges
90% of vertices and hyperedges in G empirically.

(cid:1) to at most nςη, which removes more than redundant

from(cid:0)n2

3

V. TRACKING

A. Extracting Reliable Target Parts

Given the optimized probability vector P∗, we can deter-
mine the vertices belonging to the corresponding mode D, i.e.,
D = {ν|∀ν ∈ V : Pν > 0}. Since the hypergraph is searched
starting from each vertex, one vertex may appear in multiple
modes. The conﬂicts involved in the modes should be removed
to ﬁnd reliable target parts S, and the whole procedure is
summarized in Algorithm 1.

Fig. 3: (a) Pairwise geometric relations. When large scale changes occur,
the wrong correspondences between target parts (e.g., 1 ∼ 5(cid:48) and 3 ∼ 4(cid:48))
are easily conducted since the supporters (shown in blue arrow) are no
longer reliable. (b) High-order geometric relations. Different from the pairwise
∼ θQ
measure, the angles of the triplet hypotheses (e.g., θP
ν2 ,
ν1
∼ θQ
and θP
ν3 ) are invariant to large scale changes, leading to correct
ν3
correspondences.

ν1 , θP
ν2

∼ θQ

in (2) is cast as optimizing the probability vector P and further
rewritten as
P∗ = argmax

(cid:0) (cid:88)

(cid:88)

Γ(v)Pv +

(cid:89)

Pv

Ξ(e)

(cid:1),

e∈E(Dν(cid:63) )
≥ k + 1,

v∈e

(7)

Pv:v∈N (Dν(cid:63) )

s.t. (cid:88)

v∈V

v∈N (Dν(cid:63) )

Pv = 1,Pv ∈ {0, µ},

1
µ

in which the ﬁrst term in the objective function penalizes
the inclusion of vertices corresponding to less association
conﬁdence indicated by a lower Γ(v), and the second term
encourages the inclusion of hyperedges in the mode with
larger geometric conﬁdence Ξ(e). Essentially, this is a NP-hard
combinatorial optimization problem. To solve this problem,
the constraint Pv ∈ {0, µ} is relaxed to Pv ∈ [0, µ], where
µ ≤ 1 is a constant. Let the number of vertices in Dν(cid:63) be m,
µ ] number of vertices when
the mode contains at least m = [ 1
v∈V Pv = 1. To avoid the degeneracy
problem, we require the minimal vertices in a mode satisfying
µ ≥ k + 1 to guarantee adequate structural
the constraint 1
correspondences included in one mode. Then the pairwise
coordinate updating method [24] is used to solve the problem
in (7) effectively. Refer to [24] for more details about the
optimization strategy.

keeping the constraint(cid:80)

B. Conﬁdence-aware Sampling

Suppose that the target part set and candidate part set consist
of n parts, there are at most n2 correspondence hypotheses.
For the k = 3 case, the size of the resulting full-afﬁnity

(cid:1), of order O(n6), which demands a

hyperedges will be (cid:0)n2

huge amount of memory. It becomes than necessary to further
reduce the computational complexity by introducing a sparse

3

Algorithm 1 Extracting Reliable Target Parts
Input: structural correspondence mode set D
Output: reliable target part set S
1: Sort the mod set D = {D1,··· ,DN} based on the conﬁdence
2: Initialize the mode set without conﬂicts D∗ = ∅
3: for each non-empty mode Di ∈ D,Di (cid:54)= ∅ do
4:

values {Ω(D1),··· , Ω(DN )} in descending order

if no intersections with all members in the set, i.e., ∀j,D∗
D∗ : Di ∩ D∗
else

Add to the mode set, i.e., D∗ ← D∗ ∪ {Di}

j = ∅ then

νj ∈

Remove the overlapping part in the parsed modes, i.e.,
∀j,D∗
Add to the mode set, i.e., D∗ ← D∗ ∪ { ˆDi}

j ∈ D∗ : ˆDi ← Di/D∗

8:
end if
9:
10: end for
11: Obtain the reliable target part set, i.e., S = {p|∀ν ∈ D∗

5:
6:
7:

i ,D∗

i ∈

j

D∗ : p ∈ ν}

B. Reliable Target Parts Based Voting

After obtaining S, we determine the target state in the
current frame t, including center (cid:96)t∗ and scale st∗ of the target
by reliable target parts based voting. Similar to the method
of [6], we construct a conﬁdence map C to represent location
probability of the target in the searching area as

 λ1

λ2
λ3

C(i, j) =

(i, j) ∈ RD∗
(i, j) ∈ RV∗ , (i, j) /∈ RD∗
otherwise

(9)

(cid:88)

where (i, j) is the position in the searching area. RD∗ means
the region of target parts belonging to the extracted modes,
and RV∗ means the region of candidate parts. {λ1, λ2, λ3}
are constants for the inﬂuence of each type of regions.

To ﬁnd the bounding box to cover more foreground regions
with respect to center (cid:96) and scale s, we form the following
optimization problem

{(cid:96)t∗, st∗} = argmax

(cid:96),s

(i,j)∈R((cid:96),s)

C(i, j),

(10)

where R((cid:96), s) means the region with center (cid:96) and scale s.
The target center in the current frame t is largely determined
by the one in the previous frame t− 1 with the geometric con-
straint. To reduce computational complexity, we ﬁrst estimate
a rough target center by calculating the weighted mean of
target part center lt

(cid:88)

p∈S

(cid:96)t =

p with weight wt
p − lt−1
((cid:96)t−1∗ + lt

p, i.e.,
) ·

p

p(cid:80)

wt
p∈S wt
p

,

(11)

is the optimal center in the previous frame t − 1.
where (cid:96)t−1∗
p denotes the conﬁdence of the mode including reliable
wt
p = Ω(D), p ∈
target part p in the current frame t, i.e., wt
ν, ν ∈ N (D). After that, we modify the target center with
the displacement perturbation term δt
(cid:96) and adjust the target
scale with the scale perturbation term δt
s for a visually bet-
ter location. The maximal values of two perturbation terms
s} are set as the mean diameter of candidate parts in the
{δt
(cid:96), δt
current frame t. The ﬁnal target state {(cid:96)t∗, st∗} is obtained by
optimizing (10) using a sampling strategy, namely selecting

6

the one with the maximal score out of numerous randomly
sampled states {(cid:96)+δt
s}. Assembling all parts belonging
to the target, we ﬁnd the optimal target state, as shown in
Fig. 2(b).

(cid:96), s+δt

C. Online Updating of Hypergraph

To handle possible signiﬁcant changes of target appearance,
geometric hypergraph G is updated in two aspects, i.e., target
part set P and candidate part set Q. As illustrated in Fig. 2(a),
based on the parsed reliable target part set S, an old part in P
(e.g., part 12) is deleted if it does not involve in any structural
correspondence for a ﬁxed number of frames (5 frames in
the experiment), while a new part (e.g., part 14 and part 15)
not involved in existed modes is added in P such that its
geometric distance to any other parts is larger than a threshold3
to preserve the spatial sparsity of P . On the other hand, the
appearance model in the MRF based segmentation method is
updated to generate Q every frame, as similar as in [6].

VI. EXPERIMENTS

A. Datasets and Protocols

1) VOT2014 dataset: The VOT2014 dataset [12] is pop-
ularly used in the tracking community, which is collected
with representative 25 sequences selected from 394 sequences.
Each sequence is annotated by several attributes such as
occlusion, and illumination changes.

We evaluate the tracking methods following two protocols
of the VOT2014 challenges, i.e., Baseline and Region noise.
Baseline corresponds to the experimental setting where the
tracker is run on each sequence 15 times by initializing it
on the groundtruth bounding box, obtaining average statistic
scores of the measures. Region noise corresponds to the ex-
periment setting where the tracker is initialized with 15 noisy
bounding boxes, which are randomly perturbed in order of
10% of the groundtruth bounding box size, in each sequence.
As deﬁned in [8], two performance metrics, Accuracy (average
bounding box overlap between the bounding box predicted by
the tracker and the groundtruth one) and Robustness (number
of re-initializations once the overlap ratio measure drops to
zero) are reported in the experiment.

2) Deform-SOT dataset: To further evaluate the perfor-
mance of trackers on deformation and occlusion, we collect the
Deform-SOT dataset, which includes 50 challenging sequences
and different targets with deformation and occlusion in varying
levels in unconstrained environment. The dataset is diverse in
object categories, camera viewpoints, sequence lengths and
challenging levels. We categorize the difﬁculty levels of the
sequences into six classes, including large deformation, severe
occlusion, abnormal movement, illumination variation, scale
change and background clutter, for comparison.

We use two popular measures for evaluation, i.e., precision
plot and success plot. The precision plot shows the percentage
of successfully tracked frames vs. the center location error in
pixels, which ranks the trackers as precision score at 20 pixels;

3The threshold is set as double mean diameter of candidate parts in the

current frame.

the success plot draws the percentage of successfully tracked
frames vs. the bounding box overlap threshold, where Area
Under the Curve is used as success score for ranking. We run
the One-Pass Evaluation (OPE), Spatial Robustness Evaluation
(SRE) and Temporal Robustness Evaluation (TRE) for two
measures (see deﬁnitions in [40]) on the dataset.

B. Implementation Details

The proposed tracker is implemented with MATLAB and C
and runs at 0.5 frame-per-second on a machine with a 2.9 GHz
Intel i7 processor and 16 GB memory. First of all, we study
the inﬂuence of several important parameters as follows, where
the experiment is performed on 15 sequences selected from the
Deform-SOT dataset with different kinds of challenges.

1) Order of Hypergraph: The order of hypergraph decides
how we consider the geometric relations among correspon-
dence hypotheses. We compare the tracking methods with dif-
ferent orders of hypergraph, denoted as GGT-ork (k = 1, 2, 3),
where the corresponding geometric conﬁdence is calculated
in Section III-C. As shown in Fig. 4, GGT-or3 considering
high-order geometric relations performs the best. In contrast,
GGT-or2 and GGT-or1 consider just pairwise relations or
no relations between parts, leading to big accuracy loss. It
indicates the importance and effectiveness of our high-order
representation that integrates geometric structural information
fully for the target.

7

Fig. 5: Performance vs. number of pixels in superpixel.

Fig. 6: Performance vs. weight of geometric conﬁdence.

4) Maximal Number of Sampled Hyperedges: The number
of hyperedges measures the importance of geometric infor-
mation. We report the performance with different numbers
of hyperedges in Fig. 7, denoted as GGT-heNν (Nν =
25, 50, 100, 150, 200, 250). If the number of hyperedges is too
small (e.g., GGT-he25), it is insufﬁcient to exploit high-order
geometric information, rendering less discriminative structure
cues to handle deformation; if the number is too large (e.g.,
GGT-he250), it is harmful to introduce many noisy relations
by the large number of hyperedges because of the sparsity of
reliable correspondences.

Fig. 4: Performance vs. order of hypergraph.

2) Number of Pixels in Each Superpixel: The number
of superpixel controls the size of parts and the number of
vertices in the hypergraph. As Fig. 5 shows, we consider
different numbers of pixels  in each superpixel, i.e., GGT-
sp ( = 30, 50, 80, 100, 150, 200). If the number of pixels in
each superpixel is too large (e.g., GGT-sp200), it is hard to
exploit discriminative geometric structure cues of local parts
to handle deformation. On the other hand, if it is too small
(e.g., GGT-sp30), the large number of hypotheses increases
the computational complexity considerably without apparent
performance improvement (e.g., GGT-sp30 ranks the second
in success score and ranks the ﬁrst in precision score).

3) Weight of Geometric Conﬁdence: The weight of ge-
ometric conﬁdence indicates the importance of geometric
conﬁdence. Here we set ω1 = 10 and enumerate the weight
ω2 in (3), i.e., GGT-gcω2 (ω2 = 0, 5, 10, 15, 20, 25). Based
on the performance in Fig. 6, an appropriate factor helps the
tracker achieve higher performance by neither underestimating
nor overestimating the geometric information.

Fig. 7: Performance vs. number of hyperedges.

Based on the above parameter analysis, we set and ﬁx all
parameters in our algorithm empirically. The order of the
geometric hypergraph is set as k = 3. For the searching area,
we search the target location in current frame by 3 times
the size of previous one. For the SLIC over-segmentation
method, the number of pixels in each superpixel is set as
κ = 50, and the range of number of superpixels [100, 450].
We use 8 bins for each channel of HSV feature to represent
the appearance of target parts. The weights in (3) are set
as {ω1, ω2} = {10, 15}. The scaling parameters σ2
ν = 1.0
ψ = 1.0 in (5)(6). In the sampling method, the
in (4), and σ2
appearance threshold is set as a = 0.3, and the maximal
number of sampled hyperedges is set as Nν = 100. In (9), the
term {λ1, λ2, λ3} = {3.25, 1,−1}.

8

Fig. 8: Tracking results of 5 trackers (i.e., GGT, DSST [9], DGT [6], LGTv1 [7] and OGT [27]), are denoted in different colors on the VOT2014 dataset
(from top to down are car, ﬁsh1, hand1, hand2, and skating, respectively). Note that one tracker is not shown in some frames, which means it fails in tracking
and will re-initialize later (e.g., DSST [9] fails in hand1 #050). Results are best viewed by zooming the digital edition of the ﬁgure.

C. Evaluations on the VOT2014 Dataset

D. Evaluations on the Deform-SOT dataset

We compare our approach to several algorithms including
the winner of the VOT2014 challenge, DSST [9], and two
of the top-performing trackers of the online tracking bench-
mark [40], namely Struck [15] and KCF [17]. Furthermore,
we include key-point based CMT [29] and IIVTv2 [43], the
part based DGT [6], LGTv1 [7], OGT [27], and PTp [11], as
well as the baseline trackers including FRT [2], CT [46], and
MIL [3]. To ensure a fair comparison, all the results are copied
from the original submissions to the VOT2014 challenge by
the corresponding authors or the VOT committee.
Qualitative Evaluation. Examples of visual tracking results of
top 5 trackers are also shown in Fig. 8. We can observe that
our hypergraph based tracker performs against other graph-
based trackers, such as DGT [6], LGT [7], and OGT [27].
For example, DGT [6] and OGT [27] do not adjust
the
scale change of the target car. When the ﬁgure skater in
skating moves under the challenges of background clutter
and illumination variation, some trackers do not locate well
(e.g., OGT [27] in #295, and DGT [6] in #212). Besides,
DSST [9] fails in tracking the hand in hand1 #050 and hand2
#167. This is because the high-order geometric relations in
our method capture the invariant property of local parts such
as angles rather than vulnerable pairwise afﬁnity, rendering
more tolerance on drastic rotation or appearance variations.
Quantitative Evaluation. Table I shows the average per-
formance of the compared trackers. As these results show,
our algorithm achieves the overall best robustness score, and
comparable performance in accuracy among all the methods
compared. Moreover, the considerable improvement in Re-
gion noise level indicates that the spatial high-order represen-
tation in our method can resist noises effectively, and recover
from initialization errors to gain improvements both in terms
of accuracy and robustness.

We evaluate the proposed algorithm against exsiting meth-
ods including holistic model based trackers (i.e., IVT [23],
L1T [26], TLD [20], MIL [3], Struck [15], MTT [47], CT [46],
CN [10], STT [37] and STC [45]) and part based trackers
(i.e., Frag [2], SPT [34], SCM [48], LOT [30], ASLA [19],
LSL [42], LGT [7], DGT [6], and TCP [22]). For fair
comparison, we use the same initial bounding box of each
sequence for all trackers. The experimental results of other
trackers are reproduced from the available source codes with
recommended parameters.

As shown in Fig. 9, the evaluation results on OPE, SRE
and TRE indicate that our GGT tracker performs against other
compared methods. In addition, Fig. 11 shows the tracking
results of top 5 trackers on several sequences.
Attribute-based Evaluation.We also compare the perfor-
mance of all
tracking algorithms for videos with varying
degrees of 6 challenging factors shown in Fig. 10.

1) Large Deformation: Existing part based trackers [34],
[7], [42], [6] mainly consider vulnerable pairwise geometric
relations, which are prone to fail in the sequences with signif-
icant target deformation (e.g., boarding in Fig. 11). According
to Fig. 10(a)(g), our tracker performs against other methods
because high-order triangle geometric relations instead of
varying pairwise displacements preserve invariant angles to
remove noises from a large set of correspondence hypotheses.
2) Severe Occlusion: Some trackers [26], [20], [34], [48],
[19], [42] drift away from the target or do not scale well when
the target is heavily occluded (e.g., boarding, carscale, run and
waterski in Fig. 11). However, our method is able to track the
target relatively accurate because the structural correspondence
modes exploit invariant local geometric structure of target
parts. This information helps to avoid much inﬂuence of
occlusion as long as adequate structural correspondence modes

TABLE I: Tracking Results on the VOT2014 dataset. Accuracy scores and ranks (Acc. Sc. and Acc. Rk. for short) are reported as well as the Robustness
ones. The ﬁrst, second and third best values are highlighted by red, blue and green color, respectively.

9

Acc. Sc./Acc. Rk.

Rob. Sc./Rob. Rk.

Acc. Sc./Acc. Rk.

Rob. Sc./Rob. Rk.

Acc. Sc./Acc. Rk.

Rob. Sc./Rob. Rk.

Overall

Baseline

Region noise

0.65/4.93
1.28/6.22
1.17/5.31
1.52/6.62
0.64/5.42
2.22/8.16
3.37/10.30
1.46/7.33
2.64/9.14
2.71/10.59
3.13/9.14
2.77/10.38
2.86/10.20
3.34/10.45
3.46/12.29
2.60/9.67

0.57/5.48
0.60/4.25
0.58/5.39
0.61/4.36
0.47/9.01
0.51/7.97
0.53/7.14
0.46/10.38
0.46/9.58
0.50/8.79
0.46/9.63
0.47/9.62
0.46/10.28
0.43/11.40
0.46/9.69
0.38/12.85

0.59/4.95
1.22/6.27
1.09/5.16
1.42/6.57
0.65/5.69
2.19/8.40
3.36/10.04
1.43/7.26
2.64/9.15
2.50/10.14
3.16/9.42
2.93/10.82
2.81/10.32
3.23/10.34
3.39/12.24
2.44/9.23

GGT

DSST [9]
DGT [6]
KCF [17]
LGTv1 [7]
Struck [15]
OGT [27]
PTp [11]
CMT [29]
FoT [39]

IIVTv2 [43]
FSDT [12]
IVT [23]
CT [46]
FRT [2]
MIL [3]

0.58/6.16
0.62/4.48
0.58/5.81
0.63/4.22
0.47/9.29
0.52/8.04
0.55/7.09
0.47/10.98
0.48/9.18
0.51/8.44
0.47/9.30
0.47/9.87
0.47/9.87
0.43/11.76
0.48/9.17
0.40/12.03

0.55/4.98
1.16/6.32
1.00/5.02
1.32/6.53
0.66/5.96
2.16/8.64
3.34/9.78
1.40/7.20
2.64/9.16
2.28/9.69
3.19/9.70
3.08/11.26
2.76/10.44
3.12/10.23
3.32/12.20
2.27/8.80

0.57/4.81
0.58/4.01
0.58/4.97
0.58/4.50
0.46/8.73
0.49/7.90
0.51/7.19
0.45/9.77
0.44/9.97
0.48/9.13
0.45/9.96
0.46/9.36
0.44/10.69
0.43/11.04
0.44/10.20
0.35/13.67

Fig. 9: Precision plot and success plot over the Deform-SOT dataset using OPE, SRE and TRE. Best viewed in color.

are detected to parse target parts to vote for the target state.
3) Abnormal Movement: Abnormal movements consist of
all kinds of non-rigid change such as abrupt motion, pose
variation, and rotation. For example, SCM [48] and TCP [22]
drift away when the gymnast jumps to grab bars in uneven-
bars #303. By comparison, our method performs well in
estimating both scales and positions on these challenging
sequences, which can be attributed to two reasons. Firstly, the
hypergraph is constructed with coarse target parts to remove
unnecessary background parts (see a example in Fig. 2(a)).
Moreover, based on the modes, the reliable target parts are
determined under noises to vote the optimal target state.

4) Illumination Variation: Some trackers [19], [10] are
insensitive to appearance changes caused by illumination
variation, however, compared to our method, they perform
poorly on the sequences undergoing other challenges such

as large deformation and abnormal movement simultaneously
(see bike in Fig. 11). This can be attributed to the use
of geometric hypergraph learning to adapt the local parts’
appearance variation in consecutive frames.

5) Scale Change: In terms of sequences with signiﬁcant
target scale change (e.g., boarding and carscale in Fig. 11),
our tracker performs against other methods [19], [6], [22] as
in Fig. 10(e)(k). This is because we employ the angles of the
triangle to measure the similarity of several correspondence
hypotheses, which is invariant to scale change (see more in
Section IV-B). Different from our algorithm, DGT [6] just
considers neighboring pairwise relations between local parts,
making it less ﬂexible to handle changes of the target scale.
6) Background Clutter: The background surrounding the
target has similar appearance, leading to drift from the in-
to other objects when they appear in close
tended target

10

Fig. 10: The plots of OPE with different attributes. Best viewed in color. For better clarity, the top 10 trackers are shown.

Fig. 11: Tracking results of top 5 trackers, denoted in different colors and lines, on the Deform-SOT dataset (from left to right and top to down are bike,
boarding, bolt, carscale, football, run, uneven-bars, and waterski, respectively). Results are best viewed by zooming the digital edition of the ﬁgure.

proximity (e.g., football #499 in Fig. 11). To handle this
problem, some methods [37], [45] exploit the context infor-
mation around the target, while the other ones [7], [6] employ
a graph based representation to capture geometric structure of
the target. Owing to the proposed conﬁdence-aware sampling
method without distance constraint, sampled representative
hyperedges not only consider the relations between target
parts and background parts (context), but also model
the
inlier geometric relations among local target parts (structure)
simultaneously. As a whole, our method ranks the ﬁrst in
success score in Fig. 10(f) and the second in precision score

in Fig. 10(i).

VII. CONCLUSION AND FUTURE WORK

In this paper, we describe the Geometric hyperGraph
Tracker (GGT) based on geometric hypergraph learning for
visual tracking, where k-order geometric relations among cor-
respondence hypotheses are integrated in the dynamically con-
structed geometric hypergraph. Our method is universal in that
the traditional graph-based tracking methods can be viewed as
special cases of the proposed algorithm with lower-order of
hypergraph. On the other hand, the conﬁdence-aware sampling

method is developed to reduce computational complexity and
the scale of hypergraph for better efﬁciency. Experiments are
carried out in the VOT2014 dataset and the Deform-SOT
dataset, which include large deformation and severe occlusion
challenges, to demonstrate the favorable performance of the
proposed method compared to other existing methods.

There are some issues in our method which can be further
improved in the future work. To characterize more kinds of
graph-based trackers, we can exploit high-order temporal and
spatial relations among a large number of correspondence
hypotheses in multiple consecutive frames simultaneously.
More spatio-temporal relations considered in the model means
higher computational complexity. Therefore, one future direc-
tion is to introduce an more effective mechanism for select-
ing vertices and hyperedges to reduce redundant hypotheses.
Another possible direction is to learn a holistic target repre-
sentation which is updated jointly with the simple superpixel
representation for more robustness and discriminability.

REFERENCES

[1] R. Achanta, A. Shaji, K. Smith, A. Lucchi, P. Fua, and S. Susstrunk.
Slic superpixels compared to state-of-the-art superpixel methods.
IEEE Transactions on Pattern Analysis and Machine Intelligence,
34(11):2274–2282, 2012.

[2] A. Adam, E. Rivlin, and I. Shimshoni. Robust fragments-based tracking
In Proceedings of IEEE Conference on
using the integral histogram.
Computer Vision and Pattern Recognition, volume 1, pages 798–805,
2006.

[3] B. Babenko, M.-H. Yang, and S. Belongie. Robust object tracking with
online multiple instance learning. IEEE Transactions on Pattern Analysis
and Machine Intelligence, 33(8):1619–1632, 2011.

[4] W. Bouachir and G. Bilodeau. Collaborative part-based tracking using
salient local predictors. Computer Vision and Image Understanding,
137:88–101, 2015.

[5] Y. Boykov and V. Kolmogorov. An experimental comparison of min-
IEEE
cut/max-ﬂow algorithms for energy minimization in vision.
Transactions on Pattern Analysis and Machine Intelligence, 26(9):1124–
1137, 2004.

[6] Z. Cai, L. Wen, Z. Lei, N. Vasconcelos, and S. Z. Li. Robust deformable
and occluded object tracking with dynamic graph. IEEE Transactions
on Image Processing, 23(12):5497–5509, 2014.

[7] L. Cehovin, M. Kristan, and A. Leonardis. Robust visual tracking using
an adaptive coupled-layer visual model. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 35(4):941–953, 2013.

[8] L. Cehovin, M. Kristan, and A. Leonardis.

Is my new tracker really
In IEEE Winter Conference on Applications of

better than yours?
Computer Vision, pages 540–547, 2014.

[9] M. Danelljan, G. H¨ager, F. S. Khan, and M. Felsberg. Accurate scale
estimation for robust visual tracking. In Proceedings of British Machine
Vision Conference, 2014.

[10] M. Danelljan, F. Shahbaz Khan, M. Felsberg, and J. Van de Weijer.
Adaptive color attributes for real-time visual tracking. In Proceedings
of IEEE Conference on Computer Vision and Pattern Recognition, 2014.
[11] S. Duffner and C. Garcia. Pixeltrack: A fast adaptive algorithm for
In Proceedings of the IEEE International

tracking non-rigid objects.
Conference on Computer Vision, pages 2480–2487, 2013.

[12] M. K. et al. The visual object tracking VOT2014 challenge results.
In Workshops in Conjunction with European Conference on Computer
Vision, pages 191–217, 2014.

[13] M. Godec, P. M. Roth, and H. Bischof. Hough-based tracking of non-
rigid objects. In Proceedings of the IEEE International Conference on
Computer Vision, pages 81–88, 2011.

[14] Y. Guo, Y. Chen, F. Tang, A. Li, W. Luo, and M. Liu. Object
tracking using learned feature manifolds. Computer Vision and Image
Understanding, 118:128–139, 2014.

[15] S. Hare, A. Saffari, and P. H. Torr. Struck: Structured output tracking
with kernels. In Proceedings of the IEEE International Conference on
Computer Vision, pages 263–270, 2011.

[16] S. Hare, A. Saffari, and P. H. S. Torr. Efﬁcient online structured output
In Proceedings of IEEE
learning for keypoint-based object tracking.
Conference on Computer Vision and Pattern Recognition, pages 1894–
1901, 2012.

11

[17] J. F. Henriques, R. Caseiro, P. Martins, and J. Batista. High-speed
tracking with kernelized correlation ﬁlters. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 37(3):583–596, 2015.

[18] Z. Hong, C. Wang, X. Mei, D. Prokhorov, and D. Tao. Tracking using
multilevel quantizations. In European Conference on Computer Vision,
volume 8694, pages 155–171, 2014.

[19] X. Jia, H. Lu, and M. Yang. Visual tracking via adaptive structural
local sparse appearance model. In Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pages 1822–1829, 2012.

[20] Z. Kalal, J. Matas, and K. Mikolajczyk. P-N learning: Bootstrapping
In Proceedings of IEEE
binary classiﬁers by structural constraints.
Conference on Computer Vision and Pattern Recognition, pages 49–56,
2010.

[21] J. Lee, M. Cho, and K. M. Lee. Hyper-graph matching via reweighted
random walks. In Proceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pages 1633–1640, 2011.

[22] W. Li, L. Wen, M. C. Chuah, Y. Zhang, Z. Lei, and S. Z. Li. Online
visual tracking using temporally coherent part cluster. In IEEE Winter
Conference on Applications of Computer Vision, pages 9–16, 2015.

[23] J. Lim, D. A. Ross, R.-S. Lin, and M.-H. Yang. Incremental learning for
visual tracking. In Advances in Neural Information Processing Systems,
pages 793–800, 2004.

[24] H. Liu, X. Yang, L. J. Latecki, and S. Yan. Dense neighborhoods on
afﬁnity graph. International Journal of Computer Vision, 98(1):65–82,
2012.

[25] T. Liu, G. Wang, and Q. Yang. Real-time part-based visual tracking
via adaptive correlation ﬁlters. In Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pages 4902–4912, 2015.

[26] X. Mei and H. Ling. Robust visual tracking using (cid:96)1 minimization. In
Proceedings of the IEEE International Conference on Computer Vision,
pages 1436–1443, 2009.

[27] H. Nam, S. Hong, and B. Han. Online graph-based tracking. In European

Conference on Computer Vision, pages 112–126, 2014.

[28] G. Nebehay and R. Pﬂugfelder. Clustering of static-adaptive correspon-
In Proceedings of the IEEE
dences for deformable object tracking.
Conference on Computer Vision and Pattern Recognition, pages 2784–
2791, 2015.

[29] G. Nebehay and R. P. Pﬂugfelder. Consensus-based matching and
In Winter Conference on

tracking of keypoints for object tracking.
Applications of Computer Vision, pages 862–869, 2014.

[30] S. Oron, A. Bar-Hillel, D. Levi, and S. Avidan. Locally orderless
tracking. In Proceedings of IEEE Conference on Computer Vision and
Pattern Recognition, pages 1940–1947, 2012.

[31] X. Ren and J. Malik. Tracking as repeated ﬁgure/ground segmentation.
In Proceedings of IEEE Conference on Computer Vision and Pattern
Recognition, pages 1–8, 2007.

[32] J. Wang and Y. Yagi. Many-to-many superpixel matching for robust

tracking. IEEE Transactions on Cybernetics, 44(7):1237–1248, 2014.

[33] Q. Wang, F. Chen, and W. Xu. Tracking by third-order tensor represen-
tation. IEEE Transactions on Systems, Man, and Cybernetics, Part B,
41(2):385–396, 2011.

[34] S. Wang, H. Lu, F. Yang, and M.-H. Yang. Superpixel tracking.

In
Proceedings of the IEEE International Conference on Computer Vision,
pages 1323–1330, 2011.

[35] W. Wang and R. Nevatia. Robust object tracking using constellation
model with superpixel. In Asian Conference on Computer Vision, pages
191–204, 2012.

[36] L. Wen, Z. Cai, D. Du, Z. Lei, and S. Z. Li. Learning discriminative
hidden structural parts for visual tracking. In Workshops in Conjunction
with Asian Conference on Computer Vision, pages 262–276, 2014.

[37] L. Wen, Z. Cai, Z. Lei, D. Yi, and S. Z. Li. Online spatio-temporal
structural context learning for visual tracking. In European Conference
on Computer Vision, pages 716–729, 2012.

[38] L. Wen, D. Du, Z. Lei, S. Z. Li, and M.-H. Yang. JOTS: Joint online
In Proceedings of IEEE Conference on

tracking and segmentation.
Computer Vision and Pattern Recognition, pages 2226–2234, 2015.

[39] A. Wendel, S. Sternig, and M. Godec. Robustifying the ﬂock of trackers.

In Computer Vision Winter Workshop, page 91. Citeseer, 2011.

[40] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A benchmark.
In Proceedings of IEEE Conference on Computer Vision and Pattern
Recognition, pages 2411–2418, 2013.

[41] F. Yang, H. Lu, and M. Yang. Learning structured visual dictionary for

object tracking. Image Vision Computing, 31(12):992–999, 2013.

[42] R. Yao, Q. Shi, C. Shen, Y. Zhang, and A. van den Hengel. Part-based
visual tracking with online latent structural learning. In Proceedings of
IEEE Conference on Computer Vision and Pattern Recognition, pages
2363–2370, 2013.

[43] K. M. Yi, H. Jeong, B. Heo, H. J. Chang, and J. Y. Choi. Initialization-
insensitive visual tracking through voting with salient local features. In

Proceedings of the IEEE International Conference on Computer Vision,
pages 2912–2919, 2013.

12

[44] X. Yu, J. Yang, T. Wang, and T. S. Huang. Key point detection by max
pooling for tracking. IEEE Transactions on Cybernetics, 45(3):444–452,
2015.

[45] K. Zhang, L. Zhang, Q. Liu, D. Zhang, and M. Yang. Fast visual tracking
via dense spatio-temporal context learning. In European Conference on
Computer Vision, pages 127–141, 2014.

[46] K. Zhang, L. Zhang, and M.-H. Yang. Real-time compressive tracking.
In European Conference on Computer Vision, pages 864–877. Springer,
2012.

[47] T. Zhang, B. Ghanem, S. Liu, and N. Ahuja. Robust visual tracking
via multi-task sparse learning. In Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pages 2042–2049, 2012.

[48] W. Zhong, H. Lu, and M. Yang. Robust object tracking via sparsity-
In Proceedings of IEEE Conference on

based collaborative model.
Computer Vision and Pattern Recognition, pages 1838–1845, 2012.

