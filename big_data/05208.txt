Safe Sequential Path Planning of Multi-Vehicle Systems Under Presence

of Disturbances and Imperfect Information

Somil Bansal*, Mo Chen*, Jaime F. Fisac, and Claire J. Tomlin

6
1
0
2

 
r
a

 

M
6
1

 
 
]

A
M

.
s
c
[
 
 

1
v
8
0
2
5
0

.

3
0
6
1
:
v
i
X
r
a

Abstract— Recently, there has been an immense surge of
interest in using unmanned aerial vehicles (UAVs) for civil pur-
poses. Multi-UAV systems are safety-critical, and safety guaran-
tees must be made to ensure no undesirable conﬁgurations such
as collisions occur. Hamilton-Jacobi (HJ) reachability is ideal
for analyzing such safety-critical systems because it provides
safety guarantees and is ﬂexible in terms of system dynamics;
however, its direct application is limited to small-scale systems
of no more than two vehicles because of the exponential-scaling
computation complexity. By assigning vehicle priorities, the
sequential path planning (SPP) method allows multi-vehicle
path planning to be done with a computation complexity that
scales linearly with the number of vehicles. Previously the
SPP method assumed no disturbances in the vehicle dynamics,
and that every vehicle has perfect knowledge of the position
of higher-priority vehicles. In this paper, we make SPP more
practical by providing three different methods for accounting
for disturbances in dynamics and imperfect knowledge of
higher-priority vehicles. Each method has advantages and
disadvantages with different assumptions about information
sharing. We demonstrate our proposed methods in simulations.

I. INTRODUCTION

Recently, there has been an immense surge of interest in
using unmanned aerial vehicles (UAVs) for civil purposes.
The applications of UAVs extend well beyond package
delivery, and include aerial surveillance, disaster response,
and other important tasks [1], [2], [3], [4], [5]. Many of
these applications will
involve UAVs ﬂying in an urban
environment, potentially in close proximity of humans. As
a result, government agencies such as the Federal Aviation
Administration (FAA) and National Aeronautics and Space
Administration (NASA) of the United States are urgently
trying to develop new scalable ways to organize an air space
in which potentially thousands of UAVs can ﬂy [6], [7].

One essential problem that needs to be addressed is how
a group of vehicles in the same vicinity can reach their
destinations while avoiding collision with each other. Several
previous studies have attempted to address this problem.
In some of these studies, speciﬁc control strategies for the
vehicles or moving entities are assumed, and approaches such
as induced velocity obstacles have been used [8], [9], [10].
Other researchers have used ideas involving virtual potential

This work has been supported in part by NSF under CPS:ActionWebs
(CNS-931843), by ONR under the HUNT (N0014-08-0696) and SMARTS
(N00014-09-1-1051) MURIs and by grant N00014-12-1-0609, by AFOSR
under the CHASE MURI (FA9550-10-1-0567). The research of M. Chen
and J. F. Fisac have received funding from the “NSERC” program and “la
Caixa” Foundation, respectively.

* Both authors contributed equally to this work. All authors are with the
Department of Electrical Engineering and Computer Sciences, University of
California, Berkeley. {somil, mochen72, jﬁsac, tomlin}@eecs.berkeley.edu

ﬁelds to maintain collision avoidance while maintaining a
speciﬁc formation [11], [12]. Although interesting results
emerge from these previous studies, simultaneous trajectory
planning and collision avoidance are not considered.

In the past, trajectory planning and collision avoidance
problems in safety-critical systems have been studied us-
ing reachability analysis, which provides guarantees on the
success and safety of optimal system trajectories [13], [14],
[15], [16], [17]. In reachability analysis, one computes the
reachable set, deﬁned as the set of states from which the
system can be driven to a target set. Reachability analysis
has been successfully used in applications involving systems
with no more than two vehicles, such as pairwise collision
avoidance [14], automated in-ﬂight refueling [18], two-player
reach-avoid games [19], and many others [20].

Despite the advantages of reachability analysis, it cannot
be directly applied to scenarios involving complex high
dimensional systems such as multi-vehicle systems. The
computation of reachable sets involves solving a Hamilton-
Jacobi (HJ) partial differential equation (PDE) on a grid
representing a discretization of the state space, causing an
exponential scaling of computation complexity with respect
to the dimension of the system, or roughly speaking, with
the number of vehicles present.

In this paper, we build on the work in [21], and assume
a reasonable structure in the multi-vehicle path planning
problem. In the sequential path planning (SPP) scheme,
vehicles are assigned some priority. Higher-priority vehicles
may ignore the lower-priority vehicles, who must take into
account the presence of higher-priority vehicles by treating
them as induced time-varying obstacles. Unlike the work
in [21], we incorporate disturbances for all vehicles and
consider three different assumptions on the information each
of the vehicles may have access to, making the sequential
path planning substantially more practical. For each of the
assumed information patterns, we propose a reachability-
based method to compute the induced obstacles that would
guarantee collision avoidance as well as successful transit to
the destination. We demonstrate and compare our proposed
methods through numerical simulations.

II. PROBLEM FORMULATION

Consider N vehicles whose joint dynamics described by

the time-varying ordinary differential equation (ODE)

˙xi = fi(t, xi, ui, di),
ui ∈ Ui, di ∈ Di
i = 1, . . . , N

t ∈ [tEDT

i

, tSTA

i

]

(1)

where xi ∈ Rni is the state of the ith vehicle, ui is the control
of the ith vehicle, and di is the disturbance experienced by
the ith vehicle. In general, the physical meaning of xi and the
dynamics fi depend on the speciﬁc dynamic model of vehicle
i, and need not be the same across the different vehicles.
We assume that the control functions ui(·), di(·) are drawn
from the set of measurable functions1, and fi(t, xi, ui, di) is
bounded, Lipschitz continuous in xi for any ﬁxed t, ui, di,
and measurable in t, ui, di for each xi. Given any initial
i and any control function ui(·), there exists a unique
state x0
continuous trajectory xi(·) solving (1) [22].
denote the earliest departure time and
scheduled time of arrival, respectively, of vehicle i. Let pi ∈
Rp denote the position of vehicle i; note that pi in most
practical cases would be a subset of the state xi. Denote the
rest of the states hi, so that xi = (pi, hi).
Under the worst case disturbance, each vehicle aims to
get to some set of target states, denoted Ti ⊂ Rni, at some
. On its way to Ti, each vehicle
scheduled time of arrival tSTA
must avoid the danger zones Aij(t) of all other vehicles
j (cid:54)= i for all time. In general, the danger zone can be deﬁned
to capture any undesirable conﬁguration between vehicle i
and vehicle j. In this paper, we deﬁne Aij(t) as

and tSTA

Let tEDT

i

i

i

Aij(t) = {xi ∈ Rni : (cid:107)pi − pj(t)(cid:107)2 ≤ Rc},

(2)

the interpretation of which is that a vehicle is another vehi-
cle’s danger zone if the two vehicles are within a Euclidean
distance of Rc apart. The joint path planning problem is
depicted in Fig. 1.

Fig. 1: Problem setup.

tial game of dimension(cid:80)

The problem of driving each of the vehicles in (1) into
their respective target sets Ti would be in general a differen-
i ni. Due to the exponential scaling
of the complexity with the problem dimension, an optimal
solution is computationally intractable even for N > 2.

In this paper, we assume assigned priorities of the vehicles
as in the SPP method [21]. While traveling to its target
set, a vehicle may ignore the presence of lower priority
vehicles, but must take full responsibility for avoiding higher
priority vehicles. Since the analysis in [21] did not take
into account the presence of disturbances di and limited
1 A function f : X → Y between two measurable spaces (X, ΣX )
and (Y, ΣY ) is said to be measurable if the preimage of a measurable set
in Y is a measurable set in X, that is: ∀V ∈ ΣY , f−1(V ) ∈ ΣX, with
ΣX , ΣY σ-algebras on X,Y .

information available to each vehicle, we extend the work
in [21] to consider these practically important aspects of
the problem. In particular, we answer the following inter-
dependent questions that were not previously addressed:

1) How can each vehicle guarantee that it will reach its
target set without getting into any danger zones, despite
the disturbances it experiences?

2) How can each vehicle take into account the distur-

bances that other vehicles experience?

3) How should each vehicle robustly handle situations
with limited information about the state and intention
of other vehicles?

III. SOLUTION VIA DOUBLE-OBSTACLE HJ VI AND SPP
A. Double-Obstacle Hamilton-Jacobi Variational Inequality
Our solution method takes advantage of the double-
obstacle HJ variational inequality (VI) [17], in which one
computes the backwards reachable set (BRS) V(t) in the
presence of a time-varying target set T (t) and time-varying
obstacle G(t). Mathematically, we are given a system with
state z evolving according to

˙z = f (t, z, u, d),

z(0) = z0,

u ∈ U, d ∈ D

t ∈ [0, T ]

(3)

After deﬁning some target set T (t), we compute V(t),

deﬁned by
V(t) = {z : ∃u ∈ U,∀γ[u] ∈ Γ, (3)
⇒ ∃s ∈ [t, T ], z(s) ∈ T (s) ∧ z(τ ) /∈ G(τ )∀τ ∈ [t, s]} (4)
where U is the set of measurable functions satisfying control
constraints at every t, and Γ is the set of non-anticipative
strategies [14] deﬁned as follows:

γ ∈ Γ := {N : U1 → U2 | u1(r) = ˆu1(r) a. e. r ∈ [t, s]
⇒ N [u1](r) = N [ˆu1](r) a. e. r ∈ [t, s]}

(5)
Informally, the BRS is the set of states from which there
exists a control such that for all non-anticipative distur-
bances, the system is driven into the target set T (t) in the
time horizon [t, T ] without ﬁrst entering the obstacle set G(t).
Given the target set T (t) speciﬁed as an implicit surface
function such that T (t) = {z : l(t, z) ≤ 0}, the BRS can be
obtained as the implicit surface function V (t, z) such that
V(t) = {z : V (t, z) ≤ 0}, where V (t, z) is the viscosity
solution [23] to the following HJ VI:

(cid:110)
min(cid:8)DtV (t, z) + H (t, z, DzV ) , l(t, z) − V (t, z)(cid:9)
V (T, x) = max(cid:8)l(T, x),−g(T, x)(cid:9)
d∈D p · f (t, z, u, d)

− g(t, z) − V (t, z)

(6)
where g(t, x) is the implicit surface function representing
G(t): G(t) = {z : g(t, x) ≤ 0}. After the BRS is computed,

H (t, z, p) = min

t ∈ [0, T ]

u∈U max

(cid:111)

max

= 0,

TargetsVehicleDanger zone𝒯1𝒯3𝒯2𝑄1𝑄3𝑅𝐶𝑄2the optimal control can be obtained as follows:

u∗(t, z) = arg min

u∈U max

d∈D H (t, z, DzV )

(7)

In theory, one could deﬁne the state to be the joint states
of all vehicles, z = (x1, x2, . . . , xN ), deﬁne the dynamics
(3) to follow (1), the target set T to correspond to the
situation in which all vehicles have arrived at their targets
Ti, i = 1, . . . , N, and the obstacle set G to correspond to the
combination of all the danger zones Aij. Then, (6) could
be solved to obtain V(t), and then the joint optimal control
would be given by (7).

However, practically, the dimensionality of the joint state
z would be extremely high. In fact, for even the simplest
vehicle models, solving (6) would be intractable for more
than two vehicles. Therefore, we propose the sequential path
planning method, which allows (6) to be solved in the state
space of each vehicle, making the computation complexity
scale linearly, as opposed to exponentially, with the number
of vehicles.

B. Sequential Path Planning

In order to make the N-vehicle path planning problem
safe and tractable, we impose a reasonable structure to the
problem: each vehicle is assigned a strict priority ordering.
When planning its trajectory to its target, a higher-priority
vehicle can disregard the presence of a lower priority vehicle.
In contrast, a lower priority vehicle must take into account
the presence of all higher priority vehicles, and plan its
trajectory in a way that avoids the higher priority vehicles’
danger zones. For convenience and without lost of generality,
let vehicle i have the ith highest priority and denote it as Qi.
Optimal path planning in this setting is enabled by a HJ VI
which computes the BRS Vi(t) from a target set Ti in the
presence of time-varying obstacles Gi(t). In the sequential
path planning application, the time-varying obstacles repre-
sent regions of the state space of Qi that must be avoided in
order to ensure that Qi does not enter any danger zones of
higher priority vehicles. We present three different ways to
compute Gi, obstacles induced by higher priority vehicles in
Section IV. For now, we proceed assuming Gi is given.

To obtain the optimal control for reaching the target we

max

adapt (6) to Qi and solve the following HJ VI:

(cid:110)
min(cid:8)DtVi(t, xi) + Hi (t, xi, DxiV ) ,
(cid:111)
li(t, xi) − Vi(t, xi)(cid:9),−gi(t, xi) − Vi(t, xi)
Vi(tSTA, xi) = max(cid:8)li(xi),−gi(tSTA, xi)(cid:9)

t ∈ [tEDT, tSTA]

= 0,

Hi (t, xi, p) = min
ui∈Ui

max
di∈Di

p · f (t, xi, ui, di)

(8)
Here, the target set Ti, obstacle set Gi(t), and BRS Vi(t)

are related to li(xi), gi(t, xi), Vi(t, xi) as follows:

Ti = {xi : li(xi) ≤ 0}

Gi(t) = {xi : gi(t, xi) ≤ 0}
Vi(t) = {xi : Vi(t, xi) ≤ 0}

i−1(cid:91)

From the BRS, the optimal control for vehicle Qi is then

given as

u∗
i (t, xi) = arg min
ui∈Ui

Hi (t, xi, Dxi Vi)

(10)

If Qi uses the optimal control given by (10), then Qi can
be guaranteed to reach the target Ti as long as Qi departs by
, deﬁned as inf t Vi(t, xi) ≤ 0.
the latest departure time tLDT

i

IV. OBSTACLE GENERATION

Obstacles can be generated in many different ways de-
pending on the assumptions made about the information the
vehicles have about each other. In each of the three obstacle
generation methods that we present, the goal is to compute,
for each lower priority vehicle Qi, the time-varying obstacle
induced by each higher priority vehicle Qj, j < i, denoted
by Oj
i (t) is computed, we can then solve (8)
with the union of all obstacles induced by higher priority
vehicles as the total obstacle set Gi(t):

i (t). Once Oj

Gi(t) =

Oj
i (t)

(11)

j=1

In general, the different methods of obstacle generation
can be used in a single path planning problem, since different
control strategies can be assumed for each vehicle indepen-
dently. This means that Oj
i (t) can be computed using a
different method for each j. For example, a more predictable
vehicle may induce obstacles under the stronger assumptions
in Section IV-A, while a vehicle that requires more control
freedom may induce obstacles under the weaker assumptions
in Section IV-B.

A. Method 1: Centralized Controller

In this obstacle generation method, the induced obstacle
for a vehicle Qj is computed assuming that Qj is applying
the optimal control u∗
j (t, xj) given by (10), which takes
Qj to the target in the optimal way according to the value
function Vj(t, xj). If there is a centralized controller directly
controlling each of the N vehicles, then the control law of
each vehicle can be enforced. In this case, lower priority
vehicles can safely assume that higher priority vehicles are
applying the enforced control law.

From the perspective of a lower priority vehicle Qi, a
higher priority vehicle Qj, j < i induces an time-varying
obstacle that represents the positions that could possibly be
within the capture radius Rc of Qj given that Qj is executing
the feedback controller u∗
j (t, xj). Determining this obstacle
involves ﬁrst solving a forward reachability problem. The
solution gives us the forward reachable set (FRS) of Qj
starting from its initial state xj(tEDT) at initial time tEDT,
denoted Wj(t) and deﬁned as follows:

Wj(t) = {y ∈ Rnj : ˙xj = fj(xj, u∗

j (t, x), dj)
⇒ ∀dj ∈ Dj, xj(t) = y}

(12)

(9)

Conveniently, FRSs can be computed using a modiﬁed

version of (8), deﬁned in (13):

(cid:0)t, xj, Dxj V(cid:1) = 0, t ∈ [tEDT

j

, tSTA

]

j

j

(13)

min
dj∈Dj

p · f (t, xj, uj, dj)

DtVj(t, xj) + Hj
Vj(tSTA
, xj) = lj(xj)
Hj (t, xj, p) = min
uj∈Uj
where l is chosen to be such that T = {xj(t0)}. In practice,
when there is uncertainty in the initial state of Qj, we set
Tj to be a small region around xj(t0). To impose that the
optimal control is used, we substitute uj = u∗
j (t, xj) into
(13) instead of minimizing over uj.
The FRS Wj(t) represents the set of possible states at
time t of a higher-priority vehicle Qj given the worst
case disturbance dj(·) and given that Qj uses the feedback
controller u∗
j (t, x). In order for a lower-priority vehicle Qi
to guarantee that it does not go within a distance of Rc to
Qj, Qi must stay a distance of at least Rc away from the set
Wj(t) for all possible values of the non-position states hj.
This gives the obstacle induced by a higher priority vehicle
Qj for a lower priority vehicle Qi as follows:
Oj
i (t) = {xi : dist(pi,Pj(t)) ≤ Rc}

(14)
where the dist(·,·) function represents the minimum distance
from a point to a set, and the set Pj(t) is the set of states in
the FRS Wj(t) projected onto the states representing position
pj, and disregarding the non-position dimensions hj:

Pj(t) = {p : ∃hj, (p, hj) ∈ Wj(t)}.

(15)

B. Method 2: Least Restrictive Control

If there is no centralized controller to enforce the control
policy for higher priority vehicles, weaker assumptions must
be made by the lower priority vehicles to ensure collision
avoidance. One reasonable assumption that a lower priority
vehicle can make is that all higher priority vehicles follow the
least restrictive control that would take them to their targets.
This control would be given by

(cid:40){u∗

j (t, xj) given by (10)} if u ∈ ∂Vi(t),

uj ∈

Ui otherwise

(16)

Such a controller allows each higher priority vehicle to use
any controller it desires, except when it is on the boundary
of the BRS, ∂Vi, in which case the optimal control u∗
j (xj)
given by (10) must be used to get to the target on time. This
assumption is the weakest assumption that could be made by
lower priority vehicles given that the higher priority vehicles
will get to their targets on time.

Suppose a lower priority vehicle Qi assumes that higher
priority vehicles Qj, j < i use the least restrictive control
strategy (16). From the perspective of the lower priority
vehicle Qi, a higher priority vehicle Qj could be in any state
that is reachable from Qj’s initial state xj(tEDT) and from
which the target Tj can be reached. Mathematically, this is
deﬁned by Qj is the intersection of the FRS from the initial
state xj(tEDT) and the BRS deﬁned in (4) from the target

set Tj, Vj(t) ∩ Wj(t). In this situation, since Qj cannot be
assumed to be using any particular feedback control, Wj(t)
is deﬁned in (17) and can also be computed by solving (13).

Wj(t) = {y ∈ Rnj : ∃u ∈ U,∃d ∈ D,
˙xj = fj(xj, uj, dj) ⇒, xj(t) = y}

(17)

In turn, the obstacle induced by a higher priority Qj for

a lower priority vehicle Qi is as follows:

Oj
i (t) = {xi : dist(pi,Pj(t)) ≤ Rc}

(18)

where Pj(t) is given by

Pj(t) = {p : ∃hj, (p, hj) ∈ Vj(t) ∪ Wj(t)}

(19)

C. Method 3: Robust Tracking of Nominal Trajectories

A third way of computing induced obstacles is to have
vehicles commit to approximately tracking a robustly feasible
nominal trajectory obtained in the path-planning phase. If
a vehicle can be guaranteed to track a trajectory with a
bounded error at all times, then this bound can be used to
determine the induced obstacle. The planning phase does
not make full use of the vehicle’s control authority, as
some margin is needed to reject unexpected disturbances.
Therefore, with this method, planning is done for a reduced
control set U p ⊂ U according to Section III.

In this context, robust nonlinear control techniques such
as Lyapunov-based methods [24] can be used to compute
robust “funnels” around a concrete nominal trajectory. In this
paper, we use reachability to determine the tracking error
bound so that the tracking error bound can be determined
independently of the nominal trajectory.

Here, we wish to ﬁnd a robust controlled-invariant set in
the joint state space of the vehicle and a tracking reference
that may “maneuver” arbitrarily over time, and in the pres-
ence of an unknown bounded disturbance. Taking a worst-
case approach, the tracking reference can be viewed as a
virtual evader vehicle that is optimally avoiding the actual
vehicle to enlarge the tracking error. We therefore can model
trajectory tracking as a pursuit-evasion game in which the
actual vehicle is playing against the coordinated worst-case
action of the virtual vehicle and the disturbance. In general,
this game will be governed by dynamics of the form:

˙x = f (t, x, u, d),
˙xr = f (t, xr, ur, 0),
u ∈ U, ur ∈ U p, d ∈ D,
t ∈ [0, T ].

(20)

Given an error bound E(xr,i) on the tracking error e = x−
xr, we deﬁne the target set T for this reachability problem to
be the set of joint conﬁgurations where this bound is violated:
T = {(x, xr,i) : x (cid:54)∈ E(xr,i)}. In this case, the BRS V(t)
represents the set of states from which the vehicle may be
driven to violate the tracking error bounds, outside of E(xr,i).

With analogous deﬁnitions as those in Section III, V(t)
can be characterized as the negative region of the solution
V to a simpler case of (6):

min(cid:8)DtV (t, z) + H (t, z, DzV ) , l(t, z) − V (t, z)(cid:9) = 0,

t ∈ [0, T ],
V (T, z) = l(T, z),

H (t, z, p) = max

u∈U min
ur∈U p

d∈D p · fz(t, z, u, ur, d),

min

then the tracking error e at ﬂight

(21)
where for compactness of notation we denote z = (x, xr)
and fz(t, z, u, ur, d) = [f (t, x, u, d), f (t, xr, ur, 0)]. The
complement of V(0) is the maximal robust controlled-
invariant set in T c. Letting T → ∞ we obtain the inﬁnite
controlled-invariant set, which we denote by Ω. If this set
is nonempty,
time is
guaranteed to remain within E provided that the vehicle starts
inside Ω and subsequently applies the feedback control law
implicitly deﬁned in (21):
κ(x, xr) ∈ arg max

ur∈U p,d∈D DzV (0) · fz(t, z, u, ur, d).
(22)
In cases where the error dynamics are independent of the
absolute state as in (23), Ω can be computed in the state
space of the tracking error e to produce a feedback control
law that also only depends on e, which signiﬁcantly reduces
the problem dimensionality.

u∈U min

˙e = fe(t, e, u, ur, d),
u ∈ U, ur ∈ U p, d ∈ D,
t ∈ [0, T ],

(23)

Given E, we can guarantee that Qi will reach its target Ti
if E ⊂ Ti; thus, in the path planning phase, we modify Ti to
be {x : E(x) ⊆ Ti}.
Finally, since each vehicle Qi can only be guaranteed to
stay within E(xr,i), we must make sure at any given time,
the error bounds of Qi and Qj, E(xr,i) and E(xr,j), do not
intersect. This can be done by choosing the induced obstacle
to be the Minkowski sum of the error bounds:

Oj
i (t) = E(0) + E(xr,j(t))

(24)

where the 0 denotes the origin.

V. NUMERICAL SIMULATIONS

We demonstrate our proposed methods using a four-
vehicle example. Each vehicle has the following simple
kinematics model:

˙px,i = vi cos θi + dx,i
˙py,i = vi sin θi + dy,i

˙θi = ωi + dθ,i,
v ≤ vi ≤ ¯v,|ωi| ≤ ¯ω,

(cid:107)(dx,i,dy,i)(cid:107)2 ≤ dr,|dθ,i| ≤ ¯dθ

(25)

where pi = (px,i, py,i) represent vehicle Qi’s position, θi
represents Qi’s heading, and d = (dx,i, dy,i, dθ,i) represent

Fig. 2: Initial conﬁguration of the four-vehicle example.

the disturbances in the three states. The disturbance bounds
are chosen as dr = 0.1 and ¯dθ = 0.2. The control of Qi
is ui = (vi, ωi), where vi is the speed of Qi and ωi is
the turn rate; both controls have a lower and upper bound.
For illustration purposes, we chose v = 0.5, ¯v = 1, ¯ω = 1;
however, our method can easily handle the case in which
these inputs differ across vehicles and cases in which each
vehicle has different dynamic models.

The initial states of the vehicles are given as follows:

1 = (−0.5, 0, 0),
x0
x0
2 = (0.5, 0, π),
3 = (−0.6, 0.6, 7π/4) ,
x0
x0
4 = (0.6, 0.6, 5π/4) .

(26)

Each of the vehicles have a target set Ti that is circular in
their position pi centered at ci = (cx,i, cy,i) with radius r:

Ti = {xi ∈ R3 : (cid:107)pi − ci(cid:107) ≤ r}

(27)

For the example shown, we chose c1 = (0.7, 0.2), c2 =
(−0.7, 0.2), c3 = (0.7,−0.7), c4 = (−0.7,−0.7) and r =
0.1. The setup of the example is shown in Fig. 2.

i

Since the joint state space of this system is intractable for
a direct application of HJ reachability theory, we repeatedly
solve (6) to compute BRSs from the targets Ti, i = 1, 2, 3, 4,
in that order, with moving obstacles induced by vehicles j =
1, . . . , i − 1. We also obtain tLDT
, i = 1, 2, 3, 4 assuming
tSTA
i = 0 without loss of generality. Note that even though
tSTA
is assumed to be same for all vehicles in this example for
i
simplicity, our method can easily handle the case in which
tSTA
i

are different for each vehicle.

For each proposed method of computing induced obsta-
cles, we show the vehicles’ entire trajectories (colored dotted
lines), and overlay their positions (colored asterisks) and
headings (arrows) at a point in time in which they are in
relatively dense conﬁguration. In all cases, the vehicles are
able to avoid each other’s danger zones (colored dashed
circles) while getting to their target sets in minimum time.
In addition, we show the evolution of the BRS over time for
Q3 (green boundaries) as well as the induced obstacles of
higher-priority vehicles (black boundaries).

-0.500.5-0.500.5Initial SetupVehicle 1Vehicle 2Vehicle 3Vehicle 4Fig. 3: Simulated trajectories in the centralized controller
method. Since the higher priority vehicles induce relatively
smaller obstacles in this case, vehicles do not deviate much
from a straight line trajectory towards their respective targets.

A. Centralized Controller

Fig. 3 shows the simulated trajectories in the situation
where a centralized controller enforces each vehicle to use
the optimal controller u∗
i (t, xi) according to (10), as de-
scribed in Section IV-A.

In this case, no vehicle appears to deviate slightly from a
straight line trajectory towards, just enough to avoid higher
priority vehicles. The deviation is small since the centralized
controller is quite restrictive, making the possible positions
of higher priority vehicles cover a small area. In the dense
conﬁguration at t = −1.0, the vehicles are close to each
other but still outside each other’s danger zones.

Fig. 4 shows the evolution of the BRS for Q3 (green
boundary), as well as the obstacles (black boundary) induced
by the higher priority vehicles Q1 (blue) and Q2 (red). The
locations of the induced obstacles at different time points
include the actual positions of Q1 and Q2 at those times,
and the size of the obstacles remains relatively small. tLDT
numbers for the four vehicles (in order) in this case are
−1.35,−1.37,−1.96 and −2.04, respectively. Numbers are
relatively close for vehicles Q1, Q2 and Q3, Q4, because
the obstacles generated by higher priority vehicle are small
and hence does not affect tLDT of the lower priority vehicles
signiﬁcantly.

i

B. Least Restrictive Control

Fig. 5 shows the simulated trajectories in the situation
where each vehicle assumes that higher priority vehicles use
the least restrictive control to reach their targets, as described
in IV-B. Fig. 6 shows the BRS and induced obstacles for Q3.
Q1 (red) takes a relatively straight path to reach its target.
From the perspective of all other vehicles, large obstacles are
induced by Q1, since lower priority vehicles make the weak
assumption that higher priority vehicles are using the least
restrictive control. Because the obstacles induced by higher
priority vehicles are so large, it is faster for lower priority
vehicles to wait until higher priority vehicles pass by than
to move around the higher priority vehicles. As a result, the

Fig. 4: Evolution of the BRS and the obstacles induced by
Q1 and Q2 for Q3 in the centralized controller method. Since
every vehicle is applying the optimal control at all times, the
obstacle sizes are relatively small.

vehicles never form a dense conﬁguration, and their trajec-
tories are all relatively straight, indicating that they end up
taking a short path to the target after higher priority vehicles
pass by. This is also indicated by low tLDT
numbers for the
four vehicles, which are −1.35,−1.97,−2.68 and −3.39,
respectively. Note that, compared to the centralized controller
method, tLDT
s decrease signiﬁcantly for all vehicles, except
Q1 for which the number does not change as it is the highest
priority vehicle, and hence need not account for any moving
obstacles.

i

i

From Q3’s (green) perspective, the large obstacles induced
by Q1 and Q2 are shown in Fig. 6 as the black boundary.
As the BRS (green boundary) evolves over time, its growth
gets inhibited by the large obstacle for a long time, from
t = −0.89 to t = −1.39. Eventually, the boundary of the
BRS reaches the initial state of the green vehicle at t =
i = −2.66.
tLDT

C. Robust Trajectory Tracking

Fig. 7 shows the vehicle trajectories in the situation
where each vehicle tracks a pre-speciﬁed trajectory and is
guaranteed to stay inside a “bubble” around the trajectory.
Fig. 8 shows the evolution of BRS and induced obstacles for
vehicle Q3. The obstacles induced by other vehicles inhibit
the evolution of the BRS, carving out thin channels, which
can be seen at t = −2.63, that separate the BRS into different

-0.500.5-0.500.5t = -1.0TargetsPositions, HeadingsDanger ZonesTrajectories-0.500.5-0.500.5t = -0.34-0.500.5-0.500.5t = -1.04-0.500.5-0.500.5t = -1.24-0.500.5-0.500.5t = -1.94TargetsInitial pos. and headingReachable setObstacleFig. 5: Simulated trajectories in the least restrictive control
method. All vehicles start moving before Q1 starts, because
the large obstacles make it optimal
to wait until higher
priority vehicles pass by, leading to a smaller tLDT.

tLDT
i

islands. One can see how these channels and islands form
by examining the time evolution of the BRS set.
numbers for the four vehicles in this case are
−1.63,−3.16,−3.63 and −2.49 respectively. In this method,
vehicles use reduced control authority for path planning
towards a reduced-size effective target set. As a result,
higher-priority vehicles tend to have higher tLDT compared
with the other two methods, as seen by tLDT
. Because of the
sacriﬁce in higher-priority vehicles’ path planning process, in
some cases the tLDT of lower priority vehicles may increase,
as evident from tLDT
for
a particular vehicle would increase or decrease compared
to the other methods, as tLDT
is increased by conservative
path planning by higher-priority vehicles, and decreased by
conservative path planning of Qi.

. Overall, it is unclear whether tLDT

4

i

1

i

VI. COMPARISON OF PROPOSED METHODS

This section brieﬂy discusses the relative advantages and
limitations of the proposed obstacle generation methods.
Each method makes a trade-off between optimality (in terms
of tLDT
) and ﬂexibility in control and disturbance rejection.

i

A. Centralized Controller

i

Given an order of priority, the vehicles will have the
relatively high tLDT
in this method since a higher-priority
vehicle maximizes its tLDT
as much as possible, while at
the same time inducing a relatively small obstacle as to
minimize its impedance towards the lower-priority vehicles.
A limitation of this method is that a centralized controller
is likely required to ensure that the optimal control is being
applied by the vehicles at all times, and hence safety.

i

B. Least Restrictive Control

This method gives more control ﬂexibility to the higher
priority vehicles, as long as the control does not push the
vehicle out of its BRS. This ﬂexibility, however, comes at
the price of having larger induced obstacle, lowering tLDT
for the lower-priority vehicles.

i

Fig. 6: Evolution of the BRS for Q3 in the least restrictive
control method. tLDT
is signiﬁcantly lower than that in the
centralized controller method (−1.96 vs. −2.68), reﬂecting
the impact of bigger induced obstacles.

3

C. Robust Trajectory Tracking

i

i

Since the obstacle size is constant over time, this method
is easier to implement from a practical standpoint. This
method also aims at striking a balance between tLDT
across
vehicles. In particular, the tLDT
of a higher priority vehicle
can be lower compared to the centralized controller method
for example, so that a lower priority vehicle can achieve a
higher tLDT, making this method particularly suitable for the
scenarios where there is no strong sense of priority among
vehicles. This method, however, is computationally tractable
when the tracking error dynamics are independent of the
absolute states, as it otherwise requires doing computation in
the joint state space of system dynamics and virtual vehicle
dynamics as deﬁned in (20).

VII. CONCLUSIONS AND FUTURE WORK

We have proposed three different methods of generating
induced obstacles in the sequential path planning method;
these three methods can be used independently across the dif-
ferent vehicles in the path planning problem. In each method,
different assumptions about the control strategy of higher-
priority are made. In all of the methods, all vehicles are guar-
anteed to successfully arrive and their respective destinations
without entering each other’s danger zones despite the worst-
case disturbance the vehicles could experience. Compared
to the work in [21], our proposed methods result in lower

-0.500.5-0.500.5t = -1.4TargetsPositions, HeadingsDanger ZonesTrajectories-0.500.5-0.500.5t = -0.39-0.500.5-0.500.5t = -0.89-0.500.5-0.500.5t = -1.39-0.500.5-0.500.5t = -2.66TargetsInitial pos. and headingReachable setObstacleFig. 7: Simulated trajectories for the robust trajectory track-
ing method.

vehicle densities so that the vehicles have enough leeway to
guarantee safety in the presence of disturbances and limited
information. Future work includes exploring methods for fast
re-planning, and making the multi-vehicle system robust to
unforeseen circumstances such as the presence of intruders.

REFERENCES

[1] B. P. Tice, “Unmanned aerial vehicles – the force multiplier of the

1990s,” Airpower Journal, 1991.

[2] W. M. Debusk, “Unmanned aerial vehicle systems for disaster relief:

Tornado alley,” in Infotech@Aerospace Conferences, 2010.

[3] Amazon.com, Inc. (2016) Amazon prime air. [Online]. Available:

http://www.amazon.com/b?node=8037720011

[4] AUVSI News. (2016) Uas aid in south carolina tornado investigation.
[Online]. Available: http://www.auvsi.org/blogs/auvsi-news/2016/01/
29/tornado

[5] BBC

Technology.
service for 2017.
technology-34704868

(2016) Google

delivery
[Online]. Available: http://www.bbc.com/news/

drone

plans

[6] Jointed Planning and Development Ofﬁce (JPDO), “Unmanned aircraft
systems (UAS) comprehensive plan – a report on the nation’s UAS
path forward,” Federal Aviation Administration, Tech. Rep., 2013.

[7] National Aeronautics and Space Administration. (2016) Challenge is
on to design sky for all. [Online]. Available: http://www.nasa.gov/
feature/challenge-is-on-to-design-sky-for-all

[8] P. Fiorini and Z. Shillert, “Motion planning in dynamic environments
using velocity obstacles,” International Journal of Robotics Research,
vol. 17, pp. 760–772, 1998.

[9] G. C. Chasparis and J. S. Shamma, “Linear-programming-based multi-
vehicle path planning with adversaries,” in Proceedings of American
Control Conference, June 2005.

[10] J. van den Berg, M. C. Lin, and D. Manocha, “Reciprocal velocity
obstacles for real-time multi-agent navigation,” in IEEE International
Conference on Robotics and Automation, May 2008, pp. 1928–1935.
[11] R. Olfati-Saber and R. M. Murray, “Distributed cooperative control
of multiple vehicle formations using structural potential functions,” in
IFAC World Congress, 2002.

[12] Y.-L. Chuang, Y. Huang, M. R. D’Orsogna, and A. L. Bertozzi, “Multi-
vehicle ﬂocking: Scalability of cooperative control algorithms using
pairwise potentials,” in IEEE International Conference onRobotics and
Automation, April 2007, pp. 2292–2299.

[13] E. N. Barron, “Differential Games with Maximum Cost,” Nonlinear

analysis: Theory, methods & applications, pp. 971–989, 1990.

[14] I. Mitchell, A. Bayen, and C. Tomlin, “A time-dependent Hamilton-
Jacobi formulation of reachable sets for continuous dynamic games,”
IEEE Transactions on Automatic Control, vol. 50, no. 7, pp. 947–957,
July 2005.

[15] O. Bokanowski, N. Forcadel, and H. Zidani, “Reachability and mini-
mal times for state constrained nonlinear problems without any con-
trollability assumption,” SIAM Journal on Control and Optimization,
pp. 1–24, 2010.

Fig. 8: Evolution of the BRS for Q3 in the robust trajectory
tracking method. As the BRS grows in time, the induced
obstacles carve out a channel. The obstacle at t = −0.63 and
t = −1.83 are induced by Q1 and the obstacle at t = −2.63
is induced by Q2. Note that a smaller target set is used to
compute the BRS to ensure that the vehicle reaches the target
set by t = 0 for any allowed tracking error.

[16] K. Margellos and J. Lygeros, “Hamilton-Jacobi Formulation for
Reach-Avoid Differential Games,” IEEE Transactions on Automatic
Control, vol. 56, no. 8, Aug 2011.

[17] J. F. Fisac, M. Chen, C. J. Tomlin, and S. S. Shankar, “Reach-avoid
problems with time-varying dynamics, targets and constraints,” in
18th International Conference on Hybrid Systems: Computation and
Controls, 2015.

[18] J. Ding, J. Sprinkle, S. S. Sastry, and C. J. Tomlin, “Reachability
calculations for automated aerial refueling,” in IEEE Conference on
Decision and Control, Cancun, Mexico, 2008.

[19] H. Huang, J. Ding, W. Zhang, and C. Tomlin, “A differential game
approach to planning in adversarial scenarios: A case study on
capture-the-ﬂag,” in Robotics and Automation (ICRA), 2011 IEEE
International Conference on, 2011, pp. 1451–1456.

[20] A. M. Bayen, I. M. Mitchell, M. Oishi, and C. J. Tomlin, “Aircraft
autolander safety analysis through optimal control-based reach set
computation,” Journal of Guidance, Control, and Dynamics, vol. 30,
no. 1, 2007.

[21] M. Chen, J. Fisac, C. J. Tomlin, and S. Sastry, “Safe sequential path
planning of multi-vehicle systems via double-obstacle hamilton-jacobi-
isaacs variational inequality,” in European Control Conference, 2015.
[22] E. A. Coddington and N. Levinson, Theory of ordinary differential

equations. Tata McGraw-Hill Education, 1955.

[23] M. G. Crandall and P.-L. Lions, “Viscosity solutions of Hamilton-
Jacobi equations,” Transactions of the American Mathematical Society,
vol. 277, no. 1, pp. 1–42, 1983.

[24] A. Majumdar and R. Tedrake, Algorithmic Foundations of Robotics X:
Proceedings of the Tenth Workshop on the Algorithmic Foundations
of Robotics.
Springer Berlin Heidelberg, 2013, ch. Robust Online
Motion Planning with Regions of Finite Time Invariance, pp. 543–
558.

-0.500.5-0.500.5t = -2.4TargetsPositions, HeadingsDanger ZonesTrajectories-0.500.5-0.500.5t = -0.63-0.500.5-0.500.5t = -1.83-0.500.5-0.500.5t = -2.63-0.500.5-0.500.5t = -3.61TargetsInitial pos. and headingReachable setObstacle