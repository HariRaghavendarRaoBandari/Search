6
1
0
2

 
r
a

M
5

 

 
 
]
h
p
-
t
n
a
u
q
[
 
 

1
v
2
5
7
1
0

.

3
0
6
1
:
v
i
X
r
a

Quantum Information and Computation, Vol. 0, No. 0 (2003) 000–000
c(cid:13) Rinton Press

Learning quantum annealing

Department of Mathematics and Physics, Wichita State University

Wichita, KS 67260-0033,USA

E.C. Behrman

Department of Aerospace Engineering, Wichita State University

Wichita, KS 67260-0044, USA

J.E. Steck

We propose and develop a new quantum algorithm, whereby a quantum system can learn
to anneal to a desired ground state. We demonstrate successful learning to produce an
entangled state for a two-qubit system, then bootstrap to three-, four-, ﬁve- and six-
qubits; the amount of additional learning necessary decreases. Because of this decrease
we expect the method to be easily generalizeable to many-qubit systems. Because quan-
tum neural networks are robust to noise and decoherence we expect our method to be
readily implemented experimentally.

Keywords: quantum algorithm, entanglement, dynamic learning, annealing, bootstrap,
quantum control

Communicated by: to be ﬁlled by the Editorial

1 Introduction

The use and manipulation of entanglement is central to the exploitation of quantum compu-
tation (see, e.g., [1-5]). In previous work, we have developed an entanglement indicator[6],
corrected it for anomalous oscillation[7], and extended it to multiqubit systems[8, 9]. As the
size of the system grows the amount of additional training necessary diminishes, a kind of
“bootstrapping” eﬀect[10, 11], unlike other methods which require knowledge or reconstruc-
tion of the density matrix [1, 2, 3]; thus, our method potentially may be of general applicability
even to large-scale quantum computers, once they are built. We have also shown[12] that the
indicator is robust to noise and decoherence.

Commercial systems are now being built[13] of hundreds of qubits. These systems use
quantum tunneling to ﬁnd minima of energy; ﬁnding these energy minima can be mapped to
solutions of optimization problems of interest. But it is not at all clear that these systems use
the full power of quantum computing, for which entangled states are necessary[5]. Multiqubit
entanglement is common in nature but, depending on the physical setup, it is not always easy
to produce it in a controlled manner[14, 15, 16] or to maintain it[16, 17, 18, 19, 20]; clearly
it would be of great interest to have a systematic way of creating entanglement in a many-
qubit system. Here, we propose a method for doing so, based on machine learning[21, 22]
techniques.

1

2 Title . . .

2 Machine learning of annealing

We begin with the Schr¨odinger equation:

dρ
dt

=

1
i¯h

[H, ρ]

(1)

where ρ is the density matrix and H is the Hamiltonian. We consider an N-qubit system
whose Hamiltonian is

N(cid:88)

α=1

N(cid:88)

α(cid:54)=β=1

H =

Kασxα + εασzα +

ζαβσzασzβ,

(2)

where {σ} are the Pauli operators corresponding to each of the qubits, {K} are the tunneling
amplitudes, {ε} are the biases, and {ζ}, the qubit-qubit couplings. We choose the usual
“charge basis”, in which each qubit’s state is given as 0 or 1; for a system of N qubits there
are 2N states, each labelled by a bit string each of whose numbers corresponds to the state of
each qubit, in order. The amplitude for each qubit to tunnel to its opposing state (i.e., switch
between the 0 and 1 states) is its K value; each qubit has an external bias represented by its
ε value; and each qubit is coupled to each of the other qubits, with a strength represented by
the appropriate ζ value. Note that, for example, the operator σxA = σx ⊗ I ... ⊗ I, where
there are (N-1) outer products, acts nontrivially only on qubit A.
The parameters {K, ε, ζ} direct the time evolution of the system in the sense that, if one
or more of them is changed, the way a given state will evolve in time will also change,
because of Eqs. (1)-(2). We use a quantum machine learning paradigm using quantum
backpropagation[21] in time[22] to learn these parameter values to produce desired quantum
states. In previous work[6], via machine learning, we successfully mapped an entanglement
witness, on the system’s initial state, to a measurement at a ﬁnal time tf . Here, we wish
instead to direct the time evolution while at the same time performing quantum annealing
by lowering the temperature. Because the temperature is a measure of the energy available
to the system, with appropriately learned parameters the system will anneal to the desired
state. This is a kind of quantum control[23].

Formally, the solution to Eq.(1) is given, for constant H, by
ρ(t) = exp(iHt/¯h)ρ(0) exp(−iHt/¯h).

(3)
We analytically continue the Schr¨odinger equation to imaginary time, t → iβ¯h, to ﬁnd the
density matrix as a function of temperature:

ρ(β) = exp(−βH)ρ(0) exp(βH),

(4)

where β is the inverse temperature in units of Boltzmann’s constant. We now split the depen-
dence using the interaction representation: thinking of the two parts of the time evolution as
being due to two parts of a joint Hamiltonian, one in real and one in imaginary time. Thus
we integrate the Schr¨odinger equation numerically in real time to ﬁnd the time evolution of
ρS(t), the solution to Eq.(3), and ﬁnd the temperature dependence with

ρI (t, β) = exp(−βH)ρS(t) exp(βH).

(5)

The above is straightforward. To implement our machine learning technique, we deﬁne a

Author(s) . . .

3

Lagrangian L to be minimized as:

L =

1
2

|ρIdes − ρI (tf )|2 +

(cid:90) tf

0

λ†(t) exp(−βH)

(cid:18) ∂ρS

∂t

− i
¯h

(cid:19)

[ρS, H]

exp(βH)γ(t) dt

(6)

where the Lagrange multiplier vectors are λ†(t) and γ(t) (row and column, respectively), and
ρIdes is the density matrix for the desired ﬁnal state. We now allow the parameters {K, ε, ζ}

to vary with time; this will change Eqs. (3)-(5) by the insertion of time-ordered integrals. In
addition, we allow the inverse temperature β also to vary with time, in order to make the
time evolution process an annealing one.

We take the ﬁrst variation of L with respect to ρ, set it equal to zero, then integrate by
parts to give the following equation which can be used to calculate the vector elements of the
Lagrange multipliers (co-states) that will be used in the learning rule:

γi

∂γj
∂t

+

∂λi
∂t

γj − i
¯h

λkHkiγj +

λiHjkγk = 0

(cid:88)

(cid:88)

i
¯h

k
with the boundary conditions at the ﬁnal time tf given by

k

− [ρIdes − ρI (tf )]ji + λi(tf )γj(tf ) = 0

The gradient descent learning rule is given by

(7)

(8)

(9)

(10)

for each weight parameter w, where η is the learning rate and

∂L
∂w

wnew = wold − η
(cid:26)(cid:90) tf
(cid:21)

∂
∂w

(cid:20)

=

∂L
∂w

(cid:21)

λ†(t)

− i
¯h

0
∂H
∂w

∂H
∂w

− i
¯h

ρI ,

(cid:26) ∂ρI
(cid:20)(cid:20)

∂t

− i
¯h

(cid:21)

∂H
∂w

(cid:27)

(cid:27)
(cid:21)(cid:27)

[ρI , H]

γ(t)dt

β(t)

ρI ,

, H

γ(t)dt

(cid:90) tf

0

=

(cid:26) ∂

∂t

λ†(t)

(cid:20)

β(t)

ρI ,

Here, β(t), the inverse temperature, is a function of time: going from zero (at time zero) to
the desired (high) annealed inverse temperature (at tf .) For simplicity we take the dependence
to be linear. Because of the Hermiticity of the Hamiltonian, H, and of the density matrix
ρ, λiγj = λjγi and the derivative of the Lagrangian, L, with respect to the weight, w, as
given by Eq. (10), will be a real number. In addition, the two “parts” of the Hamiltonian
commute (as is not usually the case with the interaction representation!) The derivative of
the Lagrangian can also be written in terms of our earlier result[6] for zero β as

(cid:90) tf

0

(cid:26) ∂

(cid:20)

∂t

∂L
∂w

=

∂L
∂w β=0 +

β(t)λ†(t)

ρI ,

∂H
∂w

(cid:21)

(cid:20)(cid:20)
(cid:90) tf

− i
¯h

(cid:21)

∂H
∂w

(cid:20)

(cid:21)(cid:27)
(cid:21)

+

βf
tf

0

λ†(t)

ρI ,

∂H
∂w

γ(t) dt.

ρI ,

, H

γ(t) dt

(11)

Note that the ﬁrst correction term is of the same form as the original, but with the commutator
playing the role of the density matrix.

4 Title . . .

Table 1. Training data for ﬂat to Bell.

Parameter (MHz)

KA
KB
ζAB
εA
εB

Initial

1.5 × 10−3
1.5 × 10−3

0.0
0.0
0.0

βf = 2500; tf = 5000¯h; ∆t = 5¯h/2

Our method could also be called quantum system design through learning[6], as machine
learning is used to design an experimental quantum system to achieve a desired operational
result, or quantum programming, as it is a method for choosing system parameters (software)
to yield a desired result on a quantum computer.

3 Results

(cid:81)N
The large SQuID arrays are normally initialized to what we call the “ﬂat” state: a coherent
equal superposition of all basis states. In the so-called “charge” basis, this looks like ρflat =
i=1[|0(cid:105) + |1(cid:105)]i ⊗ [(cid:104)0| + (cid:104)1|]i. (For the simplest nontrivial case of two qubits, this is just a
1
2N
4 × 4 matrix of ones.) To perform large scale calculations, e.g., using Shor’s error correction,
it can be necessary to initialize the system in a fully entangled state. But how to do this?
The transformation for a two qubit state is easy - indeed a textbook exercise - but it would be
of great value to be able to automate the process, to have the system itself learn to initialize
in a fully entangled state.

We begin with the two qubit case. For this relatively simple system we trained only
the coupling parameter function ζ, setting the bias functions εA(t) = εB(t) to zero for the
entire time. In imitation of the procedure used in the DWave arrays[13], we set the tunneling
parameter KA(t) = KB(t) to a function linearly decreasing to zero, from a large initial value to
zero, during the ﬁrst part of the time evolution; see Figure 1. Training details are summarized
in Table 1. Figure 2 shows the error as a function of epoch (pass through the “training set”,
here a single “training pair” of the state of the system at the ﬁnal time and temperature
ρI (tf ), and the desired (fully entangled) ﬁnal state ρIdes.) The system is initalized to the
ﬂat state, then evolved in time by integrating the Schr¨odinger equation (Eq. (1)), using the
parameter functions {KA(t) = KB(t), εA(t) = εB(t) = 0}. ζ was initialized to be zero at all
times. We compute ρI at each timestep, using ρS from the solution to Eq. (1), ρI from Eq.
(5), and the derivatives of the Lagrangian with respect to ζ, using Eq. (10). We compute
the error, then make small adjustments to ζ so as to decrease the total error; repeating the
entire process until the error is small. As Figure 2 shows, the error approaches an asymptote
very rapidly, and is equal to 0.00158 at only 50 epochs. The trained function ζ(t) is shown in
Figure 3. Figure 4 shows the annealing of the density matrix to the desired state as a function
of time.

For the three-qubit system, we start from the trained ζ(t) function that we found for
the two-qubit system, using it for the coupling function between the qubits, for each of the
three pairs. We keep the same bias function ε = 0 and tunneling functions K for each of

Author(s) . . .

5

Fig. 1. The tunneling parameter function {KA(t) = KB(t) as a function of time. This function
was set (not trained) to decrease (linearly) to zero, so as to keep the system in the desired state
once it has annealed there.

Fig. 2. Root mean squared error for training the two-qubit system from the ﬂat state to the (fully
entangled) Bell state, as a function of epoch. The asymptotic error was 0.00158.

050010001500200025003000350040004500500000.511.5x 10−3time − hbarTunneling Parameter0510152025303540455000.050.10.150.20.25EpochRMS Error6 Title . . .

Fig. 3. Trained parameter function ζ for annealing the two-qubit system from the ﬂat state to the
(fully entangled) Bell state, as a function of time.

Fig. 4. Time evolution of (the absolute magnitude of the elements of) the density matrix ρI (t) of
the two-qubit system, for annealing from the ﬂat state to the (fully entangled) Bell state. Note
that, by symmetry, there are only three dissimilar numbers of the sixteen elements.

0500100015002000250030003500400045005000−1.5−1−0.500.51x 10−3time − hbarCoupling Parameter050010001500200025003000350040004500500000.050.10.150.20.250.30.350.40.450.5time − hbarDensity Matrixthe three qubits, and train from the ﬂat initial state to the new desired state, the GHZ state
(|000(cid:105) +|111(cid:105)). The new error as a function of epoch is shown in Figure 5. Note the change
1√
2
in scale: the error starts out quite small, because most of the training has already taken place
with the two-qubit system.

Author(s) . . .

7

Fig. 5. Root mean squared error for the additional training of three-qubit system, starting from
the trained two-qubit parameters, to go from the ﬂat state to the (fully entangled) GHZ state, as
a function of epoch. The asymptotic error was 0.000944).

Figure 6 shows the new trained coupling parameter ζ(t). Again, note the change in scale.

Figure 7 shows the time evolution of the density matrix to the desired state.

We now successively boot to four-, ﬁve-, and six-qubits, each time using the previously
trained coupling function. The RMS error for each is shown in Figures 8, 9, and 10. Note the
change of scale each time as there is progressively less and less to learn. In all cases, except
for booting from the three-qubit to the four, training takes place in fewer epochs.

The trained coupling functions are shown in Figures 11, 12, and 13. There is quite a
bit more variation in ζ(t) as the system grows in size beyond three qubits. This may be
superﬂuous, though. We found, in previous work, training for an entanglement indicator,
that the backpropagation training produced considerable high frequency ﬂuctuation, even
though a Fourier series of only one or two terms suﬃced to reproduce essentially all the
behavior necessary for the indicator[12]. Further work on the minimum necessary is ongoing.
The annealing behavior of the density matrix elements is shown in Figures 14, 15, and 16.
One of the major advantages of a neural network approach is the well-known robustness
to incomplete or damaged data. In previous work [12] we have shown that this is also true
of entanglement indicators as computed by quantum neural networks, and that the QNN
method is robust to decoherence, as well.
It is only natural to ask, what if the starting
state is not exactly the ﬂat state, but contains some superposition or admixture of other
states? As a ﬁrst test, on the two-qubit system only, we supposed only that the prepared
state has small amounts of (complex) noise in its initial density matrix. Figure 4 shows the
root-mean-squared error of a thousand ﬂat states with random noise added to the elements
of the two-qubit density matrix, then evolved under the trained parameter functions to the

0510152025303540455000.0050.010.0150.020.025EpochRMS Error8 Title . . .

Fig. 6. Trained parameter function ζ for annealing the three-qubit system, from the ﬂat state to
the (fully entangled) GHZ state, as a function of time.

Fig. 7. Time evolution of (the absolute magnitude of the elements of) the three-qubit density
matrix ρI (t) for annealing from the ﬂat state to the (fully entangled) Bell state.

0500100015002000250030003500400045005000−12−10−8−6−4−202468x 10−4time − hbarCoupling Parameter050010001500200025003000350040004500500000.050.10.150.20.250.30.350.40.450.5time − hbarDensity MatrixAuthor(s) . . .

9

Fig. 8. Root mean squared error for the additional training of the four-qubit system, starting
from the trained parameters for the three-qubit system, to evolve from the ﬂat state to the (fully
entangled) GHZ state, as a function of epoch. The asymptotic error was 0.0009537.

Fig. 9. Root mean squared error for the additional training of the ﬁve-qubit system, starting
from the trained parameters for the four-qubit system, to evolve from the ﬂat state to the (fully
entangled) GHZ state, as a function of epoch. The asymptotic error was 0.0004119.

02040608010012014016018020000.0050.010.0150.020.0250.030.0350.040.0450.05EpochRMS Error0510152025303540455000.0050.010.0150.020.025EpochRMS Error10 Title . . .

Fig. 10. Root mean squared error for the additional training of the six-qubit system, starting
from the trained parameters for the ﬁve-qubit system, to evolve from the ﬂat state to the (fully
entangled) GHZ state, as a function of epoch. The asymptotic error was 0.002576.

Fig. 11. Trained parameter function ζ for annealing the four-qubit system from the ﬂat state to
the (fully entangled) GHZ state, as a function of time.

024681012141618202345678910x 10−3EpochRMS Error0500100015002000250030003500400045005000−1−0.500.511.52x 10−3time − hbarCoupling ParameterAuthor(s) . . .

11

Fig. 12. Trained parameter function ζ for annealing the ﬁve-qubit system from the ﬂat state to
the (fully entangled) GHZ state, as a function of time.

Fig. 13. Trained parameter function ζ for annealing the six-qubit system from the ﬂat state to the
(fully entangled) GHZ state, as a function of time.

0500100015002000250030003500400045005000−1−0.500.511.5x 10−3time − hbarCoupling Parameter0500100015002000250030003500400045005000−1−0.500.511.522.5x 10−3time − hbarCoupling Parameter12 Title . . .

Fig. 14. Time evolution of (the absolute magnitude of the elements of) the four-qubit density
matrix ρI (t) for annealing from the ﬂat state to the (fully entangled) GHZ state.

Fig. 15. Time evolution of (the absolute magnitude of the elements of) the ﬁve-qubit density
matrix ρI (t) for annealing from the ﬂat state to the (fully entangled) GHZ state.

050010001500200025003000350040004500500000.050.10.150.20.250.30.350.40.450.5time − hbarDensity Matrix050010001500200025003000350040004500500000.050.10.150.20.250.30.350.40.450.5time − hbarDensity MatrixAuthor(s) . . .

13

Fig. 16. Time evolution of (the absolute magnitude of the elements of) the six-qubit density matrix
ρI (t) for annealing from the ﬂat state to the (fully entangled) GHZ state.

annealed, ﬁnal state. Unsurprisingly the maximum rms error is approximately linear in noise
magnitude, but, interestingly, the slope is less than one, which means that the QNN is robust
to small amounts of both decoherence and noise. So, for example, if ﬁve percent total error
in the Bell state can be tolerated, the size of the total errors in the initial state can be no
larger than about ﬁve percent; however, if ten percent total ﬁnal error can be tolerated, as
much as eighteen percent noise can be allowed.

Fig. 17. Root mean squared error for 1000 randomly generated states of the two-qubit system,
annealed from ﬂat state with random complex noise to the Bell state, as a function of total noise
magnitude.

050010001500200025003000350040004500500000.050.10.150.20.250.30.350.40.450.5time − hbarDensity Matrix00.10.20.30.40.500.050.10.150.20.250.30.35noise magnitudeError14 Title . . .

4 Conclusions

We have shown that for a multi qubit system it is possible systematically to ﬁnd parameters
such that the system anneals reproduceably to a fully entangled state, a kind of quantum
control. We have also shown that it is possible to “bootstrap” from a smaller system to a
larger one, using the knowledge of the previously learned parameter functions.
In general
the amount of additional training diminishes with increasing size, which raises hopes for the
applicability of our technique to systems even of thousands of qubits. The exception was in
the training from three qubits to four. We are not sure of the reason for the discrepancy but
are continuing to investigate. It may have simply to do with symmetry reasons; at any rate,
it seems to be less of an issue as the number of qubits increases.

Currently we are working to tailor our annealing process speciﬁcally to the DWave setup,
for which the changes to the coupling parameters are restricted to a single, linear, function.
Preliminary results are very encouraging: just as with our previous work on entanglement
indicators[12], it seems that much of the variation that straightforward training produced in
the coupling is unnecessary. We are also looking at noise and decoherence eﬀects for systems
of more than two qubits.

Acknowledgements

We are grateful for illuminating discussions with Adrian Keister and Nam Nguyen of WSU,
and with Trevor Lanting and Murray Thom of DWave.

1. C.H. Bennett, D.P. DiVincenzo, J.A. Smolin, and W.K. Wootters (1996), Mixed-state entanglement

and quantum error correction, Phys. Rev. A 54, pp. 3824-3851.

2. W.K. Wootters (1998), Entanglement of formation of an arbitrary state of two qubits , Phys. Rev.

Lett. 80, pp. 2245-2248.

3. D.M. Greenberger, M.A. Horne, and A. Zeilinger (1989), in Bell’s Theorem and the Conception

of the Universe, M. Kafatos, ed. , Kluwer Acdemic (Dordrecht), p 107.

4. V. Vedral, M.B. Plenio, M.A. Rippin, and P.L. Knight (1997), Quantifying entanglement, Phys.
Rev. Lett. 78, pp. 2275-2279; V Vedral and M.B. Plenio (1998), Entanglement measures and
puriﬁcation procedures, Phys. Rev. A 57, pp. 1619-1633; L. Henderson and V. Vedral (2001),
Classical, quantum and total correlations, J. Phys. A 34, pp. 6899-6905.

5. M.A. Neilsen and I.L. Chuang (2000), Quantum Computation and Quantum Information, Cam-

bridge University Press.

6. E.C. Behrman, J.E. Steck, P. Kumar, and K.A. Walsh (2008), Quantum algorithm design using

dynamic learning, Quantum Information and Computation 8, pp. 12-29.

7. E.C. Behrman, R.E.F. Bonde, J.E. Steck, and J.F. Behrman (2014), On the correction of anoma-
lous phase oscillation in entanglement witnesses using quantum neural networks, IEEE Transac-
tions on Neural Networks and Learning Systems 25 (9), pp.1696-1703.

8. E.C. Behrman and J.E. Steck (2011), Dynamic learning of pairwise and three-way entanglement, in
Proceedings of the Third World Congress on Nature and Biologically Inspired Computing (NaBIC
2011) Salamanca, Spain, October 19-21, 2011. (Institute of Electrical and Electronics Engineers).
9. E.C. Behrman and J.E. Steck (2013), Multiqubit entanglement of a general input state, Quantum

Information and Computation 13, pp. 36-53.

10. B. Efron and R.J. Tibshirani (1994), An Introduction to the bootstrap. Boca Raton, FL: Chapman

and Hall/CRC.

11. P.D. Wasserman (1993), Advanced Methods in Neural Computing. New York: Van Nostrand Rein-

hold.

12. E.C. Behrman, N.H. Nguyen, J.E. Steck, and M. McCann (2016), Quantum neural computation of
entanglement is robust to noise and decoherence, in Quantum Inspired Computational Intelligence:

Author(s) . . .

15

Research and Applications. Morgan Kaufmann/Elsevier (to appear).

13. V.N. Smelyanskiy, E.G. Rieﬀel, S.I. Knysh, C.P. Williams, M.W. Johnson, M.C. Thom, W.G.
Macready, and K.L. Pudenz (2012), A near-term quantum computing approach for hard computa-
tional problems in space exploration, arXiv:quant-ph/1204.2821v2

14. S. B. Papp, K. S. Choi, H. Deng, P. Lougovski, S. J. van Enk and H. J. Kimble (2009), Character-
ization of Multipartite Entanglement for One Photon Shared Among Four Optical Modes, Science
324, 764.

15. T.Sh. Iskhakov, I.N. Agafonov, M.V. Chekhova, and G. Leuchs (2012) Polarization-entangled light

pulses of 105 photons, Phys. Rev. Lett. 109, 150502.

16. S-Y. Huang, H-S. Goan, X-Q. Li, and G.J. Milburn (2013), Generation and stabilization of a

three-qubit entangled W state in circuit QED via quantum feedback control, arXiv: 1311.6321v1.

17. J. Novotny, G. Alber, and I. Jex (2011), Entanglement and decoherence: fragile and robust entan-

glement, Phys. Rev. Lett. 107, 090501.

18. S.C. Hou, X.L. Huang, and X.X. Yi, Suppressing decoherence and improving entanglement by
quantum-jump-based feedback control in two-level systems, Physical Review A 82, 012336 (2010).
19. M-L. Hu and H. Fan (2012), Robustness of quantum correlations against decoherence,Annals of

Physics 327, 851-860 (2012).

20. L. Xiang-Ping, F. Mao-Fa, F. Jian-Shu, and Z. Qian-Quan (2014) Preserving entanglement and
the ﬁdelity of three-qubit quantum states undergoing decoherence using weak measurement, Chin.
Phys. B 23, 020304.

21. Yann le Cun (1988), A theoretical framework for back-propagation in Proc. 1998 Connectionist
Models Summer School, D. Touretzky, G. Hinton, and T. Sejnowski, eds., Morgan Kaufmann,
(San Mateo), pp. 21-28.

22. Paul Werbos (1992), in Handbook of Intelligent Control, Van Nostrand Reinhold, pp. 79-80 and

339-344.

23. M. Shapiro and P. Brumer (2012), Quantum Control of Molecular Processes. Singapore: Wiley.

