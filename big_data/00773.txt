6
1
0
2

 
r
a

 

M
5
1
 
 
]

.

C
O
h
t
a
m

[
 
 

2
v
3
7
7
0
0

.

3
0
6
1
:
v
i
X
r
a

Tight LP Approximations for the Optimal Power

Flow Problem

Sleiman Mhanna

Gregor Verbiˇc

Archie C. Chapman

School of Electrical and Information Engineering,

The University of Sydney

Sydney, Australia

{sleiman.mhanna,gregor.verbic,archie.chapman}@sydney.edu.au

Abstract—DC power ﬂow approximations are ubiquitous in
the electricity industry. However, these linear approximations
fail to capture important physical aspects of power ﬂow, such
as the reactive power and voltage magnitude, which are crucial
in many applications to ensure voltage stability and AC solution
feasibility. This paper proposes two LP approximations of the
AC optimal power ﬂow problem, founded on tight polyhedral
approximations of the SOC constraints, in the aim of retaining
the good lower bounds of the SOCP relaxation and relishing
the computational efﬁciency of LP solvers. The high accuracy
of
the two LP approximations is corroborated by rigorous
computational evaluations on systems with up to 9241 buses and
different operating conditions. The computational efﬁciency of
the two proposed LP models is shown to be comparable to, if
not better than, that of the SOCP models in most instances. This
performance is ideal for MILP extensions of these LP models
since MILP is computationally more efﬁcient than MIQCP.

Index Terms—LP approximations, convex relaxations, optimal

power ﬂow, second-order cone programming.

NOTATION

θ∆
ij

∆
ij

θ

θshift
ij

τij

yij
ℑ {•}
ℜ {•}
•/•
|•|
•∗
• (cid:23)

Lower limit of the difference of voltage angles at
buses i and j.
Upper limit of the difference of voltage angles at
buses i and j.
Phase shift (Radians) of phase shifting trans-
former connected between buses i and j (θshift
ij =
0 for a transmission line).
Tap ratio magnitude of phase shifting transformer
connected between buses i and j (τij = 1 for a
transmission line).
Series admittance (p.u.) in the π-model of line ij.
Imaginary value operator.
Real value operator.
Minimum/maximum magnitude operator.
Magnitude operator/Cardinality of a set.
Conjugate operator.
Matrix inequality sign in the positive semideﬁnite
sense.

A. Input data and operators

B. Decision variables

B
Bi
bsh
ij

c0g
i

c1g
i

c2g
i

G

i
L

Lt

Set of buses in the power network.
Set of buses connected to bus i.
Shunt susceptance (p.u.) in the π-model of line
ij.
Constant coefﬁcient ($) term of generator g’s cost
function.
Coefﬁcient ($/MW) of the linear term of genera-
tor g’s cost function.
Coefﬁcient ($/MW2) of the quadratic term of
generator g’s cost function.
Set of all generators (g, i) in the power network
such that g is the generator and i is the bus
connected to it.
Imaginary unit.
Set of all transmission lines ij where i is the
“from” bus.
Set of all transmission lines ij where i is the “to”
bus.

P d

i /Qd

i Active/reactive power demand (MW/MVAr) at

Sij

bus i.
Apparent power rating (MVA) of line ij.

P g
i /Qg

i Active/reactive power (MW/MVAr) generation

of generator g at bus i.

Pij /Qij Active/reactive power (MW/MVAr) ﬂow along

Vi

θi

transmission line ij.
Complex phasor voltage (p.u.) at bus i (Vi =
|Vi| ∠θi).
Voltage angle (Radians) at bus i.

I. INTRODUCTION

The alternating current (AC) power ﬂow equations, which
model the steady-state physics of power ﬂows, are the linch-
pins of a broad spectrum of optimization problems in electrical
power systems. Unfortunately, these nonlinear equations are
the main source of nonconvexity in these problems and are
notorious for being extremely challenging to solve using
global nonlinear programming (GNLP) solvers. Therefore, the
research community has focused on improving interior-point
based nonlinear optimization methods to compute feasible
solutions efﬁciently [1], [2]. However, these methods only
guarantee local optimality and therefore provide no bounds
on the optimal solution.

Due to these challenges, the electricity industry resorted
to two main approaches for ﬁnding a good tradeoff between
computational complexity and quality of lower bound. The
ﬁrst approach consists of methods for approximating the
power ﬂow equations, such as the direct current optimal
power ﬂow (DC OPF). The DC OPF exploits some physical
properties of power ﬂows in typical power systems, such as
small bus voltage magnitude ranges and small bus voltage
angle differences, to approximate the AC OPF by a linear
program (LP). Under normal operating conditions and some
adjustments of the lines losses, the DC OPF can approximate
the AC active power ﬂow equations with reasonable accuracy
[3]. Moreover, the DC OPF can be extended to a mixed-integer
linear programming (MILP) model to suit a wide variety of
optimization applications in power system operations such as
optimal transmission switching (OTS), capacitor placement,
transmission and distribution network expansion planning,
optimal feeder reconﬁguration, power system restoration, and
vulnerability analysis, to name a few. In summary, the DC
OPF is particularly attractive because it leverages the high
computational efﬁciency of LP and MILP solvers. On the
downside, the DC OPF fails to capture important physical
aspects of power ﬂow, such as the reactive power and voltage
magnitude, which are crucial in many applications to ensure
voltage stability and AC power ﬂow feasibility. Additionally,
the accuracy and feasibility of the DC OPF under congested
or unstable operating conditions are questionable. For these
reasons, the DC OPF can return solutions that are infeasible
in the original space and is proven to be inadequate in
applications such as optimal transmission switching [4], [5].
The second, more recent approach consists of developing
computationally efﬁcient convex relaxations. In particular, the
second-order cone programming (SOCP) and the semideﬁnite
programming (SDP) relaxations have garnered considerable
attention in the electricity industry. The increased interest in
this line of research stems from the fact that the SDP relaxation
is proven to be exact (i.e. yields a zero optimality gap) on a
variety of case studies [6]. However, in many practical OPF
instances, the SDP relaxation yields inexact solutions [7], [8].
In these scenarios, an AC feasible solution cannot be recovered
from the SDP relaxed solution. The SDP relaxation can be
strengthened by solving a hierarchy of moment relaxations at
the cost of larger SDP problems [9], [10]. The main drawback
of the SDP relaxation is that it cannot be readily embedded
in mixed-integer programming (MIP) models as easily as LP
models. Furthermore, mixed-integer SDP technology is still in
its infancy compared to the more mature MILP technology.

Even more recently, increased attention was given to the
computationally less demanding SOCP relaxation initially
proposed in [11]. The SOCP relaxation in its classical form
[11] is shown to be dominated by the SDP relaxation but recent
strengthening techniques [12]–[14] have shifted this paradigm.
The attractiveness of the SOCP relaxation is also due to the
fact that SOCP models can be easily extended to mixed-integer
quadratically constrained programming (MIQCP) models to
suit applications with discrete variables, mentioned earlier.

Against this background, this paper aims at narrowing the
gap between LP approximations and convex relaxations of AC
power ﬂow equations by retaining the good lower bounds of
the SOCP relaxation and relishing the computational efﬁciency
of LP solvers. In more detail, this paper proposes two LP
approximations for the OPF problem based on tight polyhedral
approximations of the second-order cone (SOC) constraints
[15]. The ﬁrst LP model is a direct LP approximation of
the classical SOCP relaxation in [11], whereas the second
LP model employs strengthening techniques inspired by [12]
which aim at preserving stronger links between the voltage
variables through convex envelopes of the polar representation.
As shown in [12], a model adopting these strengthening
techniques neither dominates nor is dominated by the SDP
relaxation. It is important to note that in this context the term
“tight” designates the high accuracy of the LP approximation
of the OPF compared to its respective parent SOCP relaxation.
This paper is not the ﬁrst attempt to approximate both active
and reactive power ﬂow equations in the OPF problem. The
LP approximation in [16] is based on outer approximations
which are strengthened by incorporating several different types
of valid inequalities. However, both the computation time and
the accuracy of the approximation seem to vary arbitrarily with
system size. In contrast to [16], the accuracy of the LP models
in this paper does not exceed 10−2% in the worst case and the
computational efﬁciency is comparable to, if not better than,
that of the SOCP models in most test instances.

In summary, the contributions of this paper are twofold:
• The two LP models are tested on instances from MAT-
POWER [2] and NESTA v0.5.0 archive [17] with up
to 9241 buses and different operating conditions and
are shown to consistently produce high approximation
accuracies in the order of 10−4% on average.

• Numerical results show that the computational efﬁciency
of the LP models is comparable to, if not better than, that
of the SOCP models in most instances. This performance
is ideal for MILP extensions of these LP models since
MILP is computationally more efﬁcient than MIQCP.

The paper progresses with the OPF problem formulation
in Section II, followed by a review of the different types
of relaxations proposed in the literature in Section III. Sec-
tions IV and V describe the polyhedral formulations of the
OPF problem and Section VI showcases the numerical results.
Finally, the paper concludes in Section VII.

II. OPTIMAL POWER FLOW PROBLEM

In a power network, the OPF problem consists of ﬁnding the
most economic dispatch of power from generators to satisfy
the load at all buses in a way that is governed by physical laws,
such as Ohm’s Law and Kirchhoff’s Law, and other technical
restrictions, such as transmission line thermal limit constraints.
More speciﬁcally, the OPF problem is written as in Model 1,
where Tij = τij eiθshift
is the complex tap ratio of a phase
shifting transformer.

ij

Model 1: AC OPF

minimize X(g,i)∈G

subject to
P g
i ≤ P g

c2g

i (P g

i )2 + c1g

i (P g

i ) + c0g

i

(1a)

(1b)

(1c)

(1d)

(1e)

Qij,

(g, i) ∈ G

i ∈ B

ij ∈ L

Qg

i − Qd

i = Xj∈Bi

i ∈ B

ij

Tij(cid:27) ℜ(cid:8)ViV ∗
j (cid:9)

ij ∈ L

(1f)

ij

Tij(cid:27) ℜ(cid:8)ViV ∗
j (cid:9)

ij ∈ L

(1g)

ji(cid:27) ℜ {Vj V ∗

i }

ij ∈ L

(1h)

ji
T ∗

ji(cid:27) ℜ {Vj V ∗

i }

ij ∈ L

ij ∈ L ∪ Lt.

(1i)

(1j)

≤ Qg

g
i ≤ Q
i ,

g

i

i , Qg

i ≤ P
V i ≤ |Vi| ≤ V i,
θ∆
ij ≤ θi − θj ≤ θ
P g
i − P d

∆
ij ,

ij

bsh
ij
2

bsh
ij
2

y∗
ij − i

y∗
ij − i

Pij , X(g,i)∈G

i = Xj∈Bi
X(g,i)∈G
Pij = ℜ
|Tij|2 
|Vi|2 − ℜ(cid:26) y∗


+ℑ(cid:26) y∗
Tij(cid:27) ℑ(cid:8)ViV ∗
j (cid:9) ,
Qij = ℑ
|Tij|2 
|Vi|2 − ℑ(cid:26) y∗


−ℜ(cid:26) y∗
Tij(cid:27) ℑ(cid:8)ViV ∗
j (cid:9) ,
Pji = ℜ(y∗
2 ) |Vj|2 − ℜ(cid:26) y∗
+ℑ(cid:26) y∗
Qji = ℑ(y∗
−ℜ(cid:26) y∗
qP 2

2 ) |Vj|2 − ℑ(cid:26) y∗

ji(cid:27) ℑ {VjV ∗

ji(cid:27) ℑ {VjV ∗

ij ≤ Sij ,

ij + Q2

ji − i

ji − i

ji
T ∗

ji
T ∗

ji
T ∗

i } ,

i } ,

bsh

bsh

ji

ji

ij

Problem (1) is a nonconvex nonlinear optimization problem
that is proven to be NP-hard [6]. Therefore, solving large-
scale instances of this problem to optimality is intractable.
Consequently, applying interior-point methods (IPM) [2] to
this problem provides no bounds or guarantees on the opti-
mality of the solution, which incited researchers to channel
considerable effort on convex relaxation methods.

The next section presents two of the most extensively
studied relaxations of problem (1), namely, the SDP and the
SOCP relaxations.

III. THE SDP AND SOCP RELAXATIONS

The SDP relaxation was ﬁrst introduced in [18] and later
formalized in [6]. An equivalent formulation of problem (1),
described in [6], starts by setting
V1V ∗
2
|V2|2
...

|V1|2
V2V ∗
1

W =





(2)

...



V|B|V ∗

1

V|B|V ∗

2

· · · V1V ∗
|B|
· · · V2V ∗
|B|
...
...
(cid:12)(cid:12)V|B|(cid:12)(cid:12)
· · ·

2



and requiring that W (cid:23) 0 and rank(W ) = 1. The SDP
relaxation is then obtained by dropping the rank constraint.
The main setback of applying the SDP relaxation to very
large systems is that the matrix W is dense even when all
the data matrices are sparse. To this end, sparsity exploiting
methods have been proposed in [10], [19]–[21] to reduce the
computational burden. However, even after applying sparsity
exploiting techniques, the computational efﬁciency of current
primal-dual interior-point methods for large-scale SDP is still
substantially lower than that of state-of-the-art SOCP solvers.
Therefore, in an effort to exploit the sparsity of the power
network and leverage the higher computational efﬁciency of
SOCP solvers, [22] proposes further relaxing some selected
positive semideﬁnite (PSD) conditions in the PSD constraint
matrix W to SOC constraints [23]. The ﬁrst condition is
that every 2 × 2 principal submatrix of a PSD matrix is
also a PSD matrix. The second condition is that the positive
semideﬁniteness of each 2 × 2 symmetric matrix can be
represented by a SOC constraint. More speciﬁcally, W (cid:23) 0 is
replaced by |L| constraints of the form

|Wij |2 ≤ WiiWjj , (Wii, Wjj ≥ 0) ,

(3)
It was also observed in [22] that the resulting SOCP relaxation
(3) is tantamount to the SOCP relaxation proposed earlier in
[11] for radial networks. The SOC representation of the power
ﬂow constraints (1f)–(1i) was initially introduced in [24] as
follows:

ij ∈ L.

Wij = ViV ∗
j
ij = ViV ∗

Wij W ∗
j V ∗
|Wij |2 = WiiWjj .

(4a)
(4b)
(4c)
However, (4c) is not convex because it describes the surface
of a rotated SOC. Therefore a convex relaxation of (4c) was
proposed in [11] by relaxing the equality into an inequality as
in (3). By deﬁning

i Vj

Wii = |Vi|2 ,
W r
W i

ij = ℜ {Wij } = |Vi| |Vj| cos (θi − θj) ,
ij = ℑ {Wij } = |Vi| |Vj| sin (θi − θj) ,

(5a)
(5b)
(5c)
the SOCP relaxation of problem (1) can be written as in
Model 2, where (6d), introduced in [21], is the equivalent of
(1d).

Next, the SOCP relaxation in Model 2 can be strength-
ened by adding constraints that deﬁne tight convex en-
velopes of the nonlinear terms in (5a), (5b) and (5c) [12],
[25]. As shown in [26], the convex hull of a bilinear term

(cid:8)w = xy| (x, y) ∈ [x, x] ×(cid:2)y, y(cid:3)(cid:9) is given by

w ≥ xy + yx − xy

convM :=

w ≥ xy + yx − xy
w ≤ xy + yx − xy

w ≤ xy + yx − xy,




and the convex hull of (cid:8)w2 = x2|x ∈ [x, x](cid:9) is given by

convC := (cid:26) w2 ≥ x2

w2 ≤ (x + x) x − xx.

(7a)
(7b)
(7c)
(7d)

(8a)
(8b)

Model 2: SOCP-0

Model 3: SOCP-S

(6a)

(6b)

(6c)

(6d)

ij ∈ L

(6e)

tan(cid:16)θ∆

minimize X(g,i)∈G

c2g

i (P g

i )2 + c1g

i (P g

i ) + c0g

i

subject to (1b), (1e), (1j), (3),

V 2
i ≤ Wii ≤ V
ij ≤ W i

2
i ,

ij

∆

ij ,

ij ,

bsh
ij
2

bsh
ij
2

y∗
ij − i

y∗
ij − i

Wii − ℑ(cid:26) y∗

ij(cid:17) W r
Wii − ℜ(cid:26) y∗

ij(cid:17) W r
ij ≤ tan(cid:16)θ
Pij = ℜ
|Tij |2 


+ℑ(cid:26) y∗
Tij(cid:27) W i
|Tij |2 
Qij = ℑ


−ℜ(cid:26) y∗
Tij(cid:27) W i
Pji = ℜ(y∗
2 ) Wjj − ℜ(cid:26) y∗
−ℑ(cid:26) y∗
Qji = ℑ(y∗
+ℜ(cid:26) y∗

2 ) Wjj − ℑ(cid:26) y∗

ji(cid:27) W i

ji(cid:27) W i

ji − i

ji − i

ji
T ∗

ji
T ∗

ji
T ∗

ji
T ∗

bsh

bsh

ij ,

ij ,

ij ,

ji

ji

ij

i ∈ B

ij ∈ L

ij

Tij(cid:27) W r

ij

ij

Tij(cid:27) W r

ij

ji(cid:27) W r

ij

ji(cid:27) W r

ij

ij ∈ L

(6f)

ij ∈ L

(6g)

ij ∈ L.

(6h)

x2

x2

(9a)

xc ≤ 1 −

1 − cos (x)

xc ≥ cos (x) .

{xs = sin(x)|x ∈ [x, x]} are given by

Under the assumption that θ∆ does not exceed the range
2(cid:1),1 convex envelopes of {xc = cos(x)|x ∈ [x, x]} and
(cid:0)− π
2 , π
convCc := 




2(cid:19) + sin(cid:18) x
2(cid:19) − sin(cid:18) x

xs ≤ cos(cid:18) x
xs ≥ cos(cid:18) x

2(cid:19) (10a)
2(cid:19) .

The convex envelopes (7)–(10) are introduced in [12], [25]
to preserve stronger links between the complex phasor voltage
variables. Using these, the strengthened SOCP relaxation of
problem (1) is shown in Model 3.

2(cid:19)(cid:18)x −
2(cid:19)(cid:18)x +

convCs :=

(10b)

(9b)

x

x

The next section describes how to tightly approximate

Models 2 and 3 by LPs.

IV. POLYHEDRAL FORMULATIONS

minimize X(g,i)∈G

c2g

i (P g

i )2 + c1g

i (P g

i ) + c0g

i

subject to (1b)–(1e), (1j), (3), (6c)–(6h),

convC(cid:0)Wii = |Vi|2(cid:1) ,

convCc (xc,ij = cos (θi − θj )) ,
convCs (xs,ij = sin (θi − θj )) ,
convM(wij = |Vi| |Vj|),
convM(W r
ij = wij xc,ij),
convM(W i
ij = wij xs,ij),

i ∈ B
ij ∈ L
ij ∈ L
ij ∈ L
ij ∈ L

ij ∈ L.

A. Approximation of the 3-dimensional SOC

(11a)

(11b)
(11c)
(11d)
(11e)
(11f)
(11g)
(11h)

A 3-dimensional SOC L2 is a subset of R3 deﬁned by

L2 = n(r, x0, y0) ∈ R3|px2

0 ≤ ro. One ostensible way
to approximate L2 is by a regular circumscribed m-polyhedral
cone Pm ⊆ R3, which is described by m inequalities. The
polyhedron Pm therefore contains L2, that is:

0 + y2

L2 ⊆ Pm ⊆ L2

ǫ = (cid:26)(r, x0, y0) ∈ R3|qx2

0 ≤ (1 + ǫ) r(cid:27) ,
where L2
m )−1 − 1 is the
approximation accuracy. However, this approach requires 233
linear inequalities even for a relatively modest accuracy of
10−4.

ǫ is an ǫ-relaxed L2 and ǫ = cos( π

0 + y2

As proposed by [28], the key to decreasing the number
of inequalities is to lift the approximating polyhedron into
a higher dimensional space by introducing several additional
variables and projecting it onto the 3-dimensional subspace of
the original variables (r, x0, y0). This polyhedral formulation
is modiﬁed in [15] to require fewer variables and linear in-
equalities. In more detail, for an integer k ≥ 2, let Pk ∈ R2k+3
be deﬁned as

yi+1 ≥ yi cos(

xi+1 = xi cos(

π
π
2i ), 0 ≤ i < k,
2i ) + yi sin(
π
π
2i ), 0 ≤ i < k,
2i ) − xi sin(
π
π
2i ), 0 ≤ i < k,
2i ) + xi sin(
yi+1 ≥ −yi cos(
π
π
2i ) + yk sin(
2i ).

r = xk cos(

(12a)

(12b)

(12c)

(12d)

Pk :=




As identiﬁed by [15], the projection of set Pk on the sub-
space of (r, x0, y0) is a polyhedral approximation of L2 with
accuracy ǫ = cos( π

2k )−1 − 1.

This section describes how to tightly approximate a 3-
dimensional SOC by a polyhedral set. This formulation is also
extended to approximate a 4-dimensional rotated SOC. Addi-
tionally, this section also describes a polyhedral approximation
of the cosine term.

1 In practice, θ∆ typically does not exceed ±10◦ [27].

Polyhedron Pk in (12) requires 2k + 3 variables, 2k linear
inequalities and k + 1 linear equalities. This formulation can
be reduced even further using (12a) and (12d) to replace xi
in (12b) for i = 1, . . . , k, and yk in (12c). The resulting
polyhedron now requires k + 2 variables (r, x0, y0, . . . , yk−1)
and 2k linear inequalities. Now, an accuracy of 10−4 would
require 16 inequalities and 7 additional variables (or 10
variables including the 3 original ones), i.e. k = 8.

B. Approximation of the 4-dimensional rotated SOC

The formulation in Section IV-A can be further ex-
tended to approximate a 4-dimensional rotated SOC L3
subset of R4 deﬁned by L3 =
[29], which is

a

Model 4: LP-0

N

minimize

αn + X(g,i)∈G

c1g

i (P g

i ) + c0g

i

subject to (1b), (1e), (6c)–(6h), (18),

P r

Xn=1
k(cid:0)pg2
k(cid:16)(W r
Pk(cid:16)qP 2

P r

2n−1 + pg2
ij)2 + (W i

ij + Q2

2n ≤ αn(cid:1) , n ∈ {1, . . . , N }
ij )2 ≤ WiiWjj(cid:17) ,
ij ≤ Sij(cid:17) ,

ij ∈ L ∪ Lt.

ij ∈ L

(13)

(14)

(15)

, y′

0 = r.

0 + y2

0 ≤ r1r2(cid:9). The rotated SOC L3

can also be expressed as

(cid:8)(r1, r2, x0, y0) ∈ R4|x2
r ≥ qx2
r′ ≥ q(x′

0 + y2
0,

0)2 + (y′

0)2,

r′ =

(r1 + r2)

(r1 − r2)

, r =

2

2

Now, (13) and (14) can each be approximated by Pk and
k with 2k + 6
coupled by (15) to construct a polyhedron P r
k−1(cid:1), 4k

variables (cid:0)r1, r2, x0, y0, . . . , yk−1, r, r′, x′

linear inequalities and 3 linear equalities to approximate L3.

0, . . . , y′

0, y′

C. Approximation of the square of a variable

A function of the form w2 ≥ x2 can be approximated
k as described in Section IV-B. However,
by a polyhedron P r
numerical simulations have shown that the increased accuracy
k has very little effect
of approximating (8a) by a polyhedron P r
on the accuracy of the overall solution. This stems from a
combination of two factors. The ﬁrst is the small range of
the voltage magnitude (e.g. [0.95,1.05] in practice) and the
second is that (11c) might be dominated by (3). To this end,
a simpler polyhedral approximation of (8) is constructed as
follows: l points x1, . . . , xl are selected in the interval [x, x],
which allows adding l + 1 constraints of the form

l

h,

P alt

h = {1, . . . , l} ,

w2 ≤ (x + x) x − xx.

:= (cid:26) w2 ≥ (2xh) x − x2

(16a)
(16b)
The approximation in (16) requires no additional variables,
and numerical simulations have shown that it can result in a
high overall accuracy for l = 20.

D. Approximation of the cosine

The cosine term in (5b) can be approximated by a con-
vex afﬁne set provided that θ∆ does not exceed the range

2(cid:1)1 [30]. One obvious way is to approximate the
2 , π
(cid:0)− π
quadratic term in (9a) by a polyhedron P alt
as described in
l
Section IV-C. However, since the beneﬁt of relaxing the cosine
into its convex hull becomes more prominent when θ∆ is
small, a direct approximation of the cosine can still achieve a
high accuracy under these conditions (i.e. when the domain of
the cosine function is small). In more detail, a direct polyhedral
approximation of the cosine term is constructed as follows:2
] and
s points θ∆
each cosine term cos(θ∆) is replaced with a corresponding
new variable xc, which allows adding s + 1 constraints of the
form

s are selected in the interval [θ∆, θ

1 , . . . , θ∆

∆

2The subscript ij is dropped for notational simplicity.

(20a)

(20b)
(20c)

(20d)

(20e)

(21a)

(21b)
(21c)
(21d)

(17a)

(17b)

Model 5: LP-S

N

minimize

subject to (20b), (1c), (1d), (11e)–(11h), (20c)–(20e),

P alt
P cos

s

i

c1g

i (P g

i ) + c0g

(xc,ij = cos (θi − θj)) ,

αn + X(g,i)∈G
Xn=1
l (cid:0)Wii = |Vi|2(cid:1) ,
a (cid:1)(cid:0)θ∆ − θ∆
xc ≤ − sin(cid:0)θ∆

a (cid:1)
+ cos(cid:0)θ∆
a (cid:1) ,
∆(cid:17) .
xc ≥ cos(cid:16)θ


i ∈ B
ij ∈ L.

P cos

s

:=

a = {1, . . . , s} ,

The approximation in (17) requires no additional variables,
and numerical simulations have shown that it can result in a
high overall accuracy for s = 20.

V. LP OPTIMAL POWER FLOW

Given the building blocks in Section IV, a tight LP ap-
proximation of the OPF problem is now possible. The only
remaining step is to substitute the quadratic terms in the
objective function by corresponding variables and rotated SOC
constraints. This substitution now enables leveraging the tech-
niques in Section IV to tightly approximate the quadratic terms
in the objective function by polyhedrons and thereby obtaining
a LP approximation of the OPF problem. Speciﬁcally, |G|
variables and constraints of the form

pg = qc2g

i P g
i ,

(g, i) ∈ G,

(18)

are introduced along with N = ⌊|G| /2⌋ + ⌈|G| /2 − ⌊|G| /2⌋⌉
variables αn and constraints of the form

2n,

αn ≥ p2

2n−1 + p2

(19)
Finally, the LP approximations of SOCP-0 and SOCP-S are
shown in Models 4 and 5 respectively, and their accuracy and
computational efﬁciency are evaluated in the next section.

n ∈ {1, . . . , N } .

VI. NUMERICAL EVALUATION

This section evaluates the accuracy and computational efﬁ-
ciency of the LP approximations in Models 4 and 5 as com-
pared to their respective parent SOCP relaxations in Models 2
and 3. The models are tested on standard IEEE instances
available from the IPM-based OPF solver MATPOWER [2]
as well as more challenging instances from NESTA v0.5.0

TABLE I. MODEL COMPARISON ON MATPOWER INSTANCES.

TABLE II. MODEL COMPARISON ON NESTA INSTANCES.

Optimality Gap (%)
SOCP-S

Case
118
300
1354

3375wp

9241

SOCP-0

0.25
0.15
0.09*
0.27*
2.02*

LP-0
0.25
0.15
0.08
0.26
2.01

LP-S
0.25
0.15
0.08
0.25
2.01

SOCP-0

0.19
0.50
7.72
21.61
67.44

SOCP-S

CPU time (s)
LP-0
0.87
1.70
5.76
19.24
142.20

0.75
1.78
15.08
49.61
335.53

LP-S
1.56
4.99
11.93
55.41
284.47

0.25
0.15
0.09*
0.26*
2.02*

archive [17], with k = 16 for the LP models.3 All simulations
are carried out on an Intel Core i7, 3.70GHz, 64-bit, 128GB
RAM computing platform. MATPOWER is used to solve
the original nonconvex AC model
in problem (1), which
provides an upper bound on the optimal solution. Additionally,
IPOPT [31] via the MATLAB toolbox OPTI [32] is used
to compute upper bounds on instances where MATPOWER
diverges or fails to compute a solution. These locally optimal
solutions are not shown in this paper due to space limitations.
Interested readers are instead referred to [17] for a complete
list of AC (locally optimal) solutions with the exception of
MATPOWER’s case1354pegase and case9241pegase whose
solutions are $74069.354 and $315912.848 respectively.4

On the other hand, both CPLEX 12.6 [33] and Gurobi
6.0.5 [34] are considered for solving the SOCP and the
LP models. An interesting observation is that the polyhe-
dral approximations described in Sections IV-A and IV-B,
which are the cornerstones of LP-0 and LP-S, make these
models particularly difﬁcult to solve using the primal or dual
simplex methods. This could be due to the large coefﬁcient
ranges and/or due to the irrational coefﬁcients (cos(π/2i) and
sin(π/2i)) introduced by these polyhedral formulations. For
the LP models, both CPLEX and Gurobi use their default
concurrent optimization algorithms which invoke multiple
methods (primal simplex, dual simplex and parallel barrier)
simultaneously on multiple cores, and return the optimal
solution from the method that ﬁnishes ﬁrst. Therefore, in this
scenario, only the parallel barrier method is chosen instead of
the default concurrent optimization algorithm to solve the LP
models. Ultimately, CPLEX is chosen to solve the LP models
due to a better performance of its parallel barrier method, for
these speciﬁc LP models, as compared to Gurobi’s parallel
barrier method.

By letting SAC denote the best known AC solution and
Sconv denote the solution from the corresponding relaxation,

the optimality gap can be measured as (cid:0)SAC − Sconv/SAC(cid:1)×

100. The optimality gaps and the computation times of the four
models are summarized in Tables I and II for MATPOWER
and NESTA instances respectively. It is evident from Tables I
and II that both LP-0 and LP-S tightly approximate their parent
SOCP models, SOCP-0 and SOCP-S respectively. However,
the values marked by * designate instances where the SOCP
relaxation’s solution does not match the LP one despite the
“optimal” exitﬂag or vice versa. In these cases (*), both Gurobi
and IPOPT are used to ascertain that the LP solution is in

Case

SOCP-0

Optimality Gap (%)
SOCP-0
SOCP-S
Normal Operating Conditions

LP-S

LP-0

CPU time (s)
LP-0

SOCP-S

24
29

30 as
30 fsr

30
39
57
73
89
118
162
189
300
1354

2383wp

2869

3012wp
3120sp
3375wp

9241

14
29

30 as
30 fsr

30
39
57
73
89
118
162
189
300
1354

2383wp

2869

3012wp
3120sp
3375wp

9241

14
24
29

30 as
30 fsr

30
39
57
73
89
118
162
189
300
1354

2383wp

2869

3012wp
3120sp
3375wp

9241

0.01
0.14
0.06
0.39
15.88
0.05
0.07*
0.03
0.17
2.07
4.10*
0.23
1.19*
0.10*
1.08*
0.10*
1.06*
0.58*
0.52
1.76*

1.34
0.44
4.76
45.97
1.01
2.99
0.21
14.34
20.44
44.08
1.50*
6.45*
0.84
0.58*
1.12
1.50*
0.90
3.03
0.59
2.59

0.06
11.42
34.47
9.16
0.62
5.84
0.11
0.11
8.37
0.29*
12.89
7.12*
2.25
1.26
0.10*
4.02
0.16*
2.16*
2.82*
0.53*
1.76*

0.01
0.14
0.06
0.39
15.88
0.05
0.06
0.03
0.17
2.07
4.03
0.23
1.18
0.08
1.05
0.09
1.02
0.55
0.52
1.75

1.34
0.44
4.76
45.97
1.01
2.99
0.21
14.34
20.43
44.08
1.34
5.79
0.84
0.56
1.12
1.49
0.90
3.03
0.60
2.59

0.06
11.42
34.47
9.16
0.62
5.84
0.11
0.11
8.37
0.28
12.89
7.08
2.25
1.26
0.08
4.02
0.15
2.12
2.79
0.52
1.75

0.01
0.12
0.06
0.39
15.64*
0.05
0.07*
0.03
0.17
1.72
4.00
0.22
1.18
0.09*
1.06*
0.10*
1.04*
0.58*
0.51
1.68*

0.01
0.12
0.06
0.39
15.62
0.05
0.06
0.03
0.17
1.72
4.00
0.22
1.18
0.08
1.04
0.09
1.01
0.60*
0.51
1.67

0.11
0.30
0.06
0.06
0.06
0.13
0.13
0.22
0.76
0.45
0.62
2.71
1.40
8.58
14.79
23.23
18.69
19.19
21.09
356.21

Congested Operating Conditions

1.34
0.43
4.76
45.97
1.01
2.97
0.21
12.01*
20.39
43.93
1.33
5.84*
0.82
0.56*
1.12
1.49
0.89
3.03*
0.59
2.46*

1.34
0.42
4.76
45.97
1.01
2.97
0.21
12.00
20.39
43.93
1.33
5.79
0.82
0.55
1.12
1.49
0.89
3.01
0.59
2.44

0.05
0.26
0.08
0.06
0.08
0.09
0.13
0.23
0.78
0.38
0.78
0.70
1.22
11.34
17.85
32.74
42.76
46.88
46.41
345.82

Small Angle Difference Conditions

0.06
3.88
20.58*
3.07
0.56
3.96
0.04
0.10
3.51
0.19*
8.32
6.91
2.32*
1.16
0.08*
3.00*
0.15*
1.97*
2.62*
0.49*
0.81*

0.06
3.88
20.57
3.07
0.56
3.96
0.04
0.10
3.51
0.18
8.32
6.91
2.22
1.16
0.07
2.97
0.14
1.92
2.57
0.48
0.80

0.05
0.13
0.30
0.08
0.08
0.08
0.13
0.13
0.28
0.81
0.47
0.70
1.09
1.64
9.34
19.13
27.80
21.96
25.19
24.01
321.02

0.19
0.28
0.19
0.17
0.17
0.28
0.20
0.44
0.90
0.61
0.70
2.00
1.61
7.19
21.73
28.77
19.13
21.28
23.21
112.74

0.06
0.22
0.14
0.13
0.13
0.14
0.39
0.25
0.92
0.48
0.80
1.42
1.51
6.30
20.72
30.55
21.75
26.88
21.29
158.42

0.06
0.20
0.52
0.19
0.17
0.16
0.26
0.23
0.45
0.72
0.44
0.95
2.04
1.12
5.32
36.64
19.61
22.93
20.73
24.26
161.91

0.22
1.56
0.17
0.19
0.20
0.37
0.51
1.53
6.55
1.97
1.78
2.26
4.30
23.88
45.41
79.50
43.45
44.29
58.00
588.14

0.06
1.39
0.22
0.19
0.16
0.42
0.59
2.08
7.61
1.83
1.84
2.15
2.84
31.12
47.36
108.53
87.69
87.67
135.38
855.98

0.06
0.25
1.84
0.20
0.22
0.17
0.36
0.61
2.14
6.66
2.15
1.51
2.92
3.79
31.17
65.72
80.93
76.36
101.29
91.34
615.88

LP-S

0.28
0.69
0.31
0.25
0.19
0.50
0.30
1.06
2.76
0.72
1.34
1.98
2.54
10.34
34.87
52.21
59.03
41.42
41.99
486.04

0.08
0.61
0.20
0.22
0.22
0.33
0.26
0.48
2.00
0.78
1.42
2.47
1.92
24.70
26.04
67.72
83.77
24.27
53.54
499.27

0.09
0.39
1.15
0.26
0.26
0.25
0.47
0.31
1.05
1.18
0.78
1.26
1.43
2.48
11.34
29.23
44.16
39.89
37.11
48.45
598.28

3For k = 16, Pk approximates L2 with accuracy ǫ = 1.15 × 10−9.
4Computed using IPOPT via OPTI.

fact the accurate one in most cases. This is also corroborated
by results in the literature, namely in [17] for SOCP-0 and

[12] for SOCP-S. These discrepancies are due to numerical
stability issues despite the solver reporting reaching an optimal
solution. This is not surprising since it was also pointed out in
[12] that IPOPT is numerically more stable than both CPLEX
and Gurobi’s QCP for large systems, and was ultimately used
for solving their SOCP models. However, CPLEX is still
used to solve the SOCP models in this paper for the sake
of comparison. Also, the fact that Gurobi and CPLEX are
both state-of-the-art LP (and MILP) solvers, it would not
make sense to use IPOPT to solve the LP models. In fact,
the approximation accuracy is in the order 10−5% when the
solution of both SOCP models and LP models does not run
into numerical stability issues.

Moreover, Tables I and II also show that the computational
efﬁciency of the LP models is comparable to, if not better than,
that of the SOCP models in most cases. This performance
is ideal for MILP extensions of these LP models, which
gives more edge over the MIQCP extensions of the SOCP
models because state-of-the-art MIQCP technology is still not
as mature as state-of-the-art MILP technology.

VII. CONCLUSION

Two tight LP approximations of the OPF problem, founded
on tight polyhedral approximations of the SOC constraints,
are proposed in this paper. The ﬁrst LP model is a direct
LP approximation of the classical SOCP relaxation whereas
the second LP model employs strengthening techniques that
preserve stronger links between the voltage variables through
convex envelopes of the polar representation. Rigorous com-
putational tests on systems with up to 9241 buses and dif-
ferent operating conditions have shown that the proposed LP
models consistently produce high approximation accuracies
of 10−4% on average compared to their respective parent
SOCP relaxations. Moreover, the computational efﬁciency of
the two proposed LP models is shown to be comparable to, if
not better than, that of the SOCP models in most instances,
which makes them ideal for MILP extensions knowing that
MILP technology is more mature than the MIQCP technology.
Finally, the LP models in this paper can easily be extended to
handle any convex generator cost function.

REFERENCES

[1] R. Jabr, A. Coonick, and B. Cory, “A primal-dual interior point method
for optimal power ﬂow dispatching,” Power Systems, IEEE Transactions
on, vol. 17, no. 3, pp. 654–662, Aug 2002.

[2] R. Zimmerman, C. Murillo-S´anchez, and R. Thomas, “MATPOWER:
Steady-state operations, planning, and analysis tools for power systems
research and education,” Power Systems, IEEE Transactions on, vol. 26,
no. 1, pp. 12–19, Feb 2011.

[3] B. Stott, J. Jardim, and O. Alsac, “DC power ﬂow revisited,” Power
Systems, IEEE Transactions on, vol. 24, no. 3, pp. 1290–1300, Aug
2009.

[4] C. Coffrin, H. Hijazi, K. Lehmann, and P. Van Hentenryck, “Primal
and dual bounds for optimal transmission switching,” in Power Systems
Computation Conference (PSCC), 2014, Aug 2014, pp. 1–8.

[5] M. Khanabadi, H. Ghasemi, and M. Doostizadeh, “Optimal transmission
switching considering voltage security and N-1 contingency analysis,”
Power Systems, IEEE Transactions on, vol. 28, no. 1, pp. 542–550, Feb
2013.

[6] J. Lavaei and S. Low, “Zero duality gap in optimal power ﬂow problem,”
Power Systems, IEEE Transactions on, vol. 27, no. 1, pp. 92–107, Feb
2012.

[7] D. K. Molzahn, B. C. Lesieutre, and C. L. DeMarco, “Investigation of
non-zero duality gap solutions to a semideﬁnite relaxation of the optimal
power ﬂow problem,” in System Sciences (HICSS), 2014 47th Hawaii
International Conference on.

IEEE, 2014, pp. 2325–2334.

[8] B. Kocuk, S. S. Dey, and X. A. Sun, “Inexactness of sdp relaxation and
valid inequalities for optimal power ﬂow,” IEEE Transactions on Power
Systems, vol. 31, no. 1, pp. 642–651, Jan 2016.

[9] C. Josz, J. Maeght, P. Panciatici, and J. Gilbert, “Application of the
moment-SOS approach to global optimization of the OPF problem,”
Power Systems, IEEE Transactions on, vol. 30, no. 1, pp. 463–470, Jan
2015.

[10] D. Molzahn and I. Hiskens, “Sparsity-exploiting moment-based re-
laxations of the optimal power ﬂow problem,” Power Systems, IEEE
Transactions on, vol. 30, no. 6, pp. 3168–3180, Nov 2015.

[11] R. Jabr, “Radial distribution load ﬂow using conic programming,” Power
Systems, IEEE Transactions on, vol. 21, no. 3, pp. 1458–1459, Aug
2006.

[12] C. Coffrin, H. L. Hijazi, and P. Van Hentenryck, “The QC relaxation:
Theoretical and computational results on optimal power ﬂow,” arXiv
preprint arXiv:1502.07847, 2015.

[13] B. Kocuk, S. S. Dey, and X. A. Sun, “Strong SOCP relaxations for the

optimal power ﬂow problem,” Operations Research, 2016.

[14] C. Coffrin, H. Hijazi, and P. Van Hentenryck, “Strengthening convex
relaxations with bound tightening for power network optimization,” in
Principles and Practice of Constraint Programming, ser. Lecture Notes
in Computer Science, G. Pesant, Ed. Springer International Publishing,
2015, vol. 9255, pp. 39–57.

[15] F. Glineur, “Topics in Convex Optimization: Interior-Point Methods,
Conic Duality and Approximations,” Theses, Polytechnic College of
Mons, Jan. 2001.

[16] D. Bienstock and G. Munoz, “On linear relaxations of OPF problems,”

arXiv preprint arXiv:1411.1120, 2014.

[17] C. Coffrin, D. Gordon, and P. Scott, “NESTA,

the NICTA energy
system test case archive,” CoRR, vol. abs/1411.0359, 2014. [Online].
Available: http://arxiv.org/abs/1411.0359.

[18] X. Bai, H. Wei, K. Fujisawa, and Y. Wang, “Semideﬁnite programming
for optimal power ﬂow problems,” International Journal of Electrical
Power & Energy Systems, vol. 30, no. 67, pp. 383 – 392, 2008.

[19] X. Bai and H. Wei, “A semideﬁnite programming method with graph
partitioning technique for optimal power ﬂow problems,” International
Journal of Electrical Power & Energy Systems, vol. 33, no. 7, pp. 1309
– 1314, 2011.

[20] R. Jabr, “Exploiting sparsity in SDP relaxations of the OPF problem,”
Power Systems, IEEE Transactions on, vol. 27, no. 2, pp. 1138–1139,
May 2012.

[21] R. Madani, S. Sojoudi, and J. Lavaei, “Convex relaxation for optimal
power ﬂow problem: Mesh networks,” Power Systems, IEEE Transac-
tions on, vol. 30, no. 1, pp. 199–211, Jan 2015.

[22] S. Sojoudi and J. Lavaei, “Physics of power networks makes hard
optimization problems easy to solve,” in Power and Energy Society
General Meeting, 2012 IEEE, July 2012, pp. 1–8.

[23] S. Kim, M. Kojima, and M. Yamashita, “Second order cone program-
ming relaxation of a positive semideﬁnite constraint,” Optimization
Methods and Software, vol. 18, no. 5, pp. 535–541, 2003.

[24] A. Gomez Esposito and E. Ramos, “Reliable load ﬂow technique for
radial distribution networks,” Power Systems, IEEE Transactions on,
vol. 14, no. 3, pp. 1063–1069, Aug 1999.

[25] H. Hijazi, C. Coffrin, and P. Van Hentenryck, “Convex quadratic
relaxations of mixed-integer nonlinear programs
sys-
tems,” Published online at http://www. optimization-online. org/DB
HTML/2013/09/4057. html, 2013.

in power

[26] G. McCormick, “Computability of global solutions to factorable noncon-
vex programs: Part I - convex underestimating problems,” Mathematical
Programming, vol. 10, no. 1, pp. 147–175, 1976.

[27] K. Purchala, L. Meeus, D. Van Dommelen, and R. Belmans, “Usefulness
of DC power ﬂow for active power ﬂow analysis,” in Power Engineering
Society General Meeting, 2005. IEEE, June 2005, pp. 454–459 Vol. 1.
[28] A. Ben-Tal and A. Nemirovski, “On polyhedral approximations of the
second-order cone,” Mathematics of Operations Research, vol. 26, no. 2,
pp. pp. 193–205, 2001.

[29] R. A. Jabr, “Polyhedral formulations and loop elimination constraints for
distribution network expansion planning,” IEEE Transactions on Power
Systems, vol. 28, no. 2, pp. 1888–1897, 2013.

[30] C. Coffrin and P. Van Hentenryck, “A linear-programming approxima-
tion of AC power ﬂows,” INFORMS Journal on Computing, vol. 26,
no. 4, pp. 718–734, 2014.

[31] A. W¨achter and L. T. Biegler, “On the implementation of an interior-
point ﬁlter line-search algorithm for large-scale nonlinear programming,”
Mathematical Programming, vol. 106, no. 1, pp. 25–57, 2006.

[32] J. Currie and D. I. Wilson, “OPTI: Lowering the Barrier Between Open
Source Optimizers and the Industrial MATLAB User,” in Foundations
of Computer-Aided Process Operations, N. Sahinidis and J. Pinto, Eds.,
Savannah, Georgia, USA, 8–11 January 2012.

[33] IBM ILOG CPLEX Optimizer v12.6.
[34] Gurobi Optimization Inc., “Gurobi optimizer reference manual,” 2015.

