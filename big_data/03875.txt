Towards Building an RGBD-M Scanner

Zhe Wu

DJI

Shenzhen, China
wuzhe06@gmail.com

Sai-Kit Yeung

SUTD

Singapore

Ping Tan

Simon Fraser University

Vancouver, Canada

saikit@sutd.edu.sg

pingtan@sfu.ca

6
1
0
2

 
r
a

 

M
2
1

 
 
]

V
C
.
s
c
[
 
 

1
v
5
7
8
3
0

.

3
0
6
1
:
v
i
X
r
a

Abstract

We present a portable device to capture both shape and
reﬂectance of an indoor scene. Consisting of a Kinect, an IR
camera and several IR LEDs, our device allows the user to
acquire data in a similar way as he/she scans with a single
Kinect. Scene geometry is reconstructed by KinectFusion.
To estimate reﬂectance from incomplete and noisy observa-
tions, 3D vertices of the same material are identiﬁed by our
material segmentation propagation algorithm. Then BRDF
observations at these vertices are merged into a more com-
plete and accurate BRDF for the material. Effectiveness of
our device is demonstrated by quality results on real- world
scenes.

1. Introduction

Appearance capture involves simultaneous acquisition of
both 3D shape and reﬂectance of an object or a scene. Given
such information, it is possible to produce photo-realistic
images for movies and games. Besides, it has seen wide ap-
plication in both reverse engineering and cultural heritage
preservation. Because of its importance, various methods
on this topic were proposed and some of them [17, 26, 9]
have achieved highly accurate results. However,
these
methods typically relied on giant and expensive hardware
setups, and the data acquisition process required certain
amount of expertise in this ﬁeld. Lack of both has prohib-
ited average users who wish to digitize objects or scenes in
everyday life from doing so. Another major issue of exist-
ing systems is that they are only targeted at acquisition of
single movable objects of small scale(a few centimeters in
diameter), which further prohibits their application in situ-
ations where a static and relatively large indoor scene is of
interest to the user. Thus, a novel acquisition device which
addresses these limitations is highly desirable for casual ap-
pearance capture.

Compared with appearance capture, acquisition of only
3D shape is a relatively easier task with the aid of Mi-
crosoft Kinect. Kinect is a portable and easy-to-use de-

vice which provides streams of depth images and RGB im-
ages of a scene. By making use of the depth stream, [10]
achieved real-time 3D reconstruction. Per-vertex color in-
formation can be estimated by taking the RGB stream into
account [25]. Further efforts had been made by [19, 3, 7, 22]
to improve the quality of depth images or the reconstructed
shape via photometric techniques using the RGB stream.
However, none of them is capable of revealing reﬂectance
information, which is of great importance for a computer to
better analyze and understand the scene.

In view of the above mentioned gaps in both ﬁelds, we
present in this paper a novel device for appearance cap-
ture. Speciﬁcally, we equip ASUS Xtion Pro Live (a similar
product to Kinect) with an additional infrared camera and
several infrared LEDs, which are synchronized by a cus-
tomized circuit. After acquiring data using this portable de-
vice, we ﬁrst reconstruct the 3D scene from depth images
by KinectFusion and then collect reﬂectance information of
each 3D vertex by projecting them onto the images of the
IR camera under IR illumination. While BRDF observa-
tions for each 3D vertex are sparse and severely corrupted,
we manage to group together vertices of the same material
through our proposed algorithm called BRDF segmentation
propagation. By concatenating BRDF observations of ver-
tices of the same material, we obtain a more complete and
accurate estimation of BRDF for each material in the scene.
Our system can be regarded as an RGBD-M(aterial) scan-
ner due to its capability of depth sensing and reﬂectance
sensing.

In summary, the contributions of this paper are twofold.

1. We prototype a novel appearance acquisition device
featuring portability and ease of use. Moreover, this device
is able to capture the shape and reﬂectance of a relatively
large indoor scene instead a single object;

2. We present a novel method for automatic classiﬁca-
tion of 3D vertices based solely on their sparse and cor-
rupted BRDF observations.

1

2. Related Work
Appearance Capture Appearance capture methods can be
classiﬁed into two categories based on input data. Meth-
ods in the ﬁrst category [11, 16] rely on a range sensor to
ﬁrst reconstruct a precise 3D shape. By collecting obser-
vations from an additional RGB camera and ﬁtting para-
metric BRDFs, it is possible to reconstruct the reﬂectance
information at each surface point. Methods of the second
category involve only RGB cameras to reconstruct both 3D
shapes and BRDFs. [8, 6, 2, 26] made various assumptions
on BRDFs to produce high-quality results while [9, 17]
achieved the same goal by smartly designing the acquisition
system: using either a coaxial optical scanner or spherical
harmonic illumination. The major advantage of such sys-
tems is accuracy. However, accuracy comes at the expense
of giant and complicated hardware setups in a controlled
environment. Besides, these systems worked in the visible
spectrum and required a darkroom environment when cap-
turing data. The third issue for such systems is that they
work only on small-scale objects which can be placed on
a turntable. This issue prohibits them from being used for
acquiring the appearance of an indoor scene.
Dense Scene Reconstruction 3D reconstruction has been
one of the key problems in computer vision. By using solely
RGB images, multi-view stereo methods such as [5] and
structure-from-motion(SfM) methods like [12] could pro-
duce plausible 3D shape models. The emergence of Mi-
crosoft Kinect, which has a consumer-level range sensor,
enables novel approaches [10, 24] to dense 3D reconstruc-
tion. Color information can also be estimated with an addi-
tional RGB camera [25].

3D reconstruction by Kinect cannot preserve ﬁne surface
details. This problem was tackled with the help of the RGB
camera on Kinect. [22, 7, 3, 19] either reﬁned each depth
image or reﬁned the ﬁnal triangular mesh by photometric
stereo approaches. One recent work [27] reﬁned geometry
directly on the volumetric representation of the shape in-
stead of the explicit mesh representation. While these meth-
ods achieved plausible results in revealing detailed shape
information, BRDFs, which play an important role in re-
lighting and scene understanding, remain missing.

The work closest to ours is [20], which made use of a
single Kinect for appearance capture. While both systems
feature portability and ease of use, ours is different from
that of [20] in following ways.
1. [20] worked on a single object because of the require-
ment of environmental lighting while our device works on
scenes, such as a room’s corner, thanks to its active illumi-
nation in the IR spectrum;
2. [20] assumed a parametric BRDF model while we use
a bivariate BRDF model which is deduced from reﬂectance
symmetries and is represented as a 2D table. Compared
with a parametric model, the bivariate model is applicable

(a)

(b)

Figure 1. (a) shows our prototype device; (b) shows the spectrum
of Xtion and IR LEDs
to a wider range of real-world materials.
3. [20] required illumination calibration whenever the visi-
ble illumination changes, which is done by placing a mirror
sphere into the scene, while our device does not require such
calibration;
4. [20] required a user-speciﬁed number of materials, which
is hard for average users to decide, while our system does
not require additional input from the user.

3. Hardware Description

In this section, our customized device is ﬁrst introduced.
Then we brieﬂy mention various calibrations involved be-
fore using the device. Finally, the data acquisition process
is presented to illustrate the device’s ease of use.

3.1. Device Setup

As shown in Figure 1(a), our customized device involves
three key parts. The ﬁrst one is ASUS Xtion PRO LIVE, or
Xtion for short. Similar to Microsoft Kinect, Xtion streams
depth and RGB images, whose resolutions are both 480 ×
640, at 30 fps.
The second part is an infrared(IR) camera which is sensi-
tive in the near IR spectrum(750∼1000nm). The IR camera
and Xtion are ﬁxed on opposite sides of a thick Aluminium
plate so that the baseline between them is minimized. The
resolution of the IR camera is 518 × 694 and the lens was
chosen so that the IR camera and Xtion have similar FOVs.
The third part is a set of 10 IR LEDs. These LEDs are
synchronized with the IR camera by a customized control
circuit in such a way that LEDs are switched on and off se-
quentially while the IR camera acquires an IR image when
a single LED is switched on. The frame rate for the IR
camera is around 20 fps. LEDs are ﬁxed on a circular plas-
tic plate, with eight of them evenly distributed on a circle
with a radius of 16cm, the center of which is the IR cam-
era, and the rest two found at 8cm and 28cm away from the
IR camera respectively. Such kind of lighting design is to
facilitate robust BRDF estimation.

Since Xtion’s depth camera also works in the IR spec-
trum, we carefully chose the working spectrum of IR LEDs

Figure 2. System pipeline

to minimize interference between Xtion and IR LEDs, as
shown in Figure 1(b). Besides, a bandpass ﬁlter was placed
in front of the IR camera so that it only receives light from
IR LEDs.

Both Xtion and the IR camera are connected to a desktop

computer and controlled by a data capture program.

3.2. Device Calibration

Our device was calibrated in the following aspects.
1. We assume perspective camera model for the IR cam-
era, Xtion’s depth camera and RGB camera, and we cali-
brated their intrinsic matrices. We also calibrated the rela-
tive poses between any pair out of the three;

2. An LED is considered a point light source and its

relative position to the IR camera was calibrated;

3. Vignette effect found in IR images was calibrated;
4. Relative brightness of LEDs were calibrated.
Another issue is temporal synchronization between
Xtion and the IR camera. We simply record a timestamp
for every image received by the computer. These times-
tamps will be used in Section 4.2.3.

3.3. Data Acquisition

Our device is intended to be used in a similar way as we
use a single Kinect: the user holds the device and points
it to the scene of interest. Moving around the scene, our
device generates three image streams: depth stream, RGB
stream and IR stream. These images are transmitted back to
a computer and will later be used to reconstruct the appear-
ance model of the scene.

4. Appearance Capture

Given acquired depth, RGB and IR images, our system
estimates both shape and reﬂectance of the scene. Figure 2
shows the processing pipeline of our system. In this section,
we detail each step.

4.1. Geometry Reconstruction

We ﬁrst obtain the 3D shape of the scene by KinectFu-
sion on the sequence of depth images. The output is a trian-
gular mesh representing the shape, together with a camera
pose for every depth image.
4.2. Reﬂectance Estimation

For a surface point

in the scene, we try to ob-
tain its reﬂectance information, which is described by
a BRDF(bidirectional
reﬂectance distribution function)
f (ωin, ωout, λ), where ωin is the incoming lighting direc-
tion, ωout is the outgoing light direction, and λ is the wave-
length of the light.

4.2.1 Reﬂectance Models

While one material may not exhibit exactly the same
reﬂectance characteristic in different ranges of the light
spectrum,
the difference is negligible for dielectrics in
the range of visible and near-infrared spectrum accord-
ing to [20].
Thus, we simplify the BRDF model as
fIR(ωin, ωout)(R, G, B)T , where fIR is the BRDF esti-
mated in the IR spectrum, (R, G, B)T is the normalized
color vector estimated in the visible spectrum.

A general fIR(ωin, ωout) is a 4D function and requires
much effort to be fully captured. Instead of adopting over-
simpliﬁed parametric models, we assume isotropy and half-
vector symmetry of BRDFs. Then the 4D function can be
reduced to a bivariate BRDF

fIR(ωin, ωout) = fIR(θh, θd)

(4.1)

where θh or θd are the half angle and difference angle de-
ﬁned in [15]. It is worth noting that isotropy and/or half-
vector symmetry have been used extensively in previous
work on photometric stereo [2, 14, 21].

We further assume that the scene contains only a few
different BRDFs. This assumption is a good approximation

of an indoor scene consisting of artiﬁcial furniture and arti-
cles [23], which is exactly the target scene of our system.

Note that we do not adopt the dichromatic BRDF model
because it increases the complexity of our BRDF model,
which makes it prone to large noises observed in our data.
BRDF Representation We represent a BRDF as a 2D
lookup table. θh ∈ [0o, 90o] is discretized into 45 bins of
equal width while θd ∈ [0o, 90o] is discretized into 48 bins.
Thus, the BRDF representation is a 45 × 48 table with each
entry containing a 3-vector (RfIR, GfIR, BfIR)T . We note
an entry of the table as a BRDF cell. Each vertex is associ-
ated with such a BRDF table.

4.2.2 Per-Vertex Color

By projecting a 3D vertex onto an RGB image, the RGB
values at the projected 2D pixel give an estimation of the
3D vertex’s color.

After collecting a set of RGB values from a fraction of
all RGB images, a 3D vertex’s color is calculated as the me-
dian of these RGB values on a per-channel basis. Note that
we discard saturated RGB values and those estimates when
viewing at a grazing angle(ωout > 60o). The normalized
per-vertex color (R, G, B)T is the result of normalization
of the above estimated color.

4.2.3 Per-Vertex IR BRDF

The BRDF of a vertex in the IR spectrum fIR is estimated
from IR images. For a vertex X on a surface of the scene,
we can estimate one of its BRDF values fIR(θh, θd) from
an IR image It acquired at time t based on the following
image formation model

It(x) = vig(x)vist(X)fIR(θh, θd)(nT lt)

Lt
d2
t

,

(4.2)

where n is the vertex X’s normal, lt is the light direction
for X at time t, Lt is the LED’s relative brightness, dt is the
distance between the LED and X, and x is the image coor-
dinate when projecting X onto the IR image. The function
vig(x) models vignette effect while vist(X) ∈ {0, 1} en-
codes both visibility and shadow information.

It is worth noting that since we adopt the perspective
camera model and point light source model, both θh and
θd vary as our device moves. Thus, we are able to collect
BRDF values at different (θh, θd).

To facilitate the estimation, we need to ﬁrst know the
IR camera’s pose, which, unfortunately, cannot simply be
calculated from any single camera pose of the depth cam-
era due to lack of frame-to-frame correspondence. To deal
with this, the IR camera’s pose is interpolated from two
temporally neighboring depth camera’s poses, given known
timestamps. Note that the rotational component of a camera

pose can be interpolated via spherical linear interpolation of
quaternion [4].

After obtaining the camera pose of an IR image, the po-
sition of the IR image’s corresponding LED can be easily
obtained since all LEDs’ positions in the IR camera’s coor-
dinate system are pre-calibrated. Thus, the IR BRDF value
can be calculate based on Equation 4.2.

Given a vertex’s normalized color (R, G, B) from Sec-
tion 4.2.2 and an IR BRDF value fIR(θh, θd) from this
section, we can calculate its full BRDF vector at (θh, θd)
in the visible spectrum as (RfIR, GfIR, BfIR). Multiple
BRDF vectors at the same (θh, θd) are averaged before be-
ing placed into the vertex’s associated BRDF table.

4.2.4 Material Segmentation

Motivation Due to limited variation in the viewing/lighting
directions, every single vertex has only a sparse set of non-
empty BRDF cells in its associated BRDF table. Besides,
unlike traditional BRDF acquisition systems [18, 1] where
almost perfect calibration and registration are available, the
BRDF values obtained using our device are severely cor-
rupted due to less accurate camera poses, imperfect shape-
image registration and noisy surface normals. Thus, if we
could identify 3D vertices of the same material, their BRDF
tables can be merged into a more complete and accurate
BRDF estimation for that material.

If we consider the BRDF table as a feature vector for
each vertex, this material segmentation problem can sim-
ply be cast as a spectral clustering problem by deﬁning an
afﬁnity matrix for all vertices based on their BRDF tables.
However, the afﬁnity matrix is difﬁcult to deﬁne because
feature vectors have many different missing entries and the
rest noisy entries are quite unreliable.

Another straightforward approach is to cluster vertices
based on their colors. Mathematically, this amounts to fea-
ture dimension reduction, where the RGB vector is the em-
pirical reduction of a whole BRDF table. Obviously, the
RGB vector is not guaranteed to be the ‘optimal’ reduction
for clustering. In fact, different materials might share the
same color. Even the same material might exhibit different
colors when the lighting/viewing conﬁguration changes(See
the highlight on the gymball of Figure 5(a)).
Algorithm In view of this, we propose a novel method for
clustering vertices by utilizing all the incomplete and noisy
BRDF tables. We notice that while clustering all vertices at
once is challenging, partial clustering within a single BRDF
cell is relatively easy and more reliable even with large
noise. The basic idea of our algorithm is to segment ver-
tices into different material groups based on their samples
in the same BRDF cell, and then propagate this segmenta-
tion information into other BRDF cells to facilitate further
segmentation of other vertices.

While there is usually an undeﬁned number of materials
in a real scene, we detail our method for the 2-material seg-
mentation case here to illustrate our idea. The algorithm is
presented in Algorithm 1, with each step detailed below.

Algorithm 1 Two-material segmentation propagation
Input: BRDF tables T1, T2, ... of all vertices
Output: Every vertex’s material label
1: Set up T with initial clustering within each of its cells
2: Select the most separable cell Cellk
3: Separate Cellk to initialize material groups Mat1 and

Mat2

4: while There are cells to be separated do
5:
6:
7: end while

Select currently most separable cell Celll
Separate Celll to update Mat1 and Mat2

Line 1 We set up a new BRDF table T . A cell at (θh, θd) of
T is associated with a list of BRDF samples collected from
every vertex’s corresponding BRDF cell if it is non-empty.
Figure 3(a) is a visualization of these samples at a cell in
the RGB space. Note that only a random set of 100, 000
vertices of the mesh are used here for efﬁciency.

Ideally, BRDF samples in a cell of T are merely rep-
etitions of a few isolated points in the RGB space, corre-
sponding to different materials. Due to various noises, how-
ever, these samples form a few clusters. We run the mean-
shift algorithm to automatically cluster these samples. The
√
bandwidth of the meanshift algorithm is empirically set as
VR + VB + VG, where VR, VG and VB are variances of
1
2
samples along three dimensions respectively. Those clus-
ters with less than 5% of all samples in the cell are dis-
carded.

Note that in the 2-material case, there are no more than

2 clusters for each BRDF cell.
Line 2 We choose the most ‘separable’ cell in T to initialize
material segmentation. We ﬁrst model each cluster in every
cell of T by a Gaussian distribution(Figure 4(a)). If there
are two clusters in a BRDF cell, we deﬁne the following
‘separability score’

Score = MD(µ2, µ1, S1) + MD(µ1, µ2, S2)

(4.3)

where µ1, µ2, S1 and S2 are the mean vectors and covari-
ance matrices for the two Gaussians respectively, and MD
is Mahalanobis distance deﬁned in the following way

MD(x, µ, S) =(cid:112)(x − µ)S−1(x − µ).

(4.4)

The cell with a single or no cluster has a score of zero. The
cell Cellk in T with the highest score is selected for initial
segmentation.
Line 3 For each sample in the selected cell Cellk, we cal-
culate its Mahalanobis distances MD1 and MD2 to the two

(a)

(c)

(e)

(b)

(d)

(f)

Figure 3. Illustration of segmentation propagation. Note that while
the scene involves over 2 materials, it can still be used for demon-
stration because the initially segmented BRDF cell contains only
two clusters

Gaussians. If MD1 < 3 and MD2 > 3, the sample’s cor-
responding vertex will be placed into an empty vertex set
Mat1. If MD1 > 3 and MD2 < 3, this vertex goes into
another empty vertex set Mat2. The two vertex sets cor-
respond to two materials in the scene. Figure 3(b) shows
Mat1 and Mat2 on the original mesh.

We note that value 3 is chosen as threshold because it
corresponds to the 3σ rule of a 1D Gaussian. In other words,
if a sample is drawn from a Gaussian, there is a high prob-
ability that the Mahalanobis distance between them will be
less than 3.
Line 5 In this step, we ﬁnd a new cell in T to be separated.
The selection is based on a new separability score.

For cell Celli, We denote the set of all its BRDF sam-
ples’ corresponding vertices as Seti and ﬁnd intersections
Seti∩Mat1 and Seti∩Mat2. If Seti∩Mat1(or Seti∩Mat2)
contains less than half of the vertices in Mat1(or Mat2), the
new separability score of this BRDF cell will be set to zero.
Otherwise, we estimate two Gaussian distributions in Celli
with the vertices in Seti ∩ Mat1 and Seti ∩ Mat2. Celli’s
new separability score is calculated with the two new Gaus-
sians using Equation 4.3. The cell in T with the highest new
separability score is selected.

Line 6 We propagate the segmentation information of Mat1
and Mat2 to the selected cell Celll.
From last step, we have already obtained two Gaussian
distributions estimated from Setl ∩ Mat1 and Setl ∩ Mat2.
For every BRDF sample in Celll whose corresponding ver-
tex does not belong to Mat1 ∪ Mat2, we calculate its Ma-
halanobis distances MD1 and MD2 to the two Gaussians
of Seti ∩ Mat1 and Seti ∩ Mat2.
If MD1 < 3 and
MD2 > 3, the vertex will be added to Mat1. If MD1 > 3
and MD2 < 3, it goes into Mat2. See Figure 4.

During this step, the material segmentation information
encoded in Mat1 and Mat2 is propagated to Celll, which
in turn improves the segmentation by adding additional ver-
tices into Mat1 and Mat2.

Figure 3(c-f) shows how sets Mat1 and Mat2 grows as

the above algorithm proceeds.

Due to data noise and incomplete BRDF tables, some
vertices are never classiﬁed into the either Mat1 or Mat2.
In this case, we do not force such vertices into either set be-
cause there is a lack of information for us to make conﬁdent
assertions about them.
Multi-Material Extension In the case of multi-material
segmentation, the meanshift algorithm in Step 1 could pro-
duce over 2 clusters in a cell of T . Then separability can
be deﬁned for each cluster as its Mahalanobis distance to
the ‘nearest’ cluster within the same cell. The segmentation
will start from the most separable cluster and be propagated
in every cell in T . After each round, a new material is seg-
mented out. This kind of segmentation could proceed till no
new material is identiﬁed. Clearly, the user does not need to
specify the number of materials in advance.
4.2.5 Post-processing

After identifying vertices of the same material, we can
merge their associated BRDF tables and obtain a more com-
plete and accurate representation of the material’s BRDF.
Even so, however, there are still empty cells in the BRDF
table. This is mainly due to two reasons. First, we discard
BRDF values observed when ωin > 60o or ωout > 60o.
Second, because of the ﬁxed baseline between the IR cam-
era and LEDs, θd only varies between 0o and 20o and there
is no BRDF samples beyond this range. Thus, our system
can only provide a portion of the full BRDF. While we could
ﬁt the available BRDF samples to either a parametric model
or a set of measured real-world BRDFs as [13], we adopt
the simple approach of linear interpolation and extrapola-
tion to complete the BRDF table. Note that this completion
is only for rendering purpose and should not be considered
as valid measurement.

5. Experiments

We demonstrate our system by results on three real-
world scenes. Note that triangular meshes were produced

(a)

(b)

(c)

(d)

Figure 4. 1D illustration of algorithm. (a) shows the histogram of
BRDF samples in the initially selected cell C1. Two clusters in C1
are ﬁtted to Gaussians as shown by the red and green curves. These
samples’ corresponding vertices can be classiﬁed into two mate-
rial groups Mat1 and Mat2 based on the two curves. (b) shows
the histogram of another cell C2 to be separated. (c)(d) show the
histograms of BRDF samples in C2 whose corresponding vertices
belong to Mat1 and Mat2 respectively. Unclassiﬁed vertices as-
sociated with C2 could be classiﬁed based on the curves in (c) and
(d).
by KinectFusion without any manual cropping.

Figure 5 shows results on the scene Gymball. (a) is an
input RGB image and (b) shows the reconstructed 3D shape
as well as the depth camera’s trajectory produced by Kinect-
Fusion.

Our material segmentation algorithm in Section 4.2.4
could be slow because of meanshift clustering during ini-
tialization. Thus, we ran our algorithm on a set of 100,000
randomly sampled vertices instead of all vertices in the
scene.
(c) shows the color-coded segmentation result of
the sampled vertices. For those unsampled vertices, we

00.050.10.150.20.25020406080100120140160180BRDF value# of BRDF samples00.050.10.150.20.25020406080100120140160180BRDF value# of BRDF samples00.050.10.150.20.25020406080100120140160180BRDF value# of BRDF samples00.050.10.150.20.25020406080100120140160180BRDF value# of BRDF samples(a)

(c)

(b)

(d)

(e)

(f)

(g)

(h)

Figure 5. (a) shows an input RGB image. (b) shows the mesh and camera trajectory.(c-d) are material segmentation results: (c) is the results
of 100,000 vertices while (d) is the ﬁnal results. Note that not all vertices are classiﬁed into a material group. (e-f) are a pair of original IR
image and a rendering under the same condition using estimated BRDFs. (g) shows the rendering of 3 dominant materials: wall, gymball
and the board under gymball. (h) shows a novel rendering of the scene under novel lighting.
simply assume that each of them is of the same material
as the nearest sampled vertex within 1cm’s distance.
(d)
shows this ﬁnal segmentation result of all vertices. Please
note that many vertices(in white) near the boundary of the
scene are not classiﬁed to any material group due to lack of
valid BRDF observations or large discrepancy from other
vertices’ BRDF observations.

sume Lambertian BRDF model to facilitate rendering. Also
note that we mask out the four corners of (e) and (f) because
we did not use these regions for strong vignette effect.

In total, our system generated 6 material groups and the
number of vertices in each group is 7450, 33089, 8655,
1389, 269 and 140. The three largest material groups cor-
responded to the three dominant materials in the scene: the
rubber-made gymball, the wall and the board beneath the
gymball. The rest 3 material groups either corresponded to
less dominant materials, or were due to various noise and
large errors of surface normals. we rendered the three re-
maining materials in(g), where a sphere is rendered with
different BRDFs under directional illumination. It is obvi-
ous that our system successfully captured the highlight of
the gymball. (e) shows one of the input IR image and (f)
is the rendering of the scene under the same condition as
(e). Clearly, (f) is a colored version of (e). This resem-
blance suggests success of our reﬂectance estimation. (h)
is a rendering of the scene under a novel lighting/viewing
condition.

Please note that as mentioned earlier, some vertices are
not associated with any materials. For these vertices, we as-

Figure 6 shows results of another scene Pot. As can be
seen, different materials in the scene are well segmented by
our algorithm and the renderings of a sphere and the orig-
inal scene demonstrate successful capture of highlight ob-
served in the brown plastic pot. However, our system failed
to capture the highlight of the blue pot, which is also made
of plastic. This is because our sampling of vertices was too
sparse to observe highlight on the blue pot. For this scene,
our system produces 19 material groups, 6 out of which are
dominant. (g) shows the rendering of the 6 dominant ma-
terials, which correspond respectively to brown pot, chair,
curtain, blue pot, ground and wall.

Figure 7 shows results of a scene Spiderman. Our system
still successfully segmented vertices of different materials,
as is shown in (c-d). Out of all 13 material groups produced
by our system, there are 8 dominant groups having consid-
erably more vertices than the rest. Rendering of the 8 mate-
rials is shown in (g). Notice that for some rendering, there is
a circular artifact. This is because for that material, our sys-
tem acquires only a portion of its BRDF and we use a naive
interpolation/extrapolation method to complete the BRDF.
Obviously, The simple interpolation/extrapolation strategy
does not guarantee smooth rendering.

(a)

(b)

(c)

(d)

(e)

(f)

(g)

‘

(h)

Figure 6. This ﬁgure shows results of the scene Pot. Arrangement of subﬁgures is similar to Figure 5. Note that the 6 materials in (g)
correspond to the brown pot, chair, curtain, blue pot, ground and wall respectively.

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

Figure 7. This ﬁgure shows results of the scene Spiderman in a similar way as Figure 5 and Figure 6. The 8 materials in (g) correspond to
pumpkin, red region on spiderman, blue region on spiderman, board behind spiderman, box behind the spiderman’s legs, box in front of
spiderman, wall and the supporting board under spiderman.
Limitations As can be seen in Figure 6(e-f), the highlight
of the brown pot in the original IR image was smoothed out
in the re-rendering. This is because sharp specularity can
only be faithfully captured with highly accurate calibration
of surface normal, lighting and viewing directions, which
are impossible for our system. Due to the same reason, our

In this paper, we present a novel device for capturing
both shape and BRDFs. Unlike traditional appearance cap-

system cannot handle surfaces with much texture well.

6. Conclusion and Future Work

ture system, our device features not only portability and
ease of use, but also the capability of acquiring the appear-
ance of a scene instead of a single object.

The major difﬁculty in building such a system lies in
handling the incomplete and severely corrupted BRDF ob-
servations, which was seldom seen in previous systems
thanks to highly controlled environments. To solve the
problem, we propose the material segmentation propaga-
tion algorithm, which automatically segments vertices into
different material groups by using those sparse and noisy
BRDF samples. We see our device as a stepping stone to
more capable RGBD-M(aterial) scanners.

Currently our system processes data ofﬂine. We hope
to make it work and give feedback in real-time, which is
important in guiding the user for better scanning.
References
[1] M. Aittala, T. Weyrich, and J. Lehtinen. Practical svbrdf
capture in the frequency domain. ACM Trans. Graph.,
32(4):110, 2013. 4

[2] N. Alldrin, T. Zickler, and D. Kriegman. Photometric stereo
In

with non-parametric and spatially-varying reﬂectance.
Proc. CVPR, pages 1–8. IEEE, 2008. 2, 3

[3] G. Choe, J. Park, Y.-W. Tai, and I. Kweon. Exploiting shad-
ing cues in kinect ir images for geometry reﬁnement. In Proc.
CVPR, 2014. 1, 2

[4] E. B. Dam, M. Koch, and M. Lillholm. Quaternions, in-
terpolation and animation. Datalogisk Institut, Københavns
Universitet, 1998. 4

[5] Y. Furukawa and J. Ponce. Accurate, dense, and robust mul-
tiview stereopsis. IEEE Trans. Pattern Anal. Mach. Intell.,
32(8):1362–1376, 2010. 2

[6] D. B. Goldman, B. Curless, A. Hertzmann, and S. M. Seitz.
Shape and spatially-varying brdfs from photometric stereo.
IEEE Trans. Pattern Anal. Mach. Intell., 32(6):1060–1071,
2010. 2

[7] S. Haque, A. Chatterjee, V. M. Govindu, et al. High quality
photometric reconstruction using a depth camera. In Proc.
CVPR, pages 2283–2290. IEEE, 2014. 1, 2

[8] C. Hern´andez, G. Vogiatzis, and R. Cipolla. Multiview pho-
IEEE Trans. Pattern Anal. Mach. Intell.,

tometric stereo.
30(3):548–554, 2008. 2

[9] M. Holroyd, J. Lawrence, and T. Zickler. A coaxial optical
scanner for synchronous acquisition of 3d geometry and sur-
face reﬂectance. ACM Trans. Graph. (Proc. of SIGGRAPH),
29(4):99, 2010. 1, 2

[10] S. Izadi, D. Kim, O. Hilliges, D. Molyneaux, R. Newcombe,
P. Kohli, J. Shotton, S. Hodges, D. Freeman, A. Davison,
et al. Kinectfusion: real-time 3d reconstruction and inter-
action using a moving depth camera. In Proceedings of the
24th annual ACM symposium on User interface software and
technology, pages 559–568. ACM, 2011. 1, 2

[11] H. Lensch, J. Kautz, M. Goesele, W. Heidrich, and H.-P. Sei-
del.
Image-based reconstruction of spatial appearance and
geometric detail. ACM Trans. Graph. (Proc. of SIGGRAPH),
22(2):234–257, 2003. 2

[12] R. A. Newcombe, S. J. Lovegrove, and A. J. Davison. Dtam:
In Proc. ICCV,

Dense tracking and mapping in real-time.
pages 2320–2327. IEEE, 2011. 2

[13] T. N¨oll, J. K¨ohler, and D. Stricker. Robust and accurate non-
parametric estimation of reﬂectance using basis decomposi-
tion and correction functions. In Proc. ECCV, pages 376–
391. Springer, 2014. 6

[14] F. Romeiro, Y. Vasilyev, and T. Zickler. Passive reﬂectome-

try. In Proc. ECCV, pages 859–872. Springer, 2008. 3

[15] S. M. Rusinkiewicz. A new change of variables for efﬁcient
brdf representation. In Rendering techniques 98, pages 11–
22. Springer, 1998. 3

[16] Y. Sato, M. D. Wheeler, and K. Ikeuchi. Object shape and
In Proceedings of
reﬂectance modeling from observation.
the 24th annual conference on Computer graphics and in-
teractive techniques, pages 379–387. ACM Press/Addison-
Wesley Publishing Co., 1997. 2

[17] B. Tunwattanapong, G. Fyffe, P. Graham, J. Busch, X. Yu,
A. Ghosh, and P. Debevec. Acquiring reﬂectance and shape
from continuous spherical harmonic illumination. ACM
Trans. Graph. (Proc. of SIGGRAPH), 32(4):109, 2013. 1,
2

[18] J. Wang, S. Zhao, X. Tong, J. Snyder, and B. Guo. Modeling
anisotropic surface reﬂectance with example-based micro-
facet synthesis. In ACM Transactions on Graphics (TOG),
volume 27, page 41. ACM, 2008. 4

[19] C. Wu, M. Zollh¨ofer, M. Nießner, M. Stamminger, S. Izadi,
and C. Theobalt. Real-time shading-based reﬁnement for
consumer depth cameras. Proc. SIGGRAPH Asia, 2014. 1, 2
[20] H. Wu and K. Zhou. Appfusion: Interactive appearance ac-
quisition using a kinect sensor. In Computer Graphics Fo-
rum. Wiley Online Library, 2015. 2, 3

[21] Z. Wu and P. Tan. Calibrating photometric stereo by holistic
reﬂectance symmetry analysis. In Proc. CVPR, pages 1498–
1505. IEEE, 2013. 3

[22] L.-F. Yu, S.-K. Yeung, Y.-W. Tai, and S. Lin. Shading-based
In Proc. CVPR, pages

shape reﬁnement of rgb-d images.
1415–1422. IEEE, 2013. 1, 2

[23] Y. Yu, P. Debevec, J. Malik, and T. Hawkins.

Inverse
global illumination: Recovering reﬂectance models of real
In Proceedings of the 26th an-
scenes from photographs.
nual conference on Computer graphics and interactive tech-
niques, pages 215–224. ACM Press/Addison-Wesley Pub-
lishing Co., 1999. 4

[24] Q.-Y. Zhou and V. Koltun. Dense scene reconstruction
with points of interest. ACM Trans. Graph. (Proc. of SIG-
GRAPH), 32(4):112, 2013. 2

[25] Q.-Y. Zhou and V. Koltun. Color map optimization for 3d
reconstruction with consumer depth cameras. ACM Trans.
Graph. (Proc. of SIGGRAPH), 33(4):155, 2014. 1, 2

[26] Z. Zhou, Z. Wu, and P. Tan. Multi-view photometric stereo
In Proc. CVPR,

with spatially varying isotropic materials.
pages 1482–1489. IEEE, 2013. 1, 2

[27] M. Zollh¨ofer, A. Dai, M. Innmann, C. Wu, M. Stamminger,
C. Theobalt, and M. Nießner. Shading-based reﬁnement on
volumetric signed distance functions. Proc. SIGGRAPH,
2015. 2

