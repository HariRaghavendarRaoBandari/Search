6
1
0
2

 
r
a

M
3

 

 
 
]
T
G
.
s
c
[
 
 

1
v
7
5
2
1
0

.

3
0
6
1
:
v
i
X
r
a

New Convex Programs for Fisher’s Market Model
and its Generalizations1

NIKHIL R. DEVANUR 2
KAMAL JAIN3
TUNG MAI4
VIJAY V. VAZIRANI5
SADRA YAZDANBOD6

We present the following results pertaining to Fisher’s market model:

— We give two natural generalizations of Fisher’s market model: In model M1, sellers can declare an upper
bound on the money they wish to earn (and take back their unsold good), and in model M2, buyers can
declare an upper bound on the amount to utility they wish to derive (and take back the unused part of
their money).

— We derive convex programs for the linear case of these two models by generalizing a convex program due

to Shmyrev and the Eisenberg-Gale program, respectively.

— We generalize the Arrow-Hurwicz theorem to the linear case of these two models, hence deriving alternate

convex programs.

— For the special class of convex programs having convex objective functions and linear constraints, we
derive a simple set of rules for constructing the dual program (as simple as obtaining the dual of an LP).
Using these rules we show a formal relationship between the two seemingly different convex programs
for linear Fisher markets, due to Eisenberg-Gale and Shmyrev; the duals of these are the same, upto a
change of variables.

1. INTRODUCTION
The fundamental market model of Fisher has been widely studied in eco-
nomics [Brainard and Scarf 2000; Gale 1960] and in theoretical computer science
[Codenotti and Varadarajan 2004, 2007; Codenotti et al. 2005; Devanur et al. 2008;
Garg et al. 2012, 2014; Jain and Mahdian 2005; Jain and Vazirani 2010; Vazirani
2007]. A remarkable convex program, due to Eisenberg and Gale [1959], captures
equilibrium allocations, and its dual variables capture equilibrium prices for this
model for several utility functions including linear, CES and Leontief utilities
[Codenotti and Varadarajan 2004, 2007; Gale 1960].

Another seemingly very different convex program, CP , for the same market was dis-
covered by Shmyrev [2009]: whereas variables in the Eisenberg-Gale convex program
represent allocations of goods received by each buyer, variables in CP are prices of
goods and the amount of money spent by each agent on each good. We show how these
two convex programs are related: one can deﬁne a dual convex program for each of
these, and these two duals are the same, upto a change of variables.

We next present two natural generalizations of Fisher’s market model: In model M1,
sellers can declare an upper bound on the money they wish to earn (and take back their
unsold good), and in model M2, buyers can declare an upper bound on the amount to
utility they wish to derive (and take back the unused part of their money); see Section
2 for formal deﬁnitions.

1Supported by NSF Grant CCF-1216019
2Microsoft Research. nikdev@microsoft.com
3Faira Inc. kamaljain@gmail.com
4College of Computing, Georgia Institute of Technology. maitung89@gatech.edu
5College of Computing, Georgia Institute of Technology. vazirani@cc.gatech.edu
6College of Computing, Georgia Institute of Technology. syazdanb@cc.gatech.edu

Model M2 is clearly natural: it is reasonable to assume that a buyer would only want
to buy goods that are necessary, i.e., give a certain bounded amount of utility, and she
desires to keep the rest of her money for future use. Our model M1 is also natural, in
particular in the following situation. Assume that each seller is selling his services in
the market. In the last half century, society has seen the emergence of a multitude of
very high end jobs which call for a lot of expertise and in turn pay very large salaries.
Indeed, the holders of such jobs do not need to work full time to make a comfortable
living and one sees numerous such people preferring to work for shorter hours and
having a lot more time for leisure. High end dentists, doctors and investors fall in this
category. Our model M1 allows such agents to specify a limit on their earnings beyond
which they do not wish to sell their services anymore.

Observe that if many agents desire j’s services and j has a low upper bound on his
earnings, say cj, then the price, pj of this good will be set high enough so that the
buyers demand very little of his services. In particular, he will sell only cj/pj fraction
of his services. Thus, in model M1, the supply of a good is a function of the prices.
Similarly, in M2, the amount of money a buyer spends in the market is a function of
the prices. In the presence of these additional constraints, do equilibria exist and can
they be computed in polynomial time?

In this paper, we go further: we give convex programs that capture equilibria for each
of the models. Generalizations of CP and the Eisenberg-Gale programs, respectively,
yield convex programs for M1 and M2 for the case of linear utilities. Existence of
equilibria for both models follows from these convex programs. We further show that
both models admit rational equilibria, i.e., prices and allocations are rational numbers
if all parameters speciﬁed in the instance are rational. As a consequence, the ellipsoid
algorithm will ﬁnd a solution to the convex programs in polynomial time. In addition,
for M2, we also give convex programs for Leontief and CES (for parameter values
0 < ρ < 1) utility functions. Finally, we show that for market M1 under spending
constraint utilities, a generalization of CP yields a convex program.

A completely different way of deriving convex programs for markets follows from the
classic Arrow-Hurwicz theorem [Arrow and Hurwicz 1965], which applies to Arrow-
Debreu markets with weak gross substitutes (WGS) utilities (this includes linear util-
ities). We present extensions of the Arrow-Hurwicz’s theorem to markets M1 and M2
for the linear case and hence derive alternative convex programs for these markets.7
We note that the Arrow-Hurwicz theorem applies to utility functions satisfying weak
gross substitutability (WGS), which includes linear utilities. Our result opens up the
possibility that one could extend this approach to all WGS utilities for M1 and M2.

Our paper also contributes to convex programming duality theory8. This duality is
usually stated in its most general form, with convex objective functions and convex
constraints, e.g., see the excellent references by Boyd and Vandenberghe [2009] and
Rockafellar [1970]. However, at this level of generality the process of constructing the
dual of a convex program is a little tedious, in contrast to LP duality where there is a
simple set of rules for obtaining the dual of an LP. In this paper, we consider a special
class of convex programs, those with convex objective functions and linear constraints,
and derive a simple set of rules to construct the dual,9 which is almost as simple as
the LP case.

7The solution of these convex programs requires additional properties, such as ﬁnding an initial bounding
box. These details are in Appendix 9.
8This part of the current paper is incorporated from the following unpublished manuscript:
N. R. Devanur. Fisher Markets and Convex Programs. Manuscript, 2010.
9The dual is obtained using the usual Lagrangian relaxation technique. We show a “short-cut” for applying
this technique, making it especially easy to derive the dual for the special case we consider.

These rules have found further applications: to derive convex programs for Fisher
markets under spending constraint utilities10 [Birnbaum et al. 2011], for Fisher mar-
kets with transaction costs [Chakraborty et al. 2010], and for Arrow-Debreu mar-
ket with linear utilities [Devanur et al. 2013]. They have been used in the design
of algorithms: for simplex like algorithms for spending constraint utilities and per-
fect price discrimination markets [Garg et al. 2013], in analyzing the convergence
of the Tatonnement process [Cheung et al. 2013], in designing online algorithms for
scheduling [Buchbinder et al. 2014; Devanur and Huang 2014; Im et al. 2014], and
online algorithms for welfare maximization with production costs [Huang and Kim
2015]. They have also been used in bounding the price of anarchy of certain games
[Kulkarni and Mirrokni 2015].

2. MODELS
Fisher’s model is the following: let A be a set of n divisible goods and B be a set of
m buyers. Each buyer i comes to the market with money mi, and we may assume
w.l.o.g. that the market has one unit of each good. Each buyer i has a utility function,
fi : Rm
+ → R+, giving the utility that i derives from each bundle of goods. Prices p and
allocations x are said to form an equilibrium if each buyer i gets an optimal bundle
of goods, and each good having non-zero price is fully sold. Clearly, in an equilibrium,
each agent will fully spend her money. For convenience, we will assume that each good
is sold by a unique seller.

Utility function for buyer i fi : Rm
+ → R+ is said to be linear if there are parameters
uij ∈ R+, specifying the utility derived by i from one unit of good j. Her utility for
the entire bundle is additive, i.e., fi(x) = Pj∈B uijxij . Utility function fi is said to be

Leontief if, given parameters aij ∈ R+ ∪ {0} for each good j ∈ B, fi(x) = minj∈B xij /aij.
Finally, fi is said to be constant elasticity of substitution (CES) with parameter ρ if
given parameters αj for each good j ∈ B,

n

fi(x) = 
Xj=1


j
αjxρ


1
ρ

.

Our two generalizations of Fisher’s model are the following. In the ﬁrst model, M1,
each seller j has an upper bound cj on the amount of money j wants to earn in the
market. Once he earns cj, selling the least amount of his good, he wants to take back
the unsold portion of his good. In equilibrium, buyers spend all their money and get an
optimal bundle of goods. In the second model, M2, buyers have upper bounds di on the
utility they want to derive in the market. Once buyer i derives utility di, spending the
least amount of money at prices p, she wants to keep the left-over money. Once again,
in equilibrium, each good with a positive price should be fully sold.

We next deﬁne the spending constraint model. As before, let A be a set of divisible
goods and B a set of buyers, |A| = n, |B| = m. Assume that the goods are numbered
from 1 to n and the buyers are numbered from 1 to m. Each buyer i ∈ B comes to
the market with a speciﬁed amount of money, say mi ∈ Q+, and we are speciﬁed the
quantity, bj ∈ Q+ of each good j ∈ A. For i ∈ B and j ∈ A, let f i
[0, mi] → R+ be
the rate function of buyer i for good j; it speciﬁes the rate at which i derives utility per
unit of j received, as a function of the amount of her budget spent on j. If the price of
j is ﬁxed at pj per unit amount of j, then the function f i
j /pj gives the rate at which i
derives utility per dollar spent, as a function of the amount of her budget spent on j.

j :

10See Section 2 for a deﬁnition

Deﬁne gi

j : [0, mi] → R+ as follows:

gi

j(x) = Z x

0

f i
j (y)
pj

dy.

In this paper, we will deal with the case that f i

This function gives the utility derived by i on spending x dollars on good j at price pj.
j ’s are decreasing step functions. If
so, gi
j will be a piecewise-linear and concave function. The linear version of Fisher’s
problem [Brainard and Scarf 2000] is the special case in which each f i
j is the constant
function so that gi
j is a linear function. Given prices p = (p1, . . . , pn) of all goods, each
buyer wants a utility maximizing bundle of goods. Prices p are equilibrium prices if
each good with a positive price is fully sold.

3. CONVEX PROGRAMMING DUALITY
3.1. Conjugate
We now deﬁne the conjugate of a function, and note some of the properties; see
Rockafellar [1970] for a detailed treatment. This will be the key ingredient to extend
the simple set of rules for LP duality to convex programs. Suppose that f : Rn → R is
a function. The conjugate of f is f ∗ : Rn → R and is deﬁned as follows:

f ∗(µ) := sup
x

{µT x − f (x)}.

Although the conjugate is deﬁned for any function f , for the rest of the article, we will
assume that f is strictly convex and differentiable, since this is the case that is most
interesting to the applications we discuss.
Properties of f ∗:
• f ∗ is strictly convex and differentiable. (This property holds even if f is not strictly

convex and differentiable.)

• f ∗∗ = f . (Here we use the assumption that f is strictly convex and differentiable.)

• If f is separable, that is f (x) = Pi fi(xi), then f ∗(µ) = Pi f ∗

• If g(x) = cf (x) for some constant c, then g∗(µ) = cf ∗(µ/c).
• If g(x) = f (cx) for some constant c, then g∗(µ) = f ∗(µ/c).
• If g(x) = f (x + a) for some constant a, then g∗(µ) = f ∗(µ) − µT a.
• If µ and x are such that f (x) + f ∗(µ) = µT x then ∇f (x) = µ and ∇f ∗(µ) = x.
• Vice versa, if ∇f (x) = µ then ∇f ∗(µ) = x and f (x) + f ∗(µ) = µT x.

i (µi).

We say that (x, µ) form a complementary pair wrt f if they satisfy one of the last
two conditions stated above. We now calculate the conjugates of some simple strictly
convex and differentiable functions. These will be useful later.
• If f (x) = 1

2 x2, then ∇f (x) = x. Thus f ∗(µ) is obtained by letting µ = x in µT x − f (x),

which is then equal to 1

2 µ2.

• If f (x) = − log(x), then ∇f (x) = −1/x. Set µ = −1/x to get f ∗(µ) = −1 + log(x) =

−1 − log(−µ).

• Suppose f (x) = x log x. Then ∇f (x) = log x + 1 = µ. So x = eµ−1. f ∗(µ) = µx − f (x) =

x(log x + 1) − x log x = x = eµ−1. That is, f ∗(µ) = eµ−1.

3.2. Convex programs with linear constraints
Consider the following (primal) optimization problem.

maxPi cixi − f (x) s.t.
∀ j,Pi aijxi ≤ bj.

We will derive a minimization problem that is the dual of this, using Lagrangian dual-
ity. This is usually a long calculation. The goal of this exercise is to identify a shortcut
for the same. Deﬁne the Lagrangian function

L(x, λ) := Xi

cixi − f (x) +Xj

λj (bj −Xi

aijxi).

We say that x is feasible if it satisﬁes all the constraints of the primal problem. Note

that for all λ ≥ 0 and x feasible, L(x, λ) ≥ Pi cixi − f (x). Deﬁne the dual function

g(λ) = max

L(x, λ).

x

So for all λ, x, g(λ) ≥ L(x, λ). Thus minλ≥0 g(λ) is an upper bound on the optimum
value for the primal program. The dual program is essentially minλ≥0 g(λ). We further

simplify it as follows. Letting µi = ci −Pj aijλj, we can rewrite the expression for L as

L = Xi

µixi − f (x) +Xj

bjλj .

Now note that g(λ) = maxx L(x, λ) = maxx{Pi µixi − f (x)} +Pj bjλj = f ∗(µ) +Pj bjλj.

Thus we get the dual optimization problem:

minPj bjλj + f ∗(µ) s.t.
∀ i,Pj aijλj = ci − µi,

∀ j, λj ≥ 0.

Note the similarity to LP duality. The differences are as follows. Suppose the concave
part of the primal objective is −f (x). There is an extra variable µi for every variable xi
that occurs in f . In the constraint corresponding to xi, −µi appears on the RHS along
with the constant term. Finally the dual objective has f ∗(µ) in addition to the linear
terms. In other words, we relax the constraint corresponding to xi by allowing a slack
of µi, and charge f ∗(µ) to the objective function.

Similarly, the primal program with non-negativity constraints on variables has the

following dual program.

Primal: maxPi cixi−f (x) s.t.

∀ j,Pi aijxi ≤ bj,

∀ i, xi ≥ 0.

Dual: minPj bjλj + f ∗(µ) s.t.

∀ i,Pj aij λj ≥ ci − µi,

∀ j, λj ≥ 0.

As we saw, the optimum for the primal program is lower than the optimum for the
dual program (weak duality). In fact, if the primal constraints are strictly feasible,

that is there exist xi such that for all j Pi aijxij < bj, then the two optima are the

same (strong duality) and the following generalized complementary slackness condi-
tions characterize them:

— xi > 0 ⇒ Pj aij λj = ci − µi,
— λj > 0 ⇒ Pi aijxi = mi and

f ∗(µ) = µT x.

— x and µ form a complementary pair wrt f , that is, µ = ∇f (x), x = ∇f ∗(µ) and f (x) +

Similarly the dual of a minimization program has the following form.

Primal: minPi cixi + f (x) s.t.

∀ j,Pi aijxi ≥ bj,

∀ i, xi ≥ 0.

Dual: maxPj bjλj − f ∗(µ) s.t.

∀ i,Pj aijλj ≤ ci + µi,

∀ j, λj ≥ 0.

3.3. Infeasibility and Unboundedness
When an LP is infeasible, the dual becomes unbounded. The same happens with these
convex programs as well. We now give the proof for some special cases. Suppose ﬁrst
that the set of linear constraints is itself infeasible, that is, there is no solution to the
set of inequalities

Then by Farkas’ lemma, we know that there exists numbers λj ≥ 0 for all j such that

∀ j,Xi

aijxi ≤ bj.

(1)

∀ i,Xj

aijλj = 0, andXj

λjbj < 0.

Now g(λ) = f ∗(c) + Pj λjbj, and by multiplying all the λj by a large positive number,

g can be made arbitrarily small.

Now suppose that the feasible region deﬁned by the inequalities (1) and the domain
of f deﬁned as dom(f ) = {x : f (x) < ∞} are disjoint. Further assume for now that
f ∗(c) < ∞ and that there is a strict separation between the two, meaning that for all x
feasible and y ∈ dom(f ), d(x, y) > ǫ for some ǫ > 0. Then once again by Farkas’ lemma
we have that there exist λj ≥ 0 for all j and δ > 0 such that

∀y ∈ dom(f ),Xi,j

aij λjyi > Xj

λjbj(1 + δ).

This implies that g(λ) < f ∗(c) − δPj λj bj, and as before, by multiplying all the λj by a

large positive number, g can be made arbitrarily small.

4. CONVEX PROGRAMS FOR FISHER MARKETS
The following is the classic Eisenberg-Gale convex program for Fisher markets with
linear utilities. An optimum solution to this program captures equilibrium allocation
for the corresponding market.

maxPi mi log ui s.t.
∀ i, ui ≤ Pj uijxij ,
∀ j,Pi xij ≤ 1,

xij ≥ 0.

We now use the technology we developed in the previous section to construct the dual
of this convex program. We let the dual variable corresponding to the constraint ui ≤

Pj uijxij be βi and the dual variable corresponding to the constraint Pi xij ≤ 1 be pj

(these will correspond to the equilibrium prices, hence the choice of notation). We also
need a variable µi that corresponds to the variable ui in the primal program since it
appears in the objective in the form of a concave function, mi log ui. We now calculate

the conjugate of this function. Recall that if f (x) = − log x then f ∗(µ) = −1 − log(−µ),
and if g(x) = cf (x) then g∗(µ) = cf ∗(µ/c). Therefore if g(x) = −c log x then g∗(µ) =
−c−c log(−µ/c) = c log c−c−c log(−µ). In the dual objective, we can ignore the constant
terms, c log c − c. We are now ready to write down the dual program which is as follows.

minPj pj −Pi mi log(−µi) s.t

∀ i, j, pj ≥ uijβi,

∀ i, βi = −µi.

We can easily eliminate µi from the above to get the following program.

minPj pj −Pi mi log(βi) s.t

∀ i, j, pj ≥ uijβi.

(2)

The variables pj’s actually correspond to equilibrium prices. In fact, we can even elim-
inate the βi’s by observing that in an optimum solution, βi = minj {pj/uij}. This gives
a convex (but not strictly convex) function of the pj’s that is minimized at equilibrium.
Note that this is an unconstrained11 minimization. The function is as follows

minXj

pj −Xi

mi log(min

j

{pj/uij}).

It would be interesting to give an intuitive explanation for why this function is
minimized at equilibrium. Another interesting property of this function is that the
(sub)gradient of this function at any price vector corresponds to the (set of) excess sup-
ply of the market with the given price vector. This implies that a tattonement style
price update, where the price is increased if the excess supply is negative and is de-
creased if it is positive, is actually equivalent to gradient descent.
Note: A convex program that is very similar to (2) was also discovered independently
by Garg [Garg 2008]. However it is not clear how they arrived at it, or if they realise
that this is the dual of the Eisenberg-Gale convex program.

Going back to Convex Program (2), we write an equivalent program by taking the

logs in each of the constraints.

minPj pj −Pi mi log(βi) s.t

∀ i, j, log pj ≥ log uij + log βi.

We now think of qj = log pj and γi = − log βi as the variables, and get the following
convex program.

minPj eqj +Pi miγi s.t

∀ i, j, γi + qj ≥ log uij.

(3)

We now take the dual of this program. Again, we need to calculate the conjugate of
the convex function that appears in the objective, namely ex. We could calculate it

11 Although with some analysis, one can derive that the optimum solution satisﬁes that pj ≥ 0, and Pj pj =
Pi mi, the program itself has no constraints.

from scratch, or derive it from the ones we have already calculated. Recall that if
f (x) = ex−1, then f ∗(µ) = µ log µ, and if g(x) = f (x+a) then g∗(µ) = f ∗(µ)−µT a. Thus if
g(x) = ex = f (x+1) then g∗(µ) = f ∗(µ)−µ = µ log µ−µ. The dual variable corresponding
to the constraint γi + qj ≥ log uij is bij and the dual variable corresponding to eqj is pj
(by abuse of notation, but it turns out that these once again correspond to equilibrium
prices). Thus we get the following convex program of [Shmyrev 2009], which we call
CP .

maxPi,j bij log uij −Pj(pj log pj − pj) s.t.

(CP )

∀ j,Pi bij = pj,
∀ i,Pj bij = mi,

bij ≥ 0 ∀ i, j.

4.1. Extensions to other markets
The Eisenberg-Gale convex program can be generalized to capture the equilibrium of
many other markets, such as markets with Leontief utilities, or network ﬂow markets.
In fact, [Jain and Vazirani 2010] identify a whole class of such markets whose equi-
librium is captured by convex programs similar to that of Eisenberg and Gale (called
EG markets). We can take the dual of all such programs to get corresponding gener-
alizations for the convex program (2). For instance, a Leontief utility is of the form
Ui = minj {xij/φij } for some given values φij . The Eisenberg-Gale-type convex pro-
gram for Fisher markets with Leontief utilities is as follows, along with its dual (after
some simpliﬁcation as before).

Primal: maxPi mi log ui s.t.

∀ i, j, ui ≤ xij /φij,

∀ j,Pi xij ≤ 1,

xij ≥ 0.

Dual: minPj pj −Pi mi log(βi) s.t

∀ i,Pj φij pj = βi.

In general for an EG-type convex program, the dual has the objective function

Pj pj − Pi mi log(βi) where βi is the minimum cost buyer i has to pay in order to

get one unit of utility. For instance, for the network ﬂow market, where the goods are
edge capacities in a network and the buyers are source-sink pairs looking to maximize
the ﬂow routed through the network, then βi is the cost of the cheapest path between
the source and the sink given the prices on the edges.

However, for some markets, it is not clear how to generalize the Eisenberg-Gale
convex program, but the dual generalizes easily. In each of the cases, the optimality
conditions can be easily seen to be equivalent to equilibrium conditions. We now show
some examples of this.

Quasi-linear utilities. Suppose the utility of buyer i is Pj(uij − pj)xij . In particular,

if all the prices are such that pj > uij, then the buyer prefers to not be allocated
any good and go back with his budget unspent. It is easy to see that the following
convex program captures the equilibrium prices for such utilities. In fact, given this

convex program, one could take its dual to get an EG-type convex program as well.

Primal: minPj pj−Pi mi log(βi) s.t

(4)

∀ i, j, pj ≥ uijβi,

∀ i, βi ≤ 1.

Dual: maxPi mi log ui − vi s.t.

∀ i, ui ≤ Pj uijxij + vi,

∀ j,Pi xij ≤ 1,

xij , vi ≥ 0.

Although this is a small modiﬁcation of the Eisenberg-Gale convex program, it is not

clear how one would arrive at this directly without going through the dual.

Transaction costs. Suppose that we are given, for every pair, buyer i and good j,
a transaction cost cij that the buyer has to pay per unit of the good in addition

to the price of the good. Thus the total money spent by buyer i is Pj(pj + cij )xij .

Chakraborty et al. [2010] show that the following convex program captures the equi-
librium prices for such markets.

minPj pj −Pi mi log(βi) s.t

∀ i, j, pj + cij ≥ uijβi,

∀ i, βi ≤ 1.

(5)

5. CONVEX PROGRAMS FOR GENERALIZATIONS OF FISHER’S MODEL
In this section, we give a convex program for each market model and a complete proof
that optimal solution of the convex program gives an equilibrium price of the market.

5.1. Market M1: Sellers have earning limits

Linear utilities. This convex program is a natural extension of program CP pre-
sented in Section 4, with an additional set of constraints for sellers having earning
limits:

maxPi,j bij log uij −Pj(qj log qj − qj) s.t.

∀j,Pi bij = qj,
∀i,Pj bij = mi,

∀j, qj ≤ cj,

∀i, j, bij ≥ 0.

(P1)

(6)

(7)

(8)

(9)

Here bij is the amount of money buyer i spends on good j, and qj is the total amount
of spending on good j. Contraint 8 makes sure that the spending on good j does not
exceed the earning limit of seller j.

LEMMA 5.1. Convex program P1 captures the equilibrium prices of market model

M1 under linear utility functions.

PROOF. Let λj , µj, ηi be the dual variables for contraints 6, 8, 7 respectively. By the

KKT conditions, optimal solutions must satisfy the following:

(1) ∀i ∈ B, j ∈ A :

log uij − λj − ηi ≤ 0

bij > 0 ⇒ log uij − λj − ηi = 0

(2) ∀i ∈ B, j ∈ A :
(3) ∀j ∈ A : − log qj + λj − µj = 0
(4) ∀j ∈ A :
(5) ∀j ∈ A :

µj ≥ 0
µj > 0 ⇒ qj = cj

From the ﬁrst 3 conditions, we have ∀i ∈ B, j ∈ A : uij
qj eµj ≤ eηi and if bij > 0 then
uij
qj eµj = eηi. Let pj = qjeµj . We will show that p is an equilibrium price with spending b.
From the above observation, it is easy to see that each buyer i only spends money on
his maximum bang-per-buck (MBB) goods at price p, i.e., goods that give her maximum
utility per unit money spent. We also have to check that an optimal solution given by
the convex program satisﬁes the market clearing conditions. Constraint 7 guarantees
that each buyer i must spend all his money. Therefore, we only have to show that the
amount seller j earns is the mininum between pj and cj. If qj = cj and qj ≤ qjeµj = pj.
If qj < cj then µj = 0 and pj = qj < cj. Thus, in both cases, qj = min(pj, cj) as
desired.

Spending constraint utilities. The convex program for model M1 under spending

constraint utility functions is as follows:
ij log ul

maxPi,j,l bl

ij −Pj(qj log qj − qj) s.t.

∀j,Pi,l bl
∀i,Pj,l bl

ij = qj,

ij = mi,

∀i, j, l ∈ S, bl

ij ≤ Bl

ij ,

∀j, qj ≤ cj,

∀i, j, l ∈ S, bl

ij ≥ 0.

(P2)

(10)

(11)

(12)

(13)

(14)

Here bl
the total amount of spending on good j.

ij is the amount of money buyer i spends on good j under segment l, and qj is

LEMMA 5.2. Convex program P2 captures the equilibrium prices of market model

M1 under spending constraint utility function.

PROOF. Let λj, µj, ηi, γijl be the dual variables for contraints 10, 13, 11, 12 respec-

tively. By the KKT conditions, optimal solutions must satisfy the following:

ij − λj − ηi − γijl ≤ 0

log ul
bl
ij > 0 ⇒ log ul

ij − λj − ηi − γijl = 0

(1) ∀i ∈ B, j ∈ A, l ∈ S :
(2) ∀i ∈ B, j ∈ A, l ∈ S :
(3) ∀j ∈ A : − log qj + λj − µj = 0
(4) ∀j ∈ A :
(5) ∀j ∈ A :
(6) ∀i ∈ B, j ∈ A, l ∈ S :
(7) ∀i ∈ B, j ∈ A, l ∈ S :

µj ≥ 0
µj > 0 ⇒ qj = cj

γijl ≥ 0
γijl > 0 ⇒ bl

ij = Bl
ij

Let pj = qjeµj . We will prove that p is an equilibrium price with spending b. The

second KKT condition says that for a ﬁxed pair of buyer i and good j, bl

ij > 0 implies

ul
eγijl = eλj eηi
ij

ij/eγijl is the same for every segment l under which i spends
Therefore, the ratio ul
money on j. From KKT condition 7, γijl > 0 implies bl
ij . It follows that for each
good j, i must ﬁnish spending money on a segment with higher rate before starting
spending money on a segment with lower rate.

ij = Bl

From the ﬁrst 3 KKT conditions, we have:

ul
ij

qj eγijl eµj ≤ eηi

and equality happens when bl
on, bl
Bl

ij must be less than Bl

ij > 0, we have

ij > bl

ij > 0. For every segment that i can still spend money
ij, and thus γijl = 0. Therefore, for every j and l such that

ul
ij
pj

=

ul
qj eµj = eηi
ij

ul
ij
pj

and this ratio
segments such that bl
according to his best spending strategy.

ij < Bl

is maximized among all segments that i can spend money on, i.e.
ij. Therefore, we can conclude that each buyer i is spending

By complementary slackness condition, if qj < cj then µi = 0 and qj = pj. Otherwise,
if pj = cj then qj ≤ pj. Therefore, in this model, the amount seller j earns is the
minimum between cj and pj.

5.2. Market M2: Buyers have utility limits

Linear utilities. The convex program for the linear utility with buyers having utility

limits is a natural extension of the Eisenberg-Gale program:

maxPi mi log ui s.t.
∀i,Pj xij uij = ui,

∀i, ui ≤ di,

∀j,Pi xij ≤ 1,

∀i, j, xij ≥ 0.

(P3)

(15)

(16)

(17)

(18)

In this program, xij is the amount of good j allocated to buyer i, and ui is the amount of
utility that buyer i obtains. Contraint 16 guarantees that the amount of utility buyer
i gets does not exceed his utility limit di.

LEMMA 5.3. Convex program P3 captures the equilibrium prices of market model

M2 under linear utility function.

PROOF. Let λi, µi, pj be the dual variables for contraints 15, 16, 17 respectively. By

the KKT conditions, optimal solutions must satisfy the following:

xij > 0 ⇒ −λiuij − pj = 0

(1) ∀i ∈ B, j ∈ A : −λiuij − pj ≤ 0
(2) ∀i ∈ B, j ∈ A :
(3) ∀i ∈ B : mi
ui
(4) ∀i ∈ B :
µi ≥ 0
µi > 0 ⇒ ui = di
(5) ∀i ∈ B :
(6) ∀j ∈ A :
pj ≥ 0
(7) ∀j ∈ A :

+ λi − µi = 0

pj > 0 ⇒ Pi xij = 1

From the ﬁrst 3 conditions, we have ∀i ∈ B, j ∈ A : uij
pj
=

ui

.

mi−µiui

uij
pj

≤

ui

mi−µiui

and if xij > 0 then

We will show that p is an equilibrium price with allocation x. From the above obser-
vation, it is easy to see that each buyer i only spends money on his MBB goods at price
p. Moreover, we know that if pj > 0 then good j must be fully sold. Therefore, the only
remaining thing to prove is that at price p each buyer either spends all his money or
attains his utility limit. If ui = di then buyer i reaches his utility limit and the amount
of money he spends is mi − µidi, which is at most mi. If ui < di then µi = 0 and the
amount of money he spends is mi.

Leontief utilities. The convex program for the Leontief utility model is as follows:

maxPi mi log ui s.t.

∀i, j, uiφij = xij,

∀i, ui ≤ di,

∀j,Pi xij ≤ 1

∀i, j, xij ≥ 0.

(P4)

(19)

(20)

(21)

(22)

LEMMA 5.4. Convex program P4 captures the equilibrium prices of market model

M2 under Leontief utility function.

PROOF. Let λij , µi, pj be the dual variables for contraints 19, 20, 21 respectively. By

the KKT conditions, optimal solutions must satisfy the following:

xij > 0 ⇒ −λij − pj = 0

(1) ∀i ∈ B, j ∈ A : −λij − pj ≤ 0
(2) ∀i ∈ B, j ∈ A :
(3) ∀i ∈ B : mi
ui
µi ≥ 0
(4) ∀i ∈ B :
µi > 0 ⇒ ui = di
(5) ∀i ∈ B :
(6) ∀j ∈ A :
pj ≥ 0
(7) ∀j ∈ A :

+Pj λij φij − µi = 0

pj > 0 ⇒ Pi xij = 1

Notice that in this model, we may assume that ui > 0 for all i ∈ B. It follows from
constraint 19 that xij = 0 if and only if φij = 0. From the second KKT condition, we
know that if φij > 0, we must have λij = −pj. Substituting in the third condition we
have:

Therefore,

mi
ui

− µi = Pj pjφij

mi − µiui = Pj pjφij

xij
φij

= Pj pjxij

It follows that mi − µiui is actually the amount of money that buyer i spends. By
complementary slackness condition, if ui < di then µi = 0 and i spends all his budget.
Otherwise, if ui = di then mi − µiui ≤ mi. Therefore, in this model, a buyer i either
spends all his budget or attains his utility limit. Moreover, we know that if pj > 0 then
good j is fully sold. Thus, p is an equilibrium price with allocation x.

CES utilities. The convex program for the CES utility model with parameter ρ is as

follows:

maxPi mi log ui s.t.
∀i, ui = (cid:0)P uijxρ
ij(cid:1)

ρ ,

1

∀i, ui ≤ di,

∀j,Pi xij ≤ 1,

∀i, j, xij ≥ 0.

(P5)

(23)

(24)

(25)

(26)

Notice that in this model, ∂ui/∂xij = u1−ρ

uij for all
xij’s. Moreover, ∂ui/∂xij decreases when xij increases. It follows that the best spending
strategy for a buyer i is to start with xij = 0 ∀j ∈ A and spend money on goods j that
maximize the ratio ∂ui/∂xij
at every point. At the end of the procedure, all goods j such
that xij > 0 will have the same value for ∂ui/∂xij
all goods.

, and that value is the maximum over

ij has the same term u1−ρ

uijxρ−1

pj

pj

i

i

LEMMA 5.5. Convex program P5 captures the equilibrium prices of market model

M2 under CES utility function.

PROOF. Let λi, µi, pj be the dual variables for contraints 23, 24, 25 respectively. By

i

uijxρ−1

the KKT conditions, optimal solutions must satisfy the following:
(1) ∀i ∈ B, j ∈ A : −λiu1−ρ
(2) ∀i ∈ B, j ∈ A :
(3) ∀i ∈ B : mi
ui
µi ≥ 0
(4) ∀i ∈ B :
(5) ∀i ∈ B :
µi > 0 ⇒ ui = di
(6) ∀j ∈ A :
pj ≥ 0
(7) ∀j ∈ A :

ij − pj ≤ 0
uijxρ−1

xij > 0 ⇒ −λiu1−ρ

ij − pj = 0

+ λi − µi = 0

i

pj > 0 ⇒ Pi xij = 1

We will prove that p is an equilibrium price with allocation x. From the ﬁrst there

KKT conditions, we have

u1−ρ

i

uij xρ−1
pj

ij

≤

ui

mi−µiui

and equality happens when xij > 0. Therefore, x is in agreement with the best spend-
ing strategy of the buyers, which says that for each buyer i, if xij > 0 then ∂ui/∂xij
is
maximized over all j’s. Moreover, we can see that mi − µiui is the amount of money
buyer i spends. By complementary slackness condition, if ui < di then µi = 0 and i
spends all his budget. Otherwise, if ui = di then mi − µiui ≤ mi. Therefore, in this
model, a buyer i either spends all his budget or attains his utility limit. Moreover,
we know that if pj > 0 then good j is fully sold. Thus, p is an equilibrium price with
allocation x.

pj

6. EXISTENCE AND UNIQUENESS
In this section, we study the existence and the uniqueness of equilibria for the market
models. For model M1, we show a necessary and sufﬁcient condition for the existence
of an equilibrium. The condition works for both cases of linear utility and spending

constraint utility. On the uniqueness side, we show the spending vector, q = (q1, . . . , qm)
where qj is the money spent on good j, is unique. For model M2, we show that an
equilibrium always exists for all utility functions we mentioned in the previous section.
On the uniqueness side, the utility vector is unique.

Despite the fact that in Fisher model we have the uniqueness of price equilibrium,
it is easy to see that it is not true in our generalizations. For model M1, consider a
market with only one buyer with utility function u(x) = x1 and one seller. Let m1 = 1
and c = 1. It is easy to see every price in bigger than 1 is an equilibrium price. For
model M2, again consider a market with only one buyer with utility function u(x) = x1
and one seller. Let d1 = 1 and m1 = 2. It is easy to see every price in interval [1, 2] is an
equilibrium price.

6.1. Market M1: Sellers have earning limits

LEMMA 6.1.

In model M1 under linear and spending constraint utility functions,

an equilibrium price exists if and only if Pj cj ≥ Pi mi.

PROOF. An equilibrium price exists if and only if the feasible region of the convex
program is not empty. We ﬁrst prove that for the case of linear utility function, the

region is empty because the set of constraints 6, 8 and 7 can not be satisﬁed together. If
≤ cj

program is feasible if and only if Pj cj ≥ Pi mi. If Pj cj < Pi mi then the feasible
Pj cj ≥ Pi mi then yij = micj
and Pj yij = mi
is feasible if and only if Pj cj ≥ Pi mi. If Pj cj < Pi mi then the feasible region

gives a feasible solution because Pi yij = cj

is empty because the set of constraints 10, 13 and 11 can not be satisﬁed together.
Using a similar argument as in the previous part, we can show that if the amount of

Similarly, we can prove that for the case of spending constraint utility, the program

Pi mi
Pj cj

Pj cj
Pj cj

= mi.

Pj cj

money that i spends on j is micj/Pj cj then constraints 10, 13 and 11 are all satisﬁed.
We only need to guarantee that contraint 12 is satisﬁed as well. This can be done by
choosing appropriate yl

and

yl
ij ≤ Bl

ij.

ij = micj
Pj cj

ij ’s such that Pl yl

LEMMA 6.2. In model M1 under linear and spending constraint utility functions,

the spending vector q is unique.

pj

j ⇒ qj ≥ q′

j because qj = xjpj = min(1, cj

PROOF. Consider two distinct price equilibriums p and p′, their corresponding
spending vectors q and q′ and their corresponding demand vectors x and x′. Note that
)pj ≥ min(1, cj
pj ≥ p′
j. Consider price
p′
j
vector r = (r1, . . . , rm) where ∀k, rk = max(pk, p′
k), its corresponding spending vector
qr and its corresponding demand vectors xr. Note that by changing prices from p to r
we may only increasing the prices. Therefore, it is easy to see under linear or spending
constraint utility functions the demand of good j going from prices p to r would not
decrease if p′
j. We can
do the same for all j and show ∀j, qr
j). For the sake of a contradiction sup-
pose ∃j, qj > q′
j = Pi mi
which is contradiction because the money spent on goods cannot be more than the total
budget. Therefore, ∀j , qj = q′

j < pj = rj. Therefore, we have qr
j rj = xr
j then using the later it is easy to show Pj qr

j > Pj qj = Pj q′

j pj ≥ xj pj = qj ≥ q′

j and the lemma follows.

j = max(qj, q′

j = xr

j = q′

)p′

6.2. Market M2: Buyers have utility limits

LEMMA 6.3. In model M2 under linear, Leontief and CES utility functions, an equi-

librium price always exists.

PROOF. An equilibrium price exists if and only if the feasible region of the convex
program is not empty. In P3, P4 and P5, xij = 0 for all i ∈ B, j ∈ A is a feasible solution.
Therefore, the feasible region is not empty and an equilibrium exists.

LEMMA 6.4. In model M2 under linear, Leontief and CES utility functions, the util-

ities of an equilibrium are unique.

PROOF. In section 5.2, we showed every equilibrium correspond to an solution of

a convex program with an objective function of the form Pi mi log ui. It is easy to see

that the objective function is strictly concave. Therefore, there is a unique vector u that
maximizes the objective function and the lemma follows.

7. RATIONALITY
In this section, we prove rationality results for the case of model M2 under linear
utility, and model M1 under linear utility and spending constraint utility. Speciﬁcally,
we show that for those market models, a rational equilibrium exists if an equilibrium
exists and all the parameters are rational numbers.

7.1. Market M1: Sellers have earning limits

LEMMA 7.1.

In model M1 under linear utility functions, a rational equilibrium

exists if Pj cj ≥ Pi mi and all the parameters speciﬁed are rational numbers.

PROOF. Let Ai be the set of goods that buyer i spends money on, A be the family
of Ai’s, and L be the set of sellers reaching their earning limits. An equilibrium price
p, the corresponding spending y and inverse MBB value α, if existed, must be a point
inside the polyhedron P (A, L) bounded by the following constraints:

∀i ∈ B, ∀j ∈ Ai
∀j ∈ A
∀i ∈ B, ∀j 6∈ Ai

uijαi = pj
uijαi ≤ pj
yij = 0

∀i ∈ B Xj
∀j ∈ L Xi
∀j 6∈ L Xi

yij = mi

yij = cj

pj ≥ cj

yij = pj

pj ≤ cj

∀i ∈ B, j ∈ A

yij ≥ 0

If an equilibrium price exists, then A and L such that P (A, L) is non-empty must
also exist. Every point inside that non-empty polyhedron must also correspond to an
equilibrium price. Since uij’s mi’s and cj’s are rational numbers, a vertex of P (A, L)
gives a rational equilibrium price. It then follows from Lemma 6.1 that a rational

LEMMA 7.2. In model M1 under spending constraint utility functions, a rational

equilibrium exists if and only if Pj cj ≥ Pi mi.
equilibrium exists if Pj cj ≥ Pi mi and all the parameters speciﬁed are rational num-
PROOF. For a buyer i and good j, let S+
ij = Bl
ij,
ij be the set of segments such that Bl
S0
ij be the set of segments such
that yl
ij sets, and L be the set of sellers
reaching their earning limits. An equilibrium price p, the corresponding spending y

ij = 0. Also, let S be the family of all S+

ij be the set of segments l such that yl

ij > 0, and S−
ij , S0

ij, S−

bers.

ij > yl

and inverse MBB value α, if existed, must be a point inside the polyhedron P (S, L)
bounded by the following constraints:
∀i ∈ B, ∀j ∈ A, ∀l ∈ S+
ij
∀i ∈ B, ∀j ∈ A, ∀l ∈ S0
ij
∀i ∈ B, ∀j ∈ A, ∀l ∈ S−
ij

yl
ij = Bl
ij
0 ≤ yl
yl
ij = 0

ij ≤ Bl
ij

ul
ijαi ≥ pj
ul
ijαi = pj
ul
ijαi ≤ pj
∀i ∈ B Xj,l
∀j ∈ L Xi,l
∀j 6∈ L Xi,l

yl
ij = cj

yl
ij = pj

yl
ij = mi

pj ≥ cj

pj ≤ cj

Suppose that all the parameters speciﬁed are rational numbers. Again, we can see that
a rational equilibrium must also exist if an equilibrium exists. It then follows that a

rational equilibrium exists if and only if Pj cj ≥ Pi mi.

7.2. Market M2: Buyers have utility limits

LEMMA 7.3.

In model M2 under linear utility functions, a rational equilibrium

exists if all the parameters speciﬁed are rational numbers.

PROOF. Let Ai be the set of goods that buyer i spends money on, A be the family of
Ai’s, and L be the set of buyers reaching their utility limits. An equilibrium price p, the
corresponding spending y and inverse MBB value α, if existed, must be a point inside
the polyhedron P (A, L) bounded by the following constraints:

∀i ∈ B, ∀j ∈ Ai
∀j ∈ A
∀i ∈ B, ∀j 6∈ Ai

uijαi = pj
uijαi ≤ pj
yij = 0

∀j ∈ A Xi
∀i ∈ L Xj
∀i 6∈ L Xj

yij = pj

yij = αidi Xj
yij ≤ αidi Xj

yij ≤ mi

yij = mi

∀i ∈ B, j ∈ A

yij ≥ 0

Suppose that all the parameters speciﬁed in this model are rational numbers. By a
similar argument to Lemma 7.1, we can see that an equilibrium exists if and only if a
rational equilibrium exists. It follow from Lemma 6.3 that a rational equilibrium price
must always exist if all the parameters speciﬁed are rational numbers.

8. GENERALIZED ARROW-HURWICZ THEOREM FOR LINEAR UTILITY
In this section, we prove the generalized version of Arrow-Hurwicz theorem for both
models M1 and M2 for the case of linear utilities. First we give some notation needed
for the proofs. We deﬁne a spending function to be a function F : [n] × [m] → R such
that F (i, j) denotes the amount of money that buyer i spends on good j, and a spending
vector v to be an m-dimensional vector indicating how much money is spent on each

good, that is, vj = Pi F (i, j).

8.1. Market M1: Sellers have earning limits

THEOREM 8.1. Let p be a equilibrium price in market model M1 under linear utility
q p > ∆q where fq is the excess

functions. Then for any non-equilibrium price q, we have f ⊤
demand vector at q, and ∆q = f ⊤

q q is the total excess demand value at q.

PROOF. Again, we assume there are two phases during which the price/spending

vectors pair change from (p, z) to (q, v).

(1) In the ﬁrst phase, the price vector change from p to q. However, each agent does
not spend his money on his optimal bundle at q. Instead, he still spends money
the same way he does at equilibrium p. Therefore, the spending vector z remains
unchanged in this phase.

(2) In the second phase, the price vector remains unchanged, and the spending vector
changes from z to v. Let y = v − z be a vector reﬂecting the change between two
spending vectors.

qj

Our goal is to prove that f T
j=1 (cid:16) vj
−sup(j)(cid:17)pj = Pn
Pn
First we prove that Pn

arranged so that

j=1 (cid:16) zj

qj

q p > ∆q, and this is equivalent to proving

j=1 (cid:16) zj+yj

qj

−sup(j)(cid:17)pj = Pn

j=1 (cid:16) zj

qj

−sup(j)(cid:17)pj+Pn

j=1

yj pj

qj

> ∆q

− sup(j)(cid:17)pj > ∆q. We may assume that the goods are

Here sup(j) is the amount of good that seller j is willing to sell under price q.

pj ≥ cj

— 1 ≤ j ≤ l :
— l + 1 ≤ j ≤ k :
— k + 1 ≤ j ≤ k + s :
— k + s + 1 ≤ j ≤ n :

qj ≥ cj

pj ≥ cj

qj ≤ cj

pj ≤ cj
pj ≤ cj

qj ≥ cj
qj ≤ cj

Since p is an equilibrium price, the total budget of all buyers is Pk

The total value of goods that sellers willing to sell at price q is:

j=1 cj +Pn

j=k+1 pj.

Therefore, the total excess demand is:

Pl
j=1 cj +Pk

j=l+1 qj +Pk+s

j=k+1 cj +Pn

j=k+s+1 qj

∆q = Pk

j=l+1(cj − qj) +Pk+s

j=k+1(pj − cj) +Pn

j=k+s+1(pj − qj)

− sup(j)(cid:17)pj, we compute F (j) in 4 different cases:

qj

qj

Let F (j) = (cid:16) vj
(1) 1 ≤ j ≤ l : F (j) = pj(cid:16) cj
qj(cid:17) = 0
− cj
(2) l + 1 ≤ j ≤ k : F (j) = pj(cid:16) cj
− 1(cid:17) = pj (cj −qj )
(3) k + 1 ≤ j ≤ k + s : F (j) = pj(cid:16) pj
The inequality follows because p2
(4) k + s + 1 ≤ j ≤ n : F (j) = pj(cid:16) pj

qj

qj

qj

qj

≥ cj − qj

j /cj − pj.

≥ p2

p2
j /cj −pj
qj /cj

qj(cid:17) =
− cj
j /cj − pj ≤ 0 and qj/cj ≥ 1.
− 1(cid:17) =

p2
j −pj qj

p2
j −pj qj

≥

pj

qj

= pj − qj.

The inequality follows from the facts that qj ≤ cj and qj ≤ cj ≤ pj.

The reason for the inequality is as follows. If pj ≥ qj then (cid:16) pj

qj

− 1(cid:17) ≥ 0, and

≥ 0, therefore increasing the denominator decreases the value of the num-

p2
j −pj qj

qj

ber. If pj < qj then (cid:16) pj

qj
nator decreases the value of the number.

− 1(cid:17) < 0, and

qj

p2
j −pj qj

< 0, therefore decreasing the denomi-

Therefore,

Pj F (j) ≥ Pk

j=l+1(cj − qj) +Pk+s

j=k+1(p2
j=k+1(pj − cj) +Pk+s
j − 2pjcj + c2

(p2

j=k+1

= ∆q −Pk+s
= ∆q +Pk+s

1
cj

j=k+s+1(pj − qj)

j /cj − pj) +Pn
j=k+1(p2

j /cj − pj) = ∆q +Pk+s

(pj −cj)2

j=k+1

cj

≥ ∆q

j ) = ∆q +Pk+s
j=1 (cid:16) zj

qj

− sup(j)(cid:17)pj > ∆q.

j=k+1(cj − pj) + (p2

j /cj − pj)

It is easy to see that if equality happens, q must be an equilibrium price. Therefore, for

≥ 0. Recall that y is the difference between two spend-

ings vectors v and z. We can break y into primitive spending changes from z to v.

j=1

yj pj

every non-equilibrium price q, we must have Pn
Next we prove that Pn
Pn
, and since i prefers k to j at price q uij
qj

= PiPchanges δjk of i δjk (cid:16) pk

yj pj

j=1

qk

qj

qj

qj(cid:17)
− pj

where δjk denotes a spending change from j to k of positive value. Since i prefers j to
k at price p uij
. It follows that for
pj
all primitive spending changes from j to k, pk
qk

. Therefore,

≤ uik
qk

≥ uik
pk

≥ pj
qj

yj pj

qj

Pn

j=1

= PiPchanges δjk of i δjk (cid:16) pk

qk

− pj

qj(cid:17) ≥ 0

as desired.

8.2. Market M2: Buyers have utility limits
We ﬁrst deﬁne a maximal spending to be a spending function such that every buyer
either reaches his utility limit or his budget limit. Note that in model M2, every spend-
ing function should be a maximal spending. We also deﬁne an optimal spending to be
a maximal spending in which every buyer spends money on his optimal bundle.

First, we state a lemma needed for proving of the theorem. Roughly speaking, the
lemma says that among all maximal spendings, an optimal spending results in least
money spent and most utility achieved for buyers.

LEMMA 8.2. Let F be a maximal spending and G be an optimal spending of the

same price vector. For every buyer i:

(1) The money i spends with respect to F is at least the money i spends with respect to

G.

(2) The utility i gets with respect to F is at most the utility i gets with respect to G.

PROOF.

(1) Assume the money i spends with respect to F is less than the money i spends with
respect to G for the sake of contradiction. Since i spends money on his optimal
bundle with respect to G, the amount of utility i gets with respect to F must also
be less than the amount of utility i gets with respect to G. Therefore, with respect
to F , i reaches neither budget limit nor utility limit. This is a contradiction since
F is a maximal spending.

(2) Assume the utility i gets with respect to F is more than the utility i gets with
respect to G. Since i spends money on his optimal bundle with respect to G, the
amount of money i spends with respect to F must also be more than the amount of

money i spends with respect to G. Therefore, with respect to G, i reaches neither
budget limit nor utility limit. This is a contradiction since G is a maximal spending.

Now we can prove the main theorem

THEOREM 8.3. Let p be a equilibrium price in market model M2 under linear util-
q p > ∆q where fq is the excess

ity functions. Then for any non-equilibrium price q, f T
demand vector at q, and ∆q = f T

q q is the total excess demand value at q.

PROOF.
We assume there are two phases during which the price/spending vectors pair

change from (p, p) to (q, v).

(1) In the ﬁrst phase, the price vector change from p to q. However, each agent does not
spend his money on his optimal bundle at q. Instead, he still only spends money on
the set of good he wants at equilibirum p. Speciﬁcally, if at price p a buyer i spends
x1, . . . , xk on k different goods, we break i into k buyers i1 . . . ik such that it has
1 xl, has the same utility function as i
but only spends money on good t. The spending of i in this phase is the combination
of all spendings of its at q. Let F be the spending function of the original buyers,
and F be the spending function of the divided buyers B. Note that F is a maximal
spending but might not be an optimal spending. Let z be the spending vector with
respect to F (and thus also to F ).

1 xl, utility limit dixt/Pk

budget limit mixt/Pk

(2) In the second phase, the price vector remains unchanged, and the spending vector
changes from z to v. Let G be the spending function of the original buyers in this
phase. We know that G is an optimal spending. Let y = v − z be a vector reﬂecting
the change between two spending vectors.

Our goal is to prove that f T

qj

j=1 (cid:16) vj
Pn

− 1(cid:17)pj = Pn
First, we prove that Pn

q p > ∆q, and this is equivalent to proving
j=1 (cid:16) zj +yj
j=1 (cid:16) zj

− 1(cid:17)pj = Pn

− 1(cid:17)pj +Pn

− 1(cid:17)pj > ∆q. Recall that zj is the amount of money

j=1 (cid:16) zj

yj pj

qj

> ∆q

j=1

qj

qj

qj

spent on good j in the ﬁrst phase, where a buyer is only interested in the set of goods
he buys at equilibrium p. We break the analysis into 2 cases:

— qj ≥ pj: Consider a divided buyer i spending money on j at equilibrium price p. If
i spends all his budget at equilibrium, his spending on j will remain unchanged in
this phase. If i reaches his utility limit at equilibrium, his spending on j will inrease
by a factor of at most qj/pj. It follows that zj ≤ qj.

— qj < pj: Consider a divided buyer i spending money on j at equilibrium price p. If
i is at his budget limit at equilibrium, his spending on j may decrease by a factor
of at least qj/pj. If i reaches his utility limit at equilibrium, his spending on j will
decrease by a factor of exactly qj/pj. It follows that zj ≥ qj.

Therefore, in both cases zj −qj
qj /pj

≥ zj − qj. We have

j=1 (cid:16) zj
Pn

qj

− 1(cid:17)pj = Pn

j=1

zj −qj
qj /pj

≥ Pn

j=1(zj − qj) = Pn

j=1 zj −Pn

j=1 qj

Since G is an optimal spending with respect to the original buyers and the utility
function is linear, G can be translated into a corresponding optimal spending G with
j=1 vj is a total optimal spending with

respect to the divided buyers B. Note that Pn

qj

qj

j=1 zj is a total maximal
spending with respect to F . Since F is a feasible spending and G is an optimal spending
j=1 vj.
j=1 qj = ∆q. Moreover, it can be seen that
if equality happens, q must also be an equilibrium price. Therefore, for every non-

respect to G and therefore also with respect to G, and Pn
of the same price q, using the ﬁrst part of Lemma 8.2, we have Pn
Therefore, Pn
equilibrium price q, we must have Pn
Now we prove that Pn

j=1 vj − Pn
j=1 (cid:16) zj

≥ 0 by analyzing over primitive spending changes.

− 1(cid:17)pj ≥ Pn

j=1 zj ≥ Pn

− 1(cid:17)pj > ∆q.

j=1 (cid:16) zj

yjpj

j=1

qj

Since F is a maximal spending and G is an optimal spending of the same price, from
the second part of Lemma 8.2, we know that the amount of utility each divided buyer
gets in G is at least as much as the amount he gets in F . Consider a divided buyer
i ∈ B. In F , i spends money on a single good j. In G, assume that i spends money on
k1, . . . , kl. We can break the spending change of i from phase 1 to phase 2 into primitive
changes j → k1, . . . , j → kt, . . . , j → kl. The notation j → k means instead of spending
δj on j according to F , i spends δk on k according to G and attains at least as much
utility. Let uij and uik be the amount of utility i gets from 1 unit of good j and k
respectively. Since i prefers j to k at equilibrium price p, we have uij
since the
pj
amount of utility he gets by spending δj on j at price qj is at most the amount of utility
. It
he gets by spending δk on k at price qk, uij
follows that δk

≥ 0. Therefore, summing over all divided buyers

. Therefore, pk
pj

≥ δj qk
δkqj

≥ uik
uij

≥ uik
pk

≤ uik

− δj

δk
qk

δj
qj

pk
qk

pj
qj

Pn

j=1

yjpj

qj

= PiPchanges j→k of i δk

pk
qk

− δj

pj
qj

≥ 0

9. POLYNOMIAL TIME COMPUTATION OF RATIONAL EQUILIBRIUM PRICES VIA ELLIPSOID

METHOD

9.1. Overview
First, we give an overview of the ellipsoid method. Suppose we want to ﬁnd a point
in a bounded polyheron P and have access to a seperation oracle that can answer the
question of whether a point z is in P or not, and give a seperating hyperplane in the
latter case. The ellipsoid method works as follows. We ﬁrst start with an initial ellip-
soid that is guarantee to contain the entire polyhedron P . We then call the seperation
oracle on the center z of the ellipsoid. If z is in P then we found a point in P as desired.
If z is not in P then the oracle returns a seperating hyperplane such that P and z are
on the opposite sides of that hyperplane. Note that this seperating hyperplane cuts our
ellipsoid into two half-ellipsoids, one of them contains P and the other contains z. We
then ﬁnd another ellipsoid enclosing the half-ellipsoid that contains P and recurse on
that ellipsoid. The algorithm stops when we ﬁnd a point inside P or when the volume
of the bounding ellipsoid becomes small enough and we are able to claim that there
is no point in P . In this section, we apply the ellipsoid method to ﬁnd an equilibrium
of our market models under linear utility function. Speciﬁcally, we show how to check
if a price is an equilibrium or not in polynomial time, implement a polynomial-time
seperation oracle and form an initial ellipsoid.

For the running time analysis, we restate the Theorem 12 from [Jain 2004], which
we utilize to demonstrate that a separation oracle can be used compute equilibrium
solutions in polynomial time if a rational solution exists.

THEOREM 9.1. Given a convex set via a strong separation oracle with a guarantee
that the set contains a point with binary encoding length at most φ, a point in the convex
set can be found in polynomial time.

This theorem is proved using ellipsoid method and simultaneous diophantine approx-
imation, and we refer the readers to the paper [Jain 2004] for a detailed proof.

9.2. Checking if a given price is an equilibrium price
Given a price p, the MBB graph is a directed bipartite graph with directed edge (i, j)
between buyer i and good j if and only if j is an MBB good of i at price p. We can build a
directed network as follows: assign capacity of inﬁnity to all edges in the MBB graph;
introduce a source vertex s and a directed edge from s to every i ∈ B with capacity
equal to the amount that i is willing to spend; introduce a sink vertex t and a directed
edge from every j ∈ A to t with capacity equal to the value of good that j is willing to
sell. After that, checking if a given price is an equilibrium price can be done via one
s − t max-ﬂow computation in the network.

9.3. Seperation oracle
The generalized version of Arrow-Hurwicz theorem in Section 8 gives us a simple way
to implement a seperation oracle in polynomial time. The theorem says that for any
non-equilibrium price q, the half-plane f T
q x > ∆q, where fq is the excess demand func-
tion and ∆q = f T
q q is the total excess spending with respect to q, contains all equilib-
rium prices. Therefore, the hyperplane f T
q x = ∆q can serve as a seperating hyperplane,
and since we can compute fq and ∆q in polynomial time, we have a polynomial-time
seperation oracle.

9.4. Bounding box
We choose the initial ellipsoid to be the enclosing ball of an n dimensional hypercube.
The hypercube is guaranteed to contain least one equilibrium price.

9.4.1. Market M1: Sellers have earning limits. Consider an equilibrium price p in this mar-
ket. If pj > cj for all good j in the market, we can scale prices of all goods down by the
same factor so that there is one good k with pk = ck. Therefore, we may assume that
there exists some k such that pk ≤ ck. For a good j, let i be a buyer buying j at price p.
We have

and

uij
pj

≥

uik
pk

≥

uik
ck

pj ≤

uijck
uik

It follows that the hypercube {p : 0 ≤ pj ≤ maxi,k
rium price.

uij ck
uik

} contains at least one equilib-

9.4.2. Market M2: Buyers have utility limits. In this market model, let M be the total bud-
get of all buyers. We claim that the hypercube {p : 0 ≤ pi ≤ M } contains all equilibrium
prices. This is because any price outside of that cube has a coordinate pi > M , and thus
can not be an equilibrium price.

10. DISCUSSION
An obvious and important open question is to obtain a convex program for the common
generalization of markets M1 and M2 in which buyers have utility bounds and sellers

have earning bounds. Despite much effort, we could not ﬁnd such a convex program
even for the case of linear utilities.

For market M1, we obtained a convex program only for the case of linear utilities
but not Leontief or CES utilities since our procedure for obtaining the dual of a convex
program works only if the constraints are all linear. Can it be enhanced in suitable
ways?

Finally, the Arrow-Hurwicz theorem works for utilitites satisfying weak gross sub-
stitutability. On the other hand, its extension to our models M1 and M2 works only
for the case of linear utilities. We believe it should be possible to extend to utilities
satisfying weak gross substitutability.

REFERENCES

K. Arrow and L. Hurwicz. weak gross substitutability and the exictence of competitive

equilibria. International Economic Review, 33:38–49, 1965.

Benjamin Birnbaum, Nikhil R Devanur, and Lin Xiao. Distributed algorithms via
gradient descent for ﬁsher markets. In Proceedings of the 12th ACM conference on
Electronic commerce, pages 127–136. ACM, 2011.

S. Boyd and L. Vandenberghe. Convex Optimization. Cambridge University Press,

2009.

W. C. Brainard and H. E. Scarf. How to compute equilibrium prices in 1891. Cowles

Foundation Discussion Paper, (1270), 2000.

Niv Buchbinder, Shahar Chen, Anupam Gupta, Viswanath Nagarajan, et al. On-
arXiv preprint

line packing and covering framework with convex objectives.
arXiv:1412.8347, 2014.

Sourav Chakraborty, Nikhil R Devanur, and Chinmay Karande. Market equilibrium
with transaction costs. In Internet and Network Economics, pages 496–504. Springer,
2010.

Yun Kuen Cheung, Richard Cole, and Nikhil Devanur. Tatonnement beyond gross
substitutes?: gradient descent to the rescue. In Proceedings of the forty-ﬁfth annual
ACM symposium on Theory of computing, pages 191–200. ACM, 2013.

B. Codenotti and K. Varadarajan. Efﬁcient computation of equilibrium prices for mar-

kets with Leontief utilities. In ICALP, 2004.

Bruno Codenotti and Kasturi Varadarajan. Computation of market equilibria by con-
vex programming. In N. Nisan, T. Roughgarden, E. Tardos, and V. V. Vazirani, edi-
tors, Algorithmic Game Theory, chapter 5. Cambridge University Press, New York,
NY, USA, 2007. ISBN 0521872820.

Bruno Codenotti, Benton McCune, and Kasturi Varadarajan. Market equilibrium via
the excess demand function. In ACM Symposium on the Theory of Computing, 2005.
N. Devanur, C. H. Papadimitriou, A. Saberi, and V. V. Vazirani. Market equilibrium

via a primal-dual algorithm for a convex program. JACM, 55(5), 2008.

Nikhil R Devanur and Zhiyi Huang. Primal dual gives almost optimal energy efﬁcient
online algorithms. In Proceedings of the Twenty-Fifth Annual ACM-SIAM Sympo-
sium on Discrete Algorithms, pages 1123–1140. SIAM, 2014.

Nikhil R Devanur, Jugal Garg, and L ´aszl´o A V´egh. A rational convex program for

linear arrow-debreu markets. arXiv preprint arXiv:1307.8037, 2013.

E. Eisenberg and D. Gale. Consensus of subjective probabilities: the Pari-Mutuel

method. The Annals of Mathematical Statistics, 30:165–168, 1959.

D. Gale. Theory of Linear Economic Models. McGraw Hill, N.Y., 1960.
Jugal Garg.

for Market Equilibrium.

Algorithms

of Computer Science
http://www.cse.iitb.ac.in/∼jugal/aps1.pdf.

and Engineering,

IIT Bombay,

PhD thesis, Dept.
URL

2008.

Jugal Garg, Ruta Mehta, Milind Sohoni, and Vijay V. Vazirani. A complementary pivot
algorithm for market equilibrium under separable piecewise-linear concave utilities.
In ACM Symposium on the Theory of Computing, 2012.

Jugal Garg, Ruta Mehta, Milind Sohoni, and Nisheeth K Vishnoi. Towards polynomial
simplex-like algorithms for market equilibria. In Proceedings of the Twenty-Fourth
Annual ACM-SIAM Symposium on Discrete Algorithms, pages 1226–1242. SIAM,
2013.

Jugal Garg, Ruta Mehta, and Vijay V. Vazirani. Dichotomies in equilibrium compu-
tation, and complementary pivot algorithms for a new class of non-separable utility
functions. In STOC, 2014.

Zhiyi Huang and Anthony Kim. Welfare maximization with production costs: a primal
dual approach. In Proceedings of the Twenty-Sixth Annual ACM-SIAM Symposium
on Discrete Algorithms, pages 59–72. SIAM, 2015.

Sungjin Im, Jitendra Kulkarni, Kamesh Munagala, and Kirk Pruhs. Selﬁshmigrate:
A scalable algorithm for non-clairvoyantly scheduling heterogeneous processors. In
Foundations of Computer Science (FOCS), 2014 IEEE 55th Annual Symposium on,
pages 531–540. IEEE, 2014.

K. Jain. A polynomial time algorithm for computing the Arrow-Debreu market equilib-
rium for linear utilities. In In Proc. of the IEEE Annual Symposium on Foundations
of Computer Science FOCS, 2004.

Kamal Jain and Mohammad Mahdian. Computing equilibria in a Fisher market with
linear single-constraint production units. In Workshop on Internet and Network Eco-
nomics, pages 788–792, 2005.

Kamal Jain and Vijay V. Vazirani. Eisenberg-Gale markets: Algorithms and game-
theoretic properties. Games and Economic Behavior, 70(1):84–106, September 2010.
Janardhan Kulkarni and Vahab Mirrokni. Robust price of anarchy bounds via lp and
fenchel duality. In Proceedings of the Twenty-Sixth Annual ACM-SIAM Symposium
on Discrete Algorithms, pages 1030–1049. SIAM, 2015.

R Tyrrell Rockafellar. CONVEX ANALYSIS. Princeton University Press, 1970.
VI Shmyrev. An algorithm for ﬁnding equilibrium in the linear exchange model with
ﬁxed budgets. Journal of Applied and Industrial Mathematics, 3(4):505–518, 2009.
Vijay V. Vazirani. Combinatorial algorithms for market equilibrium. In N. Nisan,
T. Roughgarden, E. Tardos, and V. V. Vazirani, editors, Algorithmic Game The-
ory, chapter 5. Cambridge University Press, New York, NY, USA, 2007.
ISBN
0521872820.

