6
1
0
2

 
r
a

 

M
7
1

 
 
]
h
p
-
t
n
a
u
q
[
 
 

1
v
3
2
4
5
0

.

3
0
6
1
:
v
i
X
r
a

An Irreconcilable Diﬀerence Between Quantum Walks and

Adiabatic Quantum Computing

Faculty of Computing, University of Latvia, Rai¸na bulv. 19, R¯ıga, LV-1586, Latvia∗

Thomas G. Wong

Department of Mathematics, University of California, San Diego, La Jolla, CA 92093-0112†

David A. Meyer

Continuous-time quantum walks and adiabatic quantum evolution are two general techniques for
quantum computing, both of which are described by Hamiltonians that govern their evolutions by
Schr¨odinger’s equation. In the former, the Hamiltonian is ﬁxed, while in the latter, the Hamiltonian
varies with time. As a result, their formulations of Grover’s algorithm evolve diﬀerently through
Hilbert space. We show that this diﬀerence is fundamental; they cannot be made to evolve along each
other’s path without introducing structure more powerful than the standard oracle for unstructured
search. For an adiabatic quantum evolution to evolve like the quantum walk search algorithm, it
must interpolate between three ﬁxed Hamiltonians, one of which is complex and introduces structure
that is stronger than the oracle for unstructured search. Conversely, for a quantum walk to evolve
along the path of the adiabatic search algorithm, it must be a chiral quantum walk on a weighted,
directed star graph with structure that is also stronger than the oracle for unstructured search.
Thus the two techniques, although similar in being described by Hamiltonians that govern their
evolution, compute by fundamentally irreconcilable means.

PACS numbers: 03.67.Ac, 03.67.Lx

I.

INTRODUCTION

Grover’s quantum search algorithm [1] is ubiquitous
in quantum information processing [2], and its formu-
lation into various quantum computing paradigms re-
veals major developments of the ﬁeld. Grover’s original
unstructured search algorithm in 1996 was proposed in
an era when the quantum circuit model was the only
mainstream paradigm for quantum computing, so it con-
sists of a series of quantum gates applied in discrete-
time. When analog quantum computing was developed
by Farhi and Gutmann in 1998 [3], where the system
evolves in continuous-time by Schr¨odinger’s equation,
Grover’s algorithm was the ﬁrst algorithm to be formu-
lated in this new model. When quantum walks were
popularized as algorithmic tools, the search problem was
soon investigated [4], and Farhi and Gutmann’s algo-
rithm was shown to be a quantum walk [5]. Another
model of analog quantum computing by Schr¨odinger evo-
lution emerged in 2000 [6], this time based on the adia-
batic theorem with a time-dependent Hamiltonian. This
was also developed by Farhi and Gutmann, in collabo-
ration with Goldstone and Sipser, and was likely partly
motivated by their previous work. Again, unstructured
search was one of the ﬁrst problems considered [6], al-
though it took some additional work by Roland and Cerf
to get a square-root speedup [7]. Thus when new mod-
els for quantum computing develop, new formulations of
Grover’s algorithm immediately or soon follow.

∗ twong@lu.lv
† dmeyer@math.ucsd.edu

Since Grover’s algorithm is a common thread across
each paradigm, it is natural to compare diﬀerent formula-
tions of it. Some prior work on such comparisons include
Roland and Cerf’s [8] connection between Grover’s orig-
inal circuit-based algorithm, Farhi and Gutmann’s ana-
log algorithm, and their local adiabatic algorithm; and
Krovi, Ozols, and Roland’s [9] link between discrete-time
quantum walks (or Markov chains) and adabatic quan-
tum computing. In this paper, we focus on continuous-
time quantum walks and adiabatic quantum computing,
both of which evolve in continuous-time by Schr¨odinger’s
equation. But rather than focus on their similarities as
in [8], we focus their diﬀerences.

In continuous-time quantum walks, the Hamiltonian
and its eigenstates are ﬁxed throughout the evolution
(with the exception of multi-stage quantum walks, which
are ﬁxed for each stage [10–12], and nonlinear quantum
walks, whose Hamiltonians vary to keep the eigenstates
ﬁxed [13–15]).
In adiabatic quantum computing, how-
ever, the Hamiltonian is intentionally varied, such that
the system stays in its instantaneous ground state [6].
Thus ﬁxed eigenstates are used for one, and time-varying
eigenstates are required for the other.

Comparing Grover’s algorithm in these two models
shows that they evolve through Hilbert space along sig-
niﬁcantly diﬀerent paths. Here, we examine the reasons
for this diﬀerence, showing why, under reasonable condi-
tions, this diﬀerence cannot be overcome. To do this, we
review Grover’s algorithm [1] in Section II, followed by
Farhi and Gutmann’s [3] quantum walk analogue in Sec-
tion III, emphasizing that they follow far diﬀerent paths
[16]. This contrasts with Roland and Cerf’s local adia-
batic version [7] in Section IV, which does follow the same
path as Grover’s algorithm [8]. In Section V, we deter-

2

(a)

(b)

FIG. 2. The complete graph with N = 6 vertices for Farhi
and Gutmann’s quantum walk search algorithm.

basis states alone. That is, Rw is a reﬂection through |w(cid:105).
The system |ψ(cid:105) begins in the equal superposition |s(cid:105) of
the basis states:

N(cid:88)

i=1

|i(cid:105).

|s(cid:105) =

1√
N

(c)

(d)

FIG. 1. Evolution of quantum algorithms on the Bloch sphere
with the marked vertex |w(cid:105) at the North Pole, the equal su-
perposition of unmarked vertices |r(cid:105) at the South Pole, and
N = 1024: (a) Grover’s original discrete-time search algo-
rithm, (b) Farhi and Gutmann’s quantum walk analogue, (c)
Roland and Cerf’s adiabatic analogue, and (d) Fenner’s quan-
tum walk.

mine what adiabatic evolution follows the same path as
Farhi and Gutmann’s quantum walk search algorithm,
showing that it necessitates a complex Hamiltonian that
includes stucture that is far more powerful than the usual
yes/no oracle. In Section VI, we consider the converse,
showing that the quantum walk that follows the same
path as Roland and Cerf’s adiabatic search algorithm is
Fenner’s Hamiltonian construction [16], which we inter-
pret as a chiral quantum walk [17, 18] on the weighted,
directed star graph and which also abandons the typical
notion of an oracle. As part of the analysis, we improve
upon Roland and Cerf’s results [8] by showing that the
ground state of their local adiabatic algorithm follows
Grover’s original path for all N , not just in the large N
limit. We conclude in Section VII, having shown that the
two computational models are unable to simulate each
other’s unstructured search evolutions without abandon-
ing the usual computational and oracular conditions.

II. GROVER’S ORIGINAL ALGORITHM

Grover’s algorithm acts on this by repeatedly applying

where Rs⊥ is a reﬂection through (cid:12)(cid:12)s⊥(cid:11). These two re-

U = Rs⊥Rw,

(1)

ﬂections yield an overall rotation [2, 19], and the system
evolves in a 2D subspace spanned by |w(cid:105) and the equal
superposition of unmarked states

(cid:88)

i(cid:54)=w

|i(cid:105).

|r(cid:105) =

1√
N − 1

We can visualize the evolution in this 2D subspace as
points on the Bloch sphere with |w(cid:105) and |r(cid:105) as the North
and South Poles, respectively, as shown in Fig. 1a. The
system starts near the South Pole and takes ﬁxed-length
steps towards the North Pole. Since |ψ(cid:105) is a superposi-
tion of |w(cid:105) and |r(cid:105) with real coeﬃcients, the points lie
on the Bloch sphere’s xz-plane. After roughly π
N /4
applications of U , the system is rotated near the North
Pole, so we have found |w(cid:105) with probability near 1.

√

III. SEARCH BY QUANTUM WALK

Now let us formulate Grover’s algorithm in analog
computational models, here as a quantum walk and next
as an adiabatic evolution. As a quantum walk [4], the N
vertices of a graph can be used to label computational
basis states {|1(cid:105), . . . ,|N(cid:105)}, and we search for a marked
vertex |w(cid:105) by querying an oracle. In continuous-time [5],
the system |ψ(cid:105) evolves from the equal superposition |s(cid:105)
over the vertices by Schr¨odinger’s equation

We begin by reviewing Grover’s original discrete-time
algorithm for solving the unstructured search problem.
Given a computational basis {|1(cid:105), . . . ,|N(cid:105)} of an N -
dimensional Hilbert space, the unstructured search prob-
lem is to ﬁnd a “marked” basis state |w(cid:105) by querying an
oracle Rw that ﬂips the sign of |w(cid:105) while leaving the other

with Hamiltonian

|ψ(cid:105) = H|ψ(cid:105),

i

d
dt

H = −γA − |w(cid:105)(cid:104)w|,

(2)

(3)

xyz3

where γ is the jumping rate, A is the adjacency matrix
of the graph (Aij = 1 if i and j are connected, and 0 oth-
erwise) that eﬀects the quantum walk [20], and |w(cid:105)(cid:104)w|
is a Hamiltonian oracle [21] that marks the vertex to
be found. Grover’s problem is unstructured search, so
it is search on the complete graph of N vertices [5], an
example of which is shown in Fig. 2.
In this case, the
adjacency matrix has zeros on the diagonal and ones ev-
erywhere else. Since adding a multiple of the identity
matrix only contributes a global, unobservable phase, we
add −γI to the Hamiltonian, yielding −γ(A+I)−|w(cid:105)(cid:104)w|,
which is

H = −γN|s(cid:105)(cid:104)s| − |w(cid:105)(cid:104)w|.

(4)

(a)

(b)

FIG. 3. For adiabatic quantum search with N = 64: (a) the
energy gap g(s) in (9) for s ∈ [0, 1], and (b) Roland and Cerf’s
schedule s(t) as t ∈ [0 : T ] with  = 1.

H(s) =

(5)

When γ = 1/N [5], this Hamiltonian (4) equals the one
introduced by Farhi and Gutmann to solve Grover’s prob-
lem [22], so their algorithm is actually a quantum walk
on the complete graph. Using their results [3], the Hamil-
tonian in the {|w(cid:105),|r(cid:105)} basis is

H =

(cid:19)

.

√

√

N − 1
N − 1 N − 1

−1
N

(cid:18) N + 1
 1√

(cid:16) t√
(cid:113) N−1

cos

N

N

(cid:17)

+ i sin

(cid:16) t√

N

N cos

(cid:16) t√
(cid:17)

N

(cid:17)
 .

|ψ(t)(cid:105) = eit

Applying the time-evolution operator e−iHt to the initial
state |s(cid:105), the state of the system at time t is

√
Thus the system reaches a success probability of 1 at time
π
N /2.
Since the system evolves in the same 2D subspace
spanned by {|w(cid:105),|r(cid:105)}, we again visualize the evolution
on the Bloch sphere [23], as shown in Fig. 1b. This re-
veals what was ﬁrst pointed out by Fenner [16]: Farhi
and Gutmann’s algorithm evolves on a path far from,
and slightly longer than, Grover’s.

IV. ADIABATIC QUANTUM SEARCH

Let us compare this to the adiabatic formulation of
Grover’s algorithm. In adiabatic quantum computing [6],
the system evolves by Schr¨odinger’s equation (2) with
time-dependent Hamiltonian

H(s) = (1 − s(t)) H0 + s(t)Hf ,

(6)

where the interpolation schedule s goes from 0 to 1 as the
time t goes from 0 to the runtime T . This interpolates be-
tween the initial Hamiltonian H0 and ﬁnal Hamiltonian
Hf . For the search problem, they are

H0 = I − |s(cid:105)(cid:104)s|, Hf = I − |w(cid:105)(cid:104)w|,

(7)
so the initial ground state is the equal superposition |s(cid:105),
which is the initial state of the system, and the ﬁnal
ground state is the marked state |w(cid:105) that we want to

ﬁnd. Note if we drop multiples of I from this adiabatic
Hamiltonian, divide it by s, and identify γN = (1− s)/s,
we get Farhi and Gutmann’s quantum walk Hamiltonian
(4); this observation, however, does not yield a funda-
mental equivalence, since we now vary the Hamiltonian
with time rather than keep it ﬁxed. The system evolves
in the same 2D subspace spanned by {|w(cid:105),|r(cid:105)}, in which
the Hamiltonian (6) is

(cid:32)

(1 − s) N−1
√
N
−(1 − s)
N−1
N

√

−(1 − s)
N−1
N
1 − (1 − s) N−1

N

(cid:33)

.

The (unnormalized) eigenvectors of this are

ψ0,1(s) =

2(1 − s) − N (1 − 2s) ± N g

√
2

N − 1(1 − s)

|w(cid:105) + |r(cid:105)

(8)

with energy gap

g(s) =

(cid:114)

N − 4(N − 1)s(1 − s)

N

.

(9)

The adiabatic theorem says that if the system evolves
“much slower” than the reciprocal of the energy gap
squared [24], then the system stays in its instantaneous
ground state throughout its evolution. For search, this
means the system would evolve from |s(cid:105) to |w(cid:105), succeed-
ing. The energy gap (9) is shown in Fig. 3a, and Roland
and Cerf showed that the interpolation schedule

(cid:110)

tan−1(cid:104)√
+ tan−1(cid:16)√

N − 1(2s − 1)

(cid:17)(cid:111)

,

N − 1

(cid:105)

(10)

t =

√
N
N − 1

2

whose inverse is plotted in Fig. 3b, locally satisﬁes the
adiabatic theorem, so it evolves quickly when the gap is
large and slowly when the gap is small [7]. With this
schedule, the algorithm takes total time

tan−1(cid:16)√

N − 1

(cid:17) ≈ π

2

√

N

(11)

T =

√

N
N − 1



00.20.40.60.81s00.20.40.60.81g0246810t00.20.40.60.81sto evolve to its ﬁnal state |ψ(s = 1)(cid:105). From Rezakhani,
Pimachev, and Lidar’s [25] explicit evolution of the time-
dependent Schr¨odinger equation, when the runtime scales
as

(cid:18)√

(cid:18) 1

(cid:19)(cid:19)

δ

T = O

N ln

,

then the adiabatic error, which measures how far the
system is from its true ﬁnal ground state |w(cid:105), is upper

bounded by δ: (cid:113)

1 − |(cid:104)w|ψ(s = 1)(cid:105)|2 ≤ δ.

(12)

√

Thus evolving with constant  yields an O(
N ) runtime,
which implies that ln(1/δ) is a nonzero constant, so δ
is a constant less than 1. Thus the adiabatic error is
√
upper bounded by a constant less than 1, and we have an
O(
N ) search algorithm, even with an expected constant
number of repetitions, on average.

√
Although constant  yields an O(

N ) search algo-
rithm, the state may be far from its instantaneous ground
state ψ0(s) from (8). If  scales less than a constant so
that it decreases with N , however, then it does follow
ψ0(s) for large N . Since ψ0(s) is spanned by {|w(cid:105),|r(cid:105)},
we plot its evolution on the Bloch sphere in Fig. 1c, and
it stays in the xz-plane because it always has real coef-
ﬁcients, following the same path as Grover’s algorithm
[8].

V. ADIABATIC EVOLUTION FOLLOWING

QUANTUM WALK SEARCH

We have seen that the adiabatic algorithm follows the
same path as Grover’s original algorithm, but is far from
Farhi and Gutmann’s quantum walk. Now we determine
what adiabatic algorithm does follow the same path as
the quantum walk search algorithm in Fig. 1b. To do
this, we ﬁnd what time-dependent Hamiltonian H(t) has
(5) as its ground state.

To simplify the notation, we drop the global phase of

(5) and name its amplitudes α and β, i.e.,

α(t) =

1√
N

β(t) =

cos

(cid:114)

(cid:19)

(cid:18) t√

N
N − 1
N

cos

+ i sin

(cid:18) t√

N

(cid:19)

(cid:18) t√
(cid:19)

.

N

Then we want the ground state of the adiabatic Hamil-
tonian H(t) to be

4

Say these eigenstates have respective eigenvalues λ0 and
λ1. Then since the eigenvectors diagonalize the Hamilto-
nian,

H(t) = λ0|ψ0(cid:105)(cid:104)ψ0| + λ1|ψ1(cid:105)(cid:104)ψ1|

(cid:19)
(cid:18)|α|2 αβ
(cid:18)λ0|α|2 + λ1β2

α∗β β2

= λ0

=

+ λ1

(cid:19)

(cid:18) β2 −α∗β
(cid:19)

−αβ |α|2

(λ0 − λ1)αβ
(λ0 − λ1)α∗β λ0β2 + λ1|α|2

.

Usually, adiabatic algorithms have real Hamiltonians,
such as the unstructured search algorithm (6) and (7)
in the last section. But here, the only way to make the
Hamiltonian real is for λ0 = λ1, but this detrimentally
eliminates the energy gap and causes the Hamiltonian
to be the identity matrix. So the adiabatic Hamiltonian
must be complex. For simplicity, we choose λ0 = −λ1,
which is always possible because we can add a multiple
of the identity matrix to the Hamiltonian to redeﬁne the
zero of energy. Then the Hamiltonian is

(cid:18)−|α|2 + β2 −2αβ

(cid:19)

−2α∗β

|α|2 − β2

.

H(t) = λ1

Plugging in for α and β, the Hamiltonian reduces to a
pleasant interpolation between three terms:

(cid:104)
(1 − s)H0 + sHf +(cid:112)s(1 − s)He

(cid:105)

,

H(s) = λ1(s)

where

s(t) = sin2

is the interpolation schedule and

(cid:32) N−2

H0 =

− 2

√
N
N−1
N

He =

√
− 2
N−1
N
− N−2

 0
(cid:113) N−1

N

2i

N

, Hf =

(cid:113) N−1

−2i

N

0

(cid:18)−1 0
(cid:19)


0 1

,

are respectively the beginning, ﬁnal, and “extra” Hamil-
tonians. Having a third, extra Hamiltonian is a common
technique for manipulating the evolution path of adia-
batic algorithms to avoid a small gap in the space of
Hamiltonians [26–28], although it typically carries a fac-
tor of s(1 − s), whereas ours contains a square-root.

Before commenting on the consequences of this evolu-
tion, we still need to ﬁnd λ1 in terms of s. Diﬀerentiating
the interpolation schedule s(t) and using the adiabatic
theorem ds/dt = g2(s),

(cid:19)

(cid:18) t√
(cid:33)

N

|ψ0(t)(cid:105) = α(t)|w(cid:105) + β(t)|r(cid:105).

2 sin

cos

N

= g2(s).

The other eigenstate of H(t), which is its ﬁrst and only
excited state, is orthogonal to this, so it is
|ψ1(t)(cid:105) = β(t)|w(cid:105) − α∗(t)|r(cid:105).

So the energy gap is

g =

(cid:19)

(cid:18) t√

(cid:19) 1√
(cid:18) t√
(cid:115)
2(cid:112)s(1 − s)

N

N

√



N

Since λ0 = −λ1, the energy gap is g(s) = 2λ1, or λ1 =
g(s)/2. Thus

(cid:114)

λ1(s) = 4

s(1 − s)
42N

.

(cid:114)

H(s) = 4

s(1 − s)
42N

Putting everything together, the adiabatic Hamiltonian
that follows the quantum walk search algorithm’s evolu-
tion is

(cid:104)
(1 − s)H0 + sHf +(cid:112)s(1 − s)He
has ground state |s(cid:105) and excited state(cid:12)(cid:12)s⊥(cid:11) with respec-

Now let us discuss the consequences of this Hamilto-
nian, aside from it being complex rather than real. Con-
sider each of the three Hamiltonians comprising it. H0
tive eigenvalues −1 and 1. Thus it can be written as

(cid:105)

.

H0 =(cid:12)(cid:12)s⊥(cid:11)(cid:10)s⊥(cid:12)(cid:12) − |s(cid:105)(cid:104)s|.

Similarly, Hf has ground state |w(cid:105) and excited state |r(cid:105)
with respective eigenvalues −1 and 1, so it is

Hf = |r(cid:105)(cid:104)r| − |w(cid:105)(cid:104)w|.

These look fairly similar to the initial and ﬁnal Hamil-
tonians of the standard adiabatic quantum search algo-
rithm (7), which had the same eigenvectors, but with
eigenvalues 0 and 1. These similarities are deceiving,
however. The interpolation schedule here is very diﬀer-
ent from the unstructured search algorithm’s (10), and
most strikingly diﬀerent is the extra Hamiltonian, which
can be written as

(cid:114)

He = 2i

N − 1
N

(|r(cid:105)(cid:104)w| − |w(cid:105)(cid:104)r|) .

This extra term changes everything. Rather than just
having the |w(cid:105)(cid:104)w| term in Hf serving as a standard
yes/no Hamiltonian oracle [21], He acts much more pow-
erfully. It introduces structure that drives evolution be-
tween |w(cid:105) and |r(cid:105), rather than just applying a phase to
|w(cid:105). The power of this term is evident in the operator
norm of H(s), which is Θ(1/N 1/4) compared to Θ(1) for
the unstructured search Hamiltonian (6) and (7). So if
H(s) were rescaled to have constant operator norm, it
would have a constant energy gap and ﬁnd |w(cid:105) in con-
stant time. This conﬁrms that the “oracle” is no longer a
standard yes/no one, for which Grover’s Θ(
N ) runtime
is optimal [3, 29]. Thus while there exists an adiabatic
evolution that follows the same path as the quantum walk
search algorithm, it abandons the typical notion of an or-
acle and so does not solve the search problem itself.

√

VI. QUANTUM WALK FOLLOWING

ADIABATIC QUANTUM SEARCH

We now consider the converse: whether a quantum
walk exists that can follow the same evolution as the adi-
abatic quantum search algorithm in Fig. 1c. In response

5

to the observation that Farhi and Gutmann’s quantum
walk search algorithm in Fig. 1b evolves far from Grover’s
in Fig. 1a, Fenner [16] gave an alternative Hamiltonian

HF =

i√
N

(|w(cid:105)(cid:104)s| − |s(cid:105)(cid:104)w|)

(13)

that for some time interval exactly applies Grover’s iter-
ate (1) [30]. This also evolves in the subspace spanned
by {|w(cid:105),|r(cid:105)}, and visualizing the evolution governed by
this Hamiltonian on the Bloch sphere in Fig. 1d shows
that it follows the same path as Grover’s algorithm, as
expected.
Let us explicitly ﬁnd the state |ψF(t)(cid:105) as it evolves by
Fenner’s Hamiltonian (13). In the {|w(cid:105),|r(cid:105)} basis,

Then the time-evolution operator

e−iHFt =

HF =

i
N

− sin

 cos
 1√

N

(cid:18)
−√
(cid:16)√
(cid:16)√

0
N − 1

(cid:17)
(cid:17)

(cid:19)

.

√

N − 1
0

(cid:16)√
(cid:16)√

sin

N−1
N t
N−1
N t
√
N − 1t/N . Applying this to the

N−1
N t
N−1
N t

(14)

cos

(cid:17)
(cid:17)
(cid:16)√
(cid:16)√

is simply a rotation by
initial state |s(cid:105), the state of the system at time t is
N−1
N t
N−1
N t

(cid:16)√
(cid:16)√

(cid:17) − 1√

N−1
N t
N−1
N t

cos
√
N−1√

|ψF(t)(cid:105) =

√
N−1√

(cid:17)

cos

sin

sin

+

N

(cid:17)
(cid:17) .

N

N

√

So the system reaches success probability 1 at time
roughly π
N /2. Since this state has real amplitudes,
it stays in the xz-plane of the Bloch sphere. For im-
portant use later, we unnormalize the state so that the
coeﬃcient of |r(cid:105) is 1:
N−1
N t
cos
√
N − 1 cos

(cid:17)
(cid:17)|w(cid:105) + |r(cid:105).

(cid:17) − sin

(cid:17)
(cid:16)√

(cid:16)√
(cid:16)√

N − 1 sin

(cid:16)√

ψF(t) =

+
N−1
N t

N−1
N t
N−1
N t

√

(15)
While Fenner’s Hamiltonian (13) does not take the
form of a typical quantum walk (3), we show that it still
has local transitions and is a type of quantum walk. The
Hamiltonian (13) acts on computational basis states by

(cid:40)−i
(cid:80)
j(cid:54)=w |j(cid:105),
N |w(cid:105),

N
i

HF|i(cid:105) =

i = w
i (cid:54)= w

.

Thus it takes amplitude from the marked vertex and
transitions it to the other vertices with a factor of −i/N ,
and takes amplitude from the non-marked vertices and
transitions it to the marked vertex with a factor of i/N .
This can be drawn as shown in Fig. 4. Thus Fenner’s
Hamiltonian eﬀects a quantum walk on the star graph,
with the central node “marked,” and with the edges di-
rected and weighted so that leaving the central node has
a weight of −i/N and going into the central node has

with  = 1.

6

The ﬁrst argument comes from analyzing the rotation
rates. As shown by Roland and Cerf in Eqs. (32) and
(37) of [8], their adiabatic algorithm with schedule (10)
N − 1/N for
rotates with constant angular velocity 
large N . From (14), Fenner’s algorithm applies rotations
N − 1/N . Thus they yield
at constant angular velocity
the same rotation rate when  = 1 for large N .

√

√

The second argument proves an exact algebraic equiv-
alence, which is true for all N , not just when it is large.
Beginning with Fenner’s (unnormalized) state in (15),
we multiply the top and bottom of the |w(cid:105) coeﬃcient by
sin(·), where the dot indicates

N − 1t/N :

√

ψF(t) =

sin(·) cos(·) +
N − 1 sin2(·)
√
N − 1 sin(·) cos(·) − sin2(·)

|w(cid:105) + |r(cid:105).

(16)

√

Now we want to substitute Roland and Cerf’s interpo-
lation schedule (10) with  = 1, showing that it equals
the adiabatic algorithm’s ground state. To do this, we
rewrite the schedule using the trigonometric identity

tan−1(α) + tan−1(β) = tan−1

 1

1
2

which causes it to become [8]
√
√

2s

2

t =

N√
N√

N−1
N−1

N−1
N−1

1−(N−1)(2s−1)
1−(N−1)(2s−1)

2s

tan−1(cid:16)
(cid:104)
tan−1(cid:16)
(cid:18)

Let us call the arctangent factor in this θ:

√
2s

N − 1

θ = tan−1

1 − (N − 1)(2s − 1)

+ (π),

(cid:19)

1 − αβ

(cid:18) α + β
(cid:17)
(cid:17)

,

+ π

(cid:19)

mod π,

(cid:105)

,

s ≤ 1
2
s > 1
2

.

where the π is added when s > 1/2. Then

2s − N (2s − 1)

N g

.

=

N g + 2s − N (2s − 1)

N g − 2s + N (2s − 1)

,

.

2N g

2N g

,

Using this, cos(·) and sin(·) in (16) are:

cos θ =

√

cos(·) = cos

2s − N (2s − 1)

N(cid:112)N (2s − 1)2 + 4s(1 − s)
(cid:115)
(cid:115)

(cid:114)
(cid:114)

1 + cos θ

θ
2

=

=

2

1 − cos θ

sin(·) = sin

θ
2

=

=

2

Then

sin(·) cos(·) =

√
2s

N − 1
2N g

sin2(·) =

N g − 2s + N (2s − 1)

.

2N g

Plugging these into Fenner’s state (16),

√

N − 1 +
2s(N − 1) − [N g − 2s + N (2s − 1)]

N − 1 [N g − 2s + N (2s − 1)]

|w(cid:105)

ψF(s) =

√
2s

+ |r(cid:105).

FIG. 4. The weighted, directed star graph with N = 6 ver-
tices for Fenner’s Hamiltonian, where the ± weights indicate
±i/N .

weight of i/N . Since these directions have conjugate
phases ±i = e±iπ/2, it is a chiral quantum walk, which
breaks time-reversal symmetry [17, 18]. Typical quan-
tum walk search Hamiltonians have the quantum walk
and oracle as separate terms as in (3), but with Fenner’s
they are intertwined (13). Essentially, the “oracle” comes
from the structure of the graph, where the search problem
is to ﬁnd the vertex with preferential treatment, i.e., the
central node of the star graph. This is not a yes/no oracle
as with regular search problems. This makes the “ora-
√
cle” much more powerful. In fact, the operator norm of
N , in contrast to Farhi and
Fenner’s Hamiltonian is 1/
Gutmann’s 1. So if we rescaled Fenner’s Hamiltonian to
be norm 1, it would search in constant time, which is un-
surprising because a classical random walk would jump
from an arm of the star graph in Fig. 4 to the marked
center in one step, and the optimality of Grover’s algo-
rithm is for yes/no oracles [3, 29], which Fenner’s is not.
Even with these diﬀerences, it is still a quantum walk,
albeit an atypical one that does not solve unstructured
search. Note it is possible to deﬁne a chiral quantum walk
search algorithm for unstructured search that retains the
usual yes/no oracle term [31], but that diﬀers from the
structure here.

Furthermore, any quantum walk algorithm that
evolves with real amplitudes, staying in the xz-plane of
the Bloch sphere as adiabatic algorithms typically do, re-
quires that the Hamiltonian be purely imaginary so that
the time-evolution operator e−iHt is real. But since the
Hamiltonian must also be Hermitian, this implies that
the terms on the diagonal must be real, not imaginary,
which means they must be zero. This excludes the stan-
dard oracle |w(cid:105)(cid:104)w| in (4) because it would be on the di-
In addition, the oﬀ-diagonal terms must have
agonal.
conjugate phases ±i as in Fenner’s (13) so that H is Her-
mitian. Thus for a quantum walk to evolve with real
amplitudes like the adiabatic quantum search algorithm,
it must be a chiral quantum walk and abandon the usual
oracle.

We have shown that the ground state of Roland and
Cerf’s adiabatic evolution and the state of Fenner’s quan-
tum walk both follow the same path. Now we give two
diﬀerent arguments showing that their speeds are also
identical when using Roland and Cerf’s schedule (10)

+++++−−−−−Simplifying and rearranging,

VII. CONCLUSION

7

ψF(s) = −√
= −√

N − 1

N − 1

(cid:18)

g − 1 + 2s

g − 1

|w(cid:105) + |r(cid:105)

(cid:19)

1 +

2s(g + 1)
g2 − 1

|w(cid:105) + |r(cid:105).

Plugging in for g2 using (9) and simplifying,

ψF(s) = −√

N − 1

2s [2 − 2s + N (−1 + g + 2s)]

−4(N − 1)(1 − s)s

|w(cid:105) + |r(cid:105)

2(1 − s) − N (1 − 2s) + N g

√
2

N − 1(1 − s)

=

|w(cid:105) + |r(cid:105).

But from (8), this is exactly ψ0(s), the ground state of
the adiabatic algorithm. Thus the ground state of Roland
and Cerf’s local adiabatic algorithm with  = 1 evolves
identically to Fenner’s quantum walk. Put another way,
equating ψ0(s) (8) and ψF(t) (15), then solving for t is
terms of s, yields the schedule (10) with  = 1.

As previously discussed, since the adiabatic algorithm
follows its ground state up to adiabatic error,  must scale
less than a constant for it to closely follow its ground
state. Choosing this slows down the adiabatic evolution,
but its state (up to adiabatic error) equals Fenner’s quan-
tum walk when both algorithms are the same fraction of
the way through their evolutions.
If desired, Fenner’s
Hamiltonian can also be rescaled so that the two algo-
rithms evolve at the same speed.

[1] L. K. Grover, “A fast quantum mechanical algorithm for
database search,” in Proceedings of the 28th Annual ACM
Symposium on Theory of Computing, STOC ’96 (ACM,
New York, NY, USA, 1996) pp. 212–219.

[2] E. G. Rieﬀel and W. H. Polak, Quantum Computing: A

Gentle Introduction (MIT Press, 2011).

[3] E. Farhi and S. Gutmann, “Analog analogue of a digi-
tal quantum computation,” Phys. Rev. A 57, 2403–2406
(1998).

[4] N. Shenvi, J. Kempe,

and K. B. Whaley, “Quantum
random-walk search algorithm,” Phys. Rev. A 67, 052307
(2003).

[5] A. M. Childs and J. Goldstone, “Spatial search by quan-

tum walk,” Phys. Rev. A 70, 022314 (2004).

[6] E. Farhi, J. Goldstone, S. Gutmann,

“Quantum computation
arXiv:quant-ph/0001106 (2000).

by

and M. Sipser,
evolution,”

adiabatic

We have shown that the quantum walk and adiabatic
quantum computing formulations of Grover’s algorithm
solve the unstructured search problem through funda-
mentally irreconcilable means. For an adiabatic evolu-
tion to follow the same path as Farhi and Gutmann’s
quantum walk search algorithm, the Hamiltonian must
be complex, not real, and introduce structure that is
beyond the standard yes/no oracle that search prob-
lems presume. Similarly, for a quantum walk to follow
the same path as Roland and Cerf’s adiabatic quantum
search algorithm, it must be a chiral quantum walk with
zeros on the diagonal that also introduces structure more
powerful than the usual oracle. Thus the two quantum
computational models can only simulate each other’s un-
structured search algorithms by abandoning the usual
computational and oracular conditions.

ACKNOWLEDGMENTS

Our great appreciation goes to Eleanor Rieﬀel for
her valuable feedback and advice in developing this
work. T.W. was supported by the European Union Sev-
enth Framework Programme (FP7/2007-2013) under the
QALGO (Grant Agreement No. 600700) project, and the
ERC Advanced Grant MQC. D.M. was partially sup-
ported by the Air Force Oﬃce of Scientiﬁc Research as
part of the Transformational Computing in Aerospace
Science and Engineering Initiative under grant FA9550-
12-1-0046.

Rev. A 82, 022333 (2010).

[10] D. A. Meyer and T. G. Wong, “Connectivity is a poor
indicator of fast quantum search,” Phys. Rev. Lett. 114,
110503 (2015).

[11] T. G. Wong, “Spatial search by continuous-time quan-
tum walk with multiple marked vertices,” Quantum Inf.
Process. , 1–33 (2016), arXiv:1501.07071 [quant-ph].

[12] T. G. Wong, “Faster quantum walk search on a weighted

graph,” Phys. Rev. A 92, 032320 (2015).

[13] D. A. Meyer and T. G. Wong, “Nonlinear quantum search
using the Gross-Pitaevskii equation,” New J. Phys. 15,
063014 (2013).

[14] D. A. Meyer and T. G. Wong, “Quantum search with
general nonlinearities,” Phys. Rev. A 89, 012312 (2014).
[15] D. A. Meyer and T. G. Wong, “Completeness
is unnecessary for fast nonlinear quantum search,”
arXiv:1502.06281 [quant-ph] (2015).

[7] J. Roland and N. J. Cerf, “Quantum search by local adi-

[16] S. A. Fenner, “An intuitive Hamiltonian for quantum

abatic evolution,” Phys. Rev. A 65, 042308 (2002).

search,” arXiv:quant-ph/0004091 (2000).

[8] J. Roland and N. J. Cerf, “Quantum-circuit model
of Hamiltonian search algorithms,” Phys. Rev. A 68,
062311 (2003).

[9] H. Krovi, M. Ozols, and J. Roland, “Adiabatic condition
and the quantum hitting time of markov chains,” Phys.

[17] Z. Zimbor´as, M. Faccin, Z. K´ad´ar, J. D. Whitﬁeld, B. P.
Lanyon, and J. Biamonte, “Quantum transport enhance-
ment by time-reversal symmetry breaking,” Sci. Rep. 3,
2361 (2013).

8

[18] D. W. Lu, J. D. Biamonte, J. Li, H. Li, T. H. John-
son, V. Bergholm, M. Faccin, Z. Zimbor´as, R. Laﬂamme,
J. Baugh,
and S. Lloyd, “Chiral quantum walks,”
arXiv:1405.6209 [quant-ph] (2014).

[19] D. Aharonov, “Quantum computation,” in Annual Re-
views of Computational Physics VI (World Scientiﬁc,
Singapore, 1999) Chap. 7, pp. 259–346.

[20] T. G. Wong, L. Tarrataca, and Nahimov N., “Lapla-
cian versus adjacency matrix in quantum walk search,”
arXiv:1512.05554 [quant-ph] (2015).

[21] C. Mochon, “Hamiltonian oracles,” Phys. Rev. A 75,

042313 (2007).

[22] This is actually the negative of Farhi and Gutmann’s
Hamiltonian, which contributes an unobservable, global
phase, so we ignore it as did [5].

[23] T. G. Wong, Nonlinear Quantum Search, PhD disserta-

tion (2014).

[25] A. T. Rezakhani, A. K. Pimachev, and D. A. Lidar, “Ac-
curacy versus run time in an adiabatic quantum search,”
Phys. Rev. A 82, 052305 (2010).

[26] E. Farhi, J. Goldstone,

and S. Gutmann, “Quantum
adiabatic evolution algorithms with diﬀerent paths,”
arXiv:quant-ph/0208135 (2002).

[27] M. Hofmann and G. Schaller, “Probing nonlinear adia-
batic paths with a universal integrator,” Phys. Rev. A
89, 032308 (2014).

[28] E. Crosson, E. Farhi, C. Y.-Y. Lin, H.-H. Lin,

and
P. Shor, “Diﬀerent strategies for optimization using the
quantum adiabatic algorithm,” arXiv:1401.7320 [quant-
ph] (2014).

[29] C. H. Bennett, E. Bernstein, G. Brassard, and U. Vazi-
rani, “Strengths and weaknesses of quantum computing,”
SIAM J. Comput. 26, 1510–1523 (1997).

[30] Fenner’s Hamiltonian in [16] is actually twice this; ours

[24] A. Messiah, Quantum Mechanics (Dover Publications,

is closer in form and runtime to Farhi and Gutmann’s.

New York, 1999).

[31] T. G. Wong, “Quantum walk search with time-reversal
symmetry breaking,” J. Phys. A: Math. Theor. 48,
405303 (2015).

