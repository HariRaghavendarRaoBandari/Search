6
1
0
2

 
r
a

M
2

 

 
 
]
h
p
-
t
n
a
u
q
[
 
 

1
v
3
0
9
0
0

.

3
0
6
1
:
v
i
X
r
a

Pointer Quantum PCPs and Multi-Prover Games

Alex B. Grilo∗1, Iordanis Kerenidis†1,2, and Attila Pereszlényi‡1

1IRIF, CNRS, Université Paris Diderot, Paris, France

2Centre for Quantum Technologies, National University of Singapore, Singapore

1st March, 2016

Abstract

The quantum PCP (QPCP) conjecture states that all problems in QMA, the quantum
analogue of NP, admit quantum veriﬁers that only act on a constant number of qubits of a
polynomial size quantum proof and have a constant gap between completeness and soundness.
Despite an impressive body of work trying to prove or disprove the quantum PCP conjecture,
it still remains widely open. The above-mentioned proof veriﬁcation statement has also been
shown equivalent to the QMA-completeness of the Local Hamiltonian problem with constant
relative gap. Nevertheless, unlike in the classical case, no equivalent formulation in the
language of multi-prover games is known.

In this work, we propose a new type of quantum proof systems, the Pointer QPCP, where
a veriﬁer ﬁrst accesses a classical proof that he can use as a pointer to which qubits from the
quantum part of the proof to access. We deﬁne the Pointer QPCP conjecture, that states that
all problems in QMA admit quantum veriﬁers that ﬁrst access a logarithmic number of bits
from the classical part of a polynomial size proof, then act on a constant number of qubits
from the quantum part of the proof, and have a constant gap between completeness and
soundness. We deﬁne a new QMA-complete problem, the Set Local Hamiltonian problem, and
a new restricted class of quantum multi-prover games, called CRESP games. We use them
to provide two other equivalent statements to the Pointer QPCP conjecture: the Set Local
Hamiltonian problem with constant relative gap is QMA-complete; and the approximation
of the maximum acceptance probability of CRESP games up to a constant additive factor is
as hard as QMA. This is the ﬁrst equivalence between a quantum PCP statement and the
inapproximability of quantum multi-prover games.

Introduction

1
The celebrated PCP theorem states that all languages in NP can be veriﬁed probabilistically
by randomized veriﬁers that only check a constant number of bits of a polynomial size proof
[ALM+98, AS98, Din07]. This theorem has far-reaching applications in complexity theory and
especially in the inapproximability of certain optimization problems. This is because the PCP
theorem can be recast in the following equivalent way: the approximation of MAX-SAT up
to some constant additive factor is NP-complete. Let us also remark that the classical PCP
theorem has a third very interesting equivalent formulation as approximation of the maximum
acceptance probability of some polynomial size multi-prover interactive games [Raz98]. This

∗abgrilo@gmail.com
†jkeren@gmail.com
‡attila.pereszlenyi@gmail.com

1

game formulation was fundamental in order to achieve better constants for the inapproximability
results of a number of NP-hard problems.

One of the main questions in quantum complexity theory is whether one can prove an
analogous statement for the class QMA, the quantum analogue of NP. The QPCP conjecture
[AAV13] has received a lot of attention due to its importance to both physics and theoretical
computer science and an impressive body of work has provided either positive evidence [AALV09,
EH15, NV15] or negative [Ara11, AE15, BH13]. There are many diﬀerent ingredients that go
into the proof of the classical PCP theorem, especially since there are two diﬀerent ways of
proving it, one through the proof system formulation and another more combinatorial way by
looking directly at the inapproximability of constraint satisfaction problems. In the quantum
setting, the positive and negative evidence has been mostly that certain techniques that had
been used in the classical setting are applicable or not in the quantum setting. We note that
the lack of a way of seeing the quantum PCP conjecture in a game context also prevents us
from using some important techniques that are present in the classical case, such as the parallel
repetition theorem. Overall, proving the quantum PCP theorem remains a daunting task.

The QPCP conjecture can be cast as a type of proof system which we denote by QPCP(q, α, β).
Here a quantum veriﬁer tosses a logarithmic number of classical coins and, based on the coin
outcomes, decides on which q qubits from the polynomial-size quantum proof to perform a
measurement. The measurement output decides on acceptance or rejection. A yes instance is
accepted with probability at least α and a no instance is accepted with probability at most β,
for some α > β [AALV09, AAV13]. The formal conjecture is stated below.
Conjecture 1.1 (QPCP Conjecture - Proof veriﬁcation version). QMA = QPCP(q, α, β) where
q = O(1) and α − β = Ω(1).

In quantum mechanics, the evolution of quantum systems are described by Hermitian opera-
tors called Hamiltonians. In nature, particles that are far apart tend not to interact so the global
Hamiltonian can usually be described as a sum of local Hamiltonians. The Local Hamiltonian
problem, denoted by LocalHam(k, a, b), receives as input m Hamiltonians H1, . . . , Hm where
each one describes the evolution of at most k qubits and the question is if there is a global state
such that its energy is at most am or all states have energy at least bm for b > a. The area
studying the above problem is called quantum Hamiltonian complexity [Osb12, GHLS15], a
topic that lies in the intersection of physics, computer science and mathematics. It began with
Kitaev who showed that for b− a ≥ 1/poly(n), LocalHam(5, a, b) is complete for the class QMA
[AN02, KSV02]. It has subsequently been improved, reducing the locality of the Hamiltonians to
two [KKR06] and restricting their structure [KR03, OT10, CM14, HNN13]. These results imply
that estimating the groundstate energy of a system within an inverse polynomial additive factor
is hard. It is natural to ask if it still remains hard if we require only constant approximation.
The physical interpretation of this problem is connected to the stability of entanglement in
“room temperature”.
The second equivalent statement of the quantum PCP conjecture asks if LocalHam(k, a, b)
remains QMA-complete when b − a is constant. It is stated formally in the conjecture below.
Conjecture 1.2 (QPCP Conjecture - Constraint satisfaction version). The Local Hamiltonian
problem LocalHam (k, a, b) is QMA-complete for k = O(1) and b − a = Ω (1), where the
QMA-hardness is with respect to quantum reductions.

The two versions of the quantum PCP conjecture have been proven equivalent [AAV13], and
since Conjecture 1.2 is true for b−a ≥ 1/poly(n), we can also conclude that QMA = QPCP(q, α, β)
with q = O(1) and α − β ≥ 1/poly(n).

2

Let us note that so far there is no equivalent statement of the QPCP conjecture in the lan-
guage of multi-prover games, though the approximation of the maximum acceptance probability
of certain multi-prover games up to an inverse-polynomial additive factor has been proven to
be QMA-hard [FV15].

1.1 Our Results
In our work, we propose a new type of quantum proof systems, the Pointer QPCP, and formulate
three equivalent versions of the Pointer QPCP conjecture. This may help towards proving or
disproving the original QPCP conjecture. We start by describing a new proof veriﬁcation
system then we provide a new variant of the Local Hamiltonian problem and last we describe
an equivalent polynomial size multi-prover game. Up to our knowledge, this is the ﬁrst time
a polynomial size multi-prover game has been proven equivalent to some QPCP conjecture.
Our new conjecture is a weaker statement than the original QPCP conjecture and hence may
be easier to prove. Moreover, having an equivalent game version of it might also lead to new
methods that could potentially be relevant for attacking the original conjecture as well.

We now give some details of our results. We deﬁne a new quantum proof system, where the
proof contains two separate parts, a classical and a quantum proof both of polynomial size. The
veriﬁer can ﬁrst access a logarithmic number of bits from the classical proof and, depending on
the content, he can then access a constant number of qubits from the quantum proof. Since
the classical part can be seen as a pointer to the qubits that will be accessed, we denote this
proof system by PointerQPCP(q, α, β). To be more speciﬁc, the veriﬁer ﬁrst reads a logarithmic
number of bits from the classical part of the proof and then measures at most q qubits from
the quantum part. He accepts a yes instance with probability at least α and a no instance with
probability at most β. Since a Pointer QPCP is a generalization of QPCP, it follows that all
problems in QMA have a PointerQPCP(q, α, β) proof system with α − β ≥ 1/poly(n).
Conjecture 1.3 (Pointer QPCP Conjecture - Proof veriﬁcation version). It holds that QMA =
PointerQPCP(q, α, β) where q = O(1) and α − β = Ω(1).

We note that quantum proof systems with classical and quantum parts have also appeared
in [Raz05]. There, the aim was to reduce the number of blocks being read in classical PCPs and
hence, in the proposed model, a logarithmic size quantum proof is provided to the veriﬁer who
measures it and then reads only a single block from a polynomial size classical proof.

In addition to Pointer QPCPs, we also propose a “constraint satisfaction” version of the
above conjecture which will turn out to be equivalent. We do this by deﬁning a new variant
of the Local Hamiltonian problem which we call the Set Local Hamiltonian problem. Here the
input is m sets of a polynomial number of k-local Hamiltonians each, and we ask if there exists a
representative Hamiltonian from each set such that the Hamiltonian corresponding to their sum
has groundstate energy at most am or for every possible choice of representative Hamiltonians
from each set, the Hamiltonian corresponding to their sum has groundstate energy at least
bm. We denote the above problem by SLH(k, a, b). Since the Local Hamiltonian problem is a
special case of the Set Local Hamiltonian problem, where the sets are singletons, SLH(k, a, b)
is QMA-complete for k ≥ 2 and b − a ≥ 1/poly(n).
Conjecture 1.4 (Pointer QPCP Conjecture - Constraint satisfaction version). The SLH(k, a, b)
problem is QMA-complete for k = O(1) and b − a = Ω(1).

As mentioned earlier, the classical PCP theorem has another interesting equivalent formula-
tion regarding the approximation of the maximum acceptance probability of multi-prover games
[Raz98], while the same is not known for the quantum case. We propose an equivalent multi-
prover game formulation of the Pointer QPCP conjecture. Our game, which we call CRESP

3

Conjecture 1.5 (CRESP games)

Conjecture 1.3 (Pointer QPCPs)

Conjecture 1.4 (Set Local Hamiltonians)

Figure 1: Arrows of implications in our proof of the equivalence of the three conjectures.

(Classical and Restricted-Entanglement Swapping-Provers) game, was inspired by the work of
Fitzsimons and Vidick [FV15]. However, in order to prove an equivalence, we had to drastically
change the game. In their work, a multi-prover game is proposed for the Local Hamiltonian
problem in which the completeness-soundness gap is inverse polynomial. If we try to follow the
same proof but with an instance of the Local Hamiltonian with constant gap, the gap does not
survive and at the end there will be an inverse-polynomial gap in the game. Hence we are not
able to prove the equivalence with the standard QPCP conjecture.

We deﬁne our CRESP game to have one classical prover and logarithmically many quantum
provers who are restricted both in the strategies they can perform and also in the initial quantum
state they share. The veriﬁer asks a single question of logarithmic length to all of them, the
classical prover replies with logarithmically many bits, while the quantum provers reply with k 4-
dimensional qudits. (For simplicity, we will omit the dimension of the qudit system in the rest of
the paper.) The promise problem CRESP(k, α, β) informally asks if we can distinguish between
the cases when the provers win the game with probability at least α or at most β. Similarly to
the previous problems, we will see that CRESP(k, α, β) is QMA-complete for α− β ≥ 1/poly(n).
See Theorem 4.6 for the precise statement.
Conjecture 1.5 (Pointer QPCP Conjecture - Game version). The CRESP(k, α, β) problem is
QMA-complete for k = O(1) and α − β = Ω(1).

Our main result is the equivalence of the above three formulations of the Pointer QPCP

conjecture. It is stated formally in the following theorem.
Theorem 1.6 (Main theorem). The three versions of the Pointer QPCP conjecture (Conjec-
tures 1.3 to 1.5) are either all true or all false.

The proof is divided into three steps: ﬁrst, we show that Conjecture 1.3 implies Conjec-
ture 1.4; second, we show that Conjecture 1.4 implies Conjecture 1.5; and ﬁnally, we prove that
Conjecture 1.5 implies Conjecture 1.3. The arrows of implications are depicted in Fig. 1.

The paper is organized as follows: In Section 2, we describe some standard deﬁnitions
required for the rest of the paper. In Section 3, we present the deﬁnitions of our new notions,
the Pointer QPCPs, the Set Local Hamiltonian problem, and the CRESP games. The proof of
equivalence is presented in Section 4. We conclude the paper with some discussion and open
problems in Section 5.

2 Preliminaries
In this section we provide some deﬁnitions that we use in the paper. We start by deﬁning QMA,
the quantum analogue of NP.
Deﬁnition 2.1 (Quantum Merlin-Arthur proof systems). Let n ∈ Z+ be the input size and p
be a polynomial. A QMA protocol proceeds in the following steps.

4

1. The veriﬁer receives an input x and a quantum proof |ψi of size p(n).
2. The veriﬁer runs in polynomial time in n. He performs a general POVM measurement on

|ψi and decides on the acceptance or rejection of the input.

A promise problem A = (Ayes, Ano) belongs to QMA if it has a QMA proof system with the
following properties.
Completeness. If x ∈ Ayes then there is a |ψi such that the veriﬁer accepts with probability at

least 2
3.

Soundness. If x ∈ Ano then for all |ψi the veriﬁer accepts with probability at most 1
3.

Now we present the Local Hamiltonian problem, the quantum analogue of MAX-SAT.

Deﬁnition 2.2. The Local Hamiltonian problem is denoted by LocalHam(k, a, b) where k ∈ Z+
is called the locality and for a, b ∈ R it holds that a < b. It is the following promise problem.
Let n be the number of qubits of a quantum system. The input is a set of m(n) Hamiltonians
H1, . . . , Hm(n) where m is a polynomial in n, ∀i ∈ [m(n)] : 0 ≤ Hi ≤ 1 and each Hi acts on k
qubits out of the n qubit system. For H

j=1 Hj the following two conditions hold.
• In a YES instance there exists a state |ϕi ∈ C2n such that hϕ| H |ϕi ≤ a · m(n).
• In a NO instance for all states |ϕi ∈ C2n it holds that hϕ| H |ϕi ≥ b · m(n).
Kitaev proved that for k ≥ 5 and b − a ≥ 1/poly(n) the LocalHam(k, a, b) problem is

QMA-complete [KSV02]. This completeness result was later improved for k ≥ 2 [KKR06].

def= Pm(n)

We now deﬁne the quantum analogue of PCPs, a quantum proof system where the veriﬁer

only checks a few qubits from the quantum proof.
Deﬁnition 2.3 (Quantum Probabilistically Checkable Proofs). Let n ∈ Z+ be the input size
and p be a polynomial. A QPCP protocol proceeds in the following steps.

1. The veriﬁer receives an input x and a quantum proof |ψi of size p(n).
2. The veriﬁer runs in time polynomial in n. He picks O(log n) bits uniformly at random,
and based on the input and on the random bits, he performs a general POVM measurement
on q qubits, and decides on acceptance or rejection of the input.

A promise problem A = (Ayes, Ano) belongs to QPCP(q, α, β) if it has a QPCP proof system with
the following properties.
Completeness. If x ∈ Ayes then there is a |ψi such that the veriﬁer accepts with probability at

least α.

Soundness. If x ∈ Ano then for all |ψi the veriﬁer accepts with probability at most β.

We can easily prove the following statement.

Lemma 2.4. It holds that QMA = QPCP(q, α, β) where q = O(1) and α − β ≥ 1/poly(n).
Proof. The containment QPCP(q, α, β) ⊆ QMA is trivial since the QMA veriﬁer can read the
whole proof and the power of QMA doesn’t change if the gap is inverse-polynomial. The
other direction of the containment follows from Kitaev’s proof that the 5-Local Hamiltonian is
QMA-complete [KSV02, AN02]. The QMA veriﬁer in the proof is also a QPCP veriﬁer.

5

The quantum PCP conjecture has two equivalent versions:

Theorem 2.5 ([AAV13]). The class QMA is equal to the class QPCP(q, α, β) with q = O(1) and
α − β = Ω(1) (Conjecture 1.1) if and only if the Local Hamiltonian problem LocalHam(k, a, b)
is QMA-complete for k = O(1) and b − a = Ω(1), where the QMA-hardness is with respect to
quantum reductions (Conjecture 1.2).

3 Pointer QPCPs, Set Local Hamiltonians, and CRESP Games
In this section, we present the deﬁnitions required for our conjectures. We start by deﬁning
Pointer QPCPs, a generalized version of QPCPs, in which the veriﬁer can read a small number
of bits from the classical part of the proof and then, based on that, read a constant number
of qubits from the quantum part of the proof. Then we propose the Set Local Hamiltonian
problem that can be thought of as a “constraint satisfaction” version of the conjecture. Finally,
we deﬁne CRESP games which are restricted multi-prover games for which approximation of
their value will turn out to be equivalent to the other two formulations.

3.1 Pointer QPCPs
Deﬁnition 3.1. Let n ∈ Z+ be the input size and let m, l, p be polynomials. A Pointer QPCP
protocol proceeds in the following steps.

1. The veriﬁer receives an input x and a two-part proof of size m(n) + p(n) in the form

y1...ym(n) ⊗ |ψi

where yi ∈ [l(n)] (i.e., each yi can be written with O(log n) bits) and |ψi is a state of p(n)
qubits. We refer to y1...ym(n) as the classical part of the proof and |ψi as the quantum part
of the proof.

2. The veriﬁer runs in time polynomial in n. He chooses uniformly at random a position
i ∈ [m(n)] of the classical proof to read. Then, based on his input, the random bits and
the value of yi, he chooses q qubits from the quantum proof, performs a general POVM
measurement on them, and decides on acceptance or rejection of the input.

A promise problem A = (Ayes, Ano) belongs to PointerQPCP(q, α, β) if it has a Pointer QPCP
proof system with the following properties.
Completeness. If x ∈ Ayes then there exists y1...ym(n) ⊗ |ψi such that veriﬁer accepts with

probability at least α.

Soundness. If x ∈ Ano then for all y1...ym(n) ⊗ |ψi the veriﬁer accepts with probability at most

β.

Lemma 3.2. QMA = PointerQPCP(q, α, β) where q = O(1) and α − β ≥ 1/poly(n).
Proof. Since Pointer QPCPs are generalizations of QPCPs, we have that QPCP (q, α, β) ⊆
PointerQPCP(q, α, β) for any values of q, α, and β. From Lemma 2.4, it follows that QMA ⊆
PointerQPCP(q, α, β). The other direction of the containment follows trivially since the QMA
veriﬁer can read the whole proof.

Conjecture 1.3 asks whether the class QMA also has Pointer QPCPs with q = O(1) and

α − β = Ω(1).

6

that

have that

hϕ| m(n)X

i=1

hϕ| m(n)X

i=1

Hi,f(i) |ϕi ≤ a · m(n).

Hi,f(i) |ϕi ≥ b · m(n).

3.2 The Set Local Hamiltonian Problem
We deﬁne a new QMA-complete problem which is a generalization of the Local Hamiltonian
problem and which will lead to another version of our conjecture.
Deﬁnition 3.3 (Set Local Hamiltonian Problem). The Set Local Hamiltonian problem is
denoted by SLH(k, a, b) where k ∈ Z+ is called the locality and for a, b ∈ R it holds that a < b.
It is the following promise problem. Let n be the number of the qubits of a quantum system, and
m and l be two polynomials. The input for the problem are m(n) sets of Hamiltonians. For all
i ∈ [m(n)] the set Hi contains l(n) Hamiltonians, i.e.,

∀i ∈ [m(n)] : Hi =n

o

Hi,1, . . . , Hi,l(n)

.

Each Hamiltonian is positive and has norm at most one, i.e., ∀i ∈ [m(n)] ,∀j ∈ [l(n)] : 0 ≤
Hi,j ≤ 1. Each Hamiltonian acts non-trivially on at most k qubits out of the n qubits of the
quantum system. The problem is to decide which one of the following two conditions hold.

• In a YES instance, there exists a function f : [m(n)] → [l(n)] and a state |ϕi ∈ C2n such

• In a NO instance, for all functions f : [m(n)] → [l(n)] and for all states |ϕi ∈ C2n, we

Lemma 3.4. The SLH(k, a, b) problem is QMA-complete for k ≥ 2 and b − a ≥ 1/poly(n).
Proof. For the containment SLH(k, a, b) ∈ QMA, let the witness have a classical part that
contains the description of the function f and a quantum part that is supposed to be the state
i=1 Hi,f(i). The
hardness of SLH(k, a, b) comes trivially from the fact that Local Hamiltonian problem is a
special case of the Set Local Hamiltonian problem with l(n) = 1.

|ϕi. The quantum veriﬁer can then apply the usual eigenvalue estimation onPm(n)

Note that Conjecture 1.4 asks whether the Set Local Hamiltonian problem remains QMA-

complete when the locality is constant and the gap between b and a is also constant.

3.3 CRESP Games
We now formally describe a new variant of quantum multi-prover games. These games are rather
restricted but will allow us to state a third variant of our pointer QPCP conjecture.

3.3.1 Description of the Game
Let n ∈ Z+ be a parameter and m be a polynomial. The size of the game will be polynomial in
n. The game is played by one classical prover, dlog(n + 1)e quantum provers, and a veriﬁer. It
is played as follows.

1. The quantum provers share the encoding of an arbitrary n-qubit state. (The encoding
maps each qubit into a number of qudits and will be deﬁned later.) They are not allowed
to share any other resources.

7

2. The veriﬁer picks a question i uniformly at random out of the m(n) possible questions

and sends the same question to all the provers (both quantum and classical).

3. The classical prover replies with O(log n) bits.
4. Each quantum prover replies by at most k qudits from their shared encoded state. All the

quantum provers use the same strategy.

5. The veriﬁer accepts or rejects, based on his question and the answers from the provers.
We denote these games by the acronym CRESP after the Classical prover, the Restricted
Entanglement that the quantum provers can share and, since the only possible strategy the
quantum provers can perform is to swap some of their qudits into the message register, we call
them Swapping-Provers.

E = E1 ⊗ E2 ⊗ . . . ⊗ En where each qubit of |φi is encoded with Ei : C2 →Ndlog(n+1)e

3.3.2 Restriction on the Entanglement
The entangled state the provers share is of the following predeﬁned form. First, the provers
pick an arbitrary n-qubit state |φi ∈ C2n. The state |φi is encoded with a linear isometry
Hi,j. For
∼= C4, that is, Hi,j is a four-dimensional space which we simply call qudit. To
all i and j, Hi,j
deﬁne Ei, let’s ﬁx some ordering on the non-empty subsets of [dlog(n + 1)e]. Let Qi be the i-th
Hi,j. For each i ∈ [n], we deﬁne Ei by giving its
subset, Si
action on the standard basis states.

def= N

j=1

j∈Qi

Hi,j, and Si

j /∈Qi

def= N
(cid:16)|0i⊗|Qi| + |1i⊗|Qi|(cid:17)
(cid:16)|2i⊗|Qi| + |3i⊗|Qi|(cid:17)

Si

Si

⊗(cid:16)|0i⊗dlog(n+1)e−|Qi|(cid:17)
⊗(cid:16)|0i⊗dlog(n+1)e−|Qi|(cid:17)

Si

Si

(1)

(2)

Ei(|0i) def= 1√
2
Ei(|1i) def= 1√
2
qudits that live in spaceNn

We refer to the states in Si as GHZ-like states. After E is applied, prover j receives the
i=1 Hi,j. A possible distribution of the qudits is depicted in Fig. 2.

3.3.3 Description of the CRESP Problem
We are interested in the maximum acceptance probability the provers can achieve, which is
called the value of the game. Here the maximum is taken over all legitimate shared states and
all legitimate provers’ strategies. We now deﬁne the promise problem that corresponds to the
approximation of the value of CRESP games.

1

2

3

4

5

6

7

t
i

b
u
q

t
i

b
u
q

t
i

b
u
q

t
i

b
u
q

t
i

b
u
q

t
i

b
u
q

t
i

b
u
q

prover 1
prover 2
prover 3

Figure 2: A possible distribution of the encoding of 7 qubits among 3 provers. The red cells
correspond to the GHZ-like entangled states, while the white cells to |0i states.

8

Deﬁnition 3.5. Let k ∈ Z+ and α, β ∈ R with α > β. Then, CRESP(k, α, β) is the following
promise problem. The input is the description of a CRESP game deﬁned above where the
quantum provers answer at most k qudits and the following conditions hold.

• In a YES instance the value of the game is at least α.
• In a NO instance the value of the game is at most β.
We will prove that the CRESP(k, α, β) problem is QMA-complete for k = O(1) and α − β ≥
1/poly(n). We defer this proof to Section 4.2 as it needs results that we will establish later.
Again, we note that Conjecture 1.5 asks whether CRESP(k, α, β) remains QMA-complete when
k = O(1) and α − β = Ω(1).

4 Equivalence of Our QPCP Conjectures
In this section we prove Theorem 1.6, the equivalence of the three versions of our Pointer QPCP
conjecture. The proof proceeds in the following three steps. In Section 4.1, we show that if
Conjecture 1.3 is true then Conjecture 1.4 is also true. We do this by reducing any problem with
a Pointer QPCP proof system to the Set Local Hamiltonian problem. In Section 4.2 we show
that if Conjecture 1.4 is true then Conjecture 1.5 is also true by giving a reduction from the Set
Local Hamiltonian problem to our decision problem involving CRESP games. To complete the
cycle, we prove in Section 4.3 that if Conjecture 1.5 is true then Conjecture 1.3 is also true by
giving a Pointer QPCP proof system for an arbitrary CRESP game. See Fig. 1 for the arrows
of implications.

4.1 From Pointer QPCP to the Set Local Hamiltonian Problem
In this section we show that if Conjecture 1.3 is true then Conjecture 1.4 is also true. We show
that any problem P ∈ PointerQPCP(q, α, β) is polynomial-time reducible to SLH(q, 1 − α, 1 − β).
Assuming Conjecture 1.3, this means that the Set Local Hamiltonian problem is QMA-hard.
The containment of the Set Local Hamiltonian problem in QMA is implied by Lemma 3.4.
Theorem 4.1. Any problem P ∈ PointerQPCP(q, α, β) can be reduced to SLH(q, 1 − α, 1 − β)
in polynomial time.
Proof. Let y1, . . . , ym be the classical part of the proof where m = m(n) for a polynomial m and
|ψi be the quantum part of the proof, which contains p(n) qubits, for a polynomial p. Suppose
that each yi can take l = l(n) diﬀerent values, for a polynomial l. We construct an instance of
the Set Local Hamiltonian problem that consists of m sets of Hamiltonians Hi, for i ∈ [m], where
Hi = {Hi,j}j∈[l] and the Hamiltonians act on a p(n)-qubit system. Let Hi,j be the rejection
POVM element of the Pointer QPCP veriﬁer over the constant number of qubits when he reads
register i from the classical part of the proof and it contains the value j, i.e., j = yi.
probability greater than α then there is a function f such that the groundstate ofPm
|ψi onP

First we prove that if there is a proof that makes the Pointer QPCP veriﬁer accept with
i=1 Hi,f(i)
has energy at most (1 − α)m. Let y1...ym ⊗ |ψi be such proof and let αi be the acceptance
P
probability of the Pointer QPCP veriﬁer when the veriﬁer queries i. Since the veriﬁer picks an
i αi = α. Let f(i) def= yi. In this case, the energy of
i uniformly at random, it follows that 1
|ψi ≤X

(1 − αi) = (1 − α)m.

i Hi,f(i) is

 X

hψ|

m

!

Hi,yi

i

i

9

such that hψ|(cid:16)P

For the other direction of the proof, suppose that there is a function f and a state |ψi

(cid:17)|ψi ≤ (1 − β) m. Then there is a proof that makes the Pointer QPCP

veriﬁer accept with probability bigger than β. Let (f(1), f(2), ..., f(m)) ⊗ |ψi be the proof for
the Pointer QPCP veriﬁer. The acceptance probability of the Pointer QPCP veriﬁer with this
proof is

i Hi,f(i)

Hi,f(i)

|ψi ≥ β.

X
(1 − hψ| Hi,f(i) |ψi) = 1 − 1

1
m

i

 X

i

hψ|

m

!

This ﬁnishes the proof of the reduction.

4.2 From the Set Local Hamiltonian Problem to CRESP Games
In this section we show that if Conjecture 1.4 is true then Conjecture 1.5 is also true. We do
this by giving a reduction from the SLH(k, a, b) problem to the CRESP(k, 1 − a/2, 1 − b/2)
problem. Assuming Conjecture 1.4, this implies that the CRESP(k, 1 − a/2, 1 − b/2) problem
is QMA-hard. We prove the containment CRESP(k, 1 − a/2, 1 − b/2) ∈ QMA in Theorem 4.6.
We construct a CRESP game for the Set Local Hamiltonian problem. The main idea in
the construction is the following. In our game, the veriﬁer picks an index i ∈ [m] uniformly
at random and sends i to all the provers. The classical prover tells the veriﬁer the speciﬁc
Hamiltonian that should be taken from set i, i.e., the value of f(i). The quantum provers share
i Hi,f(i) and reply with the encoding of the qubits

the encoded groundstate of the HamiltonianP

that are involved in Hamiltonian Hi,f(i).

First, the veriﬁer checks if the received qudits lie in the codespace of qubit i, and if not he
rejects. Using the deﬁnition of the encoding, the projector onto the codespace is described by

where

 X

u,v∈{0,1}

Πi = 1
2

(Πi)Si ⊗ |0ih0|Si

(cid:12)(cid:12)(cid:12)u|Qi|ED

v|Qi|(cid:12)(cid:12)(cid:12) + X

w,z∈{2,3}

(cid:12)(cid:12)(cid:12)w|Qi|ED

 .
z|Qi|(cid:12)(cid:12)(cid:12)

If the HamiltonianP

Actually, we will see in Lemma 4.4 that it suﬃces for the veriﬁer to perform only projection
(Πi)Si. If the above test succeeds then the veriﬁer picks a bit uniformly at random and if it is
0, he accepts. Otherwise, the veriﬁer decodes the answered qudits by inverting the mapping E,
deﬁned by Eqs. (1) and (2), for all the qubits in Hamiltonian Hi,f(i). Then, he performs the
measurement that corresponds to Hi,f(i) on the decoded qubits and accepts or rejects based on
the outcome.

i Hi,f(i) has an eigenstate with small eigenvalue then the provers will
pass the test with high probability. Using the fact that the provers share a state in the predeﬁned
encoding and the restriction on the quantum provers’ strategies, we also show that the veriﬁer
will reject with high probability if all states have high eigenvalues. The description of the game
is in Item 5.
Theorem 4.2. The game deﬁned by Item 5 has completeness 1 − a/2 and soundness 1 − b/2.
Proof. Lemma 4.3 proves completeness while Lemma 4.5 proves soundness.

Lemma 4.3 (Completeness). If there is a function f such that the groundstate ofP

i Hi,f(i) has
eigenvalue at most am then the maximum acceptance probability of the game is at least 1 − a/2.

10

Protocol 1 CRESP Game for SLH(k, a, b)

1. The provers pick an n-qubit state |φi and share its encoding E(|φi). (In the honest case,

|φi is supposed to be the groundstate of Hamiltonian H.)

2. The veriﬁer picks i ∈ [m] uniformly at random and sends it to all the provers.
3. The classical prover sends some j ∈ [l].
4. Each quantum provers send k qudits.
5. The veriﬁer performs the following tests.

{Πi, Π⊥

i } and reject if the outcome is Π⊥

T1. Measure the received qudits that correspond to the space Si with the projectors
T2. Pick b ∈ {0, 1} uniformly at random and accept if b = 0. Otherwise, continue.
T3. Decode the received qudits and perform the measurement speciﬁed by Hi,f(i) and

i . Otherwise, continue.

accept or reject depending on the outcome.

P
Proof. Let the quantum provers share E(|ψi), the encoding of the groundstate |ψi of H

def=
i Hi,f(i). When the veriﬁer queries i, the classical prover answers f(i) and all quantum provers
honestly reply with their shares of the encodings of the k qubits corresponding to Hi,f(i). The
veriﬁer always measures Πi and so he accepts with probability

 
1 − 1

m

mX

i=1

2 + 1
1
2

!

hψ| Hi,f(i) |ψi

= 1 − 1
2m

hψ| H |ψi ≥ 1 − a
2 .

The following technical lemma is the key to prove soundness. It establishes that when the
provers reply with the qudits that belong to the encoding of a diﬀerent qubit, the veriﬁer will
detect it with probability at least half. We defer the full proof of this lemma to Appendix A.
Lemma 4.4. If the provers are asked for the encoding of qubit i and they answer with the
qudits that correspond to the encoding of a diﬀerent qubit, then the answered state projects to
the correct codespace, i.e., the subspace that corresponds to the projector Πi, with probability at
most 1/2.
Proof Sketch. Since the provers have the same strategy for a ﬁxed question and they can only
do swaps, the only cheating strategy for the provers is to answer the encoding of a qubit which
is diﬀerent from the one the veriﬁer asked for. In this case, by the properties of the chosen
encoding, the state that should be a GHZ-like state is actually separable and it projects to the
correct codespace with probability at most half.

We prove now the soundness property of the game.

Lemma 4.5 (Soundness). If, for all functions f, the groundstate of P

at least bm then the maximum acceptance probability of the game is at most 1 − b/2.
Proof. Let’s ﬁx an arbitrary strategy for the classical prover. We deﬁne the function f by letting
f(i) be the answer from the classical prover to question i. Let us also ﬁx the shared state of the
quantum provers arbitrarily. The strategy of the quantum provers is still left undeﬁned.

Let A be the event that the veriﬁer accepts, Ei be the event that the veriﬁer picks question
i, T1 be the event that the veriﬁer continues after the test T1, i.e., the answered qudits were
projected onto the codespace, T2 be the event that the veriﬁer accepts during test T2, i.e., he

i Hi,f(i) has eigenvalue

11

picks b = 0, and T3 be the event that the veriﬁer accepts on test T3, i.e., in the estimation of the
energy of the Hamiltonian. Let us ﬁx a strategy where the quantum provers answer honestly,
i.e., where Pr[T1|Ei] = 1. The probability of acceptance with this strategy is

i · Prh

T3

(cid:12)(cid:12)(cid:12)Ei, T1, ¯T2

i(cid:17)

Pr[A] =

i=1

Pr[Ei] · Pr[T1|Ei](cid:16)Pr[T2] + Prh ¯T2
mX
i(cid:19)
(cid:18)1
2 · Prh
mX
2 + 1
=
≤ 1
2 + 1
2 (1 − b)
= 1 − b
2

(cid:12)(cid:12)(cid:12)Ei, T1, ¯T2

1
m

i=1

T3

where the inequality follows from the fact that all the eigenstates ofP

i Hi,f(i) have eigenvalue

at least bm.

Let G and B be two strategies which are the same except when question r is asked for a ﬁxed
r. When asked r, the provers following G answer honestly while provers following B answer
with the encoding of a diﬀerent qubit.

We extend the previous notation by adding the superscript of the corresponding strategy for
the events, e.g., T G1 is the event that the answered qudits are in the correct codespace when the
provers follow strategy G. The following calculation shows that G has higher success probability.

Prh

AGi − Prh

k
T B1

T G1

EB
k

EG
k

(cid:12)(cid:12)(cid:12)EG
ABi = Prh
i · Prh
− Prh
i · Prh
(cid:18)
(cid:18)1
2 · Prh
2 + 1
(cid:18)1
1 ·
2 · Prh
2 + 1
−1
(cid:19)
(cid:18)1
2 ·
2 − 1
2

≥ 1

m

≥ 1
m
= 0

Gi(cid:17)
k , T B1 , ¯T2

k , T G1 , ¯T2
T B3

(cid:12)(cid:12)(cid:12)EB

Bi(cid:17)

T G3

T G2

i(cid:16)Prh
(cid:12)(cid:12)(cid:12)EB
i(cid:16)Prh
(cid:12)(cid:12)(cid:12)EG
(cid:12)(cid:12)(cid:12)EB

(cid:12)(cid:12)(cid:12)EG
i + Prh ¯T2
Gi · Prh
Bi · Prh
i + Prh ¯T2
Gi(cid:19)
T B2
Bi(cid:19)(cid:19)
k , T G1 , ¯T2
k , T B1 , ¯T2

T B3

T G3

k

where in the ﬁrst inequality we used that Prh

(cid:12)(cid:12)(cid:12)EB

k

T B2

i ≤ 1/2, by Lemma 4.4. By a hybrid

argument, it is easy to see that the strategy where provers are honest is optimal and so the
soundness follows.

We now show that even though our game seems very restricted, it is in fact QMA-hard to

approximate its value to within an inverse-polynomial precision.
Theorem 4.6. The CRESP(k, α, β) problem is QMA-complete for k = O (1) and α − β ≥
1/poly(n).
Proof. The containment in QMA is simple: The QMA proof is the state the provers choose
before the encoding together with the classical information that describes the behavior of all
the provers. Then the QMA veriﬁer can create the encoding and simulate the game. This
leads to the same acceptance probability as that of the game which means that there is an
inverse-polynomial gap between completeness and soundness in the QMA protocol.

The QMA-hardness follows from Lemma 3.4 and Theorem 4.2.

12

4.3 From CRESP Games to Pointer QPCPs
In this section we show that if Conjecture 1.5 is true then Conjecture 1.3 is also true. We do
this by proving that CRESP(k, α, β) ∈ PointerQPCP(k, α, β). Assuming Conjecture 1.5, this
implies that QMA ⊆ PointerQPCP(k, α, β). The inclusion PointerQPCP(k, α, β) ⊆ QMA follows
trivially, the same way as in Lemma 3.2.
Theorem 4.7. CRESP(k, α, β) ∈ PointerQPCP(k, α, β).
Proof. In CRESP games, the strategy of the quantum provers consists of the choice of the
shared state and the choice of which qudits to answer for each one of the veriﬁer’s questions. For
the classical prover, the strategy consists of the classical answers for each one of the veriﬁer’s
questions. Therefore, we can have a Pointer QPCP whose proof will be as follows:
for the
classical part, for each possible question of the veriﬁer, we include the indices of the qudits
answered by the quantum provers and the answer of the classical prover. The quantum part of
the proof will be the shared state before the encoding. With this information, the veriﬁer of the
Pointer QPCP can simulate the classical prover, the quantum provers, and the veriﬁer of the
CRESP game.
Formally, the veriﬁer of the Pointer QPCP protocol is provided a proof of the form y1...ym ⊗
|ψi, where yi can be seen as a pair (si, ci). The veriﬁer will do the following.
1. He picks a question i uniformly at random as the veriﬁer of the game.
2. He reads the corresponding strategy of the provers, i.e., (si, ci).
3. He creates the encoding of the qubits that are speciﬁed by strategy si.
4. He simulates the veriﬁer of the game using the encoded qubits as the quantum provers’

answers and ci as the classical prover’s answer.

5. He accepts if and only if the veriﬁer of the game accepts.
In our construction, we crucially use the fact that each quantum prover has the same strategy,
as otherwise, the QPCP veriﬁer would need to read out the strategies of each prover, which

would require Ω(cid:16)log2(n)(cid:17) bits of information. Note that we only read out k qubits from the

quantum part of the proof. We are left to prove completeness and soundness.

For completeness, it is not hard to see that if there is a strategy for the provers in the game
with acceptance probability p then there is a Pointer QPCP that accepts with probability p as
well, just by providing the values of si, ci, and |ψi that lead to acceptance with probability p in
the game.
For soundness, if there are values of yi = (si, ci) and |ψi that make the Pointer QPCP veriﬁer
accept with some probability then these values can be translated to strategies of the provers in
the CRESP game that will achieve the same acceptance probability.

5 Discussions and Open Problems
We deﬁned a new variant of quantum proof systems, the Pointer QPCPs, and provided three
equivalent versions of the Pointer QPCP conjecture. Our conjecture is weaker than the original
QPCP conjecture and hence may be easier to prove. Moreover, the fact of having an equivalent
game formulation might lead to new techniques for resolving the conjecture.

It is an interesting question to see whether we can deﬁne a more natural game which is
equivalent to the Pointer QPCP conjecture. For our equivalence, we were forced to impose

13

stringent constraints on the game. Nevertheless, it seems that if we allow the quantum provers
to either share some more general entangled state or apply any operator to the state they share
other than swapping, then it is not clear how not to lose the constant gap when constructing
the witness [FV15, Ji15] or not to increase the question size to exponential [NV15]. To illustrate
this problem, imagine that the provers are allowed to slightly change the states they return
depending on the questions that were asked. If the amount of change, in the trace distance, is
in the order of o(1) then the veriﬁer will not be able to detect this with constant probability.1
When we try to prove soundness by constructing a state with low energy (as in [FV15]) these
errors add up Ω(n) times. The ﬁnal error can then be too big so we don’t know whether the
constructed state is a yes or no instance.

Even with our constraints, CRESP games remain equivalent to Pointer QPCPs. Since
Pointer QPCPs are a superclass of QPCPs, ﬁnding a game that is equivalent to the original
QPCP would potentially impose even further constraints. One of the main problems going from
a game back to Local Hamiltonians or QPCPs, is that to simulate the game, the strategies of
the provers must be somehow simulated and when we try to do this with Local Hamiltonians,
the gap vanishes, while for QPCPs, we require the classical pointer queries. Note that, in the
Set Local Hamiltonian problem the gap doesn’t depend on the size of the sets, by deﬁnition.
Whereas, if we want to go to the usual Local Hamiltonian problem then the absolute gap is
divided by the total number of Hamiltonians and so the gap vanishes.

Acknowledgements
We thank Thomas Vidick for helpful discussions. Supported by ERC QCC, ANR RDAM.

References
[AALV09] Dorit Aharonov, Itai Arad, Zeph Landau, and Umesh Vazirani. The detectability
lemma and quantum gap ampliﬁcation. In Proceedings of the 41st Annual ACM
Symposium on Theory of Computing (STOC ’09), pages 417–426, 2009.

[AAV13] Dorit Aharonov, Itai Arad, and Thomas Vidick. Guest column: the quantum PCP

conjecture. SIGACT News, 44(2):47–79, 2013.
Dorit Aharonov and Lior Eldar. The commuting local Hamiltonian problem on
locally expanding graphs is approximable in NP. Quantum Information Processing,
14(1):83–101, January 2015.

[AE15]

[AN02]

[ALM+98] Sanjeev Arora, Carsten Lund, Rajeev Motwani, Madhu Sudan, and Mario Szegedy.
Proof veriﬁcation and the hardness of approximation problems. Journal of the ACM,
45(3):501–555, May 1998.
Dorit Aharonov and Tomer Naveh. Quantum NP - A Survey, 2002, arXiv:quantum-
ph/0210077.
Itai Arad. A Note About a Partial No-go Theorem for Quantum PCP. Quantum
Info. Comput., 11(11-12):1019–1027, November 2011.
Sanjeev Arora and Shmuel Safra. Probabilistic checking of proofs: A new character-
ization of NP. Journal of the ACM, 45(1):70–122, January 1998.

[Ara11]

[AS98]

1Let the amount of change be in the order of Θ(cid:0)1/

√

n(cid:1), for example.

14

[BH13]

[CM14]

[Din07]

[EH15]

[FV15]

Fernando G. S. L. Brandão and Aram W. Harrow. Product-state approximations
to quantum ground states. In Proceedings of the 45th Annual ACM Symposium on
Theory of Computing (STOC ’13), pages 871–880, 2013.
Toby S. Cubitt and Ashley Montanaro. Complexity classiﬁcation of local Hamiltonian
problems. In Proceedings of the 55th IEEE Annual Symposium on Foundations of
Computer Science (FOCS ’14), pages 120–129, 2014.
Irit Dinur. The PCP Theorem by Gap Ampliﬁcation. Journal of the ACM, 54(3),
June 2007.
Lior Eldar and Aram W. Harrow. Local Hamiltonians with no low-energy trivial
states, 2015, arXiv:quantum-ph/1510.02082.
Joseph Fitzsimons and Thomas Vidick. A multiprover interactive proof system for
the local Hamiltonian problem. In Proceedings of the 2015 Conference on Innovations
in Theoretical Computer Science, (ITCS ’15), pages 103–112, 2015.

[HNN13]

[Ji15]

[GHLS15] Sevag Gharibian, Yichen Huang, Zeph Landau, and Seung Woo Shin. Quantum
Hamiltonian complexity. Foundations and Trends in Theoretical Computer Science,
10(3):159–282, 2015.
Sean Hallgren, Daniel Nagaj, and Sandeep Narayanaswami. The local Hamiltonian
problem on a line with eight states is QMA-complete. Quantum Info. Comput.,
13(9-10):721–750, September 2013.
Zhengfeng Ji. Classical veriﬁcation of quantum proofs, 2015, arXiv:quantum-
ph/1505.07432.
Julia Kempe, Alexei Kitaev, and Oded Regev. The complexity of the local Hamilto-
nian problem. SIAM Journal on Computing, 35(5):1070–1097, May 2006.
Julia Kempe and Oded Regev. 3-local Hamiltonian is QMA-complete. Quantum
Info. Comput., 3(3):258–264, 2003.

[KKR06]

[KR03]

[KSV02] A. Kitaev, A. Shen, and M. N. Vyalyi. Classical and quantum computation. Graduate

[NV15]

[Osb12]

[OT10]

[Raz98]

[Raz05]

studies in mathematics. American mathematical society, 2002.
Anand Natarajan and Thomas Vidick. Constant-soundness interactive proofs for
local Hamiltonians, 2015, arXiv:quantum-ph/1512.02090.
Tobias J Osborne. Hamiltonian complexity. Reports on Progress in Physics,
75(2):022001, 2012.
Roberto Oliveira and Barbara M. Terhal. The complexity of quantum spin systems
on a two-dimensional square lattice. Quantum Info. Comput., 8(10):900–924, 2010.
Ran Raz. A parallel repetition theorem. SIAM Journal on Computing, 27(3):763–803,
June 1998.
In Proceedings of 46th
Ran Raz. Quantum information and the PCP theorem.
Annual IEEE Symposium on Foundations of Computer Science (FOCS ’05), 2005.

15

A Proof of Lemma 4.4
Proof of Lemma 4.4. We remind here the notation from Section 3.3. The encoding of qubit k
can be split into two parts: a GHZ-like state and copies of |0i. (For the formal deﬁnition see
Eqs. (1) and (2).) For the encoding of qubit k, let Qk be the subset of provers that receive a
∼= C4|Qk| its corresponding subspace. The projection over Sk
share of the GHZ-like state and Sk
onto the codespace of the encoding of qubit k is

 X

u,v∈{0,1}

Πk = 1
2

(cid:12)(cid:12)(cid:12)u|Qk|ED

v|Qk|(cid:12)(cid:12)(cid:12) + X

w,z∈{2,3}

(cid:12)(cid:12)(cid:12)w|Qk|ED

 .
z|Qk|(cid:12)(cid:12)(cid:12)

same strategy, they all answer with the encoding of a qubit j 6= i.

Let i be the qubit whose encoding was asked. Since the provers are dishonest and follow the
We split the argument into two cases. If Qi ⊂ Qj then the qudits that should contain the
GHZ-like state on the encoding of i contain the reduced state of a bigger GHZ-like state and
the density matrix of this reduced state is of the form

for some α and β, depending on the j-th qubit, with |α|2 + |β|2 = 1. This case is depicted in
Fig. 3a. The probability that this state projects onto Πi is

ρ1 = |α|2
2

ED3|Qi

(cid:12)(cid:12)(cid:12)(cid:17)

2

(cid:12)(cid:12)(cid:12)3|Qi
(cid:16)(cid:12)(cid:12)(cid:12)2|Qi|ED2|Qi|(cid:12)(cid:12)(cid:12) +
(cid:12)(cid:12)(cid:12)1|Qi|ED1|Qi|(cid:12)(cid:12)(cid:12)(cid:17)(cid:17)
(cid:12)(cid:12)(cid:12)3|Qi|ED3|Qi|(cid:12)(cid:12)(cid:12)(cid:17)(cid:17)

(cid:12)(cid:12)(cid:12)1|Qi|ED1|Qi|(cid:12)(cid:12)(cid:12)(cid:17) + |β|2
(cid:16)(cid:12)(cid:12)(cid:12)0|Qi|ED0|Qi|(cid:12)(cid:12)(cid:12) +
(cid:12)(cid:12)(cid:12)0|Qi|ED0|Qi|(cid:12)(cid:12)(cid:12)(cid:17) + Tr(cid:16)Πi
(cid:16)Tr(cid:16)Πi
Tr(Πiρ1) = |α|2
(cid:12)(cid:12)(cid:12)2|Qi|ED2|Qi|(cid:12)(cid:12)(cid:12)(cid:17) + Tr(cid:16)Πi
(cid:16)Tr(cid:16)Πi
2
+ |β|2
(cid:19)
(cid:18)1
(cid:18)1
(cid:19)
2
+ |β|2
2 + 1
2 + 1
2
2
2
(cid:12)(cid:12)(cid:12)i|Qi|E(cid:13)(cid:13)(cid:13)2 = 1
(cid:13)(cid:13)(cid:13)Πi

= |α|2
2
= 1
2

2 for i ∈ {0, 1, 2, 3}.

where the second equality comes from the fact that

If Qi 6⊂ Qj then the set Qi \ Qj is non-empty. Let |Qi \ Qj| = r and |Qi ∩ Qj| = s. The
provers in Qi \ Qj answer |0i and the remaining provers send either a GHZ-like state (when
Qj ⊂ Qi) or a reduced state of a GHZ-like state (when Qj 6⊂ Qi). These cases are depicted in
Figs. 3b and 3c. Therefore, the answer from the provers has the form (up to some permutation
of the qubits, but since the projection is symmetric, we can consider any arbitrary order)

i

j

prover 1
prover 2
prover 3
prover 4
prover 5

ρ2 = |0rih0r| ⊗ σ

i

j

prover 1
prover 2
prover 3
prover 4
prover 5

i

j

prover 1
prover 2
prover 3
prover 4
prover 5

(a) Qi ⊂ Qj

(b) Qj ⊂ Qi

(c) Qi 6⊂ Qj and Qj 6⊂ Qi

Figure 3: Examples of the cases for the expected vs. received encodings. The red cells correspond
to shares of GHZ-like states and the white cells correspond to copies of |0i.

16

for some density matrix σ on s qudits.

From the structure of Πi and using that |Qi| = r + s, we have that kΠi |0ri ⊗ |usik = 0 for
def= |0sih0s| σ |0sih0s| be the projection of σ onto |0sih0s|. It follows that the

u ∈ {1, 2, 3}. Let σ0
probability that the answered state projects onto Πi is

≤ Tr(cid:16)Πi

(cid:12)(cid:12)(cid:12)0r+sED0r+s(cid:12)(cid:12)(cid:12)(cid:17)

Tr(Πiρ2) = Tr(Πi |0rih0r| ⊗ σ)
= Tr(Πi |0rih0r| ⊗ σ0)

= 1
2 .

Therefore, the answered state projects onto the codespace with probability at most 1/2.

17

