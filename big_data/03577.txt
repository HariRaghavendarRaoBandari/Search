Algorithmica manuscript No.
(will be inserted by the editor)

Combinatorial RNA Design
Designability and Structure-Approximating Algorithm in
Watson-Crick and Nussinov-Jacobson Energy Models

Jozef Haleˇs · Alice H´eliou · J´an Maˇnuch ·
Yann Ponty · Ladislav Stacho

Received: date / Accepted: date

Abstract We consider the Combinatorial RNA Design problem, a minimal
instance of RNA design where one must produce an RNA sequence that
adopts a given secondary structure as its minimal free-energy structure. We
consider two free-energy models where the contributions of base pairs are ad-
ditive and independent: the purely combinatorial Watson-Crick model, which
only allows equally-contributing A − U and C − G base pairs, and the real-
valued Nussinov-Jacobson model, which associates arbitrary energies to A−U,
C − G and G − U base pairs.

We ﬁrst provide a complete characterization of designable structures us-
ing restricted alphabets and, in the four-letter alphabet, provide a complete
characterization for designable structures without unpaired bases. When un-
paired bases are allowed, we characterize extensive classes of (non-)designable
structures, and prove the closure of the set of designable structures under the
stutter operation. Membership of a given structure to any of the classes can
be tested in Θ(n) time, including the generation of a solution sequence for

Jozef Haleˇs
Department of Mathematics, Simon Fraser University, Canada
E-mail: Jozef.Hales@gmail.com

Alice H´eliou
Inria Saclay & LIX (CNRS UMR 7161) Ecole Polytechnique, France
E-mail: alice.heliou@inria.fr

J´an Maˇnuch
Department of Mathematics, Simon Fraser University, Canada
Present address: Department of Computer Science, University of British Columbia, Canada
E-mail: jmanuch@sfu.ca

Yann Ponty
PIMS, Simon Fraser University, Canada
Present address: Inria Saclay & LIX (CNRS UMR 7161) Ecole Polytechnique, France
E-mail: yann.ponty@lix.polytechnique

Ladislav Stacho
Department of Mathematics, Simon Fraser University, Canada
E-mail: lstacho@sfu.ca

6
1
0
2

 
r
a

 

M
1
1

 
 
]

.

M
Q
o
i
b
-
q
[
 
 

1
v
7
7
5
3
0

.

3
0
6
1
:
v
i
X
r
a

2

Jozef Haleˇs et al.

positive instances. Finally, we consider a structure-approximating relaxation
of the design, and provide a Θ(n) algorithm which, given a structure S that
avoids two trivially non-designable motifs, transforms S into a designable
structure constructively by adding at most one base-pair to each of its stems.
Keywords RNA structure · Inverse combinatorial optimization · String
design

Acknowledgements The authors would like to thank C´edric Chauve (Simon Fraser Univer-
sity) for fruitful discussions and constructive criticisms.
YP is greatly indebted to the French Centre National de la Recherche Scientiﬁque and the
Paciﬁc Institute for the Mathematical Sciences for funding an extended visit at the Simon
Fraser University.

1 Introduction

RiboNucleic Acids (RNAs) are biomolecules which act in almost every aspect of
cellular life, and can be abstracted as a sequence of nucleotides, i.e., a string over
the alphabet {A, U, C, G}. Due to their versatility, and the speciﬁcity of their inter-
actions, they are increasingly being used as therapeutic agents [24], and as building
blocks for the emerging ﬁeld of synthetic biology [18, 20]. A substantial proportion
of the functional roles played by RNA rely on interactions with other molecules to
activate/repress dynamical properties of some biological system, and ultimately
require the adoption of a speciﬁc conformation. Accordingly, RNA bioinformatics
has dedicated much eﬀort to developing energy models [15, 22] and algorithms [16,
28] to predict the secondary structure of RNA, a combinatorial description of the
conformation adopted by an RNA which only retains interacting positions, or
base pairs. Historically, structure prediction has been addressed as an optimiza-
tion problem, whose expected output is a secondary structure which minimizes
some notion of free-energy [16, 28]. The performances of the RNA folding predic-
tion problem have now reached a point where in silico predictions are generally
considered reliable [15], allowing for large scale studies and fueling the discovery
of an increasing number of functional families [9].

Due to the existence of expressive, yet tractable, energy models and conforma-
tional spaces, coupled with promising applications in multiple ﬁelds (pharmaceuti-
cal research, natural computing, biochemistry. . . ), a wide array of computational
methods [10, 4, 1, 5, 2, 21, 25, 13, 14, 8, 11, 17, 27, 3, 6] have been proposed to tackle the
natural inverse version of the structure prediction, the RNA design problem. In this
problem, one attempts to perform the in silico synthesis of artiﬁcial RNA se-
quences, performing a predeﬁned biological function in vitro or in vivo. Given the
prevalence of structure in the function of an RNA, one of the foremost goal of
RNA design (sometimes named inverse folding in the literature) is to ensure that
the designed sequence folds into a predeﬁned secondary structure, preferentially
to any alternative structure. In other words, the chosen conformation should not
be challenged by alternative stable structures having similar or lower free-energy.
Despite a rich, fast-growing, body of literature dedicated to the problem, there
is currently no exact polynomial-time algorithm for the problem. Moreover, the
complexity of the problem remains open (see Section 5 for a discussion). It can
be argued that this situation, quite exceptional in the ﬁeld of computational biol-

Combinatorial RNA Design

3

Fig. 1 Four equivalent representations for an RNA secondary structure of length 68, consisting
of 20 base pairs forming 7 bands: outer-planar graph (a), arc-annotated representation (b),
parenthesized expression (c), and tree representation (d)

ogy, partly stems from the intricacies of the Turner free-energy model [22] which
associates experimentally-determined energy contributions to ∼ 2.4 × 104 struc-
ture/sequence motifs. This motivates a reductionist approach, where one studies
an idealized version of the RNA design problem, lending itself to algorithmic in-
tuitions, while hopefully retaining the presumed diﬃculty of the original problem
and provides intuitions for future studies of the problem under more sophisticated
energy models.

In this work, we introduce the Combinatorial RNA Design problem, a minimal
instance of the RNA design problem which aims at ﬁnding a sequence that admits
the target structure as its unique base pair maximizing structure. After this short
introduction, Section 2 states deﬁnitions and problems. In Section 3, we state our
main results and prove them in Section 4, including an extended weighted version
that allows additional types of base pairs. Finally, we conclude in Section 5 with
some remarks, open problems and future extensions of this work.

2 Deﬁnitions and notations

RNA secondary structure. An RNA can be encoded as a sequence of nucleotides,
i.e., a string w = w1 ··· w|w| ∈ {A, U, C, G}(cid:63). The preﬁx of w of length i is denoted
as w[1,i] and |w|b denotes the number of occurrences of b in w. A (pseudoknot-free)
secondary structure S on an RNA of length n is a pair (n, P ), where P is a set of
base pairs {(li, ri)}p
– ∀i ∈ [1, p], li < ri;
– Each position is involved in at most one base pair, i.e. ∀i (cid:54)= j ∈ [1, p], li (cid:54)= lj,
– Base pairs are pairwise non-crossing,i.e. (cid:64)i, j ∈ [1, p], li < lj < ri < rj, .

i=1 ⊂ [1, n]2 such that:

li (cid:54)= rj, ri (cid:54)= rj;

GCAGGAGUCUAGCGAUGCUAGUCAGCUAGCUCAUAAUGAAUUAGGCUACGACUAGCGCUGAGACCCUU110203040506068GCAGGAGUCUAGCGAUGCUAGUCAGCUAGCUCAUAAUGAAUUAGGCUACGACUAGCGCUGAGACCCUU110203040506068...((.((.((((...)))).((((.((..((.....))..)).((((....)))).)))).))))..Root[1,1][2,2][3,3][4,66][67,67][68,68][5,65][6,6][7,64][8,63][9,9][10,20][21,21][22,61][62,62][11,19][12,18][13,17][14,14][15,15][16,16][23,60][24,59][25,58][26,26][27,43][44,44][45,56][57,57][28,42][29,29][30,30][31,39][40,40][41,41][32,38][33,33][34,34][35,35][36,36][37,37][46,55][47,54][48,53][49,49][50,50][51,51][52,52]a.b.c.d.4

Jozef Haleˇs et al.

The set of unpaired positions US of a secondary structure S = (n, P ) is the set of
indices k ∈ [1, n] that are not involved in any of the base pairs in S. A structure
S is called saturated if and only if its positions are all paired, i.e. iﬀ US = ∅.
Conversely, a structure S is empty when none of its positions is paired, i.e. iﬀ
S = (n,∅).
The set of all secondary structures is denoted by S, and its restriction to struc-
tures of length n by Sn. Secondary structures are typically expressed using a
variety of equivalent representations, illustrated by Figure 1 and formally deﬁned
further in this section.
Given a sequence w and a structure S = (|w|, P ), let ui = ε if i ∈ US and
ui = wi, otherwise, where ε is the empty sequence. Deﬁne the S-paired restriction
of w (resp. paired restriction of S), denoted as Paired(w, S) (resp. Paired(S)), as
u = u1 ··· u|w| (resp. (|u|,{(|u1 ··· ui|,|u1 ··· uj|) | (i, j) ∈ P})). A maximal subset
B = {(i, j), (i + 1, j − 1), . . . , (i + (cid:96) − 1, j − (cid:96) + 1)} of P for some integer i, j, (cid:96) is
called a band (also referred to as helix or stem in related works) of size (cid:96) = |B|,
of S = (n, P ). Note that every base pair belongs to exactly one band. In other
words, the base-pairs of a secondary structure can be unambiguously partitioned
into a set of bands.

Dot-parentheses notation. A well-parenthesized sequence s ∈ {(, ), .}∗ can be used
to represent a secondary structure. There exists a one-to-one correspondence be-
tween secondary structures and such well-parenthesized sequences: any base pair
(l, r) ∈ P becomes a pair of corresponding opening and closing parentheses in s
at position l and r respectively (sl = ( and sr = )), and any unpaired position i
corresponds to a dot (si = .). This representation is illustrated by Figure 1.c. A
concatenation of two structures S and S(cid:48), denoted by S.S(cid:48) or simply SS(cid:48) wherever
unambiguous, is the structure corresponding to the well-parenthesized sequence
obtained by concatenating the well-parenthesized sequences of S and S(cid:48).

k-stutter. The k-stutter of a sequence s, denoted by s[k] is the result of an inde-
pendent copy k-times of each of the characters in s. For instance, the 3-stutter
of a sequence AUUC is AAAUUUUUUCCC. This operation also applies to an RNA
structure S, and S[k] denotes the RNA structure obtained by applying the usual
k-stutter to the dot-parentheses representation of S.

Tree representation. Alternatively, the tree representation, denoted by TS, for S =
(n, P ) is a rooted ordered tree whose vertex set VS consists of intervals [l, r] for any
base pair (l, r) ∈ P , and [k, k] for every k ∈ US. A virtual root [0, n + 1] is added
for convenience. Any node labeled by [k, k] is called unpaired, and any other node
(including the virtual root) are considered as paired. The children of an interval
I ∈ VS are the maximal proper subintervals I(cid:48) ∈ VS of I ordered by the left points
of the intervals. The degree of a vertex I ∈ VS is the total number of its paired
neighbors, including its parent (if any). We denote by D(S) the maximal degree
of nodes in TS. Figure 1.d shows the tree representation of a typical secondary
structure.

Proper, greedy and separated coloring of the tree representation. Consider the tree
representation TS of structure S. A coloring of TS associates a color, chosen among

Combinatorial RNA Design

5

black, white, or gray, to each paired node of TS that is diﬀerent from the root.
This coloring is called proper if:

i) Each node has at most one black child, at most one white child, and at most

two grey children;

ii) Any c-colored node at most one c-colored child;
iii) Black nodes shall not have a white child, and white nodes shall not have a

black child.

A greedy coloring of TS is the coloring obtained by recursive application of the
following rule starting from the root and continuing towards leaves: if the node
is black, color the ﬁrst paired child black and the remaining paired children gray,
if the node is white, color the ﬁrst paired child white and the remaining paired
children gray, otherwise (the gray node or the root), color the ﬁrst paired child
black, second white and the remaining paired children gray. It is easy to check
that if the degree of each node is at most four then the greedy coloring is a proper
coloring.

Given a proper coloring of TS, let the level of each node be the number of black
nodes minus the number of white nodes on the path from this node to the root.
A proper coloring is called separated if the two sets of levels, associated with gray
and unpaired nodes respectively, do not overlap.

2.1 Statement of the generic RNA design problem
Consider an energy model M, which associates a free-energy EM(w, S) ∈ R− ∪
{+∞} to each secondary structure S ∈ S|w| for a given RNA sequence w. The
minimum free-energy (MFE) structure prediction problem is typically deﬁned as
follows:

RNA-FOLDM problem
Input: RNA sequence w
Output: S(cid:63)M(w) := argminS(cid:48)∈S|w| EM(w, S(cid:48)) .
The existence of competing structures, i.e. one or several secondary structure(s)
having minimal free-energy for a given RNA, impacts the well-deﬁnedness of the
folding process. The detection of such situations is therefore of interest, and can
be rephrased as the following problem:

UNIQUE-FOLDM problem
Input: Sequence w + Energy distance ∆ > 0
Output: True if, for every S(cid:48) ∈ S|w| \ {S(cid:63)M(w)}, one has:
) ≥ EM(w, S(cid:63)M(w)) + ∆ .

EM(w, S

(cid:48)

False otherwise.
We can now deﬁne the combinatorial RNA Design problem as:
RNA-DESIGNM,Σ problem
Input: Secondary structure S + Energy distance ∆ > 0
Output: RNA sequence w ∈ Σ(cid:63) – called an (M, Σ, ∆)-design for S – such that:

RNA-FOLDM(w) = S and UNIQUE-FOLDM(w, ∆),

6

Jozef Haleˇs et al.

Fig. 2 The combinatorial RNA design problem: Starting from a secondary structure S (a.),
our goal is to design an RNA sequence which uniquely folds, with maximum number of base
pairs, into S. The sequence proposed in b. is invalid due to the existence of an alternative
structure (lower half-plane, red) having the same number of base pairs as S. The right-most
sequence (c.) is a design for S.

or ∅ if no such sequence exists.
The structures for which there exists an (M, Σ, ∆)-design are called (M, Σ, ∆)-
designable. Let Designable(M, Σ, ∆) be the set of all such structures. If it is clear
from the context, we will usually drop M, Σ and/or ∆.

2.2 Base pair sum energy models

In this work, we will consider two types of base pair sum energy models, where the
free-energy of a structure is simply obtained by sum, over all base pairs, individual
independent contributions associated with each pair.
Deﬁnition 1 (Base pair sum energy model M) Let w be an RNA sequence
and S a secondary structure in S|w|. Then

(cid:88)

(l,r)∈S

EM(w, S) =

∆GM(wl, wr) ,

where ∆GM(x, y) is the energy induced by a base pair x − y.

To deﬁne a model of interest, it is suﬃcient to specify the energies of base pairs.
First, we consider a minimal energy model, named Watson-Crick model due to its
similarity with the DNA base-pairing rules. The model is purely combinatorial, as
it associates a homogenous −1 energy contribution to each valid base-pair, and
only allows G − C and A − U to pair.
Deﬁnition 2 (Watson-Crick energy model W)

(cid:40)−1

if {x, y} = {G, C} or {x, y} = {A, U}

∆GW (x, y) =

+∞ otherwise.

A more general model, named the Nussinov-Jacobson model, allows G− U base-
pairs to occur, and associates arbitrary weights to the base pairs depending on
their content. It is named after the authors of the ﬁrst polynomial-time algorithm
for predicting the MFE under a similar energy model [16].

((.)(..))GGACAGGUCACAGGUUCUa.Targetsec.str.Sb.InvalidsequenceforSc.DesignforSCombinatorial RNA Design

7

Deﬁnition 3 (Nussinov-Jacobson energy model N )



if {x, y} = {G, C}
if {x, y} = {A, U}
if {x, y} = {G, U}

α
β
γ
+∞ otherwise.

∆GN (x, y) =

where α, β, γ ∈ R− and α, β < γ.

Note that the last condition of the above deﬁnition is typically satisﬁed by
empirical estimates of base pair energies. Namely, G − U base pairs, also named
Wobble base pairs, are much weaker than its alternatives. They are mediated by a
single hydrogen bond, as opposed to 2 (resp. 3) bonds for A − U (resp. G − C).
to an energy model M, if EM(w, S) < +∞.

We say that the structure is compatible with a sequence w, according respect
It is worth noting that minimizing EW (w, S) is equivalent to maximizing |S|,
thus RNA-FOLDW is a classic base pair maximization problem. Moreover, both
RNA-FOLDW and RNA-FOLDN can be solved in polynomial time using dynamic
programming, historically in O(n3) complexity [16], or in O(n3/ log(n)) current
best time complexity [7]. A backtracking procedure reconstructs the structure
having minimal energy, and can be easily adapted to provide a Θ(n3) algorithm
for the UNIQUE-FOLDM problem.

3 Statement of the results

In this section, we characterize sets of secondary structures which can or cannot
be designed using (a subset of) {A, C, G, U}, a (restricted) set of base pairs and a
desired energy distance ∆ within an energy model M. The proofs of our statements
are largely interconnected, and have been regrouped in Section 4.

First, let us remark that the empty secondary structures are the only ones that

are designable for arbitrary large energy distances ∆.
Theorem 1 For any M ∈ {W,N}, and any energy distance ∆ such that

∆ > −∆GM(X, Y),

∀X, Y ∈ {A, C, G, U}2,

(1)

only the empty secondary structures are designable.

Proof For any non-empty secondary structure S having energy E on some sequence
w, removing any base pair X − Y from S yields an alternative structure S(cid:48) whose
energy is E(cid:48) = E − ∆GM(X, Y) < E + ∆. In other words, S(cid:48) is a competing
structure at distance less than ∆ of S, i.e. w is not a valid ∆-design for S.
Moreover, any empty structure of length n is designable. Indeed, none of the
models allows for pairs of the form X − X, X ∈ {A, C, G, U}, so any sequence Xn
admits the empty structure, having 0 energy, as its only secondary structure having

ﬁnite free-energy, i.e. Xn is a design for the empty structure for any ﬁnite ∆ > 0.(cid:117)(cid:116)

8

Jozef Haleˇs et al.

3.1 Watson-Crick model W (∆ = 1)

We provide (partial) characterizations for the sets Designable(Σ) of designable
structures over partial alphabets Σ in the W model. From Theorem 1, combined
with the purely combinatorial nature of the energy model, we observe that non-
trivial structures are designable only when ∆ ∈ (0, 1], and that the set of designable
structures is unaﬀected by the precise value of ∆ on the segment. Therefore we set
∆ = 1 without loss of generality, and consider the structures whose designed se-
quences lose at least one base-pair when forming alternative structures. We obtain
the following meta-theorem.
Theorem 2 In the Watson-Crick energy model W, and assuming an energy dis-
tance of ∆ = 1, results R1 through R8 hold.

Let Σc,u be an alphabet with c pairs of complementary bases and u bases
without a complementary base. Without loss of generality in the W model, we
will assume that Σ1,0 = {G, C} and Σ1,1 = {G, C, A}.

3.1.1 Designability over restricted alphabets.

First, we provide a complete characterization of designable (secondary) structures
using an alphabet Σ of restricted cardinality:
R1 For every u ∈ N+, Designable(Σ0,u) = {(n,∅) | ∀n ∈ N};
R2 Designable(Σ1,0) = {S ∈ S | S is saturated and D(S) ≤ 2} ∪ {(n,∅) | ∀n ∈ N};
R3 Designable(Σ1,1) = {S ∈ S | D(S) ≤ 2}.
3.1.2 Designability over the complete alphabet Σ2,0 = {A, U, C, G}.

We ﬁrst characterize the set of designable saturated structures, i.e. structures
whose positions are all paired to some other position.
R4 {S ∈ Designable(Σ2,0) | S is saturated} = {S ∈ S | D(S) ≤ 4 and S is saturated}.
When unpaired positions are allowed in the target structure, our characterization
is only partial:
R5 Let m5 represent “a node having degree more than four”, and m3 ◦ be “a node

having one or more unpaired children, and degree greater than two”, then

Designable(Σ2,0) ∩ {S ∈ S | S contains m5 or m3 ◦} = ∅ ;

R6 Let Sep be the set of structures for which there exists a separated (proper)

coloring of the tree representation, then Sep ⊂ Designable(Σ2,0);

R7 The set of Σ2,0-designable structures is closed under the k-stutter operations:

∀S ∈ S,∀k ∈ N+ :

S ∈ Designable(Σ2,0) =⇒ S[k] ∈ Designable(Σ2,0) .

We note however that reverse implication is not true: S[k] ∈ Designable(Σ2,0)
does not imply that S ∈ Designable(Σ2,0). For instance, it is easily veriﬁed that ˆS[2]
is Σ2,0-designable, while ˆS is not, as shown in Figure 3. Membership to the classes
described in R1-R5 can be tested by trivial linear-time algorithms. These algo-
rithms can also be easily adapted into linear-time algorithms for the production
of a concrete design, thereby oﬀering partial solutions to the RNA-DESIGNM,Σ
problem.

Combinatorial RNA Design

9

ˆS:

( . . ) ( . . ) ( . . )

˜S:

( ( . . ) ) ( ( . . ) ) ( ( . . ) )
G G U U C C C C A A G G A A G G U U

Fig. 3 An example of non-designable (left) and designable structure (right).

Fig. 4 Application of the structure-approximating algorithm to the non-designable structure
ˆS in Fig. 3: A base pair (circled black node) is inserted in the greedily colored tree, oﬀsetting
the levels of white and unpaired nodes (crosses) to even and odd levels respectively, so that
the resulting tree is proper/separated, representing a designable structure.

3.1.3 Structure-approximating algorithm.

Unfortunately, avoiding m5 and m3 ◦, while necessary, is generally not suﬃcient
to ensure designability. For instance, ˆS in Figure 3 clearly does not contain m5
or m3 ◦, yet it cannot be designed. In such cases, unwanted interactions can be
somehow penalized by duplicating some base pairs. For instance, duplicating a
single base pair in ˆS yields a Σ2,0-designable structure ˜S, as shown by Figure 4.

R8 Any structure S avoiding m5 and m3 ◦ can be transformed in Θ(n) time into a
Σ2,0-designable structure S(cid:48). This is done by duplicating a subset of the base
pairs of S, at most one per band, such that the greedy coloring of the resulting
structure is proper and separated, as illustrated by Figure 4.

3.2 Nussinov-Jacobson energy model N (∆ ≤ min(|α|,|β|)])

We consider the validity of the above results in the Nussinov-Jacobson model.
Note that the consideration of G − U base pairs, by loosening the notion of com-
plementarity, forces us to abuse our notation for Σi,j. Namely, Σ2,0 is taken to
represent the full alphabet, even though it now strictly allows three types of base
pairs.

Theorem 3 For any ∆ ∈ (0, min(|α|,|β|)], statements R1 through R8 hold
in the Nussinov-Jacobson model.

4 Proofs

4.1 Watson-Crick model (∆ = 1)

R1 is trivial since, in the absence of complementary letters, empty structures are
the only one whose energy is not inﬁnite.

(..)(..)(..)(..)(..)((..))GAACCAAGAGAACURootRootGreedyColoringBandInﬂationDesign→GC→CG→AU|UA→A10

Jozef Haleˇs et al.

Theorem 4 (⇒ Result R4) A saturated secondary structure S is Σc,0-designable
if and only if D(S) ≤ 2c.

Proof First, we will show that the degree condition is necessary. Assume to the
contrary that D(S) > 2c and S has a design w. Let [a, b] be a vertex with degree
d ≥ 2c + 1 in TS. Let {[li, ri]}d
i=1 be the (paired) children of [a, b] and the node
[a, b] if [a, b] is not the root. Let Li = li and Ri = ri if [li, ri] is a child of [a, b],
and Li = ri and Ri = li if it is [a, b]. Then among bases wL1 , . . . , wLd must be a
pair of repeated letters. Let wLi = wLj be such a pair with Li < Lj. It is easy to
check that S\{(li, ri), (lj, rj)}∪{(Li, Rj), (Ri, Lj)} is a structure compatible with
w with the same number of base pairs as S, a contradiction with the assumption
that w is a design for S.
To show that the degree condition is also suﬃcient, we need further deﬁnitions
and claims. First, we say that a sequence w ∈ Σ∗ is saturable if there is a satu-
rated structure compatible with w. Note that the concatenation of two saturable
sequences is also saturable. Then the following claim characterizes the cases when
a saturable sequence can be split into saturable sequences.

Claim 4.1 Let w = uv be a saturable sequence of length k. If u is saturable, then
so is v.

Proof Consider a saturated structure S compatible with sequence w and satu-
rated structure Su compatible with u. We will construct a saturated structure Sv
compatible with v.
Consider a graph G with vertex set {1, . . . , k} and edge set deﬁned by pairs
in S ∪ Su. Obviously, this graph is a collection of alternating paths (alternating
between pairs from S and from Su, starting and ending with positions in v) and
alternating cyclic paths, and it has a planar embedding such that all vertices lie
on a line in their order: pairs in S are drawn as non-crossing arcs above the line
and pairs in Su as non-crossing arcs below the line. Note that every position in v
is an end-point of exactly one path in the collection.
Deﬁne set of base pairs Sv by pairing the end-points of the paths in G, cf.
Figure 5. We will show that Sv is a structure. Consider a graph G(cid:48) constructed
by adding pairs in Sv to G. This graph is a collection of cyclic paths. Consider
an embedding of G(cid:48) into plane that extends the planar embedding of G by adding
arcs corresponding to the pairs in Sv below the line containing all the vertices.
If two base pairs b, b(cid:48) ∈ Sv cross then the cyclic path containing b and the cyclic
path containing b(cid:48) intersect in exactly one point. By Jordan’s curve theorem, this
is a contradiction. It follows that Sv is a saturated structure, and hence v is also
(cid:117)(cid:116)
saturable.

We deﬁne w to be an atomic saturable sequence if no proper preﬁx of w is
saturable. Clearly, every saturated structure compatible with an atomic saturable
sequence w contains the base pair (1,|w|). On the other hand, by Claim 4.1, if
every saturated structure compatible with w contains the pair (1,|w|), then w
is an atomic saturable sequence. A design w that is also an atomic saturable
sequence will be called an atomic saturable design. A concatenation of two or more
atomic saturable designs is obviously not an atomic saturable sequence and it is
not necessarily a design. However, we have the following claims.

Combinatorial RNA Design

11

C A U A U G C C G A U A U G

Fig. 5 Construction of the saturated structure compatible with the suﬃx v. The vertical line
splits the sequence into a preﬁx u and a suﬃx v. Blue and red arcs depict saturated struc-
tures compatible with w and u respectively. Dashed red arcs represent the induced saturated
structure compatible with v.

1 (cid:54)= wj

1 = wj

Claim 4.2 The concatenation of t atomic saturable designs w1, . . . , wt for struc-
1,∀1 ≤ i < j ≤ t, is a design for the concate-
tures S1, . . . , St, such that wi
nated (saturated) structure S = S1 ··· St.
Proof Assume that W := w1 ··· wt is not a design, then there exist a saturated
structure S(cid:48) (cid:54)= S for W . We show that positing such an alternative structure leads
to a contradiction. Recall that each Si is saturated and contains a pair (1,|wi|).
If S(cid:48) pairs the ﬁrst and last letters in each wi, i ∈ [1, t], then S(cid:48) = S since each wi
is a design, a contradiction. Let wi be the leftmost sequence such that wi
1 is not
paired with wi|wi| in S(cid:48). Since S(cid:48) must be also saturated, wi
1 must be paired. Let
k, j ≥ i, be the partner of wi
[1,k]. If k = |wj|,
wj
then j > i and, by complementarity, wi
1 which contradicts the preconditions.
Hence, we can assume that k < |wj|. Since u and each of the wi, . . . , wj−1 are
saturable, by iterated application of Claim 4.1, we conclude that v = wj
[1,k] is
saturable as well. This contradicts the precondition that wj is an atomic saturable
design, since v is a proper preﬁx of wj. We conclude that no alternative saturated
(cid:117)(cid:116)
folding exists for W , i.e., W is a design for S.
1 ··· w1|w1|, . . . , wt =
1 (cid:54)= b for every
1 for every 1 ≤ i < j ≤ t. Then W = aw1 ··· wtb is an

Claim 4.3 Consider t atomic saturable designs w1 = w1
1 ··· wt|wt| and a pair a, b of complementary letters such that wi
wt
1 (cid:54)= wj
1 ≤ i ≤ t and wi
atomic saturable design.

1 in S(cid:48), and let u := wi ··· wj−1wj

Proof We will ﬁrst show that W is an atomic saturable sequence. Assume to the
contrary that there is a proper preﬁx of W that is saturable. Consider the shortest
[1,j] with 1 ≤ j < |wi+1| and 1 ≤ i < t. Obviously, a has
such preﬁx aw1 ··· wiwi+1
to be paired with wi+1
, otherwise we can ﬁnd a shorter saturable preﬁx. This
j
and that w1 ··· wiwi+1
implies that b = wi+1
[1,j−1] is saturable as well. By repeated
application of Claim 4.1, we have that wi+1
[1,j−1] is saturable. Since it is a preﬁx
of atomic saturable sequence wi+1, it must be the empty sequence, i.e., j = 1.
Therefore, b = wi+1
, a contradiction with the assumptions of the claim. Thus, W
is an atomic saturable sequence.

1

j

Now we will show that W is a design. Consider any MFE (saturated) structure
S for W . Since W is atomic saturable, a is paired with b in S. By Claim 4.2,
(cid:117)(cid:116)
w1 ··· wt is a design. It follows that W is a design as well.

12

Jozef Haleˇs et al.

To prove the suﬃciency of the degree condition, consider the following algo-
rithm, which takes as input a saturated structure S with D(S) ≤ 2c, and returns
a design w for S:
– Let {[li, ri]}d

i=1 be the children of the root. Assign to each wli , wri complemen-

tary bases such that ∀1 ≤ i < j ≤ d : wli (cid:54)= wlj .
– While there exists an unprocessed internal node [a, b] whose parent has been
processed (if there is no such node, stop and return w). Let {[li, ri]}d
i=1 be
the children of [a, b]. Assign to each wli , wri complementary bases such that
∀1 ≤ i ≤ d : wli (cid:54)= wa and ∀1 ≤ i < j ≤ d : wli (cid:54)= wlj .
Note that since the alphabet contains c pairs of complementary bases, the
assignment at each step of the algorithm is possible. We will show that the returned
sequence w is a design for S. We will show by tree induction on the size subtrees
that wi ··· wj is an atomic saturable design for every internal node [i, j]. It is easy
to check that this is satisﬁed at the leaves. Consider an internal node u. By the
induction hypothesis, sequences for each child subtree of u are atomic saturable
designs. Furthermore, by the choice of bases at children nodes of u, all assumptions
of Claim 4.3 are satisﬁed, hence, the sequence for node u is also an atomic saturable
design. The claim holds. Finally, we can apply Claim 4.2 at the root, which yields
(cid:117)(cid:116)
that w is a design.

Corollary 5 (Result R2) A structure S is Σ1,0-designable if and only if it does
not contain any base pairs, or it is saturated and D(S) ≤ 2.

Proof If S contains a base pair and an unpaired position, then it can be easily
checked that S is not Σ1,0-designable. Hence, any Σ1,0-designable structure is
either empty, and trivially designable using a single letter, or saturated. In the
latter case, by Theorem 4, we know that designable structures are exactly those
that are saturated, and such that D(S) ≤ 2. The claim follows.
(cid:117)(cid:116)

Corollary 6 (Result R3) A structure S is Σ1,1-designable if and only if

D(S) ≤ 2.

Proof First, suppose S is Σ1,1-designable and let w be a design for S. Then
Paired(w, S) is a design for the paired restriction Paired(S) of S. Since Paired(S)
is saturated, Paired(w, S) is over alphabet Σ1,0 ⊂ Σ1,1, and by Theorem 4,
D(Paired(S)) ≤ 2. Hence, D(S) = D(Paired(S)) ≤ 2.
Conversely, suppose that D(S) ≤ 2. Construct a design for S as follows. Since
Paired(S) is saturated, by Theorem 4, there is a design ¯w for Paired(S) over Σ1,0 ⊂
Σ1,1. Construct w from ¯w by inserting the base without a complementary base
at every unpaired position of S. Let S(cid:48) be an MFE structure for w. Obviously,
all unpaired positions in S are also unpaired in S(cid:48). We must have Paired(S(cid:48)) =
Paired(S), otherwise we have an alternative structure for ¯w, a contradiction. Hence,
(cid:117)(cid:116)
S(cid:48) = S, i.e., w is a design for S.

Result R4 follows readily from Theorem 4 by taking c = 2.

Lemma 7 (Result R5) Any structure that contains m5 or m3 ◦ is not Σ2,0-
designable.

Combinatorial RNA Design

13

Proof Assume that S is Σ2,0-designable and let w be a design for S. Then Paired(w, S)
is a design for Paired(S). Since Paired(S) is saturated, by Theorem 4, D(S) =
D(Paired(S)) ≤ 4, hence, S cannot contain motif m5. Now, assume to the con-
trary that S contain motif m3 ◦ appearing at node [a, b] of TS. Let {[li, ri]}3
i=1 be
some paired children of [a, b] and the node [a, b] if [a, b] is not the root, and [u, u]
an unpaired child of [a, b]. Let Li = li and Ri = ri if [li, ri] is a child of [a, b], and
Li = ri and Ri = li if it is [a, b]. If among bases wL1 , . . . , wL3 there is a pair of
repeated letters, then we can construct an alternative MFE structure for w (see
the ﬁrst paragraph in the proof of Theorem 4). Assume that these three bases are
diﬀerent. Then for some i = 1, 2, 3, wu equals either wli or wri , say it equals wli .
Then S \ {(li, ri)} ∪ {(u, ri)} is an MFE structure for S, a contradiction with the
(cid:117)(cid:116)
assumption that w is a design for S.

Theorem 8 (Result R6) If the tree representation of a structure S admits a
separated coloring then S is Σ2,0-designable.
Proof Given a sequence w, we deﬁne the level L(i) of position i as L(i) = |w[1,i]|G−
|w[1,i]|C.

Claim 8.1 Consider any structure S compatible with sequence w that contains
some A − U base pair between positions at diﬀerent levels, then there exists a
position G or C that is left unpaired in S.
Proof Assume that the A− U base pair occurs at position (a, b), and note that the
bases of the substring w[a+1,b−1] can only base pair among themselves without
introducing crossings. We will show that G’s and C’s are not balanced in this
substring. Since wb ∈ {A, U}, L(b) = L(b − 1). Hence, by the deﬁnition of L, we
have that

|w[a+1,b−1]|G − |w[a+1,b−1]|C = L(b − 1) − L(a) = L(b) − L(a) (cid:54)= 0 .

Therefore, at least one G or C in the substring remains unpaired in this structure.(cid:117)(cid:116)

Consider a separated coloring of the tree representation of S. We will use this
coloring to construct a design w for S, by specifying a nucleotide at each position
of w. First, for each unpaired position i, set wi = A. Second, apply a modiﬁed
version of the algorithm described in the proof of the Theorem 4 to set the bases
of paired positions in which black nodes are assigned to base pair G − C, white
nodes to C− G and grey nodes to A− U or U− A. The algorithm ignores unpaired
nodes in the tree representation of S. Since the coloring is proper such assignment
is always possible at every step of the algorithm. We claim that for any node [i, j]
(paired or unpaired), the level of position i is the same as the level of the node
[i, j]. To verify this, observe that the substring of w corresponding to any subtree
has the same number of G’s and C’s. Hence, for any node [i, j], the level of position
i depends only on nodes on the path from this node to the root. It is easy to check
that the level of i is equal to the level of the node. Note that if [i, j] is a grey node
then the level of position j is the same as the level of i, i.e., the same as the level
of [i, j].

We will show that the constructed w is a design for S. Since all C’s and U’s of
w are paired in S, S is an MFE structure for w. We need to show that it is the

14

Jozef Haleˇs et al.

A

G

U

C

Fig. 6 The compatibility graphs of the Watson-Crick (blue edges) and the Nussinov-Jacobson
(blue and red edges) are bipartite.

only MFE structure for w. Consider an MFE structure S(cid:48) for w diﬀerent from S.
Since w has the same number of G’s and C’s, S(cid:48) must pair all G’s, C’s and U’s of
w. We will show that all unpaired positions in S are also unpaired in S(cid:48). Assume
to the contrary that position i is unpaired in S, but it is paired to j in S(cid:48). We
must have wi = A and wj = U. Since the coloring is separated, the unpaired node
[i, i] has a diﬀerent level than the grey node containing j, and hence, the level
of i is diﬀerent from the level of j. It follows by Claim 8.1 that some G or C is
unpaired in S(cid:48), a contradiction. Consider the paired restrictions of S, S(cid:48) and w.
Both Paired(S) and Paired(S(cid:48)) are saturated and compatible with Paired(w, S) and
they are diﬀerent since S and S(cid:48) are diﬀerent and agree on the unpaired positions.
Furthermore, Paired(w, S) can be produced by the algorithm described in the
proof of Theorem 4 for the input structure Paired(S), and hence, by Theorem 4,
Paired(w, S) is a design for Paired(S), which contradicts the existence of Paired(S(cid:48)).
(cid:117)(cid:116)
Hence, w is a design for S.

Next, we show the closure of the set of designable structures under the k-
stutter operation. To that purpose, we introduce the compatibility graph of
an energy model M, whose vertices are the four nucleotides {A, C, G, U}, and
whose edges correspond to valid base-pairs in M, i.e. having ﬁnitely-valued
contributions.
Deﬁnition 4 (Bipartite energy model) An energy model M is bipartite
if and only if its compatibility graph is bipartite.

The Watson-Crick energy model W and the Nussinov-Jacobson energy

model N are bipartite, as can be seen in Figure 6.
Theorem 9 (Result R7) For any bipartite energy model M and any energy
distance ∆, if w is a ∆-design for a structure S, then for any integer k ≥ 1,
w[k] is also a ∆-design for S[k].
Proof Consider a designable structure S and let w = w1 ··· wn be a design
for S. We will show that w[k] is a design for S[k]. Let the i th block in S[k]
(resp. w[k]) denote the subset [1 + i· k, 1 + (i + 1)· k) of its positions. Note that
the positions involved in the i th block of S[k] correspond to the i th position
in S (resp. w).
Consider a valid structure S(cid:48) (cid:54)= S[k] for w[k]. Deﬁne an interaction multi-
graph I(S(cid:48)) = (VI(S(cid:48)), EI(S(cid:48))) of S(cid:48) as follows: the vertex set VI(S(cid:48)) is the set
of positions {1, . . . , n} in w, and there are as many edges between i and j in
I(S(cid:48)) as there are base-pairs in S(cid:48) between the i th and j th blocks. Clearly,
I(S(cid:48)) is a multigraph of maximal degree k. Moreover edges in I(S(cid:48)) corre-
spond to valid base-pairs in w. Therefore the sequence of nucleotides read

Combinatorial RNA Design

15

along any path in I(S(cid:48)) must constitute a valid path in the compatibility
graph. Since the energy model is bipartite, then such a path cannot have odd
length, and so I(S(cid:48)) is also bipartite.
Since I(S(cid:48)) is a bipartite multigraph of maximal degree k, then by K¨onig’s
theorem [12] it is k edge-colorable (see [23, page 52] for an English version of
the proof). In other words, we can color the base-pairs of S(cid:48), using less than
k colors, such that each block in S(cid:48) is involved in at most one base-pair of
each color. Therefore we can partition the base-pairs of S(cid:48) into k structures
S(cid:48)
1, S(cid:48)
i are
pairwise non-crossing since S(cid:48) itself is non-crossing.
The sequence w is a design for S, thus one has

k that are compatible with w. Note that the base-pairs of S(cid:48)

2,··· , S(cid:48)

EW (w, S

(cid:48)
i) ≥ EW (w, S), for every 1 ≤ i < k.

Moreover, one has S(cid:48) (cid:54)= S[k] so there exists a structure S(cid:48)
j) ≥ EW (w, S) + ∆. It follows that
and therefore EW (w, S(cid:48)

j such that S(cid:48)

j (cid:54)= S,

k−1(cid:88)

EW (w[k], S

(cid:48)

) =

EW (w, S

(cid:48)
i) ≥ k · EW (w, S) + ∆ = EW (w[k], S[k]) + ∆.

i=0

We conclude that S[k] is the sole MFE structure for w[k], and has energy

at least ∆ less than its foremost competitor, so w[k] is a ∆-design for S[k].(cid:117)(cid:116)

Result R7 immediately follows from Theorem 9, by reminding the bipar-

tite nature of the Watson-Crick energy model.

Theorem 10 (Result R8) Each structure S without m5 and m3 ◦ can be trans-
formed into a Σ2,0-designable structure S(cid:48) by inﬂating a subset of its base pairs (at
most one per band). Furthermore, this transformation can be done in Θ(n) time.

Proof We start with the greedy coloring of TS. Since S does not contain m5 and
m3 ◦, it is a proper coloring and there is no node having both a grey child and an
unpaired child. We will insert base pairs within S so that the grey nodes and any
unpaired node end up at levels of diﬀerent parities. If the root has a grey child,
assign even parity to the grey nodes, otherwise (if the root has an unpaired child,
or no grey and no unpaired children), assign even parity to the unpaired nodes.

Now we proceed from the children of the root towards leaves adjusting parity
level for grey and unpaired nodes to keep one type even and the other one odd.
We repeatedly apply the following simple operation on TS: If the node N does
not match its intended parity level. Denote NP the parent of N (NP is not the
root as all children of the root already have the correct parity level) and NP P the
parent of NP . Insert a new paired node NN between NP P and NP , assign it with
the color of NP , and apply the greedy algorithm on NN . Observe that NP always
takes either black or white color changing the parity level of all its descendants
(including N ). Note that the children of NP may get recolored, we can even get
one more grey child but after this operation the parity levels of all children of N
are correct and we do not change parity levels outside the subtree rooted at N .
After ﬁxing all nodes, we get a separated proper coloring (which is actually the

16

Jozef Haleˇs et al.

greedy coloring) of TS(cid:48) . Hence, by Theorem 8, S(cid:48) is designable. Figure 4 illustrates
(cid:117)(cid:116)
this process.

4.2 Nussinov-Jacobson energy model N
We will show that, for a value of ∆ ∈ (0, min(|α|,|β|)] our results for the Watson-
Crick model transpose to the more general Nussinov-Jacobson model.

First, we will establish that R1, R2, R3 and R7 hold in the N model.
R1 concerns an alphabet that does not allow base pairs to occur, so their
weighting is unconsequential. R2 is equally trivial since the uniform weighting of
every occurrence of a base pair type does not aﬀect the relative order of structures.
R3 requires a clariﬁcation, as the introduction of two partners A and G for
U somehow assign an unambiguous semantics to Σ1,1 notation, leading to a dis-
junctive discussion. Let us assume that Σ1,1 represents {A, C, G} (resp. {A, C, U}),
then the argument used for R2 holds, since A (resp. C) cannot form base pairs.

R7 is a direct corollary of Theorem 9 which is applicable for any bipartite
energy model. Since the Nussinov-Jacobson model is bipartite, as shown in
Figure 6, then R7 also holds in the N model.

Deﬁnition 5 Let X ⊆ {C, G, A, U}. A design w for a structure S is X-unpaired if
and only if the bases of w found at unpaired positions in S belong to X. If X = {b}
is a singleton, the notation is shortened to b-unpaired.

Let nGC(w, S) (resp. nAU(w, S), nGU(w, S)) be the number of G−C (resp. A−U,

G − U) base pairs of S on w. Note that

EW (w, S) = −nGC(w, S) − nAU(w, S)

and

EN (w, S) = α.nGC(w, S) + β.nAU(w, S) + γ.nGU(w, S).

Proposition 11 Let ∆W = 1 and 0 < ∆N ≤ min(|α|,|β|),
if a structure is A-
unpaired and (W, Σ2,0, ∆W )-designable then it is also (N , Σ2,0, ∆N )-designable.
Proof Let w be an A-unpaired (W, Σ2,0, ∆W )-design for S. Since in W there are
no G − U base pairs, we have

nGC(w, S) = |w|G = |w|C ,

nAU(w, S) = |w|U ,

and for any other structure S(cid:48) ∈ S|w|,
) ≤ nGC(w, S)

nGC(w, S

(cid:48)

nAU(w, S

(cid:48)

) ≤ nAU(w, S) ,

We will show that w is also a (N , Σ2,0, ∆N )-design for S. Consider any alter-

with at least one of the inequalities being strict.
native structure S(cid:48) ∈ S|w|. If nGU(w, S(cid:48)) = 0, then

EN (w, S

(cid:48)

(cid:48)

(cid:48)

) = α nGC(w, S
≥ αnGC(w, S) + β nAU(w, S) + min{|α|,|β|} ≥ EN (w, S) + ∆N ,

) + β nAU(w, S

)

Combinatorial RNA Design

17

as required. Otherwise (nGU(w, S(cid:48)) > 0), ﬁrst observe that

(cid:48)

nGC(w, S

) + nGU(w, S

(cid:48)

) ≤ |w|G

and nAU(w, S

(cid:48)

) + nGU(w, S

(cid:48)

) ≤ |w|U .

(2)

Now, we have
(cid:48)

EN (w, S

(cid:48)

(cid:48)

(cid:48)

(2)

) + γ nGU(w, S

)
) + β |w|U − β nGU(w, S

) + β nAU(w, S

α|w|G − α nGU(w, S

) = α nGC(w, S
≥
= α|w|G + β |w|U + (γ − α − β)nGU(w, S
≥ EN (w, S) + γ − α − β.

(cid:48)

(cid:48)

)

(cid:48)

) + γ nGU(w, S

(cid:48)

)

Moreover, since α, β, γ < 0 and α, β < γ, then

γ − α − β ≥ max(|α|,|β|) ≥ min(|α|,|β|) ≥ ∆N .

We conclude that

as required.

EN (w, S

(cid:48)

) ≥ EN (w, S) + ∆N

(cid:117)(cid:116)

Corollary 12 Results R4, R5, R6 and R8 hold in any Nussinov-Jacobson en-
ergy model N with 0 < ∆N ≤ min(|α|,|β|).
Proof The validity of Results R6 and R8 in N follows directly from a close inspec-
tion of the constructive proofs in the Watson-Crick energy model, both establishing
the existence of A-unpaired designs. Proposition 11 therefore applies, and extends
the validity of those designs to for any suitable ∆N .

R5 follows from the fact that, in the proof of Theorem 7, our counterexamples
’locally’ trade one base pair in S for another in the alternative structure, and that
the two base pairs are of the same type. Therefore, both structures have the same
energy in the Nussinov-Jacobson energy model.
From this, we conclude on the validity of R4. Indeed, any failure to the degree
condition D(S) ≤ 4 implies the existence of m5 in S, i.e. such structures are
undesignable and the degree condition is therefore necessary.
(cid:117)(cid:116)

5 Conclusion, discussion and perspectives

In this work, we introduced the Combinatorial RNA Design problem, a minimal
instance of the RNA design problem which aims at ﬁnding a sequence that admits
the target structure as its unique base pair maximizing structure using A − U and
G − C base pairs. First, we provided complete characterizations for the structures
that can be designed using restricted alphabets. Then we considered the RNA
design under a four-letter alphabet, and provide a complete characterization of
designable saturated structures, i.e., free of unpaired positions. Turning to those

18

Jozef Haleˇs et al.

target structures that contain unpaired positions, we provided partial character-
izations for classes of designable/undesignable structures, and showed that the
set of designable structures is closed under the stutter operation. Finally, we in-
troduced structure-approximating version of the problem and, assuming that the
input structure avoids two motifs, provided a structure approximating algorithm
of ratio 2 for general structures. We showed that our results also hold in the more
realistic Nussinov-Jacobson energy model, which allows G− U base pairs to occur,
and associates arbitrary negative free-energy to each base pair type (G − U being
the weakest).

An important question that is left open by this work is the computational
complexity of the RNA design problem. Schnall-Levin et al. [19] established the
NP-hardness of a more general problem, called the inverse Viterbi algorithm, which
takes as input a stochastic grammar (representing the energy model) and a tar-
geted parse tree (representing the structure), and outputs a sequence (design)
whose most probable parsing should match the target. However this result does
not settle the complexity of the RNA design, essentially because the proposed
reduction relies critically on an encoding of 3-SAT instances within the input
grammar. While the hypothetical perfect grammar/energy model for RNA folding
probably diﬀers from the currently accepted Turner model, it should ultimately
reﬂect the laws of physics and should certainly not depend on the instance. As
the reduction [19] requires a diﬀerent grammar (i.e., energy model) for each in-
stance, it does not seem easily adaptable into a proof that holds for a ﬁxed energy
model. Consequently, despite two decades of work on the subject, the computa-
tional tractability of RNA design is still open, either in its general instance and in
our purely combinatorial version.

In our opinion, this exceptional resistance of the RNA design problem to any
attempt so far at characterizing its computational complexity can be attributed
to two main reasons:

– The inverse nature of the problem: While polynomial, the direct computation
MFE folding for an RNA requires dynamic programming, and runs in Θ(n3)
time (up to polylogarithmic factors, see [26] for a complete state-of-the-art).
Unfortunately, the optimal-substructure property of the direct problem does
not transpose to the inverse problem.
Therefore, solving the RNA design problem somehow requires inverting a non-
trivial – yet polynomially computable – function. It is tempting here to draw
a parallel with some areas of cryptography, where multiple protocols are based
on a – sometimes diﬃcult to establish – disymmetry between the complexities
of the direct and inverse computation.

– The intricacies of the objective function: Current state-of-the-art implemen-
tations of MFE folding prediction algorithms rely on a sophisticated energy
model, the Turner model [22]. This model associates energy contributions to
as much as 24 000 diﬀerent types of structure/sequence motifs, and vastly com-
plexiﬁes the characterization of the space, and energies, of competing struc-
tures.
On the other hand, oversimpliﬁed statements for the problem, as would result
from a relaxation of the uniqueness condition, can be trivially solved in linear
time. Such problems are not only largely unrealistic from a biological perspec-

Combinatorial RNA Design

19

tive, but they also probably do not retain the potential diﬃculty of the general
problem.

Besides complexity issues, natural extensions of this work may include the con-
sideration of more sophisticated energy models such as those based on stacking
pairs or, ultimately, to the full Turner energy model [22]). One could also con-
sider incorporating additional constraints, expressed as the presence/avoidance of
motifs [27], GC-content [17]. . . or the design under other objectives, such as the
Boltzmann probability [25]. In the Nussinov-Jacobson model, our result could be
completed by the consideration of more liberal values for ∆, although it should be
noted that considering larger such values would only gradually deplete the sets of
designable structures until it becomes empty when the conditions of Theorem 1 are
met. More precise bounds for the ratio of the structure-approximating could also
be established. Finally, the structure-approximation problem could be revisited in
an optimization setting, in which one would attempt to minimize the number of
modiﬁcations made to the structure, so that a given structure becomes designable
(or, more modestly, belongs to an identiﬁed class of designable structures). We
plan to address some of these questions in future works.

References

1. Aguirre-Hern´andez, R., Hoos, H.H., Condon, A.: Computational RNA secondary structure
design: empirical complexity and improved methods. BMC Bioinformatics 8, 34 (2007).
DOI 10.1186/1471-2105-8-34

2. Avihoo, A., Churkin, A., Barash, D.: RNAexinv: An extended inverse RNA folding from
shape and physical attributes to sequences. BMC Bioinformatics 12(1), 319 (2011). DOI
10.1186/1471-2105-12-319

3. Bau, A., Waldmann, J., Will, S.: RNA design by program inversion via SAT solving. In:
A.D. Palu, A. Dovier (eds.) Proceedings of Workshop on Constraint Based Methods for
Bioinformatics (WCB 2013), pp. 85–94 (2013)

4. Busch, A., Backofen, R.: INFO-RNA—a fast approach to inverse RNA folding. Bioinfor-

matics 22(15), 1823–31 (2006). DOI 10.1093/bioinformatics/btl194

5. Dai, D.C., Tsang, H.H., Wiese, K.C.: RNADesign: Local search for RNA secondary struc-
ture design. In: IEEE Symposium on Computational Intelligence in Bioinformatics and
Computational Biology (CIBCB) (2009)

6. Esmaili-Taheri, A., Ganjtabesh, M., Mohammad-Noori, M.: Evolutionary solution for
the RNA design problem. Bioinformatics 30(9), 1250–1258 (2014). DOI 10.1093/
bioinformatics/btu001. URL http://dx.doi.org/10.1093/bioinformatics/btu001

7. Frid, Y., Gusﬁeld, D.: A simple, practical and complete o(n3/ log n)-time algorithm for
RNA folding using the Four-Russians speedup. Algorithms Mol Biol 5, 13 (2010). DOI
10.1186/1748-7188-5-13. URL http://dx.doi.org/10.1186/1748-7188-5-13

8. Garcia-Martin, J.A., Clote, P., Dotu, I.: RNAiFOLD: a constraint programming algo-
rithm for RNA inverse folding and molecular design. J Bioinform Comput Biol 11(2),
1350,001 (2013). DOI 10.1142/S0219720013500017. URL http://dx.doi.org/10.1142/
S0219720013500017

9. Griﬃths-Jones, S., Bateman, A., Marshall, M., Khanna, A., Eddy, S.R.: RFAM: an RNA

family database. Nucleic Acids Res 31(1), 439–441 (2003)

10. Hofacker, I.L., Fontana, W., Stadler, P., Bonhoeﬀer, L., Tacker, M., Schuster, P.: Fast
folding and comparison of RNA secondary structures. Monatshefte f¨ur Chemie / Chemical
Monthly 125(2), 167–188 (1994). DOI 10.1007/BF00818163

11. H¨oner Zu Siederdissen, C., Hammer, S., Abfalter, I., Hofacker, I.L., Flamm, C., Stadler,
P.F.: Computational design of RNAs with complex energy landscapes. Biopolymers
99(12), 1124–1136 (2013). DOI 10.1002/bip.22337. URL http://dx.doi.org/10.1002/
bip.22337

12. K˝onig, D.: Gr´afok ´es alkalmaz´asuk a determin´ansok ´es a halmazok elm´elet´ere. Matematikai

´es Term´eszettudom´anyi ´Ertes´ıt˝o 34, 104–119 (1916)

20

Jozef Haleˇs et al.

13. Levin, A., Lis, M., Ponty, Y., O’Donnell, C.W., Devadas, S., Berger, B., Waldisp¨uhl, J.: A
global sampling approach to designing and reengineering RNA secondary structures. Nuc
Acids Res 40(20), 10,041–52 (2012). DOI 10.1093/nar/gks768

14. Lyngsø, R.B., Anderson, J.W., Sizikova, E., Badugu, A., Hyland, T., Hein, J.: FRNAken-
stein: multiple target inverse RNA folding. BMC Bioinformatics 13, 260 (2012). DOI
10.1186/1471-2105-13-260

15. Mathews, D.H., Sabina, J., Zuker, M., Turner, D.H.: Expanded sequence dependence of
thermodynamic parameters improves prediction of RNA secondary structure. J Mol Biol
288(5), 911–940 (1999)

16. Nussinov, R., Jacobson, A.: Fast algorithm for predicting the secondary structure of single-

stranded RNA. Proc Natl Acad Sci U S A 77, 6903–13 (1980)

17. Reinharz, V., Ponty, Y., Waldisp¨uhl, J.: A weighted sampling algorithm for the de-
sign of RNA sequences with targeted secondary structure and nucleotide distribution.
Bioinformatics 29(13),
i308–i315 (2013). DOI 10.1093/bioinformatics/btt217. URL
http://dx.doi.org/10.1093/bioinformatics/btt217

18. Rodrigo, G., Landrain, T.E., Majer, E., Dar`os, J.A., Jaramillo, A.: Full design automation
of multi-state RNA devices to program gene expression using energy-based optimization.
PLoS Comput Biol 9(8), e1003,172 (2013). DOI 10.1371/journal.pcbi.1003172. URL
http://dx.doi.org/10.1371%2Fjournal.pcbi.1003172

19. Schnall-Levin, M., Chindelevitch, L., Berger, B.: Inverting the Viterbi algorithm: an ab-
stract framework for structure design. In: Machine Learning, Proceedings of the Twenty-
Fifth International Conference (ICML 2008), Helsinki, Finland, June 5-9, 2008, pp. 904–
911 (2008). DOI 10.1145/1390156.1390270. URL http://doi.acm.org/10.1145/1390156.
1390270

20. Takahashi, M.K., Lucks, J.B.: A modular strategy for engineering orthogonal chimeric
RNA transcription regulators. Nucleic Acids Res 41(15), 7577–7588 (2013). DOI 10.
1093/nar/gkt452. URL http://nar.oxfordjournals.org/content/41/15/7577.abstract
21. Taneda, A.: MODENA: a multi-objective RNA inverse folding. Adv Appl Bioinform Chem

4, 1–12 (2011)

22. Turner, D.H., Mathews, D.H.: NNDB: the nearest neighbor parameter database for pre-
dicting stability of nucleic acid secondary structure. Nucleic Acids Res 38(Database is-
sue), D280–D282 (2010). DOI 10.1093/nar/gkp892. URL http://dx.doi.org/10.1093/
nar/gkp892

23. Wilson, R.A.: Graphs, Colourings and the Four-colour Theorem. Oxford University Press

(2002)

24. Wu, S.Y., Lopez-Berestein, G., Calin, G.A., Sood, A.K.: RNAi therapies: Drugging
Science Translational Medicine 6(240), 240ps7 (2014). DOI 10.
the undruggable.
1126/scitranslmed.3008362. URL http://stm.sciencemag.org/content/6/240/240ps7.
abstract

25. Zadeh, J.N., Wolfe, B.R., Pierce, N.A.: Nucleic acid sequence design via eﬃcient ensemble

defect optimization. J Comput Chem 32(3), 439–52 (2011). DOI 10.1002/jcc.21633

26. Zakov, S., Tsur, D., Ziv-Ukelson, M.: Reducing the worst case running times of a family
of RNA and cfg problems, using valiant’s approach. Algorithms Mol Biol 6(1), 20 (2011).
DOI 10.1186/1748-7188-6-20. URL http://dx.doi.org/10.1186/1748-7188-6-20

27. Zhou, Y., Ponty, Y., Vialette, S., Waldispuhl, J., Zhang, Y., Denise, A.: Flexible RNA
design under structure and sequence constraints using formal languages. In: Proceedings
of the International Conference on Bioinformatics, Computational Biology and Biomedical
Informatics (ACM-BCB), BCB’13, pp. 229–238. ACM (2013). DOI 10.1145/2506583.
2506623. URL http://doi.acm.org/10.1145/2506583.2506623

28. Zuker, M., Stiegler, P.: Optimal computer folding of large RNA sequences using thermo-

dynamics and auxiliary information. Nucleic Acids Res 9, 133–148 (1981)

