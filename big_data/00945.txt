6
1
0
2

 
r
a

M
3

 

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
5
4
9
0
0

.

3
0
6
1
:
v
i
X
r
a

Optimal Barycentric Gegenbauer Quadrature

Kareem T. Elgindy∗

Mathematics Department, Faculty of Science, Assiut University, Assiut 71516, Egypt

SUMMARY

The work reported in this article presents a high-order, stable, and efﬁcient Gegenbauer pseudospectral method to solve
numerically a wide variety of mathematical models. The proposed numerical scheme exploits the stability and the well-
conditioning of the numerical integration operators to produce well-conditioned systems of algebraic equations, which can
be solved easily using standard algebraic system solvers. The core of the work lies in the derivation of novel and stable
optimal Gegenbauer quadratures based on the stable barycentric representation of Lagrange interpolating polynomials and the
explicit barycentric weights for the Gegenbauer-Gauss (GG) points. A rigorous error and convergence analysis of the proposed
quadratures is presented along with a detailed set of pseudocodes for the established computational algorithms. The proposed
numerical scheme leads to a reduction in the computational cost and time complexity required for computing the numerical
quadrature while sharing the same exponential order of accuracy achieved by [Elgindy and Smith-Miles (2013b)]. The bulk of
the work includes three numerical test examples to assess the efﬁciency and accuracy of the numerical scheme. The present
method provides a strong addition to the arsenal of numerical pseudospectral methods, and can be extended to solve a wide
range of problems arising in numerous applications.

KEY WORDS: Barycentric interpolation; Gegenbauer polynomials; Gegenbauer quadrature;

Pseudospectral method.

Integration Matrix;

1. INTRODUCTION

integral

reformulations; cf.

few decades have seen a conspicuous attention towards

The past
the solution of differential prob-
[Elgindy (2009), Elgindy and Smith-Miles (2013),
lems by working on their
Franc¸olin et al. (2014), Elgindy and Smith-Miles (2013a), Tang (2015), Coutsias et al. (1996), Greengard (1991),
Viswanath (2015), Driscoll (2010), Olver and Townsend (2013), El-Gendi (1969)]. Perhaps one of the reasons that
laid the foundation of this methodology appears in the well stability and boundedness of numerical integral
operators in general whereas numerical differential operators are inherently ill-conditioned; cf. [Funaro (1987),
Greengard (1991), Elgindy (2013)]. The numerical integral operator used in the popular pseudospectral methods is
widely known as the spectral integration matrix (also called the operational matrix of integration), which dates back
to [El-Gendi (1969)] in the year 1969. In fact, the introduction of the numerical integration matrix has provided the
key to apply the rich and powerful matrix linear algebra in many areas [Elgindy (2013)].

In 2013, [Elgindy and Smith-Miles (2013b)] presented some novel numerical quadratures based on the concept
of numerical integration matrices. Their uniﬁed approach employed the Gegenbauer basis polynomials to achieve
rapid convergence rates for small/medium range of spectral expansion terms while using Chebyshev and Legendre
bases polynomials for a large-scale number of expansion terms. The established quadratures were presented
in basis form, and were parameter optimized in the sense of minimizing the Gegenbauer parameter associated
with the quadrature truncation error. This key idea allowed for interpolating the integrand function at some
Gegenbauer-Gauss (GG) sets of points called the adjoint GG points instead of using the same integration
points for constructing the numerical quadrature. This approach provides in turn the luxury of evaluating
quadratures for any arbitrary integration points for any desired degree of accuracy; thus increasing the accuracy

∗Correspondence to: Mathematics Department, Faculty of Science, Assiut University, Assiut 71516, Egypt

This is a preprint copy that has been submitted for publication.

2

KAREEM T. ELGINDY

of collocation schemes using relatively small number of collocation points; cf. [Elgindy and Smith-Miles (2013b),
Elgindy and Smith-Miles (2013), Elgindy and Smith-Miles (2013a), Elgindy (2016)].

In the current article we extend the works of [Elgindy and Smith-Miles (2013b), Elgindy and Smith-Miles (2013)],
and develop some novel and efﬁcient Gegenbauer integration matrices (GIMs) and quadratures based on
the stable barycentric representation of Lagrange interpolating polynomials and the explicit barycentric
weights for the GG points. The present numerical scheme represents an improvement over the works of
[Elgindy and Smith-Miles (2013b)] as we reduce the computational cost and time complexity required for computing
the numerical quadratures while sharing the same order of accuracy.

The rest of the article is organized as follows: In Section 2, we give some basic preliminaries relevant to Gegenbauer
polynomials and their orthogonal basis and linear barycentric rational interpolations. In Section 3, we derive the
barycentric GIM and quadrature, and provide a rigorous error and convergence analysis. In Section 4, we construct
the optimal barycentric GIM in some optimality measure, and analyze its associated quadrature error in Section 4.1.
Section 5 is devoted for a comprehensive discussion on some efﬁcient computational algorithms required for the
construction of the novel GIMs and quadratures. A discussion on how to resolve boundary-value problems using
the barycentric GIM is presented in Section 5.1. Three numerical test examples are studied in Section 6 to assess
the efﬁciency and accuracy of the numerical scheme. We provide some concluding remarks in Section 7. Finally, a
detailed set of pseudocodes for the established computational algorithms is presented in Appendix A.

2. PRELIMINARIES

In this section, we brieﬂy recall some preliminary properties of the Gegenbauer polynomials and their orthogonal
interpolations. The Gegenbauer polynomial G(α)
n (x), of degree n ∈ Z+, and associated with the parameter α > −1/2,
is a real-valued function, which appears as an eigensolution to a singular Sturm-Liouville problem in the ﬁnite
domain [−1, 1] [Szeg¨o (1975)]. It is a symmetric Jacobi polynomial, P (ν1,ν2)
(x), with ν1 = ν2 = α − 1/2, and
can be standardized through [Elgindy and Smith-Miles (2013a), Eq. (A.1)]. It is an odd function for odd n and an
even function for even n. The Gegenbauer polynomials can be generated by the three-term recurrence equations
[Elgindy and Smith-Miles (2013b), Eq. (A.4)], or in terms of the hypergeometric functions [Elgindy (2016), Eq.
(2.3)]. The weight function for the Gegenbauer polynomials is the even function w(α)(x) = (1 − x2)α−1/2. The
w(α)[−1, 1], and their orthogonality
Gegenbauer polynomials form a complete orthogonal basis polynomials in L2
relation is given by the following weighted inner product:

n

(cid:16)G(α)

m , G(α)

n (cid:17)w(α)

where

−1

G(α)

m (x) G(α)

=Z 1
n (x) w(α)(x) dx =(cid:13)(cid:13)(cid:13)G(α)
n (cid:13)(cid:13)(cid:13)
n (cid:13)(cid:13)(cid:13)
n =(cid:13)(cid:13)(cid:13)G(α)

21−2α π Γ(n + 2α)
n! (n + α) Γ2(α)

λ(α)

=

2

w(α)

2

w(α)

,

δm,n = λ(α)

n δm,n,

(2.1)

(2.2)

is the normalization factor, and δm,n is the Kronecker delta function. We denote the GG nodes and their
corresponding Christoffel numbers by x(α)
n,k, k = 0, . . . , n, respectively. The reader may consult Refs.
[Abramowitz and Stegun (1965), Szeg¨o (1975), Bayin (2006), Elgindy and Smith-Miles (2013b), Elgindy (2013)]
for more information about this elegant family of polynomials.

n,k, ̟(α)

2.1. Orthogonal Gegenbauer Interpolation

The function

Pnf (x) =

n

Xj=0

˜fj G(α)

j

(x),

(2.3)

is the Gegenbauer interpolant of a real function f deﬁned on [−1, 1], if we compute the coefﬁcients ˜fj so that

(2.4)
for some nodes xk ∈ [−1, 1], k = 0, . . . , n. If we choose the interpolation points xk, k = 0, . . . , n, to be the GG nodes
x(α)
n,k, k = 0, . . . , n, then we can simply compute the discrete Gegenbauer transform using the discrete inner product

Pnf (xk) = f (xk),

k = 0, . . . , n,

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

3

created from the GG quadrature by the following formula:

j (cid:17)n
˜fj = (cid:16)Pnf, G(α)
(cid:13)(cid:13)(cid:13)G(α)
j (cid:13)(cid:13)(cid:13)
n,k = f(cid:16)x(α)
n,k(cid:17) ∀k. Substituting Equation (2.5) into (2.3) yields the Lagrange basis form of the Gegenbauer

where f (α)
interpolation (nodal approximation) of f at the GG nodes as follows:

j (cid:17)n
= (cid:16)f, G(α)
(cid:13)(cid:13)(cid:13)G(α)
j (cid:13)(cid:13)(cid:13)

j (cid:16)x(α)
n,k(cid:17),

j = 0, . . . , n,

n,k G(α)

Xk=0

1
λ(α)
j

̟(α)

n,k f (α)

(2.5)

w(α)

w(α)

=

n

2

2

Pnf (x) =

n

Xk=0

f (α)
n,k L(α)

n,k(x),

(2.6)

where L(α)

n,k(x), are the Lagrange interpolating polynomials deﬁned by

L(α)
n,k(x) = ̟(α)

n,k

n

j (cid:17)−1
Xj=0(cid:16)λ(α)

G(α)

j (cid:16)x(α)

n,k(cid:17) G(α)

j

(x),

k = 0, . . . , n.

(2.7)

It is noteworthy to mention that the cost of the discrete Gegenbauer transform (2.5) amounts to O(n2) operations in
general by direct evaluation, except for Chebyshev points, where the cost can be reduced to O(n log n) using the FFT.
Therefore, we need to perform O(n2) operations in general to compute the value of the modal interpolant (2.3) for
every new value x. Similarly, and despite the numerically stable form of the nodal interpolating polynomial (2.6), its
evaluation also requires O(n2) operations in general at each new value x; cf. [Kopriva (2009), Wang et al. (2014a)].
n+1,k(x), k =

n+1,k(cid:17) requires an entirely new computation of every L(α)

Moreover, adding a new data pair(cid:16)x(α)

n+1,k, f (α)

0, . . . , n + 1.

2.2. The Linear Barycentric Rational Lagrange Interpolation

A fast and efﬁcient variant of Lagrange interpolation is the linear barycentric rational Lagrange interpolation,
which gained much attention in recent years [Berrut and Trefethen (2004), Higham (2004), Berrut et al. (2005),
Wang et al. (2014b), Berrut and Klein (2014)]. The barycentric formula of the Lagrange interpolating polynomial
is deﬁned by

where

ξ(α)
n,j =

,

i = 0, . . . , n,

j = 0, . . . , n,

are the barycentric weights. The barycentric formula for Pnf is therefore deﬁned by

L(α)
B,n,i(x) =

ξ(α)
n,i
x − x(α)

n,i

n

/

n,j

Xj=0

ξ(α)
n,j
x − x(α)
n,i(cid:17) ,
n,j − x(α)

1

i=0

i6=j (cid:16)x(α)
Qn

PB,nf (x) =

n

Xi=0

n,i L(α)
f (α)

B,n,i(x).

(2.8)

(2.9)

(2.10)

The linear barycentric rational Lagrange interpolation enjoys several advantages, which makes it very efﬁcient in
practice: (i) The barycentric Lagrange interpolating polynomials of Eq. (2.8) are scale-invariant; thus avoid any
problems of underﬂow and overﬂow [Berrut and Trefethen (2004)]. (ii) They are forward stable for Gauss sets of
interpolating points with slowly growing Lebesgue constant [Higham (2004)]. (iii) Once the weights are computed,
the interpolant at any point x will take only O(n) ﬂoating point operations to compute; cf. [Kopriva (2009),
Gander (2005), Berrut and Trefethen (2004)]. [Berrut and Trefethen (2004)] have further considered the barycentric
Lagrange interpolation to be the ‘standard method of polynomial interpolation’.

Despite the pleasant features of the barycentric formula discussed above, the direct calculation of the barycentric
weights using Eq. (2.9) suffers from signiﬁcant numerical errors when the number of interpolating points is large,

4

KAREEM T. ELGINDY

n,j − x(α)

since the differences (cid:16)x(α)

n,i(cid:17) appearing in the denominator are subject to ﬂoating-point cancellation errors

for large n. Fortunately, the recent works of [Wang and Xiang (2012)] and [Wang et al. (2014a)] showed that the
barycentric weights for the Gauss points can be expressed explicitly in terms of the corresponding quadrature weights
for classical orthogonal polynomials. In particular, for the Gegenbauer polynomials considered in this work, we have
the following theorem, which mitigates the harm of cancellation error arising in Eq. (2.9).

Theorem 2.1 ([Wang et al. (2014a)])
The barycentric weights for the GG points are given by

ξ(α)

n,i = (−1)is(cid:18)1 −(cid:16)x(α)

n,i(cid:17)2(cid:19) ̟(α)

n,i ,

i = 0, . . . , n,

(2.11)

is the set of GG points and quadrature weights, respectively.

Based on a fast O(n) algorithm for the computation of Gaussian quadrature due to [Hale and Townsend (2013)],
Theorem 2.1 leads to an O(n) computational scheme for the barycentric weights. A MATLAB code for the GG points
and quadrature weights can be found in Chebfun “jacpts” function; cf. [Trefethen et al. (2011)].

wherenx(α)

n,i , ̟(α)

n,ion

i=0

3. THE BARYCENTRIC GIM AND QUADRATURE

through the GIM; cf.

In many problems and applications, one needs to convert the integral equations involved in the mathematical
models into algebraic equations. Such procedures also require some expressions for approximating the integral
operators involved in the integral equations. In a Gegenbauer collocation method, this operation is conveniently
[Elgindy and Smith-Miles (2013), Elgindy (2013), Elgindy et al. (2012),
carried out
Elgindy and Smith-Miles (2013a), Elgindy and Smith-Miles (2013b), Elgindy (2016)]. The GIM is simply a linear
map which takes a vector of n function values f (xi) to a vector of n integral valuesR xi
−1 f (x) dx, for a certain set of
integration nodes {xi}n
i=0. It represents an easy, stable, and efﬁcient numerical integration operator for approximating
the deﬁnite integrals of the function f (x) on the intervals [−1, xi], i = 0, . . . , n, which frequently arise in collocating
integral equations, integro-differential equation, ordinary and partial differential equations, optimal control problems,
etc.; cf. [Elgindy (2009), Elgindy and Smith-Miles (2013), Elgindy et al. (2012), Elgindy and Smith-Miles (2013b),
Elgindy and Smith-Miles (2013a), Elgindy (2016)]. One way to achieve such approximations was designed
by [Elgindy and Smith-Miles (2013b)] via integrating the orthogonal Gegenbauer interpolant (2.6), and the
sought deﬁnite integration approximations can be simply expressed in a matrix-vector multiplication; cf.
[Elgindy and Smith-Miles (2013b), Theorem 2.1]. [Elgindy and Smith-Miles (2013b)] have further introduced a
method for optimally constructing a rectangular GIM by minimizing the magnitude of the quadrature error in some
optimality sense; cf. [Elgindy and Smith-Miles (2013b), Theorem 2.2]. In the sequel, we present a novel numerical
scheme considered an improvement over the work of [Elgindy and Smith-Miles (2013b)] for constructing the GIM
and its associated quadrature through the stable barycentric representation of Lagrange interpolating polynomials and
the explicit barycentric weights for the GG points.

To construct the barycentric GIM and quadrature, we integrate the orthogonal barycentric Gegenbauer interpolant
(2.10) on [−1, x(α)

n,j ], for each j so that

j = 0, . . . , n.

(3.1)

(3.2)

Introducing the change of variable

x =

allows us to rewrite the deﬁnite integrals (3.1) further as

n,j

Z x(α)

−1

PB,nf (x) dx =

B,n,i(x) dx,

n

f (α)

Xi=0
2(cid:16)(cid:16)x(α)

1

n,j

−1 L(α)

n,i Z x(α)
n,j + 1(cid:17) t + x(α)
n,i Z 1

−1 L(α)

f (α)

n,j − 1(cid:17) ,

n,j

Z x(α)

−1

PB,nf (x) dx =

x(α)
n,j + 1
2

n

Xi=0

B,n,i(cid:16)t;−1, x(α)

n,j(cid:17) dt,

j = 0, . . . , n.

(3.3)

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

5

Since the barycentric Lagrange interpolating polynomials L(α)
equal to n, the integralsR 1
Gauss (LG) quadrature, where ⌈·⌉ denotes the ceiling function. In particular, let N = ⌈(n − 1)/2⌉ ,nx(0.5)
N,k oN
the zeros of the (N + 1)th-degree Legendre polynomial, LN +1(t), andn̟(0.5)
N,k oN

n,j(cid:17) are polynomials of degree less than or
n,j(cid:17) dt can be computed exactly using an ⌈(n + 1)/2⌉-point Legendre-

k=0
be the LG weights deﬁned by

B,n,i(cid:16)t;−1, x(α)

B,n,i(cid:16)t;−1, x(α)

−1 L(α)

be

k=0

,

k = 0, . . . , N,

(3.4)

̟(0.5)

N,k =

2

(cid:18)1 −(cid:16)x(0.5)

N,k (cid:17)2(cid:19)hL′

N +1(cid:16)x(0.5)
N,k (cid:17)i2

where L′

N +1 denotes the derivative of LN +1. Then,

Hence,

Z 1
−1 L(α)

B,n,i(cid:16)t;−1, x(α)
Z x(α)

−1

n,j

PB,nf (x) dx =

n,j(cid:17) dt =

N

Xk=0

̟(0.5)
N,k L(α)

B,n,i(cid:16)x(0.5)

n,j(cid:17).
N,k ;−1, x(α)

B,j,i f (α)
p(1)
n,i ,

j = 0, . . . , n,

n

Xi=0

(3.5)

(3.6)

(3.8)

where p(1)

B,j,i, i, j = 0, . . . , n, are the elements of the ﬁrst-order barycentric GIM given by

p(1)
B,j,i =

x(α)
n,j + 1
2

N

Xk=0

̟(0.5)
N,k L(α)

B,n,i(cid:16)x(0.5)

n,j(cid:17),
N,k ;−1, x(α)

i, j = 0, . . . , n.

(3.7)

Eqs. (3.6) provide the values of the barycentric Gegenbauer quadrature on the intervalsh−1, x(α)

can be further written in matrix notation as

n,ji , j = 0, . . . , n, and

I(α)
n = P

(1)
B

F,

n,0

I(α)

where

−1 PB,nf (x) dx(cid:19)T
n =(cid:18)R x(α)
B,j,i(cid:17), i, j = 0, . . . , n is the ﬁrst-order barycentric GIM. Clearly, P
B =(cid:16)p(1)

(1)
B is a square matrix of size
and P
(n + 1). Notice also that the barycentric Chebyshev and Legendre matrices can be directly recovered by setting
α = 0; 0.5, respectively.

−1 PB,nf (x) dx, . . . ,R x(α)

−1 PB,nf (x) dx,R x(α)

, F =(cid:16)f (α)

n,n(cid:17)T

n,1 , . . . , f (α)

n,0 , f (α)

(1)

n,1

n,n

,

Similar to the works of [Elgindy and Smith-Miles (2013b)] and [Elgindy (2016)], the qth-order barycentric GIM

can be directly generated from the ﬁrst-order barycentric GIM by the following formulae

p(q)

B,j,i = (cid:16)x(α)

n,i(cid:17)q−1

n,j − x(α)
(q − 1)!

p(1)
B,j,i,

i, j = 0, . . . , n,

(3.9)

or in matrix form,

1

PB

(q) =

where x(α)

(q − 1)!(cid:18)(cid:16)x(α)

n ⊗ J1,n+1(cid:17) −(cid:18)(cid:16)x(α)
n (cid:17)T
, for any A ∈ Rl×l, m, l ∈ Z+, Ji,j is the all ones
n,n, ]T ,A(m) = A ◦ A ◦ . . . ◦ A
}
matrix of size i × j, “⊗” and “◦” denote the Kronecker product and Hadamard product (entrywise product),
respectively; cf. [Elgindy (2016), Eq. (4.42)]. On the interval [0, 1], the R.H.S. of each of Eqs. (3.9) and (3.10) is
divided by 2q.

⊗ Jn+1,1(cid:19)(cid:19)(q−1) ◦ PB

n,1, . . . , x(α)

n = [x(α)

n,0, x(α)

{z

(3.10)

m−times

(1),

|

6

KAREEM T. ELGINDY

3.1. Error and Convergence Analysis

Since the barycentric formula of the Lagrange interpolating polynomial (2.8) is mathematically equivalent
the established barycentric GIM and
to the standard Lagrange interpolating polynomials deﬁned by (2.7),
quadrature share the same error and convergence properties of
the GIM and quadrature developed by
[Elgindy and Smith-Miles (2013b)]; therefore, the following theorem is straightforward.
Theorem 3.1
Let S(α)
approximated by the barycentric Gegenbauer expansion series (2.10). Then there exist some numbers ζ(α)
[−1, 1], j = 0, . . . , n such that
Z x(α)

n,j , j = 0, . . . , no , n ∈ Z+, be the set of GG points. Moreover,

let f (x) ∈ Cn+1[−1, 1] be
n,j ∈

n =nx(α)

n,j ∈ S(α)
n ,

n,i + E(α)

p(1)
B,j,if (α)

n,j , ζ(α)

f (x)dx =

(3.11)

n,j(cid:17) ∀x(α)

n (cid:16)x(α)

−1

n,j

n

Xi=0

where p(1)

B,j,i, i, j = 0, . . . , n are the elements of the ﬁrst-order barycentric GIM, P(1)

B , as deﬁned by Eqs. (3.7),

E(α)

n (cid:16)x(α)

n,j , ζ(α)

n,j(cid:17) =

n,j(cid:17)
f (n+1)(cid:16)ζ(α)
n+1 Z x(α)

(n + 1)!K (α)

−1

n,j

G(α)

n+1(x) dx,

(3.12)

is the Gegenbauer quadrature error term, and K (α)
G(α)

n (x) as deﬁned by [Elgindy and Smith-Miles (2013b), Eq. (A.8)].
The following theorem gives the error bounds of the barycentric Gegenbauer quadrature.

n is the leading coefﬁcient of the nth-degree Gegenbauer polynomial

Theorem 3.2 (Error bounds)

n,j

Assume that f (x) ∈ Cn+1[−1, 1], and (cid:13)(cid:13)f (n+1)(cid:13)(cid:13)L∞[−1,1] ≤ A ∈ R+, for some number n ∈ Z+
R x(α)

0 . Moreover, let
−1 f (x) dx, be approximated by the barycentric Gegenbauer quadrature (3.6) up to the (n + 1)th Gegenbauer
quadrature expansion term, for each node x(α)
and
D(α)
bounded by the following inequalities:

n,j , j = 0, . . . , n. Then there exist some positive constants D(α)
n,j , ζ(α)

, independent of n such that the truncation error of the barycentric Gegenbauer quadrature, E(α)

n (cid:16)x(α)

n,j(cid:17), is

2

1

n,j , ζ(α)

(cid:12)(cid:12)(cid:12)E(α)
n (cid:16)x(α)

n,j(cid:17)(cid:12)(cid:12)(cid:12) ≤

n,j , ζ(α)

(cid:12)(cid:12)(cid:12)E(α)
n (cid:16)x(α)

,

,

2

Γ (n + α + 1)



n,j(cid:17)(cid:12)(cid:12)(cid:12) <
(cid:12)(cid:12)(cid:12)E(α)
n (cid:16)x(α)

Γ (2α + 1) Γ (n + 2) Γ (n + α + 1)
2 + α
n+1

n,j + 1(cid:17) Γ (n + 2α + 1)
A2−nΓ (α + 1)(cid:16)x(α)
(cid:19)(cid:12)(cid:12)(cid:12)(cid:12)
n,j + 1(cid:17)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:18) n−1
A2−n−1Γ (α)(cid:16)x(α)
(cid:19)(cid:12)(cid:12)(cid:12)(cid:12)
n,j + 1(cid:17)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:18) n
A2−nΓ (α) |α|(cid:16)x(α)
p(n + 1) (2α + n + 1)Γ (n + α + 1)
n,j(cid:17)(cid:12)(cid:12)(cid:12) ≤∼ 
n,j + 1(cid:17) nα−n− 3
2(cid:17)n(cid:16)x(α)
1 (cid:16) e
n,j + 1(cid:17) n−n− 3
2(cid:17)n(cid:16)x(α)
2 (cid:16) e


1 = AD(α)

2 = B(α)

n,j , ζ(α)

1 D(α)

and B(α)

2 + α

B(α)

B(α)

n
2

.

1

2

,

for all j = 0, . . . , n, where B(α)

n ≥ 0 ∧ α ≥ 0,

n + 1
2 ∈ Z+ ∧ −

(3.13)

1
2

< α < 0,

(3.14)

n
2 ∈ Z+

0 ∧ −

1
2

< α < 0,

(3.15)

2 , α ≥ 0,
2 , −

1
2

< α < 0,

(3.17)

Moreover, as n → ∞, the truncation error of the barycentric Gegenbauer quadrature is asymptotically bounded by:
(3.16)

Proof
The proof follows readily from [Elgindy (2016), Theorem 4.3].

Clearly, the barycentric Gegenbauer quadrature converges exponentially exhibiting spectral accuracy, since the

error decays at a rate faster than any ﬁxed power in 1/n.

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

7

4. THE OPTIMAL BARYCENTRIC GIM AND QUADRATURE

optimal

construct

barycentric GIM and

To
approach
[Elgindy and Smith-Miles (2013b)], and seek to determine the optimal Gegenbauer parameter α∗
the magnitude of the quadrature error E(α)
In particular, The values of the optimal Gegenbauer parameters α∗
one-dimensional minimization problems:

by
j , which minimizes
n (xj, ζj ), at any arbitrary node xj ∈ [−1, 1], for each j = 0, . . . , n.
j can be determined by solving the following

quadrature, we

follow the

pioneered

Find α∗

j = argmin
α>−1/2

η2
j,n(α),

j = 0, . . . , n,

where,

ηj,n(α) =

2n
K (α)

n+1Z xj

−1

G(α)

n+1(x) dx.

Problems (4.1) can be further converted into unconstrained one-dimensional minimization problems using the change
(α∗
j )
m,j,i, j = 0, . . . , n; i = 0, . . . , m, be the adjoint GG nodes as
of variable deﬁned by [Elgindy (2016), Eq. (4.17)]. Let z
deﬁned by [Elgindy and Smith-Miles (2013b)], for some m ∈ Z+; i.e. the zeros of the (m + 1)th-degree Gegenbauer
(α∗
j )
polynomial, G
m+1(x), for each j. The following theorem lays the foundation for deriving the optimal barycentric
Lagrange interpolating polynomials of a real-valued function f.
Theorem 4.1 (Optimal Barycentric Lagrange Interpolating Polynomials)
Let ̟(α∗
k)
m,k,i, k = 0, . . . , n; i = 0, . . . , m. The functions L(α∗
z(α∗
k)
Xj=0

m,k,i, k = 0, . . . , n; i = 0, . . . , m be the set of quadrature weights associated with the adjoint GG points

OB,m,i(x), i = 0, . . . , m; k = 0, . . . , n, deﬁned by

ξ(α∗
k)
m,k,j
(α∗
k)
x − z
m,k,j

ξ(α∗
k)
m,k,i
(α∗
k)
x − z
m,k,i

L(α∗
OB,m,i(x) =

i = 0, . . . , m; k = 0, . . . , n,

(4.3)

k)

k)

/

m

,

are the barycentric Lagrange interpolating polynomials of a real-valued function f constructed through Gegenbauer
interpolations at the adjoint GG nodes z(α∗
k)

m,k,i, k = 0, . . . , n; i = 0, . . . , m, with the barycentric weights

(4.1)

(4.2)

(4.5)

(4.6)

Proof

k)

m,k,i(cid:17) by f (α∗

Denote f(cid:16)z(α∗
interpolate the function f at the set of pointsn(cid:16)z(α∗

k)

ξ(α∗
k)

m,k,i = (−1)is(cid:18)1 −(cid:16)z

(α∗
k)

m,k,i(cid:17)2(cid:19) ̟

(α∗
k)
m,k,i,

i = 0, . . . , m; k = 0, . . . , n.

(4.4)

m,k,i, for each k, i. The classical Lagrange forms of the polynomials of degrees n that

k)

m,k,i, f (α∗
k)

m

m,k,i(cid:17)o , k = 0, . . . , n; i = 0, . . . , m, are deﬁned by
Xj=0
f (α∗
m,k,j L(α∗
k)

m,j (x),

k)

Pk,mf (x) =

where L(α∗

k)

m,j (x) are the classical Lagrange interpolating polynomials given by

k)

L(α∗
m,j (x) =

m

Yi=0

i6=j

x − z(α∗
m,k,j − z

k)
m,k,i
(α∗
k)
m,k,i

(α∗
k)

z

.

Clearly, L(α∗
interpolant in the so-called “modiﬁed Lagrange interpolant” given by

m,k,i(cid:17) = δi,j , where δi,j is the Kronecker delta function. Now rewrite the classical Lagrange

m,j (cid:16)z(α∗

k)

k)

Pk,mf (x) = ψk(x)

f (α∗
k)
m,k,j

m

Xj=0

ξ(α∗
k)
m,k,j
(α∗
k)
x − z
m,k,j

,

(4.7)

8

where,

and

KAREEM T. ELGINDY

ψk(x) =

m

k)

m,k,i(cid:17),
Yi=0(cid:16)x − z(α∗

ξ(α∗
k)
m,k,j =

1

(α∗
k)

m,k,j − z

.

(α∗
k)

m,k,i(cid:17)

m

i6=j (cid:16)z
Qi=0

Since the function values f (α∗
k)

m,k,j = 1 are evidently interpolated by Pk,mf (x) = 1, we have

ψk(x)

m

Xj=0

ξ(α∗
k)
m,k,j
(α∗
k)
x − z
m,k,j

= 1;

hence,

Pk,mf (x) =

f (α∗
k)
m,k,i

m

Pi=0
Pj=0

m

k)
m,k,i

ξ(α∗
k)
m,k,i
x − z(α∗
ξ(α∗
k)
m,k,j
x − z(α∗

k)
m,k,j

=

m

Xi=0

f (α∗
m,k,i L(α∗
k)

k)

OB,m,i(x).

Eq. (4.4) follows directly from Theorem 2.1.

Integrating Eq. (4.11) on [−1, xk], and applying the change of variable

x =

1
2

((xk + 1) t + xk − 1) ,

yields,

Z xk

−1

Pk,mf (x) dx =

xk + 1

2

f (α∗
k)

m,k,i Z 1

k)

−1 L(α∗

OB,m,i(t;−1, xk) dt.

m

Xi=0

Hence, the optimal barycentric Gegenbauer quadrature,

Z xk

−1

Pk,mf (x) dx =

OB,k,i f (α∗
k)
p(1)
m,k,i,

m

Xi=0

(4.8)

(4.9)

(4.10)

(4.11)

(4.12)

(4.13)

(4.14)

can be exactly calculated from Eq. (4.13) using an (M + 1)-point LG quadrature, where p(1)
OB,k,i, k = 0, . . . , n; i =
0, . . . , m, are the elements of
OB. The qth-order
optimal barycentric GIM can be directly generated from the ﬁrst-order optimal barycentric GIM analogous to
[Elgindy and Smith-Miles (2013b), Eq. (2.34)] and [Elgindy (2016), Eq. (4.43)] by the following formulae:

the ﬁrst-order optimal barycentric GIM denoted by P(1)

OB,j,i = (cid:16)x(α)

p(q)

n,j − z

(α∗
j )

m,j,i(cid:17)q−1

(q − 1)!

p(1)
OB,j,i,

i, j = 0, . . . , n.

(4.15)

4.1. Error and Convergence Analysis

Now we are ready to present the following useful theorem, which outlines the creation of the optimal barycentric
GIM and its associated quadrature. Moreover, the theorem marks the truncation error of the optimal barycentric
Gegenbauer quadrature.

Theorem 4.2
Let Tn,m = {z(α∗

k)

m,k,i, k = 0, . . . , n; i = 0, . . . , m}, n, m ∈ Z+, be the set of adjoint GG points, where α∗

k are the

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

optimal Gegenbauer parameters in the sense that

α∗
k = argmin
α>−1/2

η2
k,m(α),

k = 0, . . . , n,

9

(4.16)

and ηk,m(α) is as deﬁned by Eq. (4.2). Moreover, let M = ⌈(m − 1)/2⌉, and denote bynx(0.5)
, the set
of LG points and quadrature weights, respectively. Assume further that f (x) ∈ Cm+1[−1, 1] is approximated by the
Gegenbauer polynomials expansion series such that the Gegenbauer coefﬁcients are computed by interpolating the
function f (x) at the adjoint GG points z(α∗
k)
m,k,i ∈ Tn,m ∀k, i. Then for any arbitrary nodes xk ∈ [−1, 1], k = 0, . . . , n,
there exist a matrix P(1)
OB,k,i), k = 0, . . . , n; i = 0, . . . , m, and some numbers ζk ∈ [−1, 1], k = 0, . . . , n, such
that
Z xk

M,soM

m,k,i + E(α∗
k)

OB,k,i f (α∗
k)
p(1)

M,s , ̟(0.5)

OB = (p(1)

m (xk, ζk) ,

f (x) dx =

(4.17)

s=0

−1

m

where

p(1)
OB,k,i =

xk + 1

2

Xi=0
Xs=0

M

M,s L(α∗
̟(0.5)

k)

OB,m,i(cid:16)x(0.5)

M,s ;−1, xk(cid:17);

E(α∗
k)

m (xk, ζk) =

f (m+1)(ζk)
2m (m + 1)!

ηk,m(α∗

k).

(4.18)

(4.19)

Proof
The quadrature error term (4.19) follows directly from Theorem 3.1 by substituting the value of α with α∗
expanding the Gegenbauer expansion series up to the (m + 1)th term.

k, and

The following theorem is a direct corollary of Theorem 3.2 and [Elgindy and Smith-Miles (2013b), Theorem 2.3],

and gives the error bounds of the optimal barycentric Gegenbauer quadrature.

Theorem 4.3 (Error bounds)

Assume that f (x) ∈ Cm+1[−1, 1], and (cid:13)(cid:13)f (m+1)(cid:13)(cid:13)L∞[−1,1] ≤ A ∈ R+, for some number m ∈ Z+
0 . Moreover, let
R xk
−1 f (x) dx, be approximated by the optimal barycentric Gegenbauer quadrature (4.14) up to the (m + 1)th
Gegenbauer quadrature expansion term, for each arbitrary integration node xk ∈ [−1, 1], k = 0, . . . , m. Then there
exist some positive constants D(α∗
k)
, independent of m such that the truncation error of the barycentric
Gegenbauer quadrature, E(α∗
k)

m (xk, ζk), is bounded by the following inequalities:

and D(α∗
k)

1

2

, m ≥ 0 ∧ α∗

k ≥ 0,

(4.20)

,

m + 1

2

∈ Z+ ∧ −

1
2

< α∗

k < 0,

(4.21)

,

m
2 ∈ Z+

0 ∧ −

1
2

< α∗

k < 0.

(4.22)

k)

(cid:12)(cid:12)(cid:12)E(α∗
m (xk, ζk)(cid:12)(cid:12)(cid:12) ≤

k + 1) (xk + 1) Γ (m + 2α∗

k + 1)

2

k

m+1

2 + α∗

k + 1(cid:1) Γ (m + 2) Γ(cid:0)m + α∗
k) (xk + 1)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:18) m−1
Γ(cid:0)m + α∗
k + 1(cid:1)
k| (xk + 1)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:18) m
k)|α∗
k + m + 1(cid:1)Γ(cid:0)m + α∗

k + 1(cid:1)
(cid:19)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:19)(cid:12)(cid:12)(cid:12)(cid:12)
k + 1(cid:1)

2 + α∗

m
2

k

A2−mΓ (α∗

A2−mΓ (α∗

A2−m−1Γ (α∗

Γ(cid:0)2α∗



q(m + 1)(cid:0)2α∗
m (xk, ζk)(cid:12)(cid:12)(cid:12) ≤∼
(cid:12)(cid:12)(cid:12)E(α∗


1 = AD(α∗
k)

k)

1

Moreover, as m → ∞, the truncation error of the optimal barycentric Gegenbauer quadrature is asymptotically
bounded by:

B(α∗
k)

1

B(α∗
k)

2

(cid:16) e
2(cid:17)m
2(cid:17)m
(cid:16) e

(xk + 1) mα∗

k−m− 3

2 , α∗

(xk + 1) m−m− 3

2 , −

1
2

k ≥ 0,
< α∗

k < 0,

(4.23)

(4.24)

for all k = 0, . . . , m, where B(α∗
k)

and B(α∗
k)

2

= B(α∗
k)

1 D(α∗
k)

2

.

10

KAREEM T. ELGINDY

[Elgindy and Smith-Miles (2013b),

Notice here that Theorem 4.3 gives more tight asymptotic error bounds

√2 π m (m/e)m = √2 π m3/2 (m/e)m, as m → ∞.

than that obtained in
(m + 1)! = (m + 1) · m! ≈ m ·
The following theorem parallels [Elgindy and Smith-Miles (2013b), Theorem 2.4], as it shows that the optimal
barycentric Gegenbauer quadrature converges to the optimal Chebyshev quadrature in the L∞-norm, for a large-scale
number of expansion terms.

Theorem 2.3]

realizing

that

by

Theorem 4.4 (Convergence of the Optimal Barycentric Gegenbauer Quadrature)

Assume that f (x) ∈ Cm+1[−1, 1], and max|x|≤1(cid:12)(cid:12)f (m+1)(x)(cid:12)(cid:12) ≤ A ∈ R+, for some number m ∈ Z+. Moreover,
let R xk
−1 f (x) dx be approximated by the optimal barycentric Gegenbauer quadrature (4.14) up to the (m + 1)th
Gegenbauer quadrature expansion term, for each arbitrary integration node xk, k = 0, . . . , m. Then the optimal
barycentric Gegenbauer quadrature converges to the barycentric Chebyshev quadrature in the L∞-norm as m → ∞;
that is,

m

Xi=0

OB,k,if (α∗
k)
p(1)

m,k,i →

m

Xi=0

B,k,if (0)
p(1)
m,i,

as m → ∞.

5. COMPUTATIONAL ALGORITHMS

(4.25)

i=0

N,i , ̟(0.5)

N,i oN

, require O(N ) operations. Therefore, the computation of np(1)

In this section, we discuss 10 computational algorithms created to efﬁciently calculate the developed barycentric
GIMs and quadratures and their optimal partners. We commence our discussion with Algorithms 1 and 2, which
represent two simple and fast computational algorithms for the computation of the square barycentric GIM and its
associated quadrature for the GG set of points; cf. Appendix A. We ﬁnd that one of the major advantages of the
established algorithms lies in the reduction of the operational cost required for calculating the GIM and quadrature.
Indeed, the barycentric weights can be computed in O(n) operations, whereas the LG points and quadrature weights,
nx(0.5)
through Eq. (3.7) costs
O(N · n) operations per point– the same cost required for the evaluation of the barycentric Gegenbauer quadrature
through Eq. (3.6) for each point. This amounts to O(N · n2) for the construction of the barycentric GIM, P(1)
B .
On the other hand, the evaluation of the Gegenbauer quadrature derived in [Elgindy and Smith-Miles (2013b),
Theorem 2.1] in basis form requires O(n2) operations per point while the cost of constructing the associated basis
GIM rises up to O(n3) operations. Figure 1 shows the average elapsed CPU time in 10 runs required for the
construction of the basis GIM, ˆP(1), derived by [Elgindy and Smith-Miles (2013b)] and the barycentric GIM, P(1)
B
using n = 20, 60, 80, 120, 140 points and α = −0.25(0.25)2. Both GIMs were constructed in each case using the same
inputs of GG points and quadrature weights,nx(α)
B is faster than ˆP(1),

and the gap grows wider for increasing values of n.

. Clearly, the construction of P(1)

B,j,ion

n,ion

n,i , ̟(α)

To analyze the errors of the barycentric and basis quadratures, we have conducted several numerical experiments
on the three test functions f1(x) = x20, f2(x) = e−x2, and f3(x) = 1/(1 + 25 x2), which were studied by
[Elgindy and Smith-Miles (2013b)]. The absolute errors (AEs) obtained for {fi}3
i=1 are shown in Figures 2-4, where
one can clearly verify that both quadratures share the same order of error for all {fi}3
i=1 with almost matched error
values for the third test function, f3.

i=0

i=0

Notice that both the CPU time and AEs were not reported for n = 40, 100, 160 as we observed that

for certain values of α, where

ˆx(0.5)
N,k =

n,i(cid:12)(cid:12)(cid:12) ≤ εmach,

N,k − x(α)

(cid:12)(cid:12)(cid:12)ˆx(0.5)
n,j + 1(cid:17) x(0.5)
2(cid:16)(cid:16)x(α)

N,k + x(α)

1

n,j − 1(cid:17) ∀k,

and εmach denotes the machine precision that is approximately equals 2.2204 × 10−16 in double precision arithmetic.
For instance, we ﬁnd that Eq. (5.1) is satisﬁed for k = 25 and i = 33 using 101 GG points at α = 1, where both ˆx(0.5)
50,25

(5.1)

(5.2)

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

11

and x(1)

100,33 equals -0.5; thus overﬂow occurs. In fact, such a rare and unpleasant difﬁculty could happen whenever,

2x(α)

x(0.5)
N,k =

n,i − x(α)
x(α)
n,j + 1
for some i, j ∈ {0, . . . , n}; k ∈ {0, . . . , N} in exact arithmetic, or
n,i(cid:17)
2(cid:16)1 + x(α)

1 + x(0.5)

N,k −

1 + x(α)
n,j

n,j + 1

,

≤ ε ∀i, j; k,

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

1 + x(0.5)

N,k −

n,i(cid:17)
2(cid:16)1 + x(α)

1 + x(α)
n,j

> ε ∀i, j; k.

(5.3)

(5.4)

(5.5)

(5.6)

in ﬁnite precision arithmetic, for some relatively small positive number ε. Therefore, a sufﬁcient condition for
constructing the barycentric GIM using Algorithm 1 is given by

We shall refer to the set,

FB = {(n, α) : The Sufﬁcient Condition (5.5) is always satisﬁed} ,

by the “barycentric GIM feasible set”.

One approach to construct the barycentric GIM for (n, α) 6∈ FB, is to modify Algorithm 1 so that it accomplishes

the fundamental property of Lagrange interpolating polynomials,

if ˆx(0.5)

N,k = x(α)

n,i ∀i, k.

(5.7)

B,n,i(cid:16)x(0.5)
L(α)

n,j(cid:17) = 1,
N,k ;−1, x(α)

N,k ;−1, x(α)
B,n,i(cid:16)x(0.5)

Algorithm 3 is a modiﬁcation to Algorithm 1, which ensures the satisfaction of the Sufﬁcient Condition (5.5); cf.
Appendix A. The trick here is to set L(α)
B,n,i(cid:16)x(0.5)
L(α)
shadows on the time complexity required for constructing the barycentric GIM, P(1)
B . Indeed, Figure 5 shows that the
time required for constructing the basis GIM, ˆP(1), derived by [Elgindy and Smith-Miles (2013b)] becomes shorter
than that required for constructing P(1)

n,j(cid:17) = 1 ∀i, j, k initially, and then update only the values of
n,j(cid:17) for which Condition (5.5) is satisﬁed. However, the result of such a modiﬁcation casts its

N,k ;−1, x(α)

B using several values of n and α.

Another approach to successfully construct the barycentric GIM for (n, α) 6∈ FB without applying Property (5.7)
is to increase the value of N if Condition (5.4) occurs before applying Algorithm 1; that is, we use instead an
⌈(n + 3)/2⌉-point LG quadrature for calculating the integrals
n,j(cid:17) dt,
B,n,i(cid:16)t;−1, x(α)

Z 1
−1 L(α)

i, j = 0, . . . , n.

(5.8)

For instance, replacing N with (N + 1) would change the values of {x(0.5)
k=0 with the possibility of fulﬁlling
Condition (5.5) while exactly calculating the integrals (5.8) and retaining relatively lower computational cost.
Algorithm 4 checks for the satisfaction of the Sufﬁcient Condition (5.5); cf. Appendix A. Now running Algorithm
1 with the replacement of the statement N ← ⌈(n − 1)/2⌉ by N ← ⌈(n + 1)/2⌉, retrieves the previous rapid
construction of the barycentric GIM, P(1)

N,k }N

B , as veriﬁed by Figure 6.

Remark 5.1
We checked the Sufﬁcient Condition (5.5) using Algorithm 4 running on a Windows 8 64-bit operating
system endowed with MATLAB V. R2014b (8.4.0.150421) in double precision arithmetic for n = 1(1)100, α =
−0.4(0.001)2, and ε = εmach. Failure to construct the barycentric GIM was only reported at α = 1 for n = 4(12)100.
Therefore, Gegenbauer collocation schemes can be carried out safely and efﬁciently using any of the aforementioned
valid input data.

12

KAREEM T. ELGINDY

5.1. Resolving Boundary-Value Problems Using the Barycentric Gegenbauer Quadrature

To solve the integral reformulations of differential problems provided with boundary conditions using Gauss
collocation methods, one needs to approximate the integral of the unknown solution y(x) on [−1, 1] using Gauss
collocation points {x(α)

i=0 ⊂ (−1, 1); that is the following integral is often required,

n,i }n

I =Z 1

−1

y(x) dx.

(5.9)

Since the barycentric GIM is in principal designed for the GG points, we cannot directly apply Algorithm 1 for
evaluating I. Notice here that we cannot approximate I using a LG quadrature unless the collocation points are the
LG points. Therefore, to consider the more general case, we shall modify Algorithm 1 to work for general GG points.
At ﬁrst, denote the point 1 by x(α)

n+1,j. Then Eqs. (3.7) can be written as follows:

p(1)
B,n+1,i =

N

Xk=0

̟(0.5)
N,k L(α)

B,n,i(cid:16)x(0.5)

N,k ;−1, x(α)

n,n+1(cid:17),

i = 0, . . . , n,

(5.10)

B,n+1,i, i = 0, . . . , n, are the elements of the additional row of the barycentric GIM, P(1)

B,n+1, corresponding

N,k = x(0.5)

N,k ∀k in this case, the Sufﬁcient Condition (5.5) is now simpliﬁed to

where p(1)
to the point 1. Since ˆx(0.5)

N,k − x(α)

(cid:12)(cid:12)(cid:12)x(0.5)

n,i(cid:12)(cid:12)(cid:12) > ε ∀i; k.

(5.11)

2,1 = x(α)

Since n > N ∀n ≥ 1, both LG and GG points share the zero value if both n and N are even. For instance, for n = 4,
we ﬁnd that x(0.5)
4,2 = 0 ∀α > −1/2, and again overﬂow occurs. To overcome this issue we increase the number
of LG points as discussed before so that N is replaced with N + 1. This convenient technique is adopted in Algorithm
6; cf. Appendix A. Notice here that Algorithm 6 is implemented assuming P(1)
B for the GG collocation points is not
required. If this is not the case, then the barycentric weights are already computed using Algorithm 1, and we can
safely remove this partial procedure to gain more efﬁciency when calculating the row barycentric GIM corresponding
to the point 1. This is depicted in Algorithm 7.
Remark 5.2
The barycentric GIM can be slightly modiﬁed to work for any set of arbitrary points {xk}n
8 in Appendix A.

k=0 by following Algorithm

5.2. Computational Algorithms for the Optimal Barycentric GIM

k=0

k=0

i=0

i=0

thus

−1 G(α∗
k)

(α∗
m,n−k,i, ξ

n−k)

k)

m,k,i, ξ(α∗
k)

=nz

if m is even.

to the work of

{α∗

k}⌈n/2⌉−1

k=0

, which
m,k,i, ξ(α∗
k)

k)

−1 G(α∗
k)
n−k)

(α∗

[Elgindy and Smith-Miles (2013b)],

OB can be
in this
that

implies

m+1(x) dx ∀k;
m,n−k,iom
,

the computational cost of P(1)
Indeed,

R xk
m+1(x) dx =R −xk
m,k,iom

n−k(cid:9)⌈n/2⌉−1
for k = 0, . . . ,⌈n/2⌉ − 1. Hence, nz(α∗

Similar
reduced signiﬁcantly for arbitrarily symmetric set of points {xk}n
=(cid:8)α∗
case,
nz(α∗
can be
stored for the ﬁrst (⌈n/2⌉ − 1) iterations, and invoked later in the next iterations. Algorithms 9 and 10 are two
efﬁcient algorithms for the construction of the optimal barycentric GIM for any non-symmetric/symmetric set of
integration points, respectively; cf. Appendix A. For a large number of expansion terms, Chebyshev and Legendre
quadratures often behave optimally as speciﬁed by the used error norm; cf. [Elgindy and Smith-Miles (2013b)].
Therefore, both algorithms provide the user with the ﬂexibility to choose two parameter inputs mmax and αa at
which the algorithms construct the Chebyshev/Legendre quadratures instead. Moreover, the parameter input αb
adds further stability to the algorithms in the occasions, where α∗
k lies in the critical interval (−0.5,−0.5 + ε).
The parameter input r is ideally chosen from [1, 2] to hamper the extrapolatory effect of the optimal Gegenbauer
quadrature caused by the narrowing behavior of the Gegenbauer weight function for increasing values of α; cf.
[Elgindy and Smith-Miles (2013b)]. For a non-symmetric set of integration nodes {xk}n
k=0 with m ≤ mmax : m is
even and 1 ∈ {xk}n
k=0, M should be replaced with (M + 1) in Algorithm 9 if M is even, as we discussed earlier.
This procedure should also be carried out in Algorithm 10 for symmetric sets of integration nodes with m ≤ mmax
and 1 ∈ {xk}n

k=0, since m is always an even integer in such cases.

m,k,iom

i=0

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

13

Since Algorithms 9 and 10 work for any arbitrary set of nodes {xk}n

m > mmax now becomes

k=0, the Sufﬁcient Condition (5.5) for

which can be checked using Algorithm 5. We refer to the set,

x(0.5)
M,s −

1 − xk + 2x(αa)

m,i

1 + xk

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

> ε ∀i, s; k,

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

(5.12)

(5.13)

(5.14)

(5.15)

(5.16)

F(mmax)
OB,1 = {(m, αa) : m > mmax; the Sufﬁcient Condition (5.12) is always satisﬁed} ,

by the “optimal barycentric GIM feasible set for m > mmax”. It is important here to mention that in Gegenbauer
collocation schemes, the dynamics is often enforced at the GG points; cf. [Elgindy and Smith-Miles (2013b),
Elgindy and Smith-Miles (2013), Elgindy (2016), Elgindy et al. (2012), Elgindy and Smith-Miles (2013a)]. There-
k=0.
fore, the input set of integration nodes {xk}n
Hence, the sufﬁcient condition for constructing P(1)

k=0 in Algorithm 10 is frequently taken as the set of GG points {x(α)

n,k}n

OB for m ≤ mmax reads

We refer to the set,

x(0.5)
M,s −

1 − x(α)

n,k + 2z(α∗
k)
m,k,i
1 + x(α)
n,k

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

> ε ∀i, s; k.

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

F(mmax)
OB,2 = {(n, m, α) : m ≤ mmax; the Sufﬁcient Condition (5.14) is always satisﬁed} ,
by the “optimal barycentric GIM feasible set for m ≤ mmax”. The above argument implies that the set,

F(mmax)

OB

is the optimal barycentric GIM feasible set.

=( F(mmax)

OB,1 , m > mmax,
F(mmax)
OB,2 , m ≤ mmax,

Remark 5.3
The phrase ‘If M = N then set P = ˆP with α = 0.5;’ in [Elgindy and Smith-Miles (2013b), Algorithms 2.1 & 2.2]
should be carried out with each ith-indexed GG point xi replaced with the corresponding arbitrary point while keeping
the jth-indexed GG points xj the same. This should be straightforward and the implementation should follow that
of Algorithm 8 in Appendix A. We have also noticed a typo in [Elgindy and Smith-Miles (2013b), Algorithm 2.2],
where the phrase ‘N is even’ in the input should be replaced with ‘M is even’. In turns, the condition ‘i ≤ N/2’ in
Step 4 should be correctly replaced with ‘i ≤ ⌈N/2⌉ − δ N +1
Remark 5.4
Since most of the current state of the art software such as MATLAB are optimized for operations involving matrices
and vectors, all of the proposed algorithms are vectorized to run much faster than the corresponding codes containing
loops.

2 ⌉’ to cover both cases when N is even or odd.

2 ,⌈ N +1

6. NUMERICAL EXAMPLES

In this section, we apply the developed barycentric GIMs and quadratures on three well-studied test examples with
known exact solutions in the literature. Comparisons with other competitive numerical schemes are presented to
assess the accuracy and efﬁciency of the current work. The numerical experiments were conducted on a personal
laptop equipped with an Intel(R) Core(TM) i7-2670QM CPU with 2.20GHz speed running on a Windows 8 64-bit
operating system.

Example 1 Consider the following Fredholm integro-differential equation:

y′(x) − y(x) −Z 1

0

esx y(s) ds =

1 − ex+1
x + 1

,

y(0) = 1,

(6.1)

14

KAREEM T. ELGINDY

with the exact solution y(x) = ex. This problem was previously solved by [Elgindy and Smith-Miles (2013)]
using a hybrid Gegenbauer
integration method (HGIM). Following the numerical scheme developed by
[Elgindy and Smith-Miles (2013)] together with the obtained barycentric GIMs results in the following algebraic
system of linear equations:

n,kx(α)

m

n

n

B,j,i +

wj −

Xi=0

Xk=0

B,j,kex(α)

p(1)
B,n+1,ip(1)

n,i! wi −

p(1)
OB,j,i rj,i − 1 = 0,

Xi=0 p(1)
n,j(cid:17) ∀j; r(x) = (1 − ex+1)/(x + 1). We refer to the present method by the hybrid barycentric

where wj ≈ y(cid:16)x(α)
Gegenbauer integration method (HBGIM). We implemented the developed algorithms for the set of feasible 3-tuples
OB . The resulting algebraic linear system of equations were solved using MATLAB
{(10, 14, α)}1
“mldivide” Algorithm provided with MATLAB V. R2014b (8.4.0.150421). Figure 7 shows the maximum absolute
errors (MAEs) of the present method. As can be observed from the results, the maxα=−0.4:0.1:1 MAE of the present
method is about 1.514 × 10−13 obtained at α = 1 versus approximately 4.201 × 10−13 for the HGIM obtained at
α = −0.4. The best MAE ≈ 3.553 × 10−15 was obtained at α = −0.3 in 0.015 seconds.
Example 2 Consider the following nonlinear boundary value problem:

α=−0.4(0.1) ⊂ F(20)

j = 0, . . . , n,

(6.2)

− cαα(cid:18)Z 1

0

u(t) dt(cid:19) u′′(x) + u5(x) = 0, 0 < x < 1,

such that u(0) = 1, u(1) = √2/2, cα = 4/(cid:0)3 α(cid:0)2√2 − 2(cid:1)(cid:1) ; α(q) = 1/q ∀q > 0. The exact solution is u(x) =

1/√1 + x [Themistoclakis and Vecchio (2015)]. Notice here that the coefﬁcient of the second derivative of the
unknown solution u depends upon the integral of u itself, which in turn depends on the whole solution domain [0, 1]
rather than on a single point. Therefore, the boundary value problem is classiﬁed as a “nonlocal” nonlinear problem.
This problem was studied by [Themistoclakis and Vecchio (2015)] and was solved using an iterative scheme (IS).
The present HBGIM results in the following nonlinear algebraic system of equations:

P (2)
B U(5) − P (2)

B,n+1U(5)X +h4(cid:16)4 − 3√2(cid:17) X − 8(cid:16)√2 − 1(cid:17) (U − 1)i ⊘(cid:16)3P (1)

where U = [U0, U1, . . . , Un]T ≈hu(cid:16)x(α)

n,0(cid:17) , u(cid:16)x(α)

B,n+1U(cid:17) ,
n,niT

;

, X =hx(α)

n,0, x(α)

n,1, . . . , x(α)

(6.3)

(6.4)

n,1(cid:17) , . . . , u(cid:16)x(α)
n,n(cid:17)iT
U(5) = U ◦ U . . . ◦ U
}

{z

5−times

|

,

◦ and ⊘ denote the Hadamard product and division, respectively. We implemented the developed algorithms for
the set of feasible pairs {(n, α) : n = 6, 7, 9; α = −0.4(0.1)1} ⊂ FB. The nonlinear system (6.4) was solved using
MATLAB “fsolve” solver with “TolX” set at εmach. Figure 8 shows the MAEs of the present method while Figure 9
shows the number of correct digits cdn := −log10 [max0≤i≤n |u(xi) − Ui|] obtained in each case. Clearly, the present
numerical scheme achieves a very rapid convergence rate using relatively small number of barycentric quadratures
terms. For instance, the IS of [Themistoclakis and Vecchio (2015)] requires 257 points to obtain 6 correct digits versus
only 10 GG points to achieve a larger number of correct digits for the present method with an elapsed time of about
0.01 seconds for all experimental values of α. Both numerical tests conﬁrm the efﬁciency of the proposed numerical
schemes.

Example 3 Consider the following second-order one-dimensional hyperbolic telegraph equation,

utt(x, t) + 2π2ut(x, t) + π2u(x, t) = uxx(x, t) + e−t sin(πx),

0 ≤ x ≤ 1, t > 0,

provided with the initial conditions,

u(x, 0) = sin(πx),
ut(x, 0) = − sin(πx),

(6.5)

(6.6)
(6.7)

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

and the following Dirichlet boundary conditions,

u(0, t) = 0;

u(1, t) = 0.

15

(6.8)
(6.9)

The exact solution of the above problem is u(x, t) = e−t sin(πx) [Luo and Du (2013)]. We solved the problem using
the numerical scheme developed by [Elgindy (2016)] together with the obtained barycentric GIMs. The developed
algorithms were carried out using the feasible 3-tuple (8, 8, 0) ∈ F(20)
OB . The plots of the exact solution, its bivariate
shifted Gegenbauer interpolant Pn,nu(x, t) (see [Elgindy (2016)]), and the absolute error function

En,n(x, t) = |u(x, t) − Pn,nu(x, t)| ,
are shown in Figure 10, where D2
1,1 = [0, 1] × [0, 1]. A comparison with [Luo and Du (2013)]’s fourth-order method
based on cubic Hermite interpolation [Luo and Du (2013)] and the present method is also shown in Table I. The
plots and the numerical comparisons show the power of the present method as proven in the recognized rapid
convergence rates and the produced errors with very small magnitudes using relatively small number of expansion
terms. For instance, [Luo and Du (2013)]’s fourth-order method [Luo and Du (2013)] yields a MAE of order 10−08
using 49 × 49 collocation points in both directions. Conversely, a MAE of order 10−09 is achieved by the present
method using only 11 × 11 collocation points.

(x, t) ∈ D2
1,1,

(6.10)

7. CONCLUSION

Novel optimal GIMs and quadratures are developed based on the barycentric representation of Lagrange interpolating
polynomials and the explicit barycentric weights for the GG points. The established GIMs and quadratures were
optimized following the method of [Elgindy and Smith-Miles (2013b)]. The present numerical scheme leads to
a reduction in the computational cost and time complexity while preserving the order of accuracy achieved by
[Elgindy and Smith-Miles (2013b)]. The proposed HBGIM is a stable numerical scheme, which generally leads to
well-conditioned systems. The numerical experiments conﬁrm the stability, high-order accuracy, and efﬁciency of the
proposed HBGIM and developed computational algorithms. The presented algorithms and numerical scheme provide
easy yet strong numerical tools, which can be effectively carried out for the solution of a wide variety of problems.

A. PSEUDOCODES FOR THE DEVELOPED COMPUTATIONAL ALGORITHMS

16

KAREEM T. ELGINDY

Algorithm 1 Construction of the Barycentric GIM for the GG Set of Points

n,i , ̟(α)

n,ion

.

i=0

.

i=0

n,i ,

i = 0, . . . , n.

n,i(cid:17)2(cid:19) ̟(α)

Require: Positive integer n; the set of GG points and quadrature weights,nx(α)
n,i ← (−1)is(cid:18)1 −(cid:16)x(α)
ξ(α)
N ← ⌈(n − 1)/2⌉.
Calculate the set of LG points and quadrature weights,nx(0.5)
P(1)
B ← O.
for j = 0 to n do
N,k ←(cid:16)(cid:16)x(α)
ˆx(0.5)
for k = 0 to N do
µi ← ξ(α)
ν ←Pn
pB,j,i ← pB,j,i + ̟(0.5)
end for
n,j + 1(cid:17) pB,j,i/2,
pB,j,i ←(cid:16)x(α)

n,j + 1(cid:17) x(0.5)
n,i(cid:17) ,
N,k − x(α)

n,j − 1(cid:17) /2,

n,i /(cid:16)ˆx(0.5)

N,i oN

N,k + x(α)

N,i , ̟(0.5)

k = 0, . . . , N.

i = 0, . . . , n.

i = 0, . . . , n.

i = 0, . . . , n.

N,k µi/ν,

i=0 µi.

end for
return P

(1)
B

Algorithm 2 Calculation of the Barycentric Gegenbauer Quadrature for the GG set of points

Require: Positive integer n; the set of GG points and quadrature weights,nx(α)
Construct P(1)
I(α)
n ← P(1)
return I(α)

B using Algorithm 1.
n,1 , . . . , f (α)

B ·(cid:16)f (α)

n,n(cid:17)T

n,0 , f (α)

.

n

n,i , ̟(α)

n,ion

i=0

; real-valued function f.

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

17

Algorithm 3 Modiﬁed Construction of the Barycentric GIM for the GG Set of Points

n,i , ̟(α)

n,ion

i=0

; relatively small positive

n,i ,

.

i=0

number ε.

i = 0, . . . , n.

i = 0, . . . , n.

N,i , ̟(0.5)

N,i oN

n,i(cid:17)2(cid:19) ̟(α)

Require: Positive integer n; the set of GG points and quadrature weights,nx(α)
n,i ← (−1)is(cid:18)1 −(cid:16)x(α)
ξ(α)
N ← ⌈(n − 1)/2⌉.
Calculate the set of LG points and quadrature weights,nx(0.5)
P(1)
B ← O
Li ← 1,
for j = 0 to n do
N,k ←(cid:16)(cid:16)x(α)
ˆx(0.5)
for k = 0 to N do
di =(cid:16)ˆx(0.5)
I ← {i :
µl ← ξ(α)
ν ←Pℵ0
Ll = µl/ν,
pB,j,i ← pB,j,i + ̟(0.5)
Ll = 1,
l ∈ I.
end for
n,j + 1(cid:17) pB,j,i/2,
pB,j,i ←(cid:16)x(α)

n,j + 1(cid:17) x(0.5)
n,i(cid:17) ,
N,k − x(α)
|di| > ε} .
l ∈ I.
{ℵ0 denotes the cardinal number of I.}

n,j − 1(cid:17) /2,

n,l /dl,
l=0 µl.

N,k + x(α)

k = 0, . . . , N.

i = 0, . . . , n.

i = 0, . . . , n.

i = 0, . . . , n.

l ∈ I.

N,k Li,

end for
return P(1)
B

Algorithm 4 Testing the Sufﬁcient Condition (5.5) for the Construction of the Barycentric GIM for the GG Set of
Points

; relatively small positive number ε.

i=0

for j = 0 to n do

n,i ,on
Require: Positive integer n; the set of GG points,nx(α)
N ← ⌈(n − 1)/2⌉.
Calculate the set of LG points,nx(0.5)
N,i oN
(cid:12)(cid:12)(cid:12)1 + x(0.5)
N,k − 2(cid:16)1 + x(α)

n,i(cid:17) /(cid:16)1 + x(α)
i=0 Ji > 0 then {ℵ0 denotes the cardinal number of J.}

J ←(Ji : Ji =( 1,
ifPℵ0

for k = 0 to N do

otherwise,

return “The test fails.”

i=0

0,

.

end if
end for

end for
return “The test succeeds.”

n,j(cid:17)(cid:12)(cid:12)(cid:12) ≤ ε,

i = 0, . . . , n) .

18

KAREEM T. ELGINDY

Algorithm 5 Testing the Sufﬁcient Condition for the Construction of the Optimal Barycentric GIM for m > mmax

; the set of integration points, {xk}l

k=0; relatively

m,i )/(1 + xk)(cid:12)(cid:12)(cid:12) ≤ ε,

k = 0, . . . , l) .

m,i ,om

i=0

Require: Positive integers m, l; the set of GG points,nx(αa)
small positive number ε.
M ← ⌈(m − 1)/2⌉.
Calculate the set of LG points,nx(0.5)
M,soM
(cid:12)(cid:12)(cid:12)x(0.5)
M,s − (1 − xk + 2x(αa)
otherwise,

for s = 0 to M do

for i = 0 to m do

J ←(Jk : Jk =( 1,
ifPℵ0

return “The test fails.”

s=0

0,

.

k=0 Jk > 0 then {ℵ0 denotes the cardinal number of J.}

end if
end for

end for
return “The test succeeds.”

Algorithm 6 Construction of a Row Barycentric GIM for the Point 1

Ensure: P

Require: Positive integer n; the set of GG points and quadrature weights,nx(α)
n,i ← (−1)is(cid:18)1 −(cid:16)x(α)

(1)
B is not required.

i = 0, . . . , n.

n,i ,

n,i , ̟(α)

n,ion

.

i=0

n,i(cid:17)2(cid:19) ̟(α)
ξ(α)
N ← ⌈(n − 1)/2⌉.
if mod(n, 2) = 0 ∧ mod(N, 2) = 0 then
N ← N + 1.
end if
pB,n+1,i ← 0,
Calculate the set of LG points and quadrature weights,nx(0.5)
for k = 0 to N do
n,i(cid:17) ,
N,k − x(α)
µi ← ξ(α)
ν ←Pn
pB,n+1,i ← pB,n+1,i + ̟(0.5)
end for
return P(1)

n,i /(cid:16)x(0.5)

i = 0, . . . , n.

i = 0, . . . , n.

i = 0, . . . , n.

N,k µi/ν,

i=0 µi.

B,n+1

N,i , ̟(0.5)

N,i oN

i=0

.

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

19

Algorithm 7 Modiﬁed Construction of a Row Barycentric GIM for the Point 1

n,i , ξ(α)

n,ion

.

i=0

Ensure: P(1)

B is already calculated.

Require: Positive integer n; the set of GG points and barycentric weights,nx(α)
N ← ⌈(n − 1)/2⌉.
if mod(n, 2) = 0 ∧ mod(N, 2) = 0 then
N ← N + 1.
end if
pB,n+1,i ← 0,
Calculate the set of LG points and quadrature weights,nx(0.5)
for k = 0 to N do
n,i(cid:17) ,
N,k − x(α)
µi ← ξ(α)
ν ←Pn
pB,n+1,i ← pB,n+1,i + ̟(0.5)
end for
return P(1)

n,i /(cid:16)x(0.5)

N,i oN

N,i , ̟(0.5)

i = 0, . . . , n.

i = 0, . . . , n.

i = 0, . . . , n.

N,k µi/ν,

i=0 µi.

i=0

.

B,n+1

Algorithm 8 Construction of the Barycentric GIM for an Arbitrary Set of Points

n,i , ̟(α)

n,ion

i=0

; the set of the integration

n,i ,

k=0.

i = 0, . . . , n.

n,i(cid:17)2(cid:19) ̟(α)

Require: Positive integer n; the set of GG points and quadrature weights,nx(α)
nodes {xk}n
n,i ← (−1)is(cid:18)1 −(cid:16)x(α)
ξ(α)
N ← ⌈(n − 1)/2⌉.
Calculate the set of LG points and quadrature weights,nx(0.5)
P(1)
B ← O.
for j = 0 to n do
N,k ←(cid:16)(xj + 1) x(0.5)
N,k + xj − 1(cid:17) /2,
ˆx(0.5)
for k = 0 to N do
n,i(cid:17) ,
n,i /(cid:16)ˆx(0.5)
N,k − x(α)
µi ← ξ(α)
ν ←Pn
pB,j,i ← pB,j,i + ̟(0.5)
end for
pB,j,i ← (xj + 1) pB,j,i/2,

N,i oN

N,i , ̟(0.5)

k = 0, . . . , N.

i = 0, . . . , n.

i = 0, . . . , n.

i = 0, . . . , n.

N,k µi/ν,

i=0 µi.

i=0

.

end for
return P(1)
B

20

KAREEM T. ELGINDY

Algorithm 9 Construction of the Optimal Barycentric GIM for Any Non-Symmetric Set of Integration Points
Require: Positive integer numbers n, m, mmax; positive real number r ∈ [1, 2]; the set of the integration nodes

k=0; relatively small positive number ε; αa ∈ {0, 0.5}; αb ∈ {−0.5 + ε, αa}.

{xk}n
if m > mmax then

n,i , ̟(α)

n,ion

.

i=0

(1)

α ← αa.
if m = n then
Calculate the set of GG points and quadrature weights,nx(α)
Calculate P(1)
B using Algorithm 8.
(1)
B .
OB ← P
P
else
M ← ⌈(m − 1)/2⌉.
;nx(0.5)
m,iom
Calculatenx(α)
M,s + xk − 1(cid:17) /2,
M,s ←(cid:16)(xk + 1) x(0.5)
ˆx(0.5)
for s = 0 to M do
m,i(cid:17) ,
m,i/(cid:16)ˆx(0.5)
M,s − x(α)
µi ← ξ(α)
ν ←Pm
pOB,k,i ← pOB,k,i + ̟(0.5)
end for
pOB,k,i ← (xk + 1) pOB,k,i/2,

M,soM

for k = 0 to n do

M,s , ̟(0.5)

s = 0, . . . , M.

m,i, ̟(α)

i = 0, . . . , m.

i = 0, . . . , m.

i = 0, . . . , m.

m,i, ξ(α)

M,s µi/ν,

i=0 µi.

s=0

i=0

.

end for

k=0 then

.

s=0

−1/2<α≤r

k,m(α).
η2

M,s , ̟(0.5)

M,soM

end if
M ← ⌈(m − 1)/2⌉.
if mod(m, 2) = 0 ∧ mod(M, 2) = 0 ∧ 1 ∈ {xk}n
M ← M + 1.
end if
Calculatenx(0.5)
for k = 0 to n do
k ← argmin
α∗
k ∈ (−0.5,−0.5 + ε) then
if α∗
k ← αb.
α∗
end if
Calculatenz(α∗
M,s ←(cid:16)(xk + 1) x(0.5)
ˆx(0.5)
for s = 0 to M do
m,k,i/(cid:16)ˆx(0.5)
µi ← ξ(α∗
ν ←Pm
pOB,k,i ← pOB,k,i + ̟(0.5)
end for
pOB,k,i ← (xk + 1) pOB,k,i/2,

M,s + xk − 1(cid:17) /2,
M,s − z(α∗

m,k,iom
m,k,i(cid:17) ,

m,k,i, ̟(α∗
k)

m,k,i, ξ(α∗
k)

i = 0, . . . , m.

M,s µi/ν,

i=0 µi.

i=0

k)

k)

k)

.

end for

end if
return P

(1)
OB.

s = 0, . . . , M.

i = 0, . . . , m.

i = 0, . . . , m.

OPTIMAL BARYCENTRIC GEGENBAUER QUADRATURE

21

REFERENCES

[Abramowitz and Stegun (1965)]. Abramowitz, M., Stegun, I. A., 1965. Handbook of Mathematical Functions. Dover.
[Bayin (2006)]. Bayin, S¸ . S., 18 July 2006. Mathematical Methods in Science and Engineering. Wiley-Interscience.
[Berrut et al. (2005)]. Berrut, J.-P., Baltensperger, R., Mittelmann, H. D., 2005. Recent developments in barycentric rational interpolation. In:

Trends and applications in constructive approximation. Springer, pp. 27–51.

[Berrut and Klein (2014)]. Berrut, J.-P., Klein, G., 2014. Recent advances in linear barycentric rational

interpolation. Journal of

Computational and Applied Mathematics 259, 95–107.

[Berrut and Trefethen (2004)]. Berrut, J.-P., Trefethen, L. N., 2004. Barycentric Lagrange interpolation. Siam Review 46 (3), 501–517.
[Coutsias et al. (1996)]. Coutsias, E., Hagstrom, T., Torres, D., 1996. An efﬁcient spectral method for ordinary differential equations with

rational function coefﬁcients. Mathematics of Computation of the American Mathematical Society 65 (214), 611–635.

[Driscoll (2010)]. Driscoll, T. A., 20 August 2010. Automatic spectral collocation for integral, integro-differential, and integrally reformulated

differential equations. Journal of Computational Physics 229 (17), 5980–5998.

[El-Gendi (1969)]. El-Gendi, S. E., 1969. Chebyshev solution of differential, integral, and integro-differential equations. Comput. J. 12 (3),

282–287.

[Elgindy (2013)]. Elgindy, K., 2013. Gegenbauer collocation integration methods: Advances in computational optimal control theory. Ph.D.

thesis, School of Mathematical Sciences, Faculty of Science, Monash University.

[Elgindy et al. (2012)]. Elgindy, K., Smith-Miles, K., Miller, B., Nov 2012. Solving optimal control problems using a Gegenbauer

transcription method. In: Control Conference (AUCC), 2012 2nd Australian. pp. 417–424.

[Elgindy (2009)]. Elgindy, K. T., 15 March 2009. Generation of higher order pseudospectral integration matrices. Applied Mathematics and

Computation 209 (2), 153–161.

[Elgindy (2016)]. Elgindy, K. T., 2016. High-order numerical solution of second-order one-dimensional hyperbolic telegraph equation using

a shifted Gegenbauer pseudospectral method. Numerical Methods for Partial Differential Equations 32 (1), 307–349.

[Elgindy and Smith-Miles (2013a)]. Elgindy, K. T., Smith-Miles, K. A., 2013a. Fast, accurate, and small-scale direct trajectory optimization

using a Gegenbauer transcription method. Journal of Computational and Applied Mathematics 251 (0), 93–116.

[Elgindy and Smith-Miles (2013b)]. Elgindy, K. T., Smith-Miles, K. A., 2013b. Optimal Gegenbauer quadrature over arbitrary integration

nodes. Journal of Computational and Applied Mathematics 242 (0), 82 – 106.

[Elgindy and Smith-Miles (2013)]. Elgindy, K. T., Smith-Miles, K. A., 2013. Solving boundary value problems, integral, and integro-

differential equations using Gegenbauer integration matrices. Journal of Computational and Applied Mathematics 237 (1), 307–325.

[Franc¸olin et al. (2014)]. Franc¸olin, C. C., Benson, D. A., Hager, W. W., Rao, A. V., 2014. Costate approximation in optimal control using

integral Gaussian quadrature orthogonal collocation methods. Optimal Control Applications and Methods.

[Funaro (1987)]. Funaro, D., 1987. A preconditioning matrix for the Chebyshev differencing operator. SIAM J. Numer. Anal. 24 (5), 1024–

[Gander (2005)]. Gander, W., 2005. Change of basis in polynomial interpolation. Numerical linear algebra with applications 12 (8), 769–778.
[Greengard (1991)]. Greengard, L., 1991. Spectral integration and two-point boundary value problems. SIAM J. Numer. Anal. 28 (4), 1071–

1031.

1080.

[Hale and Townsend (2013)]. Hale, N., Townsend, A., 2013. Fast and accurate computation of Gauss–Legendre and Gauss–Jacobi quadrature

nodes and weights. SIAM Journal on Scientiﬁc Computing 35 (2), A652–A674.

[Higham (2004)]. Higham, N. J., 2004. The numerical stability of barycentric Lagrange interpolation. IMA Journal of Numerical Analysis

[Kopriva (2009)]. Kopriva, D. A., 2009. Implementing Spectral Methods for Partial Differential Equations: Algorithms for Scientists and

24 (4), 547–556.

Engineers. Springer, Berlin.

[Luo and Du (2013)]. Luo, X., Du, Q., 2013. An unconditionally stable fourth-order method for telegraph equation based on Hermite

interpolation. Applied Mathematics and Computation 219 (15), 8237 – 8246.

[Olver and Townsend (2013)]. Olver, S., Townsend, A., 2013. A fast and well-conditioned spectral method. SIAM Review 55 (3), 462–489.
[Szeg¨o (1975)]. Szeg¨o, G., 1975. Orthogonal Polynomials. Vol. 23. Am. Math. Soc. Colloq. Pub.
[Tang (2015)]. Tang, X., 2015. Efﬁcient and stable generation of higher-order pseudospectral integration matrices. Applied Mathematics and

Computation 261, 60–67.

[Themistoclakis and Vecchio (2015)]. Themistoclakis, W., Vecchio, A., 2015. On the numerical solution of some nonlinear and nonlocal

boundary value problems. Applied Mathematics and Computation 255, 135–146.

[Trefethen et al. (2011)]. Trefethen,

L.,

et

al.,

2011.

Chebfun

version

4.2,

the

Chebfun

development

team.

[Viswanath (2015)]. Viswanath, D., 2015. Spectral integration of linear boundary value problems. Journal of Computational and Applied

http://www.maths.ox.ac.uk/chebfun/.

Mathematics 290 (0), 159 – 173.

[Wang et al. (2014a)]. Wang, H., Huybrechs, D., Vandewalle, S., 2014a. Explicit barycentric weights for polynomial interpolation in the roots

or extrema of classical orthogonal polynomials. Mathematics of Computation 83 (290), 2893–2914.

[Wang and Xiang (2012)]. Wang, H., Xiang, S., 2012. On the convergence rates of Legendre approximation. Mathematics of Computation

81 (278), 861–877.

[Wang et al. (2014b)]. Wang, Z. Q., Jiang, J., Tang, B. T., Zheng, W., 2014b. Numerical solution of bending problem for elliptical plate using
differentiation matrix method based on barycentric Lagrange interpolation. In: Applied Mechanics and Materials. Vol. 638. Trans Tech
Publ, pp. 1720–1724.

22

KAREEM T. ELGINDY

Algorithm 10 Construction of the Optimal Barycentric GIM for Any Symmetric Set of Integration Points
Require: Positive integer numbers n, mmax; positive even integer m; positive real number r ∈ [1, 2]; the set of the

k=0; relatively small positive number ε; αa ∈ {0, 0.5}; αb ∈ {−0.5 + ε, αa}.

integration nodes {xk}n
if m > mmax then

n,i , ̟(α)

n,ion

.

i=0

(1)

α ← αa.
if m = n then
Calculate the set of GG points and quadrature weights,nx(α)
Calculate P(1)
B using Algorithm 8.
(1)
B .
OB ← P
P
else
M ← ⌈(m − 1)/2⌉.
;nx(0.5)
m,iom
Calculatenx(α)
M,s + xk − 1(cid:17) /2,
M,s ←(cid:16)(xk + 1) x(0.5)
ˆx(0.5)
for s = 0 to M do
m,i(cid:17) ,
m,i/(cid:16)ˆx(0.5)
M,s − x(α)
µi ← ξ(α)
ν ←Pm
pOB,k,i ← pOB,k,i + ̟(0.5)
end for
pOB,k,i ← (xk + 1) pOB,k,i/2,

M,soM

for k = 0 to n do

M,s , ̟(0.5)

s = 0, . . . , M.

m,i, ̟(α)

i = 0, . . . , m.

i = 0, . . . , m.

i = 0, . . . , m.

m,i, ξ(α)

M,s µi/ν,

i=0 µi.

s=0

i=0

.

end for

end if

else

k=0 then

M ← ⌈(m − 1)/2⌉.
if mod(M, 2) = 0 ∧ 1 ∈ {xk}n
M ← M + 1.
end if
M,soM
Calculatenx(0.5)
if k ≤ ⌈n/2⌉ − δ n+1
2 ,⌈ n+1
2 ⌉
k,m(α).
η2

for k = 0 to n do

M,s , ̟(0.5)

s=0

.

then

.

k)

(α∗

n−k)

i=0
k)

−1/2<α≤r

(α∗
m,n−k,i, ξ

m,k,i, ξ(α∗
k)

m,k,i, ̟(α∗
k)
n−k)

k ← argmin
α∗
if α∗
k ∈ (−0.5,−0.5 + ε) then
k ← αb.
α∗
end if
Calculatenz(α∗
nz
m,n−k,iom
end if
M,s ←(cid:16)(xk + 1) x(0.5)
ˆx(0.5)
for s = 0 to M do
m,k,i/(cid:16)ˆx(0.5)
µi ← ξ(α∗
ν ←Pm
pOB,k,i ← pOB,k,i + ̟(0.5)
end for
pOB,k,i ← (xk + 1) pOB,k,i/2,

m,k,iom
i=0 ←nz(α∗
M,s + xk − 1(cid:17) /2,
M,s − z(α∗

m,k,i(cid:17) ,

M,s µi/ν,

i=0 µi.

k)

k)

end for

end if
return P(1)
OB.

m,k,i, ξ(α∗
k)

m,k,iom

i=0

.

s = 0, . . . , M.

i = 0, . . . , m.

i = 0, . . . , m.

i = 0, . . . , m.

FIGURES

23

α =0.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

α =0.75

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.18

0.16

0.14

i

e
m
T
U
P
C

 

0.12

0.1

0.08

0.06

50

100

150

n

α =1.75

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.04

0.02

0

0

0.2

0.18

0.16

0.14

50

100

150

n

α =2.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

i

e
m
T
U
P
C

 

0.12

0.1

0.08

0.06

0.04

0.02

0

0

50

100

150

n

α =-0.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.18

0.16

0.14

α =0.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.2

0.18

0.16

0.14

α =0.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.2

0.18

0.16

0.14

0.2

0.18

0.16

0.14

i

e
m
T
U
P
C

 

0.12

0.1

0.08

0.06

0.04

0.02

0

0

0.2

0.18

0.16

0.14

i

e
m
T
U
P
C

 

0.12

0.1

0.08

i

e
m
T
U
P
C

 

0.12

0.1

0.08

i

e
m
T
U
P
C

 

0.12

0.1

0.08

50

100

150

n

α =1.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.06

0.04

0.02

0

0

0.2

0.18

0.16

0.14

50

100

150

n

α =1.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.06

0.04

0.02

0

0

0.2

0.18

0.16

0.14

i

e
m
T
U
P
C

 

0.12

0.1

0.08

i

e
m
T
U
P
C

 

0.12

0.1

0.08

i

e
m
T
U
P
C

 

0.12

0.1

0.08

0.06

0.04

0.02

0

0

0.18

0.16

0.14

50

100

150

n

α =1.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

i

e
m
T
U
P
C

 

0.12

0.1

0.08

0.06

0.06

0.04

0.02

0

0

0.06

0.04

0.02

0

0

50

100

150

n

0.06

0.04

0.02

0

0

50

100

150

n

0.04

0.02

0

0

50

100

150

n

50

100

150

n

Figure 1. The average elapsed CPU time (in seconds) in 10 runs required for the construction of the basis GIM, ˆP(1), derived
by [Elgindy and Smith-Miles (2013b)] and the barycentric GIM, P(1)
B using n = 20, 60, 80, 120; 140, and α = −0.25(0.25)2.

24

FIGURES

n = 20; α =-0.25

×10-16

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

n = 20; α =0.00

×10-16

2.5

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

2

1.5

E
A

1

0.5

4

3.5

3

2.5

E
A

2

1.5

1

0.5

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

2

1

0
-1

n = 20; α =0.25

×10-16

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

7

6

5

4
E
A
3

n = 20; α =0.50

×10-16

3

n = 20; α =0.75

×10-16

3.5

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

2.5

2

E
A

1.5

1

0.5

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

3

2.5

2

E
A

1.5

1

0.5

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

n = 20; α =1.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

×10-16

2

1.8

1.6

1.4

1.2

E
A

1

0.8

0.6

0.4

0.2

9

8

7

6

5
E
A
4

3

2

1

n = 20; α =1.25

×10-16

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

×10-15

1.2

n = 20; α =1.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

1

0.8

E
A

0.6

0.4

0.2

n = 20; α =1.75

×10-15

1

n = 20; α =2.00

×10-15

2

0.9

0.8

0.7

0.6

E
A

0.5

0.4

0.3

0.2

0.1

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

1.8

1.6

1.4

1.2

E
A

1

0.8

0.6

0.4

0.2

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

(a)

(b)

Figure 2. The AEs of the barycentric and basis quadratures for f1 on [−1, 1] for α = −0.25(0.25)2. Figures 2(a) and 2(b) show

the results for n = 20; 80, respectively.

FIGURES

25

n = 20; α =-0.25

×10-15

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

3

2.5

2

E
A

1.5

1

0.5

n = 20; α =0.00

×10-16

5

n = 20; α =0.25

×10-15

1.2

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

4.5

4

3.5

3

E
A

2.5

2

1.5

1

0.5

1

0.8

E
A

0.6

0.4

0.2

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

n = 20; α =0.75

×10-16

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

n = 20; α =0.50

×10-16

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

9

8

7

6

5
E
A
4

3

2

1

9

8

7

6

5
E
A
4

3

2

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

n = 20; α =1.75

×10-15

3.5

n = 20; α =2.00

×10-15

6.5

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0
x

0.5

1

n = 20; α =1.00

×10-16

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

9

8

7

6

5
E
A
4

3

2

1

1.6

1.4

1.2

1

E
A

0.8

0.6

0.4

0.2

n = 20; α =1.25

×10-15

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

×10-15

2.5

n = 20; α =1.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

2

1.5

E
A

1

0.5

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

3

2.5

E
A

2

1.5

6

5.5

5

E
A

4.5

4

3.5

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

1
-1

-0.5

0
x

0.5

1

3
-1

-0.5

(a)

(b)

Figure 3. The AEs of the barycentric and basis quadratures for f2 on [−1, 1] for α = −0.25(0.25)2. Figures 3(a) and 3(b) show

the results for n = 20; 80, respectively.

26

FIGURES

n = 20; α =-0.25

×10-3

1.2

n = 20; α =0.00

×10-3

1.2

n = 20; α =0.25

×10-3

1

n = 20; α =0.50

×10-3

1

n = 20; α =0.75

×10-3

1

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

1

0.8

E
A

0.6

0.4

0.2

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

1

0.8

E
A

0.6

0.4

0.2

0.9

0.8

0.7

0.6

E
A

0.5

0.4

0.3

0.2

0.1

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.9

0.8

0.7

0.6

E
A

0.5

0.4

0.3

0.2

0.1

0.9

0.8

0.7

0.6

E
A

0.5

0.4

0.3

0.2

0.1

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

n = 20; α =1.00

×10-3

1.2

n = 20; α =1.25

×10-3

1.4

n = 20; α =1.50

×10-3

2

n = 20; α =1.75

×10-3

3.2

1

0.8

E
A

0.6

0.4

0.2

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

1.2

1

0.8

E
A

0.6

0.4

0.2

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

1.8

1.6

1.4

E
A

1.2

1

0.8

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

3

2.8

2.6

E
A

2.4

2.2

2

1.8

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

n = 20; α =2.00

×10-3

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

5.2

5

4.8

4.6

4.4

E
A

4.2

4

3.8

3.6

3.4

0
-1

-0.5

0
x

0.5

1

0
-1

-0.5

0
x

0.5

1

0.6

-1

-0.5

0
x

0.5

1

1.6

-1

-0.5

0
x

0.5

1

3.2

-1

-0.5

0
x

0.5

1

(a)

(b)

Figure 4. The AEs of the barycentric and basis quadratures for f3 on [−1, 1] for α = −0.25(0.25)2. Figures 4(a) and 4(b) show

the results for n = 20; 80, respectively.

FIGURES

27

α =-0.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =0.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =0.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =0.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =0.75

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

0.1

0.05

0.1

0.05

0.1

0.05

0.1

0.05

0.1

0.05

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

α =1.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =1.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =1.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =1.75

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

α =2.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.4

0.35

0.3

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

i

e
m
T
U
P
C

 

0.25

0.2

0.15

0.1

0.05

0.1

0.05

0.1

0.05

0.1

0.05

0.1

0.05

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

Figure 5. The average elapsed CPU time in 10 runs required for the construction of the basis GIM, ˆP(1), derived by

[Elgindy and Smith-Miles (2013b)] and the barycentric GIM, P(1)

B , using n = 20(20)160, and α = −0.25(0.25)2.

α =-0.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.25

0.2

α =0.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.3

0.25

α =0.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.25

0.2

α =0.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.3

0.25

α =0.75

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.25

0.2

i

e
m
T
U
P
C

 

0.15

0.1

i

e
m
T
U
P
C

 

0.2

0.15

0.1

i

e
m
T
U
P
C

 

0.15

0.1

i

e
m
T
U
P
C

 

0.2

0.15

0.1

i

e
m
T
U
P
C

 

0.15

0.1

0.05

0.05

0.05

0.05

0.05

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

α =1.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.25

0.2

α =1.25

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.3

0.25

α =1.50

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.25

0.2

α =1.75

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.25

0.2

α =2.00

Basis GIM, ˆP(1)
Barycentric GIM, P

(1)
B

0.3

0.25

i

e
m
T
U
P
C

 

0.15

0.1

i

e
m
T
U
P
C

 

0.2

0.15

0.1

i

e
m
T
U
P
C

 

0.15

0.1

i

e
m
T
U
P
C

 

0.15

0.1

i

e
m
T
U
P
C

 

0.2

0.15

0.1

0.05

0.05

0.05

0.05

0.05

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

0

0

50

100
n

150

200

Figure 6. The average elapsed CPU time in 10 runs required for the construction of the basis GIM, ˆP(1), derived by

[Elgindy and Smith-Miles (2013b)] and the barycentric GIM, P

(1)
B using n = 40, 100; 160, and α = −0.25(0.25)2.

28

FIGURES

×10-13

4.5

4

3.5

3

HGIM
HBGIM

E
A
M

2.5

2

1.5

1

0.5

0
-0.4

-0.2

0

0.2

0.4

0.6

0.8

1

α

Figure 7. The numerical experiments of

the present method on Example 1 for
{(10, 14, α)}1

α=−0.4(0.1) ⊂ F(20)
OB .

the set of

feasible 3-tuples

×10-6

6.5

HBGIM (n =6)

6

5.5

5

4.5

E
A
M

4

3.5

3

2.5

×10-7

11

10

E
A
M

9

8

7

6

5

HBGIM (n =7)

HBGIM (n =9)

×10-8

4

3.8

3.6

3.4

3.2

E
A
M

3

2.8

2.6

2.4

2
-0.4

-0.2

0

0.2

0.4

0.6

0.8

1

4
-0.4

-0.2

0

0.2

0.4

0.6

0.8

1

2.2

-0.4

-0.2

0

0.2

0.4

0.6

0.8

1

α

α

α

Figure 8. The MAEs of the HBGIM for {(n, α) : n = 6, 7, 9; α = −0.4(0.1)1} ⊂ FB.

HBGIM (n = 9)
IS (n = 256)

5

4

3

2

1

n
d
c

HBGIM (n = 6)
IS (n = 32)

6

5

4

n
d
c

3

2

1

HBGIM (n = 7)
IS (n = 64)

7

6

5

4

3

2

1

n
d
c

0
-0.5

0

0.5
α

1

1.5

0
-0.5

0

0.5
α

1

1.5

0
-0.5

0

0.5
α

1

1.5

Figure 9. The cdn for the HBGIM and the IS of [Themistoclakis and Vecchio (2015)].

FIGURES

29

Figure 10. The numerical simulation of the present method on Example 3. The ﬁgure shows the plots of the exact solution
u(x, t) on D2
1,1 (upper left), its approximation P8,8u(x, t) (upper right), the absolute error function E8,8(x, t) (lower left), and
its values at the ﬁnal time, E8,8(x, 1) (lower right). The barycentric matrix and its optimal partner are both square of size 9.

The plots were generated using 100 linearly spaced nodes in the x- and t-directions from 0 to 1.

30

TABLES

Example 3

[Luo and Du (2013)]’s method [Luo and Du (2013)]

Present method

(h)/(M AE); k = 1/48
(1/12)/(3.702 × 10−06)
(1/24)/(2.310 × 10−07)
(1/48)/(1.451 × 10−08)
(1/96)/(9.952 × 10−10)

(n)/(M AE)

(8)/(3.303 × 10−07)
(10)/(1.596 × 10−09)
(12)/(5.145 × 10−12)
(14)/(1.849 × 10−14)

Table I. A comparison of Example 3 between [Luo and Du (2013)]’s fourth-order method [Luo and Du (2013)] and the current
method. The table lists the MAEs at t = 1. The results of [Luo and Du (2013)]’s method [Luo and Du (2013)] are quoted from

Ref. [Luo and Du (2013)].

