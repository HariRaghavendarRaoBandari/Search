Generalized threshold-based epidemics in random

graphs: the power of extreme values

Michele Garetto
University of Torino

michele.garetto@unito.it

Emilio Leonardi
Politecnico di Torino
leonardi@polito.it

Giovanni-Luca Torrisi

IAC-CNR

torrisi@iac.rm.cnr.it

6
1
0
2

 
r
a

 

M
5
1

 
 
]
I
S
.
s
c
[
 
 

1
v
3
4
6
4
0

.

3
0
6
1
:
v
i
X
r
a

ABSTRACT
Bootstrap percolation is a well-known activation process
in a graph, in which a node becomes active when it has at
least r active neighbors. Such process, originally studied
on regular structures, has been recently investigated also
in the context of random graphs, where it can serve as a
simple model for a wide variety of cascades, such as the
spreading of ideas, trends, viral contents, etc. over large
social networks.
In particular, it has been shown that
in G(n, p) the ﬁnal active set can exhibit a phase transi-
tion for a sub-linear number of seeds. In this paper, we
propose a unique framework to study similar sub-linear
phase transitions for a much broader class of graph mod-
els and epidemic processes. Speciﬁcally, we consider i)
a generalized version of bootstrap percolation in G(n, p)
with random activation thresholds and random node-to-
node inﬂuences; ii) diﬀerent random graph models, in-
cluding graphs with given degree sequence and graphs
with community structure (block model). The common
thread of our work is to show the surprising sensitivity
of the critical seed set size to extreme values of distribu-
tions, which makes some systems dramatically vulnerable
to large-scale outbreaks. We validate our results running
simulation on both synthetic and real graphs.

1. INTRODUCTION AND RELATED WORK
Many fundamental phenomena occurring in various kinds

of complex systems, ranging from technological networks
(e.g., transportation, communication, energy), to biologi-
cal networks (e.g., neural, ecological, biochemical) and so-
cial networks (in the real world or over the Internet) can
be described by dynamical processes taking place over the
underlying graph representing the system structure. Such
processes modify over time the internal state of nodes
and spread across the network following the edges of the
graph.

One of the most widely studied example of such dy-
namical processes is the epidemic process, which starts
from an initial set of infected nodes (usually referred to
as seeds, chosen either deterministically or random) that

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
To appear at SIGMETRICS ’16, June 14–18, 2016, Antibes Juan-Les-Pins,
France.
c(cid:13) 2016 ACM. ISBN 978-1-4503-4266-7/16/06. . . $15.00
DOI: http://dx.doi.org/XXXX.XXXX

can pass the infection to other (susceptible) nodes (under
many possible models), possibly causing a major outbreak
throughout the network.

In our work we consider a generalized model for the
spreading of an ‘epidemic’, in which nodes are charac-
terized by an infection threshold r (either deterministic
or random), and become infected when they collect from
their neighbors an amount of inﬂuence larger than r. A
special case of our model is the well known bootstrap per-
colation process, in which r is an integer (r ≥ 2) and each
edge exerts an inﬂuence equal to one: simply put, a node
becomes infected when it has at least r infected neighbors.
Bootstrap percolation has a rich history, having been
initially proposed in the area of statistical physics [1]. Due
to its many physical applications (see [2] for a survey) it
has been primarily studied over the years in the case of
regular structures (lattices, grids, trees), most notably in
a series of papers by Balogh and Bollob´as (e.g., [3]). More
recently, bootstrap percolation has been investigated also
in the context of random graphs, which is the focus of this
paper.
In our work we are especially interested in epi-
demics occurring on very large, irregular structures such
as those representing friendship relationships among peo-
ple. This interest is motivated by the great popularity
gained by online social platforms (e.g., Facebook, Twit-
ter, Instagram, etc.), which, coupled with the increasing
availability of always-on connectivity through mobile per-
sonal devices, has created an unprecedented opportunity
for the rapid dissemination of various kinds of news, ad-
vertisements, viral videos, as well as a privileged environ-
ment for online discussion, creation and consolidation of
beliefs, political opinions, memes and many other forms
of collective reasoning. In this respect, bootstrap percola-
tion provides a simple, primitive model that can be used
to understand the diﬀusion of a generic ‘idea’ which re-
quires a certain amount of ‘reinforcement’ from neighbors
to be locally adopted.

Some results have already been obtained for particu-
lar random graph models. In particular, [4] ﬁrst consid-
ered bootstrap percolation in the random regular graph
G(n, d), while [5] has extended the analysis to random
graphs with given vertex degrees (conﬁguration model).
The above two papers assume that node degree is either
ﬁxed [4] or it has both ﬁnite expectation and ﬁnite sec-
ond moment [5], implying that the cardinality of the seed
set must scale linearly with n to observe a non-negligible
growth of the epidemics. Both papers make use of the dif-
ferential equation method to analyze the discrete Markov
Chain associated with the epidemic process. The analysis
in [5] also allows the threshold to vary among the nodes.

A very diﬀerent technique has been recently proposed in
[6] to study bootstrap percolation in Erd¨os–R´enyi G(n, p)
graphs. This technique allows to analyze also scenarios in
which a sharp phase transition occurs with a number of
seeds which is sublinear in n: below a critical seed set
size, for which one can get a closed-form asymptotic ex-
pression, the infection essentially does not evolve, whereas
above the critical size n−o(n) nodes get infected with high
probability1.
In G(n, p), this behavior is possible only
when the average node degree itself grows with n (i.e.,
p ≫ 1/n). The technique proposed in [6] has been ap-
plied by [7] to power-law random graphs generated by the
Chung-Lu model (with power law exponent 2 < β < 3),
obtaining the interesting result that, under bounded av-
erage node degree, a sublinear seed set size is enough to
reach a linear fraction of the nodes.

Also our work started from the approach proposed in
[6], which provides a simple and elegant way to explore
phase transitions taking place at sub-linear scale. To op-
erate at this scale, we let, if needed, the average node
degree to grow with n, since this can be considered an
acceptable assumption in many cases. Indeed, real social
networks (and in particular online social networks), which
evolve over time with the addition/removal of nodes/edges,
often exhibit the so called densiﬁcation phenomenon [8],
meaning that the number of edges grows faster than the
number of nodes (hence the average degree grows with
time)2.

The main thread of our work is to show the high ‘vulner-
ability’ (in terms of critical number of seeds) that arises
in networks when we add inhomogeneities in any one of
many possible ways (i.e., by adding variability in thresh-
olds, edge weights, node degree, or network structure).
Although this eﬀect has already been observed in epi-
demic processes, the way in which inhomogeneities af-
fect bootstrap percolation can be so dramatic that just
extreme values of distributions (and not their particular
shape) can determine the critical size of the seed set. We
believe that this result, which apparently has not been
recognized before, is of fundamental importance to better
understand the dynamics of epidemics in complex sys-
tems.

2. NOTATION AND PRELIMINARIES

We start introducing some background material and
notation taken from [6], which is necessary to follow the
rest of the paper. As already mentioned, [6] provides a full
picture of standard bootstrap percolation in Erd¨os–R´enyi
graphs G(n, p). Nodes are characterized by a common
integer threshold r ≥ 2, and the process starts with an
initial set A(0) of vertices (the seeds), of cardinality a,
which are chosen uniformly at random among the nodes.

1Throughout this paper we shall use the following (stan-
dard) asymptotic notation. Let f, g : R → R be two
functions. We write: f (x) = o(g(x)) or f (x) ≪ g(x)
f (x)
and g(x) = ω(f (x)) or g(x) ≫ f (x) if limx→∞
g(x) = 0;
f (x) = O(g(x)) if there exist K > 0, x0 ∈ R:
|f (x)| ≤
f (x)
K|g(x)|, for any x ≥ x0; f (x) ∼ g(x) if limx→∞
g(x) = 1.
in this paper all limits are
Unless otherwise speciﬁed,
taken as n → ∞.
2in practice, asymptotic results provide very good predic-
tions of what happens in large (but ﬁnite) systems when-
ever the average degree is not too small, say signiﬁcantly
larger than r.

We will use the same terminology adopted in [6], where
infected nodes are called ‘active’, whereas non-infected
nodes are said to be inactive. An inactive node becomes
active as soon as at least r of its neighbors are active. Note
that seeds are declared to be active irrespective of the
state of their neighbors. Active nodes never revert to be
inactive, so the set of active nodes grows monotonically.

The bootstrap percolation process naturally evolves through

generations of vertices that become active. The ﬁrst gen-
eration is composed of all those vertices which are acti-
vated by the seeds. The second generation of active nodes
is composed by all the nodes which are activated by the
joint eﬀect of seeds and ﬁrst generation nodes, etc. The
process stops when either an empty generation is obtained
or all nodes are active.

Now, it turns out that there is a useful reformulation
of the problem that makes the process especially simple
to analyze. This reformulation, which was originally pro-
posed in [9], consists in changing the time scale, by in-
troducing a virtual (discrete) time step t ∈ N, such that
a single active node is ‘explored’ at each time step (if
the process has not yet stopped). By so doing, we forget
about the generations, obtaining a more amenable pro-
cess which is equivalent to the original one, in terms of
the ﬁnal size of the epidemic.

The above reformulation requires to introduce, besides
the set A(t) of nodes which are active at time t, another
set Z(t) ⊆ A(t), referred to as used vertices, which is
the subset of active vertices, of cardinality t, explored up
to time t. More precisely, at time zero the set A(0) is
initialized to the seed set, while the set of used vertices
is initialized to the empty set: Z(0) = ∅. Each node i is
given a counter Mi(t) ∈ N, initialized to 0 at time t = 0.
At time t = 1 we arbitrarily choose a node z(1) ∈ A(0)
and we ‘ﬁre’ its edges, incrementing by one the counter of
all its neighbors. By so doing, we use node z(1), adding
it to the set of used nodes, so that Z(1) = {z(1)}. We
continue recursively: at each time t, we arbitrarily se-
lect an active node which has not been already used, i.e.,
z(t) ∈ A(t−1)\ Z(t−1), and we distribute new ‘marks’ to
its neighbors, which are not in Z(t−1), incrementing their
counters. Node z(t) is added to the set of used vertices:
Z(t) = Z(t− 1)∪{z(t)}. We then check whether there are
some inactive vertices, denoted by set ∆A(t), that become
active for eﬀect of the marks distributed at time t (i.e.,
vertices whose counter reaches r at time t). Such newly
activated vertices are added to the set of active vertices:
A(t) = A(t − 1) + ∆A(t) (note that no vertices can be
activated at time 1, being r ≥ 2).
The process stops as soon as Z(t) = A(t), i.e. when
all active nodes have been used. Let T = min{t : Z(t) =
A(t)}. By construction, the ﬁnal size A∗ of the epidemic
is exactly equal to T : A∗ := |A(T )| = |Z(T )| = T .
The above reformulation of the problem is particularly
useful because the counter associated to each inactive
node can be expressed as:

Mi(t) =

Ii(s)

tXs=1

(1)

i.e., as the sum of t independent Bernoulli random vari-
ables Ii(s) of average p, each associated with the exis-
tence/non existence of an edge in the underlying graph,
between the node used at time s and node i. Indeed, it is
perfectly sound to ‘reveal’ the edges going out of a node

just when the node itself is used (principle of deferred
decision). Moreover we can, for convenience, express the
counters of all of the nodes at any time t ≥ 1 just like
(1), without aﬀecting the analysis of the ﬁnal size of the
epidemics. Indeed, by so doing we introduce extra marks
that are not assigned in the real process (where each edge
is revealed at most one, in a single direction), speciﬁcally,
when a used node is ‘infected back’ by a neighboring used
node. However, this ‘error’ does not matter, since it has
no impact on the percolation process. Note that counters
Mi(t) expressed in such a way are independent from node
to node.

The dynamics of the epidemic process are determined
by the behavior of the number A(t) of ‘usable’ nodes (i.e.,
active nodes which have not been already used):

A(t) = |A(t) \ Z(t)| = a − t + S(t)

where S(t) represents the number of vertices, which are
not in the original seed set, that are active at time t.
Note that the ﬁnal size of the epidemics equals the ﬁrst
time T at which A(T ) = 0. Moreover, by construction,
the number of used vertices at time t equals t. Now, let
π(t) := P(M1(t) ≥ r) = P(Bin(t, p) ≥ r) be the probabil-
ity that an arbitrary node not belonging to the seed set is
active at time t. There are n − a such nodes, each active
independently of others, hence S(t) ∈ Bin(n − a, π(t)).
In essence, we need to characterize trajectories of pro-
cess A(t) which, besides a deterministic component a − t
(decreasing with time), includes a random variable S(t)
which is binomially distributed, with time-dependent pa-
rameter π(t) (increasing with time):

A(t) = a − t + Bin(n − a, P(Bin(t, p) ≥ r))

(2)

In particular, whenever we can prove that, for a given t,
P((inf τ ≤t A(t)) < 0) → 0, then we can conclude that at
least t vertices get infected w.h.p. Similarly, if, for a given
t, P(A(t) < 0) → 1, we can conclude that the percolation
terminates w.h.p. before t, thus the ﬁnal number of in-
fected vertices will be smaller than t. We now present a
simpliﬁed form of the main theorem in [6], together with
a high-level description of its proof.

Theorem 2.1

(Janson [6]). Consider bootstrap per-
colation in G(n, p) with r ≥ 2, and a number a of seeds
selected uniformly at random among the n nodes. Let
p = p(n) be such that p = ω(1/n), p = o(n−1/r). Deﬁne:

tc

ac

:= (cid:18) (r − 1)!
npr (cid:19)1/(r−1)
r(cid:19) tc
:= (cid:18)1 −

1

(3)

(4)

If a/ac → α < 1 (subcritical case), then w.h.p. the ﬁnal
size is A∗ < 2a. If a/ac → α ≥ 1 + δ, for some δ > 0
(supercritical case), then w.h.p. A∗ = n − o(n).
Note that, under the above assumptions on p(n), the ‘crit-
ical time’ tc is such that both tc = ω(1) and tc = o(n),
and the same holds for the critical number of seeds ac,
which diﬀers from tc just by the constant factor (1− 1/r),
i.e., we get a phase transition for a sublinear number of
seeds.

The methodology proposed in [6] to obtain the above
result is based on the following idea: A(t) is suﬃciently
concentrated around its mean that we can approximate
it as A(t) ≈ E(A(t)) = a − t + (n − a)π(t). Now, for

a wide range of values of t (i.e., whenever pt → 0, and
in particular around tc), π(t) can be expressed as π(t) =
tr pr
r! (1 + O(pt + t−1)). Therefore function E(A(t)) has a
clear trend: it starts from a at t = 0 and ﬁrst decreases
up to a minimum value reached at t ≈ tc, after which it
grows to a value of the order of n. Hence, time tc acts
as a sort of bottleneck: if E(A(tc)) is positive (negative),
we are in the supercritical (subcritical) case. Finally, we
can compute the asymptotic value of tc by ﬁnding the
minimum of function f (t) = n tr pr

The result then follows considering that, starting from
a seeds, we get E(A(tc)) = a − ac + o(ac), and that by
changing a we deterministically move up or down the pro-
cess A(t). Hence, if we assume that a/ac is asymptotically
bounded away from 1 we obtain a suﬃcient ‘guard factor’
around the trajectory of the mean process to conclude
that the real process is either supercritical or subcritical
(see Fig. 1).

r! − t.

]
)
t
(

A
[
E

 
,
s
e
d
o
n

 
e
l
b
a
s
u

 
f
o

 
r
e
b
m
u
n

 
e
g
a
r
e
v
A

a > ac
a = ac

a < ac

 0

tc

time step, t

Figure 1: Example of (asymptotic) trajectories of
the mean number of usable nodes, E(A(t)), with
r = 3. The plot also illustrates by shaded regions
the concept of ‘guard zone’.

We emphasize that in [6] authors use a martingale ap-

proach to show that A(t) is suﬃciently concentrated around
its mean, which allows them to establish their results
w.h.p.

As last premise, it is better to clarify why we assume
r ≥ 2. The reason is that the case in which a node can be
infected by just a single neighbor is degenerate, and leads
to the trivial fact that a single seed is enough to infect
the entire connected components it belongs to. Hence,
one has to apply a totally diﬀerent set of tools [10] to
characterize the ﬁnal size of the epidemic. This case,
however, is not interesting to us, since the networks of
many real systems are connected by construction, or they
at least have a giant connected component. Hence, no
phase transitions occur here in the number of seeds.

3. SUMMARY OF CONTRIBUTIONS

In this work we extend the approach of [6] along three
‘orthogonal’ directions that allow us to study more gen-
eral threshold-based epidemic processes in inhomogeneous
scenarios.

1. We consider a generalized version of bootstrap per-
in which thresholds of nodes
colation in G(n, p),
are i.i.d.
random variables Ri > 0, and infected
nodes transmit a random amount of infection to
their neighbors. Speciﬁcally, we assume that i.i.d.
weights Wij are assigned to the edges of the graph,
representing the amount of infection transmitted through

P[W  ]
ij

D1

D3

D

2

P[R ]i

D

4

−3

−2

−1

0

1 2 3 4 5 6 7 8 9 10

11

Figure 2: Examples of distributions of Wij and Ri
leading to the same (asymptotic) critical number
of seeds ac.

the edge. For this case, we obtain the asymptotic
closed form expression of the critical number of seeds,
and an exponential law for the probability that the
process is supercritical or subcritical, strengthen-
ing the results in [6] (where results hold, instead,
w.h.p.). The most signiﬁcant outcome of our analy-
sis is that the critical number of seeds typically does
not depend on the entire distribution of Ri and Wij,
but just on values taken in proximity of the lower
(for Ri) and upper (for Wij) extreme of their sup-
port. For instance, in Figure 2 we show examples
of two (discrete) distributions for Wij, labelled D1
and D2, and two (discrete) distributions for Ri, la-
belled D3 and labelled D4.
It turns out that any
combination of them (Da, Db), with a ∈ {1, 2} and
b ∈ {3, 4} leads to the same asymptotic critical num-
ber of seeds ac. Note that the various distributions
have diﬀerent means, and that one of them (D2) has
even negative mean.

2. We extend the problem reformulation originally pro-
posed in [9], where a single node is used at each
time, to a similar reformulation in which a single
edge is used at a time. This view is more conve-
nient to apply the approach of [6] to other random
graph models.
In particular, we consider graphs
with given degree sequence (conﬁguration model),
obtaining a closed-form expression of the asymp-
totic critical number of seeds. We then compute
the scaling order of ac for the particular (but most
signiﬁcant) case of power-law degree sequence, con-
sidering a wider range of parameters with respect to
the one studied by [7]. Again, we observe the inter-
esting phenomenon that in some cases the precise
shape of the degree distribution (i.e., the power law
exponent) does not matter, since ac is determined
by the largest degree.

3. We extend the analysis to the so-called block model,
which provides a simple way to incorporate a com-
munity structure into a random graph model while
preserving the analytical tractability of G(n, p). We
observe once more the interesting eﬀect that the
critical number of seeds might be determined by a
single entry of the matrix of inter- (or intra-) com-
munity edge probabilities (i.e., the most vulnerable
community).

Although we consider (for simplicity) the above three
forms of inhomogeneity ‘in isolation’, it is not particu-
larly diﬃcult to combine them, if desired.
Indeed, we
show that all extensions above can be studied within a

unique framework. We emphasize that in this paper we
generally assume that seeds are selected uniformly at ran-
dom among the nodes, without knowledge of thresholds,
weights, degrees, network structure. This diﬀerentiates
our analysis from existing works addressing the so called
inﬂuence maximization problem, i.e., ﬁnding the seed set
that maximizes the ﬁnal size of the epidemic (e.g., [11]).
We observe that in the inﬂuence maximization frame-
work many authors have already considered generalized
models taking into account the impact of edge weights,
node-speciﬁc thresholds, etc. (e.g., variants of the linear
threshold model proposed in [12]). However, to the best of
our knowledge, asymptotic properties of such generalized
models are still not well understood. This paper makes a
step forward in this direction analysing sublinear phase-
transitions occurring when seeds are allocated uniformly
at random in the network.

Interestingly, in all cases that we consider the epidemic
is triggered among the most vulnerable nodes, and then
it spreads out hitting less and less vulnerable components
of the network. This fact can have dramatic consequences
on the minimum number of seeds that can produce a
network-wide outbreak.

In the following sections we present the above three
contributions one at a time. Simulation experiments are
presented along the way, to validate and better illustrate
our analytical results.

4. GENERALIZED BOOTSTRAP PERCO-

LATION IN G(n, p)

4.1 System model

We start considering Erd¨os–R´enyi random graphs G(n, p),

extending basic bootstrap percolation to the case in which
node thresholds and/or node-to-node inﬂuences are i.i.d
random variables. We denote by Ri > 0 the (real-valued)
threshold associated to node i. We then assign a (real-
valued) random weight Wij to each edge of the graph,
representing the inﬂuence that one node exerts on the
other (see later). Node i becomes active when the sum
of the weights on the edges connecting i to already active
neighbors becomes greater than or equal to Ri.

Recall that each edge of the graph is ‘used’ by the
process at most once. Hence our analysis encompasses
both the ‘symmetric’ case in which the inﬂuence (possi-
bly) given by i to j equals the inﬂuence (possibly) given by
j to i, and the ‘asymmetric’ case in which weights along
the two directions of an edge are diﬀerent (i.i.d.) random
variables. In both cases, we can consider a single random
weight on each edge.

We do not pose particular restrictions to the distribu-
tions of Ri and Wij , except for the following one, which
avoids the degenerate case in which a node can get in-
fected by a single edge (the case r = 1 in basic bootstrap
percolation):

ess inf Ri > ess sup Wij > 0.

(5)

Note that we can also allow Wij to take negative values,
which could represent, in the context of social networks,
neighbors whose behavior steers us away from the adop-
tion of an idea. This generalization produces, indeed,
rather surprising results, as we will see. However, nega-
tive weights require to introduce some extra assumptions
on the dynamics of the epidemics process, which are not

needed when weights are always non-negative. Speciﬁ-
cally, with negative weights we must assume that i) once
a node becomes infected, it remains infected for ever; ii)
some random delays are introduced in the infection pro-
cess of a node and/or on the edges, to avoid that a node
receives the combined eﬀect of multiple (simultaneous)
inﬂuences from active neighbors. We argue that assump-
tion ii) is not particularly restrictive, since in many real
systems inﬂuences received by a node take place atomi-
cally (e.g., a user reading ads, posts, twits, and the like).
Assumption i) instead is crucial, because with negative
weights counters no longer increase monotonically, and
thus they can traverse the threshold many times in oppo-
site directions. Assumption i) can be adopted, however,
to study many interesting epidemic processes whose dy-
namics are triggered by nodes crossing the threshold for
the ﬁrst time3.

The analysis of the general case can be carried out by
exploiting the same problem reformulation described in
Sec. 2, in which a single active node is used at each
time step. Indeed, we can associate to inactive nodes a
(real-valued) counter, initialized to 0 at time t = 0, which
evolves according to:

Mi(t) =

tXs=1

Ii(s)Wi(s)

(6)

where Ii(s), ∀s,∀i, is a Bernoulli r.v. with average p re-
vealing the presence of edge (z(s), i) and Wi(s), ∀s,∀i,
is the random weight associated to the same edge. Simi-
larly to the basic case, the above expression of Mi(t) can
be extended to all nodes and all times, without aﬀecting
the results. By so doing, counters Mi(t) are independent
from node to node.

We then re-deﬁne π(t), as the probability that an ar-
bitrary node which is initially inactive (take node 1), has
become active at any time τ ≤ t:

π(t) := P(M1(τ ) ≥ R1, τ ≤ t)

With the above deﬁnition, the system behavior is still
determined by trajectories of process (2). We have:

τ ≤t

π(t) = P sup
I1(s)W1(s) ≥ R1!
τXs=1
ρ!pρ(1 − p)t−ρ · P  sup
tXρ=0 t
ρ!pρ(1 − p)t−ρqρ
tXρ=0 t

(a)
=

=

m≤ρ

W1(s) ≥ R1!

mXs=1

(7)

where equation (a) is obtained by conditioning over the
number ρ of variables I1(s) = 1, and we have deﬁned qρ:

qρ := P  sup

m≤ρ

mXs=1

W1(s) ≥ R1!

which can be interpreted as the probability that a node,
which has sequentially received the inﬂuence of ρ infected
neighbors, has become active. Let q∞ := limρ→∞ qρ.

3For example, on some online platforms, notiﬁcations that
a user has watched a given viral video, bought a product,
expressed interest for an event, etc., might be sent im-
mediately (and once) to his friends, no matter if the user
changes his mind later on.

Note that, as consequence of elementary properties of ran-
dom walks, q∞ = 1 when E[Wij ] ≥ 0 (recall also (5)). We
introduce the following fundamental quantity:

ρ∗ := min{ρ ≥ 2 : qρ > 0}

(8)

In words, ρ∗ is the minimum number of infected neigh-
bors that can potentially (with probability qρ∗ ) activate a
node. Note that, as consequence of (5), it must be ρ∗ ≥ 2.
For example, under the distributions shown in Fig. 2, we
have ρ∗ = 3, qρ∗ = P(Ri = 6) · P(Wij = 2)3.
4.2 Main results

We are now in the position to state our main results for
the generalized bootstrap percolation model in G(n, p).
First, we deﬁne:

tc :=(cid:18) (ρ∗ − 1!)

npρ∗qρ∗ (cid:19) 1

ρ∗−1

;

ac :=(cid:18)1 −

1

ρ∗(cid:19) tc

Moreover, we shall consider the function:

H(x) := 1 − x + x log x,
H(x) := +∞,

x < 0

x > 0, H(0) := 1,

Theorem 4.1

C1(ρ∗, α) :=

min
x∈[α ρ∗−1

(Super-critical case). Under the as-
), a/ac → α for

sumptions: 1/(np) → 0, p = o(n−1/ρ∗
some α > 1. Then,
A∗

α(ρ∗ − 1)

For the sub-critical case, we deﬁne the function

∀ δ > 0, P(cid:18)(cid:12)(cid:12)(cid:12)

where C1(ρ∗, α) is the constant:
xρ∗

n − q∞(cid:12)(cid:12)(cid:12) > δ(cid:19) = O(cid:16)e−C1(ρ∗,α)a+o(a)(cid:17) ,
H(cid:18) xρ∗ − α(ρ∗ − 1)
(cid:19) .
h(x) := x − (ρ∗)−1xρ∗
− α(1 − (ρ∗)−1), for x ∈ [0, 1],
α ∈ (0, 1), and we we denote by ϕ(α) the only4 solution
of h(x) = 0, x ∈ [0, 1]. Furthermore, having deﬁned the
interval I :=(cid:0)0, (1 − α)(1 − (ρ∗)−1)(cid:1), it holds:
∀δ > 0, ∃εδ ∈ I : [−δ, δ] ⊇ [h−1(−εδ) − ϕ(α), h−1(εδ) − ϕ(α)]
(Sub-critical case). Under the as-
) and a/ac → α for

sumptions: 1/(np) → 0, p = o(n−1/ρ∗
some α ∈ (0, 1). Then, ∀δ > 0,

Theorem 4.2

ρ∗ ,∞)

xρ∗

A∗
a −

ρ∗

ρ∗ − 1

P(cid:18)(cid:12)(cid:12)(cid:12)

ϕ(α)

α (cid:12)(cid:12)(cid:12) > δ(cid:19) = O(cid:16)e−C2(ρ∗,α,εδ)a+o(a)(cid:17) ,

where εδ and ϕ(α) are deﬁned as above, and

C2(ρ∗, α, ε) :=

H (1 + ερ∗) .

1

α(ρ∗ − 1)

We shall provide here a sketch of the proof of Theorems
4.1 and 4.2. The complete proofs, including all mathemat-
ical details, can be found in [14].

At high level, we can show that almost complete per-

colation occurs under super-critical conditions, by:

i) analysing the trajectory of the mean of process (2),
E[A(t)] = a − t + (n − a)π(t), ﬁnding conditions
under which the above quantity is positive (with a
suﬃcient guard factor) for any t < (q∞ − δ)n, for
arbitrarily small δ > 0.

4Function h is
ing
h(1) = (1 − (ρ∗)−1)(1 − α) > 0.

continuous

on [0, 1] with h(0) = −α(1 − (ρ∗)−1) < 0

and strictly

increas-
and

ii) showing that the actual process A(t) is suﬃciently
concentrated around its mean that we can conclude
that A(t) > 0 w.h.p. for any t < (q∞ − δ)n.

For the sub-critical regime we can use similar arguments,
showing that E[A(t)] becomes negative at early stages,
and that A(t) is suﬃciently concentrated around its av-
erage that we can claim that the actual process stops at
early stages w.h.p.

We start from the asymptotic approximation of π(t):

π(t) =

(pt)ρ∗
ρ∗!

(qρ∗ + O(pt + t−1)).

(9)

which holds for any t such that pt → 0. The above ap-
proximation allows us to write, for any t ≪ p−1:
E[A(t)] = a−t+(n−a)π(t) = a−t+n
under the further assumption that a = o(n). Thus, having
deﬁned for any t ∈ R+ function f (t) = a − t + (pt)ρ∗
ρ∗! qρ∗ ,
for n large enough we can determinate the sign of E[A(t)]
for any t ≪ p−1 by analysing the behavior of f (t). Ele-
mentary calculus reveals that f (t) has a unique minimum
at:

(pt)ρ∗
ρ∗!

qρ∗ (1+o(1))

tc =(cid:18) (ρ∗ − 1!)
with f (tc) = a−ac, ac =(cid:16)1 − 1

npρ∗ qρ∗ (cid:19) 1

ρ∗−1

ρ∗(cid:17) tc. Thus, we obtain an

1

n ≪ p ≪ n

asymptotic closed-form expression for the critical number
of seeds ac (one can easily verify that, under the assump-
tion 1
ρ∗ , it holds tc → ∞, ac → ∞, ptc → 0,
ac
n → 0).
The diﬃcult part of the proofs is to show that A(t)
is suﬃciently concentrated around its expectation that
we can establish exponential bounds (as n → ∞) on the
probability that the ﬁnal size of the epidemics falls outside
the intervals stated in Theorems 4.1 (super-critical case)
and 4.2 (sub-critical case).

For the super-critical case, we adapt a methodology
proposed in [6], which separately considers four time seg-
ments5: i) segment6 [a, Ktc] (where K is a constant); ii)
segment [Ktc, p−1];
iii) segment [p−1, cn] (where c is a
constant); iv) segment [cn, n(q∞ − δ)]. Note that segment
i) contains the most crucial, initial phase of the process.
The following lemma provides a fundamental property
related to segment i), which provides the key to obtain
the result in Theorem 4.1:

Lemma 4.3. Under the assumptions of Theorem 4.1,

let K > α(1 − (ρ∗)−1) be an arbitrarily ﬁxed constant.
P(cid:18) inf
t∈[a,Ktc]{a − t + S(t)} ≤ 0(cid:19) = O(cid:16)e−C1(ρ∗,α)a+o(a)(cid:17) ,

where C1(ρ∗, α) is given in the statement of Theorem 4.1.

The detailed proof is reported in Appendix A. We
outline here the three main ingredients to prove Lemma
4.3:
i) we exploit standard concentration results for the
binomial distribution, providing exponential bounds to

P (|S(t) − E[S(t)]| > ǫtc) at any t in the considered do-
main; ii) we employ the union bound to upper bound the

probability P (supt |S(t)− E[S(t)]| > ǫtc) byPt P (|S(t)−

iii) we use the property E[S(xtc)] =

E[S(t)]| > ǫtc);
xρ∗ tc

ρ∗ + o(tc).

We emphasize that in this paper we employ diﬀerent
techniques with respect to those used in [6], where au-
thors rely on concentration results for supt |S(t)− E[S(t)]|
derived from Martingale theory (Doob’s inequality). In-
stead, we combine deviation bounds speciﬁcally tailored
to the binomial distribution (see Appendix A) with the
union bound, obtaining a conceptually simpler approach
which also permits us to obtain explicit exponential laws
for probabilities related to the ﬁnal size of the epidemics
(i.e., a stronger result with respect to main Theorem 3.1
in [6], which holds just w.h.p.).

As immediate consequence of Lemma 4.3 we can say
that the process does not stop before Ktc with probability

1 − ζ(n), being ζ(n) = O(cid:16)e−C1(ρ∗,α)a+o(a)(cid:17).
Considering that E[S(xtc)] ∼ xρ∗ tc

ρ∗ quickly (super-
linearly) increases after Ktc (as long as approximation
(9) holds), we can expect that the process is extremely
unlikely to stop in segment [Ktc, p−1], if it survives the
ﬁrst bottleneck segment. The proof of this fact is reported
in Appendix A, where we also handle segment [p−1, cn].
Here we focus instead on the last temporal segment,
where the value of q∞ comes into play determining the
ﬁnal size of the epidemics. Indeed, we are going to show
that q∞n + o(n) are infected with probability 1− ζ(n). In
general, we can assume that qρ = q∞−v(ρ) with v(ρ) → 0.
Given an arbitrary ˆρ such that ρ∗ ≤ ˆρ < cnp, we make
use of concentration inequality (20) to write:

π(cn) ≥

≥

cnXρ= ˆρ cn
cnXρ= ˆρ cn

ρ!pρ(1 − p)cn−ρqρ
ρ!pρ(1 − p)cn−ρ(q∞ − v(ˆρ))

= P(Bin(cn, p) ≥ ˆρ)(q∞ − v(ˆρ))
≥ (q∞ − v(ˆρ))(1 − e−cnpH( ˆρ/(cnp)))
≥ q∞ − (v(ˆρ) + e−cnpH( ˆρ/(cnp)))
≥ q∞ −

ǫ
2

(10)

for any arbitrary ǫ > 0 (and n large enough). We have:

P(cid:18)

inf

t∈[cn,n(q∞−ǫ)]

a − t + S(t) ≤ 0(cid:19) ≤ P(S(cn) + a ≤ n(q∞ − ǫ))

≤ P (Bin(n, 1 − π(cn)) ≥ n(1 − q∞ + ǫ))
Exploiting (21), the above probability goes to 0 faster
than ζ(n) for any ǫ > 0, proving that at least n(q∞ − ǫ)
nodes are infected. When q∞ < 1, we can similarly show
that no more than n(q∞ + ǫ) nodes are infected. Indeed,
considering that π(n(q∞ + ǫ)) < q∞, we can apply (20)
to show that P(S(n(q∞ + ǫ) + a − n(q∞ + ǫ) < 0) goes to
1 faster than ζ(n), for any ǫ > 0.
4.3 Validation

5The boundaries of all segments are to be meant as inte-
gers. However, to simplify the notation, we will omit ⌊·⌋
and ⌈·⌉ symbols.
6note that the process cannot stop at t < a.

To validate our analysis, and understand how well asymp-

totic results can predict what happens in large (but ﬁ-
nite) systems, we have run Monte-Carlo simulations of
our generalized bootstrap percolation model. In each run

s
e
d
o
n

 

d
e
t
c
e
f
n
i
 
f
o

 

n
o
i
t
c
a
r
f
 
e
g
a
r
e
v
a

 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0

D1

D2

D3

n = 105, ¯d = 20

n = 108, ¯d = 200

 125

 500

 1250

number of seeds, a

 5000

Figure 3: Phase transitions in G(n, p) for diﬀerent threshold distributions D1, D2, D3, averaging the results
of 10, 000 simulations. Analytical predictions are shown as vertical dotted lines.

we change both the identity of the seeds and the structure
of the underlying G(n, p) graph. We compute the aver-
age fraction of nodes that become infected, averaging the
results of 10,000 runs.

We ﬁrst look at the impact of random thresholds, while
keeping equal weight Wij = 1 on all edges. We consider
three diﬀerent distributions of Ri:
i) constant threshold
equal to 2 (denoted D1); ii) uniform threshold in the set
{2, 3, 4, 5}, (denoted D2); iii) two-valued threshold, with
P(Ri = 2) = 1/4 and P(Ri = 10) = 3/4 (denoted D3);
Note that all three distributions have ρ∗ = 2, but their
expected values are quite diﬀerent. Moreover, qρ∗ = 1 for
D1, whereas qρ∗ = 1/4 for both D2 and D3.

The asymptotic formula for the critical number of seeds
gives in this scenario ac = n/(2 ¯d2qρ∗ ). We consider either
a ‘small’ system, in which n = 105, ¯d = 20, or a ‘large’ sys-
tem, in which n = 108, ¯d = 200. Results are shown in Fig.
3 using a log horizontal scale on which we have marked
the values of ac derived from the asymptotic formula. We
use the same line style for each threshold distribution, and
diﬀerent line width to distinguish the small system (thick
curves) from the large system (thin curves).

We make the following observations: i) the position of
the phase transition (i.e., the critical number of seeds) is
well estimated by the asymptotic formula; ii) despite hav-
ing quite diﬀerent shapes, distributions D2 and D3 lead
asymptotically to the same critical number of seeds, as
suggested by results obtained in the large system, where
the corresponding curves are barely distinguishable (at
ac = 5000);
iii) phase transitions become sharper for
higher values of the critical number of seeds, conﬁrming
that the probability law by which the process is supercrit-
ical/subcritical depends strongly on ac itself (as stated in
Theorems 4.1 and 4.2).

We next move to a scenario in which the threshold is
ﬁxed, Ri = 2, and we vary the weights on the edges. We
will consider, for simplicity, a simple case in which the
inﬂuence exerted between two nodes can take just two
values: +1, with probability z, and -1, with probability
1−z. Note that the average inﬂuence, E[Wij ] = 2z−1, can
even be negative, if we select z < 1/2. In this scenario,
we have ρ∗ = 2, qρ∗ = z2, hence ac = n/(2( ¯dz)2). We
consider either a ‘small’ system, in which n = 105, ¯d = 20,
or a ‘large’ system, in which n = 107, ¯d = 200, which
produce the same value of ac, for any z.

Results are shown in Fig. 4 (left plot), using a log
horizontal scale on which we have marked the values of
ac derived from the asymptotic formula. We use the same
line style for each value of z, and diﬀerent line width to
distinguish the small system (thick curves) from the large
system (thin curves). We observe that in the small system
the average fraction of infected nodes saturates to a value

s
e
d
o
n
 
d
e
t
c
e
f
n
i
 
f
o
 
n
o
i
t
c
a
r
f
 
e
g
a
r
e
v
a

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

z=0.8

z=0.6

z=0.4

 195

 347

 781

number of seeds, a

y
t
i
l
i
b
a
b
o
r
p

 

n
o
i
t
p
r
o
s
b
a

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

 0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1

z

 100

 90

 80

 70

 60

 50

 40

 30

 20

 10

 0

n
o
i
t
p
r
o
s
b
a
 

o
t
 
e
m

i
t
 
n
a
e
m

Figure 4: (left plot) Phase transitions in G(n, p)
for ﬁxed threshold Ri = 2, and random weights
±1, with P(Wij = 1) = z. (right plot) results for
the corresponding simple random walk.

signiﬁcantly smaller than one for z = 0.6, although we
expect that, as n → ∞, all nodes should get infected in
this case (for which q∞ = 1).
In the large system, the
discrepancy between simulation and asymptotic results
disappears.

This phenomenon can be explained by considering that
the counter of inactive nodes behaves as a simple random
walk (i.e., with steps ±1) with an absorbing barrier at
ρ∗ = 2. Recall [13] that for this simple random walk the
absorption probability is 1 for z ≥ 1/2, while it is equal
to (z/(1 − z))2 for z < 1/2. Moreover, the mean time to
absorption (conditioned to the event that the walk is ab-
sorbed) is 2/|1−2z| (see right plot in Fig. 4). On the other
hand, the time horizon of this equivalent random walk is
limited by the node degree, since a node cannot receive
a number of contributions to its counter greater than the
number of its neighbors. In the small system the average
degree ( ¯d = 20) is too small to approach the asymptotic
prediction, whereas in the large system the average de-
gree ( ¯d = 200) is large enough (i.e., much larger than the
mean time to absorption) to observe convergence of the
ﬁnal size to the asymptotic prediction obtained with q∞.
Interestingly, a ﬁnite fraction of nodes (asymptotically,
around 0.44) gets infected with z = 0.4, a case in which
the average node-to-node inﬂuence is negative!

5. RANDOM GRAPHS WITH ARBITRARY

DEGREE DISTRIBUTION

Up to now we have considered the G(n, p) random graph
model, and we have followed the same problem reformu-

lation adopted in [6], in which a single node is used at a
time, revealing all its outgoing edges. This approach is
especially suitable to G(n, p), since marks Mi(t) are i.i.d
binomial random variables. We introduce now an alter-
native description of the percolation process, in which a
single edge is used at a time. This approach is more con-
venient to analyze other random graph models, such as
G(n, M ) (graphs with pre-established number of edges),
G(n, d) (where all nodes have the same degree), or the
conﬁguration model.
5.1 Edge-based reformulation for G(n, M )

We consider the (multi)-graph ˜G(n, M ) in which, start-
ing from a graph with no edges, M edges are sequen-
tially added, each connecting two nodes selected (inde-
pendently) uniformly at random. Note that by so doing
we can generate parallel edges, as well as self loops. How-
ever, following the same approach as in Corollary 3 of [5],
it is possible to show that sequences of events that occur
w.h.p. over ˜G(n, M ), occur w.h.p. also over G(n, M ),
with G(n, M ) denoting the class of (simple)-graphs hav-
ing M edges, with associated uniform probability law.
Therefore our results apply to G(n, M ) as well.

To analyze bootstrap percolation in ˜G(n, M ), we con-
sider the following dynamical process: when a node be-
comes active, all edges connecting this node to other nodes
which are still non active are denoted as ‘usable’, and
added to a set B of usable edges. At a given time step
t, one usable edge is selected uniformly at random from
B(t − 1), adding one mark to the endpoint that was in-
active (when the edge became usable), provided that this
endpoint is still inactive. The selected edge is then re-
moved from B(t). Set B(0) is initialized with the edges
connecting seeds to non-seeds. By construction, at most
one node can become active at each time instant. Hence,
denoting with A(t) the number of active nodes at time t
(initialized to a), we have A(t) ≤ a + t.
Let π(t) be the probability that a node, which is not a
seed, has been activated at time τ ≤ t. While it is not
easy to write an exact expression of π(t), we can provide
asymptotically tight bounds on π(t), as follows:

1 −

1 −

1

r−1Xj=0 t
j!(cid:16) 1
n(cid:17)j(cid:16)1 −
n(cid:17)t−j
j!(cid:16)
r−1Xj=0 t
n − a − t(cid:17)j(cid:16)1 −

1

≤ π(t) ≤

1

n − a − t(cid:17)t−j

1

This because we can reveal the endpoint of an active edge
only when this edge is used, by choosing uniformly at
random one of the nodes that were non active at the time
instant τ ′ at which the considered edge became active.
Hence, an inactive node i receives a mark at time τ with
probability
n−A(τ ′) (independently from other previously
collected marks). Furthermore, by construction, we have
n−a−τ ≤ 1
1
n ≤
n−a−t . At timescale
t = o(n), we can approximate π(t) as:
n(cid:17)t−j

j!(cid:16) 1
r−1Xj=0 t
n(cid:17)j(cid:16)1−

r!(cid:18) t
n(cid:19)r

(11)
The dynamics of B(t) (whose size is denoted by B(t))

π(t) = 1−

n−A(τ ′) ≤

n−A(τ ) ≤

+o(1) =

1

1

1

1

1

+o(1)

obey the following equation:

B(t) = B(0) + Σ(t) − t

where Σ(t) represents the (cumulative) number of edges
activated at τ ≤ t. The process stops at time T = min{t :
B(t) = 0}. Similarly to the G(n, p) case, the number S(t)
of nodes that have become active by time t is the sum of
n − a identically distributed Bernoulli random variables
Note that by construction marks are distributed only
to inactive nodes, therefore a node i stops receiving marks
as soon as Mi(t) = r. Diﬀerently from G(n, p), however,
variables 11Mi(t)=r are not independent, given that at most

with average π(t). Indeed, S(t) =Pi∈V\A(0) 11Mi(t)=r.

t marks have been distributed by time t (i.e.,Pi Mi(t) ≤

t). Note that we still have E[S(t)] = (n − a)π(t).
For what concerns the total number of edges activated
by time t, Σ(t), we can express it as the sum of random
variables Xk associated with nodes in A(t), representing
the numbers of edges activated along with node k (i.e. the
number of edges connecting node k with inactive nodes):

Σ(t) =

Xk.

A(t)Xk=1

2

2

We can evaluate Xk by dynamically unveiling, for every
inactive edge, whether node k is one of its endpoints (but

not both). It turns out Xk = Bin(cid:16)M − Σ(τk − 1)− B(0),
(n−A(τk−1))2(cid:17) where τk is the time instant at

n−A(τk−1) −
which the k-th node was activated. Indeed, M − Σ(τk −
1) − B(0) represents the number of edges still to be ac-
tivated at time τk, while
(n−A(τk −1))2 is the
probability that node k is an endpoint (but not both) of
any such edges. Observe that variables Xk are not inde-
pendent, as consequence of the fact that that sum of all
edges in the graph is constrained to be M . However, Xk
is conditionally independent from Xk′ , with k′ < k, given
Σ(τk − 1) and A(τk − 1). Moreover, for any k we have:

n−A(τk −1) −

2

2

Bin(cid:16)M − Σ(t) − B(0),
2
n −
≤st Bin(cid:16)M,
n − a − t −

2

2

2

n2(cid:17) ≤st Xk
(n − a − t)2(cid:17).
A(t)(cid:21) ≤ E[Σ(t)] ≤

(12)

In particular, the expectation of Σ(t) satisﬁes:

n2

E(cid:20) 2(n − 1)(M − Σ(t) − B(0))

2M E[A(t)]
n − a − t
Moreover, under the assumption a ≪ n, since for t ≪ n,
A(t) ≤ a + t ≪ n and Σ(t) + B(0) = o(M ), we have:
E[A(t)](1 + o(1)) = 2M π(t)(1 + o(1))

E[Σ(t)] =

.

2M
n

while B(0) = 2M
conclusion:

n a(1 + o(1))). Recalling (11), we have in

E[B(t)] =(cid:18) 2M

n

a +

2M

r! (cid:18) t
n(cid:19)r

− t(cid:19) (1 + o(1))

Now, similarly to the case of G(n, p), we can determine
the critical number of seeds by: i) determining suﬃcient
and necessary conditions under which E[B(t)] > δ M
n a
for some arbitrary δ > 0 and any t ≪ n; so doing we
determine the critical number of seeds ac. ii) Exploiting
the fact that B(t) is suﬃciently concentrated around its
mean for t ≤ K M
n ac, where K > 1 is a properly deﬁned
n ac < t < M (1 − ǫ),
constant.
B(t) can be bounded from below away from 0.

iii) Showing that for K M

For what concerns point i) we follow the same lines as
nr − t,

for G(n, p), deﬁning function g(t) = 2 M
and ﬁnding the minimum of g(t), which is achieved at:

n a + 2M

tr

r!

r−1

r−1

2M

=

2M

n ( 2M

2M (cid:19) 1

n   (r − 1)!

n2 )r−1! 1
tc =(cid:18) (r − 1)!nr
with tc = o(n) as long as M ≫ n. Observe that 2M
n is the
average node degree (replacing np in the expression of tc
obtained for G(n, p)) while 2M
n2 can be interpreted as the
probability that two speciﬁc vertices are connected by at
least an edge (replacing p for G(n, p)). Evaluating g(tc)
and imposing g(tc) = 0, we obtain the critical number of
seeds:

ac =(cid:18)1 −

1

r(cid:19)  (r − 1)!

n2 )r−1! 1

n ( 2M

2M

r−1

(13)

which is exactly the same as what we get in G(n, p) through
the substitution 2M

n → np and 2M

n2 → p.

n ac) = o(M ) and A(K M

For what concerns ii) and iii) we can proceed in analogy
with the case of G(n, p), exploiting standard concentra-
tion results. In particular, we ﬁrst focus on time instants
t ≤ K M
n ac for suitable K > 2. We need to show that
B(t) > 0 w.h.p. provided that E[B(t)] > ǫac for arbitrary
ǫ > 0 (i.e., a > (1 + ǫ)ac). To this end observe that from
(12), the fact that Σ(K M
n ac) =
o(n), and recalling the above mentioned property of con-
ditional mutual independence of variables Xk, it descends
that w.h.p., for any t ≤ K M
n ac: P (Σ(t) ≤ t − B(0)) ≤
P (PA(t)
1 X k ≤ t − B(0)) with X k mutually independent
and X k = Bin(cid:16)M (1− ǫ), 2
ǫ > 0. At last observe that P (PA(t)

1 X k ≤ t − B(0)) can
For what concerns iii) we adopt arguments conceptually
similar to the case of G(n, p), exploiting the fact that
E[B(t)] quickly (super-linearly) increases after K M

n2(cid:17) for an arbitrarily small

be easily bounded using inequalities (20) and (21).

n − 2

n ac.

5.2 Conﬁguration Model

The edge-based problem reformulation described in pre-
vious section can be easily extended to the conﬁguration
model G(n, p(d)), in which we specify a given degree se-
quence (possibly dependent on n) with associated empiri-
cal distribution function p(d). For simplicity, we limit our-
selves to describing the computation of the critical num-
ber number of seeds ac. However, the approach can be
made rigorous by following the same lines as for G(n, M ).
As before, properties of multi-graphs ˜G(n, p(d)) apply as
well to simple-graphs G(n, p(d)).

Similarly to what we have done for G(n, M ), we focus

on the evolution of the number of activable edges:

B(t) = B(0) + Σ(t) − t

and compute the critical time tc by ﬁnding the minimum
of E[B(t)].

The impact of node degree can be taken into account by
evaluating the probability π(t, d) that a node with degree
d has been activated by time t. Moreover, we need to
consider the amount of edges that a node contributes to B
after being activated. There are in total n ¯d ‘end-of-edges’
in the network, so the probability that a given end-of-edge

is active at time t is t/(n ¯d). Hence, we can write:

π(t, d) = 1−

n ¯d(cid:19)j(cid:18)1 −

t

n ¯d(cid:19)d−j

+ o(1), (14)

r−1Xj=0 d

j!(cid:18) t
n ¯d(cid:19)r
r!(cid:18) dt

1

Since t/(n ¯d) is small, we can approximate it as

π(t, d) =

+ o(1)

(d ≥ r)

Observe that since, by construction, a node gets activated
thanks to exactly r active edges, it contributes d − r new
edges to B. Then for t ≪ n since A(t) ≤ t + a ≪ n we
can approximate the average value of B(t) as:

1

¯d

p(d)

Now, if we deﬁne

E[B(t)] ∼ B(0) + nXd≥r
d∗ =Xd≥r(cid:18) d
we obtain E[B(t)] ∼ B(0) + ¯dntr
tc = n(cid:18) (r − 1)!

derive the critical time tc:

(d − r)p(d) − t.

n ¯d(cid:19)r
r!(cid:18) dt
¯d(cid:19)r d − r
r!nr d∗− t, from which we can
¯d d∗ (cid:19) 1
r(cid:19) n(cid:18) (r − 1)!

¯dr d∗ (cid:19) 1

ac =(cid:18)1 −

and the critical number of seeds:

(16)

(15)

r−1

r−1

1

One can easily check that the above formula is consis-
tent with what we get in G(n, p) or G(n, M ), for which
d∗ ∼ 1. The above formula holds when seeds are selected
uniformly at random. However, note that our analysis
could be immediately extended to the important case in
which seeds are chosen on the basis of the node degree.
Indeed, what really matters is only the cardinality of the
initial set of edges connecting seeds to non-seeds.

s
e
d
o
n
 
d
e
t
c
e
f
n
i
 
f
o
 
n
o
i
t
c
a
r
f
 
e
g
a
r
e
v
a

 1

 0.8

 0.6

 0.4

 0.2

 0
 100

 248

 555  595

G(n,M)
G(n,d)
10-50

 200

 300

 400

 500

 600

 700

number of seeds, a

Figure 5: Phase transitions of basic bootstrap per-
colation with r = 2,
in diﬀerent random graph
models with n = 106, ¯d = 30.

Figure 5 reports simulation results for three diﬀerent
random graph models having n = 106 nodes, and aver-
age node degree ¯d = 30. We consider basic bootstrap
percolation with r = 2. We compare the G(n, M ) model,
the regular G(n, d) (in which nodes have constant degree),
and a conﬁguration model in which half of the nodes have
degree 10 while the other half have degree 50 (curve la-
belled ‘10-50’). Analytical results obtained by (13) (for
G(n, M )), and by (16) (for the other two graph models)
are marked on the top margin. As expected, for ﬁxed
average degree, the critical number of seeds decreases for
increasing variance of the degree distribution.

We experimented also with a real online social net-
work, considering user-user friendship relations of Orkut,
a former social networking site run by Google.
In par-
ticular, we have used a crawled sub-graph of Orkut with
n = 3, 072, 441 nodes [15], hereinafter referred to as Orkut
graph, although it represents only a small percentage (11%)
of the entire social network. The average node degree
of this graph is ¯d = 76.3, and the maximum degree is
dmax = 33, 313. An interesting question that arises here
is the following: does a conﬁguration model with the same
number of nodes as the Orkut graph, and exactly the same
degree sequence, produce also a similar value of ac? If
the answer is aﬃrmative, it would tell us that the degree
distribution alone, and not the entire network structure,
could be used to predict (even analytically) the onset of
large-scale outbreaks in this kind of systems (as suggested
also by [16]). We partially answer this question by run-
ning simulations on both the original Orkut graph and
the matched conﬁguration model, as well as by analyti-
cally evaluating ac using (16).

Besides basic bootstrap percolation, we explored also
the interesting variation in which r is a deterministic func-
tion of the node degree. Indeed, note that (14) can be im-
mediately generalized to r = r(d), although in this case
we do not get a closed-form expression for ac, and the
minimum of E[B(t)] has to be computed numerically (we
omit the details of this computation).

s
e
d
o
n

 

 

d
e
t
c
e
f
n
i
 
f
o
n
o
i
t
c
a
r
f
 
e
g
a
r
e
v
a

 1
 0.8
 0.6
 0.4
 0.2
 0

r=2

 10

94

852

16800

r=5

log law

square
root law

 10000

 100
number of seeds, a

 1000

Figure 6: Phase transitions in the Orkut graph
and the matched conﬁguration model, for diﬀerent
threshold functions.

Results are shown in Fig. 6, where thick lines refers
to the real Orkut graph, while thin lines refers to the
matched conﬁguration model. We use diﬀerent line styles
for i) basic bootstrap percolation with r = 2 or r = 5;
ii) the logarithmic law r(d) = max{2,⌈log2(d)⌉}; iii) the
square root law r(d) = max{2, ⌈√d⌉}; Analytical pre-
dictions of ac are shown as vertical dotted lines (except
for r = 2, for which (16) provides a value of ac even
smaller than r = 2). We observe similar phase transi-
tions in the Orkut graph and the associated conﬁguration
model, while the analysis captures quite well the point
after which a major outbreak occurs.

5.3 Impact of power-law degree distribution
Large networks observed in a variety of diﬀerent do-
mains (social, technological, biological networks) are char-
acterized by the scale-free property, which implies a power
law degree distribution. Hence, it is interesting to under-
stand the impact of power-law degree distributions on the
critical seed set size. We will consider here power-law de-
gree distributions of the form

p(d) =

C
dβ

for dmin ≤ d ≤ dmax

(17)

where β is the power-law exponent (typically larger than
2), and C is the normalization factor. We will further
assume that dmax → ∞, while dmin = o(dmax). Note
that by letting dmin scale up with n we can obtain an
increasing average node degree (graph densiﬁcation) in
the most common case in which β > 2.

by solving the inequalityR ∞

The reason why we introduce a maximum node degree
dmax is instead more subtle, and has to do with the fact
that p(d) must be the limiting distribution function of a
sequence of empirical distribution function (for each n) as-
sociated with the conﬁguration model. Clearly, we cannot
have in any case a degree larger than n−1, but it turns out
that, for the common case of β > 2, nodes with very large
degree are so rare that is preferable to avoid them at all,
setting to zero p(d) after a given dmax = nζ , with ζ < 1.
The maximum value of ζ, for β > 1, can be obtained
nζ Cx−β dx > n−1. For exam-
ple, when β > 1, dmin = Θ(1), we have ζ ≤ 1/(β − 1). In
practice, we never see nodes with extremely large degree7,
and it is actually customary in many random graph mod-
els to assume that the maximum degree is smaller than,
say, n1/2.
In our model, we try to be more ﬂexible by
allowing a generic dmax = nζ ≪ n, satisfying the above
constraint (if β > 1).
In practice, one can starts with a desired distribution
p(d) of the form (17), having chosen dmin and dmax (de-
pending on n), and construct a sequence {di}n of degrees
for the conﬁguration model by assigning to node i the de-
gree di = inf{d : 1− Fn(d) < i/n}, where Fn(d) is the cdf
of p(d). Under our assumptions we have, asymptotically,

1−β
d1−β
max
β−1
dβ−1
min

if β < 1

if β > 1

C ∼

β−1

β−k−1

The following expression for the generic k-th moment of
p(d) will come in handy in the following:

E[dk] ∼

dk
min
dβ−1
min dk+1−β
dk
max

max
1−β

k+1−β

β−1

k+1−β

if β > k + 1
if 1 < β < k + 1
if β < 1

(18)

Note that moments of order k < β − 1 depend only on
dmin (e.g., the average node degree (k = 1), when β > 2).
Instead, moments of order k > β − 1 may depend also (or
exclusively) on dmax.
Recall that our methodology to compute the critical
seed set size requires that ac is both ω(1) and o(n). This
regime implies that the average node degree ¯d cannot be
either too small nor too large. Recall that in the G(n, p)
r−1
model we need that ¯d ≫ 1 and ¯d ≪ n
r . Under a
general degree distribution, it is not stricly necessary that
¯d ≫ 1, since (look at formula (16)) we could just have
d∗ → ∞, resulting into a number of seeds o(n).
To better understand how the critical number of seeds
depends on parameters of the power-law distribution, we
evaluate its scaling order with n, assuming for simplicity
that dmin = nγ , with 0 ≤ γ < ζ. When β > 1, we further
assume ζ ≤ 1
β−1 − γ to avoid rare nodes having very large
degree. We see from (15) that d∗ depends essentially on
the (r + 1)-th moment of p(d), i.e., d∗ = Θ(cid:16) E[dr+1]
(E[d])r+1(cid:17)

7In many real systems the tail of the degree distribution
exhibits an exponential cut-oﬀ, and often the degree can-
not exceed a maximum value imposed by physical or tech-
nological constraints.

(assuming E[d] > r). We can thus use the expressions in
(18), and obtain that the scaling exponent of ac is 8

e(ac) =

r−1

1 − γr
1 − γ(β−2)+ζ(r+2−β)
1 − ζr

r−1

r−1

γ > 0

if β > r + 2,
if 2 < β < r + 2,
γ ≥ 0
if β < 2,

γ ≥ 0

(19)

s
e
d
o
n
 
d
e
t
c
e
f
n
i
 
f
o
 
n
o
i
t
c
a
r
f
 
e
g
a
r
e
v
a

 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0

β = 2.5
dmax = 104
r = 2
ac = 2

β = 3
dmax = 103
r = 2
ac = 53

β = 0
dmax = 300
r = 4
ac = 981

β = 2.5
dmax = 104
r = 6
ac = 112

β = 1
dmax = 300
r = 4
ac = 1152

 10

 100

 1000

number of seeds, a

Figure 7: Phase transitions of basic bootstrap per-
colation in random graphs with n = 106 nodes and
power-law degree.

We should mention that our results are only partially
aligned with those obtained for Chung-Lu graphs9 with
power-law degree distribution in [7], where authors con-
sider the case 2 < β < 3, γ = 0. In particular, in [7] they
suggest that, when dmax = Θ(n1/(β−1)), ac is of the order
of n

β−2
β−1 , independently of r.

Figure 7 reports simulation results under our power-
law conﬁguration model. The number of nodes is always
n = 106, dmin = 10, and we try diﬀerent combinations of
β, dmax and r. The values of ac computed by (16) are also
shown on the plot. We see that, with β = 2.5, dmax =
n1/(β−1) = 104, very few seeds are needed with r = 2, and
many more with r = 6. We also consider two cases with
β < 2, dmax = 300, r = 4, to show that, in accordance
with (19), when β < 2, ac depends essentially only on
the extreme value of the node degree distribution (i.e.,
dmax), on not on its shape. Indeed, the phase transitions
obtained with β = 0 and β = 1 are not that far away, as
predicted by our computed values of ac, despite the fact
that the average degree is quite diﬀerent in the two cases
(i.e., 84 (β = 1) vs 155 (β = 0)).

6. COMMUNITY BASED GRAPHS: THE

BLOCK MODEL

Another important feature of many graphs represent-
ing real systems is the presence of a community structure
(i.e., a non-negligible clustering coeﬃcient). This feature
is not captured by any of the random graph models con-
sidered so far. In this section, we extend the analysis of
basic bootstrap percolation to the so called block model,
which naturally extends the G(n, p) model to incorporate
a community structure. We will start from the simple
case of just two communities, and then extend our results
to K < ∞ communities.
8The scaling exponent of a generic function f (n) is deﬁned
as e(f ) := limn→∞
9Interestingly, our scaling exponent in (19), for 2 < β < 3,
γ = 0, perfectly matches quantity a+
c in [7] (Theorem 2.3).

log(f (n))

log(n)

.

6.1 The case of two communities

We consider a G(n1, n2, p1, p2, q) block model compris-
ing two communities of n1 and n2 nodes, respectively
(with n1 + n2 = n). The sub-graph induced by nodes be-
longing to community i (with i = 1, 2) is an Erd¨os-R´enyi’s
graph G(ni, pi). Pairs of nodes belonging to diﬀerent com-
munities are independently connected with probability q.
We assume q < min(p1, p2) and q = Ω(max( 1
)). We
n1
denote by Vi the set of nodes belonging to community i.
Bootstrap percolation in G(n1, n2, p1, p2, q) can be re-
formulated in two diﬀerent ways, which allow us to obtain
diﬀerent (complementary) results. We explain here our
ﬁrst approach. An alternative reformulation is described
in Appendix B.

, 1
n2

In our ﬁrst approach we assume that, at each discrete
time step t, two active nodes (one in community 1 and
one in community 2) are simultaneously used, whenever
they are both available. If a community runs out of (ac-
tive) usable nodes, while the other still has some available
(active) usable nodes, a single node is used at a time. We
denote by Ai(t) and Zi(t), respectively, the set of active
nodes and the set of used nodes in community i at time
t. Let Ai(t) = |Ai(t) \ Zi(t)| be the cardinality of the
set of active usable nodes in community i. Observe that
it is entirely possible that, say, A1(t) hits zero at some
point, but later on it increases again for eﬀect of marks
received by inactive nodes in V1 from nodes used in V2.
This event makes an exact analysis of the system partic-
ularly diﬃcult. Note that the process deﬁnitely dies at
time T : T := min{t ∈ N+ : A1(t) = 0, A2(t) = 0}.
We introduce a new quantity Ti(t), representing the
number of nodes that have been used in community i up
to time t: Ti(t) := |Zi(t)|. From the above discussion,
observe that Ti(t) is not necessarily equal to t, for t ≤ T ,
in constrast to what happens in G(n, p), where |Zi(t)| = t,
∀t ≤ T .
The number S1(t) of initially inactive nodes in V1 that
are active at time t can then be expressed as:

S1(t) = Bin(n − a1,bπi(T1(t), T2(t))

where bπ1(t1, t2) = P (Bin(t1, p1) + Bin(t2, q) ≥ r). For

p1t1 ≪ 1 we have:

r!

ρ=0

tr, as in G(n, p).

(similar expressions can be written for S2(t) andbπ2(t1, t2)
provided that p2t2 ≪ 1). Note that, whenever t1 =
t2 = t, previous approximation simpliﬁes to: bπ1(t, t) ∼
Pr
pρ
1 qr−ρ
ρ!(r−ρ)! tr. Moreover, if q ≪ p1, the latter further
simpliﬁes tobπ1(t, t) ∼ (p1)r

To characterize the system behavior, we stochastically
upper and lower bound Si(t), for i = 1, 2, by two virtual
processes Si(t) and S i(t) obtained in the following shadow
systems: a shadow reduced system, in which inter-community
edges are removed, and thus each community evolves as
in isolation. Note that process Si(t) associated to the
reduced system is equivalent to what we would get in a
G(ni, pi) model; a shadow augmented system (viewed by
community i), in which we assume that a new node can
always be used in the other community (if the other com-
munity has no usable nodes, an arbitrary inactive node in
the other community is selected and used).

rXρ=0

bπ1(t1, t2) ∼

(p1t1)ρ

ρ!

(qt2)r−ρ
(r − ρ)!

It immediately descends from their deﬁnitions that:

S1(t) = Bin(n1 − a1,bπ1(T 1(t), 0))
S1(t) = Bin(n1 − a2,bπ1(T 1(t), t))

Furthermore, by induction over time, it can be immedi-
ately shown that: S1(t) ≤st S1(t) ≤st S1(t), where ≤st
indicates the less or equal operator under usual stochas-
tic ordering (also known as ‘ﬁrst order stochastic domi-
nance’). Now, under the joint conditions A1(τ ) 6= Z1(τ )
and A2(τ ) 6= Z2(τ ) for any τ < t, by construction S1(τ ) =
S1(τ ) and S2(τ ) = S 2(τ ) for any τ < t, which allows
us to conclude that also at time t: S1(t) = S1(t) and
S2(t) = S2(t). Then, by induction over time:
{A1(τ ) 6= Z1(τ ), A2(τ ) 6= Z2(τ ),∀τ ≤ t}

τ <t

=(cid:26)inf
=(cid:26)inf

τ <t

min(S1(τ ) − τ + a1, S2(τ ) − τ + a2) > 0(cid:27)
min(S1(τ ) − τ + a1, S2(τ ) − τ + a2) > 0(cid:27) .

In particular, whenever S1(t) and S2(t) both satisfy su-
percritical conditions, then necessarily Ai(t) 6= Zi(t) and
Si(t) = Si(t), for any t < max(n1, n2) − o(max(n1, n2)).
More formally, exploiting the results in 4.2, we get:

Theorem 6.1. Suppose 1/(nipi) → 0 , pi = o(n−1/r
c → αi, for some αi > 1 with i = {1, 2}, and:

i

ai/a(i)

),

a(i)

c =(cid:18)1 −
where bpi = rq(r!) ·Pr
∀ε > 0, P(cid:18)1−

maxi(ni)

T

1

pρ
i qr−ρ
ρ!(r−ρ)! . Then, having deﬁned

ni(bpi)r(cid:19)(r−1)−1
r(cid:19)(cid:18) (r − 1)!
> ε(cid:19)= O(cid:16)e−C1(r,mini(αi))a+o(a)(cid:17)

T = inf t{mini(ai − t + Si(t)) < 0} we have:

ρ=0

where C1(r, α) is the same function as in Theorem 4.1.

Theorem 6.1 provides suﬃcient (but not necessary) con-

ditions for almost complete percolation of G(n1, n2, p1, p2, q).

To complement previous result, suppose that S1(t) sat-
isﬁes supercritical conditions (while to avoid trivialities
we assume S2(t) to be sub-critical). In this case complete
or almost complete percolation occurs in V1 as immedi-
ate consequence of Theorem 4.1 applied to community 1
in isolation, and the fact that S1(t) ≤ S1(t). Then, under
the assumption that q ≥ Ω(max( 1
)), we obtain com-
plete or almost complete percolation also in community
2, since any node in V2 would have ﬁnite probability of
having at least r neighbors in V1

, 1
n2

10.

n1

It remains to analyze the case in which S1(t) is super-
critical (but S1(t) is sub-critical), and S2(t) is not super-
critical (or viceversa). This case, which can occur only
when q and p1 are of the same order, is more involved
and we leave it to future study.
6.2 Extension to the general block model

Results obtained for the case of two communities can be
rather easily extended to a more general block model with
10More in general, for q ≪ 1
, we could study percolation
in community 2 in isolation after:
i) adding to a2 the
nodes in V2 that have at least r neighbors in V1; ii) reduce
the threshold r for all inactive nodes in V2 to a stochastic
threshold R ≤ r accounting for marks received from V1.

n2

K < ∞ heterogeneous communities, speciﬁed by a sym-
metric matrix P , whose element pjk represents the proba-
bility that a node belonging to community j is connected
to a node belonging to community k (with i.i.d. proba-
bilities for all such pairs). Note that diagonal elements
of P provide inter-community edge probabilities. In Ap-
pendix C, besides our system assumptions, we present two
diﬀerent upper bounds on the critical number of seeds.
Interestingly, both bounds depends critically on extreme
values of the model parameters, and in some cases a sin-
gle community can determine the phase transition of the
entire system.
7. CONCLUSIONS

We proposed a unique framework to study sub-linear
phase transitions of threshold-based ‘activation processes’
in random graphs, adding inhomogeneities in the system
along diﬀerent (orthogonal) directions. We found that in
several cases the critical seed set size depends critically
just on extreme values of distributions, providing novel
insights into the dynamics of epidemic processes in com-
plex systems.
8. REFERENCES
[1] J. Chalupa, P.L. Leath, G.R. Reich, “Bootstrap

percolation on a Bethe lattice,” J. Phys. C, Vol. 12,
L31–L35 (1979).

[2] J. Adler, U. Lev, “Bootstrap percolation: visualizations

and applications,” Braz. J. Phys, 33(3), (2003).

[3] J. Balogh, B. Bollob´as, H. Duminil-Copin, R. Morris,
“The sharp threshold for bootstrap percolation in all
dimensions,” Trans. A. Math. Soc., 36, (2012).

[4] J. Balogh, B.G. Pittel, “Bootstrap percolation on the

random regular graph,” Random Struct. Algor., 30(1–2),
257–286 (2007).

[5] H. Amini, “Bootstrap percolation and diﬀusion in

random graphs with given vertex degrees,” Electron. J.
Combin. 17, R25 (2010).

[6] S. Janson, T. Luczak, T. Turova and T. Vallier.

Bootstrap percolation on the random graph Gn,p. Ann.
Appl. Probab., 22(5):1989–2047, 2012.

[7] H. Amini and N. Fountoulakis, “Bootstrap percolation in

power-law random graphs”, Journal of Statistical
Physics, 155:72–92, 2014.

[8] J. Leskovec, J. Kleinberg, and C. Faloutsos, “Graphs

over time: Densiﬁcation and shrinking diameters,” ACM
Trans. on Knowledge Discovery from Data, 1(1), 2007.
[9] G. Scalia-Tomba, “Asymptotic Final-Size Distribution

for Some Chain-Binomial Processes”, Advances in
Applied Probability, 17(3), 477–495, 1985.

[10] A. Martin-L¨of, “Symmetric Sampling Procedures,

General Epidemic Processes and Their Threshold Limit
Theorems”, Journal of Applied Probability 23(2),
265–282, 1986.

[11] D. Kempe, J. Kleinberg, E. Tardos, “Maximizing the

spread of inﬂuence in a social network,” in Proc. ACM
SIGKDD, 2003.

[12] D. Watts, “A simple model of global cascades in random

networks,” In Proc. Natl. Acad. Sci, pp. 5766–71, 2002.
[13] W. Feller, “An Introduction to Probability Theory and

its Applications,” Wiley, 1968.

[14] Companion technical report, available at https://www.

dropbox.com/s/o01wx3a2cg0nx4x/Techrep.pdf?dl=0.
[15] A. Mislove, M. Marcon, K.-P. Gummadi, P. Druschel,

and B. Bhattacharjee, “Measurement and analysis of
online social networks,” IMC ’07.

[16] P. Brach, A. Epasto, A. Panconesi, P. Sankowski,

“Spreading rumours without the network,” in Proc. ACM
COSN, 2014.

[17] M. Penrose. Random Geometric Graphs. Oxford

University Press, Oxford, 2004.

APPENDIX
A. THEOREM 4.1

First we introduce the following concentration inequal-
ities for the binomial distribution Bin(n, p), taken from
[17]: Let H(b) = 1 − b + b log b, for b > 0. Let µ = np.

If k ≤ µ then:

If k > µ then:

µ(cid:19)(cid:19)
P(Bin(n, p)) ≤ k) ≤ exp(cid:18)−µH(cid:18) k
µ(cid:19)(cid:19)
P(Bin(n, p)) ≥ k) ≤ exp(cid:18)−µH(cid:18) k

(20)

(21)

Proof of Lemma 4.3.
For any δ > 0, We have a = α ac + o(1) > (α − δ)ac,
and so, by the deﬁnition of ac, for any t = a, . . . , ⌊Ktc⌋,

{S(t) − t + a ≤ 0} ⊆(cid:8)S(t) − t + (α − δ)(1 − (ρ∗)−1)tc ≤ 0(cid:9)
=(cid:8)S(t) ≤ t − (α − δ)(1 − (ρ∗)−1)tc(cid:9)
(cid:26) inf
⊆ [t∈[a,⌊Ktc⌋](cid:8)S(t) ≤ t − (α − δ)(1 − (ρ∗)−1)tc(cid:9)

S(t) − t + a ≤ 0(cid:27) = [t∈[a,⌊Ktc⌋]

{S(t) − t + a ≤ 0}

Hence:

t[a,⌊Ktc⌋]

Moreover, deﬁning x = t/tc, it can be be proved that:

have {a − t + S(t) < 0 for some t ∈ [tj , tj+1]} ⊆ {S(tj ) <
tj+1}. In conclusion, under super-critical conditions the
process never stops before p−1 with probability 1 − ζ(n).
Segment [p−1, c n]. Beyond time p−1 we can no longer
use (9). However, we can easily handle segment [p−1, cn]
and already conclude that, in all cases, the process reaches
at least a constant fraction of the nodes (if it survives the
bottleneck). For this, we exploit the fact that π(⌈p−1⌉) ≥
qρ∗ P (Bin(p−1, p) > Ri) > 2c for some constant c > 0.
Using again union bound and concentration inequalities,
we then show that the process never stops before cn with
probability 1 − ζ(n).
B. ALTERNATIVE APPROACH FOR TWO

COMMUNITIES

We introduce a diﬀerent approach for the G(n1, n2, p1, p2, q)

block model, which allows us to understand how seeds
should be optimally partitioned between the two com-
munities in order to minimize their number and achieve
almost complete percolation in the whole system. This
time, we assume that at each time step t a single active
node, selected uniformly at random among all usable ac-
tive nodes in the system, is used.

To simplify the exposition, we will focus on a perfectly
symmetric scenario in which p1 = p2 and n1 = n2 = n/2.
However, the same approach can be easily extended to
the general case G(n1, n2, p1, p2, q).

Diﬀerently from our ﬁrst reformulation, now we have,

E[S(xtc)] = xρ∗ tc

ρ∗ + o(tc).

Using (22) and (20), we have for any δ > 0,

P (S(t) ≤ t − (α − δ)(1 − (ρ∗)−1)tc) <

−(1−δ)xρ∗ tc

e

xtc −(α−δ)(1−(ρ∗ )−1 )tc

ρ∗ H


(1−δ)xρ∗ tc
ρ∗

Thus, by sub-additivity of probability:

(22)

for any t < T :

T1(t) + T2(t) = t

where Ti(t) denotes the (random) number of nodes used
in community i up to time t.

Now, if we consider any two diﬀerent sequences in which
active nodes are selected, such that T1(t) in one sequence
is larger than T ′
1(t) in the other sequence, we easily see
that,

S(t) − t + a ≤ 0(cid:19) ≤

−(1−δ)xρ∗ tc
e

ρ∗ H


xtc −(α−δ)(1−(ρ∗ )−1 )tc

(1−δ)xρ∗ tc
ρ∗




t[a,⌊Ktc⌋]

P(cid:18) inf
Xt∈[a,⌊Ktc⌋]

≤

α(1 − (ρ∗)−1)(1 + δ)
(1−δ)xρ∗

a

α(1−(ρ∗ )−1)ρ∗ (1+δ)

− infx∈[a/tc,K]
e

K




H


x−(α−δ)(1−(ρ∗ )−1)

(1−δ) xρ∗
ρ∗





(23)

the assertion descends immediately taking the inf of (23)
with respect to δ > 0 and letting K → ∞.

Segment [Ktc, p−1]. We basically follow [6], choosing
K = 8 and deﬁning a sequence of time instants tj =
8 · 2j tc for j = {0, 1, 2··· J} with J = min{j : ptj ≥ 1}.
We ﬁrst show that E[S(tj )] > (1 + δ)tj+1 for every j
and a properly speciﬁed δ > 0. Then, applying again
union bound and concentration inequality (20) we can
prove that P (S(tj) ≤ tj+1, for some j) goes to zero faster
than ζ(n). This implies P (S(t) − t ≤ 0, for some t ∈
[8tc, ⌈p−1⌉]) goes to 0 faster than ζ(n) under super-critical
Indeed, given the monotonicity of S(t), we
conditions.

(24)
(25)

=

(26)

2(t))
2(t))

(pT1(t))ρ(qT2(t))r−ρ

S1(T1(t), T2(t)) ≥st S1(T ′
S2(T1(t), T2(t)) ≤st S2(T ′

1(t), T ′
1(t), T ′
Furthermore, for 1 ≪ t ≪ p−1 we have:
E[S1(T1(t), T2(t)) + S2(T1(t), T2(t))] ∼
rXρ=0
f(cid:18)T1(t)
t (cid:19)
being f (x) =Pρ[ (ptx)ρ(qt(1−x))r−ρ

ρ!(r − ρ)!

rXρ=0

ρ!(r−ρ)!

+

(qT1(t))ρ(pT2(t))r−ρ

ρ!(r − ρ)!

a continuous function over [0, 1], indeﬁnitely derivable in
(0, 1) and satisfying the following properties:
i) f (x) =
f (1 − x); ii) f (x) decreases for x ∈ [0, 1/2) (and increases
for x ∈ (1/2, 1]). Previous observations lead to:

Theorem B.1. To minimize the number of seeds that
are needed to achieve complete or almost complete per-
colation in the symmetric graph G(n/2, n/2, p, p, q), with
q < p and q = Ω( 1
n ), all seeds have to be placed within the
same community.

The proof is reported in the companion technical report
[14]. At high level, the result descends from the fact that,

+ (qtx)ρ(pt(1−x))r−ρ

ρ!(r−ρ)!

]

of the assumptions that: i) the graph is connected at com-
munity level; ii) for non null oﬀ diagonal elements of P ,
pik = Ω( 1
). In particular, note that if we get (al-
ni
most) complete percolation in just one community, the
infection propagates to the entire system.

, 1
nk

We can also ask ourselves which is the optimal seed
allocation in the system, in the case in which we know
the community membership of the nodes. A straightfor-
ward extension of Theorem B.2 provides the answer to
this question:

Theorem C.2. Consider a general block model graph
with K < ∞ communities as deﬁned before; assume that
1/(npk,k) → 0 , pk,k = o(n−1/r) for any k.
In order
to minimize the number of seeds that produce (almost)
complete percolation of the entire graph, all seeds must be
placed within a single community that maximizes quantity
nk(pk)r.

As consequence, it turns out that a number of seeds:

a = (1 + ǫ)(cid:18)1 −

1

r(cid:19) min

k (cid:18) (r − 1)!

nk(pk,k)r(cid:19)(r−1)−1

(28)

for any ǫ > 0, is enough to guarantee an almost complete
percolation of the graph. Indeed, by placing these a nodes
all within a single community that maximizes quantity
nk(pk)r, let this community be k0, we have that process
Sk0 (t), and thus process Sk0 (t) is super-critical, which is
enough to trigger system-wide percolation.

At last, we can exploit Theorem C.2 also to get a diﬀer-
ent upper bound to the critical number of seeds in the case
in which seeds are selected uniformly at random among
all nodes. Indeed, it turns out that a n
seeds, where a
nk0
is the same as in (28), are enough, since w.h.p. at least
a(1 − ε/2) seeds will fall within community k0, produc-
ing super-critical conditions in community k0 (and then
in the entire system). In the case of very heterogeneous
communities, this last bound might be tighter than (27).

for any given total number of seeds, extremal trajectories
of T1(t) and T2(t) are obtained when all seeds are placed
in the same community, as a consequence of (24), (25),
and properties of (26).

Theorem B.1 can be easily generalized to the asymmet-

ric case (see [14]):

Theorem B.2. To minimize the number of seeds that
are needed to achieve complete or almost complete perco-
lation in G(n1, n2, p1, p2, q) with q = Ω( 1
n ), all seeds have
to be placed in the community having the maximum value
of ni(pi)r.

C. GENERAL BLOCK MODEL

Let nk(n) be the number of nodes in community k (k =

1, . . . , K), with n =Pk nk. We will assume that nk(n) ≫
1, for any k. We focus on a community structure in which
pik < min(pii, pkk) for any (i, k). Moreover, whenever
pik 6= 0, we will assume that pik = Ω( 1
). At last,
but without loss of generality, we assume the graph to be
connected at the community level; i.e. we assume P to be
of maximal rank (equal to K − 1). Indeed, if this in not
true we can always partition the community-level graph
into connected components and apply our results to each
connected component.

, 1
nk

ni

We ﬁrst generalize the result in Theorem 6.1:

Theorem C.1. Consider a block model with K < ∞
communities as deﬁned before; suppose, for any k, that
1/(n pk,k) → 0 , pk,k = o(n−1/r), ak/a(k)
c → αk > 1,
with:

where:

1

¯a(k)

c =(cid:18)1 −
nk(bpk,k)r(cid:19)(r−1)−1
r(cid:19)(cid:18) (r − 1)!
bpk,k =(r!) · Xρ1 ···ρk ···ρK

k,kQj6=k p
ρk!Qj6=k ρj!

with P ρj =r

pρk

1
r

ρj
jk

Let T = inf t{mink(ak − t + Sk(t)) < 0}. We have:

∀ε > 0, P(cid:18)1 −

T

maxk(nk)

> ε(cid:19) = O(cid:16)e−C1(r,mink(r,αk ))a+o(a)(cid:17)

where C1(r, α) is the same function as in Theorem 4.1.

Theorem C.1 can be used to derive a simple upper
bound to the minimum number of seeds that can produce
super-critical conditions in all communities, in the case
in which seeds are selected uniformly at random among
all nodes.
Indeed, Theorem C.1 coupled with standard
concentration arguments lead to the result that a global
number of seeds:

a = (1 + ǫ)n max

k

¯a(k)
c
nk

(27)

for any ǫ > 0, is enough to guarantee (almost) complete
percolation of the entire graph.

More in general, given an arbitrary allocation of seeds
among communities, Theorem C.1 can be used to check
whether the considered seed allocation is able to trigger
system-wide percolation. On this regard, note that Theo-
rem C.1 can be applied to any community-level connected
sub-graph of the entire system: if at least one sub-graph
satisﬁes the conditions of Theorem C.1, we get (almost)
complete percolation of the entire system, as consequence

