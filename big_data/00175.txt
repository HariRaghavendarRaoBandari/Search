6
1
0
2

 
r
a

M
1

 

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
5
7
1
0
0

.

3
0
6
1
:
v
i
X
r
a

The structure of the polynomials in preconditioned BiCG
algorithms and the switching direction of preconditioned

systems

Shoji Itoh∗ and Masaaki Sugihara†

Abstract

We present a theorem that deﬁnes the direction of a preconditioned system for the BiCG
method, and we extend it to preconditioned bi-Lanczos-type algorithms. We show that the
direction of a preconditioned system is switched by construction and by the settings of the
initial shadow residual vector. We analyze and compare the polynomial structures of four
preconditioned BiCG algorithms.

1 Introduction

The bi-Lanczos-type methods are based on the bi-conjugate gradient (BiCG) method [3, 7] and solve
the system of linear equations

(1.1)

Ax = b,

where A is a large, sparse coeﬃcient matrix of size n × n, x is the solution vector, and b is the
right-hand side (RHS) vector. Bi-Lanczos-type methods are a kind of Krylov subspace method, and
they assume the existence of a dual system:

(1.2)

ATx♯ = b♯,

(1.2) will be referred to as the “shadow system”. In general, the degree k of the Krylov subspace
generated by A and r0 is displayed as Kk (A, r0) = span(cid:8)r0, Ar0, A2r0, · · · , Ak−1r0(cid:9), where r0 is
the initial residual vector r0 = b − Ax0, for an initial guess to the solution x0. The Krylov subspace
Kk (A, r0) generated by the k-th iteration forms the structure of

(1.3)

xk ∈ x0 + Kk (A, r0) ,

where xk is the approximate solution vector (or simply the “solution vector”).

The preconditioned bi-Lanczos-type algorithms have not been widely discussed in the literature.
In general, with a preconditioned Krylov subspace method, there are some diﬀerent algorithms
depending on the preconditioning conversion. The structure of the approximate solution formed by
the Krylov subspace and the performance of a given algorithm may diﬀer substantially from those
of other algorithms [5].
In particular, preconditioned bi-Lanczos-type algorithms construct dual
systems, and so their analysis is more complex.

The conjugate gradient squared (CGS) method [11] is one of the bi-Lanczos-type methods, and
an improved preconditioned CGS (improved PCGS) algorithm has been proposed [5]. In a previous
study [6], we compared the structures of the vectors and Krylov subspaces of four PCGS algorithms,
including the improved PCGS. However, it is also important to analyze the structures on the poly-
nomials of the vectors in such bi-Lanczos-type algorithms, and therefore, in this paper, we analyze
the structures on the polynomials of the preconditioned BiCG (PBiCG) algorithms that correspond
to those analyzed in our previous study [6]. Furthermore, in [6], we also discussed the construction
of the initial shadow residual vector (ISRV) in terms of the direction of the preconditioned system;
we further analyze this topic in this paper.

∗Division of Science, School of Science and Engineering, Tokyo Denki University. (itosho@acm.org).
†Department of Physics and Mathematics, College of Science and Engineering, Aoyama Gakuin University.

1

In this paper, when we refer to a preconditioned algorithm, we mean one involving a precondition-
ing operator M or a preconditioning matrix, and by preconditioned system, we mean one that has
been converted by some operator(s) based on M . These terms never indicate the algorithm for the
preconditioning operation itself, such as incomplete LU decomposition or the approximate inverse.
For example, under a preconditioned system, the original linear system (1.1) becomes

(1.4)

(1.5)

˜A˜x = ˜b,
˜A = M −1

L AM −1

R , ˜x = MRx, ˜b = M −1

L b,

with the preconditioner M = MLMR (M ≈ A). In this paper, the matrix and the vector in the
preconditioned system are denoted by a tilde (˜ ). However, the conversions in (1.4) and (1.5) are
not implemented directly; rather, we construct the preconditioned algorithm that is equivalent to
solving (1.4).

This paper is organized as follows. In section 2, we analyze various PBiCG algorithms in terms
on their polynomial structures, and we clarify the details of the PCGS algorithms discussed in [6].
In section 3, we analyze the mechanism that switches the direction of a preconditioned system for
the BiCG method, and we provide the details for some instances that show that, depending on the
construction and setting of the ISRV, the BiCG method may be transformed to another method
or the direction of the preconditioned system may not be determined.
In section 4, we present
some numerical results that verify the equivalence of the PBiCG and PCGS methods, the properties
of each of the four PBiCG algorithms discussed in section 2, the switching of the direction of a
preconditioned system for the BiCG method, and the resulting basic properties, as discussed in
section 3. Our conclusions are presented in section 5.

2 Analysis of various preconditioned BiCG algorithms

In this section, we consider four diﬀerent PBiCG algorithms, these PBiCG algorithms correspond
to four PCGS algorithms as shown in Figure 1; these are the same ones discussed in [6].

Algorithm 1 can be used to derive these four PBiCG algorithms.

Figure 1: Relations between the four diﬀerent PCGS algorithms[6]. 7→ : Splitting left vector to right
members (preconditioner and vector), ≡ : Substituting left vector for right members.

Algorithm 1. BiCG method under preconditioned system:

= 0,

˜x0 is an initial guess, ˜r0 = ˜b − ˜A˜x0, set βPBiCG
(cid:16)˜r♯
For k = 0, 1, 2, · · · , until convergence, Do:

0, ˜r0(cid:17) 6= 0, e.g., ˜r♯

0 = ˜r0,

−1

˜pk = ˜rk + βPBiCG

k−1

˜pk−1,

2

,

k

=

k−1

αPBiCG

˜p♯
k = ˜r♯

k + βPBiCG

˜p♯
k−1,
k, ˜rk(cid:17)
(cid:16)˜r♯
k, ˜A˜pk(cid:17)
(cid:16)˜p♯
˜xk+1 = ˜xk + αPBiCG
˜rk+1 = ˜rk − αPBiCG
˜r♯
k+1 = ˜r♯
k − αPBiCG
(cid:16)˜r♯

˜pk,
˜A˜pk,
˜AT ˜p♯
k,
k+1, ˜rk+1(cid:17)
(cid:16)˜r♯

k, ˜rk(cid:17)

βPBiCG
k

k

k

k

=

,

End Do

Any preconditioned algorithm can be derived by substituting the matrix with the preconditioner
for the matrix with the tilde and the vectors with the preconditioner for the vectors with the tilde.
Obviously, Algorithm 1 without the preconditioning conversion is the same as the BiCG method. If
˜A is a symmetric positive deﬁnite (SPD) matrix and ˜r♯
0 = ˜r0, then Algorithm 1 is mathematically
equivalent to the conjugate gradient (CG) method [4] under a preconditioned system.

We present the following general deﬁnition; however, the PBiCG will also require Theorem 3,

which will be presented in section 3.

Deﬁnition 1 For the system and solution
(1.4')

˜A˜x = ˜b,
˜A = M −1

(1.5')

L AM −1

R , ˜x = MRx, ˜b = M −1

L b,

we deﬁne the direction of a preconditioned system of linear equations as follows:

• The two-sided preconditioned system: Equation (1.5');

• The right-preconditioned system: ML = I and MR = M in (1.5');

• The left-preconditioned system: ML = M and MR = I in (1.5'),

where M is the preconditioner M = MLMR (M ≈ A), and I is the identity matrix.

Other vectors in the solving method are not preconditioned. The initial guess is given as x0, and

˜x0 = MRx0.

The recurrence relations of the BiCG under a preconditioned system are

(2.1)

(2.2)

(2.3)

R0(˜λ) = 1, P0(˜λ) = 1,
Rk(˜λ) = Rk−1(˜λ) − αPBiCG
k−1
Pk(˜λ) = Rk(˜λ) + βPBiCG

k−1 Pk−1(˜λ).

˜λPk−1(˜λ),

Rk(˜λ) is the degree k of the residual polynomial, and Pk(˜λ) is the degree k of the probing direction
polynomial, that is,

(2.4)

(2.5)

˜rk = Rk( ˜A)˜r0,
˜pk = Pk( ˜A)˜r0.

♯
Further, for the shadow under the preconditioned system ˜AT ˜x♯ = ˜b

, we have

(2.6)

(2.7)

k = Rk( ˜AT)˜r♯
˜r♯
0,
˜p♯
k = Pk( ˜AT)˜r♯
0.

Theorem 1 (Lanczos [7], Fletcher [3], Itoh and Sugihara [5]) The BiCG method under a pre-
conditioned system satisﬁes the following conditions:
i, ˜rj(cid:17) = 0 (i 6= j),
(cid:16)˜r♯
i, ˜A˜pj(cid:17) = 0 (i 6= j),
(cid:16)˜p♯

(biorthogonality),

(biconjugacy).

(2.9)

(2.8)

3

Proposition 1 The direction of a preconditioned system is determined by the operations of αk
and βk in each PBiCG algorithm. These intrinsic operations are based on biorthogonality and
biconjugacy.

Figure 2: Relations between the four PBiCG algorithms that correspond to the respective PCGS
algorithms shown in Figure 1. 7→ : Splitting left vector to right members (preconditioner and vector),
≡ : Substituting left vector for right members.

Theorem 2 There exists a PBiCG algorithm that corresponds to the preconditioning conversion
deﬁned by any given PCGS, and the values of αk and βk will be equivalent to those of the PCGS.

Proof See [5].
In particular, Reference [5] explains the relations between αPBiCG

✷
of the standard
PBiCG and αPCGS
of the improved PCGS. In this paper, we consider four PBiCG
algorithms shown in Figure 2, and these correspond to the four PCGS algorithms shown in Figure 1.

and βPBiCG

and βPCGS

k

k

k

k

2.1 PBiCG corresponding to conventional PCGS of the right system

The PBiCG algorithm corresponding to the conventional PCGS (the right-preconditioned system)
is derived by applying the following preconditioning conversion1 to Algorithm 1:

(2.10)

˜A = M −1
˜rk = M −1

L AM −1
L rk, ˜pk = M −1

R , ˜xk = MRxk, ˜b = M −1
L b,
k, ˜p♯
L r♭

L pk, ˜r♯

k = M T

k = M T

L p♭
k.

Algorithm 2 is presented below.

Algorithm 2. PBiCG algorithm corresponding to the conventional PCGS:

x0 is an initial guess, r0 = b − Ax0,
(cid:16)˜r♯
0 = r0,
For k = 0, 1, 2, · · · , until convergence, Do:

0, r0(cid:1) 6= 0, e.g., r♭

0, ˜r0(cid:17) = (cid:0)r♭

set β−1 = 0,

pk = rk + βk−1pk−1,
p♭
k = r♭
k−1,

k + βk−1p♭
k, rk(cid:1)

(cid:0)r♭
k, AM −1pk(cid:1)

(cid:0)p♭

αk =

,

1In this case, the shadow vectors of ˜r

♭
k, but there is no problem with
♯
♯
♭
k ≡ M −T
k and M T
L p
r
k
♯
k. The details of this notation will be discussed in sections 2.5 and 3. The same applies to (2.12).

♯
k in the notation of the algorithm. However, these internal structures are r

♯
k are converted to M T
L r

♭
k and M T

♯
k and ˜p

L p

p

displaying M T
L r
♭
k ≡ M −T
and p

4

xk+1 = xk + αkM −1pk,
rk+1 = rk − αkAM −1pk,
r♭
k+1 = r♭
k − αkM −TATp♭
k,
βk = (cid:0)r♭
k+1, rk+1(cid:1)
(cid:0)r♭

k, rk(cid:1)

,

krk+1k

kbk

≤ ε.

End Do

The stopping criterion is

(2.11)

This algorithm can also be derived by the following conversion:

(2.12)

˜A = AM −1, ˜xk = M xk, ˜b = b,
˜rk = rk, ˜pk = pk, ˜r♯
k, ˜p♯

k = r♭

k = p♭
k.

This is the same as using ML = I and MR = M in (2.10). Note that this is the same as
preconditioning to obtain ˜A, ˜xk, and ˜b, but not converting the other vectors; thus, it is the right-
preconditioned system.

Now, we convert ˜A and ˜r0 using (2.10) in order to obtain the polynomial representations of (2.4)

and (2.5) as ˜rk and ˜pk, respectively:

˜rk = RR
˜pk = P R

k ( ˜A)˜r0 = M −1
k ( ˜A)˜r0 = M −1

L RR
L P R

k (AM −1)r0,
k (AM −1)r0.

We have denoted these polynomials with a superscript “R” 2, to indicate that Algorithm 2, which
corresponds to the conventional PCGS method, is a right-preconditioned system [6]. The ISRV is
set as r♭

0 = r0 in this algorithm.

Furthermore, we use (2.10) to convert ˜rk and ˜pk:

(2.13)
(2.14)

rk = RR
pk = P R

k (AM −1)r0,
k (AM −1)r0.

The shadow system is also treated in a similar manner using (2.10):

˜r♯
k = RR
˜p♯
k = P R

k ( ˜AT)˜r♯
k ( ˜AT)˜r♯

0 = M T
0 = M T

L RR
L P R

k (M −TAT)r♭
0,
k (M −TAT)r♭
0.

Finally, we have

(2.15)
(2.16)

r♭
k = RR
p♭
k = P R

k (M −TAT)r♭
0,
k (M −TAT)r♭
0.

We note that (2.13), (2.14), (2.15), and (2.16) can also be obtained using (2.12).
The structures of biorthogonality (2.8) and biconjugacy (2.9) are as follows:

(2.17)

(2.18)

(cid:16)˜r♯

i, ˜rj(cid:17) = (cid:16)M T
= (cid:16)RR
i, ˜A˜pj(cid:17) = (cid:16)M T
= (cid:16)P R

(cid:16)˜p♯

L r♭

i, M −1

i, rj(cid:17)

L rj(cid:17) = (cid:16)r♭
0, RR

j (AM −1)r0(cid:17) ,

i (M −TAT)r♭

L p♭

i, (M −1

L AM −1

R )(M −1

L pj)(cid:17) = (cid:16)p♭

i, (AM −1)pj(cid:17)

i (M −TAT)r♭

0, (AM −1)P R

j (AM −1)r0(cid:17) .

In Algorithm 2, the structures of r♭

their coeﬃcient matrices are ﬁxed as M −TAT, because the ISRV is r♭
be transformed into M −TRR
AM −1, so M xk ∈ M x0 + KR
to the right-preconditioned system.

0 are ﬁxed, and
0 cannot
k (ATM −T)r♯
0. Therefore, the coeﬃcient matrix of their linear system is
k (AM −1, r0) is structured, and Algorithm 2 is conﬁrmed to correspond

k (M −TAT)r♭
0, and RR

k (M −TAT)r♭

k (M −TAT)r♭

0 and p♭

k = RR

k = P R

2 In a similar manner, we will use “L” to indicate left-preconditioned system and “W” to indicated two-sided

preconditioned system (see section 3).

5

2.2 PBiCG corresponding to the left system PCGS (Left-PBiCG)

The left-PBiCG algorithm corresponding to the left-PCGS can be derived by using the following
preconditioning conversion3 in Algorithm 1:

(2.19)

˜A = M −1A, ˜xk = xk, ˜b = M −1b,
˜rk = r+

k , ˜pk = p+

k = r♯

k , ˜r♯

k, ˜p♯

k = p♯
k.

Algorithm 3. PBiCG algorithm corresponding to left-PCGS:

x0 is an initial guess, r+
(cid:16)˜r♯
For k = 0, 1, 2, · · · , until convergence, Do:

0 (cid:17) 6= 0, e.g., r♯

0, ˜r0(cid:17) = (cid:16)r♯

0 = M −1 (b − Ax0) ,

0 = r+
0 ,

0, r+

set β−1 = 0,

,

αk =

(cid:16)p♯

p+
k = r+
p♯
k = r♯

k + βk−1p+
k−1,
k + βk−1p♯
k−1,
k (cid:17)
(cid:16)r♯
k, r+
k (cid:17)
k, M −1Ap+
xk+1 = xk + αkp+
k ,
r+
k+1 = r+
k+1 = r♯
r♯
(cid:16)r♯

k − αkM −1Ap+
k ,
k − αkATM −Tp♯
k,
k+1(cid:17)
k+1, r+
k (cid:17)
(cid:16)r♯
k, r+

βk =

,

End Do

In this algorithm, the stopping criterion is

(2.20)

kr+
k+1k
kM −1bk

≤ ε.

The polynomials of the linear system are converted as follows:

(2.21)

(2.22)

and

˜rk = RL
˜pk = P L

k ( ˜A)˜r0 = RL
k ( ˜A)˜r0 = P L

k (M −1A)r+
0 ,
k (M −1A)r+
0 ,

r+
k = RL
p+
k = P L

k (M −1A)r+
0 ,
k (M −1A)r+
0 .

In the shadow system, we have

˜r♯
k = RL
˜p♯
k = P L

k ( ˜AT)˜r♯
k ( ˜AT)˜r♯

0 = RL
0 = P L

k (ATM −T)r♯
0,
k (ATM −T)r♯
0,

r♯
k = RL
p♯
k = P L

k (ATM −T)r♯
0,
k (ATM −T)r♯
0.

and

3The notation r

+

k is important and will be discussed in section 2.5, but there is no problem with displaying rk in

rk. Note that this is also true for p

+

k .

the notation of the algorithm. However, its internal structure is r

6

+

k ≡ M −1

The structures of biorthogonality and biconjugacy are as follows:

j (cid:17)
i, r+

(2.23)

(2.24)

(cid:16)˜r♯

i, ˜rj(cid:17) = (cid:16)r♯
= (cid:16)RL
i, ˜A˜pj(cid:17) = (cid:16)p♯
= (cid:16)P L
In Algorithm 3, the structures of r+

(cid:16)˜p♯

0 (cid:17) ,

j (M −1A)r+

i (ATM −T)r♯
0, RL
j (cid:17)
i, (M −1A)p+
i (ATM −T)r♯
0, (M −1A)P L

j (M −1A)r+

0 (cid:17) .

their coeﬃcient matrices are ﬁxed as M −1A, because the initial residual vector is r+
xk ∈ x0 + KL
system. This ISRV is set as r♯

0 are ﬁxed, and
0 . Therefore,
0 ) is structured, and Algorithm 3 is conﬁrmed to be the left-preconditioned

k (M −1A, r+

k = P L

k (M −1A)r+

k (M −1A)r+

0 and p+

k = RL

0 = r+
0 .

For reference, this algorithm can also be derived by the following conversion:

(2.25)

L b,
k, ˜p♯
If ML = M and MR = I are set, then this is the same as (2.19).

R , ˜xk = MRxk, ˜b = M −1
R r♯

˜A = M −1
˜rk = MRr+

k , ˜pk = MRp+

k = M −T

L AM −1

k , ˜r♯

k = M −T

R p♯
k.

2.3 Standard PBiCG

This is the most general algorithm for the PBiCG, and it corresponds to the PCGS algorithm labeled
Improved1 in [6]. This algorithm is derived from the following preconditioning conversion applied
to Algorithm 1:

(2.26)

˜A = M −1
˜rk = M −1

L AM −1
L rk, ˜pk = MRp+

R , ˜xk = MRxk, ˜b = M −1
L b,
R r♯

k = M −T

k , ˜r♯
Algorithm 4. Standard PBiCG algorithm:

k, ˜p♯

k = M T

L p♭
k.

x0 is an initial guess, r0 = b − Ax0,
0, M −1r0(cid:17) 6= 0, e.g., r♯
(cid:16)˜r♯
For k = 0, 1, 2, · · · , until convergence, Do:

0, ˜r0(cid:17) = (cid:16)r♯

set β−1 = 0,

0 = M −1r0,

p+
k = M −1rk + βk−1p+
k = M −Tr♯
k + βk−1p♭
p♭

k−1,
k−1,

,

αk =

k, M −1rk(cid:17)
(cid:16)r♯
k, Ap+
(cid:0)p♭
k (cid:1)
xk+1 = xk + αkp+
k ,
rk+1 = rk − αkAp+
k ,
r♯
k+1 = r♯
k − αkATp♭
k,
k+1, M −1rk+1(cid:17)
(cid:16)r♯
(cid:16)r♯

k, M −1rk(cid:17)

βk =

,

End Do

In this algorithm, the stopping criterion is (2.11).
Although sometimes the ISRV is set such that (r♯

assume (˜r♯
(M −T

0, ˜r0) 6= 0, e.g., r♯

0 = M −1r0, since (˜r♯

0, ˜r0) =

0, M −1

R r♯
The polynomials of the linear system are converted as

0, M −1r0) from (2.26); see section 3.

L r0) = (r♯

0, r0) 6= 0, e.g., r♯

0 = r0, in many cases, we will

(2.27)

(2.28)

˜rk = RL
˜pk = P L

k ( ˜A)˜r0 = M −1
k ( ˜A)˜r0 = M −1

L RL
L P L

k (AM −1)r0,
k (AM −1)r0,

7

and

(2.29)

(2.30)

rk = RL
p+
k = M −1P L

k (AM −1)r0 = M RL

k (M −1A)M −1r0,

k (AM −1)r0 = P L

k (M −1A)M −1r0.

In the shadow system, we have

˜r♯
k = RL
˜p♯
k = P L

k ( ˜AT)˜r♯
k ( ˜AT)˜r♯

0 = M −T
0 = M −T

R RL
R P L

k (ATM −T)r♯
0,
k (ATM −T)r♯
0,

and

k (ATM −T)r♯
0,

r♯
k = RL
p♭
k = M −TP L

k (ATM −T)r♯
0.

The structures of biorthogonality and biconjugacy are as follows:

(2.31)

(2.32)

(cid:16)˜r♯

i, ˜rj(cid:17) = (cid:16)M −T

R r♯

i, M −1

L rj(cid:17) = (cid:16)M −Tr♯

i, M −1rj(cid:17)

i, rj(cid:17) = (cid:16)r♯
j (AM −1)r0(cid:17) ,
j )(cid:17) = (cid:16)p♭

j (cid:17)
i, Ap+
j (AM −1)r0(cid:17) .

= (cid:16)RL
i, ˜A˜pj(cid:17) = (cid:16)M T

(cid:16)˜p♯

i (ATM −T)r♯

0, M −1RL

L p♭

i, (M −1

L AM −1

R )(MRp+

= (cid:16)M −TP L

i (ATM −T)r♯

0, AM −1P L

Remark 1 In Algorithm 4, the biorthogonal and biconjugate structures are not immediately apparent
when either M −1 operates on the linear system or M −T operates on the shadow system. However,
Algorithm 4 can be reduced to Algorithm 3 of the left system by using r+
k 7→
M −Tp♯
k; therefore, Algorithm 4 is coordinative to the left system. The structure of the solution
vector for each Krylov subspace is xk ∈ x0 + KL
k (AM −1, r0); this
is obtained by splitting r+
0 . These structures are veriﬁed theoretically in section 3 and numerically
in section 4.

0 ) 7→ xk ∈ x0 + M −1KL

k ≡ M −1rk and p♭

k (M −1A, r+

Remark 2 We explicitly provided the equations for the right endpoints of (2.29) and (2.30). These
are the ﬁnal structures for the setting of r♯

0 = M −1r0 (see Example 2 in the Appendix A).

2.4 PBiCG corresponding to Improved2

The PBiCG algorithm corresponding to the Improved2 PCGS algorithm in [6] (Improved2) is derived
from applying the following preconditioning conversion to Algorithm 1:

(2.33)

˜A = M −1
˜rk = M −1

L AM −1
L rk, ˜pk = M −1

R , ˜xk = MRxk, ˜b = M −1
L b,
R r♯
k = M −T

L pk, ˜r♯

k, ˜p♯

k = M −T

R p♯
k.

This is diﬀerent from the conversion applied to ˜pk and ˜p♯

k in (2.26) for Algorithm 4.

Algorithm 5. PBiCG algorithm corresponding to Improved2:

x0 is an initial guess, r0 = b − Ax0,
0, M −1r0(cid:17) 6= 0, e.g., r♯
(cid:16)˜r♯
For k = 0, 1, 2, · · · , until convergence, Do:

0, ˜r0(cid:17) = (cid:16)r♯

set β−1 = 0,

0 = M −1r0,

pk = rk + βk−1pk−1,
(cid:0)M −1pk = M −1rk + βk−1M −1pk−1, (cid:1)
p♯
k = r♯

αk =

k + βk−1p♯
(cid:16)M −Tr♯

k−1,
k, rk(cid:17)

(cid:16)M −Tp♯

k, AM −1pk(cid:17)

8

=

(cid:16)r♯
(cid:16)M −Tp♯

k, M −1rk(cid:17)
k, AM −1pk(cid:17)

,

xk+1 = xk + αkM −1pk,
rk+1 = rk − αkAM −1pk,
k − αkATM −Tp♯
r♯
k+1 = r♯
k,
k+1, rk+1(cid:17)

(cid:16)M −Tr♯

βk =

(cid:16)M −Tr♯

k, rk(cid:17)

=

(cid:16)r♯

k+1, M −1rk+1(cid:17)
(cid:16)r♯

k, M −1rk(cid:17)

,

End Do

In this algorithm, the stopping criterion is (2.11).
The structure of the biorthogonality is the same as that of (2.31) for Algorithm 4, because the
k. The probing direction polynomials of the

same preconditioning conversion is used for ˜rk and ˜r♯
linear and shadow systems are converted as

(2.34)

(2.35)

and

(2.36)

(2.37)

˜pk = P L
˜p♯
k = P L

k ( ˜A)˜r0 = M −1
k ( ˜AT)˜r♯

L P L
0 = M −T
R P L

k (AM −1)r0,

k (ATM −T)r♯
0,

pk = P L
p♯
k = P L

k (AM −1)r0 = M P L
k (ATM −T)r♯
0.

k (M −1A)M −1r0,

The structure of the biconjugacy is

(2.38)

(cid:16)˜p♯

i, ˜A˜pj(cid:17) = (cid:16)M −T

R p♯
= (cid:16)M −TP L

i, (M −1

L AM −1

R )(M −1

i (ATM −T)r♯

0, AM −1P L

L pj)(cid:17) = (cid:16)M −Tp♯
j (AM −1)r0(cid:17) .

i, AM −1pj(cid:17)

This structure is the same as that of (2.32) for Algorithm 4. This ISRV is set as r♯

0 = M −1r0.

Remark 3 As before, in Algorithm 5, the biorthogonal and biconjugate structures are not immedi-
ately apparent when either M −1 operates on the linear system or M −T operates on the shadow
system. However, the structure of the solution vector for each Krylov subspace is again xk ∈
k (AM −1, r0), because Algorithm 5 is equivalent to Algorithm 4 on the αk and βk, the
x0 + M −1KL
residual and shadow residual vectors, respectively. These properties are veriﬁed theoretically in sec-
tion 3 and numerically in section 4.

Remark 4 We explicitly provided (2.36) for the right endpoint. This is the ﬁnal structure obtained
for r♯

0 = M −1r0 (see Remark 2).

2.5 Characteristic features of the four PBiCG algorithms

In this section, we present the characteristics of each of the PBiCG algorithms. These include the
construction of the ISRV, the biorthogonal and biconjugate structures of the αk and βk, and the
structures of the solution vector for each Krylov subspace. In the following equations, the underlined
inner products are the operations on αk and βk.

• PBiCG corresponding to the conventional PCGS (Algorithm 2):

r♭
0 = r0,
k, ˜rk(cid:17) = (cid:16)RR
(cid:16)˜r♯
k, ˜A˜pk(cid:17) = (cid:16)P R
(cid:16)˜p♯

k (M −TAT)r♭

0, RR

k (AM −1)r0(cid:17) = (cid:16)r♭

k, rk(cid:17),

k (M −TAT)r♭

0, (cid:0)AM −1(cid:1) P R

k (AM −1)r0(cid:17) = (cid:16)p♭

k, (AM −1)pk(cid:17),

M xk ∈ M x0 + KR

k (AM −1, r0).

9

• Left-PBiCG (Algorithm 3):

r♯
0 = r+
0 ,
k, ˜rk(cid:17) = (cid:16)RL
(cid:16)˜r♯
k, ˜A˜pk(cid:17) = (cid:16)P L
(cid:16)˜p♯

k (ATM −T)r♯

0, RL

k (M −1A)r+

k (ATM −T)r♯

0, (cid:0)M −1A(cid:1) P L

0 (cid:17) = (cid:16)r♯
k (M −1A)r+

k (cid:17),

k, r+
0 (cid:17) = (cid:16)p♯

k, (M −1A)p+

k (cid:17),

xk ∈ x0 + KL

k (M −1A, r+

0 ).

• Standard PBiCG (Algorithm 4):

r♯
0 = M −1r0,

k, ˜rk(cid:17) = (cid:16)RL
(cid:16)˜r♯
k, ˜A˜pk(cid:17) = (cid:16)M −TP L
(cid:16)˜p♯

k (ATM −T)r♯

0, M −1RL

k (AM −1)r0(cid:17) = (cid:16)r♯

k, M −1rk(cid:17),

k (ATM −T)r♯

0, AM −1P L

k (AM −1)r0(cid:17) = (cid:16)p♭

k, Ap+

k (cid:17),

xk ∈ x0 + M −1KL

k (AM −1, r0).

• PBiCG corresponding to Improved2 (Algorithm 5):

(cid:16)˜r♯

r♯
0 = M −1r0,
k, ˜rk(cid:17) = (cid:16)M −TRL
= (cid:16)M −Tr♯
k, ˜A˜pk(cid:17) = (cid:16)M −TP L
= (cid:16)M −Tp♯

(cid:16)˜p♯

xk ∈ x0 + M −1KL

k (AM −1)r0(cid:17)

0, RL
k, M −1rk(cid:17) ,
0, AM −1P L

k (ATM −T)r♯
k, rk(cid:17) = (cid:16)r♯
k (ATM −T)r♯
k, AM −1pk(cid:17) = (cid:16)p♯
k (AM −1, r0).

k (AM −1)r0(cid:17)

k, (M −1A)(M −1pk)(cid:17) ,

Although, superﬁcially, it appears that the solution vector has the same recurrence relation in
both Algorithm 2 and Algorithm 5 (xk+1 = xk + αkM −1pk), they belong to diﬀerent systems
because in Algorithm 2, we have αR
k and pk = P R
k , whereas in Algorithm 5, we
k (AM −1)r0 ≡ pL
have αL
k .

k (AM −1)r0 ≡ pR

k and pk = P L

We have the following proposition about the direction of the preconditioning conversion4.

Proposition 2 (Congruency) There is congruence to a PBiCG algorithm in the direction of the
preconditioning conversion.

Proof We have already shown the following instances: the PBiCG of the right system (Algo-
rithm 2) can be derived from the two-sided conversion (2.10); if ML = I and MR = M , the conversion
of (2.10) is reduced to that of (2.12), then Algorithm 2 is derived. Still if ML = M , MR = I, then
Algorithm 2 can be derived. Each of the other preconditioned algorithms (Algorithm 3, 4, and 5)
has the same relationship to its corresponding preconditioning conversion.
✷

Proposition 3 In the biorthogonal structure (˜r♯
k, ˜rk) in the iterated part of each PBiCG algorithm,
there exists a single preconditioning operator between rk (basic form of the residual vector) and r♯
k
(basic form of the shadow residual vector), such that M −1 operates on rk or M −T operates on r♯
k.
Here, the basic form of the residual vector of a linear system includes its polynomial structure
of rk = Rk(AM −1)r0, and the basic form of the shadow residual vector includes its polynomial
structure of r♯
0; these vectors and polynomials are not considered when setting the
ISRV.

k = Rk(ATM −T)r♯

4 Although this property has been repeatedly discussed in the literature, it should be considered when evaluating

the direction of a preconditioned system.

10

Proof. 1) From the viewpoint of the matrix and vector structure of each algorithm:
We split r♭

k 7→ M −1rk, in Algorithms 2 to 5 then we set

0 7→ M −Tr♯

0 and r+
(cid:16)˜r♯
(cid:16)˜r♯
(cid:16)˜r♯
(cid:16)˜r♯

k, ˜rk(cid:17) = (cid:16)r♭
k, ˜rk(cid:17) = (cid:16)r♯
k, ˜rk(cid:17) = (cid:16)r♯
k, ˜rk(cid:17) = (cid:16)M −Tr♯

k, rk(cid:17) ,
k, M −1rk(cid:17) ,

k, rk(cid:17) 7→ (cid:16)M −Tr♯
k (cid:17) 7→ (cid:16)r♯
k, r+
k, M −1rk(cid:17),

k, rk(cid:17) = (cid:16)r♯

k, M −1rk(cid:17) .

The underlined inner products are the actual operators for the various PBiCG.
In addition, for the two-sided conversion, we obtain

(cid:16)˜r♯

k, ˜rk(cid:17) = (cid:16)M −T

R r♯

k, M −1

L rk(cid:17) = (cid:16)M −Tr♯

k, rk(cid:17) = (cid:16)r♯

k, M −1rk(cid:17) .

✷

Proof. 2) From the viewpoint of the polynomial of the residual vector:
We split r♭

k 7→ M −1rk in Algorithms 2 to 5, then we set

0 7→ M −Tr♯
(cid:16)˜r♯

0 and r+
k, ˜rk(cid:17) = (cid:16)Rk(M −TAT)r♭

0, Rk(AM −1)r0(cid:17)

7→ (cid:16)M −TRk(ATM −T)r♯

0, Rk(AM −1)r0(cid:17) ,

(cid:16)˜r♯

(cid:16)˜r♯
(cid:16)˜r♯

0 (cid:17)
0, Rk(M −1A)r+

k, ˜rk(cid:17) = (cid:16)Rk(ATM −T)r♯
7→ (cid:16)Rk(ATM −T)r♯
k, ˜rk(cid:17) = (cid:16)Rk(ATM −T)r♯
k, ˜rk(cid:17) = (cid:16)M −TRk(ATM −T)r♯

0, M −1Rk(AM −1)r0(cid:17) ,
0, M −1Rk(AM −1)r0(cid:17),
0, Rk(AM −1)r0(cid:17).

The underlined inner products are the structures of the polynomial corresponding to the residual

vectors in each PBiCG.

In addition, for the two-sided conversion, we obtain

(cid:16)˜r♯

k, ˜rk(cid:17) = (cid:16)Rk(M −T

R ATM −T

L )M −T

R r♯

R )M −1

L r0(cid:17)

L AM −1
0, Rk(M −1
L Rk(AM −1)r0(cid:17)

= (cid:16)M −T
R Rk(ATM −T)r♯
0, M −1
0, Rk(AM −1)r0(cid:17)
= (cid:16)M −TRk(ATM −T)r♯
0, M −1Rk(AM −1)r0(cid:17) .
= (cid:16)Rk(ATM −T)r♯
k, ˜A˜pk) in the iterated part of each PBiCG algorithm,
Corollary 1 In the biconjugate structure (˜p♯
there exists a single preconditioning operator between A (coeﬃcient matrix) and p♯
k (basic form of the
shadow probing direction vector), such that M −1 operates on A or M −T operates on p♯
k; furthermore,
there exists a single preconditioning operator between A and pk (basic form of the probing direction
vector).

✷

Here, the basic form of the probing direction vector of a linear system includes the polynomial
structure of pk = Pk(AM −1)p0, and the basic form of the shadow probing direction vector includes
the polynomial structure of p♯
0. These vectors and polynomials are not considered
when setting the ISRV.

k = Pk(ATM −T)p♯

3 Switching the direction of the preconditioned system for the

BiCG method

From the analyses presented in the previous sections and in [6], we know that the intrinsic biorthogo-
nal and biconjugate structures of the preconditioned system are the same for each of the four PBiCG

11

algorithms and their corresponding PCGS algorithms, and this is independent of the setting of the
ISRV. We now consider the other factor that can switch the direction of the preconditioning: the
construction and setting of the ISRV.

As stated above, if the coeﬃcient matrix A is SPD and r♯

0 = r0, then the BiCG method is
mathematically equivalent to the CG method. However, the BiCG method solves systems of linear
equations that correspond to a nonsymmetric coeﬃcient matrix, and the ISRV r♯
0 is usually regarded
as arbitrary, providing that (r♯
0, r0) 6= 0. On the other hand, we may construct an arbitrary vector
r♯
0 = U r0, such that (r♯
0, U r0) 6= 0. Here, the matrix U is unprescribed. Obviously, U r0 can
generate random vectors. However, by the appropriate construction of U , the BiCG can be reduced
to the other method [1, 2]. We show this result as the following proposition.

Proposition 4 If we let U = AT when r♯
gate residual (BiCR) method [9, 10] 5.

0 = U r0 in the BiCG method, then we obtain the biconju-

Theorem 3 The direction of a preconditioned system for the BiCG method is switched by the con-
struction and setting of the ISRV.

Proof. It is suﬃcient to prove the following cases regarding the biorthogonality. The biconjugacy

can be proven in a similar manner.
0, ˜r0(cid:17) 6= 0, then ˜r♯

Case I: If (cid:16)˜r♯
We mention the following special case for future reference.
Case II: If (cid:16)˜r♯

0, ˜U ˜r0(cid:17) 6= 0, then ˜r♯
I. The case of ˜U = I, such that (cid:16)˜r♯

0 = ˜U ˜r0,
0, ˜U ˜r0(cid:17) = (cid:16)˜r♯

0 = ˜r0.

( ˜U : preconditioned system of U ).
0, ˜r0(cid:17) 6= 0 :

With the equation ˜r♯

0 = ˜r0, we may construct the following three items. Each item has two
veriﬁcations, the ﬁrst one directly applies the ISRV to the polynomials of the preconditioned system,
the second applies the ISRV to the polynomials of the standard PBiCG, which have the same form in
all items. The double-underlined equations show the construction of the ISRV that is specialized for
switching the direction of a preconditioned system; when right-hand side is given (we term “setting”),
the direction is ﬁxed.

1) The left-preconditioned system (ISRV1: r♯

0 = M −1r0):

0, M −1r0(cid:17) 6= 0, then r♯

L r0,
L r0(cid:17) = (cid:16)r♯
0 = r♯
0, Rk( ˜A)˜r0(cid:17) = (cid:16)Rk(ATM −T)r♯

0, ˜r0 = M −1r0.

0 = M −1r0.

0, Rk(M −1A)(M −1r0)(cid:17)

k (M −1A)(M −1r0)(cid:1).

0 = M −1r0 that constructs the left system,

R r♯

0, M −1

0, ˜r0 = M −1
R r♯

0 = M −T
0, ˜r0(cid:17) = (cid:16)M −T

If ˜r♯
(cid:16)˜r♯
This is equivalent to ˜r♯
k, ˜rk(cid:17) = (cid:16)Rk( ˜AT)˜r♯
(cid:16)˜r♯
= (cid:0)RL
In the standard PBiCG with r♯
(cid:16)˜r♯
= (cid:16)RL

k, ˜rk(cid:17) = (cid:16)Rk(ATM −T) r♯
k (ATM −T)(M −1r0), RL

k (ATM −T)(M −1r0), RL

0, M −1Rk(AM −1)r0(cid:17)
k (M −1A)(M −1r0)(cid:17).

2) The right-preconditioned system (ISRV2: r♯

0 = M Tr0):

If ˜r♯
(cid:16)˜r♯

R r♯

0 = M −T
0, ˜r0(cid:17) = (cid:16)M −T

0, ˜r0 = M −1
R r♯

L r0,
L r0(cid:17) = (cid:16)M −Tr♯

0, M −1

0, r0(cid:17) 6= 0, then M −Tr♯

0 = M Tr0.

0 ≡ r♭

0 = r0 or r♯

5 A series of product-type methods based on the BiCR have been proposed by Sogabe et al. [10]; these methods
are based on an idea presented in [12]. The BiCR method was described in [9], in a discussion of the product-type
methods based on it. Other product-type methods based on the BiCR have been proposed [1, 2]; their derivation
is diﬀerent from that in [10], and these methods can be implemented more easily than that of [10]. Note that the
latter method can only be implemented to multiply r0 by AT as the ISRV, that is, U = AT. However, References
[1, 2] describe setting the ISRV to AT
= U r0; these BiCR-type methods are then reduced to
BiCG-type methods (also see Remark 6).

♯
0, if U = A−T at r

♯
0

r

12

This is equivalent to ˜r♯
k, ˜rk(cid:17) = (cid:16)Rk( ˜AT)˜r♯
(cid:16)˜r♯
≡ (cid:0)Rk(M −TAT)r♭
In the standard PBiCG with r♯

0 ≡ r♭

0, ˜r0 = r0 .

0 = M −Tr♯
0, Rk( ˜A)˜r0(cid:17) = (cid:16)Rk(M −TAT)M −Tr♯
k (M −TAT)r0, RR

0, Rk(AM −1)r0(cid:1) = (cid:0)RR

0, Rk(AM −1)r0(cid:17)
k (AM −1)r0(cid:1).

0 = M Tr0 that constructs the right system,

(cid:16)˜r♯
= (cid:16)M −TRR
= (cid:0)RR

k, ˜rk(cid:17) = (cid:16)Rk(ATM −T) r♯

0, M −1Rk(AM −1)r0(cid:17)

k (ATM −T)(M Tr0), RR
k (AM −1)r0(cid:1).

k (M −TAT)r0, RR

k (AM −1)r0(cid:17)

3) The two-sided preconditioned system (ISRV3: r♯

0 = M T

R M −1

L r0):

L r0,
L r0(cid:17) 6= 0, then M −T
R r♯

0 = M −T

R r♯

0, M −1

0, ˜r0 = M −1
R r♯

0 = M −T
0, ˜r0(cid:17) = (cid:16)M −T

If ˜r♯
(cid:16)˜r♯
This is obviously equivalent to ˜r♯
0, Rk( ˜A)˜r0(cid:17)
(cid:16)˜r♯
= (cid:16)Rk(M −T
k (M −T
= (cid:0)RW
In the standard PBiCG with r♯

k, ˜rk(cid:17) = (cid:16)Rk( ˜AT)˜r♯
R ATM −T

R ATM −T

L )(M −T

L )(M −1

R r♯

R r♯

0 = M −1

L r0 or r♯

0 = M T

R M −1

L r0.

0, ˜r0 = M −1

L r0.

0), Rk(M −1

L AM −1

R )(M −1

L r0)(cid:17)
L r0)(cid:1).

L r0), RW

k (M −1
R M −1

R )(M −1

L AM −1
L r0 that constructs the two-sided system,

0 = M T

k, ˜rk(cid:17) = (cid:16)Rk(ATM −T) r♯
R M −1

k (ATM −T)(M T

0, M −1Rk(AM −1)r0(cid:17)

L r0), M −1

R M −1

L RW

R ATM −T

L )(M −1

R RW
k (M −T

k (M −T
R ATM −T

L )(M −1

L r0), RW

L r0), M −1
k (M −1

R RW
L AM −1

(cid:16)˜r♯
= (cid:16)RW
= (cid:0)M T
= (cid:0)RW

k (AM −1)r0(cid:17)
L AM −1
k (M −1

R )(M −1

L r0)(cid:1).

R )(M −1

L r0)(cid:1)

II. The case of an arbitrary ˜U , such that (cid:16)˜r♯

0, ˜U ˜r0(cid:17) 6= 0 :

L r0,

R r♯

R r♯

0, ˜U M −1

0, ˜r0 = M −1

R r♯
0 = ˜U M −1

L r0(cid:17) 6= 0,
0 = M T
R

0 = M −T
0, ˜U ˜r0(cid:17) = (cid:16)M −T

If ˜r♯
(cid:16)˜r♯
then M −T
Here, if ˜U = I, then the two-sided system is constructed, because r♯
R , then the left system is constructed, because r♯
if ˜U = M −T
if ˜U = M −T
(ISRV2).

R M −1
R M TML = M T

L r0 or r♯

˜U M −1

L r0.

L ML, then the right system is constructed, because r♯

R M −1

0 = M T
L r0 (ISRV3);
0 = M −1r0 (ISRV1); and
0 = M Tr0
✷

In the next section, Theorem 3 will be veriﬁed numerically.
Here, we note the following remarks; further information can be found in Appendix A.

Remark 5 For any items for Case I, in the ﬁnal structure, the coeﬃcient matrix in the residual
polynomial is the same as the direction of the preconditioned system; further, the initial residual
vector of the linear system is the same as that of the shadow system; that is, ˜r♯

0 = ˜r0.

k (ATM −T)(M −1r0), RL

k (M −1A)(M −1r0)(cid:1);
in the right system (ISRV2), the ﬁnal structure is

Speciﬁcally, in the left system (ISRV1), the ﬁnal structure is
(cid:0)RL
(cid:0)RR

and in the two-sided system (ISRV3), the ﬁnal structure is

k (AM −1)r0(cid:1);

k (M −TAT)r0, RR

13

k (M −T

R ATM −T

L )(M −1

L r0), RW

(cid:0)RW

Note that here Proposition 3 is satisﬁed, and Remark 1 (section 2.3) and Remark 3 (section 2.4)
become apparent.

k (M −1

L AM −1

R )(M −1

L r0)(cid:1).

Remark 6 From Proposition 4 and Case II in the proof of Theorem 3, if either U or ˜U is arbitrarily
chosen, then the appropriate method for solving and the direction of the preconditioned system may
be indeterminable. Even if r0 is replaced by an arbitrary vector s, then Case II is still proven without
loss of generality, because s = U r0. Conversely, if U or ˜U is deﬁned adequately, as in Case I for
the PBiCG, then the appropriate solving method and the direction of the preconditioned system can
be determined.

Remark 7 As mentioned in section 2.3, there are instances in which (r♯
0 = r0) at
the initial part of the standard PBiCG. However, in this case, ˜A in Algorithm 1 must be SPD, with
the modiﬁcation (˜r♯
0 = r0). The reason for this is as follows. Let A be SPD with
the preconditioner M = CC T (M ≈ A), then the two-sided preconditioning requires ˜A = C −1AC −T
in order to ensure it is still SPD, and ISRV3 is constructed as r♯

0, ˜r0) 6= 0 (e.g., r♯

0, r0) 6= 0 (e.g., r♯

0 = CC −1r0 = r0.

Remark 8 The deﬁnition of the direction of a preconditioned system for the BiCG method requires
Theorem 3 in addition to Deﬁnition 1.

4 Numerical experiments

In section 4.1, by comparing the value of αk and βk for each of the four PBiCG algorithms pre-
sented in section 2 and their corresponding PCGS algorithms [6], we verify that the behavior of the
right system is diﬀerent from that of the other preconditioned systems (i.e., the left-preconditioned
algorithms and the improved preconditioned algorithms). Next, the switching of the direction of
the preconditioned system by the construction and setting of the ISRV (Theorem 3) is veriﬁed in
section 4.2.

4.1 Behavior of αk and βk in the four PBiCG methods and their corre-

sponding PCGS methods

The test problems were generated by using real nonsymmetric matrices obtained from the Matrix
Market [8](sherman4 and watt 1). The RHS vector b of (1.1) was generated by setting all elements
of the exact solution vector xexact to 1.0. The initial solution was x0 = 0.

The numerical experiments were executed on a DELL Precision T7400 (Intel Xeon E5420, 2.5

GHz CPU, 16 GB RAM) running the Cent OS (kernel 2.6.18) and Matlab 7.8.0 (R2009a).

In all tests, ILU(0) was adopted as the preconditioning operation, and the value “zero” was set
0 = r0 in the PBiCG corresponding to the conventional
0 in the left-PBiCG (Algo-
0 = M −1r0 in the standard PBiCG (Algorithm 4), the

to mean the ﬁll-in level. The ISRVs were r♭
PCGS (Algorithm 2) and the conventional PCGS, they were r♯
rithm 3) and the left-PCGS, and they were r♯
PBiCG corresponding to Improved2 (Algorithm 5), Improved1 (PCGS), and Improved2 (PCGS).

0 = r+

We plotted the values of αk and βk for each of the four PBiCG algorithms presented in section 2

and for each of their corresponding PCGS algorithms [6]; these are shown in Figures 3 to 10.

The labels in the graphs are as follows:
PBiCG Right (Algorithm 2) means the PBiCG corresponding to the conventional PCGS, that

is, the right-preconditioned system.

PBiCG Left (Algorithm 3) means the PBiCG of the left-preconditioned system.
PBiCG Std (Algorithm 4) means the PBiCG of the standard preconditioned BiCG, that is, the

PBiCG corresponding to Improved1.

PBiCG Impr2 (Algorithm 5) means the PBiCG corresponding to the Improved2 PCGS.
PCGS Conv means the PCGS of the conventional preconditioning conversion.
PCGS Left means the PCGS of the left-preconditioned system.
PCGS Impr1 means the PCGS of Improved1.
PCGS Impr2 means the PCGS of Improved2.
Figures 3 and 7 show the behavior of αk for the right-PBiCG and the left-PBiCG and their
corresponding PCGS algorithms. Figures 4 and 8 show the behavior of αk for the left-PBiCG, the

14

)
0
1
g
o
l
(
 

a
h
p
A

l

2.5

2

1.5

1

0.5

0

−0.5

−1
 
0

sherman4

PBiCG_Right
PBiCG_Left
PCGS_Conv
PCGS_Left

 

5

10

15

20

25

30

Iteration Number

Figure 3: Values of αk for the right- and left-PBiCG, and those of the corresponding PCGS methods
(sherman4).

)
0
1
g
o
l
(
 

a
h
p
A

l

2.5

2

1.5

1

0.5

0

−0.5

−1
 
0

sherman4

PBiCG_Left
PBiCG_Std
PBiCG_Impr2
PCGS_Left
PCGS_Impr1
PCGS_Impr2

 

5

10

15

20

25

30

Iteration Number

Figure 4: Value of αk for the left- and standard PBiCG and the Improved2 PBiCG, and that of
their corresponding PCGS methods (sherman4).

)
0
1
g
o
l
(
 

a

t

e
B

2

1

0

−1

−2

−3

−4
 
0

sherman4

 

PBiCG_Right
PBiCG_Left
PCGS_Conv
PCGS_Left

5

10

15

20

25

30

Iteration Number

Figure 5: Value of βk for the right- and left-PBiCG, and that of the corresponding PCGS method
(sherman4).

)
0
1
g
o
l
(
 

a

t

e
B

2

1

0

−1

−2

−3

−4
 
0

sherman4

 

PBiCG_Left
PBiCG_Std
PBiCG_Impr2
PCGS_Left
PCGS_Impr1
PCGS_Impr2

5

10

15

20

25

30

Iteration Number

Figure 6: Value of βk for the left- and standard PBiCG and the Improved2 PBiCG, and that of the
corresponding PCGS methods (sherman4).

15

)
0
1
g
o
l
(
 

a
h
p
A

l

3

2

1

0

−1

−2

−3

−4
 
0

watt__1

 

PBiCG_Right
PBiCG_Left
PCGS_Conv
PCGS_Left

5

10
15
Iteration Number

20

25

Figure 7: Value of αk for the right- and left-PBiCG, and that of the corresponding PCGS method
(watt 1).

)
0
1
g
o
l
(
 

a
h
p
A

l

3

2

1

0

−1

−2

−3

−4
 
0

watt__1

 

PBiCG_Left
PBiCG_Std
PBiCG_Impr2
PCGS_Left
PCGS_Impr1
PCGS_Impr2

5

10
15
Iteration Number

20

25

Figure 8: Value of αk for the left- and standard PBiCG and the Improved2 PBiCG, and that of the
corresponding PCGS method (watt 1).

5

0

−5

−10

−15

−20

)
0
1
g
o
l
(
 

a

t

e
B

watt__1

 

PBiCG_Right
PBiCG_Left
PCGS_Conv
PCGS_Left

−25
 
0

5

10
15
Iteration Number

20

25

Figure 9: Value of βk for the right- and left-PBiCG, and that of the corresponding PCGS method
(watt 1).

5

0

−5

−10

−15

−20

)
0
1
g
o
l
(
 

a

t

e
B

watt__1

 

PBiCG_Left
PBiCG_Std
PBiCG_Impr2
PCGS_Left
PCGS_Impr1
PCGS_Impr2

−25
 
0

5

10
15
Iteration Number

20

25

Figure 10: Value of βk for the left- and standard PBiCG and the Improved2 PBiCG, and that of
the corresponding PCGS method (watt 1).

16

standard PBiCG, the Improved2 PBiCG (the PBiCG corresponding to the Improved2 PCGS), and
the corresponding PCGS algorithms. From these results, we know that for each of the four PBiCGs,
the value of αk is the same as that in their respective PCGS, but the values for the right-PBiCG
and for the conventional PCGS are diﬀerent from the others. A comparison of these results on βk
can be seen in Figures 5, 6, 9, and 10.

In these graphs, the behaviors of αk and βk are the same for each PBiCG algorithm and its
corresponding PCGS algorithm; that is, we numerically veriﬁed the correspondence between the
PBiCG algorithms in Figure 2 in section 2 and the PCGS algorithms in Figure 1 (also see [6]). We
also veriﬁed that the standard PBiCG (Algorithm 4) is coordinative to the left-PBiCG (Algorithm 3);
that is, αk and βk are equivalent, although the residual vector is not (r+
k ≡ M −1rk, where rk is
the standard PBiCG, and r+
k is the left-PBiCG). We also veriﬁed the diﬀerence between the right-
preconditioned system and the left-preconditioned system, including the standard PBiCG, because
the behavior of αk and βk in the conventional PCGS and its corresponding PBiCG are diﬀerent
from the behaviors seen in the other algorithms.

4.2 Behavior of the left-, right-, and two-sided PBiCG and standard

PBiCG when switched by the ISRV

For the experiments described in this subsection, the experimental environment was the same as
that described in section 4.1, but the ISRVs of the PBiCG method were diﬀerent.

We will verify Theorem 3 by using the BiCG under the preconditioned system (Algorithm 1)
and the standard PBiCG (Algorithm 4) with three diﬀerent ISRVs. Here, Algorithm 1 is based on
Deﬁnition 1, and Algorithm 1 is used to construct the left-preconditioned system with ML = M
and MR = I (PrecDirl-BiCG); it is used to construct the right-preconditioned system with ML = I
and MR = M (PrecDirr-BiCG); and it is used to construct the two-sided preconditioned system
(PrecDirw-BiCG), for the above algorithms; the ISRV was uniformly set to ˜r♯
0 = ˜r0. The stopping
criteria were as follows: kM ˜rk+1k2/kbk2 for the left system, k˜rk+1k2/kbk2 for the right system, and
kML˜rk+1k2/kbk2 for the two-sided system. On the other hand, as shown in Theorem 3, Algorithm 4
was used to construct the left-preconditioned system with r♯
0 = M −1r0 (ISRV1-PBiCG), the right-
preconditioned system with r♯
0 = M Tr0 (ISRV2-PBiCG), and the two-sided preconditioned system
with r♯

L r0 (ISRV3-PBiCG).

0 = M T

R M −1

Figures 11 and 12 illustrate the equivalence of the direction of a preconditioned system obtained
by Algorithm 1 based on Deﬁnition 1 and the direction switching due to the ISRV when using Algo-
rithm 4; this occurs because the left-preconditioned system (PrecDirl-BiCG) has the same behavior
as that of the standard PBiCG with ISRV1, the right-preconditioned system (PrecDirr-BiCG) has
the same behavior as that of the standard PBiCG with ISRV2, and the two-sided preconditioned
system (PrecDirw-BiCG) has the same behavior as that of the standard PBiCG with ISRV3.

5 Conclusions

In this paper, we analyzed four diﬀerent preconditioned BiCG (PBiCG) algorithms, from the view-
point of their polynomial structure. These PBiCG algorithms correspond to the four PCGS algo-
rithms considered in [6].

We have shown the mechanism that determines the direction of such a preconditioned system;
that is, the direction is determined by αk and βk, which are constructed by biorthogonal and
biconjugate operations. However, the biorthogonal and biconjugate structures of the polynomials
of the four PBiCG methods are all the same. Therefore, we have identiﬁed that the ﬁnal factor
that can switch the direction of such a preconditioned system is the construction and setting of
the ISRV. In particular, we have shown that the direction of the preconditioned system has never
been ﬁxed without using the relation ˜r♯
0 = ˜r0. Furthermore, we have shown an additional theorem
regarding the deﬁnition of the direction of a preconditioned system for a BiCG method for solving
linear equations. In other words, the construction and setting of the ISRV aﬀect not only the shadow
system, but also the linear system on the direction of the preconditioned system, due to the inner
product of αk and βk.

These properties of PBiCG methods are commonly discussed in the literature of preconditioned
bi-Lanczos-type algorithms, for example, preconditioned CGS (PCGS) and preconditioned BiCG

17

sherman4

 

PrecDirl−BiCG
PrecDirr−BiCG
PrecDirw−BiCG
ISRV1−PBiCG
ISRV2−PBiCG
ISRV3−PBiCG

0.5

0

−0.5

−1

−1.5

−2

−2.5

−3

)
0
1
g
o
l
(
 

m
r
o
n
−
2

 
l

a
u
d
s
e
r
 

i

e
v
i
t

l

a
e
r
 

m
h

t
i
r
o
g
A

l

−3.5

 
0

2

4

6

8
12
Iteration Number 

10

14

16

18

20

Figure 11: Behavior of the algorithm relative residual 2-norm for the left-, right-, and two-sided
PBiCG and the standard PBiCG, with three diﬀerent settings for the ISRV (sherman4).

watt__1

 

PrecDirl−BiCG
PrecDirr−BiCG
PrecDirw−BiCG
ISRV1−PBiCG
ISRV2−PBiCG
ISRV3−PBiCG

2

0

−2

−4

−6

−8

)
0
1
g
o
l
(
 

m
r
o
n
−
2
 
l
a
u
d
s
e
r
 
e
v
i
t
a
e
r
 

i

l

m
h
t
i
r
o
g
A

l

−10

−12

−14

 
0

10

20

30

40

50

60

Iteration Number 

Figure 12: Behavior of the algorithm relative residual 2-norm for the left-, right-, and two-sided
PBiCG and the standard PBiCG, with three diﬀerent settings for the ISRV (watt 1).

stabilized (PBiCGStab) algorithms. PCGS algorithms are congruent to the direction of the pre-
conditioning conversion, and this has already been analyzed [6]; PBiCGStab algorithms are not
congruent, and they will be analyzed as an area of future work.

A Stepwise analysis of the polynomials of the standard PBiCG

Here we present detailed examples of the polynomials of the standard PBiCG (Algorithm 4) when
using ISRV3 (r♯
0 = M −1r0, Example 2); we perform
a stepwise analysis by using the recurrence relations (2.1) to (2.3).

L r0, Example 1) and the ISRV1 (r♯

0 = M T

R M −1

We will use the following notation: ˜Aw ( = M −1

R ) means the two-sided preconditioning,
˜Al ( = M −1A) means the left preconditioning, and ˜Ar ( = AM −1) means the right preconditioning.

L AM −1

The initial values of the polynomials in the preconditioned system are as follows:

(A.1)
(A.2)

P0( ˜Aw) = P0( ˜Al) = P0( ˜Ar) = I,
R0( ˜Aw) = R0( ˜Al) = R0( ˜Ar) = I.

Example 1. Details of standard PBiCG algorithm with ISRV3:
x0 is an initial guess, r0 = b − Ax0,
(cid:16)˜r♯

L r0(cid:17) 6= 0, e.g., r♯

0, ˜r0(cid:17) = (cid:16)M −T

set β−1 = 0,

0 = M T

R M −1

0, M −1

R r♯

L r0,

(A.3)

(A.4)

k = 0 :
p+
0 = M −1r0 = M −1
0 = M −Tr♯
p♭

R M −1
0 = M −T(M T

L r0,

R M −1

L )r0 = M −T

L M −1

L r0,

18

(A.5)

α0 =

=

0, M −1r0(cid:17)
(cid:16)r♯
0, Ap+
(cid:0)p♭
0 (cid:1)
L r0, M −1
(cid:0)M −1
L AM −1
0 = x0 + αW

R M −1
= (cid:0)(M T
L M −1
(cid:0)M −T
L r0(cid:1)
R )M −1

L r0, (M −1

(cid:0)M −1

L r0(cid:1)

L )r0, M −1r0(cid:1)
L r0, A(M −1r0)(cid:1)

≡ αW
0 ,

0 M −1r0 = x0 + αW

0 M −1

R M −1

L r0,

x1 = x0 + αW
r1 = r0 − αW

0 p+
0 Ap+
= ML(I − αW

0

0 (M −1

L AM −1

R ))M −1

L r0

= MLRW

1 ( ˜Aw)M −1

L r0

= M (I − αW

0 (M −1A))M −1r0

= M RW

1 ( ˜Al)M −1r0

= r0 − αW

0 AM −1r0 = (I − αW

0 (AM −1))r0 = RW

1 ( ˜Ar)r0,

1 = r♯
r♯

0 ATp♭

0 − αW
R (I − αW

0 = (M T

R M −1
R ATM −T

0 (M −T

= M T

0 AT(M −T

L M −1
= M T

L r0)
R RW

1 ( ˜AT

w)M −1

L r0

L )r0 − αW
L ))M −1
L r0
R M −1

L )r0

(A.6)

(A.7)

(A.8)

(A.9)

(A.10)

(A.11)

(A.12)

= (I − αW
= RW

0 (ATM −T))(M T
R M −1

1 (ATM −T)(M T

L )r0

= M T(I − αW
= M TRW

0 (M −TAT))M −T
L M −1

L M −1
L r0

L r0

1 (M −TAT)M −T
(cid:16)M T

=

1, M −1r1(cid:17)
(cid:16)r♯
0, M −1r0(cid:17)
(cid:16)r♯
(cid:16)RW
1 ( ˜AT
w)M −1
(cid:16)R0( ˜AT

w)M −1

1 ( ˜AT
R RW
(cid:16)R0( ˜AT
1 ( ˜Aw)M −1

w)M −1

w)(M T
L r0(cid:17)
L r0(cid:17)

L r0, RW
L r0, R0( ˜Aw)M −1

= M T

R RW

1 ( ˜AT

w)M −1

L r0

= M T

R RW

1 ( ˜AT

w)M −1

L r0,
L r0(cid:17)

L r0, M −1MLRW

1 ( ˜Aw)M −1
L r0), M −1R0( ˜Aw)r0(cid:17)

R M −1

≡ βW
0 .

(A.13)

β0 =

=

The double-underlined equations show the important polynomial structures. By way of contrast,
neither (A.3) nor (A.4) is double underlined, and their polynomials are not displayed; this is because
they are the identity matrix, as indicated in (A.1) and (A.2).

In the above description, we will focus on M −1
L r0 in the ﬁnal structure of each equation. Because
M −1
L r0 is the initial residual vector of the two-sided preconditioned system, details of its properties
can be found in Theorem 3 and Remark 5 in section 3. However, at steps (A.3) and (A.4), the intrinsic
structure of p+
0 does not play a role in determining the direction of the preconditioned system,
because neither vector has parameter α0 or β0.

0 and p♭

The direction of preconditioned system is thus ﬁxed as the two-sided system when α0 is calculated
in (A.5). The approximate solution vector x1 is calculated under the two-sided system in (A.6),
because (A.6) has αW
0 .

The intrinsic structure of the residual vector r1 may be that of (A.7) to (A.9), that is, two-
sided, left, or right, respectively6. However, the direction of the preconditioned system has been
already ﬁxed in (A.5), the operation on α0, therefore, the intrinsic structure of r1 is ﬁxed as r1 =
ML(I − αW
L r0. Furthermore, this initial residual vector
part is M −1

L r0 = MLRW

1 ( ˜Aw)M −1

R ))M −1

L AM −1

0 (M −1
L r0.

On the other hand, the intrinsic structure of the residual vector r♯

1 may be created by (A.10) to

L r0. The reason for this is that the
0 , the same as for r1. Furthermore,

(A.12), but these all reduce to the same structure,
r♯
L r0 = M T
1 = M T
direction of the preconditioned system has been already ﬁxed as αW
the part of M −1

R ATM −T

L ))M −1

R (I − αW

0 (M −T

w)M −1

1 ( ˜AT

R RW

L r0 and the shadow system with the transpose matrices may not be compatible7.

When β0 operates in the denominator, R0( ˜AT

w) does not ﬁx the direction of the preconditioned

system because of (A.2).

The subsequent iterated operations are as follows:

6 For the same reason, p
7 For the same reason as for p

may not be compatible.

+
0 of (A.3) and x1 of (A.6) may be two-sided, left, or right.

0 of (A.4), the part of M −1
♭

L r0 and the shadow system with the transpose matrices

19

For k = 1, 2, 3, · · · , Do :

L r0,

k ( ˜Aw)M −1
k ( ˜AT

w)M −1

L r0,

p+
k = M −1rk + βW
k = M −Tr♯
p♭

k−1p+

R P W

k−1 = M −1
k−1 = M −T
L P W
(cid:16)RW
w)M −1
R P W

k−1p♭

k + βW
k, M −1rk(cid:17)
(cid:16)r♯
k, Ap+
(cid:16)P W
(cid:0)p♭
k (cid:1)
k p+
k = xk + αW
k = MLRW

k Ap+

=

xk+1 = xk + αW

rk+1 = rk − αW

αW

k =

k ( ˜AT

w)M −1

L r0, RW

k ( ˜Aw)M −1

L r0(cid:17)

L AM −1

R )P W

k ( ˜Aw)M −1

L r0(cid:17)

,

L r0, (M −1
k ( ˜Aw)M −1

L r0,

L r0,

k ( ˜AT
k M −1
k+1( ˜Aw)M −1
k+1( ˜AT
(cid:16)RW
k+1( ˜AT
(cid:16)RW
k ( ˜AT

=

k = M T

R RW

w)M −1

L r0,

w)M −1

L r0, RW

w)M −1

L r0, RW

k+1( ˜Aw)M −1
k ( ˜Aw)M −1

L r0(cid:17)
L r0(cid:17)

,

k ATp♭

r♯
k+1 = r♯
k − αW
k+1, M −1rk+1(cid:17)
(cid:16)r♯
(cid:16)r♯

k, M −1rk(cid:17)

βW
k =

End Do

Next, we will also brieﬂy describe the polynomials of the standard PBiCG (Algorithm 4) with
0 = M −1r0). The initial values of the polynomials under the left-preconditioned system

ISRV1 (r♯
are P L

0 ( ˜Al) = RL

0 ( ˜Al) = I.

Refer to Example 1 for a detailed description.

Example 2. Polynomial description of the standard PBiCG algorithm with ISRV1:

x0 is an initial guess, r0 = b − Ax0,
(cid:16)˜r♯
0, M −1
For k = 0, 1, 2, 3, · · · , Do:

0, ˜r0(cid:17) = (cid:16)M −T

L r0(cid:17) 6= 0, e.g., r♯

R r♯

set βL

−1 = 0,

0 = M −1r0,

k ( ˜Al)M −1r0,

k−1 = P L
k−1 = M −TP L

k ( ˜AT

l )M −1r0,

k−1p♭

k−1p+

p+
k = M −1rk + βL
k = M −Tr♯
p♭
k + βL
k, M −1rk(cid:17)
(cid:16)r♯
k, Ap+
(cid:0)p♭
(cid:16)P L
k (cid:1)
k p+
k = xk + αL
k Ap+
k = M RL

k =

αL

=

rk+1 = rk − αL

xk+1 = xk + αL

k ATp♭

k+1 = r♯
r♯
k = RL
k − αL
k+1, M −1rk+1(cid:17)
(cid:16)r♯
(cid:16)r♯

k, M −1rk(cid:17)

βL
k =

k ( ˜AT

(cid:16)RL
k ( ˜AT
k P L
k+1( ˜Al)M −1r0,
k+1( ˜AT
(cid:16)RL

l )M −1r0,

k+1( ˜AT
(cid:16)RL
k ( ˜AT

=

l )M −1r0, RL

k ( ˜Al)M −1r0(cid:17)

k ( ˜Al)M −1r0(cid:17)

,

l )M −1r0, (M −1A)P L
k ( ˜Al)M −1r0,

l )M −1r0, RL

l )M −1r0, RL

k+1( ˜Al)M −1r0(cid:17)
k ( ˜Al)M −1r0(cid:17)

,

(A.14)

End Do

For the polynomial structures of (A.14), refer to Remark 2 in section 2.3.

References

[1] Abe, K. and Sleijpen, G. L. G., BiCR variants of the hybrid BiCG methods for solving linear

systems with nonsymmetric matrices, J. Comput. Appl. Math., 234 (2010), pp. 985–994.

[2] Abe, K., Sogabe, T., Fujino, S. and Zhang, S.-L., A product-type Krylov subspace method based
on conjugate residual method for nonsymmetric coeﬃcient matrices, in IPSJ Transactions on
Advanced Computing Systems (ACS 18), 48 (2007), pp. 11–21 (in Japanese).

20

[3] Fletcher, R., Conjugate gradient methods for indeﬁnite systems, in Numerical Analysis: Pro-
ceedings of the Dundee Conference on Numerical Analysis, 1975, G. Watson, ed., Lecture Notes
in Math. 506, Springer, New York, 1976, pp. 73–89.

[4] Hestenes, M. R. and Stiefel, E., Methods of conjugate gradients for solving linear systems, J.

Res. Nat. Bur. Standards, 49 (1952), pp. 409–435.

[5] Itoh, S. and Sugihara, M., Formulation of a preconditioned algorithm for the conjugate gradient
squared method in accordance with its logical structure, Appl. Math., 6 (2015), pp. 1389–1406.

[6] Itoh, S. and Sugihara, M., Analysis of the structure of the Krylov subspace in various precondi-

tioned CGS algorithms, arXiv, 2016.

[7] Lanczos, C., Solution of systems of linear equations by minimized iterations, J. Res. Nat. Bur.

of Standards, 49 (1952), pp. 33–53.

[8] Matrix Market, http://math.nist.gov/MatrixMarket/

[9] Sogabe, T., Sugihara, M. and Zhang S.-L., An extension of the conjugate residual method to

nonsymmetric linear systems, J. Comput. Appl. Math., 226 (2009), pp. 103–113.

[10] Sogabe, T. and Zhang S.-L., Product-type method of Bi-CR, RIMS Kokyuroku, Kyoto Univer-

sity, Vol. 1362 (2004), pp. 22–30. (in Japanese)

[11] Sonneveld, P., CGS, A fast Lanczos-type solver for nonsymmetric linear systems, SIAM J. Sci.

Stat. Comput., 10 (1989), pp. 36–52.

[12] Zhang, S.-L., GPBi-CG: Generalized product-type methods based on Bi-CG for solving nonsym-

metric linear systems, SIAM J. Sci. Comput., 18 (1997), pp. 537–551.

21

