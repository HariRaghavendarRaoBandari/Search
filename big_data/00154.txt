Broadcast Repair for Wireless Distributed Storage

Systems

Ping Hu

Chi Wan Sung

Terence H. Chan

Department of Electronic Engineering

Department of Electronic Engineering

Institute for Telecommunications Research

City University of Hong Kong
Email: ping.hu@my.cityu.edu.hk

City University of Hong Kong
Email: albert.sung@cityu.edu.hk

University of South Australia

Email: terence.chan@unisa.edu.au

6
1
0
2

 
r
a

M
1

 

 
 
]
T
I
.
s
c
[
 
 

1
v
4
5
1
0
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—In wireless distributed storage systems, storage
nodes are connected by wireless channels, which are broadcast
in nature. This paper exploits this unique feature to design an
efﬁcient repair mechanism, called broadcast repair, for wireless
distributed storage systems with multiple-node failures. Since
wireless channels are typically bandwidth limited, we advocate a
new measure on repair performance called repair-transmission
bandwidth, which measures the average number of packets
transmitted by helper nodes per failed node. The fundamental
tradeoff between storage amount and repair-transmission band-
width is obtained. It is shown that broadcast repair outperforms
cooperative repair, which is the basic repair method for wired
distributed storage systems with multiple-node failures, in terms
of storage efﬁciency and repair-transmission bandwidth, thus
yielding a better tradeoff curve.

I. INTRODUCTION

In distributed storage systems (DSS), repairability is an
important design issue. Since storage node failures are com-
mon, it is important that failed nodes can be repaired in an
efﬁcient manner. Traditional erasure codes have high storage
efﬁciency, but require a large amount of data exchange (called
repair bandwidth) for node repair. Dimakis et al. show that
there is a fundamental tradeoff between storage efﬁciency and
repair bandwidth [1]. By using information ﬂow graph, the
repair dynamics of a DSS is modeled as a multicast network.
The storage capacity of a DSS is shown to be equal to the
min-cut of the information ﬂow graph [2]. Furthermore, the
optimal storage-repair bandwidth tradeoff can be achieved by
linear network codes with ﬁnite alphabet size even though the
information ﬂow graph is unbounded [3]. These fundamental
results are re-examined in [4].

The seminal work [1] has stimulated a lot of study on
efﬁcient repair of failed nodes in DSS. Most of these works
focus on single-node repair, meaning that nodes are assumed
to be failed one by one and the repair process is triggered
immediately when a node failure occurs. In [5], it was observed
that repair bandwidth per failed node can be reduced if the
repair is triggered only when the number of failed nodes
reaches a predetermined threshold. This mechanism is termed
cooperative repair. In [6], results on cooperative repair are

This work was supported in part by a grant from the University Grants
Committee of the Hong Kong Special Administrative Region, China, under
Project AoE/E-02/08.

This work was supported in part by ARC DP150103658 and DP130102228.

further extended to a more general scenario, and the funda-
mental tradeoff between storage amount and repair bandwidth
for DSS with cooperative repair is derived.

Due to the increasing use of wireless devices and popu-
larity of wireless sensor networks, wireless distributed stor-
age systems (WDSS) has become an emerging new area. In
[7] [8], more effective ﬁle retrieval methods are considered.
Concerning the repair problem, while designs for DSS can
also be applied to WDSS, it is important to understand the
fundamental difference between DSS and WDSS. In [9], the
transmissions between storage nodes during repair are assumed
to experience erasures, and the fundamental storage-bandwidth
tradeoff for single-node repair in DSS with erasure channels
are established, which addresses the issue that wireless chan-
nels are inherently unreliable. Another basic characteristic of
the wireless medium, which distinguishes it from wired trans-
mission, is its broadcast nature. In [10], the authors studied the
repair problem when parts of stored packets in nodes are lost.
They focused on one repair round and obtained the minimum
transmitted packets for repair. For a special parameter setting,
an exact repair code construction is proposed. Repair under
multiple repair rounds is unclear for general parameter settings.
In this paper, this broadcast nature of the communication
channel in WDSS is investigated for multiple repair rounds. To
design an efﬁcient WDSS, the broadcast nature of the wireless
medium can be exploited during the repair process when there
are more than one failed nodes. To reap the potential gain,
we propose broadcast repair for WDSS with multiple node
failures. A graph representation for WDSS is constructed. By
analyzing the min-cut of the graph, a bound on storage capacity
is derived. Tightness of the bound is also shown. To quantify
the beneﬁt of broadcast repair, we compare our method with
cooperative repair with unicast transmissions and show its
superiority.

II. SYSTEM MODEL AND BROADCAST REPAIR

The system model is designed to capture the broadcast char-
acteristic under the wireless scenario. It includes one source
node, multiple storage nodes, and multiple data collectors.
Each storage node can store α packets at most. Storage nodes
are not directly connected by wires. Instead, they are fully
connected by a wireless broadcast medium.

At the initial stage, the source node stores a ﬁle into n

storage nodes such that the data collectors can retrieve the ﬁle
from any k nodes. We index these storage nodes by the set
N , {1, 2, . . . , n}. These n storage nodes are not reliable
and can fail at times becoming inactive. When the number
of failed nodes is accumulated up to a threshold r, the repair
process is triggered. We call this process one round of repair.
During each repair round, r new nodes, called newcomers,
will join the system. Then d ≥ k active storage nodes will
broadcast packets to the newcomers. Each of these d nodes,
called helper node, will broadcast β packets. We assume that
r ≤ n − d so that there are always d active nodes in the
system for repair. When a helper node broadcasts a packet, we
assume that each newcomer receives the packet successfully
without error. Besides, we also assume the helper nodes use
orthogonal channels to transmit their packets so that there is
no interference between their transmissions. We consider T
rounds of repair in total. After each repair round, there are
r newcomers, which replace the r failed nodes in this round.
We index the newcomers after the s-th repair round by Rs ,
{n + (s − 1)r + 1, . . . , n + sr}. The set of helper nodes for
these newcomers are denoted by Hs.

Any data collector can join the system after the initialization
stage or after any repair round. It can connect to any k active
nodes to retrieve all data stored in the node. Denote the data
collector which joins after the s-th round of repair and connects
to a set K of k active nodes by DCs,K. Since we have to ensure
that the ﬁle can always be retrieved, we consider all possible
arrivals (in terms of s) and connections (in terms of K) of a
data collector. We denote the collection of all possible data
collectors by Ω.

The above system is called a WDSS with parameters
(n, k, d, r, α, β, T ). The repair process described above is
called broadcast repair. An instance of a WDSS is determined
by the failure patterns, newcomers, and the collection of helper
sets.

In the literature of DSS,

the total number of packets
downloaded by a newcomer so as to repair a failed node is
called repair bandwidth [1]. It is one of the key performance
metrics in DSS, since it reﬂects the amount of network trafﬁc
required in the repair process. The same concept can also
be applied to multiple node failures with cooperative repair
processes [5]. In a wireless environment, however, repair band-
width is not an accurate measure on network trafﬁc, especially
when there are multiple node failures. To see this, consider the
double-failure case where two newcomers receive the same
packet from the wireless broadcast of a helper node. While
this broadcast packet would be counted twice in calculating
repair bandwidth, this packet was broadcasted only once. To
better reﬂect the use of frequency spectrum in a wireless
environment, we introduce a new performance metric named
repair-transmission bandwidth:

Deﬁnition 1. The repair-transmission bandwidth, τ, is deﬁned
as the average number of packets the helper nodes transmitted
per newcomer.

If all the packet transmissions are in unicast mode, then

repair-transmission bandwidth is equal to repair bandwidth,
since the total number of packets transmitted by helper nodes
is equal to the total number of packets received by newcomers.
They are different, however, when broadcast transmissions are
allowed. For the WDSS model described above, we have

τ =

dβ
r

.

Given a requirement on storage capacity Cstorage, there is a
trade-off between the per-node storage capacity, α, and the
repair-transmission bandwidth, τ.

III. GRAPH REPRESENTATION

The network of WDSS is represented by a directed acyclic
graph G = (V, E), where V is the vertex set and E is the edge
set. Each edge e(i, j) ∈ E is associated with a parameter uij,
which is the capacity of the edge.

The graph includes one source vertex S, multiple storage
nodes (including failed ones and newcomers), and multiple
data collectors DCs,K’s. Each storage node j is represented
by two vertices, in-vertex Inj, out-vertex Outj, and a directed
edge Inj → Outj with parameter α. In this paper, the terms
“node” and “vertex” have different meanings. A node refers
to a storage device in the WDSS while a vertex is an abstract
entity of the graph.

In the initialization stage where data is ﬁrst stored at the
storage nodes, the source vertex S transmits packets to the
storage nodes and then becomes inactive. This is modeled by
adding the edges S → Inj, for all j ∈ N , with capacity ∞.

In the ﬁrst repair round (i.e., s = 1), node i ∈ H1 broadcasts
β packets to newcomer node j ∈ R1, which is again modeled
by two vertices Inj, Outj, and a directed edge Inj → Outj with
parameter α. Note that R1 and N are disjoint, meaning that a
newcomer has a new index, which is different from the index of
the failed node being replaced by that newcomer. For helper
i , to which
node i ∈ H1, we add an auxiliary vertex, say h1
Outi is connected by an edge with capacity β. Edges with
i to Inj of every newcomer
capacity ∞ are added from vertex h1
i is used to model the broadcast feature
j ∈ R1. The vertex h1
of the wireless channel. Subsequent repair rounds are modeled
in the same way. Consider the example shown in Fig. 1. The
corresponding WDSS has parameters n = 8, k = 3, d = 4,
r = 2 and T = 2. In this example, nodes 5 and 6 failed in
the ﬁrst repair round, and we have R1 = {9, 10} and H1 =
{1, 2, 3, 4}. Nodes 8 and 10 failed in the second repair round,
and we have R2 = {11, 12} and H2 = {9, 3, 4, 7}.

To model the ﬁle retrieval process, after each repair round s
and for each possible choice of K, we add a data collector
DCs,K. Furthermore, a directed edge from each out-vertex of
a node in K to DCs,K with capacity ∞ is added. In Fig. 1,
we show only one data collector, namely, DC2,{9,11,12}, for
simplicity.

An S-DC cut X is a subset of V such that S ∈ X , DC ∈
Y , V \X and there is at least one edge from X to Y. The cut-
set of a cut X is {(i, j) ∈ E : i ∈ X , j ∈ Y}. The cut-capacity

α

α

α

α

α

α

α

α

∞

∞

∞

∞

∞

∞

∞

∞

β

β

β

β

∞

∞

∞
∞

∞

∞
∞

β

β

1

β

2

α

α

β

∞

∞

∞

∞

∞

∞

∞

∞

∞

α

α

∞

∞

Fig. 1. An example for cut-capacity in broadcast repair.

β

β

β

β

∞

∞

∞
∞

∞

∞
∞

α

α

Fig. 2. An illustration of case where s ∈ T ′
1 .

β

β

β

β

∞

∞

∞
∞

∞

∞
∞

α

α

of X is deﬁned as:

C(X ) , X(i,j)∈E,i∈X ,j∈Y

uij .

(1)

Fig. 3. An illustration of case where s ∈ T ′
2 .

Two examples of S-DC2,{9,11,12} cuts are denoted in Fig. 1 by
left sides of dashed lines. For line 1, the cut-capacity is 7β,
while for line 2, the cut-capacity is α + 3β.

IV. STORAGE CAPACITY

According to [2], the capacity of the single source multicast
network is given by the minimum value of the cut-capacity be-
tween the source node and any of the destinations. Therefore,
the storage capacity of a particular WDSS instance I is given
by

C′(I) = min

DC

min

X :S−DC cut

C(X ),

(2)

where the ﬁrst minimum is taken over all legitimate choices
of DC under the instance I. The storage capacity, Cstorage, of
a WDSS can be obtained by minimizing C′(I) over all its
possible instances, i.e.,

Cstorage = min

I

C′(I).

(3)

Consider an arbitrary instance of the WDSS. Regard the
initialization stage as round 0 and let V0 , N . For rounds
s ∈ T , {1, 2, . . . , T }, let As , {hs
i : i ∈ Hs} be the set of
auxiliary vertices in round s, and Vs , As ∪ {Inj , Outj : j ∈
Rs} be the set of all vertices in round s. Then V0∪V1∪· · ·∪VT
contains all the vertices except the source and the destinations
in the graph.

To obtain the cut-capacity of an arbitrary S− DC cut X ′, we
examine the in-edges of all the vertices in V0 ∪ V1 ∪ · · · ∪ VT ,
and express the cut-capacity as a sum of T + 1 terms:

C(X ′) = X0≤s≤T

C△,s(X ′),

(4)

where

C△,s(X ′) , Xi∈X ′,j∈Vs∩X ′

uij

is called the cut-capacity contribution of the vertices in Vs.

When there is no ambiguity, we may simply write it as C△,s.
For example, in Fig. 1, the cut denoted by left side of line 2
has cut-capacity equal to C△,0 + C△,1 + C△,2 = 0 + α + 3β.
Now we investigate C△,s(X ′) for 0 ≤ s ≤ T . First, consider
the case where s = 0. Since there is no auxiliary vertex in
repair round 0, we have C△,0 = x0α, where x0 is the number
of storage nodes in round 0 such that its in-vertex is in X ′ and
out-vertex is in X ′.

Second, consider the case where s ∈ T ′

1 , where T ′
1

, {s ∈
1 if there exists at least
T : As∩X ′ 6= ∅}. In other words, s ∈ T ′
i in X ′. We investigate the three classes of vertices in Vs,
one hs
i.e., auxiliary vertices, in-vertices, and out-vertices, one by one.
For the auxiliary vertices, denote the number of hs
i ’s such that
it is in X ′ and its parent vertex Outi is in X ′ by zs. For the in-
vertices, we only need to consider the case where all of them
are in X ′, for otherwise, the cut-capacity contribution would be
inﬁnite as all its in-edges have inﬁnite capacity and at least one
of its parent vertex is in X ′. For the out-vertices, denote the
number of them in X ′ by xs. Then we have C△,s = xsα+zsβ.
An illustration of this case is shown in Fig. 2
Third, consider the case where s ∈ T ′
2

1 . By
i ’s are in X ′. For the auxiliary vertices,
deﬁnition of T ′
2 , all hs
denote the number of hs
i ’s such that its parent vertex Outi is in
X ′ by ys. For all the in-vertices, since their parent vertices are
all in X ′, their cut-capacity contribution is zero, no matter they
are in X ′ or X ′. The cut-capacity contribution of all the in-
vertices is 0. For the out-vertices, denote the number of them
such that Outj ∈ X ′ and its parent vertex Inj ∈ X ′ by vs. we
have C△,s = vsα + ysβ. An illustration of this case is shown
in Fig. 3

, T \ T ′

Combining the above three cases and according to (4), we

have

C(X ′) = x0α + Xs∈T ′

1

(xsα + zsβ) + Xs∈T ′

2

(vsα + ysβ).

Now consider a special cut X , which is constructed from
X ′ as follows. Initially, let X be the same as X ′. For s ∈ T ′
1 ,
move all hs
i ’s into X , and then zs becomes zero. Furthermore,
since hs
i ’s child vertices are all in round s, moving all hi’s into
X will not affect the cut-capacity contribution of other rounds.
2 , move all Inj’s into X , and vs becomes zero. Again,
For s ∈ T ′
since Inj’s child vertex Outj is in the same round, moving Inj
will not affect the cut-capacity contribution of other rounds.
We have

C(X ′) ≥ C(X ) = x0α + Xs∈T1

xsα + Xs∈T2

ysβ,

(5)

where T1 is the index set of repair rounds whose auxiliary
vertices are all in X , and T2 is the index set of repair rounds
whose auxiliary vertices are all in X . Note that T1 ∪ T2 = T .
Since xs is the number of vertices such that it is in X and its
parent vertex is in X , let xs = 0 for s ∈ T2.

For any round s, let the number of out-vertices in X be

ms. By deﬁnition, we have ms = xs,

if s ∈ T1 ∪ {0} and

0 ≤ ms ≤ r,

if s ∈ T2.

Furthermore, we deﬁne

m∗

s = (cid:26) xs,

r,

s ∈ T1 ∪ {0}
s ∈ T2.

(6)

(7)

The following result is established by ﬁnding bounds for xs
and ys.

Theorem 1. The storage capacity of WDSS(n, k, d, r, α, β, T )
Cstorage is lower bounded by CLB(T ) ,

min
x,T1


x0α + Xs∈T1


xsα + Xs∈T \T1

max(0, d −

s−1

Xi=0

m∗

i )β


,

(8)

where the minimization is taken over T1 ⊆ T = {1, 2, . . . , T }
and

0 ≤ x0 ≤ n,
0 ≤ xs ≤ r, for s ∈ T1,

xs + (|T | − |T1|)r ≤ k + r.

(9)
(10)

(11)

k ≤ Xs∈T1∪{0}

Proof: Since any arbitrary data collector DCs,K is able to
connect to k out-vertices through links with inﬁnite capacity,
for any cut with ﬁnite cut-capacity, we must have

Xs∈T1∪{0}

xs + Xs∈T2

ms ≥ k.

(12)

It is clear that xs must also satisfy (9) and (10).

There are d helper nodes for newcomers in round s and at
i=0 mi of them have their out-vertices in X . Therefore,

most Ps−1

we have

ys ≥ max(0, d −

s−1

Xi=0

mi), for s ∈ T2.

By (5), the cut-capacity of a given cut is bounded below by

x0α + Xs∈T1

xsα + Xs∈T2

max(0, d −

s−1

Xi=0

mi)β.

Note that the above expression is a monotonic decreasing
function of each mi. If (12) is originally satisﬁed, increasing
the value of each mi will not violate it. By (6), the above
expression is minimized when m∗
s = r for s ∈ T2. Then (12)
becomes

Xs∈T1∪{0}

xs + Xs∈T2

r ≥ k.

(13)

(x∗

Let (x∗, T ∗
0, x∗
1, . . . , x∗
Xs∈T1∪{0}

1 ) achieves the minimum of (8), where x∗ ,
T ). The minimum value of (8) is thus equal to
s α + Xs∈T2

max(0, d − Xi∈T1∪{0},

i − Xi∈T2,i<s

r)β.

x∗

x∗

i<s

(14)

(15)

Suppose to the contrary that

Xs∈T1∪{0}

x∗

s + Xs∈T2

r > k + r.

s′. If m∗

s′ > 0 and m∗

We claim that we can always ﬁnd another feasible solution
which achieves a lower objective function value than (14). To
see this, consider the last repair round s′ ∈ T which has strictly
positive value of m∗
T > 0, then s′ = T . Otherwise, we
have m∗
s = 0 for all s > s′. By deﬁnition of
s, we have s ∈ T1 for all s > s′. If s′ ∈ T1, we can set
m∗
s′ = 0 to strictly reduce the value of the expression in (14).
x∗
Since x∗
s′ ≤ r, the new setting will not violate constraint (13).
Therefore, (15) cannot hold. If s′ ∈ T2, we move s′ from
T2 to T1, and set m∗
s′ = 0. The value in (14) will not be
increased while constraint (13) will still be satisﬁed due to the
assumption in (15). We then repeat the above argument and
ﬁnd another new index s′. Due to constraint (13), x∗ cannot
be the zero vector, which leads to a contradiction. Hence, (15)
does not hold and we must have (11).

In the following theorem, we show the tightness of the lower

bound when T is ﬁnite.

Theorem 2. When T is ﬁnite, the lower bound in Theorem 1
is tight when n ≥ k + 2r.

Proof: Let (x∗, T ∗

1 ) be an optimal solution to the mini-
mization in Theorem 1. We prove that the bound is tight by
constructing an instance I ∗ with a DC∗ and a cut X ∗ such that
the cut-capacity C(X ∗) is exactly CLB(T ).

The instance I ∗ is constructed as follows. First, in stage 0,
choose any r nodes in N and let them fail. For stage s ∈ T ∗
1 ,
s active nodes in N
choose any r − x∗
and let them fail right before stage s + 1. For stage s ∈ T ∗
2 ,
choose any r active nodes in N and let them fail right before
stage s + 1. We can always ﬁnd such a failure pattern since
there are r nodes in Rs for every s, and the accumulated

s nodes in Rs and any x∗

d

(cid:0)

k(d+r−k) , 1
k(2d+r−k) (1, 1), respec-
tively. Since r > 1, broadcast repair outperforms cooperative
repair at these two points.

k(cid:1), and (τMTB, αMTB) =

2d

In Fig.4 (shown in next page), we plot the tradeoff curves
of the two repair schemes with parameters CStorage = 1, d = 9,
k = 4 and r = 2. As a benchmark, we also plot the single-
node repair, in which the repair is triggered whenever there
is a single node failure. As reported in [6], cooperative repair
performs better than single-node repair due to the beneﬁt of
node cooperation. However, it performs worse than broadcast
repair, since it does not exploit the broadcast nature of the
wireless medium.

REFERENCES

[1] A. G. Dimakis, P. B. Godfrey, Y. Wu, M. J. Wainwright, and K. Ram-
chandran, “Network coding for distributed storage systems,” IEEE Trans.
Inf. Theory, vol. 56, no. 9, pp. 4539–4551, Sep. 2010.

[2] R. Ahlswede, N. Cai, S.-Y. R. Li, and R. W. Yeung, “Network informa-
tion ﬂow,” IEEE Trans. Inf. Theory, vol. 46, no. 4, pp. 1204–1216, Jul.
2000.

[3] Y. Wu, “Existence and construction of capacity-achieving network codes
for distributed storage,” IEEE J. on Selected Areas in Commun., vol. 28,
no. 2, pp. 277–288, Feb. 2010.

[4] P. Hu, K. W. Shum, and C. W. Sung, “The fundamental theorem of
distributed storage systems revisited,” Hobart, Australia, Nov. 2014, pp.
65–69.

[5] Y. Hu, Y. Xu, X. Wang, C. Zhan, and P. Li, “Cooperative recovery of
distributed storage systems from multiple losses with network coding,”
IEEE J. on Selected Areas in Commun., vol. 28, no. 2, pp. 268–276,
Feb. 2010.

[6] K. W. Shum and Y. Hu, “Cooperative regenrerating codes,” IEEE Trans.

Inf. Theory, vol. 59, no. 11, pp. 7229–7258, Nov. 2013.

[7] A. G. Dimakis and K. Ramchandran, “Network coding for distributed
storage in wireless networks,” in Networked Sensing Information and
Control. Springer US, Apr. 2008, pp. 115–134.

[8] C. Gong and X. Wang, “On partial downloading for wireless distributed
storage networks,” IEEE Trans. on Signal Processing, vol. 60, no. 6, pp.
3278–3288, Jun. 2012.

[9] M. Gerami, M. Xiao,

J. Li, C. Fischione, and Z. Lin, “Re-
for distributed storage systems in packet erasure networks,”

pair
http://arxiv.org/abs/1405.3188, May 2014.

[10] M. Gerami, M. Xiao, and M. Skoglund, “Partial repair for wireless
caching networks with broadcast channels,” IEEE Wireless Communi-
cations Letters, vol. 4, no. 2, pp. 145–148, Apr. 2015.

number of failed nodes in N is

r + Xs∈T ∗

1

x∗

s + Xs∈T ∗

2

r ≤ k + 2r ≤ n,

where the ﬁrst inequality follows from (11) and the second
inequality follows our assumption in Theorem 2. Select any
0 active nodes from N and denote them by M0. Denote the
x∗
active nodes in Rs by Ms. In other words, for s ∈ T ∗
1 ∪ {0},
Ms ⊆ Rs and |Ms| = x∗

s; for s ∈ T ∗

2 , Ms = Rs.

Next, we specify the helper nodes for each repair round. The
helper nodes for repair round i, for i = 1, 2, . . . , s, are chosen
ﬁrst from M0, then from M1, and so on, until d helper nodes
i=0 |Mi| < d, the remaining helper nodes are
chosen arbitrarily from the active nodes in N . The existence
of such a helper pattern is validated by

are chosen. If Ps−1

n − r − |M1| − · · · − |Ms−1| ≥ d − |M0| − · · · − |Ms−1|,

where the left side is the number of active nodes in N after
stage s − 1, and the right side is the number of required helper
nodes in N . The inequality holds because n − r ≥ d.

Finally, consider DCT,K∗, which comes after the repair
round T and connects to K∗ ⊆ M0 ∪ M1 ∪ · · · ∪ MT .
Note that
there is such a DC, since according to (11),
|M0 ∪ M1 ∪ · · · ∪ MT | ≥ k.

into X ∗, and all

The cut X ∗ is constructed as follows: For s ∈ {0} ∪ T ∗
1 ,
the remaining
put Outi, for i ∈ Ms,
vertices in round s into X ∗. Vertices in these repair rounds
sα to the cut-capacity. For s ∈ T ∗
2 ,
contribute x∗
x∗
put all vertices in round s into X ∗. Vertices in these repair
i −

1 ,i<s x∗
2 ,i<s roβ to the cut-capacity. Summing up the cut-

0α +Ps∈T ∗
rounds contribute Ps∈T ∗
Pi∈T ∗

maxn0, d − x∗

capacity contribution of all
showing that the bound in Theorem 1 is tight.

the vertices, we get CLB(T ),

0 − Pi∈T ∗

1

2

Furthermore, the following result signiﬁcantly reduces the
dimension of the minimization problem. The proof is omitted
due to space limitation.

Theorem 3. When T ≥ k+r, we have CLB(T ) = CLB(k+r).

V. COMPARISON WITH COOPERATIVE REPAIR

We compare broadcast repair with cooperative repair when
T ≥ k+r and k = ur, where u is an integer larger than 1. Both
repair process is triggered after the number of failed storage
nodes accumulate to r. Consider the two points, minimum
storage (MS) point, which corresponds to the best storage efﬁ-
ciency, and the minimum repair-transmission bandwidth (MT)
point, which corresponds to the minimum repair-transmission
bandwidth on the trade-off curve between repair-transmission
bandwidth and storage (see Fig.4 shown in next page for
example). In cooperative repair, the repair-transmission band-
width is equal to the repair bandwidth. According to [6],
the MS point and the MT point are (τMSC, αMSC) =
k(d+r−k) , 1
( d+r−1
k(2d+r−k) (1, 1), respec-
tively. We can also derive the MS point and the MT
point
(τMSB, αMSB) =

k ), and (τMTC, αMTC) = 2d+r−1

repair, which are:

in broadcast

τ
 
,
e
d
o
n
 
d
e

l
i

i

a
f
 
r
e
p
 
h
t
d
w
d
n
a
b
 
n
o
s
s
m
s
n
a
r
t
-
r
i
a
p
e
R

i

i

 

Single-node repair

Cooperative repair

Broadcast repair

0.38

0.36

0.34

0.32

0.3

0.28

 

0.26

0.28

0.3

0.32

0.34
Storage per node, α

0.36

0.38

