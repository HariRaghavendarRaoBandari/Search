6
1
0
2

 
r
a

 

M
4
1

 
 
]
T
R
h
t
a
m

.

[
 
 

1
v
3
9
2
4
0

.

3
0
6
1
:
v
i
X
r
a

A REDUCTION THEOREM FOR τ -RIGID MODULES

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

Abstract. We prove a theorem which gives a bijection between the support τ -tilting modules
over a given ﬁnite-dimensional algebra A and the support τ -tilting modules over A/I, where I
is the ideal generated by the intersection of the center of A and the radical of A. This bijection
is both explicit and well-behaved. We give various corollaries of this, with a particular focus
on blocks of group rings of ﬁnite groups. In particular we show that there are τ -tilting ﬁnite
wild blocks with more than one simple module. We then go on to classify all support τ -tilting
modules for all algebras of dihedral, semidihedral and quaternion type, as deﬁned by Erdmann,
which include all tame blocks of group rings. Note that since these algebras are symmetric,
this is the same as classifying all basic two-term tilting complexes, and it turns out that a
tame block has at most 32 diﬀerent basic two-term tilting complexes. We do this by using the
aforementioned reduction theorem, which reduces the problem to ten diﬀerent algebras only
depending on the ground ﬁeld k, all of which happen to be string algebras. To deal with these
ten algebras we give a combinatorial classiﬁcation of all τ -rigid modules over (not necessarily
symmetric) string algebras.

Contents

1.

Introduction

2. Preliminaries

3. Geometry of two-term complexes of projective modules

4. Quotients by a centrally generated ideal

5. String algebras

6. Blocks of group algebras

Appendix A. Results for algebras of dihedral, semidihedral and quaternion type

References

1

3

5

7

9

16

19

39

1. Introduction

The theory of support τ -tilting modules, as introduced by Adachi, Iyama and Reiten in [4], is
related to, and to some extent generalizes, several classical concepts in the representation theory
of ﬁnite dimensional algebras.

2010 Mathematics Subject Classiﬁcation. Primary 16G10.
Key words and phrases. Representation theory of Artin algebras, τ -rigid modules, string algebras, blocks of

group algebras.

The ﬁrst author is supported by the EPSRC, grant EP/M02525X/1, and was, at the beginning of the project

presented in this article, supported by the FWO, project G.0157.12N.

The second and third authors are aspirants at the FWO.

1

2

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

On the one hand, it is related to silting theory for triangulated categories, which was introduced by
Keller and Vossieck in [23] and provides a generalization of tilting theory. Just like tilting objects,
silting objects generate the triangulated category they live in, but in contrast to tilting objects they
are allowed to have negative self-extensions. Using Keller’s version [22] of Rickard’s derived Morita
theorem, a silting object S in an algebraic triangulated category T gives rise to an equivalence
between T and the perfect complexes over the derived endomorphism ring R EndT (S). This ring
is a non-negatively graded DGA, which can however be very hard to present in a reasonable way
(see for example [26]).

On the other hand, τ -tilting theory is related to mutation theory, which has its origins in the
Bernstein-Gelfand-Ponomarev reﬂection functors. The basic idea is to replace an indecomposable
summand of a tilting object by a new summand to obtain a new tilting object. This mutation
procedure has played an important role in several results concerning Brou´e’s abelian defect group
conjecture, see [18, 25, 28]. However, it is not always possible to replace a summand of a tilting
object and get a new tilting object in return, which may be seen as sign that one needs to consider a
larger class of objects. This is why Aihara and Iyama introduced the concept of silting mutation [6],
where one observes quite the opposite behavior: any summand of a silting object can be replaced
to get (inﬁnitely) many new silting objects, and among all of those possibilities one is distinguished
as the “right mutation” and another one as the “left mutation”. So in this setting it is natural to
ask whether the action of iterated silting mutation on the set of basic silting objects in Kb(projA)
is transitive (for an explicit reference, see Question 1.1 in [6]). In general this question is hard,
but to make it more manageable, one can start by studying not all of the basic silting complexes,
but just the two-term ones. These have the beneﬁt of being amenable to the theory of support
τ -tilting modules mentioned above.

A support τ -tilting module M is a module which satisﬁes HomA(M, τ M ) = 0 and which has
as many non-isomorphic indecomposable summands as it has non-isomorphic simple composition
factors. These modules correspond bijectively to two-term silting complexes, and possess a com-
patible mutation theory as well. Using τ -tilting theory, the computation of all the two-term
silting complexes and their mutations is a lot more manageable, and in nice cases, one can deduce
from the ﬁniteness of the number of two-term silting complexes, the transitivity of iterated silting
mutation.

In this article, we will be concerned with determining all basic two-term silting complexes (or
equivalently support τ -tilting modules) for various ﬁnite dimensional algebras A deﬁned over an
algebraically closed ﬁeld. To this end, we prove the following very general reduction theorem:

Theorem 1.1 (see Theorem 4.1). For an ideal I which is generated by central elements and
contained in the Jacobson radical of A, the g-vectors of indecomposable τ -rigid (respectively
support τ -tilting) modules over A coincide with the ones for A/I, as do the mutation quivers.

For the purpose of this introduction we will call an algebra obtained from A by taking successive
central quotients a good quotient of A. The proof of the theorem is a simple application of a
four-term exact sequence

0 → HomCb(projA)(C(α), C(β)) → HomA(P, R) × HomA(Q, S)

fα,β−−−→ HomA(P, S) → HomKb(projA)(C(α), C(β)[1]) → 0

which is constructed in Proposition 3.1, where P, Q, R and S are projective modules, and C(α)
and C(β) are two-term complexes with terms P and Q, respectively R and S. The power of
this theorem lies in its generality. For example, as an immediate corollary, we recover a result of
[3] saying that the mutation quiver and the g-vectors of a Brauer graph algebra do not depend
on the multiplicities of the exceptional vertices, without having to classify all τ -tilting modules
beforehand.

One can often use Theorem 1.1 to eﬀectively compute all two-term silting complexes over a given
algebra. In fact, it turns out that many algebras of interest (for example all special biserial algebras
and all algebras of dihedral, semidihedral and quaternion type) have a string algebra as a good

3

quotient. Thus, in Section 5, we give a combinatorial algorithm to determine the indecomposable τ -
rigid modules, the support τ -tilting modules and the mutation quiver of a string algebra, provided
it is τ -tilting ﬁnite (otherwise one still gets a description, but no algorithm for obvious reasons).

As an application, in Section 6, we consider blocks of group algebras. Note that because these
algebras are symmetric, silting and tilting complexes coincide. We show that all tame blocks are
τ -tilting ﬁnite, i.e. there are only a ﬁnite number of isomorphism classes of τ -tilting modules, and
we give non-trivial (i.e. non-local) examples of wild blocks of (in some sense) arbitrary large defect
which are τ -tilting ﬁnite.

For tame blocks, there is a list of algebras containing all possible basic algebras of these blocks,
which is due to Erdmann [13]. It turns out that all algebras of dihedral, semidihedral and quater-
nion type (which are the algebras that Erdmann classiﬁes) have a string algebra as good quotient,
and we exploit this to determine the g-vectors and Hasse quivers of all of them. In particular, we
obtain the following theorem.

Theorem 1.2 (see Theorem 6.7). The g-vectors and Hasse quivers for tame blocks of group
algebras depend only on the Ext-quiver of their basic algebras.

The actual computation of the g-vectors and Hasse quivers, which we present in the form of several
tables, has been relegated to Appendix A.

Using a result of Aihara and Mizuno [7], we deduce the following theorem:

Theorem 1.3. All tilting complexes over an algebra of dihedral, semidihedral or quaternion type
can be obtained from A (as a module over itself) by iterated tilting mutation.

This implies in particular that if B is another algebra and X ∈ Db(Aop ⊗ B) is a two-sided tilting
complex, then there exists a sequence of algebras A = A0, A1, . . . , An = B and two-sided two-term
tilting complexes Xi ∈ Db(Aop

i−1 ⊗ Ai) such that X ∼= X1 ⊗L

A1 · · · ⊗L

An−1 Xn.

2. Preliminaries

Throughout this paper, k denotes an algebraically closed ﬁeld of arbitrary characteristic, and A
is a basic ﬁnite-dimensional k-algebra with Jacobson radical rad(A). The category of ﬁnitely gen-
erated right A-modules is denoted by modA and the subcategory of ﬁnitely generated projective
A-modules is denoted by projA. Let P1, . . . , Pl denote the non-isomorphic projective indecom-
posable A-modules. By τ we denote the Auslander-Reiten translate for A. The category of
bounded complexes of projective modules is denoted by Cb(projA). Moreover, Kb(projA) denotes
the corresponding homotopy category and K0(projA) denotes its Grothendieck group. For any
M ∈ modA, |M | is deﬁned as the number of indecomposable direct summands of M . We will use
the same notation for complexes.

We will now give a short summary of the theory of silting complexes and the theory of support
τ -tilting modules introduced in [4].

2.1. Two-term silting complexes.

Deﬁnition 2.1. A complex C = C • ∈ Kb(projA) is called two-term if Ci = 0 for all i 6= 0, −1.
Deﬁnition 2.2. A complex C ∈ Kb(projA) is called

(1) presilting if HomKb(projA)(C, C[i]) = 0 for i > 0,
(2) silting if it is presilting and generates Kb(projA).

It can be shown that a silting complex has exactly |A| summands.

Remark 2.3. A two-term presilting complex is also known as a rigid two-term complex. These
terms will be used interchangeably.

4

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

On the set of basic silting complexes, one can deﬁne a partial order as follows:

Theorem 2.4. [6, Theorem 2.11] For basic silting complexes C and D, we write D ≤ C if

This deﬁnes a partial order on the set of silting complexes.

HomKb(projA)(C, D[1]) = 0.

Let us denote the Hasse quiver of this poset by H(A). Now let C = D ⊕ E be a basic silting
complex with D indecomposable. Then there is a triangle (in Kb(projA))

D

f
−→ E′ → D′ → D[1],

such that f is a minimal left add E-approximation of D.

Deﬁnition 2.5. The left mutation of C with respect to D is deﬁned to be

The right mutation µ+

D(C) is deﬁned dually.

µ−
D(C) = D′ ⊕ E.

We denote by Q(A) the left mutation quiver of A with vertices corresponding to basic silting
complexes, there being an arrow C → C ′ whenever C ′ = µ−
D(C) for some indecomposable direct
summand D of C.

Remark 2.6. For symmetric algebras, silting complexes are in fact tilting complexes, so Q(A) is
the mutation quiver of tilting complexes.

Theorem 2.7. [6, Theorem 2.35] The quivers H(A) and Q(A) are the same.

In general, this quiver can be disconnected and has no regularity properties. However, if we restrict
our attention to basic two-term silting complexes, then more structure appears. In fact, using the
theory of support τ -tilting modules, one can prove the following theorem.

Theorem 2.8. [4, Corollary 3.8] Any basic two-term rigid complex C with |C| = |A| − 1 is a
direct summand of exactly two basic two-term silting complexes. Moreover, if two basic two-term
silting complexes C and D have |A| − 1 summands in common, then C is a left or right mutation
of D.

This means that if we denote by Q2(A) the full subquiver of Q(A) containing the vertices cor-
responding to basic two-term silting complexes, then we get an |A|-regular graph. With an eye
towards explicit calculations, the following properties are very useful.

Proposition 2.9.
Q2(A) = C.

[4, Corollary 3.10] If Q2(A) has a ﬁnite connected component C, then

In some cases, ﬁniteness of Q2(A) implies that for every n, there are only ﬁnitely many n-term
silting complexes.

Proposition 2.10. [7, Theorem 2.4][3, Proposition 6.9] Let A be a symmetric algebra. If for any
tilting complex C in the connected component of Q(A) containing A, the set of basic two-term
EndKb(projA)(C)-tilting complexes is ﬁnite, then for every n, the set of basic n-term A-tilting
complexes is ﬁnite.

Theorem 2.11. [5, Theorem 3.5] If for every n, there are only ﬁnitely many isomorphism classes
of basic n-term silting complexes, then Q(A) is connected, i.e. mutation acts transitively on basic
silting complexes.

Rigid two-term complexes have a complete numerical invariant.

Theorem 2.12. [4, Theorem 5.5] A two-term rigid complex C is uniquely determined by its class
[C] ∈ K0(projA).

Expanding out [C] in terms of the basis [P0], . . . , [Pl], we get

[C] =

l

X

i=1

gC
i [Pi].

5

The tuple gC = (gC
rigid complexes are uniquely determined by their g-vectors.

1 , . . . , gC

l ) is known as the g-vector of C. So Theorem 2.12 says that two-term

2.2. Support τ -tilting modules.

Deﬁnition 2.13. A module M ∈ modA is called

(1) τ -rigid if HomA(M, τ M ) = 0,
(2) τ -tilting if it is τ -rigid and |M | = |A|,
(3) support τ -tilting if there is an idempotent e ∈ A such that M is a τ -tilting A/(e)-module.

We will often think of a support τ -tilting module as a pair (M, e · A), and say that it is basic if
both M and e · A are basic. Also, direct sums are deﬁned componentwise.

For basic support τ -tilting modules, there is again a notion of mutation, and one can then similarly
deﬁne a left mutation quiver Qτ (A). Also, there is a partial order on this set giving rise to a Hasse
quiver Hτ (A). For details, see [4, Section 2.4]. These quivers are again the same (see [4, Corollary
2.34]) and isomorphic to Q2(A), as the following shows:

Theorem 2.14. [4, Theorem 3.2, Corollary 3.9] There are mutually inverse functions

{ basic two-term silting complexes }

f
⇄
g

{ basic support τ -tilting modules }

which are deﬁned in the following way:

f (C) = H0(C)

g((M, R)) = (P ⊕ R

(p 0)
−−−→ Q),

p
−→ Q → M is a minimal projective presentation of M , and R is the (uniquely determined,
where P
up to isomorphism) basic projective module such that (M, R) is a support τ -tilting pair. Moreover,
this bijection gives an isomorphism of posets between the left mutation quivers Q2(A) and Qτ (A).

3. Geometry of two-term complexes of projective modules

In this section we construct an exact sequence which will be useful for proving our ﬁrst main
theorem. It also serves to provide an elementary proof of Theorem 2.12.

For two ﬁxed projective A-modules P and Q, HomA(P, Q) can be considered as algebraic vari-
ety, isomorphic to aﬃne space. The connected algebraic group G = AutA P × AutA Q acts on
HomA(P, Q), in such a way that there is a bijection between the set of isomorphism classes of
two-term complexes in Cb(projA) with terms P and Q, and the set of orbits of G in HomA(P, Q).
When we consider α ∈ HomA(P, Q) as a complex in Cb(projA), we will denote it as C(α). The orbit
of α ∈ HomA(P, Q) will be denoted by G · α and its stabilizer by Gα. The following proposition
should be well known, but we do not know of a reference.

Proposition 3.1. For α ∈ HomA(P, Q) and β ∈ HomA(R, S) (P, Q, R, S projective A-modules),
there is an exact sequence

0 → HomCb(projA)(C(α), C(β)) → HomA(P, R) × HomA(Q, S)

fα,β−−−→ HomA(P, S)

g
−→ HomKb(projA)(C(α), C(β)[1]) → 0

where

fα,β(X, Y ) = Y ◦ α − β ◦ X

6

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

and g is just the natural map (we have C(α)0 = P and C(β)[1]0 = C(β)−1 = S, so we may view
an element of HomA(P, S) as a map of chain complexes).

Now, in the situation α = β, let again G = AutA(P ) × AutA(Q) and

φα : G −→ HomA(P, Q) : (g1, g2) 7→ g2 ◦ α ◦ g−1
Then d(φα)e = fα,α (where e denotes the unit element of G), and we get

1

im d(φα)e = Tα(G · α)

Proof. The only place where exactness is not immediately clear is at the HomA(P, S) term. The
kernel of g consists of all γ ∈ HomA(P, S) such that g(γ) is homotopic to zero. This is exactly the
image of fα,β (the negative sign in the deﬁnition of fα,β does not aﬀect the image).

That fα,α can be identiﬁed with the diﬀerential at the identity of the orbit map is clear.

consider

the

the
equal-
Let us
and hence
ity Gα = AutCb(projA)(C(α))
dim Gα = dim EndCb(projA)(C(α)). Since orbits are smooth, and by using [19, Theorem 4.3],
we ﬁnd

remark that
immediately from the deﬁnition,

should ﬁrst

follows

last

statement.

We

dim Tα(G · α) = dim G · α

= dim G − dim Gα
= dim EndA(P ) × EndA(Q) − dim EndCb(projA)(C(α))
= dim im fα,

where we also used exactness of (3.1) in the last equality. By the identiﬁcation of fα,α and d(φα)e,
we are done.
(cid:3)

Using this proposition we can easily reprove the following well-known results by Jensen-Su-
Zimmermann in the special case of two-term complexes.

Lemma 3.2. [21, Lemma 4.5] A two-term complex C(α) ∈ Kb(projA) with terms P and Q is
rigid if and only if the orbit G · α is open (and thus dense) in HomA(P, Q).

Proof. Orbits are always locally closed and smooth, so they are open exactly when there is a
point x ∈ G · α such that dim Tx(G · α) = dim Tx HomA(P, Q). By Proposition 3.1, there is an
isomorphism

Tα HomA(P, Q)/Tα(G · α)

∼=−→ HomKb(projA)(C(α), C(α)[1]),

and hence the lemma follows. Note that the denseness of G·α follows from the fact that HomA(P, Q)
is an aﬃne space, and hence irreducible.
(cid:3)

We can use this lemma to obtain an alternative proof of Theorem 2.12. Note that a slightly weaker
form of this theorem was also obtained in [21, Corollary 4.8].

Theorem 3.3. Two-term rigid complexes in Kb(projA) are determined up to isomorphism by
their g-vectors.

Proof. We ﬁrst show that any two-term rigid complex C is isomorphic in Kb(projA) to a complex
with terms having no direct summands in common. So assume C can be represented by a complex

0 → P d−→ Q → 0,

which is minimal with respect to the number of direct summands of P and Q. This minimality
ensures that im d ⊆ rad(Q). To now prove that P and Q have no summands in common, it suﬃces
to show that the image of any morphism f : P → Q is contained in rad(Q). By rigidity, there
exist hP ∈ EndA(P ) and hQ ∈ EndA(Q) such that

f = hQ ◦ d + d ◦ hP

7

But since im d ⊆ rad(Q), also im f ⊆ rad(Q).

Now let C(α) and C(β) denote two-term rigid complexes, both with terms P and Q. Then by
Lemma 3.2, the orbits G · α and G · β are dense in HomA(P, Q), so they intersect and we get an
isomorphism C(α) ∼= C(β) in Cb(projA). In particular, we ﬁnd that two-term rigid complexes are
uniquely determined by their terms.

Since we know by the ﬁrst part of the proof that P and Q do not have any summands in common,
the class [C(α)] ∈ K0(projA) already suﬃces to determine C(α) up to isomorphism, which is
exactly what we needed to prove.
(cid:3)

4. Quotients by a centrally generated ideal

Suppose z ∈ Z(A) ∩ rad(A) is an element such that z2 = 0 and consider the ideal I = (z) of
A. By ¯P1, . . . , ¯Pl we denote the projective indecomposable ¯A = A/I modules. Note that since
z ∈ rad(A), the number of projectives is the same.

We know that HomA(Pi, Pj ) is isomorphic to ejAei, and under this isomorphism the kernel of the
natural epimorphism

HomA(Pi, Pj) ։ HomA/I ( ¯Pi, ¯Pj) : α 7→ ¯α

corresponds to ejIei. Since I = (z) we therefore have for any α ∈ HomA(Pi, Pj )

(4.1)

¯α = 0 ⇐⇒ α = z · α0 for some α0 ∈ HomA(Pi, Pj)

The following is our main reduction theorem, which, despite its simple proof, will turn out to be
very powerful in the remainder of this article.

Theorem 4.1. For an ideal I ⊆ (Z(A) ∩ rad(A)) · A of A, the g-vectors of two-term rigid (respec-
tively silting) complexes for A coincide with the ones for A/I, as do the mutation quivers.

Proof. It suﬃces to consider I = (z) a principal ideal, with z ∈ Z(A) such that z2 = 0. From
Proposition 3.1, we know that for all α ∈ HomA(P, Q), and β ∈ HomA(R, S) (P, Q, R, S projective
A-modules) there is a commutative diagram with exact rows:

0

0

HomCb(projA)(C(α), C(β))

HomA(P, R) × HomA(Q, S)

φ

HomCb(proj ¯A)(C(¯α), C( ¯β))

Hom ¯A( ¯P , ¯R) × Hom ¯A( ¯Q, ¯S)

fα,β

f ¯α, ¯β

HomA(P, S)

ψ

Hom ¯A( ¯P , ¯S)

g

¯g

HomKb(projA)(C(α), C(β)[1])

HomKb(proj ¯A)(C(¯α), C( ¯β)[1])

0

0

Since ψ is surjective, by commutativity of the rightmost square, so is the rightmost vertical arrow.
This ensures that if HomKb(projA)(C(α), C(β)[1]) = 0, also HomKb(proj ¯A)(C(¯α), C( ¯β)[1]) = 0.
also
The
HomKb(projA)(C(α), C(β)[1]) = 0. From the exact sequence, we see that f ¯α, ¯β is surjective, and it
suﬃces to prove that fα,β is also surjective. Let γ ∈ HomA(P, S) be arbitrary, then there exists
an element (X, Y ) ∈ HomA(P, R) × HomA(Q, S) such that

if HomKb(proj ¯A)(C(¯α), C( ¯β)[1]) = 0, we

other way round,

claim that

ψ(γ) = (f ¯α, ¯β ◦ φ)(X, Y )
= (ψ ◦ fα,β)(X, Y ),

so γ − fα,β(X, Y ) ∈ ker ψ, and therefore, by (4.1),

γ = fα,β(X, Y ) + zγ′,

some γ′ ∈ HomA(P, S).

for
(X ′, Y ′) ∈ HomA(P, R) × HomA(Q, S) such that

Using surjectivity of f ¯α, ¯β ◦ φ again,

there

exists

γ′ = fα,β(X ′, Y ′) + zγ′′.

8

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

Thus we ﬁnd that

γ = fα,β(X, Y ) + zγ′

= fα,β(X, Y ) + zfα,β(X ′, Y ′)
= fα,β(X + zX ′, Y + zY ′),

where we used that z ∈ Z(A). Thus fα,β is surjective.

We conclude that for all α and β:

(4.2)

HomKb(projA)(C(α), C(β)[1]) = 0 ⇐⇒ HomKb(proj ¯A)(C(¯α), C( ¯β)[1]) = 0.

Since the assignment C(α) ∈ Kb(projA) 7→ C(¯α) ∈ Kb(projA/I ) does not change the g-vectors,
and these uniquely determine a rigid complex by Theorem 2.12, it is bijective. For the same
reason it preserves and reﬂects direct sums, which means that the aforementioned assignment
induces a bijection between the two-term rigid complexes for A and the two-term rigid complexes
for A/I which restricts to a bijection between the indecomposable complexes, and therefore also
between the silting complexes. The mutation quivers will coincide as well since by Theorem 2.7
they coincide with the Hasse quivers of the posets formed by the two-term silting complexes, and
the order is preserved due to (4.2).
(cid:3)

As an immediate corollary of Theorem 4.1, we obtain [1, Theorem B] in the symmetric case.

Corollary 4.2. For a symmetric algebra A with soc(A) ⊆ rad(A), the g-vectors of two-term rigid
(respectively silting) complexes for A coincide with the ones for A/ soc(A), as do the mutation
quivers.

Proof. We may assume without loss that A is basic. In this case A/ rad(A) is a commutative ring.
That implies that a · m = m · a for all m ∈ A/ rad(A) (which we now see as an A-A-bimodule),
and all a ∈ A. Since A is symmetric we have soc(A) ∼= Homk(A/ rad(A), k) as an A-A-bimdule,
which implies that a · m = m · a for all m ∈ soc(A) and all a ∈ A. That is, soc(A) ⊆ Z(A).
(cid:3)

Here is another immediate application of the foregoing theorem, which recovers the result of
[3] saying that the mutation quiver and the g-vectors of a Brauer graph algebra do not depend
on the multiplicities of the exceptional vertices, without having to classify all τ -tilting modules
beforehand.

Example 4.3. Recall that an algebra A = kQ/I is called special biserial if

(1) There are at most two arrows emanating from each vertex of Q.
(2) There are at most two arrows ending in each vertex of Q.
(3) For any path α1 · · · αn 6∈ I (n ≥ 1) there is at most one arrow α0 in Q such that
α0 · α1 · · · αn 6∈ I and there is at most one arrow αn+1 in Q such that α1 · · · αn · αn+1 6∈ I.

Now suppose A is symmetric special biserial. By the main result of [29], these correspond ex-
actly to the Brauer graph algebras, and using the description of the center of such algebras in [9,
Proposition 2.1.1], Theorem 4.1 allows one to recover the fact that the poset of two-term tilting
complexes of a Brauer graph algebra is independent of the multiplicities involved (cf. [3, Propo-
sition 6.16]), simply because all Brauer graph algebras with the same Brauer graph but diﬀerent
exceptional multiplicities have the same quotient A/ rad(Z(A))A (the sum of all walks around a
vertex in the Brauer graph, with each adjacent edge occuring as a starting point precisely once,
is a central element; one then obtains the isomorphism of the quotients fairly easily by checking
that all relations involving the exceptional multiplicities become zero modulo the ideal generated
by these central elements).

5. String algebras

9

As a consequence of Theorem 4.1 the classiﬁcation of indecomposable τ -rigid modules over an
algebra A often reduces to the same problem over a quotient A/I, which will typically have a
simpler structure than A itself. But of course this quotient still needs to be dealt with. One class
of algebras for which one might hope to determine all indecomposable τ -rigid modules are the
algebras of radical square zero (see [2]), but this class is not large enough for our purposes. In
this section we study the τ -rigid modules of string algebras, which are special biserial algebras
(as deﬁned in Example 4.3) with monomial relations. There is a well-known classiﬁcation of
indecomposable modules over these algebras, in terms of combinatorial objects known as “strings”,
which are certain walks around the Ext-quiver of the algebra. All Auslander-Reiten sequences are
known as well. Hence it is clear that it should be possible to give a combinatorial description
of the τ -rigid modules and support τ -tilting modules in terms of these “strings”. Note that for
symmetric special biserial algebras such a classiﬁcation exists already (see [3]). But, as A being
symmetric does not imply that A/I is symmetric as well, it is useful to consider non-symmetric
special biserial algebras even if one is merely interested in symmetric algebras A. By Remark 5.9
below we may then restrict our attention to string algebras, even if we are interested in arbitrary
special biserial algebras.

Deﬁnition 5.1. Let Q be a ﬁnite quiver and and let I be an ideal contained in the k-span of all
paths of length ≥ 2. We say that A = kQ/I is a string algebra if the following conditions are met:

(1) There are at most two arrows emanating from each vertex of Q.
(2) There are at most two arrows ending in each vertex of Q.
(3) I is generated by monomials.
(4) For any path α1 · · · αn 6∈ I (n ≥ 1) there is at most one arrow α0 in Q such that
α0 · α1 · · · αn 6∈ I and there is at most one arrow αn+1 in Q such that α1 · · · αn · αn+1 6∈ I.

We will now introduce the combinatorial notions which are needed to classify τ -rigid modules over
string algebras. For the most part we use the same terminology as used by Butler and Ringel
in [12], where they classify all (ﬁnite dimensional) indecomposable modules over string algebras,
as well as all Auslander-Reiten sequences. We will nonetheless make some deﬁnitions which are
particular to our situation, since we only have the very speciﬁc goal of classifying τ -rigid modules
in mind. One noteworthy detail on which we deviate from [12] is that, since the convention we
use for multiplication in path algebras is the opposite of the one used in [12], the string module
M (α1 · · · αm) we deﬁne below is going to correspond to the string module M (α−1
m ) as
1
deﬁned in [12].

· · · α−1

Deﬁnition 5.2. Let A = kQ/I be a string algebra, and let Q1 = {α1, . . . , αh} denote the set of
arrows in Q. By α−1

for i ∈ {1, . . . , h} we denote formal inverses of the arrows αi.

i

(1) A string C is a word c1 · · · cm, where ci ∈ {α1, α−1

i+1 for
all i ∈ {1, . . . , m − 1} and for every subword W of C, W /∈ I and W −1 /∈ I. We also ask
that if C contains a subword of the form αi · α−1
, then the target of αi is equal to the
target of αj , and if C contains a subword of the form α−1
· αj, then the source of αi is
equal to the source of αj. Moreover, for each vertex e of Q, we deﬁne two paths of length
zero, one of which is called “direct” and one of which is called “inverse” (this will make
sense in the context of the next point below).

h } such that ci 6= c−1

1 , . . . , αh, α−1

j

i

(2) We call a string of length greater than zero direct if all ci’s are arrows, and inverse if all

ci’s are inverses of arrows. We call a string directed if it is either direct or inverse.

i

(3) For an arrow αi we denote by s(αi) its source and by t(αi) its target. We deﬁne
s(α−1
) = s(αi). We extend this notion to strings by deﬁning
s(c1 · · · cm) = s(c1) and t(c1 · · · cm) = t(cm). For a string C of length zero, given by
a vertex e, we deﬁne s(C) = t(C) = e.

) = t(αi) and t(α−1

(4) If C is directed, then we deﬁne the corresponding direct string ¯C as follows: if C is direct,

i

then ¯C := C, and if C is inverse, then ¯C := C −1.

10

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

(5) Given a string C of length greater than zero let C1 · · · Cl be the unique factorization of C
such that each Ci is directed of length greater than zero, and for each i ∈ {1, . . . , l − 1}
exactly one of the strings Ci and Ci+1 is direct. If C is of length zero we set l = 1 and
deﬁne C1 = Cl := C.

(6) We call C1 a loose end if C1 is inverse and C −1

· αi ∈ I for all arrows αi. Similarly, we
call Cl a loose end if Cl is direct and Cl · αi ∈ I for all arrows αi. The other constituent
factors C2, · · · , Cl−1 are never considered loose ends.

1

(7) Assume that C is not of length zero. Then we deﬁne a string P C as follows: if C1 is a loose
end, we deﬁne P C = C2 · · · Cl (or one of the strings of length zero corresponding to t(C1)
if l = 1). If C1 is not a loose end then there is at most one arrow αi such that α−1
· C is a
string, and we deﬁne P C := α−1
· C if such an αi exists, and P C := C otherwise. In the
same vein, if Cl is a loose end we deﬁne CP := C1 · · · Cl−1 (or one of the strings of length
zero corresponding to s(Cl) if l = 1). If Cl is not a loose end, then there is at most one
arrow αi such that C · αi is a string and we deﬁne CP := C · αi if such an αi exists, and
CP := C otherwise.

i

i

Now, if C is of length zero, then C is given by a vertex e, and we deﬁne CP = P C = α−1
for some αi emanating from e, provided such an arrow exists, and CP = P C := C if no
such arrow exists (note that we make a choice here, so in order to make P C and CP well-
deﬁned, we technically have to designate one of the arrows emanating from each vertex as
the one to be used).

i

Unless l = 1 and C1 = Cl is a loose end, we deﬁne P CP := (P C)P = P (CP ). If l = 1
and C1 = Cl is an inverse loose end, then we deﬁne P CP := P (CP ), and if C1 = Cl is a
direct loose end we deﬁne P CP := (P C)P .

Note that we always have P (C −1)P = (P CP )−1.

(8) If C has length greater than zero, then we call

IC (0) = s(C1), IC (1) = t(C1), IC (2) = t(C2), . . . , IC (l) = t(Cl)

the intermediate points of C, and for 1 ≤ i < l we call Ci and Ci+1 the adjacent directed
strings of the intermediate point IC (i). We say that C1 is the adjacent directed string
of IC (0) and Cl is the adjacent directed string of IC (l). We say that IC (i) is an upper
intermediate point if Ci (if it exists, i.e. if i > 0) is inverse and Ci+1 (if it exists) is direct.
We call IC (i) a lower intermediate point if Ci (if it exists) is direct and Ci+1 (if it exists)
is inverse. In particular, IC (0) is an upper (respectively lower) intermediate point if C1 is
direct (respectively inverse) and IC (l) is an upper (respectively lower) intermediate point
if Cl is inverse (respectively direct).

If C is of length zero, then it corresponds to a vertex e, which we consider an upper
intermediate point of C. That is, IC (0) = e is an upper intermediate point (and, by
deﬁnition, the only intermediate point of C), and we say that there are no adjacent directed
strings.

(9) Let C and D be two strings. Write C ′ = P CP = C ′

1 · · · C ′

m and D′ = P DP = D′

1 · · · D′
n.

We say that D is C-rigid if the following two conditions are met:
(a) For any i ∈ {0, . . . , m} such that IC ′(i) is a lower intermediate point of C ′ and any
j ∈ {0, . . . , n} such that ID′ (j) is an upper intermediate point of D′ we have that any
direct string W with s(W ) = ID′ (j) and t(W ) = IC ′ (i) factors as either W = ¯X · W ′,
where X is an adjacent string of ID′ (j), or as W = W ′ · ¯Y , where Y is an adjacent
string of IC ′ (i).

(b) Assume that there are i ∈ {1, . . . , m} and j ∈ {1, . . . , n} such that IC ′(i) = ID′ (j)
and IC ′ (i) and ID′ (j) are either both upper intermediate points or they are both lower
intermediate points. By replacing, if necessary, D′ by D′−1 (and, as a consequence,
D′
n−x+1 for each x) and j by n− j we can assume without loss that if i + 1 ≤ m
and j + 1 ≤ n, then the strings C ′
j+1 both start with the same arrow or
inverse of an arrow, and if i > 0 and j > 0 then the strings C ′
j both end on
the same arrow or inverse of an arrow.

i+1 and D′

x by D′−1

i and D′

Deﬁne t(1) = 1 and t(−1) = 0. For σ ∈ {1, −1} we deﬁne e(σ) ∈ Z≥0 to be maximal
with respect to the property that

11

C ′

i+σx+t(σ) = D′

j+σx+t(σ) for all 0 ≤ x < e(σ)

whilst at the same time satisfying 0 ≤ i + σe(σ) ≤ m and 0 ≤ j + σe(σ) ≤ n. Now
we ask that one of the following holds for at least one of the two choices for σ:

(i) EC ′ (i + σe(σ)) is an upper intermediate point and i + σ(e(σ) + 1) ∈ {−1, m + 1}
(ii) EC ′ (i + σe(σ)) is an upper intermediate point, the previous condition is not

met, j + σ(e(σ) + 1) 6∈ {−1, n + 1} and

i+σe(σ)+t(σ) = ¯D′
¯C ′

j+σe(σ)+t(σ) · W

for some direct string W (which, by the maximality of e(σ), must have positive
length).

(iii) EC ′ (i + σe(σ)) is a lower intermediate point and j + σ(e(σ) + 1) ∈ {−1, n + 1}
(iv) EC ′ (i + σe(σ)) is a lower intermediate point, the previous condition is not met,

i + σ(e(σ) + 1) 6∈ {−1, m + 1} and
j+σe(σ)+t(σ) = W · ¯C ′

¯D′

i+σe(σ)+t(σ)

for some direct string W (which, by the maximality of e(σ), must have positive
length).

(10) We say that a string C is rigid if C is C-rigid.
(11) We say that a vertex e lies in the support of a string C if one of the following holds (again

m):

1 · · · C ′

C ′ = P CP = C ′
(a) IC ′ (i) = e for some lower intermediate point IC ′ (i) of C ′ with i 6= 0, m.
(b) There is a direct string W whose source is an upper intermediate point IC ′ (i) of C ′
j · W ′ for any adjacent

and whose target is e, such that W does not factor as W = ¯C ′
directed string C ′

j of IC ′ (i).

For a vertex e of Q we denote by Pe = e · A the corresponding projective indecomposable module.
Given two vertices e and f we will identify direct strings C with s(C) = e and t(C) = f with the
homomorphism from Pf to Pe induced by left multiplication with C (considered as an element of
A).

Deﬁnition 5.3. Let A = kQ/I be a string algebra and let C be a string. Decompose
m. If C ′ has length greater than zero we deﬁne the string module M (C)
C ′ = P CP = C ′
as follows:

1 · · · C ′

(1) If C ′

1 is direct and C ′

m is inverse (note that in this case m is even): deﬁne Q(i) := Pt(C ′

2i−1)

and P (i) := Ps(C ′

2i−1) for i ∈ {1, . . . , m

2 }. Deﬁne P ( m

2 + 1) := Pt(C ′

m). Deﬁne

Q :=

m
2

M

i=1

Q(i)

and

P :=

m
2 +1

M

i=1

P (i)

Furthermore, for each i ∈ {1, . . . , m
and for each i ∈ {1, . . . , m
deﬁne a homomorphism ψC : Q −→ P as follows:

2 }, we denote by πQ(i) the projection from Q onto Q(i),
2 + 1} we denote by ιP (i) the embedding of P (i) into P . We

m
2

ιP (i) ◦ C ′

2i−1 ◦ πQ(i) + ιP (i+1) ◦ C ′−1

2i ◦ πQ(i)

ψC =

X
i=1
1 is inverse and C ′

(2) If C ′

P (i) := Pt(C ′

2i−1) for i ∈ {1, . . . , m

2 }. Deﬁne Q( m

2 + 1) := Pt(C ′

m). Deﬁne

m is direct (in this case m is even): deﬁne Q(i) := Ps(C ′

2i−1) and

Q :=

m
2 +1

M

i=1

Q(i)

and

P :=

m
2

M

i=1

P (i)

12

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

Furthermore, for each i ∈ {1, . . . , m
Q(i), and for each i ∈ {1, . . . , m
deﬁne a homomorphism ψC : Q −→ P as follows:

2 + 1}, we denote by πQ(i) the projection from Q onto
2 } we denote by ιP (i) the embedding of P (i) into P . We

ψC =

m
2

X

i=1

ιP (i) ◦ C ′−1

2i−1 ◦ πQ(i) + ιP (i) ◦ C ′

2i ◦ πQ(i+1)

(3) If C ′

1 is direct and C ′

P (i) := Ps(C ′

2i−1) for i ∈ {1, . . . , m+1

2 }. Deﬁne

m is direct (in this case m is odd): deﬁne Q(i) := Pt(C ′

2i−1) and

Q :=

m+1

2

M

i=1

Q(i)

and

P :=

m+1

2

M

i=1

P (i)

Furthermore, for each i ∈ {1, . . . , m+1
2 }, we denote by πQ(i) the projection from Q onto
Q(i), and by ιP (i) the embedding of P (i) into P . We deﬁne a homomorphism ψC : Q −→ P
as follows:

ψC = ιP ( m+1

2

) ◦ C ′

m ◦ πQ( m+1

2

) +

m−1

2

X

i=1

ιP (i) ◦ C ′

2i−1 ◦ πQ(i) + ιP (i+1) ◦ C ′−1

2i ◦ πQ(i)

In each of the above three cases we deﬁne M (C) as the cokernel of ψC , and we note that ψC is a
minimal projective presentation of M (C). In case both C ′
m are inverse we can deﬁne M (C)
m both direct” case). Note that M (C) ∼= M (C −1)
as M (C −1) (this will fall into the “C ′
holds in the other cases as well.
Now, if C ′ is of length zero, then it is given by a vertex e, and we deﬁne M (C) = Pe.

1 and C ′

1 and C ′

Note that the previous deﬁnition is much less technical than it looks: given a string C, we quite
simply form C ′ = P CP , and then deﬁne a presentation Q −→ P such that the indecomposable
direct summands of P are in bijection with the upper intermediate points of C ′ and the inde-
composable direct summands of Q are in bijection with the lower intermediate points of C ′. The
map between Q and P is then simply the sum of the direct versions ¯C ′
m of the factors
C ′
m, each being considered as a map from the summand of Q corresponding to its target
to the summand of P corresponding to its source.

1, . . . , ¯C ′

1, . . . , C ′

Proposition 5.4. Let A = kQ/I be a string algebra and let M be an indecomposable τ -rigid
A-module. Then M is a string module.

Proof. By [12, Theorem on page 161] each indecomposable A-module is either a string module or
a so-called band module. By [12, Bottom of page 165] each band module occurs in an Auslander-
Reiten sequence as both the leftmost and the rightmost term, which means that each band module
is isomorphic to its Auslander-Reiten translate. But by deﬁnition such a module cannot be τ -
rigid.
(cid:3)

Proposition 5.5. Let A = kQ/I be a string algebra and let C and D be two strings. De-
note by T (C)• ∈ Kb(projA) and T (D)• ∈ Kb(projA) minimal projective presentations of M (C)
respectively M (D). Then HomKb(projA)(T (C)•, T (D)•[1]) = 0 if and only if D is C-rigid.

Proof. We know that a minimal projective presentation of the string module M (C) is given by
the following two-term complex:

T (C)• = M

i

Q(C)(i)

ψC−→ M

j

P (C)(j)

where i ranges over all lower intermediate points of C ′ = P CP and j ranges over all upper
intermediate points of C ′ (just as in Deﬁnition 5.3, we merely added the superscript (C), and are

13

intentionally less explicit about the range of the direct sum in order to avoid having to deal with
three diﬀerent cases again). In the same vein we have the minimal projective presentation

T (D)• = M

i

Q(D)(i)

ψD−→ M

j

P (D)(j)

of M (D), where i and j range over the lower respectively upper intermediate points of D′ = P DP .
We adopt the following notation for homomorphisms: given a direct string W whose source is the
upper intermediate point of D′ associated with P (D)(j) and whose target is the lower intermediate
point of C ′ associated with Q(C)(i), we denote by Wj,i the element of HomA(Q(C)(i), P (D)(j))
induced by left multiplication with W . Whenever we write Wj,i below, we will mean this to
tacitly imply that W starts and ends in the right vertices. Moreover, we identify

HomA(Q(C)(i), P (D)(j)) = HomCb(A)(T (C)•, T (D)•[1])

M

i,j

Note that the Wj,i form a basis of the above vector space, and we will refer to them as basis
elements in what follows. We say that Wj,i is involved in an element ϕ of the above space if the
coeﬃcient of Wj,i is non-zero when we write ϕ as a linear combination of the basis elements.
Now the condition HomKb(projA)(T (C)•, T (D)•[1]) = 0 is equivalent to asking that for each sum-
mand Q(C)(i) of Q(C) (that is, for each lower intermediate i point of C ′) and each summand
P (D)(j) of P (D) (that is, for each upper intermediate point j of D′) each basis element Wj,i is
zero-homotopic. One deduces from the deﬁnition of ψC and ψD that the space of zero-homotopic
maps from T (C)• to T (D)•[1] is spanned by the following two families of maps:

(1) Let u be an upper intermediate point of D′ and let u′ be an upper intermediate point of

C ′. We deﬁne

hC (W, u, u′) = (W · ¯C ′

u′ )u,u′−1 + (W · ¯C ′

u′+1)u,u′+1

hC (W, u, u′) = (W · ¯C ′

u′+1)u,u′+1

hC (W, u, u′) = (W · ¯C ′

u′ )u,u′−1

if 0 < u′ < m

if 0 = u′ < m

if 0 < u′ = m

if C ′ has length greater than zero, and hC (W, u, u′) = 0 otherwise.

(2) Let l be a lower intermediate point of D′ and let l′ be a lower intermediate point of C ′

hD(W, l, l′) = ( ¯D′

l · W )l−1,l′ + ( ¯D′

l+1 · W )l+1,l′

hD(W, l, l′) = ( ¯D′

l+1 · W )l+1,l′

hD(W, l, l′) = ( ¯D′

l · W )l−1,l′

if 0 < l < n

if 0 = l < n

if 0 < l = n

By deﬁnition, D′ having a lower intermediate point implies that D′ is of length greater
than zero, so the length zero case does not need to be considered.

The source and target of the direct string W are ID′ (u) and IC ′ (u′) in the ﬁrst case and ID′ (l)
and IC ′ (l′) in the second.

The ﬁrst condition in the deﬁnition of C-rigidness is fulﬁlled if and only if each basis element Wj,i
is involved in some hC(W ′, u, u′) or some hD(W ′, l, l′) for some W ′. So clearly the ﬁrst condition
is necessary.

Now notice that if W has positive length, then the unique continuation condition in the deﬁnition
of string algebras ensures that hC (W, u, u′) respectively hD(W, l, l′) actually involves at most one
basis element. Hence every Wj,i is zero-homotopic if and only if all basis vectors involved in maps
of the form hC (IC ′ (u′), u, u′) with IC ′ (u′) = ID′ (u) and hD(IC ′ (l′), l, l′) with IC ′ (l′) = ID′ (l) are
zero-homotopic. So assume that we have such a pair l′, l respectively u′, u. These correspond

14

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

precisely to the pairs i, j which are considered in the second part of the deﬁnition of C-rigidness.
We may assume that D′ is oriented as in the deﬁnition of C-rigidness, and we get non-negative
integers e(σ) for σ ∈ {1, −1} just as in said deﬁnition. For ease of notation we will write h instead
of hC and hD (the parameters do in fact determine which of the two we are dealing with). So we
want to know when the basis elements involved in h(IC ′ (i), j, i) are zero-homotopic, that is, can
be written as a linear combination of other h’s. Without loss of generality we can assume that all
h’s occurring in such a linear combination lie in the equivalence class of h(IC ′(i), j, i) with respect
to the transitive closure of the relation h(W, a, b) ∼ h(W ′, c, d) if there is a basis element which
is involved in both h(W, a, b) and h(W ′, c, d). We call h(W, a, b) and h(W ′, c, d) neighbors of each
other. Note that either c = a + 1 and d = b + 1, in which case we call h(W ′, c, d) a right neighbor
of h(W, a, b), or c = a − 1 and d = b − 1, in which case h(W ′, c, d) is called a left neighbor of
h(W, a, b). Left and right neighbors are unique if they exist. For any −e(−1) < x < e(1) we have

h(IC ′ (i + x), j + x, i + x) = 


( ¯C ′

i+x)j+x,i+x−1 + ( ¯C ′

i+x+1)j+x,i+x+1

( ¯C ′

i+x)j+x−1,i+x + ( ¯C ′

i+x+1)j+x+1,i+x

or

Hence
depending on whether IC ′ (i + x) is an upper or a lower intermediate point.
h(IC ′ (i + x), j + x, i + x) has
right neighbor
h(IC ′ (i + x + 1), j + x + 1, i + x + 1) and the left neighbor h(IC ′ (i + x − 1), j + x − 1, i + x − 1).
It hence suﬃces to check what the right neighbor of h(IC ′ (i + e(1)), j + e(1), i + e(1)) and the left
neighbor of h(IC ′ (i − e(−1)), j − e(−1), i − e(−1)) are.

exactly two neighbors,

namely the

If IC ′ (i + e(1)) is an upper intermediate point, and i + e(1) = m (i.
e. 9(b)i for σ = +1
is met), then h(IC ′ (i + e(1)), j + e(1), i + e(1)) has no right neighbors, but in this case
h(IC ′ (i + e(1)), j + e(1), i + e(1)) = ( ¯C ′
i+e(1))j+e(1),i+e(1)−1 or h(IC ′ (i + e(1)), j + e(1), i + e(1)) = 0
(if C ′ has length zero).
is met neither for σ = 1 nor for σ = −1 then
If 9(b)i
h(IC ′ (i + e(1)), j + e(1), i + e(1)) involves two diﬀerent basis elements. If i + e(1) < m, then a right
neighbor of h(IC ′ (i + e(1)), j + e(1), i + e(1)) must have the form h(W, i + e(1) + 1, j + e(1) + 1)
where ¯D′
i+e(1)+1. That is, a right neighbor exists if and only if the factorization
condition 9(b)ii for σ = +1 is met, and this right neighbor involves just a single basis element.

j+e(1)+1 · W = ¯C ′

Similarly one veriﬁes that if IC ′ (i + e(1)) is a lower intermediate point, and j + e(1) = n (i. e.
9(b)iii for σ = +1 is met), then h(IC ′ (i + e(1)), j + e(1), i + e(1)) has no right neighbors, but in
this case h(IC ′ (i + e(1)), j + e(1), i + e(1)) = ( ¯D′
j+e(1))j+e(1)−1,i+e(1). If 9(b)iii is met neither for
σ = 1 nor for σ = −1 then h(IC ′ (i + e(1)), j + e(1), i + e(1)) involves two diﬀerent basis elements.
If 9(b)iii is not met for σ = +1, then h(IC ′ (i + e(1)), j + e(1), i + e(1)) has a right neighbor (which
necessarily involves but a single basis element) if and only 9(b)iv is met for σ = +1.

the

same

line

of

apply

course

can of

We
of
h(IC ′ (i − e(−1)), j − e(−1), i − e(−1). What we obtain then is the statement that the
equivalence class of h(IC ′ (i), j, i) with respect to the neighborhood relation contains an element
involving only a single basis element if and only if one of the conditions 9(b)i - 9(b)iv is met for
either σ = +1 or σ = +1.

left neighbors

reasoning

the

to

Now one just has to realize that if some element in the equivalence class of h(IC ′ (i), j, i) involves
just a single basis element, then any basis element involved in any element of the equivalence class
can be written as a linear combination of the elements of the equivalence class. Conversely, if every
element of the equivalence class of h(IC ′ (i), j, i) involves two basis elements, then no basis element
involved in any of the elements of the equivalence class can be written as a linear combination of
elements of the equivalence class (note that this is just linear algebra, since such an equivalence
class written as row vectors with respect to the basis consisting of all involved basis elements in the
right order, looks like (1, 1, 0, . . . , 0), (0, 1, 1, 0, . . . , 0), . . . , (0, . . . , 0, 1, 1), and possibly (1, 0, . . . , 0)
and/or (0, . . . , 0, 1)).
(cid:3)

Proposition 5.6. Let A = kQ/I be a string algebra and let C be a string. Denote by
T (C)• ∈ Kb(projA) a minimal projective presentation of M (C). Let e be a vertex of Q, and

15

denote by P •
have HomKb(projA)(T (C)•, P •
not in the support of C.

e the stalk complex belonging to the projective indecomposable Pe. Then we always
e [1], T (C)•[1]) = 0 if and only if e is

e [2]) = 0, and HomKb(projA)(P •

Proof. Analogous to the previous proposition.

(cid:3)

Corollary 5.7. Let A = kQ/I be a string algebra.

(1) There are bijections

{ rigid strings for A }

l

{ indecomposable τ -rigid A-modules }

l

{ indecomposable rigid two-term complexes T • ∈ Kb(projA) with H0(T •) 6= 0 }
where the ﬁrst bijection is given by the correspondence between strings and indecompos-
able A-modules, and the second bijection is given by taking a minimal projective presen-
tation of an indecomposable τ -rigid module and, in the other direction, taking homology
in degree zero.

(2) If {C(1), . . . , C(l)} is a collection of rigid strings, and {e(1), . . . , e(m)} is a collection of

vertices of Q, then




l

M

i=1

M (C(i)),

m

M

j=1

Pe(j)




is a support τ -tilting pair if and only if l + m = |A|, each C(i) is C(j)-rigid for all
i, j ∈ {1, . . . , l}, and none of the e(j)’s is in the support of any of the C(i)’s.

(3) If {C(1), . . . , C(l)}, {e(1), . . . , e(m)} and {D(1), . . . , D(l′)},{f (1), . . . , f (m′)} both give
rise to a support τ -tilting module in the sense of the previous point, say M and N , then
M ≥ N if and only if D(i) is C(j)-rigid for all i, j.

In fact, the preceding corollary shows that there is a combinatorial algorithm to determine the
indecomposable τ -rigid modules, the support τ -tilting modules and the mutation quiver of a
string algebra, provided A has only ﬁnitely many indecomposable τ -rigid modules. We simply run
through a list of all strings up to a given length (which we may have to increase if we do not obtain
an |A|-regular graph as the Hasse quiver below), check which of these strings are rigid and which
vertices lie in their support. Then we can determine the support τ -tilting modules involving only
those rigid strings using point (2) of the preceding corollary. We can immediately see which of
these support τ -tilting modules are mutations of one another, which gives us a subquiver of the
Hasse quiver (the direction of the arrows follows from point 3 above). If each vertex in the quiver
has exactly |A| neighbors, then we are done by Theorem 2.8 and Proposition 2.9. Otherwise we
need to use a bigger maximal length above and start over. Of course, in practice, this can be done
somewhat more eﬃciently.

Example 5.8 (cf. [20]). Consider the quiver

Q = •1

α1

β2

•2

α2

β3

· · ·

αn−2

βn−1

•n−1

αn−1

βn

•n

and deﬁne A = kQ/I, where

I = hα1 · β2, αi · βi+1 − βi · αi−1 | i = 2, . . . , n − 1i

Then

z =

n

X

i=2

βi · αi−1

*
*
j
j
+
+
j
j
,
,
k
k
+
+
l
l
16

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

is central in A. We have

J := hI, zi = hαi · βi+1, βi+1 · αi | i = 1, . . . , n − 1i

So by Theorem 4.1 the poset of 2-term silting complexes over A is isomorphic to the poset of
2-term silting complexes over kQ/J, which is a string algebra.

In the same vein, the algebra

B := kQ/hI, βn · αn−1i

also has kQ/J as a central quotient, because z obviously remains central modulo βn · αn−1.
This shows that A, which is the Auslander algebra of k[x]/(xn), and B, which is the preprojective
algebra of type An, have isomorphic posets of 2-term silting complexes.
In fact, Theorem 4.1
immediately recovers all of [20, Theorem 5.3]. Now by a result of Mizuno [24], the poset of 2-term
silting complexes over B is isomorphic to the group Sn+1 with the generation order as its poset
structure.

One could in principle try to reprove that last assertion using string combinatorics for the algebra
kQ/J, but it is not clear whether this would make matters easier. However, what we can easily
see is that each string for kQ/J is rigid (and strings can easily be counted in this case), and hence
both A and B have exactly 2 · (2n − 1) − n indecomposable τ -rigid modules. Note that for n = 3,
the algebra kQ/J is equal to the algebra R(3C) given in the appendix. R(3C) has, as expected,
24 support τ -tilting modules and 11 indecomposable τ -rigid modules, and all (rigid) strings are
listed in Figure 4.

Remark 5.9. Suppose A = kQ/I is a special biserial algebra and denote by P a full set of non-
isomorphic indecomposable projective-injective non-uniserial A-modules. Then it is well known
(see for example [30]) that the quotient algebra

B = A/ M

P ∈P

soc(P )

is a string algebra. By [1, Theorem B], the support τ -tilting modules of A can be explicitly
computed from those of B, so the techniques in this section can be used for arbitrary special
biserial algebras.

6. Blocks of group algebras

Now we will apply our Theorem 4.1 and the results of the preceding section to blocks of group
algebras. Throughout this section, k is an algebraically closed ﬁeld of characteristic p, and G is a
ﬁnite group. Remember that since (blocks of) kG are symmetric, two-term silting complexes are
in fact tilting.

6.1. τ -tilting ﬁnite blocks. Recall that an algebra is called τ -tilting ﬁnite if there are only ﬁnitely
many isomorphism classes of support τ -tilting modules. The following theorem determines the
representation type of (blocks of) group algebras.

Theorem 6.1. [10, 11, 15] Let B be a block of kG and let P be a defect group of B. The block
algebra B and the group algebra kP have the same representation type. Moreover:

(1) kP is of ﬁnite type if P is cyclic.
(2) kP is of tame type if p = 2 and P is the Klein four-group, or a generalized quaternion,

dihedral or semi-dihedral group.

(3) In all other cases kP is of wild type.

Corollary 6.2. There exist τ -tilting ﬁnite blocks of group algebras of every representation type
and of arbitrary large defect.

Proof. Let G denote a ﬁnite p-group, so kG is local with defect group G. It is easy to see that local
algebras are τ -tilting ﬁnite, and by the previous theorem they can be of arbitrary representation
type.
(cid:3)

17

A more interesting question is whether there exist non-local blocks of group algebras which are
τ -tilting ﬁnite but not representation ﬁnite. Using Theorem 4.1 we can show the following:

Theorem 6.3. There exist non-local τ -tilting ﬁnite wild blocks of group algebras with arbitrary
large defect groups, in the sense that every p-group occurs as a subgroup of the defect group of a
τ -tilting ﬁnite non-local block.

Proof. Assume B is a block of kG, with defect group P . For Q an arbitrary p-group, the algebra
kQ ⊗k B is a block of k(Q × G) with defect group Q × P (see for example [8, Ch. IV, §15, Lemma
6]). Since Q is a p-group, there is a non-trivial element z ∈ Z(Q), and we can form the quotient

kQ ⊗k B/((1 − z) ⊗ 1) ∼= k ¯Q ⊗k B,

with ¯Q = Q/hzi. Since ¯Q is again a p-group and Q is ﬁnite we can keep repeating this until we get
B as a quotient. Now Theorem 4.1 provides a bijection between the support τ -tilting modules for
B and the support τ -tilting modules for kQ⊗k B, so it suﬃces to take for B a block of cyclic defect
or (as we will see below) a tame block, to obtain examples as in the statement of the theorem. (cid:3)

6.2. Tame blocks. In [13], Erdmann determined the basic algebras of all algebras satisfying the
following deﬁnition, which is satisﬁed in particular by all tame blocks of group algebras.

Deﬁnition 6.4. A ﬁnite-dimensional algebra A deﬁned over an algebraically closed ﬁeld k of
arbitrary characteristic is of dihedral, semidihedral or quaternion type if it satisﬁes the following
conditions:

(1) A is tame, symmetric and indecomposable.
(2) The Cartan matrix of A is non-singular.
(3) The stable Auslander-Reiten quiver of A has the following properties:

Tubes:

Dihedral type
rank 1 and 3
at most two 3-tubes at most one 3-tube

Semidihedral type Quaternion type
rank ≤ 3

rank ≤ 2

Others: ZA∞

∞/Π

ZA∞

∞ and ZD∞

The following is clear a priori, even without looking at Erdmann’s classiﬁcation [13] in greater
detail:

Proposition 6.5. A block of a group algebra which is of dihedral, semidihedral or quaternion
type is τ -tilting ﬁnite.

Proof. The class of algebras deﬁned in Deﬁnition 6.4 is clearly closed under derived equivalences
(cf.
[17, Proposition 2.1]), and it follows from [13] that the entries of the Cartan matrices of
algebras in the derived equivalence class of an algebra satisfying Deﬁnition 6.4 are bounded (to
see this one has to use the fact that the dimension of the center is a derived invariant). Now for
a two-term tilting complex T = T1 ⊕ · · · ⊕ Tl (remember that l = |A|), write

Ti : 0 →

l

M

j=1

⊕t−
ij
j →

P

l

M

j=1

⊕t+
ij
j → 0,

P

18

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

and consider B = EndKb(projA)(T ). Denote by CA (respectively CB) the Cartan matrix of A
(respectively B), and denote by χ the Euler form on K0(projA). Then:

(CB)m,n = dimk HomKb(projA)(Tm, Tn)

(−1)i dimk HomKb(projA)(Tm, Tn[i])

i

= X
= χ(Tm, Tn)
= χ(X
(t+

j
(t+

= X

i,j

= X

i,j

mj − t−

mj)[Pj ],X

(t+

nj − t−

nj)[Pj ])

j

mi − t−

mi)χ([Pi], [Pj])(t+

nj − t−
nj)

(t+

mi − t−

mi)(CA)i,j (t+

nj − t−

nj),

where in the second equality we used that the Ti are tilting. Deﬁning M ∈ Ml(Z) by Mij = t+
we obtain

ij −t−
ij,

(6.1)

CB = M CAM t.

In fact, there are only ﬁnitely many such M . To see this suppose that M ′ ∈ Ml(Z) also satisﬁes
CB = M ′CAM ′t. Then

CA = M −1M ′CAM ′t(M −1)t,

which shows that M −1M ′ ∈ O(Zn, CA), the group of orthogonal, integral matrices preserving CA.
Since the Cartan matrix CA is positive deﬁnite by virtue of A being a block, this is a ﬁnite group.

We have shown that for each of the ﬁnitely many Cartan matrices corresponding to algebras derived
equivalent to A, there are only ﬁnitely many matrices M satisfying (6.1). Since the matrix M
above is just the matrix of g-vectors of the Ti, this matrix already determines the tilting complex
T by Theorem 2.12, so we are done.
(cid:3)

Remark 6.6. The proof above works more generally for any symmetric algebra with positive
deﬁnite Cartan matrix and a derived equivalence class in which the entries of the Cartan matrices
are bounded.

It is known that tame blocks of group algebras satisfy Deﬁnition 6.4, and the appendix Erd-
mann [13] furnishes a complete list of basic algebras satisfying said deﬁnition. Later, Holm [16]
showed that non-local tame blocks must actually be of one of the following types:

D(2A), D(2B), D(3A), D(3B)1, D(3K)

Dihedral:
Semidihedral: SD(2A)1,2, SD(2B)1,2, SD(3A)1, SD(3B)1,2, SD(3C), SD(3D), SD(3H)
Quaternion:

Q(2A), Q(2B)1, Q(3A)2, Q(3B), Q(3K)

By Proposition 6.5, tame blocks are always τ -tilting ﬁnite, so it is possible to completely classify
the two-term tilting complexes and their associated Hasse quiver. Using Theorem 4.1 and the
results on string algebras, we are able to achieve this (in fact, for all algebras in Erdmann’s list,
not just blocks). In Appendix A, we provide the presentations of the algebras from the appen-
dix of [13], along with central elements and the quotients one obtains. A direct application of
Theorem 4.1 then reduces the computation of g-vectors and Hasse quivers for all tame blocks to
the same computation for ﬁve explicitly given ﬁnite dimensional algebras (with trivial center):
R(2AB), R(3ABD), R(3C), R(3H) and R(3K) (see Table 2 below), which do not depend on any
extra data. The computation of g-vectors and Hasse quivers for all algebras of dihedral, semidi-
hedral or quaternion type reduces to the same computation for the aforementioned ﬁve algebras,
and in addition the ﬁve algebras W (2B), W (3ABC), W (Q(3A)1), W (3F ) and W (3QLR) (also
given in Table 2).

In particular we obtain the following theorems.

19

Theorem 6.7. The g-vectors and Hasse quivers for tame blocks of group algebras depend only
on the Ext-quiver of their basic algebras.

We also ﬁnd the following more general (but slightly weaker) version of Theorem 6.7.

Theorem 6.8. All algebras of dihedral, semidihedral or quaternion type are τ -tilting ﬁnite and
their g-vectors and Hasse quivers are independent of the characteristic of k and the parameters
involved in the presentations of their basic algebras.

Corollary 6.9. All tilting complexes for algebras of dihedral, semidihedral, or quaternion type
can be obtained from A (as module over itself) by iterated tilting mutation.

Proof. By [17, Proposition 2.1], the class of algebras satisfying Deﬁnition 6.4 is closed under derived
equivalence, so the result follows immediately from Proposition 2.10 and Theorem 2.11.
(cid:3)

Since R(2AB), R(3ABD), R(3C), R(3H), R(3K), W (2B), W (3ABC), W (Q(3A)1), W (3F ) and
W (3QLR) are all string algebras one can go further and actually compute (using the results in
Section 5) the g-vectors and Hasse quivers of all algebras of dihedral, semidihedral and quaternion
type. For details we refer to Appendix A below.

Appendix A. Results for algebras of dihedral, semidihedral and quaternion type

In this appendix, we use Theorem 4.1 and the results in Section 5 to give a complete description
of the g-vectors and Hasse quivers of all algebras in Erdmann’s list (see Deﬁnition 6.4). These
include all the basic algebras of tame blocks of group algebras.

In the ﬁrst three columns of Table 1, we give the presentations of these basic algebras, along with
their names and parameters. The fourth column describes central elements: note that a horizontal
bar above an element means that this element only becomes central in the quotient of the algebra
by the central elements above the bar. Taking these successive quotients we obtain the ﬁnite
dimensional algebras listed in the ﬁfth column, whose presentation can be found in Table 2. Since
these algebras were obtained from the original algebras by taking successive central quotients,
Theorem 4.1 ensures that the g-vectors and Hasse quiver of the original algebras coincide with the
ones of the algebra speciﬁed in the ﬁfth column. Using the presentations in Table 2 one checks
easily that these are all string algebras. Hence we can use the results of Section 5 to determine all
of their support τ -tilting modules using string combinatorics, see Figures 1 - 10. We did the string
combinatorics using GAP [14], and checked the results against computations done over k = F2
using the GAP-package QPA [27], but it is possible to check the correctness of the results by hand.

As for the notation used in Figures 1 - 10: we ﬁrst give a list of all rigid strings C. The notation
used for strings should be more or less self-explanatory: for instance,

β

←− 0

αβ
−→ 1

1

denotes the string β−1αβ. We give a name to each such string (listed in the ﬁrst column), which
is essentially arbitrary (apart from the fact that we use the name X ∨ for a string whose g-vector
is equal to the g-vector of X multiplied by −1). For each rigid string C we give P CP and its
g-vector, as well as the names of all other rigid strings which are C-rigid. Among these, we
highlight those D for which C is D-rigid. When P ∨
i ﬁgures among the C-rigid strings, it simply
means that the corresponding vertex ei is not in the support of C. Below each such table we
give the corresponding Hasse quiver, with vertices corresponding to the support τ -tilting modules.
We did not draw arrowheads, but the quiver was drawn in such a way that arrows always point
downwards.

Quiver

Name & parameters

Relations

Successive central elements Quotient

α

•0

β

γ

•1

D(2A)

k ≥ 1, c = 0 or 1

Q(2A)

k ≥ 2, c ∈ K

SD(2A)1

k ≥ 2, c ∈ K

SD(2A)2

k ≥ 2, c ∈ K

α

•0

β

γ

•1

η

D(2B)

k ≥ 1, s ≥ 1, c = 0 or 1

Q(2B)1

k ≥ 2, s ≥ 3, c ∈ K

γβ = 0

α2 = c(αβγ)k

(αβγ)k = (βγα)k

βγβ = (αβγ)k−1αβ

γβγ = (γαβ)k−1γα

α2 = (βγα)k−1βγ + c(βγα)k

α2β = 0

α2 = c(αβγ)k

βγβ = (αβγ)k−1αβ

γβγ = (γαβ)k−1γα

(αβγ)k α = 0

α2 = (βγα)k−1βγ + c(αβγ)k

γβ = 0

(αβγ)k = (βγα)k

βη = 0 = ηγ = γβ

α2 = c(αβγ)k

(αβγ)k = (βγα)k

(γαβ)k = ηs

γβ = ηs−1

βη = (αβγ)k−1αβ

ηγ = (γαβ)k−1γα

βη = (αβγ)k−1αβ

Table 1: Algebras from Erdmann’s list together with central quotients

α2 = (βγα)k−1βγ + c(βγα)kα2β = 0

(βγα)k−1βγ

αβγ + γαβ + βγα

R(2AB)

βγ

α2

αβγ + βγα + γαβ

γβ + (αβγ)k−1α

R(2AB)

βγ

α2

αβγ + βγα + γαβ

γβ + (αβγ)k−1α

βγ

(βγα)k−1βγ

R(2AB)

αβγ + γαβ + βγα

R(2AB)

βγ

η

(βγα)k−1βγ

αβγ + γαβ + βγα

βγ

(βγα)k−1βγ

(αβγ)k−1α + η

αβγ + γαβ + βγα

βγ

R(2AB)

R(2AB)

2
0

I

F
L
O
R
A
N
E
I
S
E
L
E

,

G
E
O
F
F
R
E
Y
J
A
N
S
S
E
N
S
,

A
N
D
T
H
E
O
R
A
E
D
S
C
H
E
L
D
E
R
S

9
9
)
)
i
i
9
9
)
)
i
i
e
e
Quiver

Name & parameters

Relations

Successive central elements Quotient

SD(2B)1

k ≥ 1, t ≥ 2, c ∈ K

SD(2B)2

k ≥ 1, t ≥ 3, c ∈ K

SD(2B)s

4(c)

s ≥ 2, c ∈ K

γβ = 0 = ηγ = βη

α2 = (βγα)k−1βγ + c(βγα)k

ηt = (γαβ)k

(αβγ)k = (βγα)k

βη = (αβγ)k−1αβ

ηγ = (γαβ)k−1γα

γβ = ηt−1

α2 = c(αβγ)k

βη2 = 0 = η2γ

βγ = α2, αβ = βη, ηγ = γα

γβ = η2(1 + cηs+1), αsβ = 0

γαs = 0 = ηsγ, αs+2 = 0 = ηs+2

βηs = 0

αβ = βη, ηγ = γη

Q(2B)2

βγ = α2p(α), γβ = η2p(η) + aηs−1 + cηs

s ≥ 4, a 6= 0, p(t) ∈ K[t], p(0) = 1

Q(2B)3

t ≥ 3, a, c, d ∈ K, a 6= 0

αs+1 = 0 = ηs+1

γαs−1 = 0 = αs−1β

αβ = βη, ηγ = γη

βγ = α2 + cα3, γβ = aηt−1 + dηt

α4 = 0 = ηt+1 = γα2 = α2β

η

(βγα)k−1βγ

αβγ + γαβ + βγα

βγ

(βγα)k−1βγ

(αβγ)k−1α + η

αβγ + γαβ + βγα

βγ

βγ + γβ

α + η

βγ + γβ

α + η

βγ + γβ

α + η

R(2AB)

R(2AB)

W (2B)

W (2B)

W (2B)

•1

β

γ

•0

δ

η

•2

D(3A)1

k ≥ 1

βγ = 0 = ηδ

(γβδη)k = (δηγβ)k

γβδη + βδηγ + δηγβ + ηγβδ

γβδη

R(3ABD)

Table 1: Algebras from Erdmann’s list together with central quotients

2
1

i
i
)
)
)
)
i
i
Quiver

Name & parameters

Relations

Successive central elements Quotient

Q(3A)2

k ≥ 2

SD(3A)1

k ≥ 1

D(3A)2

l, k ≥ 2

Q(3A)1

a ≥ b ≥ 2, 0 6= d ∈ K

SD(3A)2

k ≥ 2

D(3B)1

k ≥ 1, s ≥ 2

βγβ = (βδηγ)k−1βδη

γβγ = (δηγβ)k−1δηγ

ηδη = (ηγβδ)k−1ηγβ

δηδ = (γβδη)k−1γβδ

βγβδ = 0 = ηδηγ

βγ = 0

δηδ = (γβδη)k−1γβδ

ηδη = (ηγβδ)k−1ηγβ

βδ = 0 = ηγ

(γβ)k = (δη)l

βδη = (βγ)a−1β

δηγ = (γβ)a−1γ

ηγβ = d(ηδ)b−1η

γβδ = d(δη)b−1δ

βδηδ = 0 = ηγβγ

γβ = δη

(βγ)k−1βδ = 0 = (ηδ)k−1ηγ

αβ = 0 = γα

βγ = 0 = ηδ

(γβδη)k = (δηγβ)k

αs = (βδηγ)k

γβδη + βδηγ + δηγβ + ηγβδ

γβδη

βγ

ηδ

R(3ABD)

γβδη + βδηγ + δηγβ + ηγβδ

R(3ABD)

γβδηηδ

γβ + βγ

δη + ηδ

W (3ABCD)

δη + ηδ + (βγ)a−1

γβ + βγ + (δη)b−1

W (Q(3A)1)

βγ + γβ + ηδ

R(3C)

α

γβδη + βδηγ + δηγβ + ηγβδ

R(3ABD)

γβδη

Table 1: Algebras from Erdmann’s list together with central quotients

α

•1

β

γ

•0

δ

η

•2

2
2

I

F
L
O
R
A
N
E
I
S
E
L
E

,

G
E
O
F
F
R
E
Y
J
A
N
S
S
E
N
S
,

A
N
D
T
H
E
O
R
A
E
D
S
C
H
E
L
D
E
R
S

i
i
)
)
)
)
i
i
%
%
Quiver

Name & parameters

Q(3B)

k ≥ 1, s ≥ 3

SD(3B)1

k ≥ 1, s ≥ 2

SD(3B)2

k ≥ 1, s ≥ 3

D(3B)2

k ≥ 1, s ≥ 3

α

•1

β

γ

•0

δ

η

•2

ζ

SD(3D)

k ≥ 1, s ≥ 3, t ≥ 2

Relations

βγ = αs−1

αβ = (βδηγ)k−1βδη

γα = (δηγβ)k−1δηγ

ηδη = (ηγβδ)k−1ηγβ

δηδ = (γβδη)k−1γβδ

α2β = 0 = βδηδ

αβ = 0 = γα = βγ

αs = (βδηγ)k

ηδη = (ηγβδ)k−1ηγβ

δηδ = (γβδη)k−1γβδ

ηδ = 0

βγ = αs−1

γα = (δηγβ)k−1δηγ

αβ = (βδηγ)k−1βδη

γα = 0 = αβ

βδ = 0 = ηγ

(γβ)k = (δη)l

(βγ)k = αs

ηδ = 0 = δζ = ζη

βγ = αs−1

γα = (δηγβ)k−1δηγ

αβ = (βδηγ)k−1βδη

ζ t = (ηγβδ)k

Successive central elements Quotient

α + (δηγβ)k−1 δη

γβδη + βδηγ + δηγβ + ηγβδ

R(3ABD)

γβδη

ηδ

α

γβδη + βδηγ + δηγβ + ηγβδ

R(3ABD)

γβδη

ηδ

α + (δηγβ)k−1 δη

γβδη + βδηγ + δηγβ + ηγβδ

R(3ABD)

γβδη

α

βγ + γβ

δη + ηδ

W (3ABCD)

α + (δηγβ)k−1 δη

γβδη + βδηγ + δηγβ + ηγβδ

R(3ABD)

ζ

γβδη

Table 1: Algebras from Erdmann’s list together with central quotients

2
3

i
i
)
)
)
)
i
i
%
%
y
y
Quiver

Name & parameters

Relations

Successive central elements Quotient

D(3D)1

s, t ≥ 2, k ≥ 1

D(3D)2

s, t ≥ 2, k, l ≥ 1

Q(3D)

s, t ≥ 3, k ≥ 1

SD(3C)2,I/II

k ≥ 2, s ≥ 2

SD(3C)1

s ≥ 3

βγ = 0 = ηδ, αβ = 0 = γα

δζ = 0 = ζη

αs = (βδηγ)k

ζ t = (ηγβδ)k

(γβδη)k = (δηγβ)k

γα = 0 = αβ, βδ = 0 = ηγ

δζ = 0 = ζη

(βγ)k = αs, (ηδ)l = ζ t

(γβ)k = (δη)l

βγ = αs−1

γα = (δηγβ)k−1δηγ

αβ = (βδηγ)k−1βδη

ηδ = ζ t−1

δζ = (γβδη)k−1γβδ

ζη = (ηγβδ)k−1ηγβ

α2β = 0 = δηδ

βρ = 0 = ρδ

ηρ = 0 = ργ

γβ = δη

(βγ)k = ρs

(βγ)k−1βδ = 0 = (ηδ)k−1ηγ

βδ = 0 = βρ = ργ

ηγ = 0 = ηρ = ρδ

ρs = γβ = δη

βγβ = 0 = ηδη

α

ζ

R(3ABD)

βδγη + δηγβ + ηγβδ + γβδη

δηγβ

α

ζ

βγ + γβ

ηδ + δη

βγ

ηδ

W (3ABCD)

βδηγ + δηγβ + ηγβδ + γβδη

R(3ABD)

α

ζ

δηγβ

ρ

γβ + βγ + ηδ

R(3C)

ρ

γβ + βγ

ηδ

W (3ABCD)

Table 1: Algebras from Erdmann’s list together with central quotients

•1

β

γ

δ

η

•2

•0

ρ

2
4

I

F
L
O
R
A
N
E
I
S
E
L
E

,

G
E
O
F
F
R
E
Y
J
A
N
S
S
E
N
S
,

A
N
D
T
H
E
O
R
A
E
D
S
C
H
E
L
D
E
R
S

i
i
)
)
)
)
i
i
Z
Z
Quiver

Name & parameters

Relations

Successive central elements Quotient

•0

•0

λ

λ

η

β

γ

•2

β

γ

κ

η

•2

•1

•1

δ

δ

Q(3C)

k ≥ 2, s ≥ 3

SD(3H)

k ≥ 2, s ≥ 2

D(3K)

a ≥ b ≥ c ≥ 1

Q(3K)

a ≥ b ≥ c ≥ 2

βρ = 0 = ργ

ηρ2 = 0 = ρ2δ

δη − γβ = ρs−1

ηρ = (ηδ)k−1η

ρδ = (δη)k−1δ

(βγ)k−1βδ = 0 = (ηδ)k−1ηγ

δλ = (γβ)k−1γ

λβ = (ηδ)s−1η

βδη = γβδ = 0

ηγ = 0

βδ = δλ = λβ = 0

γκ = κη = ηγ = 0

(βγ)a = (κλ)b

(λκ)b = (ηδ)c

(δη)c = (γβ)a

βδ = (κλ)a−1κ

ηγ = (λκ)a−1λ

δλ = (γβ)b−1γ

κη = (βγ)b−1β

λβ = (ηδ)c−1η

γκ = (δη)c−1δ

γβδ = 0 = δηγ = λκη

γβ + δη

βγ + δη + ηδ

ρ

βγ + γβ

ηδ + δη

βγ + γβ

λκ + κλ

δη + ηδ

βγ + γβ

λκ + κλ

δη + ηδ

R(3C)

R(3H)

R(3K)

R(3K)

Table 1: Algebras from Erdmann’s list together with central quotients

2
5

k
k
+
+
|
|
<
<
U
U
k
k
+
+
|
|
<
<
U
U


Quiver

Name & parameters

Relations

Successive central elements Quotient

SD(3K)

a ≥ b ≥ c ≥ 2

SD(3F )

k ≥ 2

•1

η

δ

δ

•1

ρ

D(3Q)

s, t ≥ 2, k ≥ 1

β

•2

β

•0

α

•0

λ

λ

•2

β

α

•0

•1

D(3L)

k, s ≥ 2

λ

δ

•2

κη = ηγ = γκ = 0

δλ = (γβ)k−1γ

βδ = (κλ)b−1κ

λβ = (ηδ)c−1η

λβ = (ηδ)k−1η

βδη = 0 = ηδλ

δλβδ = 0

λα = 0 = αβ

βρ = 0 = ρδ

(βδλ)k = αs

(δλβ)k = ρt

αβ = 0 = λα

(βδλ)k = αs

(δλβ)k δ = 0

βγ + γβ

δη + ηδ

κλ + λκ

βδλ + δβλ + λβδ

δη + ηδ

βδλ + δλβ + λβδ

R(3K)

W (3F )

α

ρ

βδλ + δλβ + λβδ

W (3QLR)

α

βδλ + δλβ + λβδ

W (3QLR)

Table 1: Algebras from Erdmann’s list together with central quotients

2
6

I

F
L
O
R
A
N
E
I
S
E
L
E

,

G
E
O
F
F
R
E
Y
J
A
N
S
S
E
N
S
,

A
N
D
T
H
E
O
R
A
E
D
S
C
H
E
L
D
E
R
S

+
+
|
|
<
<
U
U
9
9
+
+
|
|
U
U
e
e
9
9
+
+
|
|
U
U
Quiver

Name & parameters

Relations

Successive central elements Quotient

α

•0

•1

ρ

β

D(3R)

s, t, u ≥ 2

λ

δ

αβ = 0 = βρ = ρδ

δζ = 0 = ζλ = λα

αs = (βδλ)k

ρt = (δλβ)k

ζ u = (λβδ)k

α

ρ

ζ

βδλ + δλβ + λβδ

W (3QLR)

•2

ζ

•1

•1

Table 1: Algebras from Erdmann’s list together with central quotients

Quiver

Name

Relations

# of support τ -tilting modules Figure

α

•0

β

γ

•1

R(2AB)

βγ = 0 = γβ

α2 = 0

γαβ = 0

β

γ

•0

•0

•0

β

γ

β

γ

•1

W (2B)

βγ = 0 = γβ

δ

η

δ

η

•2

R(3ABD)

•2

R(3C)

βγ = 0 = ηδ

βδηγ = 0 = ηγβδ

γβδη = 0 = δηγβ

βγ = 0 = γβ

ηδ = 0 = δη

8

6

32

24

Fig. 1

Fig. 2

Fig. 3

Fig. 4

Table 2: Description of the quotient algebras

2
7

9
9
+
+
|
|
U
U
e
e
Z
Z
7
7
)
)
i
i
)
)
i
i
i
i
)
)
)
)
i
i
i
i
)
)
)
)
i
i
Quiver

Name

Relations

# of support τ -tilting modules Figure

λ

λ

•0

•0

•1

•1

β

γ

η

•2

β

γ

κ

η

δ

δ

•2

•0

•0

β

γ

β

γ

δ

η

δ

η

•1

R(3H)

•1

R(3K)

•2

W (3ABCD)

•2

W (Q(3A)1)

δλ = 0 = λβ

ηδ = 0 = δη

βγ = 0 = γβ

ηγ = 0

βδ = δλ = λβ = 0

γκ = κη = ηγ = 0

βγ = 0 = γβ

λκ = 0 = κλ

δη = 0 = ηδ

βγ = 0 = γβ

δη = 0 = ηδ

βδ = 0 = ηγ

βγ = 0 = γβ

δη = 0 = ηδ

βδη = 0 = δηγ

γβδ = 0 = ηγβ

Table 2: Description of the quotient algebras

28

Fig. 5

32

20

24

Fig. 6

Fig. 7

Fig. 8

2
8

I

F
L
O
R
A
N
E
I
S
E
L
E

,

G
E
O
F
F
R
E
Y
J
A
N
S
S
E
N
S
,

A
N
D
T
H
E
O
R
A
E
D
S
C
H
E
L
D
E
R
S

k
k
+
+
|
|
<
<
U
U
k
k
+
+
|
|
<
<
U
U


i
i
)
)
)
)
i
i
i
i
)
)
)
)
i
i
Quiver

Name

Relations

# of support τ -tilting modules Figure

•1

W (3F )

δη = 0 = ηδ

λβ = 0

βδλ = 0 = δλβ = λβδ

•1

W (3QLR)

βδλ = 0 = δλβ = λβδ

•0

•0

λ

λ

β

η

•2
β

•2

δ

δ

Table 2: Description of the quotient algebras

24

20

Fig. 9

Fig. 10

2
9

+
+
|
|
<
<
U
U
+
+
|
|
U
U
30

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

R(2AB) Rigid string C

P CP

g-vector Other C-rigid strings

1

1

P0

P1

X

X∨

Y

Y∨

αβ
−→ 1

β

←− 0
γα
−→ 0

1

0
γ

α

−→ 0
γα
←− 1

−→ 0
αβ
−→ 1

0

1

1

0

1

β

←− 0

γ

−→ 0
β

0

−→ 1

1

γ

−→ 0

1

αβ
−→ 1
γα
←− 1

[1, 0]

[0, 1]

[1, −2]

[−1, 2]

[1, −1]

[−1, 1]

P1, X, X ∨, Y, Y ∨

P0, X, X∨, Y , Y ∨

P∨

1 , Y
P1, Y∨

P0, X
0 , X∨

P∨

Hasse Quiver:

P0 ⊕ P1

⑧⑧⑧⑧⑧⑧⑧⑧

❄❄❄❄❄❄❄❄❄

X ∨ ⊕ P1

P0 ⊕ Y

X ∨ ⊕ Y ∨

X ⊕ Y

Y ∨

X

❄❄❄❄❄❄❄❄❄

⑧⑧⑧⑧⑧⑧⑧⑧⑧

0

Figure 1. R(2AB)

W(2B) Rigid string C

P0

P1

Y

Y∨

β

−→ 1

γ

−→ 0

0

1

0

1

P CP

0

1
β

−→ 1

γ

−→ 0

0

1

g-vector Other C-rigid strings

[1, 0]

[0, 1]

[1, −1]

[−1, 1]

P1, Y, Y ∨
P0, Y , Y∨

P∨

1 , P0

P∨

0 , P1

Hasse Quiver:

P0 ⊕ P1

Y ∨ ⊕ P1

P0 ⊕ Y

⑧⑧⑧⑧⑧⑧⑧⑧

❄❄❄❄❄❄❄❄❄

Y ∨

Y

❄❄❄❄❄❄❄❄❄

⑧⑧⑧⑧⑧⑧⑧⑧⑧

0

Figure 2. W (2B)

R(3ABD) Rigid string C

P CP

g-vector

Other C-rigid strings

31

P0

P1

P2

X

X∨

M2

M∨
2

M1

M∨
1

M0

M∨
0

T1

T∨
1

T2

T∨
2

δηγ
←− 0

γβδ
−→ 2

1

βδη
−→ 0
ηγβ
−→ 0

1

2

0

β

−→ 0

1

η

←− 2

δηγ
−→ 1

0

1

γβδ
−→ 2

0

2
β

−→ 0

η

−→ 0
γβ
−→ 0

1

2

0
η

0
β

ηγβ
←− 2

−→ 0
δη
−→ 0

−→ 0

βδη
←− 1

2

1

2

1

2

2

1

1

0

1

2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

δ

←− 0

γ

−→ 1

[1, −1, −1]

η

←− 2

β

−→ 0
γ

0

−→ 1

β

−→ 0

δ

−→ 2

η

−→ 0
βδ
−→ 2
ηγ
−→ 1

1

0

2

1

2
δ

←− 0

η

−→ 0

γ

←− 0

β

−→ 0

γβδ
−→ 2
ηγβ
←− 2
δηγ
−→ 1
βδη
←− 1

[−1, 1, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

[1, 0, −2]

[−1, 0, 2]

[1, −2, 0]

[−1, 2, 0]

Hasse Quiver:

P1, P2, X, X ∨, M2, M ∨

P0, P2, X, X∨, M2, M ∨

P0, P1, X, X∨, M2, M ∨

0 , T1, T ∨
0 , T1, T ∨
0 , T1, T∨

1 , T2, T ∨
2
1 , T2, T∨
1 , T2, T ∨
2

2

1 , M0, M ∨
2 , M1, M ∨
1 , M0, M ∨
2 , M1, M ∨
1 , M0, M∨
2 , M1, M ∨
2 , M2, M1, T1, T2
2 , M∨
0 , T∨
0 , T1, T ∨

1 , M0, M ∨

1 , M∨

1 , T∨

2

1 , T2

P∨

1 , P∨
P1, P2, M∨

P0, P2, X, M1, M ∨

P∨

0 , P∨

2 , X∨, M∨

1 , M0, T∨

2

P0, P1, X, M2, M ∨

2 , M0, T1, T2, T ∨
2

P∨

0 , P∨

1 , X∨, M∨

2 , M∨

0 , T∨

1

P∨

2 , P1, X, M∨
1 , P2, X, M2, M∨

P∨

2 , M1, T1, T∨

2

1 , T∨

1 , T2

P∨

2 , X, M ∨
P2, X∨, M ∨

2 , M1, M0
2 , M∨
1 , M∨
1 , X, M2, M ∨
1 , M∨

P∨

0

0

P1, X∨, M∨

2 , M ∨

1 , M0

M2 ⊕ M0

∨ ⊕ T2

1 ⊕ X ∨ ⊕ M ∨
T ∨

1 M2 ⊕ X ⊕ M1 M ∨

2 ⊕ X ∨ ⊕ T ∨
2

T1 ⊕ M0 ⊕ M1

T ∨
1 ⊕ M0

∨ ⊕ M1

M2 ⊕ X ⊕ T2

M2

∨ ⊕ X ∨ ⊕ M1

∨

T1 ⊕ X ⊕ M1

∨ ⊕ M0 ⊕ T ∨
2

❄❄❄❄❄❄❄❄

P1 ⊕ M0 ⊕ M1

⑧⑧⑧⑧⑧⑧⑧⑧

P1 ⊕ M0 ⊕ T ∨
2

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

⑧⑧⑧⑧⑧⑧⑧⑧

❄❄❄❄❄❄❄❄

2 ⊕ M0

T1 ⊕ M0

M ∨

M2

∨ ⊕ P2

∨ ⊕ P2

M2 ⊕ M0

T ∨
1 ⊕ M0

⑧⑧⑧⑧⑧⑧⑧

❄❄❄❄❄❄❄❄

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

❄❄❄❄❄❄❄❄

⑧⑧⑧⑧⑧⑧⑧⑧

∨ ⊕ M1

∨ ⊕ T2

M0

M0

∨

∨

M2 ⊕ P0 ⊕ P2

P1 ⊕ X ∨ ⊕ P2

P1 ⊕ P0 ⊕ M1

P1 ⊕ P0 ⊕ P2

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

T ∨
1 ⊕ X ∨ ⊕ P2 M2 ⊕ P0 ⊕ M1

P1 ⊕ X ∨ ⊕ T ∨
2

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

X ⊕ T2

M ∨

2 ⊕ M1

∨

T1 ⊕ X

M ∨
1

M ∨
2

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

X

0

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

Figure 3. R(3ABD)

32

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

R(3C) Rigid string C

P CP

g-vector

Other C-rigid strings

1

1

P0

P1

P2

X

X∨

M2

M∨
2

M1

M∨
1

M0

M∨
0

δ

−→ 2

γ

←− 0
βδ
−→ 2
ηγ
−→ 1

2

1

0

η

←− 2

2

1

β

−→ 0
δ

0

−→ 2

0

1

2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

δ

←− 0

γ

−→ 1

[1, −1, −1]

η

←− 2

β

−→ 0
γ

0

−→ 1

1
γ

−→ 1

2
β

−→ 0

η

−→ 0

0

1

2

β

−→ 0

δ

−→ 2

η

−→ 0
βδ
−→ 2
ηγ
−→ 1

1

0

2

1

2

[−1, 1, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

Hasse Quiver:

P0 ⊕ P1 ⊕ P2

P1, P2, X, X ∨, M2, M ∨

P0, P2, X, X∨, M2, M∨
P0, P1, X, X∨, M2, M ∨

2 , M1, M ∨
2 , M1, M ∨
2 , M1, M∨

1 , M0, M ∨
0
1 , M0, M ∨
0
1 , M0, M∨

0

P∨

1 , P∨

2 , M2, M1

P1, P2, M∨

2 , M∨

1 , M0, M ∨
0

P∨

1 , P0, P2, X, M1, M ∨
P∨

2 , P1, X∨, M∨

1 , M∨
1 , M0

0 , P∨

0

P∨

2 , P0, P1, X, M2, M ∨
P∨

1 , P2, X∨, M∨

0 , P∨

2 , M∨

0

2 , M0

P∨

2 , P1, X, M∨
2 , M1
1 , P2, X, M2, M∨

1

P∨

M2 ⊕ P0 ⊕ P2

P1 ⊕ X ∨ ⊕ P2

P1 ⊕ P0 ⊕ M1

M2 ⊕ M ∨
0

M0 ⊕ M1

M2 ⊕ M ∨

0 ⊕ P2 M ∨

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎
❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

1 ⊕ M ∨

1 ⊕ M ∨
0

0 ⊕ P2

M ∨

M ∨

1 ⊕ X ∨ ⊕ P2

M2 ⊕ P0 ⊕ M1

P1 ⊕ X ∨ ⊕ M ∨
2

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹
✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

M ∨

M ∨

X

0

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡✡
✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹✹
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

M2 ⊕ X ⊕ M1

1 ⊕ X ∨ ⊕ M ∨
2

Figure 4. R(3C)

M ∨
1

M ∨
2

M2 ⊕ X

1 ⊕ M ∨
2

X ⊕ M1

P1 ⊕ M0 ⊕ M1

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴
✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎
✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴
♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

P1 ⊕ M0 ⊕ M ∨
2

M0 ⊕ M ∨
2

R(3H)

Rigid string C

P CP

g-vector

Other C-rigid strings

33

P0

P1

P2

X∨

M2

M∨
2

M1

M∨
1

M0

M∨
0

Y

Y∨

Z∨

βδ
−→ 2
δ

0
γ

←− 1

−→ 2

λ

←− 2

η

−→ 1

0

0

0

1

2

η

←− 2

λ

−→ 0

1

γ

←− 1

δ

−→ 2

2

0
δ

−→ 2

β

−→ 1

η

−→ 1

γ

−→ 0

λ

−→ 0

1

0

2

1

2

β

−→ 1

0

η

←− 2

λ

−→ 0

1

2

0

2

1

γ

←− 1

λ

−→ 0
β

0

−→ 1

γ

−→ 0
βδ
−→ 2

λ

−→ 0

δ

−→ 2

1

0

2

1

η

2
β

−→ 1
η

−→ 1

←− 2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

[−1, 1, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

[1, −1, 1]

δ

←− 1

γ

−→ 0

η

←− 2

λ

−→ 0

[−1, 1, −1]

[−1, −1, 1]

Hasse Quiver:

P1, P2, X ∨, M2, M ∨

P0, P2, X∨, M2, M∨
P0, P1, X∨, M2, M ∨
P1, P2, M∨

2 , M1, M ∨
2 , M1, M ∨
2 , M1, M∨
2 , M∨

1 , M0, M ∨
1 , M0, M ∨
1 , M0, M∨

0 , Y, Y ∨, Z∨
0 , Y , Y ∨, Z∨
0 , Y, Y ∨, Z∨

1 , M0, M ∨

0 , Y ∨, Z∨

P∨

2 , P0, M1, M∨

1 , P∨
0 , P1, X∨, M∨

0 , Y, Z∨
1 , M0, Y∨, Z∨

P∨

P∨

2 , P0, M2, M0, Y ∨

P∨

P∨

0 , P2, X∨, M∨
2 , M∨
2 , P0, P1, M2, M∨
1 , P2, M2, M∨
P0, P2, M2, M1, M ∨

0 , Y ∨, Z∨
2 , M1, Y∨
1 , Y, Z∨
1 , M∨

0 , Z∨

P∨

P∨

0 , P∨
0 , P∨

2 , M∨
1 , M∨

2 , M0
1 , M∨

0

P∨

❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩❩

X ∨ ⊕ P1 ⊕ P2

X ∨ ⊕ P1 ⊕ M ∨
2

♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

2 ⊕ P1 ⊕ M0

1 ⊕ P2

❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨

❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱
❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤
❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡

❖❖❖❖❖❖❖❖❖❖❖❖

X ∨ ⊕ M ∨

1 ⊕ M ∨
2

M ∨

0 ⊕ M ∨

1 ⊕ Z ∨

P0 ⊕ Y ⊕ P2

P0 ⊕ Y ⊕ M2

M ∨

0 ⊕ Y ⊕ M2

M ∨

2 ⊕ Y ∨ ⊕ M0

P0 ⊕ P1 ⊕ P2

M ∨

M ∨

M ∨

0 ⊕ M ∨

X ∨ ⊕ M ∨

0 ⊕ Y ⊕ P2

P0 ⊕ P1 ⊕ M0

P0 ⊕ M1 ⊕ M2

P0 ⊕ M1 ⊕ M0

❖❖❖❖❖❖❖❖❖❖❖❖

♦♦♦♦♦♦♦♦♦♦♦♦

❖❖❖❖❖❖❖❖❖❖❖❖❖

♦♦♦♦♦♦♦♦♦♦♦♦♦

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡

❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤❤
tttttttttttttttttttttttttt

❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊❊
♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖✖
✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭✭
❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②②
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱❱

❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨

ttttttttttttttttttttttttt

❖❖❖❖❖❖❖❖❖❖❖❖❖

♦♦♦♦♦♦♦♦♦♦♦♦

♦♦♦♦♦♦♦♦♦♦♦♦

1 ⊕ M ∨
2

M ∨

1 ⊕ Z ∨

M ∨

2 ⊕ Y ∨

M1 ⊕ M0

M1 ⊕ M2

1 ⊕ P2

M ∨

M2

Y ∨ ⊕ M0

Y ∨

M ∨

0 ⊕ M2

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖

M ∨

0 ⊕ Z ∨

Z ∨

❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞❞

0

Figure 5. R(3H)

34

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

R(3K)

Rigid string C

P CP

g-vector

Other C-rigid strings

P0

P1

P2

X

X∨

M2

M∨
2

M1

M∨
1

M0

M∨
0

Y

Y∨

Z

Z∨

β

←− 0

κ

−→ 2

γ

←− 1

δ

−→ 2

λ

←− 2

η

−→ 1

1

0

0

0

1

2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

0

β

←− 0

1

κ

−→ 2 [1, −1, −1]

η

←− 2

1

λ

←− 2

0

γ

←− 1

δ

−→ 2 2

λ

−→ 0
κ

0

−→ 2

γ

←− 1

λ

−→ 0
β

0

−→ 1

δ

−→ 2

β

−→ 1

η

−→ 1

γ

−→ 0

1

0

2

1

γ

−→ 0

κ

−→ 2

λ

−→ 0

δ

−→ 2

1

0

2

1

λ

−→ 0
β

2
η

−→ 1

←− 0

κ

−→ 2 2

η

2
η

−→ 1
β

−→ 1

←− 0

[−1, 1, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

[1, −1, 1]

1

δ

←− 1

2

γ

−→ 0 [−1, 1, −1]

γ

←− 1

0

δ

−→ 2

κ

←− 0

β

−→ 1 1

δ

−→ 2

κ

←− 0

[1, 1, −1]

2

η

←− 2

1

λ

−→ 0 [−1, −1, 1]

Hasse Quiver:

P1, P2, X, X ∨, M2, M ∨

P0, P2, X, X∨, M2, M∨
P0, P1, X, X∨, M2, M ∨

1 , M0, M ∨
1 , M0, M ∨
1 , M0, M∨

0 , Y, Y ∨, Z, Z∨
0 , Y , Y ∨, Z, Z∨
0 , Y, Y ∨, Z, Z∨

2 , M1, M ∨
2 , M1, M ∨
2 , M1, M∨
1 , P∨
2 , M∨

2 , M2, M1
1 , M0, M ∨

P∨

P1, P2, M∨

0 , Y ∨, Z∨

P∨

1 , P0, X, M1, M∨

0 , Y, Z∨

P∨

0 , P1, X∨, M∨

1 , M0, Y∨, Z∨

P∨

2 , P0, X, M2, M0, Y ∨, Z

0 , Y ∨, Z∨

P∨

0 , P2, X∨, M∨
P∨
2 , P1, X, M∨
1 , P2, X, M2, M∨
P0, P2, X, M2, M1, M ∨

2 , M∨
2 , M1, Y∨, Z
1 , Y, Z∨
1 , M∨

P∨

0 , Z∨

P∨

0 , P∨

2 , M∨

2 , M0

P0, P1, X, M2, M ∨
1 , M∨

2 , M1, M0, Y ∨
1 , M∨

0 , P∨

P∨

0

M ∨

0 ⊕ M ∨

1 ⊕ P2

M ∨

1 ⊕ M ∨
2

ttttttttttttttttttttttttt
tttttttttttttttttttttttt

X ∨ ⊕ M ∨

1 ⊕ P2

X ∨ ⊕ P1 ⊕ M ∨
2

1 ⊕ M ∨
2

X ∨ ⊕ M ∨

❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣
tttttttttttttttttttttttt
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
tttttttttttttttttttttttt
❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

0 ⊕ M ∨

1 ⊕ Z ∨

M ∨

M ∨

1 ⊕ Z ∨

M ∨

0 ⊕ Z ∨

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

P0 ⊕ Y ⊕ M2 M0 ⊕ P1 ⊕ Z

P0 ⊕ M1 ⊕ Z

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

M0 ⊕ M1 ⊕ Z

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
ttttttttttttttttttttttttt
❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣
ttttttttttttttttttttttttt

X ⊕ M1 ⊕ M2

X ⊕ M2

X ⊕ M1

ttttttttttttttttttttttttt
tttttttttttttttttttttttttt

P0 ⊕ M1 ⊕ M2

M0 ⊕ M1

X ∨ ⊕ P1 ⊕ P2

P0 ⊕ Y ⊕ P2

P0 ⊕ P1 ⊕ Z

P0 ⊕ P1 ⊕ P2

ttttttttttttttttttttttttt
✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

0 ⊕ Y ⊕ P2

❄❄❄❄❄❄❄

M ∨

M ∨

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴
ttttttttttttttttttttttttt

⑧⑧⑧⑧⑧⑧⑧⑧

0 ⊕ Y ⊕ M2

M0 ⊕ P1 ⊕ M ∨
2

M ∨

0 ⊕ M2

M0 ⊕ Y ∨ ⊕ M ∨
2

Y ∨ ⊕ M ∨
2

⑧⑧⑧⑧⑧⑧⑧

tttttttttttttttttttttttt
✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴✴
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

M0 ⊕ Y ∨

❄❄❄❄❄❄❄

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎✎
ttttttttttttttttttttttttttt

0

Z ∨

Y ∨

X

Figure 6. R(3K)

W(3ABCD) Rigid string C

P CP

g-vector

Other C-rigid strings

35

1

1

P0

P1

P2

X

X∨

M2

M∨
2

M1

M∨
1

δ

−→ 2

γ

←− 0
β

1

−→ 0

η

−→ 0

2

0

η

←− 2

β

−→ 0
δ

0

−→ 2

2

1

0

1

2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

δ

←− 0

γ

−→ 1

[1, −1, −1]

η

←− 2

β

−→ 0
γ

0

−→ 1

1
γ

−→ 1

0

2

β

−→ 0

δ

−→ 2

η

−→ 0

1

0

2

[−1, 1, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

P1, P2, X, X ∨, M2, M ∨

2 , M1, M ∨
1

P∨

2 , P0, P2, X, X∨, M2, M∨
1 , P0, P1, X, X∨, M2, M ∨

2 , M1, M ∨
1
2 , M1, M∨

1

P∨

P∨

1 , P∨

2 , M2, M1

P1, P2, M∨

2 , M∨

1

P∨

1 , P0, P2, X, M1, M ∨
1
P∨
2 , P1, X∨, M∨

0 , P∨

1

P∨

2 , P0, P1, X, M2, M ∨
2
P∨
1 , P2, X∨, M∨

0 , P∨

2

P0 ⊕ M2 ⊕ P2

X ∨ ⊕ P1 ⊕ P2

P0 ⊕ P1 ⊕ M1

M2 ⊕ P2

M ∨

1 ⊕ P2

1 ⊕ P2

X ∨ ⊕ M ∨

❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥
❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞
✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞
✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥
❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚

M2 ⊕ X

M ∨

X ∨ ⊕ P1 ⊕ M ∨
2

❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚
❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞
✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞
❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚
❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥

X ⊕ M1

1 ⊕ M ∨
2

X

0

M ∨
1

M ∨
2

P1 ⊕ M1

P1 ⊕ M ∨
2

Hasse Quiver:

P0 ⊕ P1 ⊕ P2

P0 ⊕ M2 ⊕ M1

X ⊕ M2 ⊕ M1

X ∨ ⊕ M ∨

1 ⊕ M ∨
2

Figure 7. W (3ABCD)

36

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

W(Q(3A)1) Rigid string C

P CP

g-vector

Other C-rigid strings

1

1

P0

P1

P2

X

X∨

M2

M∨
2

M1

M∨
1

M0

M∨
0

δ

−→ 2

γ

←− 0
βδ
−→ 2
ηγ
−→ 1

1

2

0

η

←− 2

2

1

β

−→ 0
δ

0

−→ 2

0

1

2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

δ

←− 0

γ

−→ 1

[1, −1, −1]

η

←− 2

β

−→ 0
γ

0

−→ 1

1
γ

−→ 1

2
β

−→ 0

η

−→ 0

0

1

2

β

−→ 0

δ

−→ 2

η

−→ 0
βδ
−→ 2
ηγ
−→ 1

1

0

2

1

2

P1, P2, X, X ∨, M2, M ∨

P0, P2, X, X∨, M2, M∨
P0, P1, X, X∨, M2, M ∨

2 , M1, M ∨
2 , M1, M ∨
2 , M1, M∨

1 , M0, M ∨
0
1 , M0, M ∨
0
1 , M0, M∨

0

P∨

1 , P∨

2 , M2, M1

P1, P2, M∨

2 , M∨

1 , M0, M ∨
0

P∨

1 , P0, P2, X, M1, M ∨
P∨

2 , P1, X∨, M∨

1 , M∨
1 , M0

0 , P∨

0

P∨

2 , P0, P1, X, M2, M ∨
P∨

1 , P2, X∨, M∨

0 , P∨

2 , M∨

0

2 , M0

P∨

2 , P1, X, M∨
2 , M1
1 , P2, X, M2, M∨

1

P∨

[−1, 1, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

P0 ⊕ M2 ⊕ P2

X ∨ ⊕ P1 ⊕ P2

P0 ⊕ P1 ⊕ M1

M ∨

0 ⊕ M2 ⊕ P2

X ∨ ⊕ M ∨

1 ⊕ P2

X ∨ ⊕ P1 ⊕ M ∨
2

M0 ⊕ P1 ⊕ M1

M ∨

0 ⊕ M ∨

1 ⊕ P2

M ∨

0 ⊕ M2

M0 ⊕ M1

M0 ⊕ P1 ⊕ M ∨
2

♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧

❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖

M ∨
1

M ∨

0 ⊕ M ∨
1

X ⊕ M2

Hasse Quiver:

P0 ⊕ P1 ⊕ P2

❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲

♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦

✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾
✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆

❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖

❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣

M ∨

X

0

❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣❣

❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖
❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖

✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆
✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾

♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦

❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲❲

X ∨ ⊕ M ∨

1 ⊕ M ∨
2

P0 ⊕ M2 ⊕ M1

2 ⊕ M ∨
1

X ⊕ M2 ⊕ M1

Figure 8. W (3QA1)

❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖

❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

M1 ⊕ X

M0 ⊕ M ∨
2

♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦

M ∨
2

W(3F)

Rigid string C

P CP

g-vector

Other C-rigid strings

37

P0

P1

P2

M2

M∨
2

M1

M∨
1

M0

M∨
0

Y

Z∨

βδ
−→ 2
δλ
−→ 0
η

0

1
λ

0

←− 2

−→ 1

0
δ

−→ 2

β

−→ 1

η

−→ 1

1
λ

−→ 0

1

0

2

2

β

−→ 1

0

η

←− 2

λ

−→ 0

2

0

1

0

1

2
β

−→ 1
δλ
−→ 0
βδ
−→ 2

λ

−→ 0

δ

−→ 2

0

1

0

2

1

η

2
β

−→ 1
η

−→ 1

←− 2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

[1, −1, 1]

P1, P2, M2, M ∨

P0, P2, M2, M∨
P0, P1, M2, M ∨

2 , M1, M ∨
2 , M1, M∨
2 , M1, M∨

1 , M0, M ∨
1 , M0, M ∨
1 , M0, M∨

0 , Y, Z∨
0 , Y , Z∨
0 , Y, Z∨

P∨

1 , P∨
P∨

2 , P0, M1, M∨
0 , P1, M∨
P∨

2 , P0, M2, M0

1 , M0, Z∨

0 , Y, Z∨

P∨

0 , P1, P2, M∨
0 , P∨

2 , M0, M∨
2 , P0, P1, M2, M∨

P∨

0 , Z∨

2 , M1

P∨

1 , P2, M2, M∨

P0, P2, M2, M1, M ∨

1 , Y, Z∨
1 , M∨

0 , Z∨

η

←− 2

λ

−→ 0

[−1, −1, 1]

Hasse Quiver:

P∨

0 , P∨

1 , M∨

1 , M∨

0

P0 ⊕ P1 ⊕ M0

M ∨

1 ⊕ P1 ⊕ P2

P0 ⊕ Y ⊕ P2

M ∨

2 ⊕ P1 ⊕ M0

M1 ⊕ M0

M ∨

❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡❡

⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄

❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨❨

P0 ⊕ M1 ⊕ M0

0 ⊕ Y ⊕ P2

1 ⊕ P1 ⊕ M ∨
2

P0 ⊕ M1 ⊕ M2

0 ⊕ Y ⊕ M2

P0 ⊕ P1 ⊕ P2

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷✷

❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥

P0 ⊕ Y ⊕ M2

M ∨

1 ⊕ M ∨

0 ⊕ P2

M ∨

0 ⊕ M2

1 ⊕ Z ∨

M ∨

❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚

☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞☞

ttttttttttttttttttttttttttt

M2

0

M ∨

M ∨

❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
ttttttttttttttttttttttttt

❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥

M ∨

tttttttttttttttttttttttttt

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞
✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞✞
✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

ttttttttttttttttttttttttt

M ∨

Figure 9. W (3F )

M1 ⊕ M2

1 ⊕ M ∨
2

1 ⊕ M ∨

0 ⊕ Z ∨

M ∨

2 ⊕ M0

M ∨

0 ⊕ Z ∨

M0

Z ∨

38

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

W(3QLR) Rigid string C

P CP

g-vector

Other C-rigid strings

P0

P1

P2

M2

M∨
2

M1

M∨
1

M0

M∨
0

βδ
−→ 2
δλ
−→ 0
λβ
−→ 1

0
δ

−→ 2

β

−→ 1

2

1
λ

−→ 0

0

1

2

1

0

2

0

1

2
β

−→ 1
δλ
−→ 0
βδ
−→ 2

λ

−→ 0

δ

−→ 2
λβ
−→ 1

0

1

0

2

1

2

[1, 0, 0]

[0, 1, 0]

[0, 0, 1]

[1, −1, 0]

[−1, 1, 0]

[1, 0, −1]

[−1, 0, 1]

[0, 1, −1]

[0, −1, 1]

P1, P2, M2, M ∨

P0, P2, M2, M∨

P0, P1, M2, M ∨

2 , M1, M ∨
2 , M1, M∨
2 , M1, M∨

1 , M0, M ∨
0
1 , M0, M ∨
0
1 , M0, M∨

0

P∨

1 , P∨

2 , P0, P2, M1, M ∨
P∨

0 , P1, M∨

1 , M0

1 , M∨

0

P∨

2 , P0, M2, M0

P∨

0 , P∨
0 , P∨

1 , P1, P2, M∨
2 , P0, P1, M2, M∨

P∨

2 , M0, M∨

0

2 , M1

P∨

1 , P2, M2, M∨

1

Hasse Quiver:

M ∨

1 ⊕ P1 ⊕ P2

M ∨

M ∨

1 ⊕ P1 ⊕ M ∨
2

tttttttttttttttttttttttt

tttttttttttttttttttttttt

♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦
✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇✇
✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆✆
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘❘

❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖❖

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

1 ⊕ M ∨

M1 ⊕ M0

2 ⊕ M0

0 ⊕ P2

M ∨

M ∨

M0

P0 ⊕ P1 ⊕ P2

P0 ⊕ P1 ⊕ M0

P0 ⊕ M2 ⊕ P2

0 ⊕ M2 ⊕ P2

P0 ⊕ M1 ⊕ M0

ttttttttttttttttttttttttt

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼✼
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③③
❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉❉
tttttttttttttttttttttttttttttttttttttttttttttttttttttttt
❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏
❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄❄
⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧⑧
ttttttttttttttttttttttttt
ttttttttttttttttttttttttttt

❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏❏

❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚❚

❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥❥

M2 ⊕ M1

1 ⊕ M ∨
0

M ∨
1

M2

M ∨

M ∨

0

M ∨

2 ⊕ P1 ⊕ M0

M ∨

1 ⊕ M ∨
2

P0 ⊕ M2 ⊕ M1

0 ⊕ M2

Figure 10. W (3QLR)

39

References

[1] T. Adachi, The classiﬁcation of τ -tilting modules over Nakayama algebras, arXiv preprint arXiv:1309.2216

(2013).

[2]

, τ -rigid-ﬁnite algebras with radical square zero, Proceedings of the 47th Symposium on Ring Theory
and Representation Theory, Symp. Ring Theory Represent. Theory Organ. Comm., Okayama, 2015, pp. 1–6.
MR 3362257

[3] T. Adachi, T. Aihara, and A. Chan, Tilting Brauer graph algebras I: Classiﬁcation of two-term tilting com-

plexes, arXiv preprint arXiv:1504.04827 (2015).

[4] T. Adachi, O. Iyama, and I. Reiten, τ -tilting theory, Compos. Math. 150 (2014), no. 3, 415–452. MR 3187626
[5] T. Aihara, Tilting-connected symmetric algebras, Algebr. Represent. Theory 16 (2013), no. 3, 873–894.

MR 3049676

[6] T. Aihara and O. Iyama, Silting mutation in triangulated categories, J. Lond. Math. Soc. (2) 85 (2012), no. 3,

633–668. MR 2927802

[7] T. Aihara and Y. Mizuno, Tilting complexes over preprojective algebras of Dynkin type, Proceedings of the
47th Symposium on Ring Theory and Representation Theory, Symp. Ring Theory Represent. Theory Organ.
Comm., Okayama, 2015, pp. 14–19. MR 3362259

[8] J. L. Alperin, Local representation theory, Cambridge Studies in Advanced Mathematics, vol. 11, Cambridge
University Press, Cambridge, 1986, Modular representations as an introduction to the local representation
theory of ﬁnite groups. MR 860771

[9] M. A. Antipov, Derived equivalence of symmetric special biserial algebras, Zap. Nauchn. Sem. S.-Peterburg. Ot-
del. Mat. Inst. Steklov. (POMI) 343 (2007), no. Vopr. Teor. Predts. Algebr. i Grupp. 15, 5–32, 272. MR 2469411
[10] V. M. Bondarenko and J. A. Drozd, The representation type of ﬁnite groups, Zap. Nauˇcn. Sem. Leningrad.

Otdel. Mat. Inst. Steklov. (LOMI) 71 (1977), 24–41, 282, Modules and representations. MR 0472984

[11] S. Brenner, Modular representations of p groups, J. Algebra 15 (1970), 89–102. MR 0255704
[12] M. C. R. Butler and C. M. Ringel, Auslander-Reiten sequences with few middle terms and applications to

string algebras, Comm. Algebra 15 (1987), no. 1-2, 145–179. MR 876976

[13] K. Erdmann, Blocks of tame representation type and related algebras, Lecture Notes in Mathematics, vol. 1428,

Springer-Verlag, Berlin, 1990. MR 1064107

[14] The GAP Group, GAP – Groups, Algorithms, and Programming, Version 4.8.2, 2016.
[15] D. G. Higman, Indecomposable representations at characteristic p, Duke Math. J. 21 (1954), 377–381.

MR 0067896

[16] T. Holm, Derived equivalent tame blocks, J. Algebra 194 (1997), no. 1, 178–200. MR 1461486
[17]

, Derived equivalence classiﬁcation of algebras of dihedral, semidihedral, and quaternion type, J. Algebra

211 (1999), no. 1, 159–205. MR 1656577

[18] M. Hoshino and Y. Kato, Tilting complexes deﬁned by idempotents, Comm. Algebra 30 (2002), no. 1, 83–100.

MR 1880662

[19] J.E. Humphreys, Linear algebraic groups, Springer-Verlag, New York-Heidelberg, 1975, Graduate Texts in

Mathematics, No. 21. MR 0396773 (53 #633)

[20] O. Iyama and X. Zhang, Classifying τ -tilting modules over the Auslander algebra of K[x]/(xn), arXiv preprint

arXiv:1602.05037 (2016).

[21] B.T. Jensen, X. Su, and A. Zimmermann, Degenerations for derived categories, J. Pure Appl. Algebra 198

(2005), no. 1-3, 281–295. MR 2133687 (2006a:18009)

[22] B. Keller, On the construction of triangle equivalences, Derived equivalences for group rings, Lecture Notes in

Math., vol. 1685, Springer, Berlin, 1998, pp. 155–176. MR 1649844

[23] B. Keller and D. Vossieck, Aisles in derived categories, Bull. Soc. Math. Belg. S´er. A 40 (1988), no. 2, 239–253,

Deuxi`eme Contact Franco-Belge en Alg`ebre (Faulx-les-Tombes, 1987). MR 976638

[24] Y. Mizuno, Classifying τ -tilting modules over preprojective algebras of Dynkin type, Math. Z. 277 (2014),

no. 3-4, 665–690. MR 3229959

[25] T. Okuyama, Some examples of derived equivalent blocks of ﬁnite groups, preprint (1997).
[26] S. Oppermann, Quivers for silting mutation, arXiv preprint arXiv:1504.02617 (2015).
[27] The QPA-team, QPA - Quivers, path algebras and representations, Version 1.23, 2015.
[28] J. Rickard, Derived categories and stable equivalence, J. Pure Appl. Algebra 61 (1989), no. 3, 303–317.

MR 1027750

[29] S. Schroll, Trivial extensions of gentle algebras and Brauer graph algebras, J. Algebra 444 (2015), 183–200.

MR 3406174

[30] A. Skowro´nski and J. Waschb¨usch, Representation-ﬁnite biserial algebras, J. Reine Angew. Math. 345 (1983),

172–181. MR 717892

(Florian Eisele)
Department of Mathematics, City University London, Northampton Square, London EC1V 0HB, United
Kingdom
E-mail address: Florian.Eisele@city.ac.uk

40

FLORIAN EISELE, GEOFFREY JANSSENS, AND THEO RAEDSCHELDERS

(Geoffrey Janssens)
Departement Wiskunde, Vrije Universiteit Brussel, Pleinlaan 2, B-1050 Elsene, Belgium
E-mail address: geofjans@vub.ac.be

(Theo Raedschelders)
Departement Wiskunde, Vrije Universiteit Brussel, Pleinlaan 2, B-1050 Elsene, Belgium
E-mail address: traedsch@vub.ac.be

