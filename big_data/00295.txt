6
1
0
2

 
r
a

M
1

 

 
 
]

O
R
.
s
c
[
 
 

1
v
5
9
2
0
0

.

3
0
6
1
:
v
i
X
r
a

Hybrid Feedback Path Following for Robotic

Walkers via Bang-Bang Control Actions
Stefano Divan and Daniele Fontanelli and Luigi Palopoli ∗†

March 2, 2016

Abstract

We show a control algorithm to guide a robotic walking assistant
along a planned path. The control strategy exploits the electromechanical
brakes mounted on the back wheels of the walker. In order to reduce the
hardware requirements we adopt a Bang Bang approach relying of four
actions (with saturated value for the braking torques).

When the platform is far away from the path, we execute an approach
phase in which the walker converges toward the platform with a speciﬁed
angle. When it comes in proximity of the platform, the control strategy
switches to a path tracking mode, which uses the four control actions
to converge toward the path with an angle which is a function of the
state. This way it is possible to control the vehicle in feedback, secure a
gentle convergence of the user to the planned path and her steady progress
towards the destination.

1

Introduction

The use of robotic platforms to help older adults navigate complex environ-
ments is commonly regarded as an eﬀective means to extend their mobility
and, ultimately, to improve their health conditions. The EU Research project
ACANTO [1] aims to develop a robotic friend (called FriWalk), which oﬀers
several types of cognitive and physical support. The FriWalk looks no diﬀerent
from a classic rollator, a four wheel cart used to improve stability and receive
physical support. However, its sensing and computing abilities allow the Fri-
Walk to sense the environment, localise itself and generate paths that can be
followed with safety and comfort. The user can be guided along the path using
a Mechanical Guidance Support (MGS).

∗This project has received funding from the European Unions Horizon 2020 Research and
Innovation Programme - Societal Challenge 1 (DG CONNECT/H) under grant agreement n◦
643644 “ACANTO - A CyberphysicAl social NeTwOrk using robot friends”.
†D. Fontanelli is with the Department of Industrial Engineering (DII), University of Trento,
Via Sommarive 5, Trento, Italy daniele.fontanelli@unitn.it. S. Divan and L. Palopoli
are with the Department of Information Engineering and Computer Science (DISI), University
of Trento, Via Sommarive 5, Trento, Italy {palopoli,divan}@disi.unitn.it

The MGS utilises electromechanical brakes to steer the vehicle in order to
stay as close as possible to the planned path. In this paper, we study a control
strategy that fulﬁlls this goal. A few speciﬁc issues makes our problem particu-
larly challenging. First, the low target cost of the device prevents us from using
expensive sensors to estimate the force and the torque applied by the user to
the platform. Second, the use of electromechanical brakes and the sometimes
diﬃcult grip conditions make the braking action diﬃcult to modulate. Third,
because the guidance system interacts with the user (who ultimately pushes
the vehicle forward), it should be ﬂexible to adapt to diﬀerent users and dif-
ferent operating conditions and it should give directions that users should ﬁnd
“sensible” and easy to follow.

This being said, we propose a strategy that operates in two diﬀerent ways
when the user is far away from the path and when she is in its proximity. In
this ﬁrst condition, the controller seeks to “approach the path”, in the second
condition it seeks to “follow the path”.

For the approach phase, the controller reduces the distance from the path by
executing “a few” control actions, which are easily understood by the user who
can be left in control of her motion for most of the time. A useful inspiration
to design the controller for this phase can be found in the work of Ballucchi et
al. [2]. These authors proved that for a vehicle that moves with constant speed
and with limited curvature, the control policy that takes the vehicle to the path
in minimum time is a Bang Bang strategy with saturated controls. In our case,
this means restricting to four control actions: 1.
force a
right turn blocking the right wheel, 3. force a left turn blocking the left wheel,
4.
force the complete halt of the system blocking both wheels. The resulting
motion of the vehicle is given by a concatenation of straight lines and circles
with ﬁxed radius. The restriction to a Bang Bang strategy based on saturated
is convenient for us because it does not require any force measurements and
or ﬁnely modulated braking actions. However, the minimum time manoeuvres
could appear unusual and uncomfortable to the user. For this reason, our control
strategy for the approach phase uses saturated control but allows us to specify
the angle of approach (the angle between the orientation of the vehicle and the
tangent to the trajectory). This allows us to strike diﬀerent trade-oﬀs between
the total distance covered and the smoothness of the approach manoeuvres.

let the user go, 2.

When the system comes in proximity of the path, we switch into path track-
ing mode. We still use the same set of control actions, but the angle of approach
is given by a functions of the system’s state. We show that this produces a sta-
bilising control law. The key advantage of the approach is that it allows us
to emulate the behaviour of ﬁne grained control strategies requiring the mea-
surement of the user’s torques, by using a coarse discrete valued actuation and
the only information of the displacement and of the orientation of the platform
with respect to the path. We prove the eﬃcacy of our solution by extensive
simulations.

The paper is organised as follows. In Section 2 we oﬀer a quick survey of
the related work. In Section 3 we introduce the most important deﬁnitions and
state the problem in formal terms. In Section 4, we describe our control strategy

and in Section 6 we show its performance by means of simulations. In Section 7
we state our conclusions and announce future work directions.

2 Related work

Motion control of autonomous vehicles has been widely studied in the last years.
Solutions to path planning and path following have been provided for a complete
spectrum of robotic vehicles, like unicycles and car-likes, and can be found
in many textbooks [3]. The control approaches underpinning such solutions
range in the wide realm of nonlinear control, e.g., chained forms [4], closed loop
steering via Lyapunov techniques [5] or exponential control laws [6].

An important research area concerns the class of path following problems
for nonholonomic vehicles with limited curvature radius or saturated inputs,
which plays a relevant role for assistive robotic vehicles [7, 8, 9]. This topic
has been widely studied in the literature using, for example, chained forms [10],
Lyapunov-based control synthesis on the kinematic [11] or dynamic [12, 13]
models or hybrid automata [14].

The device adopted in this paper can be modeled as a particular Dubins
car with a ﬁxed curvature radius. One of the ﬁrst solution of driving a Dubins
car along a given path has been introduced by [2]. The proposed solution is
based on a discontinuous control scheme on the angular velocity of the vehicle.
This approach has been further developed in [15] for optimal route tracking
control minimising the approaching path length. The optimal problem is based
on the deﬁnition of a switching logic that determines the appropriate state of
a hybrid system. From the same authors, an optimal controller able to track
generic paths that are unknown upfront, provided some constraints on the path
curvature are satisﬁed [14]. This second solution considers the curvature of the
path as a disturbance which has to be rejected.

For what concerns assistive carts, the passive walker proposed by Hirata [7]
is a standard walker, with two caster wheels and a pair of electromagnetic brakes
mounted on ﬁxed rear wheels, which is essentially the same conﬁgurations that
we consider in this paper. The authors propose a guidance solution using diﬀer-
ential braking, which is inspired to many stability control systems for cars [16].
By suitably modulating the braking torque applied to each wheel, the walker is
steered toward a desired path, as also reported in [17].

The walking assistant considered in this paper builds atop the model pro-
posed in [7, 17]. In our previous work [8], we proposed a control algorithm based
on the solution of an optimisation problem which minimises the braking torque.
However, the control law relies on real–time measurements of the torques ap-
plied to the walker, which are diﬃcult without expensive sensors. Due to cost
limitations and simplicity in the algorithm design, we restrict the possible ac-
tions to turn left or right by blocking alternatively the left or right wheel, thus
casting the problem to the class of path following problems for nonholonomic
vehicles with limited curvature radius. For example, the i-Walker rollator [18]
is equipped with triaxial force sensors on the handles to estimate the user ap-

plied forces. Nevertheless, its costs is on the order of some thousands euros,
which make it unaﬀordable for the majority of the potential users. In light of
this choice, this paper represents a ﬁrst attempt to fuse hybrid control laws
conceived for optimal tracking of unicycle-like vehicles [14] with the nonlinear
trajectory tracking approaches proposed, for instance, in [13, 11]. To this end,
we ﬁrst generalise the hybrid control law proposed in [14] to generic and cus-
tomisable angles of approach to the reference path. Customisation comes as a
degree of freedom that turns out to be very useful for the problem at hand by
determining the angle as a function of the environmental situation, e.g., to avoid
obstacles or leading the AP as fastest as possible to the reference trajectory. Us-
ing a time varying angle of approach we are also able to smooth the convergence
to the path as desired. It has to be noted that with respect to other existing
solutions, e.g., [7, 8], the proposed solution simpliﬁes the control algorithm by
renouncing to the estimates of the user applied forces (with remarkable savings
in terms of cost).

3 Background and Problem Formulation

The device considered in this paper is derived from a commercial walker insert-
ing electro-mechanical brakes on the rear wheels along with other mechatronic
components. The FriWalk localisation [19, 20] is based on incremental encoders
mounted on the back wheels, on an inertial platform measuring the vehicle ac-
celerations and angular velocities, and on exteroceptive sensors (RFID readers
and cameras). The vehicle uses vision technologies to detect information on
the surrounding environment and to plan the safest course of action for the
user [21, 22]. Due to the described abilities, the reference path is assumed to be
known up-front and its localisation is considered solved.

3.1 Vehicle Dynamic Model
With reference to Fig. 1, let (cid:104)W(cid:105) = {Ow, Xw, Yw, Zw} be a ﬁxed right-handed
reference frame, whose plane Π = Xw×Yw is the plane of motion of the cart, Zw
pointing outwards the plane Π and let Ow be the origin of the reference frame.
Let x = [x, y, θ]T ∈ R2 × S be the kinematic conﬁguration of the cart, where
(x, y) are the coordinates of the mid–point of the rear wheels axle in Π and θ
is the orientation of the vehicle w.r.t. the Xw axis (see Fig. 1). The dynamic
model of the FriWalk can be assimilated to a unicycle

 =





˙x
˙y
˙θ
˙v
˙ω

 ⇔



 =



˙s
˙l
˙˜θ
˙v
˙˜ω

v cos(θ)
v sin(θ)

ω
F
m
N
J



γ

v sin(˜θ)
ω − c(s)γ

F
m

N

J − c(s)¨s − c(s)(cid:48)γ

(1)

where v is the forward velocity of the vehicle and ω its angular velocity. F
is the external force acting on the vehicle along the direction of motion, N is

Figure 1: Vehicle to path conﬁguration and reference frames.

the external torque about the Zw-axis, m and J are the mass and moment of
inertia of the cart. Moreover, s is the curvilinear abscissa along the path, l is the
distance between the origin of the Frenet frame and the reference point of the
FriWalk along the Y -axis of the Frenet frame, and θd is the angle between the
Xw-axis and the X-axis of the Frenet frame (see Fig. 1). Therefore, ˜θ = θ − θd
˙˜θ. Furthermore, the path curvature is deﬁned as c(s) = dθd(s)/ds,
and ˜ω =
while c(cid:48)(s) = dc(s)/ds. Finally,

γ =

v cos(˜θ)
1 − c(s)l

.

It is worthwhile to note that this model is commonplace in the literature [10,
23, 13].

By denoting with τr and τl the torques applied on the right and left rear

wheels, respectively, we have the invertible linear relations

F =

τr + τl

r

and N =

(τr − τl)d

2r

.

(2)

where d is the axle length. In particular, denoting with M(·) the quantity M of
the left or right side of the trolley and assuming that α(·) is the rotation angle
of the rear wheels, the wheel dynamics can be described by Jw ¨α(·) = τ(·), where
Jw is the equivalent moment of inertia of the wheel.

3.2 Braking System

The available input variables are the independent braking torques τ b
l and τ b
r ,
acting on the left and right wheels, respectively. Similarly to [7, 17], the braking
torques ranges between zero, i.e., the wheel rotates freely, to a maximum value.
More precisely, let the torques acting on (2) be expressed by

τ(·) = τ h

(·) + τ b

(·) − bw ˙α(·),

(3)

which is the sum of the torque τ h
(·), that results from the force exerted by the
user on the handles and transmitted to the wheel hub through the mechanical
structure of the walker, of the term −bw ˙α(·), accounting for the rolling resis-
tance that opposes to the wheel rotation (thus having bw as the viscous friction
coeﬃcient around the wheel rotation axle) and of braking action τ b
(·). Notice
that pure rolling assumption is supposed to hold. Similarly to [7], the braking
action is modeled as a dissipative system, i.e.,

(·) = −bb
τ b

(4)
(·) ∈ [0, bmax] are controllable variables determining the viscous frictions
where bb
of the brakes. Whenever ˙α(·) = 0, to model the fact that the brake has suﬃcient
authority to keep the wheel at rest, we assume that

(·) ˙α(·),

(·) = −cb
τ b

(·)τ h
(·),

(5)
(·) ∈ [0, 1] is an additional controllable variable acting when ˙α(·) = 0.
where cb
In case of servo brakes, coeﬃcients bb
(·) can be changed by varying the
input current, thus allowing the control system to suitably modulate the braking
torque [7].

(·) and cb

By direct experimental measurements made on the system at hand, we have
observed that the torques applied by the user to the mechanical system are
negligible with respect to the maximum braking action. Moreover, the inertia
of the system as well as the maximum forward velocity v are limited. As a
consequence, the time needed to stop the wheel rotation is negligible and, hence,
it can be assumed ω(·) = 0 whenever the braking system is fully active.

(·) = 0 or cb

(·) = 1 and bb

(·) = 0 and bb

Due to the described platform, the control law we are designing deals with
a limited set of control inputs. More precisely, the admitted control values for
each wheel are either cb
(·) = bmax, i.e., no
brake or full brake. If by chance the brake is fully active on the right wheel,
from (3) it follows that ωr(t) → 0. Hence, the vehicle will end-up in following
a circular path with ﬁxed curvature radius R = d/2, where d is the rear wheel
inter-axle length, travelled in clockwise direction if v > 0 (counter-clockwise for
v < 0). The circular path with the same radius R will be instead followed in
counter-clockwise direction if the left brake is fully active and v > 0 (clockwise
for v < 0). As a consequence, in all the cases of active braking system, ω = v/R.
If no braking action is applied at all, the user will drive the FriWalk uncontrolled.
On the other hand, if both brakes are fully active, the vehicle will reach the full
stop. From a control perspective, the previous model turns into a nonholonomic
nonlinear vehicle with limited curvature and quantised inputs: turn left, turn
right, move freely or stop.

3.3 Problem Formulation

We require the walker to converge to our planned path deﬁned in Π, which we
will assume to be smooth (i.e., with a well deﬁned tangent on each point) and

with a known curvature. The planned path is typically composed of straight
segments and circular arcs connected with clothoids. The problem to solve is
formalised as a classic asymptotic stability problem:

lim
t→+∞ l(t) = 0, and

lim
t→+∞

˜θ(t) = 0.

(6)

In general, the dynamic path following problem requires the design of a stabilis-
ing control law F (t) and N (t) for the system in (1). Due to (2), (3), (4) and (5),
such a solution requires a proper control low for the control inputs cb
l and
bb
l .

r, cb

r, bb

4 Approaching the Path

The ﬁrst part of the solution proposed in this paper relies on the hybrid au-
tomaton designed in [14], which proposes a minimum length trajectory to reach
a desired path for limited curvature unicycle-like vehicles. We ﬁrst summarise
the key points of this algorithm (for the reader convenience) and then we move
to the description of its generalisation for the problem at hand.

4.1 Hybrid Solution

The solution proposed by Ballucchi et al. [14] is based on a hybrid feedback
controller solving (6) for unicycle-like vehicles with bounded curvature radius.
In particular, the solution there proposed faces the problem of driving a Dubin’s
car to a generic path assuming a maximum known curvature for the path. The
authors show that their hybrid controller is stable with respect to the path-
related coordinates (˜l, ˜θ), where ˜l = l/R and R is the ﬁxed maximum turning
radius of the vehicle. The controller automaton comprises three diﬀerent ma-
noeuvres, i.e., Go Straight, Turn Right and Turn Left, which are deﬁned in terms
of the angular velocity ˜ω of (1) as

 ˜ω = 0

˜ω = − v
˜ω = v
R

if Go Straight
R if Turn Right
if Turn Left

assuming the forward input v > 0 is known. The solution can then be straight-
forwardly mapped onto the control variables available for our speciﬁc problem,
i.e.,

bb
r = bb
l = cb
r = bmax ∧ cb
bb
l = bmax ∧ cb
bb
bb
r = bb

r = cb
l = 0
r = 1 ∧ bb
l = 1 ∧ bb
r = cb

l = bmax ∧ cb

l = cb
r = cb
l = 1

l = 0
r = 0

if Go Straight,
if Turn Right,
if Turn Left,
if Stop.

(7)



The hybrid automaton comprises three states, in which the three manoeuvres
are coded according to the initial conﬁguration of the vehicle. To this end, the
state space (˜l, ˜θ) is suitably partitioned into a set of non-overlapping regions.
In each region only one of the three manoeuvres is active. For the sake of

Figure 2: Phase portrait for a set of manoeuvres of the generalised hybrid
controller [14] for δ = π/3.

completeness we report a typical qualitative trajectory of the robot in the phase
portrait (˜l, ˜θ) in Figure 2, trajectory E (solid thick line). The ﬁrst part of the
manoeuvre is obtained by the Turning State, in which the robot performs a Turn
Right with minimum radius curvature until it is oriented towards the path to
reach (a linear segment in this example), with ˜θ = δ. Then the robot proceeds
towards the path in the Straight state performing a Go Straight manoeuvre and,
ﬁnally, if switches to the Controlled state, in which it rotates performing a ﬁnal
Turn Left manoeuvre and, hence, solving the problem. Once the robot reaches
the path with the correct orientation, it permanently remains there providing
that the path curvature is feasible according to the minimum curvature radius
constraint.

4.2 Generalised Hybrid Solution

In [14] the choice of the angle of approach δ = π/2 is dictated by the necessity
to reach the desired path with the minimum travelled distance. Our ﬁrst gener-
alisation, which is useful for our speciﬁc application since it adds an additional
degge of freedom during the approaching path manoeuvre, is to consider the
angle of approach δ as a design parameter. In order to extend the results of [14]
to this broader set of possibilities, let us ﬁrst depict in the phase portrait the
trajectories followed by the robot when it continuously rotates on circles with
minimum radius R (Figure 3), i.e., the trajectories described in the Turning
State. Notice that circles with any ¯R > R, similar graphs are derived. Further-
more, notice that the angles ˜θ ∈ [−π, π). The dashed lines in Figure 3 represent
a possible choice of δ ∈ (−π, π). It is now evident that the sequence of states to
reach the path will be given again by: Turning State - Straight state - Controlled
state. Each of them can be of zero length. More precisely, by generalising the

˜l[-]-4-2024˜θ[rad]-3-2-10123ABCDEFFigure 3: Phase portrait for the Turning State (solid lines). The graph is
reported for ˜l = {−4,−2, 0, 2, 4}. The dashed line corresponds to the Straight
state for a generic choice of δ.

boundary functions reported in [14] to the case of a generic δ as:

σR(˜l, ˜θ) = ˜l + 1 − cos(˜θ),
σL(˜l, ˜θ) = ˜l − 1 + cos(˜θ),

σN (˜l, ˜θ, δ) = ˜l + 1 − 2 cos(δ) + cos(˜θ),
σP (˜l, ˜θ, δ) = ˜l − 1 + 2 cos(δ) − cos(˜θ),

(8)

the manoeuvre switching curves are deﬁned, and depicted in Figure 4. Those
boundaries deﬁne the partition of the state space, reported in the same Figure 4
with dark and light grey colours. In light of this partition, obtained for δ = π/3,
from the light grey region the sequence will be Turning State (on the right or
clockwise) - Controlled state (turning on the left or counterclockwise), whose
trajectory is named B in Figure 2 (dash-dotted line). The same happens, but
with opposite rotations, from the dark grey region (C trajectory in Figure 2,
dashed thick line). On the left boundary of the light grey region (σR(˜l, ˜θ)
of (8)), the manoeuvre comprises only the Controlled state (turning on the
right, trajectory A in Figure 2, solid line), while from the right boundary of
the dark grey region (σL(˜l, ˜θ) of (8)), the manoeuvre comprises again only the
Controlled state (turning on the left, trajectory D in Figure 2, dotted thick line).
From the dashed line of Figure 4, the sequence is Straight state - Controlled
state (trajectory F in Figure 2, dash-dotted thick line), while from all the other
position the sequence of states is complete (trajectory E in Figure 2, solid thick
line). It is worthwhile to note that the regions reverted for v < 0. To conclude,
we have shown that the generalisation of the approaching angle to a generic
δ ∈ (−π, π) still preserves the stability property of [14]. Nonetheless, it oﬀers a
great possibilities for the design of the control law in the spirit recalled in the
Introduction.

˜l[-]-505˜θ[rad]-6-4-20246turn leftturn rightgo straightFigure 4: Boundary functions and state space partition induced by the boundary
function for δ = π/3.

5 Following the Path

After the approaching phase is completed, the vehicle reaches the proximity of
the path with a minimal set of manoeuvres and with a generic δ. The solution
provided by [14] to ﬁnally stabilise the robotic platform on the path, even for a
generic angle δ, has two major problems: a) it is perceived as unnatural by the
user; b) if an error on the switching point exists, the vehicle generates a set of
repeated uncomfortable curves, similar to the solid line reported in Figure 6. In
order to overcome this limitation and provide a smooth asymptotic convergence
to the path, we present a further extension of the hybrid automata by consid-
ering state dependent δ functions. Having a state dependent approaching angle
to lead the evolution of ˜θ(t) is a common solution for nonholonomic path fol-
lowing control problems. Just to mention a few notable solutions, [13] proposes
a Lyapunov-based control law design to govern the torque N in (1) and lead the
vehicle to track the reference angle δ(˜l, v) deﬁned as an odd smooth function of
˜l. A similar solution based on a nonlinear system expressed in chained-form has
been also presented in [11] for a vehicle with saturated actuation. The hybrid
feedback controller here proposed extends the previous results on unicycle-like
vehicles to quantised control inputs with customisable approaching angle. More
importantly, it will be shown that the control law of [13] can be emulated with-
out any estimate of the user applied forces and torques and without a precise
modulation of the braking force (contrary to the solution reported in [8])), as
reported in Theorem 1. In what follows and without loss of generality, we focus
on v(t) > 0, ∀t (therefore, δ(˜l, v) simpliﬁes to δ(˜l)).
Theorem 1 For any function δ(˜l) continuous, limited δ(˜l) ∈ (−π, π), with
≥ 0 and ˜lδ(˜l) > 0, ∀˜l (cid:54)= 0, the origin of the space (˜l, ˜θ) is asymp-
−sign(˜l) ∂δ(˜l)
∂˜l
totically stable.

˜l[-]-4-3-2-101234˜θ[rad]-3-2-10123turn right zoneturn left zoneσRσLσNσPProof Let us suppose that the robot is not able to reach the region ˜θ = δ(˜l).
In light of the previous analysis and, in particular, by means of the boundary
functions (8) and the region partition of Figure 4, the vehicle is on either σL(˜l, ˜θ)
or σR(˜l, ˜θ). Therefore, the hybrid system is in the Controlled state and the robot
reaches ˜θ = δ(˜l) only in the origin.
If
| ˙δ(˜l)| ≤ v/R, ∀˜l, i.e., the commanded δ(˜l) has instantaneous curvatures that are
less than R, the vehicle remains on the region ˜θ = δ(˜l) by switching continuously
between the Turning State and the Go Straight. Notice that the hybrid state
Controlled state is never reached, in this case.

However, it may happen that | ˙δ(˜l)| > v/R for certain values ˜l >(cid:98)˜l. In such

Hence, let us suppose that for a certain ﬁnite time instant ˜θ = δ(˜l).

a case, the reference of δ(˜l) is unfeasible for the limited turning radius vehicle.
Let us deﬁne with ¯t the time in which the vehicle departs from the unfeasible
region ˜θ = δ(˜l) due to the limited turning radius R. Since δ(˜l) is a smooth odd
function of ˜l and since the turning manoeuvre is symmetric with respect to the
˜θ = 0 axis (see Figure 3), when the vehicle re-enters into the region ˜θ = δ(˜l)

after a turning at time (cid:98)t > ¯t, both |˜l((cid:98)t)| < |˜l(¯t)| and |˜θ((cid:98)t)| < |˜θ(¯t)| hold. As
a consequence, there exist a time t such that ˜l(t) <(cid:98)˜l, hence | ˙δ(˜l)| ≤ v/R and,

ﬁnally, the previous situation holds.

We are now able to prove the stability of the proposed feedback control law
using the Lyapunov stability theory. To this end, let us deﬁne the following
Lyapunov function candidate

(cid:16)˜l2 + ˜θ2(cid:17)

V (˜l, ˜θ) =

1
2

,

(9)

which is positive deﬁnite with respect to the subspace of interest. Using (1) it
is immediate to note that ˙V (˜l, ˜θ) is negative deﬁnite in the Controlled state and
whenever ˜θ = δ(˜l), which proves the convergence towards the origin from any
initial condition.

Figure 5 depicts the phase portrait from various initial conﬁgurations for
2 tanh(˜l), i.e., an always feasible approaching angle. Instead, an example
δ(˜l) = π
of an unfeasible δ(˜l) is reported in Figure 6, for both the phase portrait and the
Cartesian trajectory followed by the vehicle.

6 Simulations Results

To show the eﬀectiveness of the proposed solution, simulations are reported for
a generic path. Figure 7 reports the trajectory followed by the vehicle starting
with an initial conﬁguration (x, y, θ) = (1, 5, 0). The ﬁnal position of the robot
on the path is highlighted with a dashed circle. The function δ(˜l) = π
2 tanh(˜l)
is adopted. The distance to the path l and relative angle ˜θ are reported in
Figure 8.

The high frequency oscillations are due to the continuous switching between
the Turning State and the Go Straight hybrid states, which is necessary to
approximate a generic curvature path.

Figure 5: Phase portrait from various initial conﬁgurations when δ(˜l) =
2 tanh(˜l) is feasible reference angle.
π

(a)

(b)

Figure 6: Vehicle trajectory (a) and phase portrait (b) (black lines) for an
unfeasible reference angle δ(˜l) (green lines).

7 Conclusions

In this paper we have presented a passive control strategy for a robotic walking
assistant that guides a senior user with mobility problems along a planned path.
The control strategy exploits the electromechanical brakes mounted on the back
wheels of the walker. Due to cost limits, the solutions proposed is based on
a simple actuation strategy in which the braking system is controlled with a
bang-bang control. We show that it is possible to secure a gentle and smooth
path following and to control the vehicle in feedback towards the desired path
by applying two diﬀerent strategies: when the platform is far away from the
path, we execute an approach phase in which the walker converges toward the
platform with a speciﬁed angle; when it comes in proximity of the platform, the
control strategy switches to a path tracking mode, which uses the four control
actions to converge toward the path with an angle which is a function of the

x012345678910y-2-1012345Feasible trajectoryUnfeasible referencel[m]-4-3-2-101234˜θ[rad]-4-3-2-101234Feasible trajectoryUnfeasible referenceFigure 7: Example of a controlled trajectory.

(a)

(b)

Figure 8: Time evolution of the variables l (a) and ˜θ (b) for the trajectory
depicted in Figure 7.

state. We have further shown that it is possible to mimic a dynamic feedback
control law without collecting dynamic measures on the system, hence lowering
down its costs.

Future developments will mainly focus on the application of the proposed
algorithm on the actual system and on the reduction of the annoying switchings
among the diﬀerent states of the hybrid automata for generic curves. Another
point that serves some further investigations is related to the user behaviour
when it is commanded to go straight.
In such a case, the strateg should be
modiﬁed to account for unreliable and uncooperative users.

t [s]010203040l[m]-1012345References

[1] “ACANTO: A CyberphysicAl social NeTwOrk using robot friends,”

http://www.ict-acanto.eu/acanto, February 2015, EU Project.

[2] A. Balluchi, A. Bicchi, A. Balestrino, and G. Casalino, “Path tracking
control for dubin’s cars,” in Proc. IEEE Conf. on Robotics and Automation
(ICRA), vol. 4, Apr 1996, pp. 3123–3128.

[3] J.-P. Laumond, Robot motion planning and control. Lectures Notes in Con-

trol and Information Sciences 229, 1998, vol. 3.

[4] C. Samson, “Control of chained systems application to path following and
time-varying point-stabilization of mobile robots,” IEEE Trans. on Auto-
matic Control, vol. 40, no. 1, pp. 64–77, 1995.

[5] M. Aicardi, G. Casalino, A. Bicchi, and A. Balestrino, “Closed loop steer-
ing of unicycle like vehicles via lyapunov techniques,” IEEE Robotics &
Automation Magazine, vol. 2, no. 1, pp. 27–35, 1995.

[6] O. Sordalen and C. De Wit, “Exponential control law for a mobile robot:
extension to path following,” in Proc. IEEE Conf. on Robotics and Au-
tomation (ICRA), vol. 3, May 1992, pp. 2158–2163.

[7] Y. Hirata, A. Hara, and K. Kosuge, “Motion control of passive intelligent
walker using servo brakes,” IEEE Transactions on Robotics, vol. 23, no. 5,
pp. 981–990, 2007.

[8] D. Fontanelli, A. Giannitrapani, L. Palopoli, and D. Prattichizzo, “Unicycle
Steering by Brakes: a Passive Guidance Support for an Assistive Cart,” in
Proc. IEEE Int. Conf. on Decision and Control. Florence, Italy: IEEE,
10-13 Dec. 2013, pp. 2275–2280.

[9] M. Martins, C. Santos, A. Frizera, and R. Ceres, “A review of the function-
alities of smart walkers,” Medical engineering & physics, vol. 37, no. 10, pp.
917–928, 2015.

[10] A. De Luca, G. Oriolo, and C. Samson, “Feedback control of a nonholo-
Springer,

nomic car-like robot,” in Robot motion planning and control.
1998, pp. 171–253.

[11] Z.-P. Jiang, E. Lefeber, and H. Nijmeijer, “Saturated stabilization and
tracking of a nonholonomic mobile robot,” Systems & Control Letters,
vol. 42, no. 5, pp. 327–332, 2001.

[12] A. Lapierre and D. Soetano, “Nonlinear path-following control of an AUV,”

Ocean engineering, vol. 34, no. 11, pp. 1734–1744, 2007.

[13] D. Soetanto, L. Lapierre, and A. Pascoal, “Adaptive, non-singular path-
following control of dynamic wheeled robots,” in IEEE Conf. on Decision
and Control, vol. 2.

IEEE, 2003, pp. 1765–1770.

[14] A. Balluchi, A. Bicchi, and P. Soueres, “Path-following with a bounded-
curvature vehicle: a hybrid control approach,” International Journal of
Control, vol. 78, no. 15, pp. 1228–1247, 2005.

[15] P. Soueres, A. Balluchi, and A. Bicchi, “Optimal feedback control for route
tracking with a bounded-curvature vehicle,” International Journal of Con-
trol, vol. 74, no. 10, pp. 1009–1019, 2001.

[16] T. Pilutti, G. Ulsoy, and D. Hrovat, “Vehicle steering intervention through
diﬀerential braking,” in Proceedings of the 1995 American Control Confer-
ence, vol. 3, 1995, pp. 1667–1671.

[17] M. Saida, Y. Hirata, and K. Kosuge, “Development of passive type double
wheel caster unit based on analysis of feasible braking force and moment
set,” in Proceedings of the 2011 IEEE/RSJ International Conference on
Intelligent Robots and Systems, 2011, pp. 311–317.

[18] U. Cortes, C. Barrue, A. B. Martinez, C. Urdiales, F. Campana, R. Annic-
chiarico, and C. Caltagirone, “Assistive technologies for the new generation
of senior citizens: the share-it approach,” International Journal of Com-
puters in Healthcare, vol. 1, no. 1, pp. 35–65, 2010.

[19] P. Nazemzadeh, D. Fontanelli, D. Macii, T. Rizano, and L. Palopoli, “De-
sign and Performance Analysis of an Indoor Position Tracking Technique
for Smart Rollators,” in Indoor Positioning and Indoor Navigation (IPIN).
Montbeliard, France: IEEE GRSS, 28-31 Oct. 2013, to appear.

[20] P. Nazemzadeh, F. Moro, D. Fontanelli, D. Macii, and L. Palopoli, “In-
door Positioning of a Robotic Walking Assistant for Large Public Environ-
ments,” IEEE Trans. on Instrumentation and Measurement, vol. 64, no. 11,
pp. 2965–2976, Nov 2015.

[21] A. Colombo, D. Fontanelli, A. Legay, L. Palopoli, and S. Sedwards, “Motion
planning in crowds using statistical model checking to enhance the social
force model,” in Decision and Control (CDC), 2013 IEEE 52nd Annual
Conference on.

IEEE, 2013, pp. 3602–3608.

[22] ——, “Eﬃcient customisable dynamic motion planning for assistive robots
in complex human environments,” Journal of Ambient Intelligence and
Smart Environments, vol. 7, no. 5, pp. 617–633, 2015.

[23] L. Lapierre and D. Soetanto, “Nonlinear path-following control of an AUV,”

Ocean engineering, vol. 34, no. 11, pp. 1734–1744, 2007.

