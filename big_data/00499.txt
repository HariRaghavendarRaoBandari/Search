6
1
0
2

 
r
a

M
3

 

 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 

2
v
9
9
4
0
0

.

3
0
6
1
:
v
i
X
r
a

A Computational Method to Calculate the Exact Solution for

Acoustic Scattering by Liquid Spheroids

Edmundo Lavia, Juan D. Gonzalez, Silvia Blanc

March 4, 2016

Abstract

The problem of scattering of harmonic plane acoustic waves by liquid spheroids
(prolate and oblate) is addressed from an analytical approach. Mathematically, it
consists in solving the Helmholtz equation in an unbounded domain with Sommerfeld
radiation condition at inﬁnity. The domain where propagation takes place is charac-
terised by density and sound speed values ρ0 and c0, respectively, while ρ1 and c1 are
the corresponding density and sound speed values of an inmersed object that is respon-
sible of the scattered ﬁeld. Since Helmholtz equation is separable in prolate (oblate)
spheroidal coordinates, its exact solution for the scattered ﬁeld can be expressed as
an expansion on prolate (oblate) spheroidal functions multiplied by coeﬃcients whose
values depend upon the boundary conditions veriﬁed at the medium-inmersed ﬂuid
obstacle interface. The general case (c0 (cid:54)= c1) is cumbersome and it has only been
In this paper, a numerical implementation of the general
theoretically calculated.
exact solution that is valid for any range of eccentricity values and for c0 (cid:54)= c1, is
provided. The high level resolutor layer code has been written in the Julia program-
ming language. A software package recently released in the literature has been used
to compute the spheroidal functions. Several limiting cases (Dirichlet and Neumann
boundary conditions, spheroid tending to sphere) have been satisfactorily evaluated
using the implemented code. The numerical implementation of the exact solution leads
to results that are in agreement with reported predicted results obtained through ap-
proximate solutions for far-ﬁeld and near-ﬁeld regimes. The example scripts shown
here can be downloaded from authors’ web (GitHub) site.

1

Introduction

The interaction of harmonic plane sound waves with spheroids (prolate and oblate) has
been widely and increasingly investigated, mainly for soft and rigid scatterers, along the
last six decades in diﬀerent branches of acoustics [1, 2, 3].
In particular, underwater
acoustics can be considered quite proliferous in reported articles on diﬀerent aspects of this
topic due to its relevance in applications to ﬁsheries management and marine ecosystem
research.

Many developed models provide exact or approximate solutions with harmonic time
dependence for the general problem of acoustic scattering by spheroids which have been
extensively applied to several aquatic organisms and objects inmersed in the ocean [4, 5, 6].
Both for soft and rigid scatterers, computational implementations of approximate solutions
have been published for either near or far-ﬁeld conditions.

However, less attention has received the case of liquid spheroidal scatterers till 1964
when the corresponding analytical solution for the oblate case was published for the ﬁrst
time [7]. Three years later numerically computed results of the scattered wave radiation

1

patterns were reported only for a particular case of sound speed ratio, c0/c1 = 1, being
c0 and c1 are the sound speed in the medium and the ﬂuid prolate spheroid, respectively
[8]. In 1988 Furusawa [4] numerically computed an approximate solution for the acoustic
backscattering patterns by liquid prolate spheroids for speciﬁc cases when the sound speed
and density ratios verify c0/c1 ≈ 1 and ρ0/ρ1 ≈ 1. Several authors have used approximate
solutions in the last years [9, 10]. More recently, another reference [11] considers the general
case c0 (cid:54)= c1 and ρ0 (cid:54)= ρ1 but only for spheroids with low eccentricity. In contrast with such
quite widespread approximate solutions, this paper addresses an analytical approach; it
provides a numerical implementation of an exact solution for a liquid spheroidal scatterer.
Mathematically, the problem of acoustic scattering of plane waves with harmonic de-
pendence consists in solving Helmholtz equation in an unbounded domain with Sommerfeld
radiation condition at inﬁnity. The domain where propagation takes place is characterised
by density and sound speed values ρ0 and c0, respectively, while ρ1 and c1 are the cor-
responding density and sound speed values of an object inmersed in that medium that
is responsible of the scattered ﬁeld. Diﬀerent boundary conditions must be veriﬁed for
the medium-object interface according to the type of scatterrer considered, namely, gas-
ﬁlled (Dirichlet’s boundary conditions), rigid (Neumann b.c.) or liquid. The solution of the
scalar wave equation strongly depends on the object’s shape and there exist exact solutions
only for a few cases. When the object is a sphere, the canonical case, the exact solution is
based on an expansion in spherical wave functions [12]. For scatterers of spheroidal shape,
the exact solution can be expanded on prolate (or oblate) spheroidal wave functions as a
result of applying separation of variables to Helmholtz equation expressed in spheroidal
coordinates [13, 14].

As far as the authors are aware, for the ﬁrst time in this paper a new computer imple-
mentation based on the exact solution for liquid spheroids valid for any value of eccentricity
and arbitrary c0, c1, ρ0, ρ1, is provided. The implementation of this solution was devel-
oped using recently available computational code by Adelman et al.
[15] (which will be
called AGD software from now on) together with a high level layer code implemented in
the Julia programming language [16].

As it is well known, for many cases of interest (e.g. ka (cid:29) 1, being k the wave number
and a a typical longitudinal dimension of the scatterer) computation of spheroidal wave
functions requires precision beyond the one provided by hardware ﬂoating point numbers
[17](currently 64 bits in the consumer market). In fact, the AGD code implements ﬂoating
point arbitrary precision through the use of a specialized C++ library. The Julia language
is a relatively new free programming language with some features that make it especially
attractive for the implementation of the spheroidal wave function related code, that is
the possibility of having ﬂoating point arbitrary precision arithmetic and algebra, both
features built in right out of the box. On the other hand, its calculation speed compared to
other high-level equivalent computational environments constitutes a very advantageous
feature.

This paper is structured as follows. In Section 2 the analytical exact solution is red-
erived. Basically, it is a refurbished derivation that closely follows the previous work by
Yeh [7] but contemplating both cases, prolate and oblate, and correcting some minor typos.
This section provides the basis for subsequent formulation and establishes the nomencla-
ture that is used in the whole article. Section 3 is the core of the work, namely, the
algorithmic procedure of the coeﬃcient’s calculation. Section 4 shows far-ﬁeld patterns in
the limiting cases when the liquid solution tends to the Dirichlet and Neumann solution
and when the spheroid tends to sphere. Computations of near-ﬁeld are also carried out.
On the other hand, a comparison with previous published results is made. In Section 5,

2

the computational implementation of the numerical solution under the Julia idiosincracy
is described as well as a brief explanation on the sintaxis of the presented computational
code is given. Finally, the conclusions of the work are summarized in Section 6.

2 Analytical exact solution

When acoustic scattering by spheroids is considered, it is convenient to use a spheroidal
curvilinear coordinate system (ξ, η, ϕ) [13]. The relationship between the prolate spheroidal
coordinates and the Cartesian coordinates, is given by the following transformation [15]:



x =

y =

[(ξ2 − 1) (1 − η2)]1/2 cos ϕ

[(ξ2 − 1) (1 − η2)]1/2 sin ϕ

d
2

d
2

z =

d
2

ξ η,

where d is the interfocal distance of the ellipse of major semi-axis a = (d/2) ξ and minor
semi-axis b = (d/2) (ξ2 − 1)1/2 (See Figure 1). The values for the three prolate spherical
coordinates must lie between the following bounds:

1 ≤ ξ, − 1 ≤ η ≤ 1, 0 ≤ ϕ < 2π.

The prolate spheroidal coordinate ξ-range of variation is directly associated with the
shape of the spheroid, ranging from ξ = 1 (corresponding to the segment of length d
between both spheroid foci) to ξ tending to ∞ (corresponding to a sphere of radius a = b).
The surface of the prolate spheroid coincides with the coordinate surface given by equation
ξ = ξ0, with ξ0 = (1 − (b/a)2)−1/2 and d = 2(a2 − b2)1/2.

Figure 1: Prolate (left) and oblate (right) coordinate system and related conventions.

On the other hand, the relationship for oblate spheroidal coordinates is given by



x =

y =

[(ξ2 + 1) (1 − η2)]1/2 cos ϕ

[(ξ2 + 1) (1 − η2)]1/2 sin ϕ

d
2

d
2

z =

d
2

ξ η,

3

where coordinates ranges are

ξ ≥ 0 ,

−1 ≤ η ≤ 1 ,

0 ≤ ϕ < 2π ,

and the surface of the oblate spheroid coincides with the coordinate surface given by
equation ξ = ξ0 where ξ0 = ((a/b)2 − 1)−1/2.

For harmonic wave ﬁelds propagating in an unbounded medium, the acoustic pressure
exterior and interior to a prolate (oblate) spheroidal surface of a liquid scatterer inmersed
in that medium is governed by Helmholtz equation
∇2p + k2p = 0,

which is separable in prolate (oblate) spheroidal coordinates. Thus, the problem of solving
a partial diﬀerential equation in an unbounded domain with the Sommerfeld radiation at
inﬁnity is reduced to solving two ordinary diﬀerential equations for radial and angular
prolate (oblate) spheroidal functions, R(ξ) and S(η), respectively [1, 7, 15, 18].

At this point is worth noting that letting

ξ → iξ

and

h0 = (d/2)k0 → −ih0,

(1)

provides a direct transformation from the prolate to the oblate case [15, 18]. their cor-
responding solutions to the oblate respective ones [15, 18]. Therefore, from now on all
mathematical expressions are valid for the liquid prolate spheroid and can be easily trans-
formed to the oblate spheroid through the given conversion rule.

An incident plane acoustic wave on a prolate (oblate) spheroid, with angular frequency
ω and wave number k0 = ω/c0, is schematically illustrated in Figure 1, including both
prolate and oblate coordinate systems used in this paper.

Without loss of generality, due to the simmetry of revolution around the z axis, the

acoustic pressure corresponding to an incident plane wave can be written as

pi = p0 exp(i (cid:126)k0 · (cid:126)r),

where (cid:126)k0 = k0(sin θi, 0, cos θi), the amplitude p0 is a real number and θi is the incident
angle measured as indicated in Figure 1. This expression can be expanded on prolate
spheroidal functions [19] so that at an arbitrary ﬁeld point (cid:126)r = (cid:126)r(ξ, η, ϕ) ,

pi((cid:126)r) = 2p0

in m
Nmn

Smn(h0, cos(θi)) Smn(h0, η) R(1)

mn(h0, ξ) cos(mϕ)

(2)

(cid:88)

(cid:88)

m≥0

n≥m

where the subscripts m, n are natural numbers, Smn are the angular spheroidal wave
functions, R(1)
mn are the radial spheroidal wave functions of ﬁrst kind, i is the imaginary
complex unit (i2 = −1), m is the Neumann factor, deﬁned as m = 2 if m (cid:54)= 0 and m = 1
if m = 0, the parameter h0 is deﬁned as h0 = (d/2)k0 and Nmn are the norms, given by

(cid:90) 1

−1

Nmn =

S2

mn(h0, η) dη.

The analytical solutions for the scattered and transmitted acoustic pressure, ps((cid:126)r) and

pt((cid:126)r), respectively, can be expressed as,

(cid:88)

(cid:88)

m≥0

n≥m

ps((cid:126)r) = 2p0

inAmn

m
Nmn

Smn(h0, cos(θi)) Smn(h0, η) R(3)

mn(h0, ξ) cos(mϕ),

(3)

4

(cid:12)(cid:12)(cid:12)(cid:12)ξ=ξ0
∞(cid:88)
(cid:82) 1−1 S2

(cid:96)=m

as

(cid:34)

ρ1
ρ0

(cid:34)

∞(cid:88)

(cid:88)

(cid:88)

m≥0

n≥m

inBmn

m
Nmn

pt((cid:126)r) = 2p0

Smn(h0, cos(θi)) Smn(h1, η) R(1)

mn(h1, ξ) cos(mϕ).

(4)

The subscripts 0 and 1 (see Figure 1) refers to the surrounding medium and to the
interior of the prolate spheroidal liquid obstacle, respectively, and Amn and Bmn are the
unknown expansion coeﬃcients. Precisely, the key point of this work, is to determine
them applying appropriate boundary conditions at the medium-inmersed liquid spheroid
interface, that means to apply for the continuity of the pressure and the normal component
of media particle velocity at the boundary, given by ξ = ξ0. In symbols,

(pi + ps)|ξ=ξ0 = pt|ξ=ξ0
∂pt
∂ξ

1
ρ1

∂ξ

=

∂(pi + ps)

1
ρ0

(cid:12)(cid:12)(cid:12)(cid:12)ξ=ξ0

.

(5)

(6)

With the purpose of enabling the computation of the Amn and Bmn coeﬃcients,
included in Equations (3) and (4), it is convenient to expand Smn(h0, η) in terms of
{Sm(cid:96)(h1, η)}

where

α(m)
n(cid:96) =

Smn(h0, η) =

α(m)
n(cid:96) Sm(cid:96)(h1, η),

(cid:82) 1−1 Smn(h0, η)Sm(cid:96)(h1, η)dη

(7)

.

m(cid:96)(h1, η)dη

Substituting of Equation (7) in the left-hand side of Equations (5) and (6) and using
the orthogonality properties of the family {Smn(h1, η) cos(mϕ) : m ≥ 0, n ≥ m} lead to a
matricial system involving the Amn and Bmn coeﬃcients.

Deﬁning the Q(m)

n(cid:96) matrix and f (m)

(cid:96)

n(cid:96) = in 1
Q(m)
Nmn
∞(cid:88)

α(m)
n(cid:96) Smn(h0, cos(θi))

R(3)(cid:48)
mn (h0, ξ0)R(1)
R(1)(cid:48)
m(cid:96) (h1, ξ0)

m(cid:96)(h1, ξ0)

− R(3)

mn(h0, ξ0)

in 1
Nmn

α(m)
n(cid:96) Smn(h0, cos(θi))

(cid:96) = −
f (m)
where the ξ derivative is indicated with a prime (i.e. (cid:48) ≡ d/dξ), it can be shown that the
Amn, with (n = m, m + 1, ..), verify

m(cid:96)(h1, ξ0)

mn(h0, ξ0)

− R(1)

ρ1
ρ0

n=0

,

R(1)(cid:48)
mn (h0, ξ0)R(1)
R(1)(cid:48)
m(cid:96) (h1, ξ0)

(cid:35)

,

(cid:35)

n Q(m)
A(m)

n(cid:96) = f (m)

(cid:96)

(cid:96) = m, m + 1, ...

(8)

n=m

where m is indicated as superscript to emphasize the fact that for each ﬁxed m, the left
hand side of Equation (8) is a standard product of a row vector (A(m)
n , . . . )
and a matrix Q(m)
n(cid:96) while the right side is a row indexed by (cid:96). For each m = 1, 2, ..., the
system (8) can be solved with standard and well known computational algebra tricks as
it is shown in the next section.

m+1, . . . , A(m)

m , A(m)

After having computed the Amn, it follows that the other coeﬃcients Bmn, associated

to the transmitted waves, can also be calculated as

∞(cid:88)

n=m

Bm(cid:96) =

in−(cid:96) Nm(cid:96)
Nmn

α(m)
n(cid:96)

Smn(h0, cos(θi))
Sm(cid:96)(h0, cos(θi))

5

(cid:34)

(cid:35)

R(1)

mn(h0, ξ0) + Amn R(3)

mn(h0, ξ0)

R(1)

m(cid:96)(h1, ξ0)

.

(9)

In the far-ﬁeld limit it can be shown [7] that

ps(r, θ, ϕ) ≈ p0

eik0r

r

f∞(θ, ϕ),

where r, θ, ϕ are the spherical polar coordinates of the observation point and

f∞(θ, ϕ) =

2
ik0

Amn

m
Nmn

Smn(h0, cos(θi)) Smn(h0, cos(θ)) cos(mϕ)

is the so called far-ﬁeld scattering amplitude function which is widespread used in diﬀerent
acoustic scattering applications.

3 Algorithmic procedure

The numerical computation of the Amn and Bmn coeﬃcients starts with a truncation
procedure. The series in Equation (8) is truncated at M , so that for each value of m,
there are M − m + 1 unknown A(m)
n , where index n takes natural values in the interval
[m, M ]. Thus, A(m)

satisﬁes the linear system

n

n Q(m)
A(m)

n(cid:96) = f (m)

(cid:96)

(cid:96) = m, m + 1, .., M

(10)

n=m

where A(m) and f (m) are row arrays ∈ C1×(M−m+1) and Q(m) is a matrix ∈ C(M−m+1)×(M−m+1).

The successive matricial systems obtained as a consequence of truncation, Equation

(cid:88)

m≥0
n≥m

M(cid:88)

(10), are

• for m = 0,

(cid:16)

A(0)
0 , A(0)

1 , .., A(0)

M

• for m = 1,

(cid:16)

A(1)
1 , A(1)

2 , .., A(1)

M

(cid:17)

(cid:17)

• . . .
• for m = M − 1,

(cid:16)

0,1

Q(0)
0,0 Q(0)
Q(0)
1,0 Q(0)
...
...
M,0 Q(0)
Q(0)

1,1

M,1

1,2

1,1 Q(1)
Q(1)
2,1 Q(1)
Q(1)
...
...
Q(1)
M,1 Q(1)

2,2

M,2



(cid:17)(cid:32)

6

 =
 =

(cid:16)

(cid:16)

f (0)
0 , f (0)

1 , .., f (0)

M

f (1)
1 , f (1)

2 , .., f (1)

M

0,M

1,M

··· Q(0)
··· Q(0)
...
. . .
··· Q(0)

M,M

1,M

2,M

··· Q(1)
··· Q(1)
...
. . .
··· Q(1)

M,M

(cid:17)

(cid:17)

(11)

(12)

(13)

A(M−1)
M−1 , AM−1

M

Q(M−1)
M−1,M−1 Q(M−1)
M−1,M
Q(M−1)
Q(M−1)
M,M−1

M,M

(cid:33)

(cid:16)

=

(cid:17)

f (M−1)
(M−1) , f (M−1)

M

• and ﬁnally, for m = M ,

A(M )
M Q(M )

M,M = f (M )
M .

In summary, the algorithm calculates the Q(m) matrix and f (m) array using the AGD
software at each step (indexed by m) and solves each linear system induced by them at
the Julia layer level in order to get the A(m)
coeﬃcients are
easily calculated from Equation (9).

coeﬃcients. Then, the B(m)

n

n

4 Numerical results

4.1 Veriﬁcation for extreme cases in the far-ﬁeld approximation
Algorithm veriﬁcation was conducted via evaluation of the exact solution for |f∞|, obtained
through the implemented codes for a liquid prolate (oblate) spheroidal scatterer, against
known results valid in some extreme cases (such as spheroid tending to a sphere, Dirichlet
and Neumann boundary conditions at the medium-spheroid interface).

A liquid spheroid approaching a sphere, with major semi-axis a = 1 and minor semi-
axis b = 0.99, is assumed in order to compare the results predicted by the implemented
codes with the classical solution for plane wave acoustic scattering by a liquid sphere [20].
Two diﬀerent incident directions are considered, given by the line that contains both focis
of an oblate spheroid (i.e. ˆx incidence) and of a prolate spheroid (i.e. ˆz incidence), in
agreement with the coordinate system shown in Figure 1. The sphere has a reference
radius a = 1. Calculations were made for k0 = 5, k1 = 3, ρ1/ρ0 = 3. Plottings of the
scattering patterns obtained with the implemented numerical codes for liquid prolate and
oblate spheroidal scatterer tending to coincide with the corresponding spherical scatterer
are shown in Figure 2.

Figure 2: The absolute value of the oblate and prolate far-ﬁeld scattering amplitude func-
tion |f∞| tends to the absolute value of the sphere far-ﬁeld scattering amplitude function
when b → a. The ˆx incidence (left) and the ˆz incidence (right) are shown.

Furthermore, tests were made to verify that the exact solution implemented for a
liquid spheroids tends to the known results for impenetrable spheroids, modelling the
latter scattererss through extreme density ratios in the former ones. For soft or gas-ﬁlled
spheroid (or what is equivalent, Dirichlet case) [4, 5, 15], a density ratio ρ1/ρ0 = 1/1000
was assumed, whereas ρ1/ρ0 = 1000 was used to evaluate the rigid spheroid (equivalent to

7

0.511.523021060240902701203001503301800SphereOblateProlate0.511.523021060240902701203001503301800SphereOblateProlateNeumann case) [1, 15]. Computations were made for semi-axis values a = 1, b = 0.25 and
for an arbitrary incidence angle, θi = 2π/3. Results are exhibited in Figures 3 and 4. It
can be observed there that in the limit of low density contrast, results for both spheroids
tend to reproduce the Dirichlet case (Figure 3) while in the limit of high density contrast,
they tend to reproduce Neumann case (Figure 4). Moreover, to illustrate intermediate
scatterers’ types, patterns for moderate density contrasts (ρ1/ρ0 = 3) are shown.

Figure 3: The form function |f∞| with two cases of the density ratio and the Dirichlet
case. Prolate (left) and oblate (right) cases.

Figure 4: The form function |f∞| with two cases of the density ratio and the Neumann
case. Prolate (left) and oblate (right) cases.

4.2 Near-ﬁeld results

Computation of the Amn and Bmn coeﬃcients is necessary to obtain the scattered and
transmitted acoustic pressures ps((cid:126)r) and pt((cid:126)r) according to Equations (3) and (4).

The total acoustic pressure at a ﬁeld-point (cid:126)r is equal to the the sum of incident and
scattered acoustic pressures if (cid:126)r is outside the liquid spheroid, or to the transmitted ﬁeld
if (cid:126)r is inside it, i. e.

(cid:26)

ptotal((cid:126)r) =

ξ((cid:126)r) ≤ ξ0
ξ((cid:126)r) > ξ0

if
if

pt((cid:126)r)

pinc((cid:126)r) + ps((cid:126)r)

8

0.511.53021060240902701203001503301800r1/r0=1/1000r1/r0=3Dirichletρρρ0.511.522.53021060240902701203001503301800r1/r0=1/1000r1/r0=3Dirichletρρρρ0.20.40.63021060240902701203001503301800r1/r0=1000r1/r0=3Neumannρρρρ0.511.523021060240902701203001503301800r1/r0=1000r1/r0=3NeumannρρρρCalculations are held for a prolate spheroid with semiaxes a = 2, b = 1, density ratio
ρ1/ρ0 = 1.5 and wave numbers k1 = 1, k0 = 1.5. Results for the real part of the incident
acoustic pressure pi and the absolute value of total and scattered acoustic pressures are
shown in Figure 5 for the Cartesian planes z = 0 and y = 0. Computed total acoustic
pressure veriﬁes the continuity required by the boundary conditions at the interface ξ = ξ0
as it is visually illustrated in Figure 5 (b) and (c).

Figure 5: (a) Real part of incident acoustic pressure, Re(pi), at the Cartesian planes z = 0
and y = 0. (b) Absolute value of total acoustic pressure, |ptotal|, at z = 0. (c) Absolute
value of total acoustic pressure, |ptotal|, at y = 0. (d) Absolute value of scattered acoustic
pressure, |ps|, at z = 0 and y = 0. Assumed values: a = 2, b = 1, density ratio ρ1/ρ0 = 1.5,
wave numbers k1 = 1, k0 = 1.5 and incidence angle θi = π/2.

4.3 Comparison with reported results

Among the relatively great number of publications addressing the acoustic scattering by
penetrable spheroids, such as ﬂuid spheroids inmersed in a ﬂuid surrounding medium,
there is an article [11] that reports an analytical solution of the scattered pressure ﬁeld for
ρ1/ρ0 (cid:54)≈ 1, k1/k0 (cid:54)≈ 1 and small values of eccentricity e (i.e. e = d/(2a) (cid:28) 1). In that paper
a shape perturbation method is used to express the scattered pressure in terms of spherical
wave functions, instead of spheroidal ones. Hence, approximate expressions are presented
for any value of e as a product of the scattering pressure by a sphere and a polynomial
in even powers of e till O(e6). Moreover, in that reference some calculated expansion
coeﬃcients are presented in a Table for ρ1/ρ0 = 1.22, k0/k1 = 1.27 and a/λ0 = 0.9, being
λ0 the acoustic wavelength in the medium. Those computed values lead to forward and
backscattering cross-sections, σf and σb, plotted in Figures 5 an 6 of the same paper that
can be compared with the corresponding results of the exact solution for |f∞|, obtained

9

Figure 6: Comparison between exact solution and analytical approximation previously
published for prolate spheroids with diﬀerent kinds of excentricity e. Normalized back-
scattering cross section (left) and forward-scattering cross section (right). Both are nor-
malized by λ0, the wavelength in the medium.

through the codes implemented here for a liquid prolate spheroidal scatterer, given the
relationships

σf = 4π|f∞(θi, ϕi)|2
σb = 4π|f∞(π − θi, ϕi + π)|2

in far-ﬁeld conditions.

Comparison between normalized backscattering and forward scattering cross-sections
(i.e. σ/λ2
0) predicted by the approximate solution [11] and the exact one computed through
the implementation presented here is shown in Figure 6. Good agreement is achieved for
the forward scattering case while the agreement gets worse for increasing eccentricity
when backscattering is considered. For e = 0.4 (i.e. b/a > 0.9, which is quite close to
be a spherical shape), σb takes undesirable negative values at incident angles greater than
54◦, which has no physical sense whereas the exact solution predicts positive values as
expected.

5 Routines’ sintaxis

The provided routines for far-ﬁeld patterns computation when plane acoustic waves incide
on prolate or oblate spheroids were developed in Julia programming language, which
has a MATLAB-like sintaxis, so that MATLAB and Octave users are expected to get
easily familiarized with it. They can be freely downloaded from a GitHub repository
https://github.com/elavia/liquid spheroid as a ZIP ﬁle or as individual ﬁles and
they can be directly executed from the Julia REPL interface.

The material loaded in the repository is organized in two folders, namely, Linux and
Windows, since the routines have been implemented for both operative systems. They were
developed and tested in Julia 0.5 under Fedora Linux and in Julia 0.4 under Windows 7,
respectively. For ensuring their correct functionality, previous installation of Julia’s GSL
package (Julia implementation of the GNU Scientiﬁc Library) is required1.

The ﬁles JUL.routines.jl and JUL.auxiliar.jl contain the main and auxiliary
functions for the expansion coeﬃcients and the far-ﬁeld patterns calculations. Several

1In most cases it is enough to type Pkg.add(’’GSL’’) at the Julia’s prompt.

10

09182736455463728190−0.2−0.15−0.1−0.0500.050.10.150.20.25θi(deg)σb/λ02e=0.0(approx.)e=0.0 (exact)e=0.2 (approx.)e=0.2(exact)e=0.3 (approx.)e=0.3 (exact)e=0.4 (approx.)e=0.4 (exact)0918273645546372819030354045505560657075θi(deg)σf /λ02e=0.0(approx.)e=0.0 (exact)e=0.2 (approx.)e=0.2(exact)e=0.3 (approx.)e=0.3 (exact)e=0.4 (approx.)e=0.4 (exact)Julia scripts reproducing the results presented in Section 4.1 are also provided. Their
names were chosen so that they are related to their particular purpose. Hence, it is not
a surprise for example that script.oblate liquid.jl provides the pattern for an oblate
spheroid in the liquid case.

The AGD executable ﬁles obl sphwv and pro sphwv constitute the numerical engine
for the calculation of the spheroidal wave functions inside Julia routines and they are called
through specialized shell scripts (.sh ﬁles, under Linux) and batch ﬁles (.bat ﬁles, under
Windows). Those executable ﬁles were taken from the scattering-master/spheroidal/sphwv
directory in the AGD software source tree and they can be downloaded from the authors’
site at https://github.com/radelman/scattering.

For a detailed description of the AGD software and the subtleties in the calculation
of spheroidal wave functions, the reader is referred to the original reference that par-
tially inspired this work [15]. The parameters conﬁguration for the AGD software exe-
cution inside the Julia routines has been done trough the text ﬁles obl.parameters and
pro.parameters. In these ﬁles safe values of the parameters were taken in order to ensure
reliable results. It is remarkable that input selection associated with extreme cases, such
as high frequency, may lead to an unpredicted behaviour, whose comprehension requires
deeper understanding of the AGD code. However, these cases are far beyond the scope of
this work.

The ﬁrst step to begin working with the code, once the Julia environment is properly
installed, is to download the routines from the authors’ repository, uncompress them in a
directory and start the Julia REPL interface from that directory. Then, main and auxiliary
functions must be loaded at the Julia’s prompt through the script JUL.main.jl, before
any other script is run. Afterwards all the routines are available in the current workspace
and can be called from the prompt.

In order to illustrate and clarify the routines’ operation, an example session is pre-

sented. First, the routines are loaded through the inclusion of the main script, i.e.

julia > include("JUL.main.jl") ;

Therefore, the routines are in the workspace and it is now possible, for example,
to calculate the far-ﬁeld pattern |f∞| in the liquid case for a prolate spheroid. This is
accomplished with the command

julia > include("script.prolate_liquid.jl") ;

The pattern is saved in a ﬁle called Out.Pattern.dat within the current directory. The
data format in this ﬁle is: angle (in radians) and absolute value of the f∞ (in arbitrary
length units compatible with the ones used for a, b, k). The computing elapsed time is
strongly dependent on the computer’s speed and the parameters set in the AGD software.
All the provided scripts save the results in the same ﬁle so that the content is overwritten
each time. Scripts output can be plotted with any plotting software (In particular, the
plots in this work were made using MATLAB and Gnuplot).

The scripts have a section of user-deﬁned parameters. In the above mentioned example,

script.prolate liquid.jl contains

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# User configurable parameters
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11

# Physical parameters
rho10 = 5.00 ; # Density ratio
k_0 = 4 ; # Wave number in media 0
k_1 = 6 ; # Wave number in media 1
a = 1 ; # Major semiaxis spheroid
b = 0.99 ; # Minor semiaxis spheroid
theta_inc = pi/4 ; # Incidence angle (rad)

# Software parameters
M = 8 ;
method = 2 ;
delta_eta = 0.005 ;

The meaning of the physical parameters, namely, ρ10, k0, k1, a, b, θi is evident from
the explicative text after the commentary character #. The software parameters section
includes parameters related to the spheroidal wave calculation. The M parameter is the
maximum value taken by m in the coeﬃcients Amn, Bmn and is directly associated to
the total number of the coeﬃcients to be calculated. For instance, M = 8 value means a
total of (M + 1)(M + 2)/2 = 45 coeﬃcients. The method parameter refers to the type
of calculation (method = 1 is convenient for ξ (cid:29) 1 and method = 2 for ξ ∼ 1). Finally,
delta_eta is the step on the η-grid and as a consequence of the inequality −1 ≤ η ≤ 1,
that value leads to a 2/delta_eta grid size.

6 Conclusions

A novel implementation of the exact analytical solution for the problem of acoustic scat-
tering by liquid prolate and oblate spheroids governed by Helmholtz equation is presented.
A set of computational routines to calculate the expansion coeﬃcients appearing in the
mathematical expressions of the scattered and transmitted acoustic pressures is provided.
These routines are freely available from the authors’ GitHub repository. The coeﬃcients’
computation is precisely the most cumbersome task related to numerical calculation of the
mathematical expressions above mentioned.

The results predicted by the computational implementation were tested for the geo-
metrical limit when both spheroids, prolate and oblate, tend to the sphere and for the
physical limit when they tend to soft or rigid spheroidal scatterers, taking low and high
values of dentisities ratios, respectively. In the latter two cases predicted results turn out
to be compatible with expected ones for Dirichlet and Neumann boundary conditions.

Additionaly, it has been qualitatively veriﬁed, trough the calculation for near-ﬁeld
conditions, that the numerical solution satisﬁes the boundary condition at the surface of
the spheroids. The implemented exact solution has been succesfully compared against a
previously reported approximate solution and extended to eccentricity ranges where the
approximation does not work properly.

With the aim of generating the provided computational codes, the eﬃcient software by
AGD was used in addition to the numerical capabilities of the new scientiﬁc programming
language Julia. Thus, it was possible to take advantage of the arbitrary ﬂoating point
precision support in both pieces of code. Furthermore, scripts to reproduce the calculations
presented in Section 4.1 are also provided to enable a minimum consistency check.

The developed codes are released intending to contribute with researchers working in
acoustic scattering by simplyﬁng the tedious algorithmic task involved in the resolution of

12

the cumbersome matricial system when calculating the exact solution for a liquid spheroid
scatterer.

Acknowledgements

This work was supported by the PIDDEF Program of the Argentinian Ministry of Defense
(13-2014), the Argentinian Navy and the National Council for Scientiﬁc and Technical
Research (CONICET).

The authors wish to remark once more the outstanding piece of software that Adelman
and his collaborators have made freely available to the scientiﬁc community. It was a real
pleasure to work with it. Of course, the same applies to Julia programming language.
Moreover, they acknowledge the work of the programmers’ team that have designed and
implemented that language. It is marvelous. With both they are in debt.

References

[1] R. Spence and S. Granger, The scattering of sound from a prolate spheroid, The Journal

of the Acoustical Society of America 23 701–706, (1951).

[2] A. Silbiger, Scattering of sound by an elastic prolate spheroid, The Journal of the

Acoustical Society of America 35 564–570, (1963).

[3] D. S. Burnett, Radiation boundary conditions for the Helmholtz equation for ellip-
soidal, prolate spheroidal, oblate spheroidal and spherical domain boundaries, Journal
of Computational Acoustics 20.04 (2012): 1230001.

[4] M. Furusawa, Prolate spheroidal models for predicting general trends of ﬁsh target

strength, Journal of the Acoustical Society of Japan (E) 9 13–24, (1988).

[5] I. S. Prario, J. D. Gonzalez, A. Madirolas, S. Blanc, A Prolate Spheroidal Approach for
Fish Target Strength Estimation: Modeling and Measurements, Acta Acustica united
with Acustica 101 5 928–940, (2015).

[6] J. M. Jech, J. K. Horne, D. Chu, D. A. Demer, D. T. Francis, N. Gorska, B. Jones et
al, Comparisons among ten models of acoustic backscattering used in aquatic ecosystem
research , The Journal of the Acoustical Society of America 138 3742–3764, (2015).

[7] C. Yeh, The diﬀraction of sound waves by penetrable disks, Annalen der Physik 468(1-

2) 53-61, (1964).

[8] C. Yeh, Scattering of acoustic waves by a penetrable prolate spheroid. I. Liquid prolate

spheroid, The Journal of the Acoustical Society of America 42(2) 518-521 (1967).

[9] N. Gorska and D. Chu, Some aspects of sound extinction by zooplankton, The Journal

of the Acoustical Society of America 110(5) 2315-2325, (2001).

[10] Y. Tang, Y. Nishimori and M. Furusawa The average three-dimensional target strength
of ﬁsh by spheroid model for sonar surveys, ICES Journal of Marine Science Journal
du Conseil 66 1176–1183, (2009).

[11] A. D. Kotsis and J. A. Roumeliotis, Acoustic scattering by a penetrable spheroid,

Acoustical Physics 54 (2), 153-167, (2008).

13

[12] V. C. Anderson, Sound scattering from a ﬂuid sphere, The Journal of the Acoustical

Society of America 22 (4) 426–431, (1950).

[13] P.M. Morse and H. Feshbach, Methods of Theoretical Physics (McGraw Hill Book

Company, New York, 1953).

[14] E. Skudrzyk, The Foundations of Acoustics (Springer-Verlag, Berlin, 1970).

[15] R. Adelman, N. A. Gumerov, R. Duraiswami, Software for Computing the Spheroidal
Wave Functions Using Arbitrary Precision Arithmetic, arXiv:1408.0074v1 [cs.MS],
(2014).

[16] J. Bezanson, A. Edelman, S. Karpinski, V. B. Shah, Julia: A fresh approach to

numerical computing, arXiv:1411.1607v3 [cs.MS] , (2014).

[17] A. L. Van Buren, J. E. Boisvert, Accurate calculation of prolate spheroidal radial
functions of the ﬁrst kind and their ﬁrst derivatives, Quarterly of Applied Mathematics
60 (3) 589–599, (2002).

[18] A. N. Lowan, Spheroidal Wave Functions in Handbook of Mathematical Functions,
M. Abramovitz and I. A. Stegun [Eds.], 751–759,(Dover Publications Inc. New York,
1972).

[19] C. Flammer, Spheroidal Wave Functions, (Standford University press, Standford,

California, 1957).

[20] R. Hickling, Analysis of echoes from a solid elastic sphere in water, The Journal of

the Acoustical Society of America, 34(10), 1582-1592, (1962).

14

