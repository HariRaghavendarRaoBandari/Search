6
1
0
2

 
r
a

M
7

 

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
9
2
3
2
0

.

3
0
6
1
:
v
i
X
r
a

A multigrid approach for FISTA-TV with application to

limited-view photo-acoustic tomography

Ashkan Javaherian and Sean Holman

School of Mathematics, University of Manchester

March, 2016

Abstract

We propose a multi-grid version of the well-known FISTA inverse solver for minimiza-
tion of composite objective functions with nonnegativity constraint. The eﬀectiveness
of the proposed algorithm is presented for iterative image reconstruction in the photo-
acoustic tomography problem. The results show the great potentials of the proposed
approach in expediting the convergence of iterates. Unlike existing multi-grid inverse
solvers, which are eﬀective solely for iterates far from the true solution, our proposed
algorithm converges well in the proximity of the true solution as well via suppressing the
inherent oscillations of iterates of FISTA around the true solution.

Key words— photo-acoustic tomography, multi-grid, FISTA

1 Introduction

Photo-acoustic Tomography (PAT) is a hybrid technique for imaging small animals or su-
perﬁcial tissues in humans, which simultaneously takes advantage of high contrast attributed
to optical imaging and rich spatial resolution brought up by ultrasound [35, 29]. Typically
near-infrared pulses of light are used to irradiate tissue, which are then absorbed preferen-
tially as a function of the optical absorption of the tissue. The absorbed energy produces
local increases in pressure, which move outwards because of the elasticity of soft tissues, and
are then sampled temporally by surface detectors [29].

To estimate the optical absorption distribution of the irradiated tissue from the recorded
surface data, one faces two distinct inverse problems, namely acoustic [40] and optical [35,
37]. To solve the acoustic inverse problem, numerous back-projection methods based on
Green’s functions [23, 27, 9, 20], or frequency-domain techniques [48, 49] have been proposed.
While analytically brilliant, they are practical solely for acoustically homogeneous media with
simple detection surfaces. A robust forward model for inhomogeneous media is the k-space
pseudo-spectral method, which accounts for physical absorption and dispersion, and simply
incorporates perfectly matched layers (PMLs) [36, 39, 38]. The least restrictive inversion
technique for PAT is the time reversal (TR) scheme [40, 25, 24] since it is able to enrich
the reconstruction by all practical considerations incorporated into comprehensive forward
models such as the k-space wave propagator [39, 12].

The TR method is inherently based on a continuous model, and thus requires the detection
surface to be very dense and enclose the object [25, 24]. This is problematic for 3D PAT,

1

especially in medical applications. To circumvent the eﬀects of data incompleteness and
noise, iterative methods are often used, most of which are based on assuming an acoustically
homogeneous and lossless medium [8, 44, 34, 17].

In medical PAT, the compartmentalised distribution of chromophores composing tissues
induces step-like pressure discontinuities within absorbing regions, which makes the generated
waves highly broadband [40]. To cover such a broad range of frequencies in the reconstruction,
very dense grids are needed which make iterative PAT computationally burdensome. To
mitigate this problem, numerous methods were proposed to accelerate the wave propagation
models, which are mostly based on the assumption of a homogeneous lossless medium [15,
28]. By recent advances on data casting and parallelization using graphics processing units
(GPUs), the wave propagation models were accelerated notably for both homogeneous [16, 45]
and inhomogeneous media [39].

Recently a TV-penalized version of Fast Iterative Shrinkage Thresholding Algorithm (FISTA),

referred to here as FISTA-TV, has shown its great potential for iterative PAT thanks to its
better rate of convergence, i.e., O(1/k2), than that of other existing gradient descent methods
such as ISTA, i.e., O(1/k) [3, 2]. The successful applications of this algorithm to homoge-
neous lossless [46], and inhomogeneous and lossy media were reported [26]. To the best of
our knowledge, the study of [26] has given the most robust iterative method in PAT that ac-
counts for the inhomogeneity of the medium’s properties, as well as attenuation and physical
dispersion.

In general, whenever a ﬁnite-dimensional optimization model arises from an inﬁnite-
dimensional continuous problem, it is possible to control the ﬁdelity with which the optimiza-
tion model captures the underlying continuous problem [32]. In case the arising discretized
model is very large-scale, multigrid (MG) schemes, which exploit a hierarchy of discretized
models (levels) of varying size, are very popular. Initially, the rationale behind the MG ap-
proach was to accelerate convergence of iterative methods for solving PDEs by recursively
embedding coarse-grid error corrections, combined with error smoothing (relaxation) steps
on the target grid [6, 41]. Numerous nonlinear versions of this scheme have also been devel-
oped for PDEs, e.g., nonlinear multigrid method (NMGM)[22] or Full Approximation Scheme
(FAS)[6].

Inspired by NMGM and FAS, a technique to apply the MG scheme to unconstrained
smooth optimization problems, called MG/OPT, was proposed, in which the information on
the coarser grid is utilized to compute the search direction on the ﬁner grid [31]. It turns
out that if the MG methods are applied with no safeguards, i.e., search directions with a
ﬁxed step-length or without a line search, the optimization problem may diverge [31, 5]. In
[47], by employing the Wolf-Armijo and Goldstein-like stopping conditions in a backtracking
line search procedure, the global convergence of the proposed algorithm was established. In
[32], a multigrid version of ISTA for minimizing composite convex functions, i.e., the sum of a
smooth convex function and a non-smooth simple convex function, was proposed. However, it
was reported in [32] that the analysis of FISTA in a multigrid framework is more challenging
than the simpler ISTA. These challenges are numerically addressed in our study.

To mitigate the burdensome computational eﬀorts for iterative PAT, a multigrid version
of FISTA-TV is proposed here so that at some iterations a recursive search direction is
replaced via minimizing the objective function at some low-dimensional levels. To maintain
the consistency between the diﬀerent levels, we extend the theory of [31, 47] to composite
objective functions.
In contrast to the study of [32], which is applicable solely when the
proximal map associated with the non-smooth term is simple and gives an explicit solution,

2

our MG framework is numerically eﬃcient for all proximal splitting algorithms, even when the
proximal map is not simple and is solved implicitly or in an iterative manner, e.g., FISTA-TV
[2]. We will show that applying accelerated gradient methods on a multi-grid setting better
converges the iterates in the proximity of the optimal solution than on a ﬁxed grid because of
dampening an unwanted periodicity that naturally arises in the iterates with the progression
of the algorithm (see [18]). We will also show that the existing restarting schemes in the
literature, e.g., [18, 21], are not tolerant enough to suppress this periodicity in ill-posed PAT
problems.

From a numerical point of view, in [31, 32, 47], some criteria depending on varying param-
eters were put forward to adaptively decide between the direct or recursive search directions,
thus making the algorithm very subjective.
In contrast, we implement the MG algorithm
with a ﬁxed structure in a recursive W-cycle form.

This manuscript presents the ﬁrst study, to our knowledge, on multigrid accelerated gra-
dient methods for optimization problems concerning composite convex functions where the
proximal map associated with the non-smooth function is solved implicitly. From a prac-
tical point of view, in comparison to [31, 47, 32], where the MG algorithms were applied
to very simple boundary value problems or deblurring problems, we apply it to an image
reconstruction problem incorporating all physical issues that arise in a real-world setting.

2 Theory

2.1 Forward model

Here the problem describing the propagation of acoustic waves in a lossy medium of vary-
ing sound speed and acoustic density is given by three coupled ﬁrst-order linear acoustic
propagation equations, which are written in the form [40]

∂
∂t
∂
∂t

ρ0(r)

1

ρ0(r)

u(r, t) = −∇p(r, t),
ρ(r, t) = −∇ · u(r, t),

(cid:20)

p(r, t) = c0(r)2

1 + τ (r)

∂
∂t

(−∇2)y/2−1 + η(r)(−∇2)(y+1)/2−1

(cid:21)

ρ(r, t),

(1)

(2)

(3)

with the initial conditions given by

p(r, t)|t=0 = p0(r),

u(r, t)|t=0 = 0.

(4)
Here, p(r, t) denotes the acoustic pressure at time t ∈ R+ and position r ∈ Ω ⊂ Rnd with
nd the dimension of the medium (nd = 2 or 3), u(r, t) is the vector-valued acoustic particle
velocity, c0(r) is the varying sound speed, and ρ(r, t) and ρ0(r) are the acoustic and ambient
densities, respectively. The three bracketed terms in Eq. (3), called the equation of state,
represent the adiabatic equation of state, absorption and dispersion, respectively. Following
a frequency power law described in [40], parameters τ (r) and η(r) are calculated in the form

τ (r) = −2α0c0(r)y−1

(5)
where α0 is the absorption coeﬃcient in dB MHz−y cm−1, and y denotes the power law
exponent. For a lossless medium, the absorption and dispersion terms in the equation of

η(r) = 2α0c0(r)y tan(πy/2)

3

state are neglected. To solve the above equations, the k-space pseudo-spectral method is
often employed [36, 12], and was used in this study. A toolbox for wave propagation based
on this method is freely available on [38].

2.2 Time reversal

The acoustic inverse problem is to estimate the initial pressure p0(r) inside medium Ω from
the measurement pm(rs, t) done at surface rs ∈ S ⊂ Rn−1 from time t = 0 to T . In the time
reversal approach, the time T is chosen to be suﬃciently large so that all waves leave the
medium, giving p(r, T ) = 0 [40]. This is, however, not exactly true for even dimensions or
inhomogeneous media[25, 24]. Accordingly, based on [13], to mitigate the eﬀects of artefact
trapping, no signals are recorded after time 2R/cmin, where R is the radius of the detection
surface, and cmin is the minimum sound speed.

Employing the time reversal method, pm(rs, t) is enforced as a Dirichlet boundary condi-

tion on S in a time-reversed order, yielding

p(rs, t) = pm(rs, T − t),

(6)

where the initial conditions are set to zero inside the medium. It was shown that to account
for the absorption and physical dispersion in the TR approach, the absorption term in the
equation of state must be reversed in sign, while the sign of the physical dispersion term must
remain unchanged [40].

2.3 FISTA on ﬁxed grid

In this manuscript we primarily consider the problem of 3D PAT. The reduction of all formulas
to the 2D case is straightforward. The linear relationship between the initial pressure and
the measured data suggests developing a linear discrete forward model based on the k-space
pseudo-spectral method, and its adjoint based on the TR approach (See [26]). The created
discrete forward model links the initial pressure distribution to the measured data in the form

p = Hp0

(7)
where p0 ∈ E denotes the discrete representation of the sought initial pressure distribution
with E ≡ RNx·Ny·Nz , p ∈ RM is the vector representing the computed pressure ﬁeld on
the sensors in silico, and H is the discrete forward model. The size of the measured data
is M = Ms · Mt, with Ms the number of sensors and Mt the number of temporal steps
t = 0 : (Mt − 1)∆t. For the adjoint H T we use a discrete time reversal described in section
2.2 which mimics the behaviour of the adjoint of the matrix H [26].

To solve the inverse problem, given the measured data ˆp and forward model H, we use
TV-based reconstruction, which seeks to recover the initial acoustic pressure p0 with the
sharpest interfaces as follows.

ˆp0 = argmin

(8)
Here J is the discrete total variation deﬁned below in (11). For simplicity of notation, in the
sequel we denote the sought parameter p0 by x. Considering the discretised space of vector
ﬁelds Y = E × E × E, a discrete gradient operator ∇ : E → Y is deﬁned as

p0(cid:62)0

(cid:107)Hp0 − ˆp(cid:107)2 + 2λJ (p0).

n1,n2,n3, (∇x)2

n1,n2,n3, (∇x)3

n1,n2,n3

(9)

(∇x)n1,n2,n3 =(cid:0)(∇x)1

4

(cid:1),

where

(cid:40)
xn1+1,n2,n3 − xn1,n2,n3
(cid:40)
0
xn1,n2+1,n3 − xn1,n2,n3
(cid:40)
0
xn1,n2,n3+1 − xn1,n2,n3
0

(∇x)1

n1,n2,n3 =

(∇x)2

n1,n2,n3 =

(∇x)3

n1,n2,n3 =

, if n1 < Nx
, if n1 = Nx

, if n2 < Ny
, if n2 = Ny

, if n3 < Nz
, if n3 = Nz

(10)

for dimensions 1, 2 and 3. In problem (8), J (x) is now deﬁned as the discrete total variation
function in the form

J (x) =

|(∇x)n1,n2,n3|,

(11)

(cid:88)

n1,n2,n3

√

where |u| :=
problem (8) is in a class of constrained minimization problems of the form

2 for every u = (u1, u2, u3) ∈ R3.

2 + u2

2 + u3

u1

In a more general form,

argmin

{F (x) := f (x) + g(x), x ∈ E} .

(12)

Here, f : E → R represents f (x) = (cid:107)Hx − ˆp(cid:107)2, which is a continuously diﬀerentiable function

with the smallest Lipschitz constant of the gradient L(f ) = 2(cid:13)(cid:13)H T H(cid:13)(cid:13) satisfying

x

(cid:107)∇f (u) − ∇f (v)(cid:107) (cid:54) L(cid:107)u − v(cid:107) ,

∀u, v ∈ E, L (cid:62) L(f ),

(13)

where

(14)
and g : E → (−∞, +∞] represents g(x) = 2λJ (x) + δC (x), which is a closed, proper, convex,
and non-smooth function, where

∇f (x) = 2H T (Hx − ˆp) ,

(cid:40)

if x ∈ C
0
+∞ if x /∈ C

(15)

δC (x) =

is an indicator function on the closed set

(cid:62) 0, n1 = 1, ..., Nx, n2 = 1, ..., Ny, n3 = 1, ..., Nz} .

(16)

C = {x ∈ E : xn1,n2,n3
(cid:16)

(cid:17)−1(cid:16)

xk = pLk (xk−1) :=

Solving the optimality conditions derived from (12) gives the ﬁxed point iterative scheme

(cid:17)(cid:16)
xk−1(cid:17)
(cid:0)yk(cid:1) instead, where yk+1
is now a speciﬁc linear combination of two previous updates (cid:8)xk, xk−1(cid:9) [3]. Considering a

where ∂g is the sub-diﬀerential of function g. The iterative scheme (17) is in a class of the
so-called backward-forward splitting methods [33], and leads to the Iterative shrinkage thresh-
olding algorithm (ISTA), which converges globally to the minimizer with a rate of O(1/k).
An acceleration to ISTA is provided by FISTA, which computes pL

I − (1/Lk)∇f

I + (1/Lk)∂g

, Lk > 0,

(17)

5

quadratic approximation of F (x) near a given point yk, i.e., QLk
[3, 2]

xk = pLk (yk) = argmin

x

= argmin

x

= argmin

x

(cid:0)x, yk(cid:1), (17) is written as
(cid:13)(cid:13)(cid:13)x − yk(cid:13)(cid:13)(cid:13)2
(cid:19)(cid:13)(cid:13)(cid:13)(cid:13)2(cid:41)

+ g(x)

(cid:27)

(18)

,

QLk

(cid:110)
(cid:26)
(cid:40)

g(x) +

f (yk) + (cid:104)x − yk,∇f (yk)(cid:105) +

(cid:16)

Lk
2

Lk
2

yk − 1

Lk ∇f (yk)

x, yk(cid:17)(cid:111)
(cid:13)(cid:13)(cid:13)(cid:13)x −
(cid:18)
pLk (yk), yk(cid:17)
(cid:16)
(cid:17) (cid:54) QLk
(cid:17)−1
(cid:16)
(cid:13)(cid:13)(cid:13)x − bk(cid:13)(cid:13)(cid:13)2(cid:27)

I + (1/Lk)∂g

g(x) +

(cid:26)

(bk),

Lk
2

x

for any Lk > 0. In [3], it was proven that for any Lk (cid:62) L(f ),

(cid:16)
Lk∇f (yk), and in light of (17) and (18), pLk (yk) is written as the

, ∀yk.

pLk (yk)

(19)

F

Considering bk = yk − 1
proximal map at bk in the form

prox1/Lk (g)(bk) =

(20)

where the proximal map, prox1/Lk , is single valued from E into itself in the form [2, 30]

prox1/Lk (g)(bk) := argmin

.

(21)

In FISTA-TV [2], this proximal map is calculated based on Chambolle’s well-known dual
approach through an iterative algorithm[10]. This iterative scheme for solving (21) will be
detailed in the appendix. We also add, for use later, that the proximal map of the indicator
function δC alone is given by

(cid:16)

(cid:17)−1

prox1/Lk (δC)(bk) :=

I + (1/Lk)∂δC

(bk) = πC(bk),

(22)

where πC(bk) is the Euclidean projection of bk on set C ⊂ E, which is easily calculated by

[πC(bk)]n1,n2,n3 = max{0, (bk)n1,n2,n3} =: (bk)+.

(23)

As opposed to [32], the multigrid method we will propose is agnostic to the method of solving
(21).

In algorithm 1 below we outline FISTA-TV at iteration k. By taking tk = 1, which yields
yk+1 = xk, the iterate behaves analogously to ISTA. Note that this algorithm is performed
at the ﬁne (target) level in the multigrid framework, which will be detailed in section 2.5.

Algorithm 1: FISTA-TV: recurrence at iteration k at the target level
Input: yk, xk−1, Hxk−1, Lk, tk
1. Compute
2. Update

bk ← yk − (1/Lk)∇f (yk)
xk ← prox1/Lk (g)(bk)

6

1+4(tk)2
2

(cid:113)
4. Update tk+1 ← 1+
5. Update θk = tk−1

3. Update f (xk) =(cid:13)(cid:13)Hxk − ˆp(cid:13)(cid:13)2 and F (xk) = f (xk) + 2λJ (xk)
6. Update yk+1 ←(cid:0)1 + θk(cid:1)(cid:0)xk(cid:1) − θk(cid:0)xk−1(cid:1)
7. Update f (yk+1) =(cid:13)(cid:13)(cid:0)1 + θk(cid:1)(cid:0)Hxk(cid:1) − θk(cid:0)Hxk−1(cid:1) − ˆp(cid:13)(cid:13)2
must be calculated via L(f ) = 2(cid:13)(cid:13)H T H(cid:13)(cid:13), which is a very burdensome computation in PAT.

Applying a ﬁxed step-length, 1/Lk, at all iterates, the smallest Lipschitz constant of ∇f

Output: xk, tk+1, Hxk, f (xk), F (xk), yk+1, Hyk+1, f (yk+1)

tk+1

The previous applications of FISTA-TV in PAT were performed using a ﬁxed step-length
[26, 46]. Indeed, the function evaluation in PAT problem is very expensive, which precludes
the application of the backtracking line search in [3] to select adaptively the best step-length
at each iteration. On the other hand, from a theoretical point of view, the convergence of
multigrid optimization schemes is contingent on a precise estimation of the step-length at
each iterate at each level by means of backtracking line search techniques [47, 32].

2.4 Modiﬁcations on FISTA for multigrid PAT problem

2.4.1 Adaptive estimation of Lipschitz constant Lk : Initializing the back-tracking

line search by Barzilai-Borwein Method

In the context of gradient projection algorithms for minimizing functions with simple con-
straints, particular interest has been devoted to the so-called Barzilai-Borwein (BB) approach,
which provides a rough approximation to the secant equation underlying quasi-Newton meth-
ods [1]. This strategy has then been extended to non-smooth optimization, e.g., [19, 21]. Ap-
plying the BB approach, the Hessian is approximated as a multiple of the identity H k = LkI
so that it has similar behaviour to the true Hessian at the previous iterate. Considering

∆gk = ∇f(cid:0)yk(cid:1) − ∇f(cid:0)yk−1(cid:1) and ∆yk = yk − yk−1, Lk is computed in the form

Lk = argmin

L

which gives

(cid:13)(cid:13)(cid:13)(cid:13)∆yk − 1

L

(cid:13)(cid:13)(cid:13)(cid:13)2

∆gk

Lk =

(cid:104)∆gk, ∆gk(cid:105)
(cid:104)∆gk, ∆yk(cid:105) .

,

(24)

(25)

We also tried other variants of the BB approach, particularly the one proposed in [14], which
alternates between two diﬀerent formulas, but the above equation was more successful. To
avoid very small or very large values of L at each iterate, the calculated value is bounded
here by Lmin = 10−2 and Lmax = 102 [19]. Subsequently, the backtracking loop proposed for
FISTA in [3] recursively checks for satisfying (19), which always holds for any Lk (cid:62) L(f ).
Our numerical results show that the initial guess taken by the BB scheme explained above is
almost always large enough to satisfy (19) at the ﬁrst check, at the same time improving the
global convergence relative to the best ﬁxed Lipschitz constant chosen heuristically, in both
ﬁxed grid and multigrid settings.

7

2.4.2 Restarting scheme

Although the acceptance criterion in (19) ensures a monotone convergence for ISTA, i.e.,
F (xk) < F (xk−1), it does not guarantee a monotone behaviour for FISTA yet so that the
algorithm starts to oscillate after some iterations [18, 11, 21]. Inspired by [18], we now apply
a singular value decomposition (SVD) analysis on FISTA for minimizing the unconstrained
smooth function (cid:107)Hx − ˆp(cid:107)2 in order to explain this oscillation, and show how to combat it.
Let the SVD of the forward matrix be given by H = U ΣV T , where Σ is a diagonal matrix
with singular values of H, denoted by si, on the diagonal, and ith columns of matrices U
and V , denoted by Ui and Vi, are the left and right singular vectors of H, respectively. This
gives the gradient ∇f (yk) = V Σ2V T yk − V ΣU T ˆp. Hence, the FISTA algorithm at iteration
k associated with singular value si is written as

(cid:18)

(cid:19)

2

Vi

T xk =

1 − si
Lk
T yk+1 =(1 + θk)Vi

Vi

T yk +
Vi
T xk − θkVi

T yk − si

−1Ui

T ˆp, and wi

k = Vi

si
T ˆp,
Lk Ui
T xk−1.
T xk−1 − si

k = Vi

By considering zi

can be recast in the form(cid:18) wi

(cid:19)

(cid:32) 0

k+1

k+1

zi

=

−θk

−(1 + θk)(1 − si

2

Lk ) ±

r± =

T ˆp, the above formula

2
Lk

1 − si

2
Lk

1 − si

(1 + θk)

(cid:16)
(cid:114)
(1 + θk)2(cid:16)

(cid:19)

.

−1Ui

k

(cid:17) (cid:33)(cid:18) wi
(cid:17)2 − 4θk(cid:16)

zi

k

1 − si

2
Lk

1 − si

2
Lk

(cid:17)

.

(26)

The eigenvalues r of the matrix in this relation are given by the equation

By examining the discriminant we see that these will be real if 0 < θk < θ∗ and complex if
θ∗ < θk < 1 where

θ∗ :=

.

(27)

2

1 −(cid:113) si
(cid:113) si

1 +

2
Lk

2
Lk

It has been asserted in [2] that when FISTA is used to minimize a non-smooth function, such
undemanded oscillations may make the algorithm extremely nonmonotone, or may even cause
it to diverge if the proximal map is solved inexactly, e.g., by the denoising subproblem as we
do in FISTA-TV, which will be described in the appendix. To address this issue, the so-called
MFISTA algorithm was proposed, and was successfully applied to a deblurring problem [2].
We tried MFISTA, but it did not perform well in our problem.
Instead, considering that
θ∗ < 1 and limk→∞ θk = 1, we restart FISTA by tk = 1 whenever θk > θ∗. However, one
problem arises since sensing evolution in modes of θk is not practical. To address this problem,
two criteria were suggested to sense the periodicity of iterates in FISTA. Accordingly, FISTA
is restarted whenever F (xk) > F (xk−1) or (yk − xk)T (xk − xk−1) > 0 (see [18, 21]). According
to our numerical experience, the ﬁrst criterion was more successful in PAT.

8

2.4.3 Outline of the ﬁxed grid algorithm and estimation of cost

We now give an outline of the ﬁxed grid FISTA-TV algorithm involving the backtracking
line-search and the restarting.

Algorithm 2: LOOP: Backtracking and Restarting
Input: ˆp, λ, η > 1, Lmin, Lmax, , maxiter
Initialization: Set y1 = x0 ∈ E, t1 = 1
*
Repeat: Compute at iteration (k (cid:62) 1):
1. Compute ∇f (yk) by (14)
2. Estimate Lipschitz constant by Barzilai-Borwein method

if k = 1 then

Lk ← 1

else

Lk = mid(cid:0)Lmin, Lk, Lmax

Estimate Lk by Eq. (25)

(cid:1)

end if

3. Repeat: Backtracking (inner loop)
Compute xk = pLk (yk) through steps 1 and 2 of algorithm 1
Update F (xk) through step 3 of algorithm 1
if yk, xk, f (yk), F (xk) and Lk satisfy the acceptance criterion in (19) then

else

break 3
Lk ← ηLk
return 3

end if

4. Restarting test
if F (xk) > F (xk−1) then

Reject iteration k by xk ← xk−1
tk ← 1
k ← k + 1

else

end if
5. Compute yk+1, Hyk+1 and f (yk+1) through steps 4, 5, 6 and 7 of algorithm 1

if (k (cid:54) maxiter) ∩(cid:0)(cid:13)(cid:13)xk − xk−1(cid:13)(cid:13) > (cid:1) then

6. Stopping test

else

return *
x∗ ← xk

end if
Output: x∗

9

Since the acceptance criterion in the back-tracking loop is almost always satisﬁed at the ﬁrst
check, the major cost of each iteration is a single computation of forward and reverse models,
as the cost of computation of the denoising problem associated with the non-smooth term is
negligible relative to these forward and backward solvers. In general, the computational cost
of performing the forward and inverse solvers on a grid of size Nx · Ny · Nz is O(Mt · Nx ·
Ny · Nz log(Nx · Ny · Nz)), whereas the computational cost of the denoising problem given
in appendix is O(Nx · Ny · Nz). Therefore, the cost of performing the forward and inverse
solvers on a coarse grid with size (Nx/2) · (Ny/2) · (Nz/2) is ≈ 1/16 the cost on the ﬁne grid,
as Mt/2 time points are suﬃcient to maintain the stability on the coarse grid. By estimating
the initial value of Lk by the BB scheme at each iterate, the backtracking loop almost never
imposes more cost than that of a single pair of forward and inverse solvers to the algorithm.
Note that in step 7 of algorithm 1, f (yk+1) is computed as a function of Hxk and Hxk−1,
which have already been computed through step 3 of algorithm 1 at iterations k − 1 and k,
respectively.

2.5 Line search Multi-level FISTA for PAT

Typically, line search optimization algorithms recursively enforce a descent search direction to
a smooth objective function, and then search along the computed direction for a point giving
the best reduction, or alternatively a suﬃcient reduction, in the objective function. Step 1 in
algorithm 1 is in a class of line search techniques which seeks for the steepest descent search
direction.

Our preliminary simulated results show that applying this step to well-posed PAT prob-
lems, e.g. full-view imaging, provides very good convergence for FISTA-TV, but the conver-
gence is deteriorated for more ill-posed problems, which arise from, for example, limited-view
data acquisition or errors in estimation of the medium’s properties. Unfortunately, these
problems are inevitable in PAT.

To accelerate the convergence of FISTA-TV in such cases, we have adopted a multigrid
(MG) method based on the Nash’s well-known method [31] in order to update the smooth
part of the objective function so that at each iteration the algorithm alternates between two
search directions, a direct search direction computed by (14), or a recursive search direction
generated from some steps taken at coarser levels. The coarser levels represent a related
optimisation problem, but taken with lower spatial resolution.

One other advantage of solving the PAT problem based on a multigrid framework is that
by suitably constructing the hierarchy of coarse models, the ratio of missing grid points to
sensor points on the boundary of the medium is considerably reduced in silico, which, in
turn, improves the condition number of the coarse PAT models employed for the recursive
search directions to a great extent, at the same time retaining the spatial resolution by the
alternative direct search directions.

k to the smooth part of the objective function fh at point yh

Accordingly, a line search optimization technique is applied by enforcing a descent search
k, where the su-
direction dh
perscript k denotes the iteration number, and the subscript h stands for the resolution of
discretization in the optimization problem, referred to here as the level. The steepest descent
optimization technique yields

yh

k+1 = yh

k + αh

kdh

k,

(28)

10

k = ∇fh(yh

k = 1/Lh

k) and αh

k, respectively, represent the search direction and the
where dh
step-length. In what follows, at ﬁrst the framework of MG optimization method is presented
for both smooth and composite functions in the unconstrained case, i.e., removing δC(x) from
the objective function, and then the inclusion of the non-negativity constraint is described.
Finally, a W-cycle three-level variant of FISTA-TV is proposed for PAT. These three levels
from the ﬁnest level, the so-called target level, to the coarsest level are denoted by h, h − 1,
and h− 2, respectively. For simplicity of notation, the methods are described for levels h and
h − 1, and the inclusion of level h − 2 will then be straightforward. We assume a recursive
search direction at yk. Note that if the underlying algorithm is not accelerated, e.g., ISTA,
then yk+1 = xk.

2.5.1 Transfer of information between levels

In our study the transfer of information between levels is performed based on linear interpola-
tion, which is known to be eﬀective enough for multi-grid purposes. For simplicity of notation,
we introduce this operator for 2D model, and the extension to 3D model is straightforward.
To transfer information from the coarse level h − 1 to the ﬁne level h, the prolongation op-
h−1 ∈ L(R(Nx/2)·(Ny/2), RNx·Ny ) is applied. Accordingly, applying the prolongation
erator I h
operator to xh−1 gives xh = I h

h−1xh−1, which is computed as [7]

(xh)2n1,2n2 = (xh−1)n1,n2

(cid:16)
(cid:16)
(cid:16)

(xh)2n1+1,2n2 =

(xh)2n1,2n2+1 =

(xh)2n1+1,2n2+1 =

1
2
1
2
1
4

(xh−1)n1,n2 + (xh−1)n1+1,n2

(xh−1)n1,n2 + (xh−1)n1,n2+1

(cid:17)
(cid:17)

(xh−1)n1,n2 + (xh−1)n1+1,n2 + (xh−1)n1,n2+1 + (xh−1)n1+1,n2+1

for every 0 (cid:54) n1 (cid:54) N x/2 − 1, 0 (cid:54) n2 (cid:54) ny/2 − 1. Conversely, the information is transferred
from the ﬁne level to the next coarse level by the so-called restriction operator, which gives
xh−1 = I h−1

h xh, and is computed by full weighting operator in the form [7]

(cid:17) (29)

(cid:17)

(30)

h−1 =

(cid:16)

(xh−1)n1,n2 =

+

+

(cid:16)
(cid:16)

1
16
1
8
1
4

(xh)2n1−1,2n2−1 + (xh)2n1−1,2n2+1 + (xh)2n1+1,2n2−1 + (xh)2n1+1,2n2+1

(xh)2n1,2n2−1 + (xh)2n1,2n2+1 + (xh)2n1−1,2n2 + (xh)2n1+1,2n2

(cid:17)

(xh)2n1,2n2

(cid:17)

(cid:17)T

(cid:16)

h

for every 1 (cid:54) n1 (cid:54) N x/2 − 1, 1 (cid:54) n2 (cid:54) ny/2 − 1. These operators yield in 2D I h
4

, while in 3D I h

I h−1

I h−1

.

h−1 = 8

h

(cid:16)

(cid:17)T

2.5.2 Coherence of levels for unconstrained smooth optimization

To guarantee the convergence, Nash [31] suggests enforcing a coherence between the problem
at each level and that at the next coarse level by adding a linear term to the objective function

11

at the next coarse level. Accordingly, to ﬁnd a recursive search direction at yk
objective function at level h − 1

h, we use as the

φh−1 (xh−1) = Fh−1 (xh−1) + (cid:104)vh−1, xh−1(cid:105),

where vh−1 stands for

vh−1 = I h−1

h ∇Fh

(cid:16)

k(cid:17) − ∇Fh−1

(cid:0)xh−1

0(cid:1) ,

yh

(31)

(32)

0 = I h−1

k the initial point at the next coarse level h− 1. Note that y1

with xh−1
according to the initialization in algorithm 2.
functions at the point of the transition between the two levels are matched so that

h−1 = xh−1
In this way, the gradient of the objective

yh

h

0

(cid:0)xh−1

0(cid:1) = I h−1

h ∇Fh

yh

(cid:16)

k(cid:17)

∇φh−1

.

(33)

2.5.3 Coherence of levels for unconstrained proximal gradient optimization with

an explicit proximal map [32]

The problem with the approach in (31) and (32) is that it deals solely with smooth objective
functions, i.e., diﬀerentiable F [31, 47].
In [32], it was suggested that non-smooth F be
smoothed, for example based on [4]. Note that the underlying algorithm in [32] is ISTA, and
k in that study. In comparison to (32), vh−1 is now computed to match the
thus yh
1 at the transition point between the two levels, rather than
proximal gradients Dh
the non-computable gradients ∇Fh(xh
0). The proximal gradient at level
h, which is calculated through steps 1 and 2 of algorithm 1, is written as

k) and ∇Fh−1(xh−1

k and Dh−1

k+1 = xh

(cid:16)

k(cid:17)

Dh

k = yh

k − pLk

yh

.

At the coarser level the objective function takes form [32]

φh−1 (xh−1) = fh−1 (xh−1) + 2λJρ (xh−1) + (cid:104)vh−1, xh−1(cid:105),

where ρ denotes the smoothing parameter that is applied to the TV norm (see (39) below).
Note that, since we have smoothed the TV norm, the proximal gradient of the ﬁrst iteration
at the coarse level is the same as the regular gradient multiplied by the step-size:

(34)

(35)

(38)

Dh−1

1 =

1
Lh−1

1 (∇fh−1

(cid:0)xh−1

0(cid:1) + vh−1).
(cid:0)xh−1
0(cid:1) + 2λ ∇Jρ
0(cid:1) − 2λ∇Jρ
(cid:0)xh−1

k − ∇fh−1

(36)

(37)

0(cid:1) .

(cid:0)xh−1

Thus, to ensure that the proximal gradients at the two levels match we require

I h−1
h Dh

k = Dh−1

1 ⇔ vh−1 = Lh−1

1I h−1

h Dh

As a result, the coherence between levels is established by matching the proximal gradient
at the transition between the levels, instead of matching the gradient of the function, which
was applied in Nash’s method. The objective function computed by (35) is then minimized
∗. The coarse-grid error correction
at the coarser level to obtain the optimal solution xh−1
k) in step 1 of algorithm 1. An additional step-
I h
h−1
h ∈ (0, 1] must then be chosen in order to fulﬁll step 1 of algorithm 1 as follows (for
length sk
further information, the reader is referred to [32]).

∗(cid:1) now replaces ∇f (yh

(cid:0)xh−1

0 − xh−1

(cid:0)xh−1

0 − xh−1

∗(cid:1)

bh

k = yh

k − sh

kI h

h−1

12

2.5.4 Coherence of levels for unconstrained proximal gradient optimization with

an implicit proximal map

The main problem with the method described in the previous section is that it is tolerant
to deal with solely proximal gradient methods that involve a closed-form proximal map,
e.g., when g is a norm or an indicator function. However, in our speciﬁc case, this method
k is solved inexactly through
imposes signiﬁcant errors since the proximal gradient update Dh
an iterative algorithm. According to our numerical experience, the application of the MG
method in [32] to our problem results in signiﬁcant errors to the computed recursive search
directions. Accordingly, to deal with an inexact proximal map, we combine the methods of
[31] and [32] as follows. At the incumbent iterate yk
h, we smooth the TV penalty in the form

(cid:88)

(cid:113)
|(∇y)n1,n2,n3|2 + ρ2 − ρ,

(39)

Jρ(y) =

n1,n2,n3

where ρ is the smoothing parameter. To compute vh−1, the gradient of F at both ﬁne and
coarse levels are now determined based on [42] in the form

∇Fρ(y) = 2H T (Hy − ˆp) − 2λ ∇ ·

.

(40)

(cid:32)

∇y(cid:112)|∇y|2 + ρ2

(cid:33)

h ∇Fh(yh

(32), the restriction operator I h−1

k) to some degree. As a result, the pre-smoothing action on Fh(yh

The implementation of the Nash’s theory via computing φh−1 through Eqs. (31) and (32)
is now straightforward. Note that at the target level, we compute ∇Fρ solely for computing
vh−1, and not for the minimization of F at the target level. From a numerical point of view,
k) inherently damps the high frequency
in Eq.
contents of ∇Fh(yh
k)
due to (39) by a suitable choice of ρ does not impose any errors to the computed recursive
search direction. The smoothing parameter ρ must be chosen large enough to maintain the
stability of the algorithm by removing the non-diﬀerentiability of the TV function, and at
the same time must be small enough to avoid removing the frequencies that are not ﬁltered
through the following multiplication by the restriction operator. The computed φh−1(xh−1)
is then minimized and the computed coarse error correction I h
∇fh(yh
k) in step 1 of algorithm 1. As opposed to (38) in Parpas’s method, each iteration of
our method requires only one step-length (1/Lk), which is chosen through algorithm 2, and
no additional step-length is needed.

∗(cid:1) substitutes

(cid:0)xh−1

0 − xh−1

h−1

Non-negativity constraint at the transition point: To deal with the non-negativity
constraint at the transition point between the levels, the gradient of the indicator function
deﬁned in (15) and (16) is set to zero whenever the set of the constraints is inactive at the
transition point. The constraint is (xk−1)n1,n2,n3
(cid:62) 0 at all levels, and so we consider the
constraint to be inactive whenever (xk−1)n1,n2,n3
> 0, whereas the constraint is active if
(xk−1)n1,n2,n3
= 0. Accordingly, inspired by [19], to compute vh−1 we recast (32) in the form

(cid:16)

k(cid:17) − ∇Fh−1,(ρ,C)
0(cid:1) ,
(cid:0)xh−1
k(cid:1)(cid:1)
(cid:0)yh
= 0 and (cid:0)∇Fh,ρ

(41)

> 0,

n1,n2,n3

where

(cid:16)∇Fh,(ρ,C)(yh
(cid:17)
(cid:40)
k(cid:1)(cid:1)
(cid:0)∇Fh,ρ
(cid:0)yh

k)

0

vh−1 = I h−1

h ∇Fh,(ρ,C)

yh

=

n1,n2,n3

k)n1,n2,n3

if (xh
otherwise

n1,n2,n3

13

(cid:0)xh−1
and(cid:0)∇Fh−1,(ρ,C)
0(cid:1)(cid:1)
(cid:40)
0(cid:1)(cid:1)
(cid:0)xh−1
(cid:0)∇Fh−1,ρ

0

n1,n2,n3

=

if (x0

h−1)

n1,n2,n3

otherwise.

n1,n2,n3

= 0 and (cid:0)∇Fh−1,ρ

(cid:0)xh−1

0(cid:1)(cid:1)

n1,n2,n3

> 0

Here the subscripts ρ and C stand for the smoothing parameter and the nonnegativity con-
straint imposed to the gradient, respectively.
Minimization of φ at coarse levels h − 1 and h − 2: The functions φh−1 and φh−2 are
now smooth and diﬀerentiable. The minimization of these functions at iteration k at the
coarse levels is done based on FISTA as follows. For simplicity of notation, the subscripts
denoting the levels are omitted.

Algorithm 3: FISTA-SMOOTH: recurrence at iteration k at coarse levels
Input: yk, xk−1, Hxk−1, Lk, tk
1. Compute bk ← yk − (1/Lk)∇φ(yk)
2. Update xk ← prox1/Lk (∂δC)(bk)

(cid:113)
4. Update tk+1 ← 1+
5. Update θk = tk−1

3. Update φρ(xk) =(cid:13)(cid:13)Hxk − ˆp(cid:13)(cid:13)2 + 2λJρ(xk) + (cid:104)vh−1, xk(cid:105)
6. Update yk+1 ←(cid:0)1 + θk(cid:1)(cid:0)xk(cid:1) − θk(cid:0)xk−1(cid:1)
Hxk(cid:17) − θk(cid:16)

(cid:13)(cid:13)(cid:13)2
Hxk−1(cid:17) − ˆp

1+4(tk)2
2

φρ(yk+1) =

tk+1

1 + θk(cid:17)(cid:16)

(cid:13)(cid:13)(cid:13)(cid:16)

7. Update

+ 2λJρ(yk+1) + (cid:104)vh−1, yk+1(cid:105)

Output: xk, tk+1, Hxk, F (xk), yk+1, Hyk+1, φρ(yk+1)

Here H and H T are now applied to coarse levels, and the proximal map associated with g
is now the Euclidean projection on Ch−1 or Ch−2, respectively, relying on (23). Algorithm
2, referred to as LOOP here, is now implemented by replacing FISTA-SMOOTH by FISTA-
TV. We also remove the stopping test and apply the restarting test instead for stopping the
recursive search direction in order to improve the speed of coarse grid corrections. In this
way, the coarse error correction is terminated whenever φ(xk) > φ(xk−1), or the number of
iterations exceeds a predeﬁned value. If the number of iterates on the coarse levels increases,
then the algorithm starts to oscillate, as mentioned in section 2.4.2. These oscillations cause
the algorithm to ignore some iterations, making the coarse corrections very ineﬃcient. With-
out giving any separate outline in order to avoid repetition, this modiﬁcation is applied to
algorithm 2, and the resulting algorithm, referred to here as LOOP-COARSE, is employed to
minimize φ at the coarse levels.

14

Figure 1: A recurrence of three-level W-cycle FISTA

2.5.5 A three-level W-cycle structure for FISTA-TV

To decide between a direct or recursive search direction at each iteration, some criteria have
been proposed in literature [32, 47]. By applying these criteria, one problem arises since
there are subjective parameters. Heuristically choosing these parameters at diﬀerent levels is
very impractical for the very costly PAT problem. The proposed MG optimization algorithm
is implemented in this study with a ﬁxed recursive three-level W-cycle structure, which is
achieved by setting the maximum number of iterations on levels h − 2 and h − 1 to be 1 and
5, respectively, and performing a recursive search direction at levels h and h − 1 whenever
the iteration number at the incumbent level is even. Fig. 1 displays a single recurrence of
the proposed MG algorithm, which involves the two ﬁrst iterations at the target level. This
cycle is recursively repeated until the stopping criterion is satisﬁed at the target level. In the
sequel, the resulting MG framework for levels h and h − 1 is outlined, which replaces step 1
in algorithm 1. The extension of the algorithm to level h − 2 is analogous, which is neglected
due to space constraints.

k,∇Fh(yh

Algorithm 4: The MG framework for levels h and h − 1
Input: yh
if k is even then
h−1 = I h−1

k(cid:1) by (39)

h−1, I h−1

(cid:0)yh

k), I h

h

k

, Lk, ˆp, λh−1, η > 1, Lmin, Lmax, maxiterh−1 = 5

h

yh

Smooth the non-smooth part of Fh
Set x0
Compute vh−1 by (41)
Compute φh−1 by (31)
Update x∗
Update dh

(cid:0)xh−1

∗(cid:1)

h−1

0 − xh−1

h−1 ← LOOP-COARSE (ˆp, λh−1, η > 1, Lmin, Lmax, maxiterh−1)
k ← I h
k ← ∇fh(yh
bk ← yk − (1/Lk)dh

k) )

k

else

Compute dh

end if
Compute
Output: bk

15

3 Numerical Results

Numerical studies were performed to investigate the eﬀectiveness of the proposed MG FISTA-
TV algorithm for iterative image reconstruction from incomplete data sets in 2D and 3D PAT.
In order to numerically solve the three coupled ﬁrst-order linear acoustic wave equations,
which were described in section 2.1, the K-Wave MATLAB toolbox was used [39, 38]. This
toolbox was used in order to simulate the measured data ˆp, as well as to compute Hxk, the
action of the forward model on the computed pressure ﬁeld at iteration k at each level, based
on the k-space pseudospectral method [12]. Conversely, to compute the gradient deﬁned in
(14) at each iteration at each level, the adjoint operator H T is computed based on the TR
approach described in section 2.2. The processor that was employed in this work is an Intel(R)
Core(TM) i5-4570 CPU @ 3.20 GHz with a RAM of 8.00 GB and a 64-bit operating system
(Windows 7, Microsoft).

3.1 2D PAT simulation
To simulate the surface data, a square grid with a size of 2.36 × 2.36 cm2 was created, which
is made up of 472 × 472 grid points evenly spaced with a separation distance of 5 × 10−2mm
in both x and y dimensions, supporting a frequencies of up to 13.70MHz. To measure the
propagated wave ﬁeld, 40 point-wise pressure detectors were equidistantly placed along the
left half of a circle having a radius of 8 mm so that π radians of the circle were covered by
the detectors. To prevent the outgoing waves from re-entering the opposite side of the grid,
an anisotropic absorbing boundary condition, the so-called perfectly matched layer (PML),
was applied to the grid. The performance of the PML depends inherently on the size and
attenuation of the grid. The absorption coeﬃcient was simulated within the PML according to
a formula given in [36] in order to ensure that all the outgoing energy is absorbed. According to
our numerical experience, a maximum attenuation coeﬃcient of 2 nepers per meter, together
with 20 grid points at each side of the simulated grids were the best choices for reducing the
undemanded reﬂections at the boundaries. Figs. 2(a) and 2(b) show the distribution of the
ambient density and sound speed within the medium, respectively, and the value associated
with each subregion is written. Since the exact properties of medium are not readily available
in real-world settings, the generated density and sound-speed maps were contaminated with a
35 dB additive white Gaussian noise (AWGN) for collecting data, whereas the reconstruction
was performed by assuming the ﬁxed values written on the subregions.
In addition, for
collecting data the interface of the noisy density map was shifted to the right (x+), and that
of the noisy sound-speed map was shifted to the bottom (y−) by 5 grid points on the forward
grid, relative to the maps used for the reconstruction. To incorporate absorption and physical
dispersion, the absorption properties of breast tissue were simulated so that the absorption
coeﬃcient and power law exponent were set to α0 = 0.75 dB MHz−y cm−1 and y = 1.5,
respectively (see [40]).

The phantom was created so that it simulates the normalized pressure distribution of
vessels with a maximal amplitude of 1 within the simulated medium. Fig. 3(a) displays
the simulated phantom, and the background pressure is represented by black colour. As
mentioned above, to simulate the surface pressure data, the K-wave toolbox was used [38].
The computed time-dependant pressure ﬁeld was sampled evenly in time in 1281 time steps.
To ensure the linear relationship between the pressure ﬁeld and the generated data on the
sensors, the interpolation of the pressure ﬁeld over the grid points to each sensor position was

16

(a) Density map

(b) Sound-speed map

Figure 2: To collect data, the maps were contaminated with a 35 dB AWGN noise, and were
also shifted by 5 grid points aligning both x and y dimensions.

performed based on the well-known linear method. The generated data on the sensors was
then contaminated with a 30 dB AWGN noise.

The reconstruction was ﬁrst performed by the TR approach described in section 2.2.
To compensate for eﬀects of the absorption and physical dispersion, a frequency-domain
symmetric window, the so-called Tukey window, with a cut-oﬀ frequency of 9 MHz and a
taper ratio of 0.5 was utilized to regularize the absorption parameters in the reconstruction
(see [40]). The reconstruction was applied on a grid made up of 320 × 320 grid points in
order to avoid inverse crime, as it was observed that this grid size provides the best trade-oﬀ
between the spatial resolution and the ill-condition of the problem, and yielded the most
accurate solution to TR in terms of relative error (RE). RE is deﬁned as

RE =

(cid:107)psol − pexact(cid:107)

(cid:107)pexact(cid:107)

,

(42)

where psol stands for the reconstructed image interpolated back to the forward grid, and pexact
denotes the pressure ﬁeld corresponding to the simulated phantom. Fig. 3(b) shows the image
reconstructed by TR approach, which has an RE of 0.8002.

The reconstruction was then performed recursively by FISTA-TV algorithm on the grid
that had already been used for the TR reconstruction. The Lipschitz constant was ﬁrst chosen
empirically as the value that gives the most accurate image in terms of RE; that was L = 1.2.
This was a very burdensome computation since the iterative algorithm was implemented
several times in order to determine the precise optimal Lipschitz constant. The reconstruction
was subsequently done by FISTA-TV algorithm combined with the BB scheme, according to
algorithm 2. The regularization parameter was heuristically chosen to be λ = 1 × 10−3 in
both algorithms. The stopping criterion of both algorithms was satisﬁed after 20 iterations.
Note that iterations that were rejected by the restarting test were taken into account. Fig.
4(a) shows the image reconstructed by the BB version of FISTA-TV.

The proposed multi-grid algorithm was then employed to reconstruct images on three

17

(a) 2D simulated phantom

(b) TR

Figure 3: The simulated 2D phantom and the image reconstructed by TR approach

levels h, h − 1 and h − 2 with sizes 320 × 320, 160 × 160 and 80 × 80, respectively. Applying
a stopping criterion the same as the ﬁxed-grid method, it was terminated after 15 iterations,
and the reconstructed image is shown in Fig. 4(b). The colour bars are shown to the right of
the ﬁgures. The regularization parameter was heuristically chosen λh = 1× 10−3 at the target
level h. In order to account for the smoothing action of the coarse grids on reconstruction,
the regularization parameter was chosen λh/2 and λh/4 at levels h− 1 and h− 2, respectively
(see [32]). In order to match the gradient of the objective functions at the transition point
between the diﬀerent levels, the non-smooth TV function at the target level was smoothed
by choosing ρ = 0.1 as in (39). This parameter was then applied to minimize the objective
function at coarse levels h − 1 and h − 2. To apply the forward and inverse models at the
coarse levels, the time step was increased proportionally to distances between the grid points.
Accordingly, the size of the collected data was evenly reduced in time by 2 and 4 at levels h−1
and h− 2, respectively. Compared to the target grid, the number of grid points pertaining to
the PML at each side of grids h − 1 and h − 2 was also reduced by 2 and 4, respectively, so
that the thickness of the PMLs was not changed.

Fig. 5(a) shows RE of the reconstructed image at each iteration of the implemented
algorithms. In this manuscript, to make a fair comparison between the competing algorithms,
the image parameters were plotted versus the CPU time. The green curve corresponds to
FISTA-TV with an optimal Lipschitz constant, the blue curve pertains to FISTA-TV with
an adaptive estimation of Lipschitz constant based on the BB scheme, and the red curve
gives RE of images reconstructed by the proposed adaptive MG scheme. A comparison
between the ﬁxed-grid methods indicates that the adaptive estimation of the step size at each
iteration of FISTA-TV based on the BB scheme according to algorithm 2 has provided a
better convergence of iterates than applying an optimal ﬁxed Lipschitz constant. Note that
determining the precise optimal Lipschitz constant is computationally a very burdensome
task, but we performed it for the 2D phantom in order to investigate the performance of
the BB scheme. From a theoretical point of view, although applying a Lipschitz constant

18

(a) ﬁxed grid

(b) three-level grid

Figure 4: The ﬁnal reconstructed images

smaller than the optimal value L = 1.2 yields a faster convergence in the ﬁrst iterations, it
also provides a smaller critical value for the characteristic polynomial associated with FISTA
in (27), and thus the monotone convergence of error of iterates is deteriorated before reaching
the optimal point x∗ because of the periodicity that arises in the iterates xk .

A comparison between the BB variant of the ﬁxed-grid method and the proposed MG
algorithm shows that the MG method not only provided a much faster convergence than the
adaptive ﬁx-grid method, but also produced a more accurate solution at the stopping point.
According to our numerical results, the ﬁnal image reconstructed by the MG scheme has an
RE of 0.3914 with a reconstruction time of 869.17 sec, whereas the image reconstructed by
the adaptive ﬁxed-grid method ﬁnally reached an RE of 0.3996 with a CPU time of 949.52
sec. This indicates that the MG method reduced RE approximately by 2% in a less time than
the adaptive ﬁxed-grid method. Furthermore, the image reconstructed by the MG algorithm
after iteration 9 has an RE of 0.3989 with a CPU time of 514.50 sec. This indicates that
the proposed MG method reconstructed an image with the same accuracy as the ﬁnal image
reconstructed by the ﬁxed grid method in a 46% less time. Fig. 5(b) shows the norm of
residual, denoted by RES, at each iteration of the competing algorithms in the same way as
RE. RES is deﬁned at iteration k as

(cid:13)(cid:13)(cid:13)Hxk − ˆp
(cid:13)(cid:13)(cid:13) .

RES =

(43)

Fig. 5(c) shows the objective function values F (xk) versus the CPU time with the progression
of the implemented algorithms. By a precise comparison between the plots associated with
the adaptive ﬁxed grid method in Figs. 5(a) and 5(c), it is observed that the objective
function value is reduced from iteration 7 with a value of 31.6505 to iteration 8 with a value
of 31.5816, at the same time RE is increased from 0.4319 to 0.4335. This infers that the local
change of F is not always a good criterion to sense the periodicity of the iterates, and thus to
decide on restart. However, applying the proposed MG method, a faster convergence of the
algorithm causes the iterates to approach the true solution in a smaller number of iterations
than the ﬁxed-grid method. This implies that the proposed MG method reaches a given level

19

of accuracy with a smaller θk than the ﬁxed grid method, and thus impedes the undemanded
periodicity of the iterates. As a result, the proposed MG method better directs the iterates
towards the true solution, and thus gives a more accurate solution at the stopping point,
compared to the ﬁxed-grid method.

3.2 3D PAT simulation
To simulate the surface data, a 3D grid with a size of 1 × 1 × 0.25 cm3 was created, which
is made up of 160 × 160 × 40 grid points that are placed with a separation distance of
6.25× 10−2 mm in all dimensions, supporting a maximal frequency of approximately 15 MHz.
To measure the propagated wave ﬁeld, 18 × 18 point-wise pressure detectors were placed on
the top surface of the grid evenly with a separation distance of 8 pixels. A PML made up of
16 grid points with a maximum attenuation coeﬃcient of 2 nepers per meter was simulated
on all the surfaces of the 3D grid. The sound speed and density maps were generated aligning
x and y dimensions similarly to the maps for the 2D phantom, proportional to the sizes of
the 3D grid. These maps were assumed homogeneous aligning z direction with sound speed
c1 and density ρ1, given in Figs. 2(a) and 2(b), respectively. Similar to the 2D phantom,
the generated sound speed and density maps were contaminated with a 35dB additive white
Gaussian noise (AWGN) for data collection, while the reconstruction was performed by setting
the ﬁxed values throughout the subregions. Furthermore, the interface of the noisy density
and sound-speed maps were shifted to x+ and y− by 3 grid points on the forward grid. The
absorption coeﬃcient and the power law exponent were set the same as those applied to the
2D phantom.

The normalized pressure distribution of vessels that were already created within the 2D
medium was extended to the 3D grid so that it was placed obliquely in the plane z = y/4.
Fig. 6(a) exhibits the simulated phantom from a top view. The sensors are shown by green
circles. To simulate the pressure data, the K-wave toolbox was used[38], and the computed
pressure ﬁeld was evenly sampled in time in 920 time steps. To maintain the linear relationship
between the pressure ﬁeld and the simulated boundary data on the sensors, the interpolation
of the computed time-series data on the grid points to each sensor position was done based
on the linear method. A 30dB AWGN noise was then incorporated to the generated data.
To avoid inverse crime, the TR approach was applied to a grid made up of 96 × 96 × 24 grid
points. A Tukey window with a cut-oﬀ frequency of 10 MHz and a taper ratio of 0.5 was
used to regularize the absorption parameters in the reconstruction. Fig. 6(b) displays the
image reconstructed by the TR approach from a top view. The image has an RE of 0.9373.
Note that in this manuscript, 3D images were visualized by the maximum intensity projection
(MIP) method (see [43]).

The FISTA-TV algorithm was then used to reconstruct images iteratively on the same
grid as used in the TR reconstruction. The determination of the optimal Lipschitz constant
for the 3D phantom is an extremely burdensome task, and is very impractical. However,
it was observed that the BB version of FISTA-TV always yields a more accurate solution
at the terminating point than a ﬁxed Lipschitz constant because of a faster convergence in
the ﬁrst iterations by a greater Lipschitz constant and adaptively reducing it approaching
the true solution. The regularization parameter was heuristically chosen λ = 1 × 10−2. The
terminating parameter was chosen so that the algorithm stopped after 20 iterations. The
image reconstructed by the BB version of FISTA-TV at iteration 20 is shown in Fig. 7(a)
from a top view.

20

(a) Relative Error

(b) Residual

(c) Objective function

Figure 5: The parameters of images reconstructed by FISTA-TV with: optimal Lipschitz
constant on ﬁxed grid (green), adaptive estimation of Lipschitz constant on ﬁxed grid (blue)
and adaptive estimation of Lipschitz constant on three-level grid (red).

21

(a) phantom

(b) TR

Figure 6: A top view of the simulated 3D phantom and the image reconstructed by TR
approach

The multi-grid algorithm was then implemented to reconstruct images on three levels
h, h − 1 and h − 2 with sizes 96 × 96 × 24, 48 × 48 × 12 and 24 × 24 × 6, respectively.
The parameter associated with the stopping criterion was chosen the same as the ﬁxed-grid
method. Accordingly, the algorithm was terminated after 16 iterations, and produced an
image shown in Fig. 7(b) from a top view. The colour bars are shown to the right of
the ﬁgures. The regularization parameter was heuristically chosen λh = 1 × 10−2 at level
h. Considering the smoothing eﬀect of coarse grids on reconstruction, the regularization
parameters were chosen λh/2 and λh/4 at levels h − 1 and h − 2, respectively. The non-
smooth TV function at the target level was smoothed by ρ = 0.1, according to (39), in
order to transfer to the next coarse level h − 1, and the smoothed TV function was used for
minimizing the objective function at coarse levels h− 1 and h− 2. To implement the forward
and inverse models on levels h− 1 and h− 2, the collected data was resampled evenly in time
by orders of 2 and 4, respectively. In addition, the number of grid points associated with
PML at each side of the grids was reduced by 2 and 4 at levels h − 1 and h − 2, respectively,
relative to the target grid so that the thickness of the PML stayed the same.

Fig. 8(a) represents RE of the reconstructed images versus the elapsed CPU time. This
plot shows that the MG method provided a much faster convergence than the adaptive ﬁxed-
grid method, and reached a more accurate solution at the stopping point. According to
our numerical results, the ﬁnal image produced by the MG approach has an RE of 0.3115
with a CPU time of 7675.3 sec for reconstruction, while the adaptive ﬁxed-grid method
ﬁnally produced an image with an RE of 0.3415 in 8180.5 sec. This indicates that the MG
method reduced RE approximately by 8.8% in less time than the adaptive ﬁxed-grid method.
Furthermore, the image reconstructed by the MG algorithm at iteration 9 has an RE of
0.3397 with a CPU time of 4225.1 sec. This indicates that the proposed MG optimization
technique reconstructed a more accurate image than that reconstructed by the ﬁxed grid
method in 48.35% less time. A comparison between the RE values obtained from the 2D

22

(a) ﬁxed grid

(b) three-level grid

Figure 7: The ﬁnal 3D reconstructed images from a top view

and 3D simulated experiments conﬁrms the study of [18] in the sense that an increase in the
ill-condition of the problem increases the frequency of the undemanded oscillations.

Fig. 8(b) shows the norm of the residual of iterates versus the CPU time for the employed
algorithms in the same way as in 2D simulation. It is observed that the MG method better
reduced the norm of residual with the progression of the algorithm, compared to the ﬁxed
grid method. Fig. 8(c) shows the objective function values F (xk) versus the CPU time. A
precise comparison between the plots associated with the adaptive ﬁxed grid method in Figs.
8(a) and 8(c) reveals that the objective function value is reduced from iteration 13 with a
value of 673.47 to iteration 14 with a value of 672.87, while RE is increased from 0.3633 to
0.3717. This implies that the local change in function F is not always a precise parameter
for sensing the periodicity of iterates and decision on restarting FISTA. In addition, applying
the ﬁxed-grid method, the image parameters between iterations 12 and 13, 15 and 16, and
18 and 19 were not changed. This infers that iterations 12, 15, and 18 are rejected by the
restarting scheme because of entering the periodicity region. However, the function values
obtained from the MG method were continuously decreased, and the iterates arrived at the
stopping point without the need for any restart. Like the 2D simulation experiments, a fast
convergence of the algorithm causes the updates to approach the true solution in a smaller
number of iterations, and therefore with a smaller θk than the ﬁxed-grid method. This causes
the characteristic polynomial to still have real roots around the true solution, and thus delays
the undemanded periodicity.

4 Conclusion

The inverse solver proposed in [2], referred to as FISTA-TV here, is in a class of accelerated
gradient methods for minimizing composite objective functions with simple constraints. This
algorithm is very popular for iterative image reconstruction in PAT problem, especially when
very sharp interfaces are demanded in the reconstructed image, e.g., imaging of superﬁcial
vessels. We proposed a multi-grid version of this algorithm with a ﬁxed recursive W-cycle

23

(a) Relative Error

(b) Residual

(c) Objective function

Figure 8: The parameters of 3D images reconstructed by FISTA-TV on: ﬁxed grid (blue)
and three-level grid (red).

24

structure, and applied it to the PAT Problem. The proposed MG algorithm is novel in the
sense that it is applicable to composite objective functions with an inexact proximal gradient,
as opposed to [32]. In addition, unlike existing MG optimization techniques in literature, it is
based on an accelerated gradient method. Our numerical results show that the proposed MG
inversion technique exhibited a much faster convergence than the ﬁxed-grid method. More
importantly, our numerical results demonstrate that designing accelerated gradient methods
on multi-grid framework dampens considerably the undemanded periodicity that is enforced
to the iterates when increasing the number of iterations, and thus produces better convergence
in the proximity of the optimal solution. From a practical point of view, our proposed multi-
grid is eﬀective when the resolution of the coarsest level is at least as high as that of the
sensor points. Further studies are needed to address minimization of the objective function
at coarse levels having a resolution of grid points lower than the sensor points so that the
number of coarse levels can be increased in real-world applications where very high spatial
resolution is demanded. Further works are also required to study eﬀects of minimization of
the objective function at diﬀerent levels on the critical value, θ∗, of FISTA associated with
each singular value so that the hierarchy of models can be created in a way in which the
monotone convergence of iterates around the true solution is guaranteed from a theoretical
point of view.

A Proximal map associated with g (Denoising problem)
The operator div : Y → E is computed as [10]

(p)1

(p)1
−(p)1

n1,n2,n3

n1−1,n2,n3

n1,n2,n3 − (p)1

n1−1,n2,n3

if 1 < n1 < Nx
if n1 = 1
if n1 = N

(div p)n1,n2,n3

=

(p)2
(p)3

+

+

n1,n2,n3 − (p)2

n1,n2−1,n3

n1,n2,n3

(p)2
−(p)2

n1,n2−1,n3

n1,n2,n3 − (p)3

n1,n2,n3−1

(p)3
− (p)3

n1,n2,n3

n1,n2,n3−1

if 1 < n2 < Ny
if n2 = 1
if n2 = Ny

if 1 < n3 < Nz
if n3 = 1
if n3 = Nz.

(44)

Enforcing the nonnegativity constraint in Chambolle’s dual approach to the denoising prob-
lem, and solving the arising gradient descent scheme by FISTA leads to algorithm A.1, which
is performed as an inner loop at each iterate at the target level, representing step 2 in algo-
rithm 1 [2].

Algorithm A.1: Proximal map (denoising problem)
Input: bk ∈ E, τ , tol
Initialization: Set k = 0, pξ

, for every ξ ≡ dimensions 1, 2, 3

0 = 0,

25

k
˜pξ
n1,n2,n3

(cid:16)

=

k+1

˜pξ
k = qξ

pξ
n1,n2,n3

k − pξ

k + τ∇(cid:16) bk
(cid:17)

while maxξ|pξ

(cid:17)+
k−1| (cid:62) tol do
λ − div qξ
(cid:16)
(cid:40)
(cid:18)(cid:80)
(cid:16)
(cid:17)(cid:0)pξ
Compute: xk =(cid:0)bk − λdiv p∗(cid:1)+

√
tk+1 = 1+
qξ
k+1 = pξ
k ← k + 1
end while

k − pξ

(cid:16) tk−1

1+4(tk)2
2
k +

tk+1

max

1,

˜pξ
n1,n2,n3

ξ

(cid:19)1/2(cid:41)

(cid:17)2

k

(cid:17)

k

(cid:1)

k−1

Output: xk

Here, the superscript ξ stands for direction of the gradient, and operator (·)+ represents

max{0,·}.

References

[1] J. Barzilai. Two-point step size gradient methods. IMA Journal of Numercal Analysis,

8:141–148, 1988.

[2] A. Beck and M. Teboulle. Fast gradient-based algorithms for constrained total varia-
tion image denoising and deblurring problems. IEEE Transaction on Image Processing,
18(11):2419–2434, 2009.

[3] A. Beck and M. Teboulle. A fast iterative shrinkage-thresholding algorithm for linear

inverse problems. SIAM Journal on Imaging Sciences, 2(1):183–202, 2009.

[4] A. Beck and M. Teboulle. Smoothing and ﬁrst order methods: A uniﬁed framework.

SIAM journal of optimization, 22(2):557–580, 2012.

[5] A. Borzi. On the convergence of the mg/opt method. In Proc. Appl. Math. Mech., volume

5(1), pages 735–736. PAMM, 2005.

[6] A. Brandt. Multi-level adaptive solutions to boundary-value problems. Mathematics of

computation, 31(138):333–390, 1977.

[7] W. Briggs, V. Henson, and S. McCormick. A Multigrid Tutorial, Second Edition. Society

for Industrial and Applied Mathematics, second edition, 2000.

[8] A. Buehler, A. Rosenthal, T. Jetzfellner, D. Alexander, D. Razansky, and V. Ntzi-
achristos. Model-based optoacoustic inversions with incomplete projection data. Medical
Physics, 38(3):1694–1704, 2011.

[9] P. Burgholzer, J. Bauer-Marschallinger, H. Gr¨un, M. Haltmeier, and G. Paltauf. Tem-
poral back-projection algorithms for photoacoustic tomography with integrating line de-
tectors. Inverse Problems, 23(6):S65, 2007.

26

[10] A. Chambolle. An algorithm for total variation minimization and applications. Journal

of Mathematical Imaging and Vision, 20(1-2):89–97, 2004.

[11] A. Chambolle and D. Dossal. How to make sure the iterates of ﬁsta converge.

http://hal.inria.fr/hal-01060130v1/document, preprint, 2014.

[12] B. T. Cox, S. Kara, S. R. Arridge, and P. C. Beard. k-space propagation models for acous-
tically heterogeneous media: Application to biomedical photoacoustics. The Journal of
the Acoustical Society of America, 121:3453–3464, 2007.

[13] B. T. Cox and B. E. Treeby. Artifact trapping during time reversal photoacoustic imaging
for acoustically heterogeneous media. IEEE Transaction on Medical Imaging, 29(2):387–
396, 2010.

[14] Y. H. Dai and R. Fletcher. Projected barzilai-borwein methods for large-scale box-

constrained quadratic programming. Numerische Mathematik, 100:21–47, 2005.

[15] X. L. De´an-Ben, V. Ntziachristos, and D. Razansky. Acceleration of optoacoustic model-
based reconstruction using angular image discretization. IEEE Transactions on Medical
Imaging, 31(5):1154–1162, 2012.

[16] X. L. De´an-Ben, A. Ozbek, and D. Razansky. Volumetric real-time tracking of periph-
eral human vasculature with gpu-accelerated three-dimensional optoacoustic tomogra-
phy. IEEE Transactions on Medical Imaging, 32(11):2050–2055, 2013.

[17] L. Ding, X. L. De´an-Ben, C. Lutzweiler, D. Razansky, and V. Ntziachristos. Eﬃcient
non-negative constrained model-based inversion in optoacoustic tomography. Physics in
Medicine and Biology, 60(17):6733–6750, 2015.

[18] B. O. Donoghue and E. Cand`es. Adaptive restart for accelerated gradient schemes.

Foundations of Computational Mathematics, 15(3):715–732, 2013.

[19] M. A. T. Figueiredo, R. D. Nowak, and S. J. Wright. Gradient projection for sparse
reconstruction: application to compressed sensing and other inverse problems. IEEE
Journal of selected topics in signal processing, 1(4):586–597, 2007.

[20] D. Finch, M. Haltmeier, and Rakesh. Inversion of spherical means and the wave equation

in even dimensions. SIAM Journal on Applied Mathematics, 68(2):392–412, 2007.

[21] T. Goldstein, C. Studer, and R. Baraniuk. A ﬁeld guide to forward-backward splitting

with a fasta implementation. http://arxiv.org/pdf/1411.3406v3.pdf, preprint, 2015.

[22] W. Hackbusch. Multi-grid methods and applications. Springer-Verlag Berlin Heidelberg,

1985.

[23] M. Haltmeier, T. Schuster, and O. Scherzer. Filtered backprojection for thermoacous-
tic computed tomography in spherical geometry. Mathematical Methods in the Applied
Sciences, 28(16):1919–1937, 2005.

[24] Y. Hristova. Time reversal in thermoacoustic tomography—an error estimate. Inverse

Problems, 25(5):055008, 2009.

27

[25] Y. Hristova, P. Kuchment, and L. Nguyen. Reconstruction and time reversal in ther-
moacoustic tomography in acoustically homogeneous and inhomogeneous media. Inverse
Problems, 24(5):055006, 2008.

[26] C. Huang, K. Wang, L. Nie, L. V. Wang, and M. A. Anastasio. Full-wave iterative im-
age reconstruction in photoacoustic tomography with acoustically inhomogeneous media.
IEEE Transaction on Medical Imaging, 32(6):1097–1110, 2013.

[27] L. A. Kunyansky. Explicit inversion formulae for the spherical mean radon transform.

Inverse Problems, 23(1):373, 2007.

[28] C. Lutzweiler, X. L. De´an-Ben, and D. Razansky. Expediting model-based optoacoustic

reconstructions with tomographic symmetries. Medical Physics, 41(1):013302, 2014.

[29] C. Lutzweiler and D. Razansky. Optoacoustic imaging and tomography: Reconstruction
approaches and outstanding challenges in image performance and quantiﬁcation. Sensors,
13:7345–7384, 2013.

[30] J. J. Moreau. Proximit´e et dualit´e dans un espace hilbertien. Bulletin de la Soci´et´e

Math´ematique de France, 93:273–299, 1965.

[31] S. G. Nash. A multigrid approach to discretized optimization problems. Optimization

Methods and Software, 14:99–116, 2000.

[32] P. Parpas, D. V. N. Luong, D. Rueckert, and B. Rustem. A multilevel proximal al-
gorithm for large scale composite convex optimization. http://www.doc.ic.ac.uk/
~pp500/pubs/mlProximal.pdf, preprint, 2014.

[33] G. B. Passty. Ergodic convergence to a zero of the sum of momotone operators in hilbert

space. Journal of Mathematical Analysis and Applications, 72(2):383–390, 1979.

[34] J. Prakash, A. S. Raju, C. B. Shaw, M. Pramanik, and P. K. Yalavarthy. Basis pursuit
deconvolution for improving model-based reconstructed images in photoacoustic tomog-
raphy. Biomedical Optics Express, 5(5):1363–1377, 2014.

[35] A. Rosenthal, V. Ntziachristos, and D. Razansky. Acoustic inversion in optoacoustic

tomography: A review. Current Medical Imaging Reviews, 9:318–336, 2013.

[36] M. Tabei, T. D. Mast, and R. C. Waag. A k-space method for coupled ﬁrst-order acoustic
propagation equations. The Journal of the Acoustical Society of America, 111:53–63,
2002.

[37] T. Tarvainen, A. Pulkkinen, B. T. Cox, J. P. Kaipio, and S. R. Arridge. Bayesian image
reconstruction in quantitative photoacoustic tomography. IEEE Transactions on Medical
Imaging, 32(12):2287–2298, 2013.

[38] B. E. Treeby and B. T. Cox. k-wave: A matlab toolbox for the time-domain simulation

of acoustic wave ﬁelds. http://www.k-wave.org/, 2009.

[39] B. E. Treeby and B. T. Cox. k-wave: Matlab toolbox for the simulation and reconstruc-
tion of photoacoustic wave ﬁelds. Journal of Biomedical Optics, 15(2):021314–021314–12,
2010.

28

[40] B. E. Treeby, E. Z. Zhang, and B. T. Cox. Photoacoustic tomography in absorbing

acoustic media using time reversal. Inverse Problems, 26(11):115003, 2010.

[41] U. Trottenberg, C. Oosterlee, and A. Schuller. Multigrid. Academic press, San Diego,

CA, 2001.

[42] C. R. Vogel and M. E. Oman. Iterative methods for total variation denoising. SIAM

journal of scientiﬁc computing, 17(1):227–238, 1996.

[43] J. W. Wallis, T. R. Miller, C. A. Lerner, and E. C. Kleerup. Three-dimensional display

in nuclear medicine. IEEE Transaction on Medical Imaging, 8(4):297–303, 1989.

[44] K. Wang, S. A. Ermilov, R. Su, H. P. Brecht, A. A. Oraevsky, and M. A. Anastasio.
An imaging model incorporating ultrasonic transducer properties for three-dimensional
optoacoustic tomography. IEEE Transactions on Medical Imaging, 30(2):203–214, 2011.

[45] K. Wang, C. Huang, Y. J. Kao, C. Y. Chou, A. A. Oraevsky, and M. A. Anastasio. Accel-
erating image reconstruction in three-dimensional optoacoustic tomography on graphics
processing units. Medical Physics, 40(1):023301, 2013.

[46] K. Wang, R. Su, A. A. Oraevsky, and M. A. Anastasio. Investigation of iterative image
reconstruction in three-dimensional optoacoustic tomography. Physics in medicine and
biology, 57(17):5399–5423, 2012.

[47] Z. Wen and D. Goldfarb. A line search multigrid method for large-scale nonlinear opti-

mization. SIAM Journal on Optimization, 20(3):1478–1503, 2010.

[48] Y. Xu, D. Feng, and L. V. Wang. Exact frequency-domain reconstruction for ther-
IEEE Transactions on Medical Imaging,

moacoustic tomography. i. planar geometry.
21(7):823–828, 2002.

[49] Y. Xu, M. Xu, and L. V. Wang. Exact frequency-domain reconstruction for thermoa-
coustic tomography. ii. cylindrical geometry. IEEE Transactions on Medical Imaging,
21(7):829–833, 2002.

29

