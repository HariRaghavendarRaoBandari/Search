6
1
0
2

 
r
a

 

M
2
1

 
 
]
I

N
.
s
c
[
 
 

1
v
8
3
9
3
0

.

3
0
6
1
:
v
i
X
r
a

Multimedia Channel Allocation in Cognitive Radio Networks

using FDM-FDMA and OFDM-FDMA ∗†

Ansuman Bhattacharya‡, Rabindranath Ghosh§, Koushik Sinha¶,

Debasish Dattak, and Bhabani P. Sinha∗∗

March 15, 2016

Abstract

In conventional wireless systems, unless a contiguous frequency band with width at least equal to the re-
quired bandwidth is obtained, multimedia communication can not be effected with the desired Quality of Ser-
vice. We propose here a novel channel allocation technique to overcome this limitation in a Cognitive Radio
Network which is based on utilizing several non-contiguous channels, each of width smaller than the required
bandwidth, but whose sum equals at least the required bandwidth. We present algorithms for channel sensing,
channel reservation and channel deallocation along with transmission and reception protocols with two different
implementations based on F DM − F DM A and OF DM − F DM A techniques. Simulation results for both
these implementations show that the proposed technique outperforms the existing ﬁrst-ﬁt and best-ﬁt [8, 7] al-
location techniques in terms of the average number of attempts needed for acquiring the necessary number of
channels for all trafﬁc situations ranging from light to extremely heavy trafﬁc. Further, the proposed technique
can allocate the required numbers of channels in less than one second with F DM − F DM A (4.5 second with
OF DM − F DM A) even for 96% trafﬁc load, while the ﬁrst-ﬁt and best-ﬁt techniques fail to allocate any
channel in such situations.

1 Introduction

The concept of Cognitive Radio (CR) [28] is based on dividing the available radio spectrum into several parts, with
some part reserved for the licensed users and the rest freely available for all. A Cognitive Radio Network (CRN )
provides the capability of sharing the spectrum in an opportunistic manner by both licensed and unlicensed users,
leading to an increase in the effective utilization of the available spectrum. According to a survey conducted by
Federal Communications Commission (F CC) [13, 14, 12, 4], the usage of the radio spectrum is non-uniform.
While some portions of the spectrum are heavily used, other portions remain relatively under-utilized. Thus, when
a licensed user is not currently using the spectrum, an unlicensed user can sense this fact and may temporarily use
this channel for his/her purpose. However, as soon as the licensed owner starts using his channel, the unlicensed
user must relinquish this channel immediately, and move to a different one by sensing the spectrum holes or white
spaces.

A cognitive radio should have the capability of being programmed to transmit and receive on a variety of
frequencies and to use different transmission access technologies supported by its hardware design [6, 20]. The
transmission parameters, e.g., power level, modulation scheme, etc. of a cognitive radio should be reconﬁgurable
not only at the beginning of a transmission but also during the transmission, when it is switched to a different
spectrum band.

∗A preliminary version of this paper appeared in Proc. of 3rd International Conf. on Communication Systems and Networks (COM-
SNETS), Bangalore, India, Jan. 4-8, 2011, doi: 10.1109/COMSNETS.2011.5716435, under the title "Multimedia Communication in Cognitive
Radio Networks based on Sample Division Multiplexing".

†A version of this paper to be appeared in “IEEE Transactions on Cognitive Communications and Networking”, under the title "Non-

Contiguous Channel Allocation for Multimedia Communication in Cognitive Radio Networks".

‡A. Bhattacharya is with the Dept. of C.S.E., N.I.T., Meghalaya, India e-mail: ansuman@nitm.ac.in
§R. Ghosh is with the Dept. of E.C.E., St. Thomas’ College of Engg. and Tech., Kolkata, India e-mail: rnghosh@gmail.com
¶K. Sinha is with the Dept. of C.S., S.I.U., Carbondale, IL, USA e-mail: koushik.sinha@cs.siu.edu
kD. Datta is with the Dept. of E.E.C.E., I.I.T., Kharagpur, India e-mail: ddatta@ece.iitkgp.ernet.in
∗∗B. P. Sinha is with the A.C.M. Unit, I.S.I., Kolkata, India e-mail: bhabani@isical.ac.in

1

x0 x1

x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14

x15

Figure 1: Spectrum Divided into Channels (Unused Channels shown as White)

Of late, there also has been an increasing trend of multimedia communication in the form of voice, text, still
image and video in various applications involving CRN . Designing efﬁcient algorithms for allocating channels
to a large number of such users of CRN s and maintaining the Quality of Service (QoS) for multimedia commu-
nication constitute an important research problem.

1.1 Related Works

Multimedia communication through CRN s has already been studied by several authors [28, 24, 29]. Mitola J. ﬁrst
introduced the concept of ﬂexible mobile multimedia communications [28] in a CRN . Kushwaha et al. [24] used
fountain coding for packet generation and conversion to send data with high reliability and tolerable delay. Shing et
al. [29] proposed the idea of dynamic channel selection for video streaming over a CRN , based on some priority-
based scheduling of video signals. On the other hand Lei et. al. worked on spectrum fragmentation by their
method “Jello” [34], where they detect “edges” of power spectrum, then use classical best-ﬁt, worst-ﬁt and ﬁrst-ﬁt
algorithm for spectrum selection and ﬁnally they do a distributed coordinate procedure to synchronize transceiver
system. However, in all of these communication schemes, a video signal can not be communicated over the CRN
unless a channel of sufﬁciently large bandwidth for maintaining the QoS of these video signals, is allocated from
the white spaces of the spectrum. Thus, even if the sum of all the available white spaces in the spectrum may be
larger than the required bandwidth for transmitting a video signal, it may not be possible to transmit the video
signal if there is no single white space in the spectrum which can provide the required large bandwidth for its
communication. Basically, this is a situation of fragmentation of the spectrum into small holes, with no hole being
large enough to accommodate a video signal transmission. It was mentioned by Akyildiz et al. [5] that “CR users
may not detect any single spectrum band to meet the user’s requirements. Therefore, multiple noncontiguous
spectrum bands can be simultaneously used for transmission in CR networks”. Some authors have addressed this
implementation issue of the proposal by using Orthogonal Frequency Division Multiplexing (OF DM ) - based
CRN [9, 31]. However, Multi-Band OF DM (M BOF DM ) system for allowing more than one sender to send
their messages in the CRN is still a challenging problem [25].

Techniques for detection of unused spectrum and sharing the spectrum without harmful interference with other
users with the help of a Common Control Channel (CCC) have been presented by Krishnamurthy et al. [23],
Masri et al. [26] and Bayhan and Alagöz [8]. The CCC is used for supporting the transmission coordination and
spectrum related information exchange between the CR users. It facilitates neighbor discovery, helps in spectrum
sensing coordination, control signaling and exchange of local measurements between the CR users. Spectrum
sensing without using a CCC has been considered by Kondareddy et al. [22] and Xin and Cao [33].

Taxonomy, open issues, and challenges for channel assignment algorithms in a CRN have been described
in [3]. Allocation schemes can be ﬁxed [2, 27], dynamic [35, 10, 29, 2, 27] or [2, 27] depending on the ﬂexibility
of assigning channels to the cells in the network. The dynamic channel allocation in the spectrum is similar to the
computer classical memory management strategies like “ﬁrst-ﬁt”, “best-ﬁt”, and “worst-ﬁt” [36]. Very recently,
Bayhan and Alagöz [8, 7] have proposed best-ﬁt channel selection techniques in cognitive radio networks.

1.2 Problem Statement

Consider a representative scenario depicted in Fig. 1 where we show a part of the spectrum divided into 16
channels marked as x0, x1, · · · , x15, each of these channels being of the same bandwidth equal to Bmin which is
the minimum bandwidth for a multimedia signal. For example, if the bandwidth requirements for the voice, text
and video signals are 64 Kbps, 128 Kbps and 512 Kbps respectively, then Bmin is taken to be 64 Kbps. Thus, to
transmit an audio signal, we need only one channel, while for a video signal, we need eight consecutive channels
(xi’s). However, as we see from Fig. 1, there is no continuous band consisting of eight channels, but a total of
nine channels are still available. We need to devise an appropriate technique to allow the transmission of the
given video signal through eight of these available nine channels, without compromising the video quality at the
receiving end.

Channel assignment process in a CRN may broadly be divided in two subproblems - channel sensing and
channel allocation. We assume that the transmission range of a node is equal to its sensing range. A node U

2

A

BC

Figure 2: Nodes with their Respective Sensing Regions

is called a 1-distance neighbor of a node V if U falls under the transmission or sensing range of the node V .
While sensing, we assume that a node can always sense the channels which are being used by all of its 1-distance
neighbors for transmitting their respective data. Referring to Fig. 2, the transmitting channels of all the neighbors
at 1-distance from a node A can be sensed by node A. Consider the node C in Fig. 2 which is a 1-distance neighbor
of A. Node B is another 1-distance neighbor of C but node B is at 2-distance apart from A. The channels used by
C in receiving some information from B, can not be sensed by node A. Thus, node B can give rise to hidden node
problem [21] while allocating channels to node A. To be more speciﬁc, if A and B both want to communicate their
messages to C at the same time using the same channel (when both of them independently sense that channel as
free), the node C will experience a collision, and thus both the messages will be lost at C. The channel allocation
algorithm must address this hidden node problem while allocating channels for the message communication from
A to C.

Another problem arises when, node C has a capability of receiving a multimedia signal of bandwidth 512
Kbps as shown in Fig. 2. Node A sends some data to node C which requires only 128 Kbps bandwidth. Now,
node B also wants to send some data to node C at the same time which requires, say, 384 Kbps bandwidth.
With the existing OF DM technique [32] in CRN , we can not transmit data simultaneously to the node C from
node A and node B, though node C might have the capacity to handle the data, unless there is a sufﬁcient
gap between the channels used for two different pairs of communicating nodes to avoid channel interference.
According to Mahmoud et al. [25], the M BOF DM system to handle such situation is a challenging problem due
to synchronization requirement between the transmitter and the receiver.

We consider the situation for multimedia communication in which a typical user may require varying number
of channels. Thus, a particular node may sometimes need just one single channel and sometimes a number of
channels to communicate its messages depending on the types of the multimedia signals and their required QoS.

1.3 Our Contribution

In this paper, we propose an elegant way of overcoming the problem of fragmentation of the available spectrum
as mentioned in Section 1.2, with regard to the communication of multimedia signals over the CRN , while
maintaining the QoS requirement. We propose a technique for establishing a communication between sender and
receiver nodes for single hop communication of multimedia data, where we ﬁrst decompose a multimedia signal
in time domain in terms of a number of bit-sets, with each set containing sufﬁciently sparsed bits so as to be
transmitted over just a single channel of bandwidth Bmin and yet maintaining the signal quality. Thus, the total
information content of a signal during a particular time frame is basically divided into several packets, with each
packet being transmitted through one available channel in the white space. The constituent packets generated for a
given time frame may, however, be transmitted over non-contiguous channels. At the receiver end, all the packets
received through these channels will be used for reconstructing the original signal without degrading the signal
quality.

Using the above strategy, we propose here a novel channel allocation technique which assigns non-contiguous
channels for effecting multimedia communication between a sender and a receiver very fast through a random
number generation process, so that the channel fragmentation problem as experienced in conventional ﬁrst-ﬁt or
best-ﬁt techniques is completely overcome resulting in very high channel utilization with negligible overhead in
time. Detailed description of the proposed scheme is given below.

To allow multiple senders for sending their data simultaneously through the CRN , we propose two possible
channel allocation techniques, one based on Frequency Division Multiplexing (F DM ) and Frequency Division
Multiple Access (F DM A) (F DM −F DM A) and another based on OF DM and F DM A (OF DM −F DM A).
For the F DM − F DM A allocation, we use the non-overlapping channels, where the channel width is assumed
to be large enough to include the guard band, as shown in Fig. 3(a). Here, the basic idea is to use F DM for
every pair of communicating nodes, but F DM A for different pairs of communicating nodes. Referring to Fig. 2,

3

f1

f2

f3

f1 f2 f3

(a) Non - Overlapping Channels (for F DM)

f12

f23

(b) Overlapping Channels (for OF DM)

Figure 3: Channels conﬁguration

while the channels for communication between two nodes A and C are allocated using F DM and the channels
for communication between nodes B and C are also allocated using F DM , the channel allocation for the pairs
(A, C) and (B, C) follows the F DM A technique. For the OF DM − F DM A allocation, we use the overlapping
orthogonal channels, as shown in Fig. 3(b). Here, the basic idea is to use OF DM for every pair of communicating
nodes, but F DM A for different pairs of communicating nodes. To avoid inter-channel interferences we have to
maintain certain minimum gap between every pair of channels allocated to different nodes. Referring to Fig. 2,
while the channels for communication between two nodes A and C are allocated using OF DM and the channels
for communication between nodes B and C are also allocated using OF DM , the channel allocation for the pairs
(A, C) and (B, C) follows the F DM A technique. Thus, we have to maintain certain minimum gap between
every pair of channels allocated to nodes A and B to avoid inter-channel interferences. We present algorithms
for channel sensing, channel reservation and channel deallocation avoiding the hidden node problem and also
avoiding possible collision with the channel demands from other users of the CRN . Corresponding transmission
and reception protocols are also proposed.

We theoretically analyze our proposed algorithms to predict the average number of iterations or attempts
made by our proposed algorithm for allocating the channels. In our later discussions, we use the terms iterations
and attempts interchangeably throughout the text. The average number of such attempts is O(1/f ), where f is
the fraction of the free or available channels. In dynamic channel allocation, ﬁrst-ﬁt and best-ﬁt techniques are
commonly used ones [8, 7, 34, 19, 38, 37], and thus in our simulation, we compare our proposed protocol with
ﬁrst-ﬁt and best-ﬁt techniques for channel allocation. Simulation results show that the average number of attempts
for acquiring the required number of channels agrees well to the theoretical values even for extremely heavy trafﬁc
with about 96% blocked channels. From simulation, we also see that the proposed technique always outperforms
the existing ﬁrst-ﬁt and best-ﬁt [8, 7] allocation techniques in terms of the average number of attempts needed
for acquiring the necessary number of channels for all trafﬁc situations ranging from light to extremely heavy
trafﬁc. The proposed technique can allocate the required numbers of channels in less than a second time with
F DM − F DM A even for 96% trafﬁc load and in less than 4.5 sec with OF DM − F DM A for 99% trafﬁc load,
while the ﬁrst-ﬁt and best-ﬁt techniques fail to allocate any channel in such situations. We can intuitively explain
why our proposed technique performs better than the ﬁrst-ﬁt and best-ﬁt techniques. Actually, both the latter
techniques suffer from the channel fragmentation problem and channels cannot be allocated unless a contiguous
free band of required number (DN ) of channels is found. In contrast to this, our proposed technique removes
the requirement of a single contiguous free band containing all these DN channels and thus, the success rate is
100% with our technique even with an extremely heavy trafﬁc load when the existing approaches fail to allocate
the channels. Moreover, because we are exploring the free channels through a random number generation process
and every time we get a free channel, we include that one for our purpose, leads to a quick termination of our
allocation algorithm with a success.

2 Basic Ideas of our Proposed Protocol

2.1 Creating Small Bandwidth Cognitive Sub-Data Channels

Consider a band-limited signal having a bandwidth of, say W . Let us assume that the signal is sampled with a
sampling frequency of 2W . Referring to Fig. 4, let s0, s1, · · · , sN −1 be N samples taken over the time period
T of the band-limited signal at a sampling interval of τ = 1
2W . Thus, T = N τ. Let us assume that from
every sample, we get b bits. Thus, the total number of bits is N b. So, the bits generated from all N samples are
b0, b1, · · · , bN b−1. Let the bandwidth W of this signal be less than or equal to nBmin. We then partition the N b

4

0

τ

2τ

s0 s1 s2

Nτ

sN −1

Figure 4: Samples from the signal

COGCH2

COGCH4

COGCH6

COGCH1

COGCH3

COGCH5

COGCH7

COGCH0

x0 x1

x2 x3 x4 x5 x6 x7 x8 x9 x10 x11 x12 x13 x14

x15

Figure 5: Utilized Spectrum with small bandwidth Cognitive Channels

bits in n subsets BS0, BS1, BS2, · · · , BSn−1, where the bit-set BSi is deﬁned as,

BSi = {bj|j = i mod n, 0 ≤ i, j ≤ n − 1}

(1)

Note that in each of these BSi’s, the bits are separated by nτ time, and hence, these would require a transmission
bandwidth of W
n ≤ Bmin. Thus, to transmit the original signal as shown in Fig. 4, we search for the availability
of n channels each of bandwidth Bmin in the white space of the spectrum.

Let COGCHi, i = 0, 1, · · · , n − 1 be these n cognitive channels such that the bits in the bit-set BSi is
transmitted through COGCHi (as shown in Fig. 5 for n = 8). In practice, corresponding to each time frame of a
suitable duration T , we take the bits in the bit-set BSi to form a data sub-packet SPi. The header of each such
sub-packet will contain the identity of the time frame (e.g., in the form of a packet number P N ) as well as its
Sub-Packet Number (SP N ) equal to i. At the receiving end, all these received sub-packets having the same packet
number will be used to reconstruct the original transmitted signal.

2.2 Physical Implementation
2.2.1 Physical Implementation of F DM − F DM A

We assume that all CR users are Secondary Users (SU s) and have the same priority. Similarly, all Primary Users
(P U s) are assumed to have the same priority which is greater than that of a SU . We also assume that any given
node in the system has the maximum capability of providing some DN (Demand Number) channels. Thus, a node
A may be allowed to be involved in simultaneously communicating more than one signal, so long as the sum of the
numbers of channels used by it in communicating all these signals is less than or equal to DN . For example, voice
(64 Kbps), data (128 Kbps), still image (256 Kbps), video (384 Kbps) and online streaming (512 Kbps) needs DN
as 1, 2, 4, 6 and 8, respectively, as we assume that Bmin is 64 Kbps. We assume the presence of a dedicated
CCC [23, 26, 8] operating on a speciﬁc frequency (fCCC) for coordination between the various SU s, with the
communications through CCC effected in discrete time slots. For a low trafﬁc load, communication through
CCC can be done by following either IEEE 802.11 CSM A/CA [15, 30] protocol. However, under moderate
to heavy trafﬁc, one may use any conventional controlled access [15, 30] method like Bit-Map [15, 30] protocol
to improve the performance. If, we use Bit-Map protocol then each attempt made by our algorithm requires O(∆)
time, where ∆ is the maximum node degree of the network.

The block diagrams of the proposed F DM − F DM A transmitter and receiver have been shown in Figs. 6(a)
and 6(b), respectively. In this scheme, for every channel we need a separate modulator and demodulator system.
The CCC channel, through which the control messages are transmitted, is totally separated from the data chan-
nels. The block Splitter, in Fig. 6(a), is working as a demultiplexer by which the BSi can be created, leading

5

CCC Data I/P

Data I/P

Splitter

Modulator

∼

fCCC

Modulator

∼

f0

Modulator

∼

fn−1

(a)

P

Up

Converter

Power
Ampliﬁer

Low Noise
Ampliﬁer

Mixer

∼

Local

Oscillator

Demodulator

∼

fCCC

Demodulator

∼

f0

Demodulator

∼

fn−1

(b)

CCC Data O/P

Collector

Data O/P

Figure 6: (a) F DM − F DM A Transmitter Block Diagram, (b) F DM − F DM A Receiver Block Diagram

S

S

S

S

BC

BC

f B
y0 f B
y2

BC

f B
y1

f A
x0

BC

f B
y3

f A
x1

BC

OFDM

OFDM

BC = Blocked Channels

Figure 7: Channel allocation for node A and node B in overlapping channel

to generation of sub-packets SPi. On the receiver side, the Collector in Fig. 6(b), is used to gather bits from
different channels to form the packet constituted from the bits corresponding to all the BSis, which is required for
regeneration of the multimedia data. Each COGCHi works on different frequencies fi’s. For F DM − F DM A
technique, we can select all the frequencies fi’s in non-overlapping channel (as shown in Fig. 3(a)). An alternative
scheme using commercially available M IM O system can also be used depending on the relative cost and ease of
implementation.

2.2.2 Physical Implementation of OF DM − F DM A

y1, f B

y2 and f B

x0 and f A

y0, f B
x1 are orthogonal to each other and similarly f B

For OF DM − F DM A technique, the frequency fi’s can be selected in such a way that all the fi’s are orthogonal
[32] leading to OF DM modulation for one node which requires more than one channel to transmit its data,
and the other nodes are to select free channels in such a way as to maintain certain minimum gap between two
consecutively chosen channels to avoid inter-channel interference for different nodes in overlapping channels (as
shown in Fig. 3(b)). As an example, referring to Fig. 2, nodes A and B need 2 and 4 channels respectively, to
transmit some data to node C. Thus, node A selects frequencies f A
x1 for transmitting its data, while node
y3 for its communication purpose as shown in Fig. 7. Here, the carriers
B selects frequencies f B
operating at f A
x0 and f A
y3 are also orthogonal
x1 need to be separated with some minimum band gap of S (as shown in Fig. 7)
to each other, but f A
from the frequencies f B
y3 to facilitate the synchronization process in the two destined receivers.
Furthermore, to maintain the needed orthogonality condition between the OF DM channels, all the OF DM
carriers need to be synchronously related to a unique pilot carrier, which can be transmitted (from some select
nodes playing the role of collaborating leaders) in the same OF DM band periodically over time. The frequency
of the pilot carrier should be placed conveniently in the OF DM frequency range (but not used by any node for
data transmission). We, however, assume that this sacriﬁce of one single OF DM carrier for the pilot in the
entire OF DM transmission bandwidth will not impact the spectral efﬁciency of the system at large. Every node
will synthesize its own OF DM carriers from the pilot carrier. In effect this will imply that, the OF DM carrier

x0 and f A

y2 and f B

y0, f B

y1, f B

y2 and f B

y0, f B

y1, f B

6

If all blocked
channels
re-
leased

Idle

BT x = 1 and
transmission
request

If all chan-
nels released

Deallocate

If a P U asks
for any used
channel

hidden
If
node
prob-
lem encoun-
tered

Transmit

Allocate

commu-

If
nication
process over

Sensing

Timed Out

Allocation
not
done
within time
T

DN channels
not used by
1-distance
neighbors for
transmission

all

If
COGCHs
allocated

Figure 8: State diagram

frequencies transmitted from all the nodes and the pilot carrier frequency should be integrally related to a lower
carrier frequency, which would be a highest common factor for all of them. This will lead to some additional
hardware for the nodes along with the IF F T /F F T -based OF DM generation and demodulation schemes with
arbitrary but small number (DN ) of OF DM carriers. However, we consider this additional hardware complexity
to be realizable with today’s V LSI design techniques and worthwhile as well keeping in mind the beneﬁts that
one would be able to derive in respect of the spectral efﬁciency achievable from this proposition.

2.3 State Diagram of the Overall System

In Fig. 8 we draw a state diagram that explains the basic functional units of the communication system as depicted
through its various states and the state transition arcs. We start from the Idle state. When the transmitter buffer of
a node becomes full, a status bit BT x of the node is set to 1 (which is otherwise 0). When BT x = 1 and this node
wants to transmit, it moves from the Idle state to the Sensing state. The node in this Sensing state explores the
availability of free channels of the required number DN as demanded by the multimedia signal to be transmitted
by the node. If it ﬁnds DN number of channels not being used by any of its 1-distance neighbors for transmission,
then it blocks these channels temporarily and moves to Allocate state. In Allocate state, it determines whether
there is any hidden node problem. If not, then it goes on to the T ransmit state, otherwise it moves back to the
Sensing state. In the Sensing state, the node maintains a clock to measure the time needed for sensing and
allocation of the required number DN of channels. When the nodes ﬁrst enters the Sensing state from the Idle
state, the clock and the timing register both are set to 0. The timing register is updated by the clock whenever
the node moves from the Allocate to Sensing state. If allocation of channels is not done within a speciﬁed
time-out period T , then the node moves to T imed Out state, at which it releases all the blocked channels, if any,
and goes back to the Idle state. In the T ransmit state, the node transmits its message through the allocated
DN channels. When the transmission is complete, it goes to Deallocate state where it releases all these DN
number of blocked channels, resets BT x to 0 and goes back to the Idle state. While the node is in the T ransmit
state, if any primary user P U reports, asking for any of the channels used by this node, then those channels will
be immediately released and the system will go back to the Sensing state, setting again both the clock and the
timing register to 0.

3 Proposed Protocol

3.1 Algorithm for Connection Establishment

Let SA and DA denote the addresses of the source node and the destination node, respectively. To establish a
communication link the source node SA needs to sense and allocate DN number of channels for transmitting the
multimedia signal using CCC. We consider below the connection establishment process for multimedia signals
to be executed by the source node SA and the destination node DA.

7

SA

DA

(a)

DN

SA

TAG

DA
(b)

Figure 9: (a) CM message and (b) ACK or W AIT message

1. Sense the channels not being used by A’s 2-distance neighbors (to avoid the hidden node problem) as
shown in Fig. 2. This would be effected with the help of some control and acknowledgement messages
communicated through the CCC.

2. Allocate the DN free channels found above to the destination node C so that it becomes ready for receiving

the desired multimedia signal from A.

The above steps of allocating channels to any source-destination pair would be done dynamically in a dis-
tributed manner with the help of the CCC. After this allocation process, the actual multimedia communication
between a source-destination pair will continue unless some or all of these channels are deallocated due to the
arrival of one or more primary users.

3.1.1 Reservation of Channel

The node SA transmits a Control Message (CM ) with SA, DA and DN values as shown in Fig. 9(a). After
sending this control message, it waits up to some maximum time-out period, say δT , for getting either an Ac-
knowledgement (ACK) message or a W AIT message from DA, both of which would contain the SA and DA
values, with one more T AG bit, as shown in Fig. 9(b), which is set to ’0’ for an ACK message and ’1’ for a
W AIT message. The ACK message is sent if node DA is capable of providing DN number of channels for
receiving the multimedia signal from SA (i.e., when the available number of channels AN at DA is greater than
or equal to DN , while the W AIT message is sent when AN ≤ DN .) Since the node DA may simultaneously
receive such channel reservation requests from other source nodes as well, for AN ≥ DN , it temporarily reserves
the requested number (i.e., DN ) of channels for node SA on a ﬁrst-come-ﬁrst-serve basis (without bothering
about which DN channels). If the node DA is not capable of allocating the requested DN number of channels
to SA, then along with sending the W AIT message to the node SA, it puts this request from SA (in the form
of CM ) in a waiting queue for later servicing. If neither the ACK nor the W AIT message is received by SA
within δT time (due to a possible collision caused by the simultaneous transmission of messages from some other
node(s) within 1-distance from SA or due to the hidden node problem, i.e., due to a collision at the node DA
caused by messages from some node, say V which is at 1-distance from DA, but at 2-distance from SA), then SA
retransmits its control message CM . This process of retransmission is repeated by SA until an ACK or W AIT
message is received from DA. The algorithms reserve_channels_transmitter and reserve_channels_receiver to be
executed by nodes SA and DA are given in Algorithm 1 and 2 respectively.

Algorithm 1: Reserve_Channels_Transmitter

Input: SA, DA and DN
Output: channels_reserved
channels_reserved = f alse ;
while channels_reserved = f alse AND BT x = 1 do

Transmit CM to the node DA;
Wait for δT time to receive ACK or W ait Signal;
if ACK or W AIT Signal received within δT then

if ACK is received within δT then

channels_reserved = true;

else

Wait for ACK from DA /* W AIT received */;
channels_reserved = true;

1
2
3
4
5
6
7
8
9
10

3.1.2 Sensing and Allocation of Channels

Sensing and Allocation of Channels for F DM − F DM A Technique After getting the ACK message from
the destination node DA in reply to the CM message as described in Section 3.1.1, the source node SA will try to
ﬁnd the required DN number of data channels from the currently available white spaces of the spectrum. This will
be done by randomly choosing a set of DN distinct channels which are not being used by any of the 2-distance

8

Algorithm 2: Reserve_Channels_Receiver

Input: CM (consisting of SA, DA and DN)
Output: ACK, W AIT to the Transmitter
if AN ≥ DN then

AN = AN − DN;
Update its database;
Transmit ACK;

else

Enter CM in a waiting queue;
Send back W AIT Signal to node SA;

1
2
3
4
5
6
7

SA

DA

CN

T AG

SA

DA

SP N1

CN1

SP NDN

CNDN

SA

(a)

DA
(b)

T AG

SA

CN1

(c)

(d)

CNd

Figure 10: (a) T AM or CCB message, (b) T AM _ACK or N ACK message, (c) CHALLOC message and (d)
CRM message (d = |channel_set|)

neighbors of SA for transmission as well as reception (to avoid the hidden node problem) of data. We assume
that the width of the non-overlapping channel already includes the bandgap to avoid inter-channel interference
and hence, a free channel for a node U means one which is not being used by any other node within the 2-distance
neighborhood of U . We randomly generate a number i and then sense whether channel i is free (with respect to all
nodes in 2-distance neighborhood of U ). If channel i is free, then it can be allocated to U . In fact, we generate DN
such random numbers and sense in parallel whether all the channels corresponding to these randomly generated
DN numbers are free. If m free channels are found by this process, then the process terminates if m = DN ;
otherwise the whole process is repeated to ﬁnd the required number m − DN of free channels to be allocated to
U . Each iteration of this loop is termed as an attempt, as introduced earlier in Section 1.3.

The fact that none of the 1-distance neighbors of SA is currently using a given channel for transmitting their
data, can easily be determined by listening to this channel by SA (channel sensing). However, to avoid the hidden
node problem, whether a given channel is being used by any node U among the 1-distance neighbors of SA for
receiving some messages from some node, say V , which is at 2-distance from SA, can not be determined by such
channel sensing. To decipher that, node SA has to send a Trial Allocation Message (T AM ) to all of its 1-distance
neighbors which would contain the source and destination addresses (i.e., SA and DA) along with the Channel
Number (CN ) in question. The structure of the T AM message is as shown in Fig. 10(a), where the T AG ﬁeld
is set to ’0’ for a T AM . On getting this T AM , a node U would send back an acknowledgement (T AM _ACK)
or a no-acknowledgement (N ACK) message to SA depending on whether U is currently not using the channel
CN for receiving any message or not, respectively. The T AM _ACK and N ACK messages are of the form as
shown in Fig. 10(b), where the T AG ﬁeld is set to ’00’ for a N ACK and ’01’ for an T AM _ACK. Node U can
check this fact efﬁciently if it maintains a channel usage database in the form an AV L tree as shown in Fig. 11
where each node of the tree contains a tuple (CN , SA) and insertion or ﬁnding an element in the tree is done
based on the CN ﬁeld only. The choice of AV L tree as the data structure for this purpose enables us insertion,
deletion and ﬁnding an element from it all in O(log m) time where DN is the total number of nodes in this tree.
In case U is currently not using the channel CN for receiving any message, it temporarily allocates the channel
CN to the node SA and keeps this information by inserting a new node with this CN and SA information in the
AV L tree. This would help prohibiting other nodes selecting this channel CN for transmitting their data when

25, 4

15, 3

30, 3

10, 2

18, 3

45, 4

35, 3

Figure 11: AV L tree for storing the channel usage status of a node

9

the node SA is still in the process of selecting all of its required channels and has not yet completed that process.
If SA does not receive any N ACK message within a maximum time-out period δT from any node in reply to this
T AM message, then SA puts this channel number CN in its chosen set of channels channel_set; otherwise, SA
can not use the channel CN for transmitting its data and hence it broadcasts a Clear Channel Blockage (CCB)
message to all of its 1-distance neighbors. The structure of the CCB message is same as that of a T AM shown
in Fig. 10(a), where the T AG ﬁeld is set to ’1’ for a CCB. If a node U receives this CCB message, then U will
delete the corresponding node from its AV L tree storing its channel usage status (thus, the channel CN will now
be treated as available by the node U ).

The above process of allocating channels for SA will be repeated to get all DN channels after which the
transmission will be started. When the required number of channels are found through the above process, a
Channel Allocate (CHALLOC) command is broadcast by SA to its 1-distance neighbors with the information
regarding the destination node DA, and the sub-packet number (SP N ) of every packet along with the allocated
channel number (CN ) as shown in Fig. 10(c). On receiving this CHALLOC command, node DA will record
the information regarding the SP N and CN for the sub-packets to be received from SA in its channel reservation
database, while any other node will release the temporary blockage of the corresponding channel numbers. If,
however, the required number of channels are not found within a maximum time unit, say T (δT ≪ T ), then the
node SA can not start its transmission at the moment and it broadcasts a Channel Release M essage (CRM )
signal of the form as shown in Fig. 10(d), to all of its 1-distance neighbors to release temporarily blocked channels.
Node SA has to try again for getting the required DN number of channels until success or the transmitter buffer
becomes 0. The algorithms Sense_Allocate_Transmitter_F DM − F DM A and Sense_Allocate_Receiver to be
executed by the node SA and any other receiving node are given in Algorithm 3, and 4, respectively.

Algorithm 3: Sense_Allocate_Transmitter_F DM − F DM A

Input: DA, DN, MAX
Output: Selected channel numbers c1, c2, · · · , cDN
channel_set = ∅;
cardinality = 0 / ∗ cardinality = |channel_set| ∗ /;
j = DN;
time = 0;
while time ≤ T do

Randomly generate a set of j distinct channel numbers c1, c2, · · · , cj in the range 1 to MAX such that for 1 ≤ i ≤ j, ci /∈ channel_set ;
Sense channel numbers c1, c2, · · · , cj in parallel /*to check if channel ci is idle*/;
for i = 1 to j do

if |channel_set| < DN then

if channel ci idle then

Form the T AM message with CN = ci;
trial_no_T AM = 1;
f lag = true;
while (trial_no_T AM < Max_trial_T AM AND f lag) do

Broadcast the T AM message to all 1-distance neighbors using the CCC;
Wait up to a maximum time of δT to receive reply message(s);
if reply received then

ﬂag=false;
if no N ACK received then

channel_set = channel_set ∪ {ci};
cardinality = cardinality + 1;

else

else

Send CCB with CN;

trial_no_T AM = trial_no_T AM + 1;

time = time + 1;

if DN = cardinality then

else

Broadcast CHALLOC command formed with the channel_set to all 1-distance neighbors;

Broadcast CRM formed with the channel_set to all 1-distance neighbors to release all temporarily blocked channels;

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

24
25

26
27
28
29
30

Sensing and Allocation of Channels for OF DM −F DM A Technique Node SA has to send a Trial Allocation
Message (T AM ) to all of its 1-distance neighbors which would contain the source and destination addresses (i.e.,
SA and DA) along with the Channel Number (CN ) in question. The structure of the T AM message is as shown
in Fig. 10(a), where the T AG ﬁeld is set to ’0’ for a T AM . On getting this T AM , a node U would send back
an acknowledgement (T AM _ACK) or a no-acknowledgement (N ACK) message to SA depending on whether
U is currently not using the channel CN for receiving any message or not, respectively. The T AM _ACK and

10

Algorithm 4: Sense_Allocate_Receiver

Input: T AM, CHALLOC
Output: Select and locked data channels.
/* The following code will be executed by all nodes receiving the T AM and CHALLOC messages*/ ;
if T AM received with source node SA and channel number CN then

if channel CN is free for its 1-distance neighbor AND CN is not temporarily blocked for any other node then

Update its channel usage database by temporarily marking channel number CN as being used by node SA;
Transmit T AM_ACK to SA through CCC;

else

Transmit N ACK to SA through CCC;

if CHALLOC received then

if DA in CHALLOC = its own id then

else

Update its channel reservation database with SP N and CN values assigned from CHALLOC for each channel;

Update its channel usage database by releasing the temporarily blocked channel numbers indicated in CHALLOC;

if CRM received then

Update its channel usage database by releasing the temporarily blocked channel numbers indicated in CRM;

1
2
3
4
5
6
7

8
9
10
11
12

13
14

Algorithm 5: Sense_Allocate_Transmitter_OF DM − F DM A

1
2
3
4
5
6
7
8
9
10
11

12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

29
30

31
32
33
34
35
36
37
38

Input: DA, DN, MAX
Output: Selected channel numbers c1, c2, · · · , cDN
channel_set = ∅;
j = DN;
time = 0;
f lag1 = true;
required_channel_numbers = DN;
while time ≤ T AND f lag1 do

temp_set = ∅;
Randomly generate a set of j distinct channel numbers c1
for k = 1 to j do

1, c1

2, · · · , c1

j in the range 1 to MAX such that for 1 ≤ i ≤ j, c1

i /∈ channel_set ;

c2
k = c1
c3
k = c1

k + 1 ;
k + 2 ;

Create a list of 3 × DN numbers with c1
Sense channel numbers c1
1 · · · , c1
for i = 1 to j do

1, c2

1, c3

for k = 1 to 3 do
if channel ck

i idle then

1, c2
j , c2

1, c3
j , c3

j , c2

1 · · · , c1
j in parallel /*to check if channel c1

j , c3
j ;

i , c2

i , c3

i is idle*/;

Form the T AM message with CN = ck
i ;
trial_no_T AM = 1;
f lag2 = true;
while (trial_no_T AM < Max_trial_T AM AND f lag2) do

Broadcast the T AM message to all 1-distance neighbors using the CCC;
Wait up to a maximum time of δT to receive reply message(s);
if reply received then

f lag2 = f alse;
if no N ACK received then

temp_set = temp_set ∪ {ck

i };

Send CCB with CN;

else

else

trial_no_T AM = trial_no_T AM + 1;

f ind_f ree_bands(temp_set, required_channel_numbers, channel_set);
if required_channel_numbers = 0 then

f lag1 = f alse;

time = time + 1;

if DN = |channel_set| then

else

Broadcast CHALLOC command formed with the channel_set to all 1-distance neighbors;

Broadcast CRM formed with the channel_set to all 1-distance neighbors to release all temporarily blocked channels;

11

Algorithm 6: procedure f ind_f ree_bands

Input: temp_set, required_channel_numbers;
Output: required_channel_numbers, channel_set
Sort temp_set in non-increasing order;
Scan temp_set to form band_set with the 2-tuple (band_length, start_channel_number) as its element ;
Set t ← |band_set| ;
Sort band_set in non-increasing order of band_length component of its elements (2-tuples) ;
for i = 1 to t do

if band_set[i].band_length > 3 then

channel_set = channel_set ∪ {band_set[i].start_channel_number + 1, · · · , band_set[i].start_channel_number +
band_set[i].band_length − 2};
temp_number = min[DN, band_set[i].start_channel_number + band_set[i].band_length − 2] ;
required_channel_numbers = required_channel_numbers − temp_number;

1
2
3
4
5
6
7

8
9

10

return(required_channel_numbers, channel_set);

N ACK messages are of the form as shown in Fig. 10(b), where the T AG ﬁeld is set to ’00’ for a N ACK and
’01’ for an T AM _ACK. Node U can check this fact efﬁciently if it maintains a channel usage database in the
form an AV L tree as shown in Fig. 11 where each node of the tree contains a tuple (CN , SA) and insertion or
ﬁnding an element in the tree is done based on the CN ﬁeld only. The choice of AV L tree as the data structure for
this purpose enables us insertion, deletion and ﬁnding an element from it all in O(log m) time where DN is the
total number of nodes in this tree. In case U is currently not using the channel CN for receiving any message, it
temporarily allocates the channel CN to the node SA and keeps this information by inserting a new node with this
CN and SA information in the AV L tree. This would help prohibiting other nodes selecting this channel CN for
transmitting their data when the node SA is still in the process of selecting all of its required channels and has not
yet completed that process. If SA does not receive any N ACK message within a maximum time-out period δT
from any node in reply to this T AM message, then SA puts this channel number CN in its chosen set of channels
channel_set; otherwise, SA can not use the channel CN for transmitting its data and hence it broadcasts a Clear
Channel Blockage (CCB) message to all of its 1-distance neighbors. The structure of the CCB message is same
as that of a T AM shown in Fig. 10(a), where the T AG ﬁeld is set to ’1’ for a CCB. If a node U receives this
CCB message, then U will delete the corresponding node from its AV L tree storing its channel usage status
(thus, the channel CN may now be treated as available by the node U ).

We assume that a free overlapping channel to be used by a node U refers to a channel which is i) not being used
by any node within the 2-distance neighborhood of U and ii) sufﬁciently separated from those channels which are
being used by all nodes in the 2-distance neighborhood to avoid inter-channel interference. We assume a gap of
one channel on either side of the channel to be used by U to avoid this interference. Thus, if channel i is to be
allocated to U , then channels i − 1, i and i + 1 must not be used by any node in the 2-distance neighborhood
of U . However, it can be generalized and we assume that with OF DM communication, a contiguous set of m
channels, 1 ≤ m ≤ DN may be allocated to a node U , provided we ﬁnd a set of m + 2 contiguous channels
which are not being used by any of the nodes in the 2-distance neighborhood of U . Thus, if none of the channels
· · · , i + m are being used by any node in the 2-distance neighborhood of U , then the m channels
i − 1, i,
· · · , i + m − 1 can be used by U in the OF DM mode. After randomly generating i, we sense
i, i + 1,
whether channels i, i + 1 and i + 2 are free (with respect to all nodes in 2-distance neighborhood of U ). We
mark all these free channels. Here also, we generate DN such random numbers and sense in parallel whether all
the channels corresponding to these randomly generated DN numbers are free, and mark all these free channels
found by this step. After this, we check the status of all channels to ﬁnd a consecutive band of m free channels,
3 < m < DN + 2, out of which (m − 2) consecutive channels may be allocated to U . If m − 2 = DN , then
the process is terminated; otherwise, the whole process is repeated for ﬁnding the m − 2 − DN channels still to
be allocated to U . As with F DM − F DM A implementation, one iteration of this loop is termed as an attempt.
Thus, the sensing time per attempts in OF DM − F DM A channel allocation technique is three times more than
that in F DM − F DM A channel allocation technique.

The detailed steps for ﬁnding free bands after getting the free channel numbers have been presented in the
procedure f ind_f ree_bands (Algorithm 6). First, the free channels numbers are included in a set temp_set
which is then sorted in non-increasing order. This sorted temp_set is then scanned once from left to right to
produce a set band_set containing the 2-tuples (band_length, start_channel_number) as its elements. This
set band_set is then sorted in non-increasing order based on the band_length ﬁeld of each 2-tuple. Finally,
this sorted band_set is scanned once from largest to smallest band_length to collect the free bands with largest
possible sizes to form the channel_set. Since the number of elements in temp_set is small (less than 3 × DN ),
the total time for executing this procedure will be very small.

12

SA

DA

SP Ni

CNi

TAG

Figure 12: DAT A_ACK message

SA

DA

CN1

CNd

Figure 13: CLS message

The above process of allocating channels for SA will be repeated to get all DN channels after which the
transmission will be started. When the required number of channels are found through the above process, a
Channel Allocate (CHALLOC) command is broadcast by SA to its 1-distance neighbors with the information
regarding the destination node DA, and the sub-packet number (SP N ) of every packet along with the allocated
channel number (CN ) as shown in Fig. 10(c). On receiving this CHALLOC command, node DA will record
the information regarding the SP N and CN for the sub-packets to be received from SA in its channel reservation
database, while any other node will release the temporary blockage of the corresponding channel numbers. If,
however, the required number of channels are not found within a maximum time unit, say T (δT ≪ T ), then the
node SA can not start its transmission at the moment and it broadcasts a Channel Release M essage (CRM )
signal of the form as shown in Fig. 10(d), to all of its 1-distance neighbors to release temporarily blocked channels.
Node SA has to try again for getting the required DN number of channels until success or the transmitter buffer
becomes 0.

The algorithm Sense_Allocate_Transmitter_OF DM − F DM A to be executed by the node SA and any other

receiving node are given in 5.

3.2 Algorithms for Transmission and Reception

When all the required DN channels are allocated to both the nodes SA and DA, the node SA starts transmission
of its multimedia data following the algorithm Transmit_Data_Packet given below. The receiving node DA will
execute the algorithm Receive_Data_Packet described below to receive the DN sub-packets corresponding to
each sub-packet number SP N and will reconstruct the original message from these sub-packets. If a sub-packet
is received correctly by DA, then an acknowledgement message (DAT A_ACK) will be sent by DA back to
SA. The structure of the ACK message is as shown in Fig. 12. If DAT A_ACK is not received within time
out period δT , then node SA has to sense if a primary user has started using his channel. Then it immediately
relinquishes this channel. SA will then look for some other alternative channel which can be allocated for trans-
mitting the corresponding data sub-packet. If this is not possible in an extreme situation with a maximum number
of trials, say maxtrial, then the node SA has to abort the transmission. The algorithms Transmit_Data_Packet
and Receive_Data_Packet to be executed by nodes SA and DA are given in Algorithms 7 and 8 respectively.

3.3 Algorithm for Deallocation of Channels

After successful transmission of all of its data packets, the transmitting node SA will release all the data channels
used by it (by deleting the corresponding entries from its AV L tree storing the channel usage status). Also it issues
a channel release message clear signal (CLS) of the form shown in Fig. 13 through CCC. The receiving node
DA release all data channels used by node DA for this communication (update AV L tree) and update its AN . All
other 1-distance neighbors are also deleting the corresponding entries from its AV L tree storing the channel usage
status. In case the node SA has to abort a transmission, it releases all the channels allocated to both SA and DA in
the same way. When one or more channels used by the node DA are released, the next channel reservation request
from its waiting queue is considered if that can be satisﬁed. The waiting queue can be implemented using a linked
list with IN F O ﬁeld of each node containing the 2-tuple (SA, DN ). However, sensing these waiting requests
in a First-Come-First-Serve (F CF S) order may result in a poor utilization of the channels. Instead, some other
variants of this servicing policy may be chosen to increase the channel utilization. For example, the request from a
node with the minimum number of required channels from amongst those waiting for the service may be chosen.
This would increase the channel utilization, but in turn, may lead to starvation (similar to Shortest-Job-First (SJF )
CPU scheduling in operating systems [1]) of the requests with a large value of DN . This problem of starvation
may, however, be avoided by taking into account the ageing factor of the accumulated requests, resulting into
an increased channel utilization with no starvation. The algorithms Deallocate_Data Channels_Transmitter and

13

Algorithm 7: Transmit_Data_Packet

Input: DN, channel_set, packet to be transmitted, maxtrial
Output: Transmitted packets
abort = f alse;
P N = 0;
while BT x = 1 AND abort = f alse do

for i = 0 to DN − 1 do

Form the sub-packet SP Ni with packet number = P N, sub_packet_number = i;
sub_packet_received[i] = f alse;

forall COGCHi, 0 ≤ i ≤ (DN − 1), in parallel do

trial_number = 1;
while trial_number ≤ maxtrial AND sub_packet_received[i] = f alse do

Transmit the sub-packet SP Ni through the channel COGCHi;
if DAT A_ACK received within the time out period δT then

sub_packet_received = true;

else

Sense if P U uses this channel;
if P U uses this channel then

Release this channel and look for another available channel using Algorithm 3 (F DM − F DMA) or 5
(OF DM − F DMA) ;
if a new channel number new_channel is found then

COGCHi = new_channel;
trial_number = 1 ;
/*re-transmission of sub_packet[i] is started on this new_channel */

trial_number = trial_number + 1;

if sub_packet_received = f alse then

abort = true;

P N = P N + 1;

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

17
18
19
20

21
22
23

24

Algorithm 8: Receive_Data_Packet

Input: Received Packet from Transmitter
Output: DAT A_ACK messages to the transmitting node SA
/* to be executed by the receiving node DA */ ;
forall COGCHi, 0 ≤ i ≤ (DN − 1), in parallel do

if packet received correctly with packet number P N then

Send DAT A_ACK message to the transmitting node SA with packet number P N and sub-packet number i;

1
2
3
4

14

Deallocate_Data Channels_Receiver to be executed by the node SA and DA are given in Algorithms 9 and 10
respectively.

Algorithm 9: Deallocate_Data Channels_Transmitter.

Input: Transmission completion signal
Output: Deallocation of all channels
if data transmission completed then

Set BT x = 0;

for COGCHi |(0≤i≤n−1) do

Transmits CLS to all 1-distance neighbors through CCC;
Release all data channels;

1
2
3
4
5

Algorithm 10: Deallocate_Data Channels_Receiver.

Input: CLS from transmitter
Output: Deallocation of all channels
for COGCHi |(0≤i≤n−1) do

if CLS received then

Release all data channels;

if DA in CLS = its own id then

Update AN;
Process the waiting queue;

1
2
3
4
5
6

4 Performance Analysis

4.1 Performance of Channel Allocation Algorithm using F DM − F DM A Technique
Let C be the total number of channels out of which we assume that π channels are in the primary band and the rest
are in the secondary band. At any time instant t, let Bp,t and Bs,t be the numbers of blocked (already allocated
by 2-distance neighbors and maintain certain minimum gap between two consecutively chosen channels to avoid
inter-channel interference for different nodes) channels in the primary band and the secondary band, respectively.
Thus, the total number of blocked channels at time t is given by Bt = Bp,t + Bs,t. Let Fp,t be the number of free
channels in the primary band at time t, which is given by π−Bp,t. Similarly, let Fs,t be the number of free channels
in the secondary band at time t, which is given by C − π − Bs,t. Let Ft = Fp,t + Fs,t. Let there be a request at
time t for allocating n channels to communicate a given multimedia signal. Referring to Algorithm 3, we try to
reserve the required number of channels, i.e., n channels in successive attempts, where each attempt corresponds
to a single execution of steps 5 to 26. Assuming that the availability of the Ft free channels can be uniformly
distributed over the total spectrum, the probability of getting i, 0 ≤ i ≤ n, free channels out of n channels
chosen at random follows hypergeometric distribution and is given by (Ft
. The expected number of free
Pi=1

where f = Ft
C . Thus, on an average, the number of reserved channels by the ﬁrst attempt is equal to nf . When
all channels are free, f = 1 and all the required n channels are reserved in the ﬁrst attempt. If f < 1, then
the remaining number of channels to be allocated after the ﬁrst attempt is n − nf = n(1 − f ), on an average.
For the second attempt, since Ft − nf is the number of free channels, the success probability for getting a free
channel will again be a hypergeometric distribution, leading to nf (1 − n
C ) channels reserved by the second
attempt on an average. Thus, on an average, after the second attempt, the total number of reserved channels is
min{n, nf + nf (1 − n
C )}. Generalizing
this observation, we have the following result.

C )} and the number of channels yet to be allocated is n − {nf + nf (1 − n

channels over all possible situations is then given by

i−1 )(C−Ft
n−i )

Ft(Ft −1
(C
n)

i )(C−Ft
n−i )
(C
n)
n

Ft(C−1
n−1)
(C
n)

i(Ft

i )(C−Ft
n−i )
(C
n)

=

n

Pi=0

=

= nf ,

Lemma 1. The expected number of channels reserved during the (k + 1)th attempt, k ≥ 0, is nf (1 − kn
on an average, the total number of channels reserved after the kth attempt is min(n, nkf ).

C ). Also,

Proof : We prove the result by induction. From the discussion above, the proposition that at the kth attempt,
} on an average, is true for k = 1 and 2. Let us assume that

the number of channels reserved is nf {1 − (k−1)n
this proposition is true for k = k.

C

15

Table A-1: All possible cases about the status of three consecutive channels

Status of c1
k

Status of c2
k

Status of c3
k

0
0
0
0
1
1
1
1

0
0
1
1
0
0
1
1

0
1
0
1
0
1
0
1

Probability of selecting c2
k
f 2
f.(1 − f )
f.(1 − f )
(1 − f )2
f 2
f.(1 − f )
f.(1 − f )
(1 − f )2

and c3
k

as free

Number of free channels

3
2
1
1
2
1
1
0

Hence, at the (k + 1)th attempt, the expected number of channels reserved is equal to

n(Ft−[nf +nf (1− n

C )+···+nf {1− (k−1)n

C

}])

C

≈ nf (1 − kn

C ).

Hence, on an average, the total number of channels reserved after the kth attempt is min[n, {nf + nf (1 −

n

C ) + nf (1 − 2n
Theorem 1. To reserve n channels, the required number of attempts, on an average, is equal to ⌈ 1

C ) + · · · + nf (1 − (k−1)n

}] ≈ min(n, nkf ).

C

f ⌉.

Proof: By lemma 1, the total number of channels reserved after kth attempt is min(n, nkf ), on an average.
Hence, if α is the minimum number of attempts required for reserving all the n channels, then nf α ≥ n, i.e.,
α ≥ 1

f , on an average. Hence the theorem.

Remark 1. Theorem 1 basically establishes that more the number of free channels, less is the average number of
attempts for acquiring the required numbers of channels.

Corollary 1. On an average, reservation of all n channels can be done in ψ = ⌈ 1
time for a single execution of the loop in the channel allocation algorithm.

f ⌉ζ + O(1) time, where ζ is the

It may be noted that, if we use Bit-Map [15, 30] protocol for communication through CCC, then ζ is O(∆)

time, where ∆ is the maximum node degree of the network as already mentioned in Section 2.2.

4.2 Performance of Channel Allocation Algorithm using OF DM − F DM A Technique
In order to evaluate the theoretical performance of the Algorithm 5, let us assume that we try to reserve n channels
in successive attempts, where each attempt corresponds to a single execution of steps 6 to 34 of the algorithm.
k is one of the n channels chosen at random
We ﬁrst generate n random numbers c1
in which the probability that i channels will be free is given by the hypergeometric distribution as in the case
of F DM − F DM A allocation. However, in Algorithm 5, we also check whether the two adjacent channels
k + 2 are free. There can be eight different possibilities regarding the status of these
k = c1
c2
three channels as depicted in Table A-1, where an entry is ’0’ if the corresponding channel is free, and ’1’ if it is
C = f . Table A-1
blocked. Note that the probability that the channel c1
k in each of the eight possible situations with the corresponding
shows the probability of selections of c2
number of free channels found.

k + 2 will be free, is given by Ft

k, 1 ≤ k ≤ n. Note that c1

k + 1 and c3

k + 1 or c1

k and c3

k = c1

From Table A-1, given that the channel c1

k is free, the expected number of free channels selected out of these
three consecutive channels is given by 3f 2 + 2f (1 − f ) + f (1 − f ) + (1 − f )2 = f 2 + f + 1. Similarly, given that
k is blocked, the expected number of free channels selected out of these three consecutive channels
the channel c1
is given by 2f 2 + 2f (1 − f ) = 2f . Thus, the expected number of free channels over all possible situations is
given by,

i.(f 2 + f + 1)

(Ft

i )(C−Ft
n−i )
n)
(C

+

(n − i).2f

(Ft

i )(C−Ft
n−i )
n)
(C

= n(3f − f 2 + f 3) ≈ 3nf , when f << 1.

Thus, in a heavy trafﬁc condition, when f is very small, the average number of attempts to reserve the required

n

Pi=0

n

Pi=0

number of channels made by Algorithm 5 is approximately equal to ⌈ 1

3f ⌉.

5 Simulation of Channel Allocation Algorithm

In this section, we show the results of simulating our proposed protocol, and evaluate its performance in terms of
the average number of attempts made by the proposed algorithm for acquiring the required number of channels
to communicate a given multimedia signal and also in term of success rate. We also compare our proposed
protocol with ﬁrst-ﬁt and best-ﬁt channel allocation techniques. Simulations are performed 10, 000 times on

16

Table A-2: Average number of blocked channels by 2-distance neighbors with different values of range

Range in meter

100 Nodes

200 Nodes

300 Nodes

400 Nodes

500 Nodes

600 Nodes

700 Nodes

800 Nodes

900 Nodes

1000 Nodes

1100 Nodes

Number of Blocked Channels

10
15
20
25

9
33
62
96

32
82
143
212

55
133
227
334

79
184
312
453

104
237
397
571

129
288
481
689

153
340
565
811

178
392
652
927

203
444
736
1048

229
497
819
1166

254
549
905
1283

Table A-3: Average number of free channels for 500 and 700 nodes in Non-Overlapping Channel

Average number of free primary
channels (FP )

Average number of free sec-
ondary channels (FS)

Average number of free chan-
nels (F )

Average number of blocked
channels

254
387
547
721

303
490
715
961

307
252
187
115

287
210
117
16

For 500 nodes

For 700 nodes

439
361
266
164

410
300
168
23

746
613
453
279

697
510
285
39

random network topologies with each of 100 to 1100 nodes, in which nodes are distributed randomly within an
area of (100 × 100)m2. The number of channels required by a node for communication is also varied from 1 to 8.
We assume that, the signal to be sent has a mix of different multimedia signal types with the proportion of 50%,
20%, 15%, 10% and 5% for voice, data, still image, video and online streaming data, respectively, with demand
number of channels (DN ) as 1, 2, 4, 6 and 8, respectively.

For F DM −F DM A technique, the simulation is performed with values of each of the primary and secondary
non-overlapping channels as 500, each, as shown in Fig. 3(a). Thus, C, the total number of channels is 1000. The
primary channels are assumed to be uniformly distributed over the whole spectrum. We assume that on an average,
30% of the primary channels are used by primary users for different broadcasting purposes. That is, 150 primary
channels are used by different broadcasting purposes and the rest 70% are idle [21], and those 70% will be available
for cognitive radio users. For OF DM − F DM A technique, the simulation is performed with values of each of
the primary and secondary overlapping channels as 1000 each, because the width of one non-overlapping channel
is equal to that of two overlapping channels, as shown in Fig. 3(b). Thus, C, the total number of overlapping
channels will be taken as 2000 for the given total communication bandwidth of 1000 non-overlapping channels.

When a cognitive radio user wants to transmit a multimedia signal, the average number of channels blocked
by all of its neighbors up to distance two, with different values of range are shown in Table A-2. Note that these
values exclude the 150 primary channels used for various broadcasting purposes. From Table A-2, the number of
blocked channels by all 2-distance neighbors increases with the sensing and transmission range as expected.

For F DM − F DM A channel allocation technique, Table A-3 shows the values of Fs, Fp and F = Fp + Fs
for 500 and 700 nodes, respectively for different values of range used in the simulation experiment. Column 1 of
Table A-3 also show the total number of blocked channels, i.e., the channels allocated to all nodes up to 2-distance
neighbors of a transmitting node for avoiding the hidden node problem (which are actually taken from Table A-2
corresponding to 500 and 700 nodes, respectively), plus 150 broadcasting channels blocked by primary users.
Table A-4, for OF DM − F DM A channel allocation technique, show the values of Fs, Fp and F = Fp + Fs
for 700 and 1000 nodes, respectively for different values of range used in the simulation experiment. Column

Table A-4: Average number of free channels for 700 and 1000 nodes in Overlapping Channel

Average number of free primary
channels (FP )

Average number of free sec-
ondary channels (FS)

Average number of free chan-
nels (F )

Average number of blocked
channels

303
490
715
961

379
647
969
1316

545
367
210
97

466
251
94
10

For 700 nodes

For 1000 nodes

17

640
431
246
114

549
295
111
11

1185
798
456
211

1015
546
205
21

Figure 14: Number of attempts vs percentage of blocked channel for 700 nodes with F DM − F DM A

1 of Table A-4 also show the total number of blocked channels, i.e., the channels allocated to all nodes up to
2-distance neighbors of a transmitting node for avoiding the hidden node problem (which are actually taken from
Table A-2 corresponding to 700 and 1000 nodes, respectively). We notice from Table A-4 that the total number
of free channels F is much less than the difference between the total number of channels (which is 1000 in our
case) and the number of blocked channels given in column 1 of these corresponding Table A-4. This is because of
the fact that for avoiding channel interferences between two distinct pairs of communicating nodes, we maintain
a gap of one channel on either side of a channel allocated to a communicating pair of nodes for computing the
number of free channels to be allocated to other users. From Table A-4, we see that with 700 nodes, the number
of free channels can go down to 211, i.e., 10.55% of the total number of channels for a range of 25 meters. This
situation corresponds to a moderate trafﬁc in the network. On the other hand, with 1000 nodes and a range of 25
meters, the number of free channels can go down to as low as only 21, which corresponds to a very heavy trafﬁc
in the network.

The average number of attempts for different values of DN (corresponding to different multimedia signal
types) with different percentage values of blocked channels for 500 and 700 nodes for F DM − F DM A channel
allocation technique and 700 and 1000 nodes for OF DM − F DM A channel allocation technique are shown in
Tables A-8 and A-9, respectively. The values in these tables capture the behavior of our proposed algorithm under
different trafﬁc load (by load we mean the percentage of blocked channels) ranging from 30% (light load) to more
than 95% (extremely heavy load). Both the Tables A-8 and A-9 show that when the number of free channels
decreases, the average number of attempts increases, as expected. For F DM − F DM A technique, when the
number of blocked channels lies between 30% and 70%, we require only 2 to 4 attempts. However, in the most
unlikely situations of an extremely heavy trafﬁc load with about 96% blocked channels, the average number of
attempts will be 29 for DN = 8, as shown in Table A-8. For OF DM − F DM A technique, when the number of
blocked channels lies between 50% and 70%, the average number of attempt will be equal to 2, while with about
90% blocked channels, the algorithm needs at most 4 attempts on an average. For extremely heavy trafﬁc load with
about 99% blocked channels, the average number of attempt is equal to 45 for DN = 8, as shown in Table A-9.
We, however, note that the sensing time per attempts in OF DM − F DM A channel allocation technique is three
times more than that in F DM − F DM A channel allocation technique, as already mentioned in Section 3.1.2. We
see from Tables A-8 and A-9 that the number of attempts found through simulation agrees well with the theoretical
values except when the trafﬁc is extremely heavy, e.g., 96% blocked channels for F DM − F DM A technique
and 99% blocked channels for OF DM − F DM A technique. This small deviation may arise due to randomness
in the simulation process.

Tables A-8 and A-9 also show the performance comparison of the proposed protocol with the ﬁrst-ﬁt and
best-ﬁt allocation techniques. We see that our proposed protocol is superior to either of them under all trafﬁc
situations in respect of average number of attempts as well as the success rate, where the success rate is deﬁned
as the percentage of the cases the protocol in question can successfully allocate channels. Thus, with DN = 8
and trafﬁc load of 70%, our protocol with F DM − F DM A technique requires only 4 attempts as opposed to
500 attempts using ﬁrst-ﬁt and 638 attempts using best-ﬁt allocations. Similarly, with DN = 8 and trafﬁc load of
70%, our protocol with OF DM − F DM A technique requires only 2 attempts as opposed to 250 attempts using

18

Figure 15: Number of attempts vs percentage of blocked channel for 1000 nodes with OF DM − F DM A

Table A-5: Comparison of F DM − F DM A and OF DM − F DM A for different types of multimedia signal with different
nodes and range 25 meter

Number
of nodes

100 nodes
200 nodes
300 nodes
400 nodes
500 nodes
600 nodes
700 nodes
800 nodes
900 nodes
1000 nodes
1100 nodes

Success rate in F DM − F DMA

Success rate in OF DM − F DMA

Demand Number of channels

Demand Number of channels

8

100
100
100
100
100
100
100

0
0
0
0

6

100
100
100
100
100
100
100

0
0
0
0

4

100
100
100
100
100
100
100

0
0
0
0

2

100
100
100
100
100
100
100

0
0
0
0

1

100
100
100
100
100
100
100

0
0
0
0

8

100
100
100
100
100
100
100
100
100
100

0

6

100
100
100
100
100
100
100
100
100
100

0

4

100
100
100
100
100
100
100
100
100
100

0

2

100
100
100
100
100
100
100
100
100
100

0

1

100
100
100
100
100
100
100
100
100
100

0

ﬁrst-ﬁt and 639 attempts using best-ﬁt allocations. Further, with DN = 8, using F DM − F DM A technique,
the success rate of our protocol is always 100% even up to a trafﬁc load of 96%, while both the ﬁrst-ﬁt and best-
ﬁt techniques fail to allocate any channel under this condition. Similarly, with DN = 8 and a trafﬁc load of
99%, using OF DM − F DM A technique, neither of the ﬁrst-ﬁt and best-ﬁt techniques can allocate the channels,
although our proposed protocol has the success rate of 100%. The nature of variation of the simulated values of
the required number of attempts under different trafﬁc conditions with 700 (for F DM − F DM A) and 1000 (for
OF DM − F DM A) nodes is also shown in Fig. 14 and 15, respectively for different values of DN .

Table A-5 and Fig. 16 show the performance comparison between the F DM − F DM A and OF DM −
F DM A implementations with our protocol. From Table A-5 and Fig. 16, we notice that with a range of 25
meter, F DM − F DM A can not allocate the channel beyond 700 nodes, while OF DM − F DM A can work
satisfactorily even with 1000 nodes.

5.1 Execution Time of the Proposed Protocol

Assuming that the address ﬁelds follow IP v4 (or IP v6) format, the maximum length of a message for channel
sensing (e.g., T AM ) will be 10 (or 34) bytes which need 1.25 (or 4) msec with a bandwidth of 64 Kbps for CCC.
From the data given in Table A-8, we see that for video transmission with about 70% trafﬁc load through eight 64
Kbps channels, four attempts are needed by the Algorithm 3 with F DM − F DM A technique, which corresponds
to an overhead of 4 × 8 × 1.25 msec = 40 msec with IP v4 format (4 × 8 × 4 = 128 msec with IP v6 format). On
the other hand, with OF DM − F DM A and about 70% blocked channels, Algorithm 5 makes 2 attempts, leading
to 2 × 3 × 8 × 1.25 = 60 msec with IP v4 format (2 × 3 × 8 × 4 = 192 msec with IP v6 format) for DN = 8.

19

Figure 16: Success rate comparison for F DM − F DM A vs OF DM − F DM A with 8 demand number of
channels

5.2 Delay and Delay Jitter in Transmission

In this section, we show our experimental results through simulation by using our proposed scheme on different
types of multimedia data. The ﬁle categories and the test ﬁles have been chosen so as to reﬂect as closely as
possible the different types of wireless data communication that can be seen in today’s world. For this purpose,
we choose ﬁles categorized into four different ﬁle types, namely, video, music, image and text. Below we provide
a description of ﬁles chosen from each of these categories :

1. Video ﬁles : The video ﬁles are in M P EG and DAT format [18]. Average size of these ﬁles is about 48

M B.

2. Music ﬁles : The music ﬁles are in M P 3 encoded format [17]. Average size of these ﬁles is about 5.87

M B.

3. Image ﬁles : The image ﬁles are in JP EG format [16]. Average size of these ﬁles is about 1.5 M B.

4. Text ﬁles : The text ﬁles are in T XT ﬁle format [11]. Average size of these ﬁles is about 80.89 KB.

For our experiment with F DM − F DM A technique, we assume a data frame size of 1024 bytes using IP v4
packet format. We also assume that the channel request and release rates of a user are 0.7 and 0.3, respectively.
Each ﬁle was tested 1000 times during the simulation to obtain the average delay and delay jitter as reported in
the Tables A-10, A-11, A-12 and A-13.

In each of the Tables A-10, A-11, A-12 and A-13, the ﬁrst column represents the ﬁle size. For video transmis-
sion we use 8 channels and for music, images and data we use 6, 4 and 2 channels, respectively. The next column
represents the average number of channels deallocated by P U s when a P U asks for its channel currently used by
the SU . The third column represents ideal transmission (IT ) time for transmitting ﬁles (with zero overhead). The
next column represents initial channel allocation (ICA) time for grabbing all the required DN channels before
starting the communication. The ﬁfth column represents channel reallocation (CR) time when a SU has to deal-
locate a channel and then a new channel is re-allocated to the SU . The, actual transmission (AT ) time is equal
to IT + ICA + CR, which is given in the next column. The seventh column represents the maximum possible
jitter between two consecutive packets due to channel reallocation. The next column represents the mean jitter
and the last column represents the standard deviation of jitter. The appropriate units for the values in different
columns have been mentioned in the tables. In each of the above tables, the bold-faced entries in a row represent
the average behavior for the corresponding trafﬁc load.

These simulation results show that the overhead in time due to the proposed allocation algorithm constitutes
a very small fraction of the total transmission time. For example, from Table A-10, we see that with a trafﬁc
load of about 70%, for transmitting video ﬁles of size about 48 MB, the total transmission time through a 64
Kbps channel is around 786.5 sec, while the overhead due to channel allocation and reallocation required by our
proposed algorithm is approximately 49 msec (≈ 0.0062%).

20

During the transmission of the packets, a delay may appear between the transmission of two consecutive
data packets whenever a P U channel is allocated and that channel is to be released due to the demand from the
corresponding P U . This delay is due to the execution of our proposed algorithm for reallocating the channels
which varies from zero to a ﬁnite amount of time, causing delay jitter. We have estimated this delay jitter for all
the above cases of our simulation experiment with different types of real-life multimedia data and ﬁnd that this
jitter is very small. For example, from Table A-10, we see that with a trafﬁc load of about 70%, for transmitting
video ﬁles, the mean jitter is around 0.0015 msec with a standard deviation of about 0.064 msec, whereas the
transmission time of a sub-packet of size 1024 bytes through 64 Kbps channel is 125 msec.

6 Analysis of Protocol by Markov Model

To analyze the performance of the proposed protocol for channel allocation and deallocation, we model the system
by the Markov’s birth and death process, where channel allocation corresponds to the birth process and dealloca-
tion corresponds to the death process. At any time instant, the allocation status of the system can be designated
by a state Sk′
k of the system, where k represents the number of reserved secondary channels and k′ represents
that of the reserved primary channels. The system will start transmitting the message when all the n required
channels are reserved, i.e., k + k′ = n, and then allocated by the Algorithm 3. At any state Sk′
k , when a single new
(free) channel is reserved by the Algorithm 3, the system can move either to the state Sk′+1
(if the new channel
is reserved from the primary band) or to the state Sk′
k+1 (if the new channel is reserved from the secondary band).
Similarly, if i channels are reserved in one attempt (Algorithm 3), out of which i1 channels (0 ≤ i1 ≤ i), are in
the primary band and the rest i − i1 are in the secondary band, then the system will move from the state Sk′
k to the
state Sk′+i1
k+i−i1

k

.

µ1 and the probability per unit time that the system moves from the state Sk′

Let µ1 be the probability per unit time for reserving one new channel in one attempt (either from the primary
band or from the secondary band). Then the probability per unit time that the system moves from the state Sk′
k
to Sk′+1
k to
k+1 is given by (Fs,t
1 )
Sk′
(Ft
1 )
channels in one single attempt. Then the system can move from the state Sk′
state Sk′+2

is given by (Fp,t
1 )
(Ft
1 )
µ1. In a similar manner, let µ2 be the probability per unit time for reserving two new
k to 3 possible states − i) to the
µ2, and iii) to the

with a probability of (Fp,t
2 )
µ2, ii) to the state Sk′
2 )
(Ft
k+1 with a probability of (Fp,t
1 )(Fs,t
1 )
state Sk′+1
µ2. Similarly, when i channels are reserved in one single attempt, the
(Ft
2 )
transition probabilities from the state Sk′
k to i + 1 different possible states can be expressed in terms of µi, the
total probability per unit time for reserving i channels, Fp,t, Fs,t and Ft. We assume that the time required for
allocating the required number n of channels is small enough so that the values of Fp,t, Fs,t and Ft do not change
during the allocation process. Thus, in all the expressions above for transition probabilities, we replace Fp,t, Fs,t
and Ft by time-invariant values Fp, Fs and F , respectively. Let λ be the probability per unit time that a grabbed
primary channel is released by the system due to the arrival of a channel allocation request from a primary user.
For the time being, we assume that only one primary channel may be released at any instant of time. Also, let T
be the total time required for completing the communication process of a multimedia message. That means, 1
T is
the probability per unit time that the system moves from the state Sn−k
0. Further, let σ
be the probability per unit time that the Algorithm 3 terminates unsuccessfully (when all the requested number of
channels could not be allocated) after the time-out period.

k+2 with a probability of (Fs,t
2 )
2 )
(Ft

, 0 ≤ k ≤ n, to the state S0

k

k

k

6.1 1-Channel System

0, when no channel has been reserved, ii) S1

Suppose we want to transmit a voice signal for which n = 1. In this case, the system will have only three possible
0, at which one channel is reserved from the primary band
states − i) S0
i , (0 ≤ i, j ≤ 1) be the probability
and iii) S0
that the system is in state Sj
i . The state transition diagram for this system is as shown in Fig. 17. The different
transition arcs are labeled with the corresponding probabilities of transition during a small time interval dt. Using

1, at which one channel is reserved from the secondary band. Let pj

21

(Fp
1 )
(F
1)

µ1dt

(Fs
1 )
(F
1)

µ1dt

S 1

0

S 0

0

S 0

1

λdt

1

T dt

1

T dt

Figure 17: State transition diagram for 1-channel system

the principle of detailed balance for transitions between the states S0

0 and S1

0, we can write,

Similarly, for the transitions between the states S0

0 and S0

1, we have,

(cid:18)λ +

1

T(cid:19) p1

0 = (cid:0)Fp
1(cid:1)
(cid:0)F
1(cid:1)

µ1p0
0

Since the system must be in one of the three states, we have,

1
T

p0

1 = (cid:0)Fs
1(cid:1)
(cid:0)F
1(cid:1)

µ1p0
0

Substituting the values of p1

0 and p0

1 from eqns. (2) and (3) in eqn. (4), we get,

p0
0 + p0

1 + p1

0 = 1

That is,

(Fp
1 )
(F
1)
λ + 1
T

p0

0 +





µ1p0

0 +


(Fs
1 )
(F
1)
1
T




µ1p0

0 = 1

p0
0 =

1

1 +


(Fp
1 )
(F
1)
λ+ 1

T 


µ1 +


(Fs
1 )
(F
1)
1

T 


µ1

µ1

(Fp
1 )
(F
1)
λ+ 1



1 +


1 )
(Fs
(F
1)
1

T 
µ1 +


T 
µ1 +



(Fp
1 )
(F
1)
λ+ 1

T 

T 


(Fs
1 )
(F
1)

1

(2)

(3)

(4)

(5)

(6)

We say that the system in the active condition when the required numbers of channels are reserved, and the
probability for the system being in that condition is given by,

P1 = p0

1 + p1

0 =

(7)

µ1

We already assume that T is the total time required for completing the communication process of a multimedia
message. We also ﬁnd that the probability for the system being in active state P1. So, the average time for
communicating the multimedia data is become T
. Thus, the average waiting time can be expressed as Γ1 =
P1
T ( 1−P1
P1

).

6.2 2-Channel System

We now consider the case for the 2-channel system for which n = 2. As in the case of 1-channel system, we draw
the state transition diagram for this system as shown in Fig. 18, consisting of the six states S0
0 and
2.
S0

0 , S0

1 , S1

0 , S1

1, S2

22

µ2dt

1 )
(Fs
1 )
(F

µ1dt

(Fp

1 )
1 )(Fs
2 )
(F
(Fp
1 )
1 )
(F

µ1dt

S 1

1

λdt

S 0

1

σdt

S 0

0

1

T dt

1 )
(Fs
1 )
(F

µ1dt

1

T dt

λdt

λdt

σdt

S 1

0

2 )
(Fs
2 )
(F

µ2dt

S 0

2

1

T dt

(Fp
2 )
2 )
(F

µ2dt

(Fp
1 )
1 )
(F

µ1dt

S 2

0

Figure 18: State transition diagram for 2-channel system

Considering all possible transitions to and from the state S0

2, we have,

Similarly, corresponding to all transitions to and from the state S2

1
T

p0

(cid:18)λ +

1

T(cid:19) p2

µ2p0

µ2p0

µ1p0
1

µ1p1
0

0, we have,

1, we have,

0 + (cid:0)Fs
1(cid:1)
(cid:0)F
1(cid:1)
0 + (cid:0)Fp
1(cid:1)
(cid:0)F
1(cid:1)
0 + (cid:0)Fp
1(cid:1)(cid:0)Fs
1(cid:1)
(cid:0)F
2(cid:1)

2 = (cid:0)Fs
2(cid:1)
(cid:0)F
2(cid:1)
0 = (cid:0)Fp
2(cid:1)
(cid:0)F
2(cid:1)
1 + (cid:0)Fs
1(cid:1)
(cid:0)F
1(cid:1)
µ1 + (cid:0)Fs
1(cid:1)
(cid:0)F
1(cid:1)
µ1) p0

µ1) p1

0, we get,

0 = λp2
0

1 = λp1
1

µ1p1

µ1p0

µ1 + (cid:0)Fs
1(cid:1)
(cid:0)F
1(cid:1)

1 = (cid:0)Fp
1(cid:1)
(cid:0)F
1(cid:1)
(λ + σ + (cid:0)Fp
1(cid:1)
(cid:0)F
1(cid:1)
(σ + (cid:0)Fp
1(cid:1)
(cid:0)F
1(cid:1)

Corresponding to all possible transitions to and from the state S1

(cid:18)λ +

1

T(cid:19) p1

µ2p0
0

Considering all possible transitions to and from the state S1

Similarly, considering all possible transitions to and from the state S0

1, we get,

We also have the following condition to be satisﬁed :

0 + p0
p0

1 + p1

0 + p0

2 + p2

0 + p1

1 = 1

The total probability for the system to be in the active condition, is given by

P2 = p0

2 + p2

0 + p1
1

Like 1-channel system we can get the value of P2 and Γ2 in terms of λ, σ, µ, T, Fs, Fp and F easily.

23

(8)

(9)

(10)

(11)

(12)

(13)

(14)

r2dt

S 1
2

r′
1

dt

λdt

r1,2dt

S 0
2

dt

1
T

r1,1dt

r1dt

r1dt

σdt

r2,1dt

r3dt

S 0
3

S 0
0

σdt

dt

1
T

λdt

σdt

S 1
0

r′
2

dt

S 0
1

S 1
1

λdt

σdt

r′
1

dt

λdt

dt

1
T

r1,1dt

σdt

λdt

r′
2

dt

r′
3

dt

dt

1
T

S 2
0

r′
1

dt

λdt

S 3
0

r1dt

S 2
1

r2dt

r1 =

r′
1 =

r2 =

r′
2 =

r3 =

r′
3 =

(Fs
1 )
(F
1)
(Fp
1 )
(F
1)
(Fs
2 )
(F
2)
(Fp
2 )
(F
2)
(Fs
3 )
(F
3)
(Fp
3 )
(F
3)
1 )(Fs
1 )
(F
2)
(Fp
2 )(Fs
1 )
(F
3)
(Fp

(Fp

1 )(Fs
2 )
(F
3)

µ1

µ1

µ2

µ2

µ3

µ3

µ2

µ3

µ3

r1,1 =

r2,1 =

r1,2 =

Figure 19: State transition diagram for 3-channel system

6.3 3-Channel System

We now consider the case for the 3-channel system for which n = 3. As in the case of 1-channel and 2-channel
0,
system, we draw the state transition diagram for this system as shown in Fig. 19, consisting of the ten states S0
3, r1,1, r1,2 and r2,1 used in the discussion
3 and S3
0, S0
S1
below refer to those given in Fig. 19.

0. The value of r1, r′

1, r2, r′

2, r3, r′

0, S0

1, S2

1, S1

2, S1

2, S2

1, S0

Considering all possible transitions to and from the state S0

{σ + r′

1 + r1} p0

2, we have,
2 = λp1
2

Similarly, considering all possible transitions to and from the state S2

0, we have,

(15)

(16)

(17)

(18)

(19)

(20)

1 + r1} p2
Considering all possible transitions to and from the state S1

{σ + λ + r′

1 + r1} p1
Considering all possible transitions to and from the state S1

{σ + λ + r′

{σ + λ + r′

2 + r2 + r1,1} p1

Considering all possible transitions to and from the state S0

2 + r2 + r1,1} p0
Considering all possible transitions to and from the state S0

{σ + r′

0 = λp3
0
1, we get,
1 = λp2
1
0, we have,
0 = λp2
0

1, we get,
1 = λp1
1
3, we have,

1
T

3 = (r3p0
p0

0 + r1p0

2 + r2p0
1)

24

Table A-6: Pn and Γn with different message lengths, Fs = 23 and Fp = 16 for non-overlapped channels with 700 nodes

Pn/Γn

Active State

Average Wait-
ing Time (in
units of T )

0.01
0.9769
0.969
0.962
2.3692
3.1979
3.9501

0.25
0.6849
0.6512
0.6282
1.8404
2.1426
2.3671

P1
P2
P3
Γ1
Γ2
Γ3

1/T

0.5
0.5423
0.5172
0.5012
1.6883
1.867
1.9903

0.75
0.4517
0.4332
0.4217
1.6183
1.7446
1.8287

0.99
0.3901
0.3758
0.367
1.5792
1.6778
1.7419

Figure 20: Pn with different lengths of messages for Fs = 23 and Fp = 16

Considering all possible transitions to and from the state S3

0, we get,

(cid:18)λ +

1

T(cid:19) p3

0 = (r′

3p0

0 + r′

2p1

0 + r′

1p2
0)

Considering all possible transitions to and from the state S1

2, we have,

(cid:18)λ +

1

T(cid:19) p1

2 = (r1,2p0

0 + r′

1p0

2 + r2p1

0 + r1p1

1 + r1,1p0
1)

Considering all possible transitions to and from the state S2

1, we get,

(cid:18)λ +

1

T(cid:19) p2

1 = (r′

1p1

1 + r′

2p0

1 + r2,1p0

0 + r1,1p1

0 + r1p2
0)

We also have the following condition to be satisﬁed :

p0
0 + p0

1 + p1

0 + p0

2 + p2

0 + p1

1 + p0

3 + p3

0 + p1

2 + p2

1 = 1

The total probability for the system to be in the active condition, is given by

P3 = p0

3 + p3

0 + p1

2 + p2
1

(21)

(22)

(23)

(24)

(25)

Like 1-channel system we can get the value of P3 in terms of λ, σ, µ, T, Fs, Fp and F easily.

6.4 Examples Showing the Results from Markov Model

In our simulation, we assumed the time-out period to be equal to that corresponding to twice the number of
attempts for allocating the required number of channels as predicted by our theoretical estimate. With this time-out
period, our algorithm always terminated successfully. Accordingly, we set the value of σ, which is the probability
per unit time that the Algorithm 3 terminates unsuccessfully after the time-out period, as equal to zero. For an
extremely heavy trafﬁc load of above 96% with 700 nodes using F DM − F DM A technique, we use the data

25

Figure 21: Γn with different lengths of messages for Fs = 23 and Fp = 16

Table A-7: Pn and Γn with different message lengths, Fs = 11 and Fp = 10 for overlapped channels with 1000 nodes

Pn/Γn

Active State

Average Wait-
ing Time (in
units of T )

0.01
0.9742
0.9643
0.9555
2.6496
3.7059
4.6541

0.25
0.6746
0.6374
0.6139
1.9298
2.2755
2.5161

P1
P2
P3
Γ1
Γ2
Γ3

1/T

0.5
0.5349
0.508
0.4922
1.7391
1.9374
2.0633

0.75
0.4464
0.4266
0.4155
1.6535
1.7918
1.8757

0.99
0.386
0.3709
0.3625
1.6065
1.7135
1.7766

taken from Table A-3 with Fp = 23 and Fs = 16. Assuming σ = 0, λ = 0.3 and µ1 = µ2 = µ3 = 0.7. The
values of both Pn and Γn are shown in Tables A-6, for n = 1, 2, 3 and for different values of message length.
The values of Pn and Γn are also shown graphically in Figs. 20 and 21, respectively. From Table A-6, we observe
that the probability for the system to be in active condition is more for larger lengths of messages. The value
of Pn actually depends on two main factors, i) length of the message, and ii) channel mobility (which depends
on deallocation of a channel when asked by a primary user and then how quickly we get another channel for
communication). Thus, under extremely heavy trafﬁc load of above 95%, the probability that the system is in the
active condition is effectively dependent only on the length of the message. When the message length is very long,
our proposed protocol enables the system to be more than 96% of the time in active condition, while for very short
length messages, the system is in active condition for more than 36% of the time. This may be explained by the
fact that longer time is needed for transmitting longer messages, and thus the system remains in active condition
by grabbing the channel for a larger fraction of time for longer messages.

Figure 22: Pn with different lengths of messages for Fs = 11 and Fp = 10

26

Figure 23: Γn with different lengths of messages for Fs = 11 and Fp = 10

With 1000 nodes using OF DM − F DM A technique for Fs = 11 and Fp = 10, we have similarly computed
the values of Pn and Γn for n = 1, 2, 3 which are shown in Tables A-7. These values of Pn and Γn are also
plotted in Figs. 22 and 23, respectively.

6.5 Generalization to n-Channel System

To get the value of Pn for any value of n, we need ﬁve basic types of states for which the probabilities are given
as below.

1. When all reserved channels are secondary :

2. When all reserved channels are primary :

(cid:18)λ +

3. When k + k′ = n and ∀i, 0 < i < n,

1

T(cid:19) pn

1
T

p0
n =

µkp0

n−k

n

Xk=1(cid:0)Fs
k(cid:1)
(cid:0)F
k(cid:1)
Xk=1(cid:0)Fp
k(cid:1)
(cid:0)F
k(cid:1)

n

0 =

µkpn−k

0

(cid:18)λ +

1

T(cid:19) pn−i

i =

i

n−i

F

k+k′<n

Xk=0
Xk′ =0
((cid:0) Fp
n−i−k′(cid:1)(cid:0) Fs
i−k(cid:1)
(cid:0)
n−k−k′(cid:1)
i (cid:1)(cid:0) Fs
µn−k) p0
n−k−i(cid:1)
(cid:0) F
n−k(cid:1)

µn−k−k′ pk′

k )

k = λp1
k

4. When k + k′ < n and k′ = 0 (no primary channel is reserved),

(σ +

and

n−k

Xi=0 (cid:0)Fp

5. When k + k′ < n and k′ > 0 (at least one primary channel is reserved),

λ + σ +

n−k−k′

Xi=0




Fs

(cid:0)Fp
i (cid:1)(cid:0)
n−k−k′−i(cid:1)
n−k−k′(cid:1)
(cid:0)

F

27

pk′
k =

µn−k−k′


k

λpk′+1

(26)

(27)

(28)

(29)

(30)

Since the system must be always in one of the above types of states, we have,

n

Xk=0

n−k

Xk′=0

pk′
k = 1

(31)

When k + k′ = n, the system will be in active state, and the probability for the system being in such a state
. The average waiting time for an n − channel system can be expressed as

k=0

pn−k
k

is given by, Pn = Pk′=n−k

Γn = T ( 1−Pn
Pn

).

7 Conclusion

A novel channel allocation technique for multimedia communication in a CRN has been presented in this paper.
The proposed technique works even when the white spaces in the spectrum do not provide a contiguous bandwidth
large enough for maintaining the QoS of the multimedia signals. Our technique is based on ﬁrst ﬁnding a set of
non-contiguous white spaces whose total width will be equal to the required bandwidth of the multimedia signal.
We then sub-divide the bits from the original signal in the time domain, form sub-packets with these subsets of bits
and transmit these sub-packets through the set of channels so found. The algorithms for sensing, allocating and
deallocating the required channels from the available white spaces taking into account the presence of high-priority
primary users have been presented along with the algorithms for transmitting and receiving the data packets with
two different implementations using F DM − F DM A and OF DM − F DM A techniques. The performance of
this system has been analyzed by means of a Markov model. Also we ﬁnd that the average number of attempts
for acquiring the required number of channels as obtained from simulation agrees well to the theoretical values
for all types of trafﬁc situations ranging from light to extremely heavy (about 96% blocked channels). Simulation
results show that the proposed technique always outperforms the existing ﬁrst-ﬁt and best-ﬁt allocation techniques
in terms of the average number of attempts needed for acquiring the necessary number of channels for all trafﬁc
situations ranging from light to extremely heavy trafﬁc.

28

2
9

Table A-8: Average number of attempts required for allocating channels for different types of multimedia signal with 500 and 700 nodes in F DM − F DM A

Average
number
of
free
channels
(F )

Demand
num-
ber
channels
(DN)

of

Our proposed protocol

at-

Number
of
tempts
(theoreti-
cal value)

at-

Number
of
tempts
(simu-
lation
results)

se-

Number
of
lected
primary
channels

se-

Number
of
lected
secondary
channels

Average
success
rate

746

613

453

279

697

510

285

39

8
6
4
2
1
8
6
4
2
1
8
6
4
2
1
8
6
4
2
1

8
6
4
2
1
8
6
4
2
1
8
6
4
2
1
8
6
4
2
1

2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
4
4
4
4
4

2
2
2
2
2
2
2
2
2
2
4
4
4
4
4
26
26
26
26
26

2
2
2
2
2
3
3
3
2
2
3
3
3
3
3
5
5
4
4
4

2
2
2
2
2
3
3
3
3
2
4
4
4
4
4
29
28
28
27
26

3
2
2
1
0
3
2
2
1
0
3
2
2
1
0
3
2
1
1
0

3
2
2
1
0
3
2
2
1
0
3
2
2
1
0
3
3
2
1
0

5
4
2
1
1
5
4
2
1
1
5
4
2
1
1
5
4
3
1
1

5
4
2
1
1
5
4
2
1
1
5
4
2
1
1
5
3
2
1
1

100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100

100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100

at-

Number
of
tempts
(simu-
lation
results)

For 500 nodes

36
18
8
3
1

124
45
15
4
1

430
199
40
7
2

508
476
213
16
3

For 700 nodes

55
25
10
3
1

332
112
27
5
1

500
474
200
15
3
0
0

494
391
25

ﬁrst-ﬁt protocol

se-

Number
of
lected
primary
channels

se-

Number
of
lected
secondary
channels

Average
success
rate

best-ﬁt protocol

se-

Number
of
lected
primary
channels

se-

Number
of
lected
secondary
channels

at-

Number
of
tempts
(simu-
lation
results)

Average
success
rate

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
4
3
2
1
0

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
0
0
2
1
0

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
4
3
2
1
1

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
0
0
2
1
1

100
100
100
100
100
100
100
100
100
100

62.266
99.498

100
100
100
2.441
28.429
99.136

100
100

100
100
100
100
100

90.594
99.996

100
100
100
2.844
31.158
99.468

100
100

0
0

0.204
78.472

100

160
88
48
26
19
315
124
45
16
9

648
350
77
15
6

630
610
292
23
5

192
93
44
21
14
570
230
60
14
7

638
610
277
22
5
0
0

502
406
26

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
4
3
2
1
0

3
2
2
1
0
3
2
2
1
0
3
3
1
1
0
0
0
2
1
0

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
4
3
2
1
1

5
4
2
1
1
5
4
2
1
1
5
3
3
1
1
0
0
2
2
1

100
100
100
100
100
100
100
100
100
100

62.266
99.498

100
100
100
2.441
28.429
99.136

100
100

100
100
100
100
100

90.594
99.996

100
100
100
2.844
31.158
99.468

100
100

0
0

0.204
78.472

100

Table A-9: Average number of attempts required for allocating channels for different types of multimedia signal with 700 and 1000 nodes in OF DM − F DM A
Average
number
of
free
channels
(F )

Demand
num-
ber
channels
(DN)

Our proposed protocol

ﬁrst-ﬁt protocol

best-ﬁt protocol

se-

se-

at-

of

at-

Number
of
tempts
(theoreti-
cal value)

Number
of
attempts∗
(simu-
lation
results)

Number
of
lected
primary
channels

se-

Number
of
lected
secondary
channels

Average
success
rate

Number
of
tempts
(simu-
lation
results)

se-

Number
of
lected
primary
channels

se-

Number
of
lected
secondary
channels

Average
success
rate

at-

Number
of
tempts
(simu-
lation
results)

Number
of
lected
primary
channels

se-

Number
of
lected
secondary
channels

Average
success
rate

3
0

1185

798

456

211

1015

546

205

21

8
6
4
2
1
8
6
4
2
1
8
6
4
2
1
8
6
4
2
1

8
6
4
2
1
8
6
4
2
1
8
6
4
2
1
8
6
4
2
1

1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
4
4
4
4
4

1
1
1
1
1
2
2
2
2
2
4
4
4
4
4
32
32
32
32
32

2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
4
4
4
4
4

2
2
2
2
2
2
2
2
2
2
4
4
4
4
4
45
41
39
37
36

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
4
3
2
1
0

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
4
3
2
1
0

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
4
3
2
1
0

4
3
2
1
0
4
3
2
1
1
4
3
2
1
1
4
3
2
1
1

For 700 nodes

42
30
16
9
4
94
52
25
12
5

405
152
53
18
8

946
686
191
39
15

For 1000 nodes

56
36
19
10
4

250
104
41
16
7

958
707
201
40
15
0

413
965
582
115

100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100

100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100
100

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
4
3
2
1
0

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
0
3
2
1
0

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
4
3
2
1
1

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
0
3
2
1
1

100
100
100
100
100
100
100
100
100
100

99.473

100
100
100
100

34.442
88.625

100
100
100

100
100
100
100
100

99.996

100
100
100
100

31.828
86.829
99.998

100
100

0
0.1
5.7
90.3
100

229
161
109
74
63
323
174
90
47
31
874
364
129
45
24

1386
1084
343
70
29

242
154
93
57
43
639
274
109
44
25

1388
1103
358
71
29
0

413
1218
658
135

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
4
3
2
1
0

4
3
2
1
0
4
3
2
1
0
4
3
2
1
0
0
3
2
1
0

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
4
3
2
1
1

4
3
2
1
1
4
3
2
1
1
4
3
2
1
1
0
3
2
1
1

100
100
100
100
100
100
100
100
100
100

99.473

100
100
100
100

34.442
88.625

100
100
100

100
100
100
100
100

99.996

100
100
100
100

31.828
86.829
99.998

100
100

0
0.1
5.7
90.3
100

∗The sensing time per attempts in OF DM − F DMA channel allocation technique is three times more than that in F DM − F DMA channel allocation technique.

3
1

Video File Size
(in bits)

Average Number
of Channel Deal-
location by PUs

387685216
389171680
390823936
393725152
399652192
403520768
411901408
413877088
415495232
420989536

402684220.8

387685216
389171680
390823936
393725152
399652192
403520768
411901408
413877088
415495232
420989536

402684220.8

387685216
389171680
390823936
393725152
399652192
403520768
411901408
413877088
415495232
420989536

402684220.8

387685216
389171680
390823936
393725152
399652192
403520768
411901408
413877088
415495232
420989536

3.901
4.053
4.059
3.891
3.973
4.072
4.083
4.049
4.168
4.112
4.0361

4.026
3.923
4.011
3.986
4.191
4.13
4.147
4.071
4.278
4.139
4.0902

4.293
4.202
4.305
4.306
4.393
4.212
4.409
4.25
4.323
4.394
4.3087

5.169
4.919
4.971
5.074
5.119
5.016
5.083
5.077
5.093
5.16

757.1976875
760.1009375

763.328

768.9944375
780.5706875

788.1265

804.4949375
808.3536875
811.514125
822.2451875

786.49261875

757.1976875
760.1009375

763.328

768.9944375
780.5706875

788.1265

804.4949375
808.3536875
811.514125
822.2451875

402684220.8

5.0681

786.49261875

283.672

Table A-10: Average Delay and Delay Jitter for different real-life Video ﬁles
Ideal Transmis-
sion Time (IT)
(in sec)

Channel Reallo-
cation Time (CR)
(in msec)

Initial
Channel
Allocation Time
(ICA) (in msec)

Trans-
Actual
Time
mission
(AT)
sec)
(AT=IT+ICA+CR)

(in

Maximum Jitter
(in msec)

Average number of free channels (F ) is 697

757.1976875
760.1009375

763.328

768.9944375
780.5706875

788.1265

804.4949375
808.3536875
811.514125
822.2451875

786.49261875

757.1976875
760.1009375

763.328

768.9944375
780.5706875

788.1265

804.4949375
808.3536875
811.514125
822.2451875

19.8
19.68
19.79
19.92
19.76
19.61
19.61
19.76
19.79
19.71
19.743

5.85375
6.0525
6.09375
5.88375
5.9975
6.22125

6.155

6.07375
6.27875
6.1375

757.22334125

760.12667

763.35388375
769.02024125

780.596445

788.15233125
804.5207025
808.37952125
811.54019375

822.271035

6.07475

786.5184365

Average number of free channels (F ) is 510

23.68
24.26
24.02
24.14
23.93
24.24
23.96
24.18

24
23.8

6.48625
6.3325
6.4825
6.51125
6.7525
6.64625

6.675
6.5425
6.80875
6.80375

757.22785375

760.13153

763.3585025
769.02508875

780.60137

788.15738625
804.5255725

808.38441

811.54493375
822.27579125

1.96625

1.94

1.99875
1.97625

2.01

2.07625
2.01125
1.97875
2.03125
1.99375
1.99825

2.31625

2.285
2.305

2.35625
2.34625
2.3125

2.32

2.2825
2.3025

2.4

786.49261875

24.021

6.604125

786.523243875

2.322625

Average number of free channels (F ) is 285

39.77
39.83
40.04
39.41
40.35
39.82
39.88
39.76
40.55
40.11
39.952

9.4225

9.1

9.185

9.32625
9.3875
9.16875
9.3675
9.2375
9.25375
9.5325

757.24688

760.1498675
763.377225

769.04317375

780.620425

788.17548875

804.544185
808.402685

811.56392875

822.29483

9.298125

786.541868875

Average number of free channels (F ) is 39

279.59
281.79
286.82
283.47
288.57
282.11
285.96
281.94
285.01
281.46

70.92625
70.46875

69.2

70.0275
68.0825
66.82875
70.90625
68.72875

67.725

68.43625
69.133

757.54820375
760.45319625

763.68402
769.347935
780.92734

788.47543875
804.85180375
808.70435625

811.86686

822.59508375
786.84542375

Mean Jitter
msec)

(in

Standard Devia-
tion In Jitter (in
msec)

0.000989475
0.0010191125

0.00102175
0.000979325
0.0009833625
0.001010275
0.0009791625

0.00096165

0.0009903375

0.0009554

0.000988985

0.0010963875
0.0010662625
0.0010869375
0.0010837625

0.0011071

0.0010792875

0.00106205

0.0010358625
0.0010739375
0.0010591125
0.001075075

0.001625

0.0015
0.0015
0.0015
0.0015
0.0015
0.0015
0.0015
0.0015
0.0015

0.0015125

0.012

0.011875
0.011625
0.011625
0.011125
0.010875
0.01125
0.010875
0.010625
0.010625
0.01125

0.038375
0.038625
0.039125
0.03825
0.0385

0.039625
0.038375
0.03775
0.038625
0.03775
0.0385

0.043125
0.042375
0.042875
0.043125

0.0435
0.0425

0.042375

0.0415

0.042375
0.042875

0.0426625

0.06575
0.064125

0.0635

0.064875
0.064375
0.063875

0.0625
0.06275
0.0625
0.06375
0.0638

0.578125

0.581

0.564125
0.55675
0.5405

0.534625
0.55925
0.548125
0.528875
0.531625
0.5523

3.9

3.8725

3.8

3.92875
3.94875
3.9225
3.81375
3.8975

3.88

4.01125
3.8975

38.32625
38.9775
37.66625
36.8475
36.27125
36.2325
37.86625
37.84625
36.2175
36.64125
37.28925

Table A-11: Average Delay and Delay Jitter for different real-life Music ﬁles
Ideal Transmis-
sion Time (IT)
(in sec)

Channel Reallo-
cation Time (CR)
(in msec)

Initial
Channel
Allocation Time
(ICA) (in msec)

Maximum Jitter
(in msec)

Trans-
Actual
Time
mission
(AT)
sec)
(AT=IT+ICA+CR)

(in

Average number of free channels (F ) is 697

125.184

125.9946666667
125.9973333333
126.1767291667
126.5493333333
126.6866666667

130.182375

131.3306666667
131.3357708333
133.2506666667

14.2575
14.475
14.55

14.3175
14.4825
14.4375
14.4525
14.3925
14.3925
14.505

1.14625
1.22125

1.265

1.27125
1.19125

1.285
1.2275

1.32
1.33
1.375

125.19940375

126.0103629167
126.0131483333
126.1923179167
126.5650070833
126.7023891667

130.198055

131.3463791667
131.3514933333
133.2665466667

128.2688208333

14.42625

1.26325

128.2845103333

Average number of free channels (F ) is 510

125.184

125.9946666667
125.9973333333
126.1767291667
126.5493333333
126.6866666667

130.182375

131.3306666667
131.3357708333
133.2506666667

17.7375

18.12

17.9175
17.9625
17.9925
17.7075

17.7
17.67

17.8425
17.8125

1.76125
1.78875
1.87375
1.93875
1.79625

1.775

1.87375

1.865
1.8775

1.83
1.838

125.20349875

126.0145754167
126.0171245833
126.1966304167
126.5691220833
126.7061491667

130.20194875

131.3502016667
131.3554908333
133.2703091667

Average number of free channels (F ) is 285

125.184

125.9946666667
125.9973333333
126.1767291667
126.5493333333
126.6866666667

130.182375

131.3306666667
131.3357708333
133.2506666667

29.5875
29.9175

29.37

29.2425

29.16

29.7525

29.1

29.4225

29.79
29.1

4.1925
4.015
4.1725
4.2225
4.1525
4.205
4.49

4.41375
4.11375
4.27875

125.21778

126.0285991667
126.0308758333
126.2101941667
126.5826458333
126.7206241667

130.215965

131.3645029167
131.3696745833
133.2840454167

2.92375
2.7925
2.92625
2.99375
2.9225
2.905

3.12875

3.1

2.91125
3.0225

0.8475
0.9125
0.92375
0.9475
0.8625

0.93
0.885

0.95875
0.98375
0.97125
0.92225

1.32375
1.3025
1.3825
1.36875
1.30875
1.2975
1.33625

1.37

1.31875
1.3225

Mean Jitter
msec)

(in

Standard Devia-
tion In Jitter (in
msec)

0.0011720375

0.00123985

0.00125
0.00125

0.0012045

0.00125

0.0012058

0.00125
0.00125
0.001375

0.0012447188

0.00175
0.001875
0.001875

0.002

0.001875
0.00175
0.001875
0.001875
0.001875
0.00175
0.00185

0.00425
0.004125
0.00425
0.00425
0.00425
0.00425
0.004375
0.00425

0.004

0.004125

0.03025
0.03225

0.033
0.0335

0.030875
0.03325
0.031125

0.0335

0.034125
0.034125
0.0326

0.0465
0.04575
0.04825
0.04875
0.04575
0.0455
0.04675
0.04725

0.046
0.0455
0.0466

0.103375

0.0985

0.102875
0.104625
0.10225
0.1025

0.108125
0.10625
0.100125
0.10275

Music File Size
(in bits)

Average Number
of Channel Deal-
location by PUs

48070656
48381952
48382976
48451864
48594944
48647680
49990032
50430976
50432936
51168256

49255227.2

48070656
48381952
48382976
48451864
48594944
48647680
49990032
50430976
50432936
51168256

0.745
0.785
0.822

0.8

0.787
0.824
0.785
0.831
0.842
0.899
0.812

0.921
0.946
0.947
0.997
0.919
0.939
0.993
1.006
0.983
0.99

3
2

48070656
48381952
48382976
48451864
48594944
48647680
49990032
50430976
50432936
51168256

49255227.2

48070656
48381952
48382976
48451864
48594944
48647680
49990032
50430976
50432936
51168256

1.338
1.344
1.365
1.353
1.345
1.395
1.429
1.432
1.334
1.373
1.3708

2.811
2.821
2.798
2.695
2.794
2.899
2.821
2.839
2.93
2.75

49255227.2

0.9641

128.2688208333

17.84625

128.2885050833

1.333125

128.2688208333

29.44425

4.225625

128.3024907083

2.962625

0.0042125

0.1031375

Average number of free channels (F ) is 39

125.184

125.9946666667
125.9973333333
126.1767291667
126.5493333333
126.6866666667

130.182375

131.3306666667
131.3357708333
133.2506666667

208.0425
205.545
209.4075
209.3625

210.39

207.0825
205.575
211.38
206.445
206.805

46.91

48.30125

46.585

43.43375
47.80125
46.5275
48.3425
46.33125
47.4175
45.8925

125.4389525

126.2485129167
126.2533258333
126.4295254167
126.8075245833
126.9402766667

130.4362925

131.5883779167
131.5896333333
133.5033641667

29.3175
30.1775
29.2625
27.34125
29.93875

29.435
30.51

29.09875
29.33375
27.82375

0.048
0.049

0.04725

0.044

0.048375

0.047
0.0475

0.045125
0.046125

0.044

1.05175
1.07725
1.042625

0.974

1.067125
1.04275
1.068125
1.01725

1.029
0.9795

49255227.2

2.8158

128.2688208333

208.0035

46.75425

128.5235785833

29.223875

0.0466375

1.0349375

Image File Size
(in bits)

Average Number
of Channel Deal-
location by PUs

Table A-12: Average Delay and Delay Jitter for different real-life Image ﬁles
Ideal Transmis-
sion Time (IT)
(in sec)

Initial
Channel
Allocation Time
(ICA) (in msec)

Channel Reallo-
cation Time (CR)
(in msec)

Trans-
Actual
Time
mission
(AT)
sec)
(AT=IT+ICA+CR)

(in

Maximum Jitter
(in msec)

Mean Jitter
msec)

(in

Standard Devia-
tion In Jitter (in
msec)

Average number of free channels (F ) is 697

9.235
9.125
9.165
9.275
9.215
9.11
9.095
9.08
9.22
9.19
9.171

0.34625

0.385

0.33125

0.385

0.38125
0.35375

0.385

0.4

0.38375
0.43375
0.3785

48.63508125
48.6809475
48.78393375
49.2163475
49.42665875
49.65990125
50.12207375
50.41238625
50.5071975
50.776905

0.325

0.34625

0.31

0.3475
0.3475
0.32875

0.345
0.36

0.35625

0.395

0.0009111875

0.0010105
0.00086715

0.001

0.0009851375
0.000911725
0.0009821375
0.001015225
0.000971525
0.001092575

49.62214325

0.346125

0.0009747163

0.017

0.018375
0.01625
0.018375
0.01825
0.017125

0.018

0.01875
0.018375

0.0205
0.0181

0.036375
0.03025

0.032

0.034375

0.031

0.031875
0.030875
0.032375
0.031875
0.033375

0.002

0.001625
0.00175
0.001875
0.00175
0.00175
0.001625
0.00175
0.00175
0.00175

0.0017625

0.0324375

0.0045

0.004125
0.004375
0.004375
0.00425
0.004625
0.004875

0.005

0.004375
0.004625

0.0805

0.071625
0.078375
0.078625
0.073875

0.0815
0.08825
0.0885
0.0765

0.081375

3
3

12448128
12459888
12486256
12596912
12650768
12710512
12828824
12903144
12927384
12996424
12700824

12448128
12459888
12486256
12596912
12650768
12710512
12828824
12903144
12927384
12996424
12700824

12448128
12459888
12486256
12596912
12650768
12710512
12828824
12903144
12927384
12996424
12700824

12448128
12459888
12486256
12596912
12650768
12710512
12828824
12903144
12927384
12996424
12700824

0.23
0.232
0.199
0.248
0.234
0.221
0.24
0.249
0.25
0.263
0.2366

0.331
0.311
0.32
0.342
0.302
0.309
0.31
0.327
0.306
0.313
0.3171

0.501
0.464
0.44
0.497
0.444
0.469
0.511
0.524
0.471
0.524
0.4845

1.455
1.429
1.428
1.463
1.465

1.4

1.396
1.419
1.501
1.425
1.4381

48.6255

48.6714375
48.7744375
49.2066875
49.4170625
49.6504375
50.11259375
50.40290625
50.49759375
50.76728125
49.61259375

48.6255

48.6714375
48.7744375
49.2066875
49.4170625
49.6504375
50.11259375
50.40290625
50.49759375
50.76728125
49.61259375

48.6255

48.6714375
48.7744375
49.2066875
49.4170625
49.6504375
50.11259375
50.40290625
50.49759375
50.76728125
49.61259375

48.6255

48.6714375
48.7744375
49.2066875
49.4170625
49.6504375
50.11259375
50.40290625
50.49759375
50.76728125
49.61259375

Average number of free channels (F ) is 510

11.57
11.755
11.69
11.775
11.905
11.675
11.93
11.655
11.58
11.75

0.7575
0.63125

0.68

0.72625
0.66125
0.67125

0.66

0.69875
0.68375
0.71375

48.6378275
48.68382375
48.7868075
49.21918875
49.42962875
49.66278375
50.12518375

50.41526

50.5098575
50.779745

11.7285

0.688375

49.625010625

Average number of free channels (F ) is 285

19.315
19.395
19.39
18.76
19.865
19.665
19.61
19.725
19.645
19.48
19.485

1.72875

1.565
1.6675
1.705
1.6275
1.7825
1.91625
1.96875
1.7075
1.83875
1.75075

48.64654375
48.6923975
48.795495
49.2271525
49.438555
49.671885
50.13412
50.4246

50.51894625

50.7886

0.68875
0.57125
0.60375

0.655

0.59375
0.6125
0.595

0.62125
0.6125
0.64625

0.62

1.51375

1.335
1.48

1.4875
1.3925
1.55375

1.695

1.69125
1.46125
1.55125

49.6338295

1.516125

0.0045125

0.0799125

Average number of free channels (F ) is 39

137.89
131.225
135.71
138.17
133.615
138.69
136.1

134.345
136.59
136.87

27.355
27.9175
27.91375

28.785
27.2375
26.57125
25.3825
26.0275
27.545

27.82375

48.790745
48.83058

48.93806125
49.3736425
49.577915

49.81569875
50.27407625
50.56327875
50.66172875

50.931975

19.87375
21.2225

21.02
20.625
20.34

20.06125
18.91625
18.91625
19.88125
20.9325

0.072

0.07325
0.073125
0.07475
0.070375

0.0685
0.06475

0.066

0.06975
0.070125

135.9205

27.255875

49.775770125

20.178875

0.0702625

1.10475
1.158875

1.1525

1.146125
1.112375
1.091125
1.02425

1.033

1.085375
1.123125
1.10315

0.2019375
0.226625
0.24025

0.8821875
2.519125
3.54425
4.413125
5.497875
10.0345

24.2101875
5.17700625

0.2019375
0.226625
0.24025

0.8821875
2.519125
3.54425
4.413125
5.497875
10.0345

3
4

Data File Size (in
bits)

Average Number
of Channel Deal-
location by PUs

25848
29008
30752
112920
322448
453664
564880
703728
1284416
3098904
662656.8

25848
29008
30752
112920
322448
453664
564880
703728
1284416
3098904
662656.8

25848
29008
30752
112920
322448
453664
564880
703728
1284416
3098904
662656.8

25848
29008
30752
112920
322448
453664
564880
703728
1284416
3098904
662656.8

0
0
0

0.004
0.009
0.014
0.013
0.018
0.029
0.06

0.0147

0.003

0
0

0.003
0.008
0.016
0.012
0.03
0.04
0.076
0.0188

0.002
0.001
0.001
0.006
0.018
0.028
0.036
0.038
0.057
0.135
0.0322

0.008
0.011
0.01
0.044
0.13
0.162
0.204
0.215
0.358
0.508
0.165

Table A-13: Average Delay and Delay Jitter for different real-life Text ﬁles
Ideal Transmis-
sion Time (IT)
(in sec)

Initial
Channel
Allocation Time
(ICA) (in msec)

Channel Reallo-
cation Time (CR)
(in msec)

Maximum Jitter
(in msec)

Trans-
Actual
Time
mission
(AT)
sec)
(AT=IT+ICA+CR)

(in

Mean Jitter
msec)

(in

Standard Devia-
tion In Jitter (in
msec)

Average number of free channels (F ) is 697

3.9925
4.1225
4.035
4.11

4.0375
3.915
3.9925
4.0775
3.9675
3.9575

4.02075

0
0
0

0.00625

0.015
0.0275
0.02625
0.0275
0.05125
0.10625
0.026

0.20593

0.2307475
0.244285

0.88630375
2.5231775
3.5481925
4.41714375

5.50198

10.03851875
24.21425125

5.181053

Average number of free channels (F ) is 510

0
0
0

0.00625

0.015
0.0275
0.02625
0.0275
0.05125

0.105

0.025875

0
0
0

0.0008928625

0.00075

0.0009821375

0.00075

0.0006395375
0.0006487375
0.0005592125
0.0005222488

0
0
0

0.002375
0.003375
0.00525
0.004375
0.00425
0.00575
0.007625
0.0033

0.0075

0.00375

0.00525

5.415
5.565
5.495
5.405
5.505
5.4275

5.6

5.4475

5.5

0.0075

0
0

0.00625

0.02

0.03625
0.02375
0.06375
0.0975
0.1825

0.04375

0.20736
0.23219
0.245745

0.88759875

2.52465

3.54971375
4.41874875
5.50338625
10.0400975
24.2157425
5.18252325

0
0

0.00625

0.02

0.03625
0.02375

0.06

0.09375

0.175

0
0

0.0008928625

0.001

0.00125

0.000678575

0.0015

0.001234175
0.000960525

0.04225

0.0011266138

24.2101875
5.17700625

5.3725

5.47325

0.2019375
0.226625
0.24025

0.8821875
2.519125
3.54425
4.413125
5.497875
10.0345

24.2101875
5.17700625

0.2019375
0.226625
0.24025

0.8821875
2.519125
3.54425
4.413125
5.497875
10.0345

24.2101875
5.17700625

Average number of free channels (F ) is 285

9.1725

9.54

9.6875
9.2875
9.3875
9.2975
9.7025
9.495
9.5725
9.2675
9.441

0.00375
0.00375
0.0025
0.02125
0.0875
0.08875
0.17125
0.11125
0.28125
0.54625
0.13175

0.21111375
0.23616875

0.24994

0.89149625

2.5286

3.55363625
4.42299875
5.50748125
10.04435375
24.22000125

5.186579

Average number of free channels (F ) is 39

65.48
66.48

63.5325

64.85
66.66
65.68

66.3075
66.3075

66.82
66.67

0.22875
0.3425
0.37625
1.05375
4.40625
5.44375
6.0925

6.04

9.1375
10.94

0.26764625
0.2934475
0.30415875
0.94809125
2.59019125
3.61537375

4.485525
5.5702225
10.1104575
24.2877975

0.00375
0.00375
0.0025
0.02125
0.0875
0.0875
0.17125
0.11125
0.2775
0.5175

0.128375

0.22875
0.3425
0.37625
1.05375
4.33375
5.19125
5.8725
5.74125
8.3625
9.53625

0.001875
0.001875
0.00125

0.003

0.004375
0.003125
0.004875
0.002625
0.003625
0.002875
0.00295

0.114375
0.17125
0.188125

0.1505

0.220375
0.194375
0.174125

0.1405

0.115625
0.057625

65.87875

4.406125

5.247291125

4.103875

0.1526875

0
0

0.002375

0.0045

0.006875

0.004

0.009375
0.01075
0.012875
0.0056

0.002625
0.002625
0.00175

0.008

0.019625

0.0165
0.029
0.017
0.0315

0.038125
0.016675

0.16175
0.242125

0.266

0.39825

0.973

0.994125
1.001125
0.884625
0.962125
0.716625
0.659975

References

[1] P. B. Galvin A. Silberschatz and G. Gagne. Operating System Concepts. John Wiley & Sons, New Delhi,

eighth edition, 2009.

[2] D. P. Agrawal and Qing-An Zeng. Chapter 8 : Trafﬁc channel allocation. Online Lecture Notes, 2003.

[3] E. Ahmed, A. Gani, S. Abolfazli, L.J. Yao, and S.U. Khan. Channel assignment algorithms in cognitive radio
networks: Taxonomy, open issues, and challenges. Communications Surveys Tutorials, IEEE, PP(99):1–1,
2014.

[4] Ian F Akyildiz, Won-Yeol Lee, and Kaushik R Chowdhury. Crahns: Cognitive radio ad hoc networks. AD

hoc networks, 7(5):810–836, 2009.

[5] I.F. Akyildiz, Won-Yeol Lee, M.C. Vuran, and S. Mohanty. A survey on spectrum management in cognitive

radio networks. Communications Magazine, IEEE, 46(4):40 –48, april 2008.

[6] I.F. Akyildiz, W.Y. Lee, M.C. Vuran, and S. Mohanty. Next generation/dynamic spectrum access/cognitive

radio wireless networks: a survey. Computer Networks, 50(13):2127–2159, 2006.

[7] Suzan Bayhan and Fatih Alagöz. Distributed channel selection in crahns: A non-selﬁsh scheme for mitigating
spectrum fragmentation. Ad Hoc Networks, 10(5):774 – 788, 2012. Special Issue on Cognitive Radio Ad
Hoc Networks.

[8] Suzan Bayhan and Fatih Alagöz. A markovian approach for best-ﬁt channel selection in cognitive radio
networks. Ad Hoc Networks, 12(0):165 – 177, 2014.
(1) {SCEnarios} for ad hoc Network Evaluation
Studies(SCENES); (2) Modeling, Analysis and Simulation of Wireless and Mobile Systems &amp; (3) Al-
gorithmic Aspects of Ad-Hoc Networks.

[9] S. Bokharaiee, H.H. Nguyen, and E. Shwedyk. Blind spectrum sensing for ofdm-based cognitive radio

systems. Vehicular Technology, IEEE Transactions on, 60(3):858–871, 2011.

[10] M.M. Buddhikot. Understanding dynamic spectrum access: Models,taxonomy and challenges.

In New
Frontiers in Dynamic Spectrum Access Networks, 2007. DySPAN 2007. 2nd IEEE International Symposium
on, pages 649 –663, april 2007.

[11] CSDMS. University of colorado boulder, Nov 2015.

[12] ET FCC. Docket no. 02-135 spectrum policy task force report, November 2002.

[13] ET FCC. Docket no 03-222 notice of proposed rule making and order, December 2003.

[14] ET FCC. Docket no 03-237 notice of inquiry and notice of proposed rulemaking, November 2003.

[15] A Behrouz Forouzan. Data Communications & Networking (sie). Tata McGraw-Hill Education, 2006.

[16] Google. Google images, Nov 2015.

[17] Google. Mp3 converted from youtube video, Nov 2015.

[18] Google. Youtube video, Nov 2015.

[19] Zhao Hang-sheng and Wang Fan. Qos provisioning single-channel opportunistic spectrum access strategy in
cognitive radio networks. In High Performance Computing and Communications (HPCC), 2011 IEEE 13th
International Conference on, pages 966–970, Sept 2011.

[20] F.K. Jondral. Software-deﬁned radio: basics and evolution to cognitive radio. EURASIP J. on Wireless

Comm. and Networking, 2005(3):275–283, 2005.

[21] A.S. Kamil and I. Khider. Open research issues in cognitive radio. architecture, 12:13, 2008.

[22] Y.R. Kondareddy, P. Agrawal, and K. Sivalingam. Cognitive radio network setup without a common control

channel. In IEEE MILCOM 2008, pages 1 –6, nov. 2008.

35

[23] S. Krishnamurthy, M. Thoppian, S. Venkatesan, and R. Prakash. Control channel based mac-layer conﬁgura-
tion, routing and situation awareness for cognitive radio networks. In IEEE MILCOM 2005, pages 455–460,
2005.

[24] H. Kushwaha, Yiping Xing, R. Chandramouli, and H. Heffes. Reliable multimedia transmission over cogni-

tive radio networks using fountain codes. Proceedings of the IEEE, 96(1):155–165, Jan 2008.

[25] H. Mahmoud, T. Yucek, and H. Arslan. Ofdm for cognitive radio: merits and challenges. Wireless Commu-

nications, IEEE, 16(2):6–15, 2009.

[26] A. Masri, C.F. Chiasserini, C. Casetti, and A. Perotti. Common control channel allocation in cognitive radio
networks through uwb multihop communications. In 1st Nordic Workshop. on Cross-Layer Optimization in
Wireless Networks, 2010.

[27] MP Mishra and PC Saxena. Survey of channel allocation algorithms research for cellular systems. Int J

Netw Commun, 2(5):75–104, 2012.

[28] III Mitola, J. Cognitive radio for ﬂexible mobile multimedia communications. In Mobile Multimedia Com-

munications, 1999. (MoMuC ’99) 1999 IEEE International Workshop on, pages 3 –10, 1999.

[29] Hsien-Po Shiang and Mihaela van der Schaar. Dynamic channel selection for multi-user video streaming over
cognitive radio networks. In 15th IEEE International Conference on Image Processing,, pages 2316–2319,
Oct 2008.

[30] Andrew S Tanenbaum. Computer networks prentice hall. New Jersey, 2006.

[31] Shaowei Wang. Efﬁcient resource allocation algorithm for cognitive ofdm systems. Communications Letters,

IEEE, 14(8):725–727, 2010.

[32] T.A. Weiss and F.K. Jondral. Spectrum pooling: an innovative strategy for the enhancement of spectrum

efﬁciency. Communications Magazine, IEEE, 42(3):S8–14, Mar 2004.

[33] Chunsheng Xin and Xiaojun Cao. A cognitive radio network architecture without control channel. In Proc.

IEEE GLOBECOM 2009, pages 1–6, Nov 2009.

[34] Lei Yang, Wei Hou, Lili Cao, Ben Y Zhao, and Haitao Zheng. Supporting demanding wireless applications

with frequency-agile radios. In NSDI, pages 65–80, 2010.

[35] Yuan Yuan, Paramvir Bahl, Ranveer Chandra, Thomas Moscibroda, and Yunnan Wu. Allocating dynamic

time-spectrum blocks in cognitive radio networks. In Proc. MobiHoc, pages 130–139, 2007.

[36] Shuai Zhang, Yanhui Lu, Fang Wang, and Xiaomin Mu. Spectrum access strategies based on the ratio of
throughput to spectrum consumption in the context of spectrum fragmentation in distributed cognitive radio
networks. In Communication Systems (ICCS), 2014 IEEE International Conference on, pages 442–446, Nov
2014.

[37] Dayong Zhou and M. Zukerman. Performance and efﬁciency evaluation of channel allocation schemes for

hscsd in gsm. In Proc. IEEE GLOBECOM, volume 1B, pages 1084–1088 vol. 1b, 1999.

[38] M. Zukerman. Bandwidth allocation for bursty isochronous trafﬁc in a hybrid switching system. Communi-

cations, IEEE Transactions on, 37(12):1367–1371, Dec 1989.

36

SA

DA

SP Ni

CNi

