An Online Mechanism for Ridesharing in Autonomous Mobility-on-Demand

Systems

Wen Shen and Cristina V. Lopes

Department of Informatics

University of California, Irvine

Irvine, CA 92617, USA

{wen.shen, lopes}@uci.edu

Jacob W. Crandall
Department of EECS

Masdar Institute of Science and Technology

Abu Dhabi, PO Box 54224, UAE

jcrandall@masdar.ac.ae

6
1
0
2

 
r
a

M
7

 

 
 
]
I

A
.
s
c
[
 
 

1
v
8
0
2
2
0

.

3
0
6
1
:
v
i
X
r
a

Abstract

With proper management, Autonomous Mobility-
on-Demand (AMoD) systems have great potential
to satisfy urban population’s mobility demand by
providing safe, convenient, and affordable rideshar-
ing services. Meanwhile, such systems can sub-
stantially decrease private car ownership and use,
and thus signiﬁcantly reduce trafﬁc congestion, en-
ergy consumption and carbon emissions. In order
to schedule the assignments optimally, an AMoD
system requires detailed information about the de-
mand from passengers. However, chances are
that passengers do not cooperate with the service
providers because of self-interestedness. There-
fore, an online mechanism is desirable if it incen-
tivizes passengers to truthfully report their actual
demand. For the purpose of promoting ridesharing,
we hereby introduce an integrated online rideshar-
ing mechanism (IORS). Numerical results show
that the IORS mechanism outperforms the ofﬂine,
auction-based mechanism substantially.
It has a
very close performance compared to the optimal
solution, with less computation time required and
no future knowledge about the demand needed.

1 Introduction
The rise of private car ownership and use has brought many
social and environmental plagues, including trafﬁc conges-
tion, increased greenhouse gas emissions , and rapid growth
in the demand for energy consumption to power the vehicles
and public space to construct parking facilities and road struc-
tures [Poudenx, 2008]. One possible solution to address the
challenges is to promote ridesharing [Furuhata et al., 2013;
Caulﬁeld, 2009; Levofsky and Greenberg, 2001] among pas-
sengers by providing incentives (e.g., lower fares for the
shared trips than individual trips, bonuses ) to them. In such a
scenario, a limited number (depending on the seat capacity of
the vehicle) of passengers who have similar itineraries share
a ride and split the fares. Ridesharing (as shown in Figure 1)
increases the occupancy of vehicles during traveling, making
it possible to transport more passengers with fewer vehicles
running on the roads.

Figure 1: A simple scenario of ridesharing: dashed lines in-
dicate the real demand; solid lines with arrow indicate actual
routes

Passengers’ rideshare experience can be signiﬁcantly im-
proved as autonomous vehicle technology mature. This
is because autonomous mobility-on-demand (AMoD) sys-
tems have very promising prospect in providing safe, con-
venient, and affordable mobility solutions for passengers,
while reducing greenhouse emissions and private car own-
ership [Mitchell, 2010; Chong et al., 2013; Shen and Lopes,
2015; Spieser et al., 2014]. Unlike traditional mobility-on-
demand systems (e.g., taxis, shuttles), an AMoD system is
equipped with a ﬂeet of self-driving, electric cars with no
drivers needed. This enables seamless cooperation between
the information center and the autonomous vehicles (AVs).

Several mechanisms have been introduced [Kleiner et al.,
2011; Kamar and Horvitz, 2009; Cheng et al., 2014; Zhao et
al., 2015] to promote ridesharing in traditional mobility-on-
demand systems. Most of them require passengers to directly
reveal the valuation of the rides. While interesting and in-
sightful from a theoretical perspective, they might not work
well in practice since it is quite difﬁcult or even impractical
for passengers to determine the true valuation of their rides.
Among these mechanisms, many of them assume that
passengers are only motivated by economic incentives (i.e.,
lower fares). They neglect the fact that non-economic factors
such as time, comfortability and privacy, are also important,
or even critical when people make decisions on whether to
use the service. For instance, it is very likely that people may
switch to other alternatives (e.g., driving themselves) if the
pickup time is longer than the maximum time they can afford
to wait for.

Another drawback of these mechanisms is that most of
them process requests from passengers in batch and do
not work in online scenarios.
In AMoD systems, service
providers are committed to offering an immediate response to
each request sent by passengers via a smart device. Besides,
they assume that the demand is ﬁxed without consideration of

the dynamic nature of the system.

A desirable mechanism is expected to be online. It should
be able to provide a fare quote immediately after a request.
Besides, it needs to consider the major non-economic fac-
tor (i.e., waiting time) as well as the dynamic nature of
mobility-demand systems. However, such a mechanism is
yet to be designed. To bridge the gap and transcend con-
ventional transport models like private car ownership, we in-
troduce an integrated online ridesharing mechanism (IORS)
to promote ridesharing in AMoD systems. We implement a
simple, abstracted, yet powerful simulator that enables efﬁ-
cient modeling of ridesharing in AMoD systems. We eval-
uate the performance of the IORS mechanism with compar-
isons to the optimal assignment and an ofﬂine, auction-based
mechanism. Results show that the IORS mechanism outper-
forms the auction-based mechanism substantially.
It has a
very close performance compared to the optimal solution, but
requires a shorter time to compute and no future knowledge
about the demand.

2 Ridesharing in AMoD Systems
An AMoD system can be viewed as a multi-agent system con-
sisting of an information center, a ﬂeet of autonomous vehicle
agents, and self-interested passenger agents who dynamically
enter or exit the system. The working principle of the AMoD
system is straightforward: when a passenger agent needs a
ride, it sends the ride request to the information center using
a smart device. This initiates the demand for mobility. The
information center next computes a fare quote and sends it to
the passenger. If the passenger accepts the fare estimate. The
information center then calculates an assignment. As long as
a plan has been calculated, it will be sent to both the AV as-
signed and the passenger who has just submitted the request.
Both the passenger and the AV are committed to executing
it. Otherwise, the passenger will be subject to penalties. An
abstraction of ridesharing in an AMoD system operating in a
grid city is shown in Figure 2.

Figure 2: An abstraction of ridesharing in an AMoD system
operating in a grid city.

each time. However, passengers’ demand information is pri-
vate and hidden from the center. The mechanism designer
should incentivize passengers to truthfully reveal their de-
mand for better system-wide optimization.

In our model we assume that the passengers are impatient.
They will leave the AMoD system and switch to other alter-
natives if the pickup time is longer than the maximum waiting
time they set.

Let I t denote a group of passengers who have mobility
demand at time t ∈ T . In each time, a passenger i ∈ I t
submits a request rt
i ∈ Rt to the information center. The re-
i can be represented as a tuple (oi, di, ti, ¯ti), where oi,
quest rt
di, ti and ¯t are passenger i’s origin, destination, arrival time
and maximum waiting time for a pickup, respectively. Here,
ti = t. To quantify the transport demand, we introduce the
effective demand ℓi, which indicates the minimum distance
from passenger i’s origin oi and destination di. We assume
that the effective demand is independent of request submis-
sion time. Hence, we have the following:

∀t ∈ T , i ∈ I t,

ℓt+1
i = ℓt
i.

(1)

i

Equation 1 indicates that the effective demand of passenger
i ∈ I t will not change if the passenger delays its request
submission from time t to time t + 1.

Once a passenger i has sent its request rt

i, the system needs
to provide a fare estimate qrt
to the passenger immediately,
which enables the passenger to make prompt decision on
whether to accept the quote or not. It is important to note
that the quote is the upper bound of the fare rather than the
ﬁnal payment. The passenger will reject the service if the
quote is higher than the amount that it is willing to pay. If the
passenger accepts the quote and if the system is able to pro-
vide the service given the time and routing constraints, the
passenger will be serviced with an assignment provided. A
ﬁnal payment prt
will be calculated upon the completion of
the ride. Otherwise, the request will be rejected.

i

In our model we make the passengers who use the ride ser-
vice share the operation cost of the vehicles. This enables the
AMoD system to provide service without seeking for exter-
nal subsidies. The mechanism designer’s goal is to minimize
the cost per unit effective demand. Since the operation cost is
shared by all the passengers, this objective reﬂects the social
welfare. The mechanism needs to collect truthful information
about the requests from passengers. However, passengers are
selﬁsh and motivated to minimize their own cost for the rides.
For instance, they may delay their request submissions, or
claim a shorter waiting time to reduce their cost. Therefore,
incentives should be provided to counter the manipulation.
Let C t denote the total cost of the system incurred up to now
from t = 0, and I ′t ⊂ I t be the set of passengers been ser-
viced at t. We have the cost per demand of the system:

3 The Online Mechanism
3.1 Preliminaries
In our work we consider discrete time T = {0, 1, 2, ...}, with
passengers that arrive and depart over time. Without loss of
generality, we assume that the AVs never exit the AMoD sys-
tem. The information center has full knowledge of the AVs at

W ′ =

C t

Pt′∈[0,t] Pi∈I ′ t

′ ℓi

.

(2)

Let W = 1/W ′.
In our work, we use W as an indicator
of the social welfare. Initially, the total cost is zero. That
is, C0 = 0. We assume that the total cost of the system
C t is non-decreasing. It quantiﬁes the minimum operational

Algorithm 1: The Fare Estimation Algorithm
1 function estimate (t, Rt);

Input

: t - Time; Rt - A set of requests from
passengers I t at time t.
: QRt-The fare estimate for requests Rt.

Output

2 QRt ← ∅;
3 while rt
4

i ∈ Rt do

Q′ ← ∅;
while v ∈ V t do

/* t′ is the estimated pickup

time needed to service
passenger it using vehicle v
*/

Compute t′;
if t′ ≤ ¯ti then

Compute ρX t−1
if ρX t−1

i } ;
v ∪{rt
i } < ρX t−1
v;
iρX t

v ∪{rt
q′ ← ℓt
Q′ ← Q′ ∪ {q′};

v

then

end

end

end
if Q′ 6= ∅ then

q ← argmax

q′∈Q′

q′;

5

6
7
8

9

10

11
12

13

14
15
16

cost that the system needs to transport the passengers. We
also assume that the total cost is independent of the request
submission time and orders. Hence, we have:

∀t ∈ T , C t+1 ≥ C t , s

(3)

and if the requests are delayed from t to t + 1:

∀t ∈ T , C t+1 = C t .

(4)
denote the increase on the operational cost if passen-
i at time t, the

Let δrt
ger i is serviced when it submits the request rt
following equation always holds for every t ∈ T :

i

C t+1 − C t = X
t′=t+1
i∈I ′ t′

δrt′

i

.

(5)

Equation 5 shows that the increase on the total operational
cost from time t to time t + 1 always equals to the summation
of the marginal cost that incurred by the requests being served
at time t + 1.

Let V denote the set of vehicles in operation and V t ⊆ V
be the set of vehicles that have at least one seat available at
time t.
Initially, we divide the vehicles into N groups (or
coalitions), where N = |V|. In each time, a request r ∈ Rt
v ⊂ Xt according to the mechanism
is added into a group X t
policy, where Xt is the set of all groups at time t. At time t, all
passengers in a group share the same fare rate (cost per unit
demand). Let ρ denote the cost per unit demand, we have:

(6)

ρX t
v = ρrt
,
v, t ∈ T }).

i

where

(i ∈ {i | rt

i ∈ X t
IORS Mechanism

3.2
The IORS mechanism consists of three parts: fare estima-
tion, pickup assignment and payment calculation. In the fare
estimation process, the mechanism calculates the quotes for
each request.
In the pickup assignment phase, the mecha-
nism computes an optimal plan that minimizes the cost per
unit demand. Finally, the mechanism provides payments af-
ter successful completion of the rides.
Fare Estimation
As the passengers arrive and depart dynamically, the mech-
anism can only rely on the known information to compute
the upper bound of the fare. The fare estimation process is
described as follows (as shown in Algorithm 1): for each re-
i at time t, the mechanism ﬁrst checks that if a vehicle
quest rt
v (with vacancies) satisﬁes the maximum waiting time.
If
such a vehicle is found, then the mechanism compares the
cost per unit demand before and after adding the request rt
i
into the coalition, respectively. If the cost per unit demand
reduces, then the fare is calculated and stored in a set Q′. The
mechanism select the maximum fare in the set as the quote.
Otherwise, the system rejects the request. Note that the mech-
anism next selects the highest cost per unit demand as the up-
per bound of fare estimate instead of the lowest cost per unit
demand. This is because the mechanism needs to adjust the
assignment so that the system can produce the lowest cost per
unit demand in general. Besides, it is a necessary condition
for individual rationality and incentive compatibility. The al-
gorithm takes O(n3) time in the worst case.

QRt ← QRt ∪ {(rt

i , q)};

end

17
18
19 end
20 return QRt.

Pickup Assignment
Let nvt denote the number of seats available in vehicle v at
time t. Each vehicle can only service at most Nv passengers,
where N is the seat capacity of the vehicle. That is, 0 ≤
nvt ≤ Nv. When there are multiple requests that decrease the
cost per unit demand of a coalition, the coalition selects the
one that produces the lowest cost per unit demand. If there
is a tie, the mechanism breaks it by choosing the one with
the highest demand, then at random. The pickup assignment
procedure is shown in Algorithm 2. The mechanism selects
the nt requests that produces the lowest cost per unit demand,
where nt is determined as following: nt = min{nvt, nRt },
where nRt is the number of requests submitted. The time
complexity of Algorithm 2 is O(n2 log n).

Payment Calculation
When a passenger accepts a fare quote and is not assigned
with a vehicle, the request will be added to time t + 1 if
the threshold ¯t satisﬁes. In this process, the mechanism as-
sume that all the passenger accepts the fare estimate. This
is because if the passenger rejects the quote, the mechanism
simply ignores the request and assumes that the passenger
never submits it. We assume that the system can calculate
the marginal cost and the optimal routes instantly, although
it might be time-consuming in real-world application due to
limited computational power and the complexity of the trafﬁc

Algorithm 2: The Pickup Assignment Algorithm
1 function assign (t, R′t);

Input

: t - Time; R′t - A set of requests from
passengers I t who accept the fare quotes at
time t.
: Πt-The set of assignment.

Output
2 Πt ← ∅;
3 A ← ∅;
4 while v ∈ V t do
5

while r ∈ R′t do

/* t′ is the estimated pickup

time needed to service
passenger it using vehicle v
*/

Compute t′;
if t′ ≤ ¯ti then

Compute ρX t−1
if ρX t−1

v ∪{r} ;
v ∪{r} < ρX t−1
v ;
c′ ← ρX t
A ← A ∪ {(v, c′)};

v

then

end

end

end

13
14
15 end
16 V ← V t;
17 I ← {i | ri ∈ Rt};
18 while A 6= ∅ and V 6= ∅ and I 6= ∅ do

6
7
8

9

10

11

12

19

20

21
22
23
24
25

/* sort in ascending order of c′
A ← quicksort(A);
/* ties are broken by selecting the
one with the highest unit demand
*/
ℓ

*/

(v, c′) ← argmin
(v,c′)∈A

c′;

Πt ← Πt ∪ {(ˆv, ˆr) | ˆv = v, cˆr = c′};
A ← A \ {(v∗, c∗) | v∗ = v, (v∗, c∗) ∈ A};
if nv < 1 then

V ← V \ {v};

end
I ← I \ {i | cri = c′, ri ∈ R′t};

26
27 end
28 return Πt.

dynamics. However, it can be computed with meta heuris-
tics [Hansen and Zhou, 2007]. At time t, the cost per unit
demand for all requests assigned to vehicle v under the as-
signment of πv ∈ Πt is determined as following:
v = Pt′∈[0,t] Pr∈{r|(v,r)∈Πt′ } δr
Pt′∈[0,t] Pr∈{r|(v,r)∈Πt′ } ℓr

ρX t

(7)

.

Therefore, the ﬁnal payment of passenger i at time t is de-

ﬁned as following:

pt
i = ℓiρX t
v ,

(8)

where pt

i can be calculated in O(n2T log n) time.

Ex-post Incentive Compatibility
We show that the IORS mechanism satisﬁes ex-post incentive
compatibility.
Lemma 3.1. A passenger can not decrease its cost by de-
laying the submission of the request, provided that all other
passengers report their demand truthfully and do not change
their decisions on fare quotes. That is, for all τ1, τ2, t ∈ T
and submissions R and R′, where 0 ≤ τ1 < τ2 ≤ t,
R = {R0, ..Rτ1, Rτ2 , ..., Rt}, and

R′(t) = 


Rτ1 \ {rτ1
i }
Rτ2 ∪ {rτ1
i }
R(t)

: t = τ1
: t = τ2
: otherwise ,

R(τ1) ≤ pt
pt

R′(τ2)

(9)

(10)

We have:

Proof sketch. Depending on whether ri is serviced or not, we
distinguish two cases:

• The request is not serviced: if the passenger delays its
request from τ1 to τ2, then its maximum waiting time
ˆ¯τ1 = ¯τ1 − 1 < ¯τ1.
If the pickup time t = ¯τ1, then
the passenger will not be serviced at time τ2, which is
obviously less favorable than being serviced. Another
situation is that the addition of the request at time τ2 will
not decrease the cost per unit demand of the coalitions
at time τ2, or the new cost per unit demand is less than
the threshold determined by Algorithm 2.

• The request is serviced: If the passenger delays its re-

quest from τ1 to τ2. Assuming that,

R(τ1) > pt
pt

R′(τ2)

(11)

R(τ ) = pt

We prove the theorem by contradiction. If 0 ≤ τ < τ1,
we have R′(τ ) = R(τ ). By equation 1 and 4, we know
that the operation cost and the total unit demand are
independent of the request submission time. That is,
C′ = C, P ℓ′ = P ℓ. By equation 5, 7 and 8, we
R′(τ ). Thus, inequation 11 does not hold.
have pt
This is also true if τ2 < τ ≤ t.
If τ1 < τ ≤ τ2,
since R′(τ ) = Rτ1 \ {rτ1
i }, we have the cost per unit
i }, and the total demand
demand ρR(τ1) ≤ ρRτ1 \{r
i }. By multiplying left sides and
ℓR(τ1) < ℓRτ1 \{r
right sides of the two inequations, we get ρR(τ1)ℓR(τ1) ≤
R′(τ ). Hence,
ρRτ1 \{r
equation 11 does not hold when τ2 < τ ≤ t. Therefore,
we draw the conclusion that the assumption is invalid
and inequation 10 holds.

i }. That is, pt

i }ℓRτ1 \{r

R(τ ) ≤ pt

τ1

τ1

τ1

τ1

By incorporating the above cases, we prove the lemma.

Lemma 3.2. The passenger can not decrease its cost by mis-
reporting its maximum waiting time, provided that all other
passengers report their demand truthfully and do not change
their decisions on fare quotes. That is,

p′
r ≤ pr,

(∀ˆ¯t 6= ¯t).

(12)

Proof sketch. If passenger claims a lower threshold of the
waiting time for pickup (i.e., ˆ¯t < ¯t), according to Algorithm 1
and 2, the search space of the vehicles may be reduced and the
request might be rejected. If ˆ¯t > ¯t, the search space will be
increased. However, a passenger will reject the assignment
if the pickup time exceeds the ¯t. By equation 1, 4, 5, 7 and
8, the fare ˆ¯p will not increase in both scenarios. Thus, the
lemma is proved.

Theorem 3.3. The IORS mechanism is ex-post incentive
compatible provided that all other passengers report their
demand truthfully and do not change their decisions on fare
quotes.

Proof sketch. A passenger i can not lie about its origin oui
and destination di. It is unable to claim an earlier arrival ti.
According to Lemma 3.1, it will not beneﬁt from delaying the
request submission provided that all other passengers report
their demand information truthfully and do not change their
decisions on whether to accept the quotes or not. The pas-
senger will not gain from misreporting the maximum waiting
time according to lemma 3.2. Therefore, we prove the theo-
rem.

Discussion
The IORS mechanism also satisﬁes other properties, such as
individual rationality, and budget balance. For example, it is
individual rational because passengers’ ﬁnal payments never
exceed their quotes. The budget balance property is met for
the reason that the total cost is shared by the passengers who
are provided with the ride service. Due to space limitations,
we omit the poofs for the properties.

4 Benchmark
For evaluation purposes, we compute the optimal assignment
as a benchmark to evaluate the efﬁciency of the IORS mech-
anism. The goal of the optimal assignment is to minimize
the overall cost per unit demand under the constraints in the
AMoD system. This is a minimum maximal matching prob-
lem, which is NP-hard [Hopcroft and Karp, 1973], and cannot
be solved in polynomial time. We use a linear programming
solver LpSolve solver [Berkelaar et al., 2004] for optimiza-
tion in the experiment.

Auction-based mechanisms have been proven to be efﬁ-
cient in some of the existing ridesharing systems such as car-
pooling and shuttles [Kleiner et al., 2011; Cheng et al., 2014;
Coltin and Veloso, 2013; Kamar and Horvitz, 2009]. Some
of them even have very close performance compared with
optimal solution [Cheng et al., 2014].
In our work, we
compare the performance of the IORS with the starte-of-the-
art, ofﬂine, auction-based mechanism (bottom-up) described
in [Cheng et al., 2014]. The auction-based mechanism can
not be solved in polynomial time.

5 Experimental Results
To evaluate the performance of the IORS mechanism, we de-
veloped an AMoD simulator to model the transportation sys-
tem of a grid city with 101 × 101 blocks (a scenario similar
to Figure 2).

5.1 Experimental Settings
In the experiment, we assumed that the number of the AVs in
the system is ﬁxed. We set the number N = 1000. For each
simulation, the system ran for 500 rounds unless speciﬁed.
For each round, we generated a random number of requests
Rt ∈ R. We initialized R with a set of N = 500 integers
randomly drawn from a normal distribution with a mean µ =
1000 and a standard deviations std = 100 (see Figure 3a).
We assumed that each AV can transport up to four passengers
at the same time.

We then generated the Rt requests respectively using the
following method: the request time is the current round num-
ber; the waiting time is randomly drawn from range 10 to
100; both the origins and destinations are randomly selected
within a radius of 50 blocks in the grid. The operational cost
per unit distance (block) is 1. The speeds for all vehicles are
the same: 0.5 block per unit time (round). Initially, all the
AVs depot at the center of the gird city. At time t = 0, the
AVs become available for servicing passengers.

To be fair for evaluation and in the interest of saving time,
we calculated the shortest paths between any two vertices in
the city grid using A∗ algorithm [Hart et al., 1968] and saved
it into a dictionary for later use in all the simulations

We ran all the simulations on a 2.9GHz quad-core machine

with a 32GB RAM.

5.2 Results and Discussion
We performed simulations using the IORS mechanism. For
comparison purposes, we computed the optimal assignment
under the same experimental settings as a benchmark. we
also conducted experiments on an AMoD system with the of-
ﬂine, auction-based mechanism described in section 4. To
counter the effect of the ﬂuctuations caused by the random-
ization techniques used, we ran all the experiments for 20
times and calculated the mean and the standard deviation of
the metrics evaluated.

We computed the social welfare scores over time for the
systems using one of the following mechanisms: IORS mech-
anism, auction-based mechanism and the optimal assignment
solution. The result (see Figure 3b) clearly shows that the
IORS mechanism performs signiﬁcantly better (with a 95%
conﬁdence interval) than the auction-based mechanism, with
an increase of 22.73%. Although it is a little inferior to the
optimal solution, it performs fairly well (with a score equals
to 93.62% of the optimal solution) with 79.35% less compu-
tational time on average (see Figure 3c ) and no future knowl-
edge of demand required.

The IORS mechanism adds a request only if this addition
decreases the cost per unit demand of a group. However, it
might suffer from local minima and produce sub-optimal so-
lutions due to a myopic view of the demand. The auction-
based mechanism, on the other hand, processes the aggre-
gated requests at once. It removes the requests with the low-
est ranks. Although the mechanism might make better plans
than the IORS mechanism at processing time because they
have a better knowledge of demand distributions, it performs
worse than the IORS at all other time.

The revenue (or the total cost) of IORS system is slightly
lower than the optimal system, both of which are much higher

than the auction-based system (see Figure 4a). The effective
demand of the system with the IORS mechanism ﬂuctuates
around 0.7, while the demand for optimal solution ﬁrst in-
creases and then drops down to a level very close to the scores
of the IORS system. This is due to the increased demand fro
passengers. As shown in Figure 4b, the demand for auction-
based system keeps increasing and then reaches a plateau. For
each time measured, the scores of the auction-based system
are the lowest.

When the demand is high, obviously, it is effective to in-
crease the supply (i.e., number of vehicles) at ﬁrst. However,
once the number of the AV ﬂeet reaches some point, it will
not help to improve the social welfare (see Figure 4c).

In summary, the IORS mechanism outperforms the of-
ﬂine, auction-based mechanism overwhelmingly in promot-
ing ridesharing in AMoD systems. Although it is still inferior
to the optimal solution, it can achieve a very close perfor-
mance with substantially less computational time needed and
no future knowledge of demand required.

6 Conclusions
Dynamic ridesharing systems have great potential to substan-
tially wane people’s enthusiasm for purchasing cars them-
selves. This is especially true if such systems are equipped
with ﬂeets of self-driving, electric cars working cooperatively
with the information center. The integration makes it pos-
sible for passengers to enjoy a safe, affordable, convenient,
and eco-friendly mobility experience. To achieve this, it is
necessary for agents of both parties (i.e., the passengers and
the service provider ) in the system to work collaboratively.
However, since the passengers are usually self-interested and
motivated to maximize their own utilities, chances are that
their actions will diminish the possibility of achieving the so-
cietal goals (e.g., servicing passengers with the fewest energy
consumption). To solve this problem, we introduce an inte-
grated online ridesharing mechanism which provides incen-
tives to passengers who share rides with others in an AMoD
system. Experimental results show that the IORS mechanism
outperforms the state-of-the-art, ofﬂine auction-based mecha-
nism notably, with a slightly lower performance than the opti-
mal solution. Nevertheless, it does not require future knowl-
edge of the system. Moreover, it needs less computational
power than the optimal solution. To the best of our knowl-
edge, this is the ﬁrst work on online mechanism design to
promote ridesharing in an AMoD system.

Future directions include optimal coalition structure gen-
eration [Rahwan et al., 2009] for optimal groups of shared
riders, mechanism design to address ethics [Bonnefon et al.,
2015] and privacy problems in ridesharing. Another direction
is to develop more complex simulation platforms as bench-
marks for future evaluation.

References
[Berkelaar et al., 2004] Michel Berkelaar, Kjell Eikland, Pe-
ter Notebaert, et al. lpsolve: Open source (mixed-integer)
linear programming system. Eindhoven University of
Technology, 2004.

[Bonnefon et al., 2015] Jean-Franc¸ois Bonnefon, Azim
Shariff, and Iyad Rahwan. Autonomous vehicles need
experimental ethics: Are we ready for utilitarian cars?
arXiv preprint arXiv:1510.03346, 2015.

[Caulﬁeld, 2009] Brian Caulﬁeld. Estimating the environ-
mental beneﬁts of ride-sharing: A case study of dublin.
Transportation Research Part D: Transport and Environ-
ment, 14(7):527–531, 2009.

[Cheng et al., 2014] Shih-Fen Cheng, Duc Thien Nguyen,
and Hoong Chuin Lau. Mechanisms for arranging ride
sharing and fare splitting for last-mile travel demands. In
Proceedings of the 2014 International Conference on Au-
tonomous Agents and Multi-agent Systems, pages 1505–
1506. International Foundation for Autonomous Agents
and Multiagent Systems, 2014.

[Chong et al., 2013] ZJ Chong, Baoxing Qin, Tirthankar
Bandyopadhyay, Tichakorn Wongpiromsarn, Brice Reb-
samen, P Dai, ES Rankin, and Marcelo H Ang Jr. Auton-
omy for mobility on demand. In Intelligent Autonomous
Systems 12, pages 671–682. Springer, 2013.

[Coltin and Veloso, 2013] Brian J Coltin and Manuela
Veloso. Towards ridesharing with passenger transfers. In
Proceedings of the 2013 International Conference on Au-
tonomous Agents and Multi-agent Systems, pages 1299–
1300. International Foundation for Autonomous Agents
and Multiagent Systems, 2013.
[Furuhata et al., 2013] Masabumi

Maged
Dessouky, Fernando Ord´o˜nez, Marc-Etienne Brunet,
Xiaoqing Wang, and Sven Koenig. Ridesharing: The
state-of-the-art and future directions.
Transportation
Research Part B: Methodological, 57:28–46, 2013.

Furuhata,

[Hansen and Zhou, 2007] Eric A Hansen and Rong Zhou.
Anytime heuristic search. Journal of Artiﬁcial Intelligence
Research, 28:267–297, 2007.

[Hart et al., 1968] Peter E Hart, Nils J Nilsson, and Bertram
Raphael. A formal basis for the heuristic determination
of minimum cost paths. Systems Science and Cybernetics,
IEEE Transactions on, 4(2):100–107, 1968.

[Hopcroft and Karp, 1973] John E Hopcroft and Richard M
Karp. An nˆ5/2 algorithm for maximum matchings in bi-
partite graphs. SIAM Journal on Computing, 2(4):225–
231, 1973.

[Kamar and Horvitz, 2009] Ece Kamar and Eric Horvitz.
Collaboration and shared plans in the open world: studies
of ridesharing.
In Proceedings of the 21st International
Jont Conference on Artiﬁcal Intelligence, pages 187–194.
Morgan Kaufmann Publishers Inc., 2009.

[Kleiner et al., 2011] Alexander Kleiner, Bernhard Nebel,
and Vittorio Amos Ziparo. A mechanism for dynamic
ride sharing based on parallel auctions. In Twenty-Second

International Joint Conference on Artiﬁcial Intelligence,
2011.

[Levofsky and Greenberg, 2001] Amber Levofsky and Allen
Greenberg. Organized dynamic ride sharing: The potential
environmental beneﬁts and the opportunity for advancing
the concept. In Transportation Research Board 2001 An-
nual Meeting, 2001.

[Mitchell, 2010] William J Mitchell. Reinventing the auto-
mobile: Personal urban mobility for the 21st century. MIT
Press, 2010.

[Poudenx, 2008] Pascal Poudenx.

The effect of trans-
portation policies on energy consumption and green-
house gas emission from urban passenger transportation.
Transportation Research Part A: Policy and Practice,
42(6):901–909, 2008.

[Rahwan et al., 2009] Talal Rahwan, Sarvapali D Ramchurn,
Nicholas R Jennings, and Andrea Giovannucci. An any-
time algorithm for optimal coalition structure generation.
Journal of Artiﬁcial Intelligence Research, pages 521–
567, 2009.

[Shen and Lopes, 2015] Wen Shen and Cristina Lopes. Man-
aging autonomous mobility on demand systems for better
passenger experience. In Proceedings of the 18th Confer-
ence on Principles and Practice of Multi-Agent Systems,
pages 20 –35. Springer, 2015.

[Spieser et al., 2014] Kevin Spieser, Kyle Treleaven, Rick
Zhang, Emilio Frazzoli, Daniel Morton, and Marco
Pavone. Toward a systematic approach to the design and
evaluation of automated mobility-on-demand systems: A
case study in singapore.
In Road Vehicle Automation,
pages 229–245. Springer, 2014.

[Zhao et al., 2015] Dengji Zhao, Sarvapali D Ramchurn, and
Nicholas R Jennings. Incentive design for ridesharing with
uncertainty. arXiv preprint arXiv:1505.01617, 2015.

s
t
s
e
u
q
e
R
 
f
o
 
r
e
b
m
u
N

1300

1200

1100

1000

900

800

700

50

100

150

250

200
350
Time (round number)

300

400

450

500

i

e
m
T
 
o
t
 
e
r
c
o
S
 
e
r
a
f
l
e
W

 
l
a
i
c
o
S
 
d
e
z
i
l

a
m
r
o
N

1.0

0.8

0.6

0.4

0.2

0.0

Auction-based
IORS
Optimal

100

200

300

400

500

Time (round number)

 

d
e
r
i
u
q
e
r
 
)
d
e
z

i
l

a
m
r
o
N

(
 

e
m

i
t
 
l

a
n
o

i
t

a

t

u
p
m
o
C

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

IORS

Auction-based
Mechanism

Optimal

(a) Demand distribution at each time.

(b) Social welfare scores to time.

(c) Computational time.

Figure 3: A comparison of demand distribution, the social welfare scores and computational time of a system with three
different approaches: IORS, the auction-based mechanism and the optimal solution.

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

)
t
s
o
c
 
n
o
i
t
a
r
e
p
o
 
l
a
t
o
t
(
 
e
u
n
e
v
e
R

0

0

100

200
Time (round number)

300

400

Auction-based
IORS
Optimal

500

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

d
n
a
m
e
d
 
e
v
i
t
c
e
f
f

E

0

0

100

200
Time (round number)

300

400

)
0
0
5
 
=
 
e
m

i
t
(
 
e
r
o
c
S
 
e
r
a
f
l
e
W

i

 
l
a
c
o
S
d
e
z

 

Auction-based
IORS
Optimal

500

i
l

a
m
r
o
N

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

500

Auction-based
IORS
Optimal

2000

1000

1500

Number of Vehicles

(a) Revenue (total operational cost).

(b) Total effective unit demand.

(c) Varying the numbers of vehicles.

Figure 4: A comparison of the performance of a system with three approaches: IORS, the auction-based mechanism, and the
optimal solution.

