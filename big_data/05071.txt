6
1
0
2

 
r
a

 

M
6
1

 
 
]
h
p
-
t
n
a
u
q
[
 
 

1
v
1
7
0
5
0

.

3
0
6
1
:
v
i
X
r
a

Atalhos para Adiabaticidade e

Aplica¸c˜oes em Computa¸c˜ao Quˆantica

Por:

Alan Costa dos Santos

Orientado por:

Dr. Marcelo Silva Sarandy

Niter´oi-RJ, Brasil, 2016

ALAN COSTA DOS SANTOS

ATALHOS PARA ADIABATICIDADE E APLICAÇÕES EM

COMPUTAÇÃO QUÂNTICA

Dissertação apresentada junto ao programa
de Pós-Graduação do Instituto de Física da
Universidade Federal Fluminense como parte
dos
requisitos básicos para obtenção do
título de Mestre em Física.

Orientador: Prof. Dr. Marcelo Silva Sarandy

Niterói-RJ

2016

1

Dedico essa conquista aos meus pais, Zé Almir e Toinha,
aos meus irmãos Ramon, Saymom e Herisson e à minha
namorada, Dâmaris Frutuoso.
In memoriam Francisco José de Morais, o grande Chicão.

2

Agradecimentos

Eu agradeço primeiramente àqueles que são os principais responsáveis pela minha existên-
cia e pelo homem que hoje sou. Obrigado painho e mainha, por nunca desistirem de mim e,
mesmo que distante, “puxarem minhas orelhas” para o que é certo. Obrigado painho por todos
os dias batalhar e, por muitas vezes, arriscar a vida para nos dar o pão de cada dia. Obrigado
mainha por todo o carinho e amor, jamais esquecerei que tenho a melhor mãe do mundo. Meus
irmãos Almir Herisson, Saymon Costa e Ramon Costa também estão no topo dessa pirâmide.
Não posso deixar de agradecer à minha linda e carinhosa namorada, Dâmaris Frutuoso (my
Penny). Amor, obrigado por ter sido, além de namorada, minha ﬁel amiga. Por corrigir muitos
dos meus defeitos e por me proporcionar momentos inesquecíveis ao seu lado. A cada dia tenho
mais certeza de sua importância em minha vida. Eu te amo.

Agradeço também aos familiares que acompanharam de perto toda minha caminhada, tia
Solange, tia Ana e tia Raquel. Aos primos Hiandra, Nahuana, Eliézio Jr., Kaká e Aryadne.
Obrigado aos meus padrinhos Paulo Santiago e Tia Bebé, por estarem sempre lembrando de
mim com carinho e sempre demonstrarem tanto amor. Não posso deixar de mencionar aqueles
que são os meus “pais do Rio”, tia Toinha e Eliézio. Obrigado por sempre segurarem minha
mão e por não me deixar esquecer do meu lugar e da minha cultura, além do amor incondici-
onal. Agradeço aos meus grandes amigos Alisson, Pedro Costa (Pedrinho), Thiago, César Jr.,
Alberto Jhonatas, Rennan Teles e Bruno Siebra pelos anos de amizade e pelas inúmeras horas
de descontração que sempre me ﬁzeram tão bem.

Aos meus ex-professores e mentores Francisco Augusto, Eduardo Filho e Wilson Hugo do
departamento de física da Universidade Regional do Cariri (URCA), pelos ensinamentos, con-
versas e principalmente pela amizade. Ao professor Mickel Abreu de Ponte, que é o principal
responsável por eu estar tão satisfeito com minha escolha de linha de pesquisa. Agradeço pelos
seus esforços em orientar-me durante 1 ano, ensinando como ser um pesquisador, a investigar
e, acima de tudo, como manter sempre a cabeça erguida diante dos mais difíceis obstáculos
acadêmicos.

Aos amigos do IF-UFF que ﬁz nessa caminhada de dois anos, Magno Verly, Davor Lopes,
Fernando Fabris, Alexsandro dos Santos, Raphael Fonseca (Jeca), André Oestereich e Marcel
Nogueira (Paulista), pelas boas horas de descontração na copa, tomando o velho e bom cafe-
zinho, e por serem meus companheiros de guerra durante o mestrado. Agradeço também ao
grande Tiago Ribeiro, por ter aberto as postas de seu AP para receber-me durante todo esse
tempo, pelas conversas sobre física e pelos ensinamentos que adquiri vendo seu jeito de ser. Ao
grande Anderson Tomaz, pelos incentivos e descontrações nas conversas sobre física. Não po-
deria deixar de agradecer ao “ex-físico”, hoje empresário, Raphael Silva e ao professor Ernesto
Galvão por uma valiosa ajuda em um momento complicado em minha caminhada. Sempre
carregarei comigo o sentimento de dívida com vocês.

Por ﬁm, o responsável por tudo isso que está acontecendo em minha carreira acadêmica.
Ao Marcelo Sarandy, o meu obrigado de coração. Sei que não deve ter sido fácil orientar-

3

me durante esse tempo, por isso sei do tamanho esforço que fez, além da enorme paciência,
para tornar tudo isso possível. Agradeço pelas horas de conversa, dedicação e pelos valiosos
conselhos proﬁssionais e acadêmicos.

4

“Eu sou de uma terra que o povo padece
Mas não esmorece, procura vencer,
Da terra querida, que a linda cabocla
Com riso na boca zomba no sofrer.
Não nego meu sangue, não nego meu nome.
Olho para fome e ’pregunto’: o que há?
Eu sou brasileiro ﬁo do Nordeste,
Sou Cabra da peste, sou do Ceará

Ceará valente que foi muito franco
Ao guerreiro branco Soares Moreno,
Terra estremecida, terra predileta
Do grande poeta ‘Juvená’ Galeno.
Sou dos ‘verde’ mares da cor da esperança,
Que ‘as água’ balança pra lá e pra cá.
Eu sou brasileiro ﬁo do Nordeste,
Sou Cabra da peste, sou do Ceará.”

Patativa do Assaré.

5

Resumo

Evolução adiabática é uma poderosa técnica em computação e informação quântica. No
entanto, sua performance é limitada pelo teorema adiabático da mecânica quântica. Neste cená-
rio, atalhos para adiabaticidade, tais como concebidos pela teoria superadiabática, constituem
uma valiosa ferramenta para acelerar o comportamento quântico adiabático. Nesta dissertação
nós introduzimos dois diferentes modelos capazes de realizar computação quântica superadia-
bática, onde nosso método é baseado no uso de atalhos para adiabaticidade via Hamiltonianos
contra-diabáticos. O primeiro modelo mostrado aqui é baseado no uso do teleporte quântico
superadiabático, introduzido nessa dissertação, como um primitivo para computação quântica.
Dessa forma, nós fornecemos o Hamiltoniano contra-diabático para portas arbitrárias de n q-
bits. Além disso, nossa abordagem relaciona, por meio de uma simples transformação unitária,
o Hamiltoniano contra-diabático para o teleporte de portas arbitrárias de n q-bits com o Hamil-
toniano contra-diabático usado para o teleporte de estados de n q-bits. No segundo modelo nós
usamos o conceito de evoluções superadiabáticas controladas para mostrar como implementar
portas quânticas n-controladas arbitrárias. Notavelmente, essa tarefa pode ser realizada por um
simples Hamiltoniano contra-diabático independente do tempo. Ambos os modelos podem ser
usados para a implementação de diferentes conjuntos universais de portas quânticas. Nós mos-
tramos que o uso do quantum speed limit (limite de velocidade quântica) sugere que o tempo de
evolução superadiabática é compatível com intervalos tempos arbitrariamente pequenos, onde
essa arbitrariedade está vinculada ao custo energético necessário para realizar a evolução supe-
radiabática.

6

Abstract

Adiabatic evolution is a powerful technique in quantum information and computation. Howe-
ver, its performance is limited by the adiabatic theorem of quantum mechanics. In this scenario,
shortcuts to adiabaticity, such as provided by the superadiabatic theory, constitute a valuable
tool to speed up the adiabatic quantum behavior. In this dissertation we introduce two diﬀerent
models to perform universal superadiabatic quantum computing, which are based on the use
of shortcuts to adiabaticity by counter-diabatic Hamiltonians. The ﬁrst model is based on the
use of superadiabatic quantum teleportation, introduced in this dissertation, as a primitive to
quantum computing. Thus, we provide the counter-diabatic driving for arbitrary n-qubit ga-
tes. In addition, our approach maps the counter-diabatic Hamiltonian for an arbitrary n-qubit
gate teleportation into the implementation of a rotated counter-diabatic Hamiltonian for an n-
qubit state teleportation. In the second model we use the concept of controlled superadiabatic
evolutions to show how we can implement arbitrary n-controlled quantum gates. Remarkably,
this task can be performed by simple time-independent counter-diabatic Hamiltonians. These
two models can be used to design diﬀerent sets of universal quantum gates. We show that the
use of the quantum speed limit suggests that the superadiabatic time evolution is compatible
with arbitrarily small time intervals, where this arbitrariness is constrained to the energetic cost
necessary to perform the superadiabatic evolution.

7

Conteúdo

1

Introdução
1.1 Notação .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2 Portas Elementares em Computação Quântica . . . . . . . . . . . . . . . . . .

.

.

.

.

.

.

.

I Computação Quântica Adiabática

2 Teorema Adiabático

2.1 Teorema Adiabático: Condição sobre o Hamiltoniano . . . . . . . . . . . . . .
2.2 Teorema Adiabático: Condição sobre o tempo de evolução . . . . . . . . . . .

3 Computação Quântica Universal via Teleporte Quântico Adiabático

3.1 Teleportanto um estado quântico desconhecido . . . . . . . . . . . . . . . . .
3.2 Computação Quântica via TQ . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2.1 TQ via circuitos: O Protocolo . . . . . . . . . . . . . . . . . . . . . .
3.2.2 TQ de portas de 1 q-bit . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2.3 TQ de portas controladas . . . . . . . . . . . . . . . . . . . . . . . . .
3.3 Computação Quântica Adiabática via TQ . . . . . . . . . . . . . . . . . . . .
3.3.1 TQ Adiabático . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . .
3.3.2 TQ Adiabático de 2 q-bits
3.3.3 TQ Adiabático de n q-bits
. . . . . . . . . . . . . . . . . . . . . . . .
Portas quânticas de 1 q-bit via TQ . . . . . . . . . . . . . . . . . . . .
3.3.4
Portas quânticas de 2 q-bits via TQ . . . . . . . . . . . . . . . . . . .
3.3.5
Portas quânticas de n q-bits via TQ . . . . . . . . . . . . . . . . . . .
3.3.6

4 Computação Quântica Universal por Evoluções Adiabáticas Controladas.

4.1 Evoluções Adiabáticas Controladas (EAC) . . . . . . . . . . . . . . . . . . . .
4.2 Portas de 1 e 2 q-bits via EAC . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2.1 Unitários de um 1 q-bit via EAC . . . . . . . . . . . . . . . . . . . . .
Portas controladas por 1 q-bit via EAC . . . . . . . . . . . . . . . . .
4.2.2
4.2.3
Portas Universais via EAC . . . . . . . . . . . . . . . . . . . . . . . .
4.3 Portas controladas por n-q-bits via EAC . . . . . . . . . . . . . . . . . . . . .
4.4 Computação Adiabática Probabilística . . . . . . . . . . . . . . . . . . . . . .

II Computação Quântica Superadiabática

5 Atalho para Adiabaticidade

5.1 O Hamiltoniano contra-diabático . . . . . . . . . . . . . . . . . . . . . . . . .

8

13
16
17

19

20
21
22

25
25
27
27
28
29
30
31
36
41
43
46
49

51
51
52
52
54
55
56
58

60

61
61

5.2 Complementaridade Energia-Tempo em Evoluções Superadiabáticas . . . . . .
5.2.1 O tempo total de evolução . . . . . . . . . . . . . . . . . . . . . . . .
5.2.2 Custo energético . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

6 Computação Quântica Universal via TQ Superadiabático

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
6.1 TQ Superadiabático .
6.2 TQ Superadiabático de portas . . . . . . . . . . . . . . . . . . . . . . . . . . .
6.3 Complementaridade Energia-Tempo . . . . . . . . . . . . . . . . . . . . . . .

.

7 Evoluções Superadiabáticas Controladas e CQ Universal

7.1 Evoluções Superadiabáticas Controladas . . . . . . . . . . . . . . . . . . . . .
7.2 Computação Quântica por Evoluções Superadiabáticas Controladas
. . . . . .
Portas de 1 q-bit via ESC . . . . . . . . . . . . . . . . . . . . . . . . .
Portas n-controladas via ESC . . . . . . . . . . . . . . . . . . . . . . .
7.3 A complementaridade energia-tempo . . . . . . . . . . . . . . . . . . . . . . .
7.4 Computação Superadiabática Probabilística . . . . . . . . . . . . . . . . . . .

7.2.1
7.2.2

8 Conclusões e Perspectivas Futuras

A Apêndice A: Lema de Riemann-Lebesgue

B Apêndice B: Prova da Proposição 2

C Apêndice C: Limite de Velocidade Quântica

D Apêndice D: Prova do Teorema 1

E Apêndice E: Prova da Proposição 3

F Apêndice F: Prova do Teorema 2

G Apêndice G: Prova da Eq. (176)

63
63
65

68
68
70
70

73
73
76
76
77
77
80

83

85

86

87

90

91

93

94

9

Lista de Tabelas

1
2
3

Correções do Bob para o TQ de um estado desconhecido . . . . . . . . . . . .
Correções do Bob para o TQ via circuitos . . . . . . . . . . . . . . . . . . . .
Correções do Bob para o TQ de portas . . . . . . . . . . . . . . . . . . . . . .

26
28
29

10

Lista de Figuras

.

.

.

4

5

1

2

3

.

.

. .

(a) Porta CNOT onde o q-bit de controle deve ser inserido na parte superior e
o alvo na parte infetior. (b) Porta Hadamard. (c) Porta π/8. (d) Porta Toﬀoli,
onde os dois primeiros q-bits são os q-bits controle e o ultimo é o q-bit alvo. . .
Formas circuitais das portas elementares X, Y e Z que são representadas pelas
matrizes de Pauli.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Esquema do circuito que implementa o TQ de um estado quântico qualquer.
A seção do circuito indicado com um retângulo tracejado é o responsável por
simular uma medida de Bell.
. . . . . . . . . . . . . . . . . . . . . . . . . . .
Circuito para implementar portas via TQ. O recurso deve ser fornecido por
Charlie para Alice e Bob. Tal recurso é um estado de Bell "rodado"|β00(cid:105)U =
1⊗ U|β00(cid:105), onde U é a porta que deve ser implementada ao ﬁnal do processo na
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
partícula do Bob.
Circuito para implementar a porta CNOT via TQ. Em analogia com o TQ de
portas de 1 q-bit, a porta CNOT que atuaria ao ﬁnal do processo, deve atuar no
início como mostra o cirtuito. As linhas tracejadas são informações clássicas
(um bit) que implicam na atuação da correspondente porta se o bit for 1. As
correções feitas pelo Bob dependem do conjunto de informações x1, x2, y1, y2, e
estão indicadas pelo retângulo vermelho tracejado.
. . . . . . . . . . . . . . .
Esquema do estado ﬁnal e inicial do protocolo de TQ adiabático do estado de
um q-bit. Inicialmente a partícula 1 em posse da Alice devem conter o estado
|ψ(cid:105) a ser teleportado, e ao ﬁnal do processo a partícula 3 em posse do Bob estará
no estado |ψ(cid:105).
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Esquema do estado ﬁnal e inicial do protocolo de TQ adiabático. Inicialmente
as partículas 1 e 2 em posse da Alice devem conter o estado |ψ2(cid:105) a ser tele-
portado, e ao ﬁnal do processo as partículas 5 e 6 em posse do Bob estarão no
estado |ψ2(cid:105).
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Esquema ilustrando o estado ﬁnal e inicial do TQ adiabático de n q-bits. Cada
setor é composto por 3 q-bits. Inicialmente (t = 0) o estado a ser teleportado
deve ser preparado nos n da primeira ﬁla (sistema em vermelho) e o canal quân-
tico recurso é dado por n pares de Bell (sistema em azul). Ao ﬁnal do processo
(t = τ) o estado |ψn(cid:105) foi teleportado para as partículas do Bob. . . . . . . . . . .
Gráﬁco da quantidade Σsing (τ) para algumas interpolações especíﬁcas (curvas
com ﬁguras geométricas preenchidas). As linhas horizontais estão indicando o
custo energético no limite de tempo adiabático τ → ∞.
. . . . . . . . . . . . .
10 Custo energético em unidades de ω como uma função de ωτ para diferentes
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .

valores do parâmetro θ0.

.

.

.

.

.

.

.

.

.

6

7

8

9

.

17

18

27

28

30

31

36

42

71

79

11

11 Gráﬁco de θmin

0

em função da quantidade ωτ determinado numericamente com
precisão de 10−5 onde variamos a quantidade ωτ em intervalos de 10−6. Nós
mostramos θmin
em função da quantidade ωτ para valores de ωτ > 1. Podemos
ver que a medida que a quantidade ωτ cresce, o valor de θmin
se aproxima de
π (linha horizontal tracejada em preto). No inset nós mostramos o gráﬁco das
mesmas quantidades onde o intervalo de valores de ωτ são tais que 0 (cid:54) ωτ (cid:54) 1.

0

0

81

12

1

Introdução

Na primeira metade da década de 80 iniciava-se a elaboração dos fundamentos que sustentam
a pesquisa em computação quântica (CQ), graças aos trabalhos de Paul Benioﬀ [1, 2], Richard
Feymman [3] e David Deutsch [4]. A partir desses trabalhos, o sonho do computador quântico
tem sido buscado devido a sua capacidade teórica de resolver certas classes de problemas muito
mais rápido que um computador clássico. Exemplos como o algoritmo de Grover [5, 6] para
busca de itens marcados em uma lista desordenada, o algoritmo de Deutsch-Jozsa [7] para
veriﬁcação de funções constantes ou balanceadas e o algoritmo de Shor [8], também conhecido
como algoritmo quântico de fatoração, tem ilustrado de forma clara o potencial esperado de um
computador quântico. Fenômenos característicos da mecânica quântica como emaranhamento
e superposição, são os responsáveis por tal vantagem [9]. Nesse cenário, modelos distintos que
nos possibilitam realizar CQ vêm sendo propostos.

2(cid:105) → |− 1

2 na direção z inverte o estado de |+ 1

O modelo padrão de CQ é chamado de Modelo de Circuitos [10]. A ideia do modelo de
circuitos é representar o processo de computação através de uma sequência de portas lógicas
quânticas (transformações unitárias em mecânica quântica). Um exemplo de porta quântica que
tem um análogo em computação clássica é a porta NOT, cuja ação inverte o bit de entrada de
0 → 1 ou 1 → 0, que tem como análogo quântico a porta quântica representada pelo operador de
2(cid:105) e de
Pauli σx, que ao atuar em um estado de spin− 1
|− 1
2(cid:105). Em geral, em CQ, os estados de um sistema de dois níveis são representados pelos
2(cid:105) → |+ 1
estados abstratos |0(cid:105) e |1(cid:105), que são os chamados estados da base computacional. Fisicamente
esses estados podem ser representados por estados ortogonais de qualquer sistema quântico de
dois níveis de energia (estados de polarização vertical e horizontal de fótons, estados de spin
do elétron, etc.). Por outro lado, existem portas exclusivas da CQ, como a porta Hadamard,
onde sua atuação leva estados da base computacional em superposições desses estados e vice-
versa. Uma característica comum entre CQ e computação clássica são os chamados conjuntos
de portas universais para computação [10]. Esses conjuntos são assim chamados devido ao fato
de seus elementos poderem ser combinados para realizar qualquer porta lógica de um circuito.
Um outro esquema universal de CQ é a CQ adiabática [11]. Esse modelo nos permite ide-
alizar, quando combinado com o modelo de circuitos, novos modelos híbridos de CQ, os quais
serão o grande foco de discussão nessa dissertação. A ideia fundamental da CQ adiabática é
fazer uso do teorema adiabático [12–14] para realizar computação quântica analógica, através
de um Hamiltoniano que evolui o sistema continuamente no tempo a partir de um estado funda-
mental instantâneo simples em um instante inicial até um estado fundamental instantâneo ﬁnal
que contem a solução do problema. Em particular, CQ adiabática é equivalente ao modelo de
circuitos a menos de recursos polinomiais [15, 16] e exibe propriedades de tolerância a erros
sob decoerência [17, 18]. Realizações experimentais iniciais de CQ adiabática foram original-
mente propostas em Ressonância Magnética Nuclear (RMN), onde algoritmos quânticos como
o Algoritmo de Busca [19, 20] e o Algoritmo de Deutsch-Jozsa [21], foram implementados.

13

Mais recentemente, outras arquiteturas também têm sido usadas para implementar CQ adia-
bática como, por exemplo, íons armadilhados [22] e q-bits supercondutores [23–27]. Um dos
obstáculos encontrados em CQ adiabática é o tempo requerido para a evolução do sistema im-
posto pelas condições de validade do teorema adiabático [28–31]. Isso implica que em modelos
híbridos, onde usamos evoluções adiabáticas para simular circuitos quânticos, cada porta do cir-
cuito deve ser implementada em um tempo suﬁcientemente grande (com relação a quantidades
que dependem do gap de energia relativo ao estado fundamental do Hamiltoniano que governa
sistema). Tal fato é um problema quando a inevitável interação entre o computador quântico e
o ambiente que o cerca é levado em consideração, devido efeitos que levam sistemas quânticos
à decoerência antes de ﬁnalizada a computação [32]. Uma maneira de tratar esse problema é
através da introdução de atalhos para a adiabaticidade.

A ideia de métodos que nos permitam imitar uma evolução adiabática foi primeiro proposto
por M. V. Berry em 1987 [33] e desde então outros trabalhos relevantes sobre o tema vem
surgindo [34–36]. A ideia central de atalhos para adiabaticidade é reproduzir exatamente a evo-
lução adiabática, mas sem o vínculo temporal imposto pelas condições de validade do teorema
adiabático. Um dos principais elementos para derivarmos um atalho é a determinação de um
termo chamado Hamiltoniano contra-diabático, ou simplesmente termo contra-diabático, que
foi introduzido por Demirplak e Rice [37, 38] e também estudado por Berry [39]. Nesses ata-
lhos para adiabaticidade o Hamiltoniano contra-diabático, por construção, deve ser somado ao
Hamiltoniano original (adiabático) do problema para deﬁnir o que chamamos de Hamiltoniano
superadiabático, que por sua vez imita a evolução adiabática desejada. O atalho também pode
ser realizado pelo método dos invariantes de Lewis-Riesenfeld [40]. O foco de interesse nessa
dissertação é derivar atalhos para adiabaticidade via Hamiltonianos contra-diabáticos. Nessa
dissertação nós derivamos tais atalhos para alguns modelos híbridos universais de CQ. Com
isso, propõe-se um modelo de CQ universal superadiabática onde as evoluções propostas em
CQ adiabática se mantém, mas o vínculo temporal imposto sobre tais evoluções é removido.

Essa dissertação está estruturada como segue. A primeira parte é voltada para discussão de
fundamentos do teorema adiabático e de alguns modelos híbridos universais de CQ que fazem
uso do teorema adiabático para simular o funcionamento de qualquer circuito quântico. Inicia-
mos nosso estudo, no capítulo 2, revisando brevemente o que vem a ser o teorema adiabático e
fazendo uma análise de suas condições de validade. Em seguida, no capítulo 3, nós faremos a
primeira aplicação do teorema adiabático em modelos híbridos de CQ universal, proposto por
D. Bacon e S. Flammia [41]. Como tal aplicação necessita de conhecimentos prévios sobre
teleporte quântico (TQ) de estados desconhecidos de um q-bit, nós revisaremos os resultados
referente ao TQ na seção 3.1 e como o TQ pode ser usado como um primitivo para CQ na seção
3.2. Dando continuidade, na seção 3.3 o foco principal é mostrar que o TQ adiabático pode
ser usado como um primitivo para realizar CQ universal. Para este ﬁm, aplica-se o teorema
adiabático para mostrar como podemos teleportar adiabaticamente um estado desconhecido de
um q-bit, na subseção 3.3.1, e como este resultado pode ser usado para implementar portas de

14

um q-bit, discutido na subseção 3.3.4. As subseções 3.3.5 e 3.3.6, são destinadas a generalizar
os resultados do teleporte adiabático de portas de um q-bit para implementar portas de n q-bits.
Ainda com o objetivo de estudar modelos de CQ adiabática, nós estudamos no capítulo 4 um
outro modelo que nos permite realizar CQ universal usando o conceito de evoluções adiabáti-
cas controladas (EAC), proposto por Itay Hen [42]. As seções 4.1 e 4.2 revisam os resultados
obtidos em [42]. Nós também generalizamos os resultados obtidos na Ref. [42] e mostramos
que EAC podem ser usadas para implementar qualquer rotação (porta) controlada por n q-bits,
como será discutido na seção 4.3.

A segunda parte desta dissertação é dedicada a introduzir as contribuições originais dessa
dissertação, as quais foram publicadas nas Refs. [43, 44]. O capítulo 5 carrega, na seção 5.1,
uma revisão sobre atalhos para adiabaticidade via Hamiltonianos contra-diabáticos e, na seção
5.2, o estudo acerca da complementaridade energia-tempo em evoluções superadiabáticas. No
capítulo 6 mostramos como implementar CQ Superadiabática. Na seção 6.1 nós derivamos um
atalho para o TQ adiabático proposto na Ref. [41] e mostramos como o conhecimento do Ha-
miltoniano contra-diabático associado ao TQ Superadiabático do estado de um q-bit pode ser
útil na extensão do protocolo para teleportar o estado de n q-bits. Em seguinda, na seção 6.2,
mostramos como realizar CQ universal com o TQ Superadiabático. Para isso usamos alguns
novos teoremas demonstrados nos Apêndices desta dissertação e que se aplicam em evoluções
superadiabáticas em geral. Por ﬁm, a análise da complementaridade energia-tempo para o TQ
Superadiabático é feito na seção 6.3. No capítulo 7 nós propomos um modelo alternativo de
CQ Superadiabática. Isso é possível derivando um atalho para EAC de forma genérica na se-
ção 7.1 e aplicando os resultados para mostrar como evoluções superadiabáticas controladas
(ESC) podem ser usadas para realizar CQ universal. Na seção 7.2 discutimos acerca do prin-
cipal resultado do capítulo 7, onde nós mostramos como implementar portas n-controladas de
1 q-bit usando ESC a partir de um Hamiltoniano contra-diabático independente do tempo. Na
seção 7.3 analisamos a performance de tal modelo, onde nós analisamos a complementaridade
energia-tempo para o Hamiltoniano Superadiabático em ESC e mostramos sua dependência
com um parâmetro θ0 que modula a probabilidade de sucesso da computação. Como uma deri-
vação do modelo proposto, na seção 7.4, nós fazemos um breve estudo sobre QC probabilística
via ESC, onde mostramos que, em média, energeticamente é mais vantajoso realizarmos QC
probabilística e não a CQ deterministica.

Encerramos esta dissertação apresentando, no capítulo 8, as conclusões obtidas ao ﬁnal da
execução do projeto que deu origem a este trabalho. Também discutimos brevemente sobre as
possíveis extensões desse projeto mencionando as perspectivas futuras.

15

1.1 Notação
A base computacional {|0(cid:105),|1(cid:105)} é adotada aqui, na forma matricial, como

 1

0

 , |1(cid:105) =

 0

1



|0(cid:105) =

.

(1)

Como em muitos momentos lidaremos com sistemas de partículas, precisaremos adotar
rótulos para as mesmas de modo a não haver nenhuma confusão. O estado |Ψ(cid:105) de um sistema
de n partículas, cujo estado individual é |ψi(cid:105), é dado pelo produto tensorial

|Ψ(cid:105) = |ψ1(cid:105)1 ⊗ |ψ2(cid:105)2 ⊗ ··· ⊗ |ψn(cid:105)n

,

(2)
onde muitas vezes pode ser representado por |Ψ(cid:105) = |ψ1(cid:105)1|ψ2(cid:105)2 ···|ψn(cid:105)n ou |Ψ(cid:105) = |ψ1(cid:105)|ψ2(cid:105)···|ψn(cid:105).
A ultima notação só será adotada se dispormos o sistema na sequência 1, 2,··· , n; nos casos
onde nos referirmos apenas a parte do sistema nós usaremos a notação |Ψ(cid:105) jnm = |ψ j(cid:105) j|ψn(cid:105)n|ψm(cid:105)m,
por exemplo. Quando for conveniente, usaremos sempre a notação formal da Eq.
(2) para
representar o estado do sistema.

A notação para produtos tensoriais entre operadores é convencionada da mesma forma como
feito para estados. Salvo casos particulares onde a notação formal entre produtos tensoriais de
operadores Ai,

A = A1 ⊗ A2 ⊗ ··· ⊗ An ,

(3)
se aplica, nós usaremos o produto acima sob a forma A = A1A2 ··· An. Deve-se atentar para a
diferença na representação de produtos tensoriais e produtos matriciais. Os produtos matriciais
de operadores Bk atuando sobre um estado |ψi(cid:105) serão representados por

B = B1 · B2 · ··· · Bn

,

(4)
ou equivalentemente por B = B1B2 ··· Bn. Para diferenciar essa ultima notação da notação ado-
tada para o produto tensorial, sempre representaremos o produto matricial entre dois operadores,
que atuam sobre um mesmo estado |ψi(cid:105), entre parênteses como B1 · B2 ····· Bn = (B1B2 ··· Bn)i.
A notação B = B1B2 ··· Bn será apenas usada em situações onde não haverá possibilidade de
alguma interpretação errada.

Outras notações podem surgir quando necessárias. Nesses casos especiais para que não
exista qualquer ambiguidade na notação, durante o desenvolvimento dessa dissertação nós sem-
pre indicaremos as notações que estão sendo usadas. Quando não, valerão as notações acima
indicadas.

16

1.2 Portas Elementares em Computação Quântica

Assim como em computação clássica, nós temos um conjunto de portas elementares em CQ [9].
Dentro desse conjunto de portas elementares, nós podemos identiﬁcar subconjuntos de portas
que podem ser usados para construir os chamados conjuntos universais de portas quânticas.
Por deﬁnição esses conjuntos são compostos por portas elementares que podem ser combina-
das de tal maneira que nos permite simular o funcionamento de qualquer porta de um circuito
quântico. Exemplos desses conjuntos são os conjuntos {CNOT + Rotações de 1 q-bit} [10] e o
conjunto {Toﬀoli, Hadamard} [45, 46]. Além disso, existem conjuntos de portas que permitem
universalidade aproximada, como o conjunto {CNOT + Hadamard + porta π

8} [47].

As portas mencionadas acima, e que tem importância para essa dissertação, são as portas
8 e Toﬀoli. Abaixo seguem suas representações matriciais (escritas

CNOT, Hadamard, porta π
na base computacional)




,

1 0 0 0
0 1 0 0
0 0 0 1
0 0 1 0
1√
2

1
1 −1
0
0 eiπ/4




 1
 1
 16×6

06×6

06×6
0 1
1 0

CNOT =

H =

π
8

=

Toﬀoli =

,

,



.

Seguem ainda suas representações circuitais, as quais são descritas na Fig. 1.

Figura 1: (a) Porta CNOT onde o q-bit de controle deve ser inserido na parte superior e o alvo
na parte infetior. (b) Porta Hadamard. (c) Porta π/8. (d) Porta Toﬀoli, onde os dois primeiros
q-bits são os q-bits controle e o ultimo é o q-bit alvo.

Além das portas acima, também temos as portas X, Y e Z que são representadas pelas

17

matrizes de Pauli

 0 1

1 0

 , Y =

X =

 0 −i

0

i

 , Z =

 1

0
0 −1



,

(5)

escritas na base computacional e onde suas formas circuitais são representadas na Fig. 2.

Figura 2: Formas circuitais das portas elementares X, Y e Z que são representadas pelas matrizes
de Pauli.

Desta forma os estados da base computacional são autoestados de Z de modo que a relação

de autovalor

para n = {0, 1} é satisfeita.

Z|n(cid:105) = (−1)n |n(cid:105)

,

(6)

18

Parte I
Computação Quântica Adiabática

Nesta primeira parte nós estudaremos alguns elementos do Teorema Adiabático, bem como suas
condições de validade, que serão necessários para o desenvolvimento de nossa investigação. O
capítulo 2 é inteiramente dedicado a discussão sobre fundamentos da dinâmica adiabática em
sistemas quânticos fechados, bem como algumas condições que devem ser obedecidas para que
o teorema adiabático seja obedecido.

No capítulo 3 nós discutimos sobre o TQ [48] e sua aplicação em CQ universal. Assim,
nas seções 3.1 e 3.2 nós revisamos elementos relacionados ao TQ e como usá-lo como um
primitivo para CQ universal [49]. Em seguida, mostramos como realizar o TQ adiabaticamente,
para isso discutiremos os principais resultados obtidos por D. Bacon e S. Flammia na Ref. [41].
Em seu trabalho, Bacon e Flammia mostraram que o TQ adiabático pode ser usado também
como primitivo para CQ adiabática e para demonstrar isso eles fazem uso da deﬁnição de q-bits
lógicos e operadores lógicos. Aqui nós executaremos a mesma tarefa que Bacon e Flammia,
mas de uma forma diferente, usando as simetrias do Hamiltoniano adiabático. Assim como feito
na Ref. [41], mostraremos que podemos realizar CQ universal via TQ adiabático. A forma como
tratamos o problema será de grande utilidade ao mostrarmos como generalizar os resultados do
Bacon e Flammia para realizar o TQ adiabático de estados gerais de n q-bits. Além disso,
mostraremos como o uso de simetrias do Hamiltoniano facilita a forma como tratamos o TQ
adiabático como um primitivo para CQ.

Ainda com o objetivo de realizar CQ universal adiabática, nós estudamos no capítulo 4
um outro modelo que nos permite implementar portas quânticas adiabaticamente. Usando o
conceito de evoluções adiabáticas controladas (EAC), Itay Hen propôs um modelo universal de
CQ [42]. Na seção 4.2 nós mostramos como EAC pode ser usada para implementar portas de 1
q-bit e portas controladas por 1 q-bit. Na seção 4.3 nós estendemos os resultados apresentados
na seção 4.2 e oferecemos um modelo que nos permite implementar portas controladas por n
q-bits usando EAC com o recurso mínimo de 1 ancilla.

19

2 Teorema Adiabático

A todo tempo em dinâmica nos preocupamos em determinar como um sistema evolui quando
sujeito a ação de campos e/ou forças externas. A ação desses campos e/ou forças externas
é quem vai impor o nível diﬁculdade na hora de resolver as equações de movimento. Em
mecânica quântica, quando deixamos um sistema quântico evoluir segundo um Hamiltoniano
H (t), a sua dinâmica é ditada pela equação de Schrödinger

|ψ (t)(cid:105) = H (t)|ψ (t)(cid:105)

,

i d
dt

(7)

que em geral resulta em um sistema de equações diferenciais acopladas com coeﬁcientes que
podem, ou não, depender do tempo. Como o objetivo é encontrar a solução |ψ (t)(cid:105) para um dado
Hamiltoniano H (t), isso pode muitas vezes ser um problema. Aﬁm de resolver o problema
de encontrar a solução |ψ (t)(cid:105) da Eq. (7), no caso mais geral possível, a série de Dyson é a
solução [50]. Em geral a evolução de um sistema quântico pode ser tão complicada quanto
possamos imaginar, onde transições entre diferentes níveis de energia podem ocorrer. Porém, é
possível controlar o sistema de modo que o mesmo evolua sempre em um nível de energia bem
determinado fazendo uso do o teorema adiabático e da noção de evoluções adiabáticas. Assim,
deixe-nos deﬁnir o que vem a ser uma evolução adiabática.

Deﬁnição 1 Seja um sistema quântico governado por um Hamiltoniano arbitrário dependente
do tempo. Nesse cenário, uma evolução é dita adiabática quando os autoestados associados a
níveis de energia distintos do Hamiltoniano que governa o sistema evoluem independentes uns
dos outros.

Em outras palavras, em uma evolução adiabática se o sistema é preparado inicialmente em
um autoestado |En (t0)(cid:105) do Hamiltoniano H (t = t0), então em um tempo t posterior o sistema
terá evoluido para o correspondente autoestado |En (t)(cid:105) de H (t), onde durante a evolução não há
nenhuma transição entre níveis de energia diferentes do nível de energia associado a |En (t)(cid:105) e
|En (t0)(cid:105). Um ponto importante é que uma evolução adiabática não garante que teremos o sistema
sempre evoluindo com a mesma energia (n (t0) = n (t1)), aﬁnal o Hamiltoniano é dependente
do tempo, mas o que se garante é que os subespaços compostos por autoestados associados a
níveis de energia diferente evoluem independentemente, assim não há transições entre níveis de
energia durante a evolução.

A adiabaticidade não é um fenômeno que pode ser visto em qualquer evolução, mas existem
casos onde podemos garantir que a adiabaticidade é veriﬁcada. Certos disso, nos perguntamos:
poderiam existir condições sobre alguma entidade física do sistema de modo que a adiabatici-
dade seja garantida?

20

2.1 Teorema Adiabático: Condição sobre o Hamiltoniano

Nosso ponto de partida é a equação de Schrödinger (7) para um Hamiltoniano dependente do
tempo não-degenerado H (t). Sem perda de generalidade deixe-nos expandir o estado evoluído
|ψ (t)(cid:105), que seja solução da Eq. (7), na base de autoestados instantâneos de H (t) como segue

(cid:88)

|ψ (t)(cid:105) =

cn (t) e− i



(cid:82) t
0 dτεn(τ)|En (t)(cid:105)

onde εn (t) e |En (t)(cid:105) satisfazem

n

H (t)|En (t)(cid:105) = εn (t)|En (t)(cid:105)

,

,

(8)

(9)

com εn (t) compondo o espectro não-degenerado de H (t). A forma como escrevemos o estado
evoluído na Eq. (8) deixa livre que cn (t) carregue qualquer informação sobre fases geométricas
consequentes da evolução. Se substituirmos a forma do estado evoluído da Eq. (8) na Eq. (7)
nós podemos mostrar que para um coeﬁciente ck (t) nós temos a seguinte dinâmica

cn (t)(cid:104)Ek (t)| ˙En (t)(cid:105)e− i



0 dτgnk(τ)

,

(10)

(cid:82) t

˙ck (t) = −(cid:88)

n

onde deﬁnimos gnk (t) = εn (t) − εk (t). A quantidade gnk (t) representa o gap de energia entre os
níveis de energia n e k no instante de tempo t. Nós ainda podemos escrever

˙ck (t) = −ck (t)(cid:104)Ek (t)| ˙Ek (t)(cid:105) −(cid:88)

n(cid:44)k

cn (t)(cid:104)Ek (t)| ˙En (t)(cid:105)e− i



0 dτgnk(τ)

.

(11)

(cid:82) t

Escrevendo ˙ck (t) como na Eq. (11) ﬁca mais claro que a soma sobre todo n (cid:44) k é responsável

por acoplar o sistema de equações diferenciais. Note que ainda podemos escrever

cn (t)

(cid:104)Ek (t)| ˙H (t)|En (t)(cid:105)

gnk (t)

e− i



(cid:82) t

0 dτgnk(τ)

,

(12)

˙ck (t) = −ck (t)(cid:104)Ek (t)| ˙Ek (t)(cid:105) −(cid:88)

se usarmos a relação

n(cid:44)k

(cid:104)Ek (t)| ˙En (t)(cid:105) =

(cid:104)Ek (t)| ˙H (t)|En (t)(cid:105)

gnk (t)

, para n (cid:44) k .

(13)

Note que esta relação somente é válida para n (cid:44) k no caso não-degenerado, já no caso
degenerado ela é válida apenas quando εn (t) (cid:44) εk (t), mas mesmo assim ainda podemos escrever
para o caso degenerado

˙ck (t) = −(cid:88)

ck (t)(cid:104)En (t)| ˙Ek (t)(cid:105) −(cid:88)

gnk=0

gnk(cid:44)0

(cid:82) t

cn (t)

(cid:104)Ek (t)| ˙H (t)|En (t)(cid:105)

gnk (t)

e− i



21

0 dτgnk(τ)

,

(14)

onde (cid:80)

gnk=0 ((cid:80)

gnk(cid:44)0) representa uma soma sobre todos os valores de n tais que gnk (t) = 0
(gnk (t) (cid:44) 0), que necessariamente implica em εn (t) = εk (t) (εn (t) (cid:44) εk (t)). Mas esse não
é o caso aqui considerado. Dando continuidade da Eq. (12), nós chegamos a uma condição
quantitativa para a adiabaticidade.

Condição 1 (Condição sobre o Hamiltoniano do sistema) Seja um Hamiltoniano dependente
do tempo H (t). Então se ∀ (k, n) vale

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:104)Ek (t)| ˙H (t)|En (t)(cid:105)

gnk (t)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) << 1 ,

max
t∈(0,T)

(15)

(16)

(17)

onde T é o tempo total de evolução, a evolução do sistema pode ser descrita pela aproximação
adiabática.

Ainda existem certas divergências sobre os critérios de validade do teorema adiabático.
Existem muitos estudos, teóricos e experimentais, na literatura sobre condições de validade do
teorema adiabático e destacamos alguns que julgamos relevantes nas Refs. [51–55]. Diante
disto, em nossa análise, adotaremos situações em que as condições desenvolvidas aqui são
suﬁcientes para garantir que o teorema adiabático é obedecido.

Dessa forma, da Eq. (12) nós ﬁcamos com

˙ck (t) ≈ −ck (t)(cid:104)Ek (t)| ˙Ek (t)(cid:105)

,

e consequentemente obtemos como solução ck (t) ≈ ck (0) eiγk(t), onde

(cid:90) t

0

γk (t) = i

(cid:104)Ek (τ)| ˙Ek (τ)(cid:105)dτ

é a fase de Berry [56]. Uma vez que encontramos que ck (t) ≈ ck (0) eiγk(t) e que cada coeﬁciente
evolui de forma independente, se considerarmos que inicialmente o sistema se encontrava no
estado de energia εn (0) de H (t), então cn (0) = 1 e portanto devemos ter o estado do sistema
evoluindo aproximadamente segundo a equação

|ψ (t)(cid:105) ≈ e−(cid:82) t

0(cid:104)Ek(τ)| ˙Ek(τ)(cid:105)dτe− i



(cid:82) t
0 dτεn(τ)|En (t)(cid:105)

,

(18)

que é a solução para uma evolução adiabática. A condição sobre o Hamiltoniano do sistema nos
diz basicamente que se o Hamiltoniano varia muito lentamente durante a evolução do sistema,
então nós temos uma boa aproximação da evolução adiabática.

2.2 Teorema Adiabático: Condição sobre o tempo de evolução

Uma outra forma de analisar a consistência do teorema adiabático é analisando o tempo total de
evolução do sistema. Para mostrar como isso pode ser feito, deixe-nos retornar a Eq. (12), mas

22

primeiro note que

(cid:104)

ck (t) e−iγk(t)(cid:105)

d
dt

= e−iγk(t)(cid:2)˙ck (t) − i˙γk (t) ck (t)(cid:3)
= e−iγk(t)(cid:104)

(cid:105)
˙ck (t) + (cid:104)Ek (τ)| ˙Ek (τ)(cid:105)ck (t)

,

,

e portanto podemos reescrever a Eq. (12) como

cn (t) e−iγk(t)(cid:104)Ek (t)| ˙H (t)|En (t)(cid:105)

gnk (t)

(cid:82) t

0 dτgnk(τ)

e− i



.

(19)

d
dt

(cid:104)

ck (t) e−iγk(t)(cid:105)
(cid:104)
ck (s) e−iγk(s)(cid:105)
(cid:82) s

= −(cid:88)
= −(cid:88)

n(cid:44)k

n(cid:44)k

d
ds

Agora nós usamos um parâmetro s tal que s = t/T para escrever

cn (s) e−iγk(s)(cid:104)Ek (s)|H(cid:48) (s)|En (s)(cid:105)

gnk (s)

(cid:82) s

0 dςgnk(ς)

e− i
 T

,

(20)

0

(cid:104)Ek (ς)|E(cid:48)

k (ς)(cid:105)dς, onde a derivada com relação a variável independente de uma
com γk (s) = i
função f é denotada por "(cid:48) ", isto é, f (cid:48) (ξ) = d f (ξ) /dξ. Redeﬁnindo a variável independente
acima com a mudança s (cid:55)→ ξ e fazendo a integração em ambos os lados da equação acima em
ξ ∈ I : [0, s], nós obtemos

ck (s) e−iγk(s) = ck (0) −(cid:88)

(cid:90) s

n(cid:44)k

0

dξcn (ξ) e−iγk(ξ)(cid:104)Ek (ξ)|H(cid:48) (ξ)|En (ξ)(cid:105)

gnk (ξ)

e− i
 T

onde nós usamos, do lado esquerdo, o teorema fundamental do cálculo onde
f (x2) − f (x1) [57]. Por simplicidade, deﬁnimos

para escrever

Fnk (s) = cn (s) e−iγk(s)(cid:104)Ek (s)|H(cid:48) (s)|En (s)(cid:105)
(cid:82) ξ

(cid:90) s

,

dξ

Fnk (ξ)
gnk (ξ)

e− i
 T

0

0 dςgnk(ς)

ck (s) e−iγk(s) = ck (0) −(cid:88)
(cid:32) Fnk (ξ)

n(cid:44)k

(cid:82) ξ

(cid:33)

e− i
 T

0 dςgnk(ς)

− e− i

 T

g2
nk (ξ)

.

(cid:32) Fnk (ξ)

(cid:33)(cid:35)

g2
nk (ξ)

(cid:82) ξ
0 dςgnk(ς) d
dξ

(cid:82) ξ

Fnk (ξ)
gnk (ξ)

e− i
 T

0 dςgnk(ς) =

O integrando na equação acima pode ser também escrito como

Substituindo a equação acima na Eq. (23) nós ﬁcamos com

(cid:82) ξ
0 dςgnk(ς) − Fnk (0)
g2
nk (0)

−

e− i
 T

(cid:82) ξ
0 dςgnk(ς) d
dξ

dξe− i
 T

(cid:90) s

0

ck (s) e−iγk(s) = ck (0)− i
T

(25)
Todo esse algebrismo matemático tem a ﬁnalidade de tentar encontrar condições sobre al-
gum parâmetro de modo que possamos ter uma evolução do coeﬁciente ck (s) independente dos

i
T

dξ

(cid:34) d
(cid:34) Fnk (s)

g2
nk (s)

(cid:88)

n(cid:44)k

(cid:82) ξ

0 dςgnk(ς)

(cid:82) x2

x1

,

(21)

f (cid:48) (x) dx =

(22)

(23)

.

(24)

(cid:32) Fnk (ξ)

(cid:33)(cid:35)

g2
nk (ξ)

.

23

demais. Na equação acima nós podemos notar que esse objetivo é alcançado se a somatória
puder ser ignorada com relação ao coeﬁciente ck (0). Um primeiro passo é fazer uso do Lema
de Riemann-Lebesgue para escrever que [58]

(cid:90) s

0

lim
T→∞

dξe− i
 T

(cid:82) ξ
0 dςgnk(ς) d
dξ

(cid:32) Fnk (ξ)

(cid:33)

g2
nk (ξ)

→ 0 .

(26)

Uma demonstração simpliﬁcada do Lema de Riemann-Lebesgue encontra-se no Apêndice

A. Assim, nesse limite nós temos apenas

ck (s) e−iγk(s) = ck (0) − i
T

(cid:88)

(cid:32) Fnk (s)

g2
nk (s)

n(cid:44)k

(cid:82) ξ
0 dςgnk(ς) − Fnk (0)
g2
nk (0)

e− i
 T

(cid:33)

,

(27)

O uso do Lema de Riemann-Lebesgue na Eq. (26) e a relação acima mostram que se o
tempo total de evolução for suﬁcientemente grande, então podemos ter uma quase desacoplada
evolução dos coeﬁcientes cn (s). Mas quão grande deve ser o tempo total de evolução? A res-
posta para essa questão emerge diretamente da equação acima e chegamos a mais uma condição
para adiabaticidade.

Condição 2 (O tempo total de evolução adiabática) O tempo total de evolução adiabática
deve satisfazer

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) Fnk (s)

g2
nk (s)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

,

T >> max
s∈[0,1]

onde essa estimativa deve ser feita sobre todos os valores de k e n.

Se a condição acima é satisfeita, então nós temos cn (s) = cn (0) eiγn(s), que dá origem a

solução adiabática determinada na Eq. (18). Assim, escrevemos que

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:104)Ek (s)|H(cid:48) (s)|En (s)(cid:105)

g2
nk (s)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

T >> max
s∈[0,1]

.

(28)

Essa é condição sobre o tempo total de evolução do sistema, que denominaremos agora em
diante de vínculo temporal imposto pelo teorema adiabático. Além dessas condições mencio-
nadas aqui, tem sido estudado bounds para a aproximação adiabática na intenção de dar mais
suporte para que possamos entender melhor os critérios suﬁcientes para uma boa aproximação
adiabática. Uma leitura sobre limites para adiabaticidade pode ser encontrado na Ref. [59], bem
como sua generalização na Ref. [60].

24

3 Computação Quântica Universal via Teleporte Quântico

Adiabático

O teleporte quântico [48], proposto em 1993 por Bennett et al., constitui um canal para enviar
informação codiﬁcada em um estado quântico desconhecido. O principal resultado do TQ é
que, além de não ser necessário conhecer o estado a ser teleportado, não há qualquer limite para
a distância entre os agentes (exceto pelo canal clássico que deve ser estabelecido entre eles).
Experimentos recentes para implementação de TQ atigiram a marca dos 100 km com ﬁbras
ópticas [61] e 143 km no espaço livre [62]. No ﬁnal do século passado, mais precisamente
em 1999, Gottesman e Chuang [49] construiram um modelo de circuito quântico em que o TQ
pode ser usado como um primitivo para a CQ universal. Esse resultado abriu as portas para o
trabalho do Bacon e Flammia [41], onde eles simularam adiabaticamente o circuito proposto
por Gottesman e Chuang, realizando assim o TQ adiabático. Além disso, Bacon e Flammia
mostraram, a partir do TQ adiabático, o conceito de TQ adiabático de portas aﬁm de realizar
CQ universal.

Neste capítulo nós discutiremos de forma detalhada os resultados mencionados acima. A
ideia de simular o circuito do Gottesman e Chuang via evoluções adiabáticas proposto por Ba-
con e Flammia será o foco principal dessa seção. O que faremos inicialmente é uma demons-
tração alternativa de como o TQ adiabático acontece (para demonstração original usando q-bits
lógicos, veja [41]). Com isso, nós estendemos o modelo do Bacon e Flammia e mostramos que
podemos usar o modelo para implementar qualquer unitário de n-q-bits.

3.1 Teleportanto um estado quântico desconhecido

A ideia principal do TQ de um q-bit (ou se preferir do estado de um sistema quântico de um
sistema de dois níveis) é que um agente emissor, chamado Alice, seja capaz de enviar a infor-
mação codiﬁcada em um estado quântico |ψ(cid:105) = a|0(cid:105) + b|1(cid:105) para um agente receptor, chamado
Bob. A distância entre Alice e Bob não é importante, desde que um canal clássico entre eles
possa ser estabelecido (a razão disso ﬁcará claro mais a frente). Em resumo, nosso esquema é
formado por dois laboratórios (da Alice e do Bob) separados espacialmente de forma que um
canal clássico de troca de informações possa ser estabelecido.

O recurso principal do TQ é um estado emaranhado do tipo estado de Bell dado por

|βnm(cid:105) =

|0n(cid:105) + (−1)m |1¯n(cid:105)

√

2

,

(29)

onde n, m assumem valores 0 e 1 e onde deﬁnimos ¯n = 1 − n. Esse recurso é de fundamental
importância para a realização do TQ e caracteriza o que chamamos de canal quântico entre
Alice e Bob. Assim, o canal quântico entre Alice e Bob é estabelecido quando cada um deles
está em posse de uma das partículas do par emaranhado (29). Uma vez estabelecido o canal,

25

Tabela 1: Correções do Bob para o TQ de um estado desconhecido

Resultado da Alice Correção do Bob

|β00(cid:105)
|β10(cid:105)
|β01(cid:105)
|β11(cid:105)

σzσx
σz
σx
1

digamos que o canal quântico é o estado1 |β11(cid:105) (estado singleto que foi usado no trabalho original
[48]), Alice deve estar de posse do estado |ψ(cid:105) a ser teleportado para Bob. O estado do sistema
Alice-Bob é

|φ(cid:105) = |ψ(cid:105)|β11(cid:105) = (a|0(cid:105) + b|1(cid:105))

(cid:32)|01(cid:105) − |10(cid:105)

(cid:33)

√
2

=

1√
2

(a|00(cid:105)A|1(cid:105)B − a|01(cid:105)A|0(cid:105)B + b|10(cid:105)A|1(cid:105)B − b|11(cid:105)A|0(cid:105)B)

,

(30)

onde denotamos | jk(cid:105)A (|m(cid:105)B) como sendo um estado das partículas da Alice (Bob). Devido a
separação entre Alice e Bob, Alice não pode realizar nenhum tipo de medida na partícula do
Bob, mas existe uma medida especial que Alice pode fazer em suas partículas que possibilita
o TQ do estado |ψ(cid:105) para Bob. Em suas particulas Alice deve realizar uma medida na base de
Bell, um dos estados (29). Assim, é conveniente escrever o estado do sistema numa base onde
as partículas da Alice estejam escritas na base de Bell. Fazendo isso nós encontramos

|φ(cid:105) =

(cid:2)|β11(cid:105)A (−a|0(cid:105) − b|1(cid:105))B + |β10(cid:105)A (−a|0(cid:105) + b|1(cid:105))B
(cid:3)
(cid:2)|β01(cid:105)A (a|1(cid:105) + b|0(cid:105))B + |β00(cid:105)A (a|1(cid:105) − b|0(cid:105))B

(cid:3)

1
2
+

1
2

,

(31)
onde ﬁca claro os possíveis resultados da Alice quando ela realizar uma medida na base |βnm(cid:105).
Também é óbvio que o estado, para o qual a partícula do Bob irá colapsar depois da medida
realizada pela Alice, depende exclusivamente do resultado da medida da Alice. Exceto no caso
onde o resultado da Alice fornece o estado |β11(cid:105) em suas partículas, qualquer outro resultado não
pode caracterizar o TQ, pois os possíveis estados de colapso são diferentes do estado original
|ψ(cid:105).

Eis agora a importância de possibilitar a troca de informação entre Alice e Bob por meio de
um canal clássico. Note que, para o Bob, depois de uma medida da Alice o estado não está bem
deﬁnido e pode, ou não, ser o estado que Alice desejava teleportar. Mas se a Alice informar o
resultado de sua medida para o Bob, este sempre poderá agir sobre sua partícula e "recuperar"a
informação que ﬁcou embaralhada com o TQ. A Tabela 1 mostra as correções que devem ser
feitas por Bob em sua partícula.

1Embora tenhamos escolhido tal estado, o protocolo aqui apresentado funciona para qualquer escolha de estado

de Bell da Eq. (29).

26

3.2 Computação Quântica via TQ

Agora nós mostraremos como usar o TQ para realizar CQ universal por meio de simulações
das portas quânticas. A ideia básica é, primeiramente, mostrar como podemos simular o TQ
aplicando portas quânticas, ou seja, usando o modelo de circuitos.

3.2.1 TQ via circuitos: O Protocolo

Para diferenciar o que faremos aqui do TQ original proposto em [48], nós vamos nos referir a
este como TQ via circuitos quânticos, ou simplesmente como TQ via circuitos. A ideia básica
para que possamos realizar o TQ via circuitos é determinar um circuito quântico que nos permita
reproduzir o processo feito em [48].

Assim, novamente partimos de um estado input sendo dado por |φ(cid:105) = |ψ(cid:105)|β00(cid:105). Aqui nós
usaremos |β00(cid:105) para ilustrar que o TQ pode ocorrer usando qualquer um dos estados de Bell. O
circuito que nos permite realizar o TQ [49, 63] é dado como na Fig. 3.

Figura 3: Esquema do circuito que implementa o TQ de um estado quântico qualquer. A seção
do circuito indicado com um retângulo tracejado é o responsável por simular uma medida de
Bell.

O primeiro estágio do circuito, que é todo realizado pela Alice, nada mais é do que simular
uma medida na base de Bell usando um computador quântico. Isso é feito por meio da ação
do circuito formado por uma CNOT e uma Hadamard dispostos como indicado na Fig. 3, e
em seguida uma medida na base computacional. Note portanto que não é a medida na base
computacional que, sozinha, faz o TQ, mas sim a interação entre os qbits da Alice junto com a
medida na base computacional que nos permite realizar o TQ via circuitos.

Após aplicar o circuito, Alice leva o sistema do estado |φ(cid:105) para um estado computado |φC(cid:105)

dado por

|φC(cid:105) =

1
2
+

[|00(cid:105)A (a|0(cid:105) + b|1(cid:105))B + |01(cid:105)A (a|1(cid:105) + b|0(cid:105))B]
1
[|10(cid:105)A (a|0(cid:105) − b|1(cid:105))B + |11(cid:105)A (a|1(cid:105) − b|0(cid:105))B]
2

,

(32)

e é nesse momento que a medida na base computacional deve ser feita sobre os q-bits da Alice.
Assim como no TQ original, o TQ por circuitos também exige um canal clássico entre Alice e
Bob devido o estado do sistema antes de uma medida da Alice ser dado pela Eq. (32). Na Eq.

27

Tabela 2: Correções do Bob para o TQ via circuitos

Resultado da Alice Correção do Bob

|00(cid:105)
|01(cid:105)
|10(cid:105)
|11(cid:105)

1
σx
σz
σzσx

(32) nós podemos ver claramente que para diferentes resultado da medida da Alice, nós teremos
diferentes estados de colapso para o q-bit do Bob. Portanto quando Alice realizar a medida
sobre suas partículas, ela deverá informar o resultado para o Bob e este deverá "corrigir"o seu
estado para obter exatamente o estado |ψ(cid:105) que Alice queria enviar. As Correções do Bob para
os respectivos resultados da medida de Alice são mostradas na Tabela 2.

3.2.2 TQ de portas de 1 q-bit

Para que tenhamos um modelo que nos permita realizar computação quântica universal, é im-
portante mostrar que o modelo permite implementar qualquer porta de um q-bit. Considerando
uma porta qualquer de um q-bit nós precisamos mostrar que, dado um estado |ψ(cid:105), Alice seja
capaz de enviar esse estado para o Bob com uma porta U aplicada.

Essa tarefa pode ser realizada usando o mesmo procedimento introduzido na seção anterior
para o TQ. Porém, a porta que ao ﬁnal deve estar atuando no estado do q-bit físico do Bob não
pode ser implementada por ele, uma vez que este não possui poder computacional. A solução é
transferir tal porta para o início do circuito. Aqui nós também vamos considerar que Alice não
tem poder computacional e que suas operações estão restritas às operações do TQ via circuitos.
Nessa situação faz-se necessário que uma terceira parte, chamada Charlie, forneça os recursos
necessários para Alice e Bob realizarem o procedimento e este recurso é um estado de Bell
rodado. Esse recurso depende da porta U que será implementada por Alice no q-bit do Bob e
é dado por 1 ⊗ U|β00(cid:105), de modo que o esquema que implementa a porta U de um q-bit é dado
agora na Fig. 4.

Figura 4: Circuito para implementar portas via TQ. O recurso deve ser fornecido por Charlie
para Alice e Bob. Tal recurso é um estado de Bell "rodado"|β00(cid:105)U = 1 ⊗ U|β00(cid:105), onde U é a
porta que deve ser implementada ao ﬁnal do processo na partícula do Bob.

O circuito de correção do Bob, agora dado por Rxy (U), depende da porta a ser implementada

28

Tabela 3: Correções do Bob para o TQ de portas

Resultado da Alice Estado do Bob
aU|0(cid:105) + bU|1(cid:105)
aU|1(cid:105) + bU|0(cid:105)
aU|0(cid:105) − bU|1(cid:105)
aU|1(cid:105) − bU|0(cid:105)

|00(cid:105)
|01(cid:105)
|10(cid:105)
|11(cid:105)

pelo circuito. Nós podemos construir um conjunto de estados que são os possíveis colapsos do
q-bit do Bob após uma medida da Alice, onde o estado do sistema após aplicar o circuito e
imediatamente antes da medida é dada por

|φC(cid:105)U =

1
2
+

[|00(cid:105)A (aU|0(cid:105) + bU|1(cid:105))B + |01(cid:105)A (aU|1(cid:105) + bU|0(cid:105))B]
1
[|10(cid:105)A (aU|0(cid:105) − bU|1(cid:105))B + |11(cid:105)A (aU|1(cid:105) − bU|0(cid:105))B]
2

.

(33)

Novamente nós podemos notar a necessidade do canal clássico entre Alice e Bob. Para
cada medida de Alice teremos um estado de colapco correspondente nas partículas do Bob, mas
dessa vez a novidade é que esse estado vem acompanhado de uma porta U aplicada. O estado
do Bob para cada medida de Alice é como mostra a Tabela 3. Assim Bob poderá realizar as
correções necessárias e obter o estado U|ψ(cid:105) em seu q-bit.

3.2.3 TQ de portas controladas

Para que possamos realizar CQ universal com o modelo proposto anteriormente, agora deve-
mos ser capazes de mostrar que podemos implementar portas controladas de 2 q-bits com este
modelo. Primeiro note que se ﬁzermos N réplicas do circuito disposto na Fig. 3, então nós
podemos implementar o TQ de N estados quânticos. Como a ideia é implementar portas con-
troladas de 2 q-bits em quaisquer estados de 2 q-bits, nós temos que implementar o TQ de
estados de 2 q-bits e, junto com essa tarefa, implementar portas de 2 q-bits nesses q-bits. Aqui
nós mostramos o circuito que deve ser capaz de implementar a porta CNOT no estado de 2
q-bits a ser teleportado.

Considere os estados quaisquer |ψk(cid:105) = ak|0(cid:105) + bk|1(cid:105), onde k = {1, 2}, e dois pares de Bell que
serão usados como recurso. Então o circuito que deve implementar o TQ da porta CNOT é dado
na Fig. 5. Note que a correção que deve ser feita por Bob (após a medida da Alice) presente no
circuito da Fig. 5, é ligeiramente diferente das correções que deveriam ser feitas se quiséssemos
apenas realizar o duplo TQ. Essa diferença é devido usarmos o protocolo para implementar a
porta CNOT, assim como vimos que no TQ de portas de 1 q-bit (Fig. 4) deveríamos ter correções
diferentes das correções no TQ de estados quânticos (Fig. 3).

Digamos que Alice não poder implementar CNOT em suas partículas, mesmo assim ela po-
deria realizar o teleporte de portas. Para isso basta que Charlie possar dar os recursos necessáros
para Alice e Bob, isto é, um canal quântico da forma |χ(cid:105) = CNOT32|β00(cid:105)13|β00(cid:105)24. Assim nós

29

Figura 5: Circuito para implementar a porta CNOT via TQ. Em analogia com o TQ de portas
de 1 q-bit, a porta CNOT que atuaria ao ﬁnal do processo, deve atuar no início como mostra o
cirtuito. As linhas tracejadas são informações clássicas (um bit) que implicam na atuação da
correspondente porta se o bit for 1. As correções feitas pelo Bob dependem do conjunto de
informações x1, x2, y1, y2, e estão indicadas pelo retângulo vermelho tracejado.
conseguimos mostrar que se o estado inicial do sistema é |ψ1(cid:105)|ψ2(cid:105)|χ(cid:105), então ao ﬁnal do processo
(já com as devidas correções feitas pelo Bob) teremos que o estado das partículas do Bob é
CNOT|ψ1(cid:105)|ψ2(cid:105).

3.3 Computação Quântica Adiabática via TQ

A ideia da CQ Adiabática [11] é construir um Hamiltoniano que seja capaz de dirigir o sistema
de um estado input que é autoestado fundamental de um Hamiltoniano Hinicial, até um estado
output que é autoestado fundamental de outro Hamiltoniano Hﬁnal. Os Hamiltonianos devem ser
construídos de modo que o estado output seja a resposta de um dado problema que desejamos
solucionar.

Neste tópico nós mostraremos como combinar o TQ e o teorema adiabático para imple-
mentar as portas quânticas de um circuito quântico. Vale mencionar que a complexidade na
implementação desse tipo de modelo computacional é equivalente à complexidade de imple-
mentar o circuito quântico, pois a proposta é mostrar como as portas quânticas de um circuito
podem ser implementadas adiabaticamente via TQ. O grande mérito do tabalho do Bacon e
Flammia [41] foi construir Hamiltonianos adiabáticos que nos permitam simular exatamente o
que os circuitos apresentados nas Figs. 3, 4 e 5 reproduzem.

Todo o estudo desse modelo será feito de uma forma diferente de como foi originalmente
proposto por Bacon e Flammia. A original demonstração da realização do TQ adiabático de
portas foi feito usando a deﬁnição de q-bits lógicos e operadores lógicos. Além da nova forma
de mostrar que o TQ adiabático de portas acontece, como uma contribuição original dessa
dissertação nós estendemos o modelo do Bacon e Flammia. Mostramos que este modelo pode
ser usado para realizar computação quântica por meio de outros conjuntos de portas quânticas
universais.

30

3.3.1 TQ Adiabático

Nós sabemos que o TQ basicamente se resume em preparar o sistema Alice-Bob em um estado
|ψ(cid:105)1 |βkl(cid:105)23, onde |ψ(cid:105) = a|0(cid:105)+b|1(cid:105) é o estado desconhecido a ser teleportado e |βkl(cid:105) é um estado de
Bell. Em seguida Alice deve fazer operações sobre suas partículas (partículas 1 e 2) e enviar o
resultado de uma medida para o Bob, que por sua vez realizará operações no q-bit dele (partícula
3) que dependem do resultado da medida de Alice. Ao ﬁnal do processo o estado ﬁnal do
sistema é |βmn(cid:105)12 |ψ(cid:105)3. Um esquema é apresentado na Fig. 6.

Figura 6: Esquema do estado ﬁnal e inicial do protocolo de TQ adiabático do estado de um
q-bit. Inicialmente a partícula 1 em posse da Alice devem conter o estado |ψ(cid:105) a ser teleportado,
e ao ﬁnal do processo a partícula 3 em posse do Bob estará no estado |ψ(cid:105).

Para realizar CQ adiabática nós precisamos construir Hamiltonianos Hini e Hﬁn de modo
que |ψ(cid:105)1 |βkl(cid:105)23 e |βmn(cid:105)12 |ψ(cid:105)3 sejam autoestado de Hini e Hﬁn, respectivamente, para todo |ψ(cid:105).
Para facilitar a construção de Hini e Hﬁn nós devemos escolher o estado recurso |βkl(cid:105) que iremos
usar. Escolhendo o estado |β00(cid:105) = 1/

√
2 (|00(cid:105) + |11(cid:105)), nós podemos mostrar que 2

Hini = −ω11 (Z2Z3 + X2X3)
Hﬁn = −ω (Z1Z2 + X1X2) 13

(34)
(35)
é uma boa boa escolha, pois mostra-se que |ψ(cid:105)1 |β00(cid:105)23 e |β00(cid:105)12 |ψ(cid:105)3 são autoestados fundamen-
tais de Hini e Hﬁn, respectivamente. Agora, como nós deveremos dirigir o sistema do estado
|ψ(cid:105)1 |β00(cid:105)23 para o |β00(cid:105)12 |ψ(cid:105)3 adiabaticamente, deixe-nos deﬁnir o Hamiltoniano adiabático

,
,

H (s) = ηi (s) Hini + η f (s) Hﬁn

,

(36)

onde as funções ηi (s) e η f (s) são funções contínuas do parâmetro s. A informação sobre a
adiabaticidade de H (s) está contida no parâmetro s = t/T, onde T é o tempo total de evolução
do sistema e deve ser tal que o sistema evolua lentamente. As funções ηi (s) e η f (s) devem
satisfazer ηi (1) = η f (0) = 0 e ηi (0) = η f (1) = 1, para garantir que |ψ(cid:105)1 |β00(cid:105)23 e |β00(cid:105)12 |ψ(cid:105)3
sejam autoestados fundamentais de H (s) em s = 0 e s = 1, respectivamente.

2A escolha dos operadores ZnZm e XnXm para deﬁnir os Hamiltonianos (34) e (35) pode ser justiﬁcada devido
estes serem estabilizadores do estado de Bell |β00(cid:105)nm, aliás, esses são os únicos estabilizadores para tal estado [9].

31

Um ponto importante que deve ser mencionado é que diferentemente dos protocolos estuda-
dos anteriormente, não teremos a necessidade de realizar uma medida ao ﬁnal do processo. Por
outro lado, agora teremos restrições sobre a distância entre Alice e Bob, já que o Hamiltoniano
que fará a evolução local.

Calculando o espectro de H (s), aﬁm de determinar o gap mínimo, nós vemos que H (s) tem

um espectro degenerado e dado por

(cid:113)
ε0 (s) = −2ω
(cid:113)
ε1 (s) = ε2 (s) = 0 , e
ε3 (s) = 2ω

η2
i (s) + η2

f (s)

η2
i (s) + η2

f (s)

,

,

(37)
(38)
(39)

onde cada nível de energia εn (s) é duplamente degenerado. Assim nós podemos determinar o
gap em função do tempo dado por

g (s) = ε1 (s) − ε0 (s) = 2ω

η2
i (s) + η2

f (s)

.

(40)

(cid:113)

Da Eq. (36) nós devemos assegurar que a igualdade ηi (s) = η f (s) = 0 não pode ocorrer
para nenhum s ∈ [0, 1]. E isso garante que g (s) (cid:44) 0 ∀s ∈ [0, 1], pois g (s) = 0 só ocorre se
ηi (s) = η f (s) = 0 ocorrer em algum s ∈ [0, 1]. Considerado isso, consequentemente o gap
mínimo deﬁnido como gm´ın = mins∈[0,1] g (s) é não nulo.

Um problema que surge é que devido a dupla degenerescência de H (s) com relação ao es-
tado fundamental, o estado ﬁnal pode não ser |β00(cid:105)12 |ψ(cid:105)3. Assim, o teorema adiabático sozinho
não é o suﬁciente para assegurar que o estado ﬁnal do sistema será exatamente |β00(cid:105)12 |ψ(cid:105)3. Para
resolver esse problema e mostrar que o estado ﬁnal do sistema é exatamente |β00(cid:105)12 |ψ(cid:105)3, nós
vamos usar propriedades de simetria do Hamiltoniano.

As Simetrias do Hamiltoniano H (s) e sua forma matricial Deixe-nos considerar o Hamil-
toniano da Eq. (36). Então deﬁnindo os operadores Πz = ZZZ e Πx = XXX nós podemos
mostrar que

(cid:2)H (s) , Πz

(cid:3) = [H (s) , Πx] = 0 ,

(41)

o que nos mostra que H (s) tem duas simetrias. Considerando um estado da base computacional
|mnk(cid:105), então temos as seguintes equações

Πz |mnk(cid:105) = (−1)m+n+k |mnk(cid:105)
Πx |mnk(cid:105) = | ¯m¯n¯k(cid:105)

(42)
(43)
onde ¯x = 1 − x. Devido as Eqs. (42) e (43), nós denominamos Πz como operador de paridade
(cid:69)
dos estados da base computacional e Πx como operador troca de pariade. Mostrar que Πx troca
a paridade é fácil. Considere um estado |mnk(cid:105) de paridade pmnk = (−1)m+n+k, então
terá

(cid:12)(cid:12)(cid:12) ¯m¯n¯k

,

,

32

paridade p ¯m¯n¯k = (−1) ¯m+¯n+¯k = (−1)3 (−1)−m−n−k = − (−1)m+n+k = −pmnk, assim mostrando que
| ¯m¯n¯k(cid:105) e |mnk(cid:105) possuem paridades opostas.



,

H (s) =

 H+

A simetria em Πz nos diz que nós podemos escrever o Hamiltoniano H (s) na base compu-

tacional {|mnk(cid:105)} em uma forma bloco diagonal como segue
∅4×4
H−
4×4 (s)

4×4 (s)
∅4×4
onde ∅4×4 é uma matriz 4×4 nula e os blocos H±
4×4 (s) são formados por elementos de matrizes de
H (s) escrito na base computacional. Aqui nós não especiﬁcamos exatamente o ordenamento
da base, mas nós consideramos que os quatro primeiros elementos da base são elementos de
paridade +1 e os quatro ultimos são elementos da base com paridade −1. Para melhorar a
notação, sempre escreveremos os elementos de base com paridade +1 e −1 como |mnk(cid:105)+ (com
dual +(cid:104)mnk|) e | ¯m¯n¯k(cid:105)− (com dual −(cid:104) ¯m¯n¯k|), respectivamente. Por outro lado, nós ainda temos a
simetria em Πx. O que ela nos diz?

Sabendo que o operador Πx atua sobre um estado de paridade ±1 e nos fornece como resul-
tado um estado de paridade ∓1, então poderíamos nos perguntar se existe, ou não, uma relação
bem determinada entre os elementos de matrizes dos blocos H±
4×4 (s) do Hamiltoniano H (s).
Para veriﬁcar se há ou não uma correspondência, considere o elemento de matriz do bloco
formado pelos vetores de paridade −1 dado por

h ¯m(cid:48) ¯n(cid:48) ¯k(cid:48)
¯m¯n¯k

(s) = (cid:104) ¯m¯n¯k|H (s)| ¯m(cid:48) ¯n(cid:48)¯k(cid:48)(cid:105)− ,

e seja hm(cid:48)n(cid:48)k(cid:48)

mnk

(s) elementos do bloco formado pelos vetores de paridade −1, assim

hm(cid:48)n(cid:48)k(cid:48)

mnk

(s) = (cid:104)mnk|H (s)|m(cid:48)n(cid:48)k(cid:48)(cid:105)+

,

(44)

(45)

agora vamos usar a Eq. (43) para escrever a Eq. (44) como

h ¯m(cid:48) ¯n(cid:48) ¯k(cid:48)
¯m¯n¯k

(s) = (cid:104)mnk|ΠxH (s) Πx|m(cid:48)n(cid:48)k(cid:48)(cid:105)+

.

Usando que [H (s) , Πx] = 0 e que Π2n

x = 1, temos portanto
(s) = (cid:104)mnk|H (s)|m(cid:48)n(cid:48)k(cid:48)(cid:105)+ = hm(cid:48)n(cid:48)k(cid:48)

h ¯m(cid:48) ¯n(cid:48) ¯k(cid:48)
¯m¯n¯k

(46)
que nos mostra que para cada elemento de matriz do bloco de paridade −1, nós temos um ele-
mento igual no bloco de paridade +1 e, consequentemente, se nós ordenarmos adequadamente
a base nós podemos ter

(s)

mnk

,

H (s) =

,

(47)

 H4×4 (s)

∅4×4



∅4×4
H4×4 (s)

onde os elementos de matrizes de H4×4 (s) são determinados a partir da Eq. (45). Calculando os

33

elementos de matrizes hm(cid:48)n(cid:48)k(cid:48)

mnk

(s) nós encontramos

hm(cid:48)n(cid:48)k(cid:48)

mnk

(s) = ηi (s)(cid:104)mnk|Hin|m(cid:48)n(cid:48)k(cid:48)(cid:105) + η f (s)(cid:104)mnk|Hﬁn|m(cid:48)n(cid:48)k(cid:48)(cid:105)

= −ωηi (s) δmm(cid:48)(cid:2)(cid:104)nk|XX|n(cid:48)k(cid:48)(cid:105) + (cid:104)nk|ZZ|n(cid:48)k(cid:48)(cid:105)(cid:3)
−ωη f (s) δkk(cid:48)(cid:2)(cid:104)mn|XX|m(cid:48)n(cid:48)(cid:105) + (cid:104)mn|ZZ|m(cid:48)n(cid:48)(cid:105)(cid:3)

,

usando que (cid:104)mn|ZZ|m(cid:48)n(cid:48)(cid:105) = (−1)m+n δmm(cid:48)δnn(cid:48) e que (cid:104)mn|XX|m(cid:48)n(cid:48)(cid:105) = (1 − δmm(cid:48)) (1 − δnn(cid:48)), temos
portanto que

hm(cid:48)n(cid:48)k(cid:48)

mnk

(s) = −ωηi (s) δmm(cid:48)

(cid:104)

(cid:105)
−ωη f (s) δkk(cid:48)(cid:2)(−1)m+n δmm(cid:48)δnn(cid:48) + (1 − δmm(cid:48)) (1 − δnn(cid:48))(cid:3)
(−1)k+n δnn(cid:48)δkk(cid:48) + (1 − δnn(cid:48)) (1 − δkk(cid:48))

são os elementos de matrizes dos blocos da forma matricial do Hamiltoniano H (s). Para
encontrar a forma matricial de cada bloco H4×4 (s) nós consideramos aqui a sequencia da
base |mnk(cid:105)+ como sendo {|000(cid:105) ,|011(cid:105) ,|101(cid:105) ,|110(cid:105)}, consequentemente da base | ¯m¯n¯k(cid:105)− como
{|111(cid:105) ,|100(cid:105) ,|010(cid:105) ,|001(cid:105)}, e assim podemos mostrar que

(48)

(49)

 .



H4×4 (s) = −ω

ηi (s) + η f (s)

ηi (s)

0

η f (s)

ηi (s)

ηi (s) − η f (s)

η f (s)

0

0

η f (s)

−η f (s) − ηi (s)

ηi (s)

η f (s)

0

ηi (s)

η f (s) − ηi (s)

Com essa escolha nós podemos ver que para escrever a forma matricial do Hamiltoniano
H (s) como na Eq. (47), onde cada bloco H4×4 (s) é dado pela Eq. (49), a base deve estar neces-
sariamente na seguinte sequência {{|mnk(cid:105)+},{| ¯m¯n¯k(cid:105)−}}, onde {|mnk(cid:105)+} = {|000(cid:105) ,|011(cid:105) ,|101(cid:105) ,|110(cid:105)}
e {| ¯m¯n¯k(cid:105)−} = {|111(cid:105) ,|100(cid:105) ,|010(cid:105) ,|001(cid:105)}.

A reprodução do estado ﬁnal: Sucesso no TQ Devido a degenerescência do nível de energia
fundamental do Hamiltoniano H (s), nós não podemos assegurar, apenas com o teorema adia-
bático, que o TQ será realizado com sucesso. Essa degenerescência permite que os coeﬁcientes
a e b (que carregam a informação sobre o estado |ψ(cid:105)) possam se "misturar"de forma que o que
teremos no ﬁnal do processo não seja o estado |ψ(cid:105) = a|0(cid:105) + b|1(cid:105) no terceiro q-bit, e sim um
estado do tipo
derando que o teorema adiabático garante que o estado ﬁnal será o autoestado fundamental de
Hﬁn, podemos ver que ambos os estados |β00(cid:105)12 |ψ(cid:105)3 e |β00(cid:105)12
3 são autoestados fundamentais
de Hﬁn.

(cid:12)(cid:12)(cid:12) ¯ψ(cid:11) = α (a, b)|0(cid:105) + β (a, b)|1(cid:105), onde |α (a, b)|2 + |β (a, b)|2 = 1. De fato, consi-

(cid:12)(cid:12)(cid:12) ¯ψ(cid:11)

Para resolver esse problema nós faremos uso dos resultados apresentados anteriormente.

34

Deixe-nos escrever o estado inicial |φ (0)(cid:105) e ﬁnal |φ (1)(cid:105) como

|φ (0)(cid:105) = |ψ(cid:105)1 |β00(cid:105)23 =
|φ (1)(cid:105) = |β00(cid:105)12

(cid:12)(cid:12)(cid:12) ¯ψ(cid:11)

=

3

[a (|000(cid:105) + |011(cid:105)) + b (|100(cid:105) + |111(cid:105))]123

(cid:2)α (a, b) (|000(cid:105) + |110(cid:105)) + β (a, b) (|001(cid:105) + |111(cid:105))(cid:3)

,

123

(50)

. (51)

1√
2
1√
2

A simetria do Hamiltoniano H (s) com relação a paridade em Πz nos diz que se iniciarmos
o nosso sistema em um estado qualquer de paridade ±1, o estado do sistema evolui para estados
instantâneos de paridade ±1. Portanto, se iniciamos o sistema em uma superposição de estados
de paridades distintas, então podemos aﬁrmar apenas que cada conjunto, formado por estados
de paridades bem deﬁnidas e iguais, evoluirá independente um do outro. Para fazer uso de tal
resultado, note que os coeﬁcientes a e b na Eq. (50) multiplicam estados de paridade +1 e −1,
respectivamente, e na Eq. (51) os coeﬁcientes α (a, b) e β (a, b) multiplicam também estados de
paridade +1 e −1, respectivamente. Então devido a simetria em Πz nós não devemos encontrar
uma dependencia de b no coeﬁciente α (a, b), da mesma forma β (a, b) não pode ter dependência
em a. Em conclusão, nós teremos que α (a, b) = α (a) e β (a, b) = β (b).

Agora, nós devemos usar a unitariedade da evolução. Sabendo que evoluções unitárias
mantém invariante a norma de um estado [50], então devemos esperar que |α (a)|2 + |β (b)|2 =
|a|2 +|b|2. Devido a independência dos coeﬁcientes a e b, bem como de α (a) e β (b), a solução da
igualdade é dada por |α (a)|2 = |a|2 e |β (b)|2 = |b|2, que por sua vez nos permite ainda escrever
α (a) = aeiθa e β (b) = beiθb, para θa e θb reais. As fases θa e θb surgem devido a evolução unitária
de cada estado independentemente, logo não podemos garantir, ainda, que existe alguma relação
entre θa e θb.

Ainda temos uma simetria a ser usada, a simetria em Πx. Vimos que a simetria em Πx
nos permite mostrar que os blocos do Hamiltoniano H (s) são idênticos. Cada bloco do Ham-
tiltoniano H (s) é responsável por evoluir um determinado conjunto de estados, por exemplo,
o Hamiltoniano H4×4 (s) do primeiro bloco e do segundo bloco dirigem todos os estados do
conjunto {|mnk(cid:105)+} e {| ¯m¯n¯k(cid:105)−}, respectivamente. Então podemos aﬁrmar que, como os blocos
são idênticos, cada conjunto {|mnk(cid:105)+} e {| ¯m¯n¯k(cid:105)−} evolui de forma idêntica. Isso signiﬁca que
qualquer fase que venha a surgir multiplicando estados de paridade +1, também devem surgir
(exatamente a mesma fase) multiplicando estados de paridade −1. Em outras palavras, de-
vido a paridade do Hamiltoniano H (s) em relação a Πx, estados de paridades distintas evoluem
da mesma forma, consequentemente podemos escrever para os coeﬁcientes α (a) e β (b) que
α (a) = aeiθ e β (b) = beiθ, para algum real θ.

Com isso nós conseguimos escrever que o estado ﬁnal |φ (1)(cid:105) é dado por

|φ (1)(cid:105) =

eiθ√
2

[a (|000(cid:105) + |110(cid:105)) + b (|001(cid:105) + |111(cid:105))]123 = eiθ |β00(cid:105)12 |ψ(cid:105)3

,

(52)

portanto o estado ﬁnal do sistema é exatamente o estado que caracteriza o TQ a menos de uma

35

fase global θ.

3.3.2 TQ Adiabático de 2 q-bits

A ﬁm de realizar o duplo teleporte, um estado de 2 q-bits deve ser preparado e dado para Alice.
Nós deixamos livre para que esse estado seja o mais geral possível, ou seja, consideramos que

|ψ2(cid:105) = a1 |00(cid:105) + a2 |01(cid:105) + a3 |10(cid:105) + a4 |11(cid:105)

,

onde a condição de normalização de |ψ2(cid:105) impõe que(cid:80)4

(53)
n=1 |an|2 = 1. A depender do conjunto de
coeﬁcientes {an}, nós poderemos ter um estado |ψ2(cid:105) emaranhado. O canal quântico que deve ser
estabelecido entre Alice e Bob é dado por dois pares de partículas emaranhadas que aqui nós
consideramos como sendo o estado |β00(cid:105). Nós rotulamos as partículas com os números de 1 a 6 e
dividimos o sistema em dois setores, ímpar e par. Nós preparamos o estado a ser teleportado nas
partículas 1 e 2 e deixamos as partículas 1 e 2 em posse da Alice. O canal quântico é formado
pelas partículas enumeradas de 3 a 6 onde os pares de particulas emaranhadas são formados
pelas partículas 3 e 5 e por 4 e 6, compondo o canal do setor ímpar e par, respectivamente. Um
esquema pode ser visto na Fig. 7.

Figura 7: Esquema do estado ﬁnal e inicial do protocolo de TQ adiabático. Inicialmente as
partículas 1 e 2 em posse da Alice devem conter o estado |ψ2(cid:105) a ser teleportado, e ao ﬁnal do
processo as partículas 5 e 6 em posse do Bob estarão no estado |ψ2(cid:105).

Pra realizar o duplo TQ adiabaticamente, nós devemos considerar o seguinte Hamiltoniano

adiabático

HD (s) = HP (s) ⊗ 1I + 1P ⊗ HI (s)

,

(54)

onde denotaremos apenas por HD (s) = HP (s) 1I + 1PHI (s). Nós podemos notar que o Ha-
miltoniano HD (s) não permite nenhuma interação entre os setores par e ímpar. A escolha do
Hamiltoniano acima foi feita de modo que possamos reproduzir exatamente a tarefa realizada
pelo duplo protocolo de TQ via circuitos quânticos, onde nós aplicamos dois circuitos indepen-
dentes para teleportar o estado de 2 q-bits. Cada Hamiltoniano HS (s), onde S indica o setor I
(ímpar) ou P (par), é da forma dada na Eq. (36) e atua apenas no setor S . De forma mais clara,

36

o Hamiltoniano HI (s) (HP (s)) atua sobre os q-bits 1, 3 e 5 (2, 4 e 6) e é da forma

onde

HI(P) (s) = ηi (s) HI(P)
ini

+ η f (s) HI(P)
ﬁn

,

(cid:0)Z3(4)Z5(6) + X3(4)X5(6)
(cid:1)
= −ω(cid:0)Z1(2)Z3(4) + X1(2)X3(4)
(cid:1) 15(6)

= −ω11(2)

,
.

HI(P)
ini
HI(P)
ﬁn

(55)

(56)
(57)

Assim, cada Hamiltoniano HS (s) será responsável por evoluir adiabaticamente o setor S .
ini e de HD (s), podemos mostrar facilmente que o estado inicial dado

Devido as formas de HI(P)
por

|φ2 (0)(cid:105) = |ψ2(cid:105)12 |β00(cid:105)46 |β00(cid:105)35

(58)

é o autoestado de HD (0) e que

|φ2 (1)(cid:105) = |β00(cid:105)24 |β00(cid:105)13 |ψ2(cid:105)56

(59)

= aµ

(cid:69)

(cid:12)(cid:12)(cid:12)aµ

(cid:12)(cid:12)(cid:12)aµ

(cid:69)
é o autoestado de HD (1). Para mostrar isso, usamos o seguinte resultado [64]: Sejam dois
e B|bν(cid:105) =
operadores Am×m e Bn×n e suas respectivas equações de autovalores A
bν |bν(cid:105). Então se um operador C puder ser escrito como Ck×k = Am×m ⊗ 1n×n + 1m×m ⊗ Bn×n,
onde k = mn, a equação de autovalor para Ck×k é C |cκ(cid:105) = cκ |cκ(cid:105), onde os vetores |cκ(cid:105) =
formam o conjunto de autoestados de C com correspondentes autovalores cκ = aµ +bν. Sabendo
que |ζ2(cid:105)2 |β00(cid:105)46 e |ζ1(cid:105)1 |β00(cid:105)35 são autoestados fundamentais de HP (0) e HI (0), do resultado
acima nós garantimos que |φ (0)(cid:105) é autoestado fundamental de HD (0). A mesma análise pode
ser feita para mostrar que |φ (1)(cid:105) é autoestado fundamental de HD (1). Ainda com a ajuda de tal
resultado, nós podemos determinar o gap de energia entre o estado fundamental de HD (s) e o
primeiro excitado. Como os Hamiltonianos HI (s) e HP (s) são dados pela Eq. (36), o espectro
de HD (s) é dado por

(cid:69)|bν(cid:105)

(cid:12)(cid:12)(cid:12)aµ

εmn (s) = εn (s) + εm (s)

,

(60)

onde as quantidades εm (s) são dadas pelas Eqs. (37), (38) e (39). Portanto a energia do nível
fundamental é ε00 (s) = 2ε0 (s) e do primeiro excitado é ε01 (s) = ε0 (s), logo encontramos o
gap de energia como sendo

gD (s) = ε01 (s) − ε00 (s) = 2ω

η2
i (s) + η2

f (s)

.

(61)

(cid:113)

Como temos gD (s) = g (s) (onde g (s) é o gap do TQ de 1 q-bit), isso mostra que no du-
plo TQ temos um gap de energia não nulo. A degenerescência de cada Hamiltoniano HP (s)
e HI (s) é contabilizada para HD (s) de modo que HD (s) é quadruplamente degenerado, con-
sequentemente o estado fundamental de HD (s) também o é, assim nós teremos novamente o

37

problema encontrado no TQ de 1 q-bit para provar que o TQ acontece. Mas assim como para 1
q-bit, nós também poderemos tentar resolver o problema via simetrias do Hamiltoniano.

As simetrias do Hamiltoniano e sua forma matricial Mais uma vez a não suﬁciência do
teorema adiabático em garantir que o TQ acontece, nos obriga a analisar as simetrias do Hamil-
toniano que dirige o sistema e ver quais informações podem ser extraídas delas. Devido a forma
do Hamiltoniano HD (s) nós podemos obter as suas simetrias facilmente a partir das simetrias
dos Hamiltonianos HI (s) e HP (s). Deﬁnindo os operadores

ΠP

z = Z2Z4Z6
ΠI
z = Z1Z3Z5

, ΠP
, ΠI

x = X2X4X6
x = X1X3X5

,
,

(62)
(63)

(cid:104)

=

x 1I(cid:105)

HD (s) , ΠP

(cid:104)

=

HD (s) , 1PΠI
x

(cid:105)

=

(cid:104)

HD (s) , 1PΠI
z

(cid:105)

= 0 .

(64)

z 1I(cid:105)

nós podemos mostrar que

(cid:104)

HD (s) , ΠP

z e ΠS

Em analogia ao caso do TQ simples nós denominamos os operadores ΠS

x como opera-
dores de paridade e inversão de paridade, respectivamente, do setor S . Consequentemente de-
ﬁnimos os conjuntos de vetores {{|mnk(cid:105)+S},{| ¯m¯n¯k(cid:105)−S}}, com S = {I, P}, onde |mnk(cid:105)P = |mnk(cid:105)246
e |mnk(cid:105)I = |mnk(cid:105)135 e onde {|mnk(cid:105)+S} e {| ¯m¯n¯k(cid:105)−S} são os conjuntos de vetores da base computa-
cional de paridade +1 e −1, respectivamente, do setor S . Não é difícil notar que vale a relação
x |mnk(cid:105)+S = | ¯m¯n¯k(cid:105)−S entre os conjuntos {|mnk(cid:105)+S} e {| ¯m¯n¯k(cid:105)−S}.
ΠS
Além dessas simetrias de cada setor, nós ainda podemos encontrar simetrias do sistema
como um todo fazendo combinações das simetrias de cada setor. Deixe-nos deﬁnir os operado-
res de paridade total e inversão de paridade total como

z ΠI
x ΠI

z = ΠP
ΠD
ΠD
x = ΠP

(65)
(66)
de modo que se deﬁnirmos o conjunto {|n2n4n6(cid:105)|n1n3n5(cid:105)} como a base computacional para o
sistema total, a equação de autovalor para o operador ΠD
z sugere que a paridade do estado
|n2n4n6(cid:105)|n1n3n5(cid:105) é determinado pela paridade de cada setor individualmente. De fato temos

z = Z2Z4Z6Z1Z3Z5
x = X2X4X6X1X3X5

,

,

z |n1n3n5(cid:105)|n2n4n6(cid:105) = (−1)n1+n3+n5 (−1)n2+n4+n6 |n1n3n5(cid:105)|n2n4n6(cid:105)
ΠD

(67)
Deixe-nos agora deﬁnir os seguintes conjuntos {|n2n4n6(cid:105)+ |n1n3n5(cid:105)+ ,|¯n2 ¯n4 ¯n6(cid:105)− |¯n1 ¯n3 ¯n5(cid:105)−} e
{|¯n2 ¯n4 ¯n6(cid:105)− |n1n3n5(cid:105)+ ,|n2n4n6(cid:105)+ |¯n1 ¯n3 ¯n5(cid:105)−} de paridade +1 e −1, respectivamente. Da forma como
os operadores ΠD
x foram deﬁnidos nas Eqs. (66) e (65) podemos chegar às relações de
comutação

z e ΠD

,

HD (s) , ΠD
z

=

HD (s) , ΠD
x

= 0 ,

(68)

(cid:104)

(cid:105)

(cid:105)

(cid:104)

38





Assim nós faremos uso dessas simetrias para tentar determinar a forma matricial de HD (s).
Primeiramente devemos atentar para a simetria total em ΠD
z que nos mostra que podemos orde-
nar adequadamente a base de modo que HD (s) seja composto por dois blocos (bloco-diagonal)
na base computacional. Então nós escolhemos, primeiramente, ordenar a base de modo que os
32 primeiros vetores da base sejam vetores de paridade +1 e os ultimos 32 sejam vetores de
paridade −1. O uso dessa primeira simetria nos permite escrever

 H+

HD (s) =

32×32 (s)
∅32×32

∅32×32
H−
32×32 (s)

.

Por outro lado, a simetria em Πx novamente nos permite ainda escrever que, novamente
32×32 (s) é exatamente a mesma de
x , temos

ordenando convenientemente a base, a forma matricial de H+
H−
z e ΠD
32×32 (s). Como resultado do uso das simetrias em ΠD
∅32×32
H32×32 (s)

 H32×32 (s)

HD (s) =

∅32×32

.

z e ΠI

Agora nós vamos usar as simetrias de cada setor em separado para obter mais informações
sobre a forma matricial de cada bloco H32×32 (s). Sabendo que cada bloco tem uma simetria
em ΠP
z, podemos (assim como no caso do TQ simples) aﬁrmar que estados de paridades
distintas evoluem independentemente em cada setor. Ou seja, o estado |n2n4n6(cid:105)+ |n1n3n5(cid:105)+ tem
paridade +1 se olharmos apenas para o setor par, por outro lado o estado |¯n2 ¯n4 ¯n6(cid:105)− |¯n1 ¯n3 ¯n5(cid:105)−
tem paridade −1. Analogamente se olharmos para o setor de ímpar nós obtemos o mesmo re-
sultado. Então a paridade em ΠP
z, nos mostra que dentro do subconjunto
{|n2n4n6(cid:105)+ |n1n3n5(cid:105)+ ,|¯n2 ¯n4 ¯n6(cid:105)− |¯n1 ¯n3 ¯n5(cid:105)−} nós podemos ordenar a base de modo que H32×32 (s)
seja bloco diagonal. De fato, ordenando os 16 primeiros vetores da base como sendo o conjunto
{|n2n4n6(cid:105)+ |n1n3n5(cid:105)+} e os 16 ultimos como {|¯n2 ¯n4 ¯n6(cid:105)− |¯n1 ¯n3 ¯n5(cid:105)−}, podemos escrever

z 1I, bem como em 1PΠI

 H16×16 (s)

∅16×16



,

∅16×16
H16×16 (s)

H32×32 (s) =

onde já aproveitamos a simetria em ΠP
escrevemos o Hamiltoniano HD (s) em sua forma matricial como

x para escrever que os blocos são idênticos. Assim, nós



∅16×16
H++ (s)
∅16×16 H−− (s)
∅16×16
∅16×16

∅16×16
∅16×16
∅16×16 H+− (s)
∅16×16

∅16×16
∅16×16
∅16×16
∅16×16 H−+ (s)



HD (s) =

,

(69)

logo, como resultado do ordenamento feito nós ﬁcamos com a base ordenada da seguinte ma-
neira {{|+(cid:105)P |+(cid:105)I} ,{|−(cid:105)P |−(cid:105)I} ,{|+(cid:105)P |−(cid:105)I} ,{|−(cid:105)P |+(cid:105)I}}, onde denotamos |x(cid:105)P |y(cid:105)I como sendo um

39

estado que tem paridade x e y nos setores par e ímpar, respectivamente.

Reprodução do estado ﬁnal Tendo em vista que a degenerescência de HD (s) pode "mistu-
rar"os coeﬁcientes {an} do estado |ψ2(cid:105) durante o TQ, nós poderemos ter um estado inicial dado
por |φ2 (0)(cid:105), mas o estado ﬁnal pode não ser |φ2 (1)(cid:105) onde o estado dos q-bits 5 e 6 é exatamente
|ψ2(cid:105), mas poderemos ter um estado

(cid:12)(cid:12)(cid:12) ¯φ2 (1)(cid:11) dado por
(cid:12)(cid:12)(cid:12) ¯φ2 (1)(cid:11) = |β00(cid:105)24 |β00(cid:105)13

(cid:12)(cid:12)(cid:12) ¯ψ2

(cid:11)

56

,

(70)

(cid:12)(cid:12)(cid:12) ¯ψ2

onde

(cid:11) = α1 ({an})|00(cid:105) + α2 ({an})|01(cid:105) + α3 ({an})|10(cid:105) + α4 ({an})|11(cid:105)

(71)
em que cada novo coeﬁciente αn é função do conjunto de coeﬁcientes antigos {an}. Agora
deixe-nos escrever explicitamente os estados |φ2 (0)(cid:105) e

(cid:12)(cid:12)(cid:12) ¯φ2 (1)(cid:11) obtendo
(cid:12)(cid:12)(cid:12) ¯φ2 (1)(cid:11) = α1 |β00(cid:105)24 |β00(cid:105)13 |00(cid:105)56 + α2 |β00(cid:105)24 |β00(cid:105)13 |01(cid:105)56

|φ2 (0)(cid:105) = a1 |00(cid:105)12 |β00(cid:105)46 |β00(cid:105)35 + a2 |01(cid:105)12 |β00(cid:105)46 |β00(cid:105)35
+a3 |10(cid:105)12 |β00(cid:105)46 |β00(cid:105)35 + a4 |11(cid:105)12 |β00(cid:105)46 |β00(cid:105)35

,

+α3 |β00(cid:105)24 |β00(cid:105)13 |10(cid:105)56 + α4 |β00(cid:105)24 |β00(cid:105)13 |11(cid:105)56

,

,

(72)

(73)

onde denotamos αk = αk ({an}) e onde temos que

,

(74)

|β00(cid:105)46 |β00(cid:105)35 =
|β00(cid:105)24 |β00(cid:105)13 =

1
2
1
2

(|00(cid:105)|00(cid:105) + |00(cid:105)|11(cid:105) + |11(cid:105)|00(cid:105) + |11(cid:105)|11(cid:105))4635
(|00(cid:105)|00(cid:105) + |00(cid:105)|11(cid:105) + |11(cid:105)|00(cid:105) + |11(cid:105)|11(cid:105))2413

(75)
O estado |β00(cid:105)46 |β00(cid:105)35, bem como |β00(cid:105)24 |β00(cid:105)13, combinados com os estados |nm(cid:105)12 e |nm(cid:105)56,
respectivamente, formam estados de paridades distintas (com relação a cada setor) de modo que
podemos escrever

.

,

|φ2 (0)(cid:105) = a1 |++(cid:105)PI + a2 |−+(cid:105)PI + a3 |+−(cid:105)PI + a4 |−−(cid:105)PI

(cid:12)(cid:12)(cid:12) ¯φ2 (1)(cid:11) = α1 |++(cid:105)PI + α2 |−+(cid:105)PI + α3 |+−(cid:105)PI + α4 |−−(cid:105)PI

(76)
(77)
onde nós deﬁnimos |xy(cid:105)PI = |x(cid:105)P |y(cid:105)I, onde |x(cid:105)P é uma superposição de estados do setor par de
paridade x e |y(cid:105)I uma superposição de estados do setor ímpar de paridade y. Nós desejamos
escrever os estados dessa maneira para que possamos usar o fato de que estados que são com-
binações de estados da base computacional de paridades distintas evoluem independentemente.
Por exemplo, |++(cid:105)PI e |+−(cid:105)PI são formados por combinações de estados de mesma paridade do
setor par, mas não são com relação aos estados do setor ímpar, logo |++(cid:105)PI e |+−(cid:105)PI evoluem
independentemente. O mesmo vale para os demais estados e portanto nós podemos escrever
que cada αk não depende de todos os an, mas que αn = αn (an). Outra forma de enxergar isso é

,

40

4(cid:88)

4(cid:88)

notando que cada bloco do Hamiltoniano na Eq. (69) evolui um estado |xy(cid:105)PI diferente, portanto
qualquer informação dos estados |+−(cid:105)PI e |++(cid:105)PI não se misturam, bem como nos demais e por-
tanto αn = αn (an). Porém, deve-se sempre ter em mente que o resultado αn = αn (an) é uma
consequência das simetrias em ΠP
z . Agora o próximo passo é usar a unitariedade
da evolução que nos permite escrever equação

z 1I , 1PΠI

z e ΠD

|αn (an)|2 =

|an|2

,

(78)

n=1

n=1

que tem como solução as relações entre αn (an) e an dadas por αn (an) = aneiθn, para algum θn
real. Cada parâmetro θn está intimamente ligado com a evolução independente de um estado
|xy(cid:105)PI, para determinar alguma relação entre os θn’s nós podemos usar as simetrias que são as
simetrias em ΠP
x . Com essas simetrias mostramos que os blocos Hxy (s) que
constituem o Hamiltoniano HD (s) são idênticos, então independente de como os estados |xy(cid:105)PI
evoluem, eles evoluem da mesma forma e consequentemente as fases θn’s são todas iguais.
Substituindo, portanto, essas informações na Eq. (77) nós obtemos exatamente o |φ2 (1)(cid:105) =
|β00(cid:105)24 |β00(cid:105)13 |ψ2(cid:105)56 a menos de uma fase global θ.

x 1I , 1PΠI

x e ΠD

3.3.3 TQ Adiabático de n q-bits

Vimos que o uso das simetrias do Hamiltoniano em conjunto com a unitariedade da evolução
do sistema nos permite mostrar que tanto o TQ de 1 q-bit como o de 2 q-bits pode ser feito
adiabaticamente. Agora nós mostraremos como generalizar o modelo de TQ adiabático para
teleportar um estado qualquer de n q-bits.

Inicialmente considere um sistema composto por n q-bits e que o sistema encontra-se no

estado

|ψn(cid:105) =

ak1···kn |k1 ··· kn(cid:105)1···n

.

(79)

(cid:88)

··· (cid:88)

k1={0,1}

kn={0,1}

Nós desejamos teleportar esse estado de n q-bits adiabaticamente. De forma análoga ao que
foi feito no duplo TQ nós deﬁnimos n setores onde para cada setor nós necessitamos de um
par de partículas emaranhadas. Nesse caso o canal quântico composto de n pares de partículas
emaranhadas é dado por

|Φn(cid:105)AB = |β00(cid:105)c1
Ac1
B

···|β00(cid:105)cn
Acn
B

,

(80)

A e cm

onde os índices cm
Alice e Bob, respectivamente. O esquema do sistema é representado na Fig. 8.

B rotulam as partículas do m-ésimo par emaranhado que está em posse da
O estado inicial do sistema é portanto |φn (0)(cid:105) = |ψn(cid:105)A |Φn(cid:105)AB, e desejamos que o estado ﬁnal

do sistema seja |φn (1)(cid:105) = |Φn(cid:105)A |ψn(cid:105)B, onde

|Φn(cid:105)A = |β00(cid:105)1c1

A

···|β00(cid:105)ncn

A

,

(81)

41

Figura 8: Esquema ilustrando o estado ﬁnal e inicial do TQ adiabático de n q-bits. Cada setor
é composto por 3 q-bits. Inicialmente (t = 0) o estado a ser teleportado deve ser preparado nos
n da primeira ﬁla (sistema em vermelho) e o canal quântico recurso é dado por n pares de Bell
(sistema em azul). Ao ﬁnal do processo (t = τ) o estado |ψn(cid:105) foi teleportado para as partículas
do Bob.

e que representa o estado do canal "impresso"nas partículas da Alice ao ﬁnal da evolução e

(cid:88)

··· (cid:88)

k1={0,1}

kn={0,1}

|ψn(cid:105)B =

ak1···kn |k1 ··· kn(cid:105)c1

B···cn

B

,

(82)

que é o estado que dever ser teletransportano reproduzido nos n q-bits do Bob. Para realizar
essa tarefa nós propomos o Hamiltoniano que dirigirá o sistema como sendo

onde nós denotamos H j (s) =

onde

(cid:88)

Hk (s)

,

Hmult (s) =

(cid:16)⊗i= j−1

i=1 1i

k=1

(cid:17) ⊗ H j (s) ⊗(cid:16)⊗i=n

i= j+11i

(cid:17)

, com H j (s) dado da forma

H j (s) = ηi (s) H j
ini

+ η f (s) H j
ﬁn

,

(cid:19)

(cid:18)

Zc j

A

Zc j

B

+ Xc j

Xc j

B

(cid:19)

A

Z jZc j

A

+ X jXc j

A

1c j
B

(cid:18)
= −ω1 j
= −ω

H j
ini
H j
ﬁn

(83)

(84)

(85)

(86)

Isso indica que H j (s) é um Hamiltoniano que atua sobre o j-ésimo setor do sistema que esta
esquematizado na Fig. 8. Assim como no duplo TQ, cada setor deve evoluir independentemente
dos demais e portanto o TQ deve acontecer, desde que o gap mínimo entre o estado fundamental
de Hmult (s) e o primeiro excitado seja não nulo. Uma primeira observação a ser feita é que a
forma como Hmult (s) foi deﬁnido leva em conta que os estados |φn (0)(cid:105) e |φn (1)(cid:105) são estados
fundamentais de Hmult (0) e Hmult (1), respectivamente. Para determinar o gap mínimo, nós
usaremos um resultado um pouco mais geral do que o resultado que foi usado na seção anterior
[64]. Sejam n operadores Amk×mk, onde k = 1,··· , n e onde deixa-se livre que as dimensões

42

(cid:105). Então se um operador C puder ser escrito como CD×D = (cid:80)

de cada Amk×mk não sejam necessariamente iguais, e suas respectivas equações de autovalores
Amk×mk|ak
Amk×mk,
k=1mk, então a equação de autovalor para CD×D escreve C |cκ(cid:105) = cκ |cκ(cid:105), com os
onde D = Πn
(cid:105) formando o conjunto de autoestados de C com correspondentes
vetores |cκ(cid:105) = |a1

(cid:105) = ak

|ak

µk

µk

µk

k

autovalores cκ =(cid:80)

µ1

(cid:105)|a2
(cid:105)···|an
µ2
k ak
µk.

µn

Nós podemos, portanto, usar o teorema acima para calcular o espectro de Hmult (s) que, a
dependender do valor de n, pode ser um trabalho árduo. Mas como desejamos apenas o gap en-
tre o nível de energia fundamental e o primeiro excitado, facilmente calculamos e encontramos
que o gap de energia é dado por gT (s) = g (s), onde g (s) é o gap de energia do TQ de 1 q-bit.
Uma consequência imediata de tal resultado é que gTm´ın = mins∈[0,1] gT (s) (cid:44) 0.

Como nos casos anteriores, a degenerescência é a barreira que encontramos ao aﬁrmar que
o TQ acontece. Mas o uso das simetrias do Hamiltoniano Hmult (s) pode ser usado para nos
auxiliar e mostrar que o TQ, de fato, acontece. Cada setor que é dirigido independentemente
pelo Hamiltoniano Hk (s) possui duas simetrias, e podemos combinar todas elas para deﬁnir os
operadores de paridade total e inversão de paridade total dados, respectivamente, por

n(cid:79)
n(cid:79)

i=1

ΠzT =

ΠxT =

Πzi

Πxi

,

,

(87)

(88)

i=1

B

A

B

A

Zci

Xci

e Πxi = XiXci

onde Πzi = ZiZci
são os operadores paridade e inversão de paridade,
respectivamente, do setor i. O procedimento para mostrar que o TQ acontece é similar ao que foi
feito nos casos anteriores. Usam-se as simetrias do sistema como um todo e as simetrias de cada
setor individual para mostrar que existem conjuntos de paridade que evoluem independente dos
demais, assim os coeﬁcientes ak1···kn não devem se misturar. Usamos, também, a unitariedade
da evolução e assim podemos mostrar que o TQ deve acontecer. Depois de todo esse processo,
nós compararmos o estado inicial e ﬁnal aﬁm de veriﬁcar como os estados e coeﬁcientes se
relacionam no início e ﬁnal da evolução. Assim como nos casos anteriores, nós obtemos ao
ﬁnal do processo que o estado das partículas do Bob é o estado |ψn(cid:105) a menos de uma fase
global.

3.3.4 Portas quânticas de 1 q-bit via TQ

Um primeiro passo para mostrar que o TQ adiabático pode ser usado para realizar CQ universal
é mostrar que portas de 1 q-bit podem ser implementadas pelo modelo. Aqui nós discutiremos
detalhadamente como implementar portas de 1 q-bit via TQ adiabático. Relembrando que no
TQ de portas nós consideramos que ambas as partes, Alice e Bob, não tem poder computacional,
de modo que Charlie (um terceiro agente) deve fornecer os recursos necessários para que a tarefa
possa ser executada. Assim, antes de tudo, deixe-nos analisar o ponto inicial e ﬁnal do processo

43

para que possamos construir melhor o aparato teórico que nos permita realizar o que propomos.
Para que seja caracterizado o TQ de portas, Alice deve receber um estado |ψ(cid:105) e ao ﬁnal do
processo esse estado deve ser teleportado para a partícula do Bob, mas com a condição adicional
de que o estado da partícula do Bob deve ser U |ψ(cid:105), para algum unitário U de 1 q-bit. Desejando
realizar esse procedimento adiabaticamente, o Hamiltoniano ao ﬁnal do processo deve ser tal
que U |ψ(cid:105) seja um autoestado deste. O Hamiltoniano proposto para o TQ adiabático permite
isto, porém o segredo está no Hamiltoniano adiabático inicial. Antes de discutirmos como fazer
tal tarefa, deixe-nos mencionar a seguinte proposição [50].
Proposição 1 Seja A um operador que satisfaz a relação de autovalor A|an(cid:105) = an |an(cid:105). Então
dado um operador A (U) tal que A (U) = UAU†, para algum unitário U, nós temos que

A (U)|an (U)(cid:105) = an |an (U)(cid:105)
é a relação de autovalor para A (U), onde |an (U)(cid:105) = U |an(cid:105).

(89)

A proposição acima garante que se rodarmos, unitariamente por U, um Hamiltoniano H (t)
que governa a evolução do estado de um sistema dado |ψ (t)(cid:105), então nessa nova base o sistema
deve evoluir de forma que seu estado é U|ψ (t)(cid:105). Assim, para implementar portas de um q-bit
adiabaticamente nós deﬁnimos o Hamiltoniano

H (s, U) = UH (s) U†

,

(90)

onde denotamos U = 112U3, com U†U = 1123. Note que devido a forma de Hﬁn nós ainda
podemos escrever

H (s, U) = ηi (s) Hini (U) + η f (s) Hﬁn

(91)
onde Hini (U) = UHiniU†, e com Hini e Hﬁn sendo dados pelas Eqs. (34) e (35), respectivamente.
Portanto, mostra-se que o Hamiltoniano que implementará a porta U no estado |ψ(cid:105) ao ﬁnal do
processo é exatamente o Hamiltoniano do TQ rodado pela porta U.

,

O ponto crucial é que, devido a essa mudança, o estado inicial do sistema não mais será
|ψ(cid:105)1 |β00(cid:105)23, pois claramente vemos que |ψ(cid:105)1 |β00(cid:105)23 não é autoestado de Hini (U), pois da Propo-
sição 1 o autoestado fundamental de Hini (U) deve ser |ψ(cid:105)1 (12U3)|β00(cid:105)23. Como admitimos que
o Bob não deve ter poder computacional, isso signiﬁca que o estado recurso dado por Charlie
para para Alice e Bob é um estado de Bell rodado da forma |β00(cid:105)U = (12U3)|β00(cid:105). Além disso, a
Proposição 1 nos ajuda a concluir também que o espectro do Hamiltoniano H (s, U) é idêntico
ao espectro de H (s), consequentemente o gap mínimo de H (s, U) é não nulo, pois o gap de
H (s, U) é dado pela Eq. (40).

Considerando que o estado inicial do sistema é |ψ(cid:105)1 (12U3)|β00(cid:105)23, devemos mostrar agora
que o estado ao ﬁnal da evolução será dado por |β00(cid:105)12 U3 |ψ(cid:105)3. Como os Hamiltonianos H (s, U)
e H (s) compartilham de espectros idênticos, então H (s, U) também é duplamente degenerado,

44

assim novamente nós não podemos assegurar que o TQ acontece apenas usando o teorema
adiabático. Então deixe-nos repetir a análise das simetrias do Hamiltoniano adiabático.

As simetrias do Hamiltoniano e sua forma matricial Aqui as simetrias do Hamiltoniano
e sua forma matricial serão obtidas de forma mais direta fazendo, primeiramente, o uso da
seguinte proposição (veja Apêndice B).

Proposição 2 Sejam A e B operadores que satisfazem a relação de comutação [A, B] = 0.
Então dados os novos operadores A (U) e B (U) tais que A (U) = UAU† e B (U) = UBU†, para
algum unitário U, nós temos que [A (U) , B (U)] = 0.

Basicamente a proposição acima nos diz que se conhecemos as simetrias de um dado Hamil-
toniano H (s), então nós sempre podemos conhecer facilmente as simetrias de qualquer outro
Hamiltoniano H (s, U) = UH (s) U†, para qualquer unitário U. Nós já sabemos que H (s) possui
as simetrias Πz = ZZZ e Πx = XXX, portanto nós podemos usar a Proposição 2 para assegurar
que as simetrias de H (s, U) são Πz (U) = Z1Z2
. Conside-
rando um estado da base computacional |mnk(cid:105) que, como deﬁnimos, é autoestado do operador
paridade Πz, agora nós usamos a proposição 1 para deﬁnir a base computacional rodada dados
por

e Πx (U) = X1X2

U3X3U†

U3Z3U†

(cid:16)

(cid:17)

(cid:17)

(cid:16)

3

3

|mnk, U(cid:105) = |mn(cid:105)12 U3 |k(cid:105)3

,

de modo que são válidas as relações

Πz (U)|mnk, U(cid:105) = (−1)m+n+k |mnk, U(cid:105)
Πx (U)|mnk, U(cid:105) =

,

(cid:12)(cid:12)(cid:12) ¯m¯n¯k, U

(cid:69)

(92)

(93)
(94)

,

onde analogamente aos operadores Πz e Πx, nós temos Πz (U) e Πx (U) deﬁnidos como operado-
res de paridade e inversão de paridade na nova base rodada, respectivamente. Ainda mantemos
a notação |mnk, U(cid:105)+ e | ¯m¯n¯k, U(cid:105)− para estados de paridade +1 e −1, respectivamente, do opera-
dor Πz (U). A forma matricial de H (s, U) também pode ser estudada como ﬁzemos para obter a
forma matricial de H (s). Na nova base computacional rodada o Hamiltoniano é bloco diagonal
devido a simetria em Πz (U), assim como H (s) é na base computacional não rodada devido a
simetria em Πz. A simetria em Πx (U) pode ser usada também para garantir que essess blocos
que compõe H (s, U) são idênticos. Esses resultados também podem serem obtidos fazendo
uma outra forma de análise como segue.

Sejam hm(cid:48)n(cid:48)k(cid:48)

(s) e hm(cid:48)n(cid:48)k(cid:48)

mnk

(s, U) elementos de matrizes de H (s) na base computacional antiga
e H (s, U) na base nova, respectivamente. Então deixe-nos escrever os elementos de matriz de
H (s, U) na nova base como

mnk

hm(cid:48)n(cid:48)k(cid:48)

mnk

(s, U) = (cid:104)mnk, U|H (s, U)|m(cid:48)n(cid:48)k(cid:48)

, U(cid:105)

.

45

Usando que H (s, U) = UH (s) U†, |mnk, U(cid:105) = |mn(cid:105)12 U3 |k(cid:105)3 e que U é um unitário, obtemos

portanto

hm(cid:48)n(cid:48)k(cid:48)

mnk

(s, U) = (cid:104)mnk|H (s)|m(cid:48)n(cid:48)k(cid:48)(cid:105)

,

que nada mais são do que os elementos de matriz do Hamiltoniano H (s) na base computacio-
nal não rodada. Assim nós provamos que, na nova base rodada, o Hamiltoniano H (s, U) não
somente é bloco diagonal (como sugerem as simetrias Πz (U) e Πx (U)) como também tem a
mesma forma matricial que o Hamiltoniano toma quando determinado na base não rodada.

O estado ﬁnal Deixe-nos adotar o estado inicial do sistema como |ψ(cid:105)1 (12U3)|β00(cid:105)23 e o es-
tado ﬁnal escrito sob a forma |β00(cid:105)12 U3| ¯ψ(cid:105)3 onde escrevemos | ¯ψ(cid:105) = α (a, b)|0(cid:105) + β (a, b)|1(cid:105),
devido a degenerescência de H (s, U). Então, o estado inicial |φ (0, U)(cid:105) e ﬁnal |φ (1, U)(cid:105) são,
respectivamente, dados por

|φ (0, U)(cid:105) =
|φ (1, U)(cid:105) =

1√
2
1√
2

[a (|000, U(cid:105) + |011, U(cid:105)) + b (|100, U(cid:105) + |111, U3(cid:105))]123

(cid:2)α (a, b) (|000, U(cid:105) + |110, U(cid:105)) + β (a, b) (|001, U(cid:105) + |111, U(cid:105))(cid:3)

123 . (96)

,

(95)

A simetria em Πz (U) é a responsável por garantir que os coeﬁcientes que multiplicam esta-
dos de paridade distintas não se "misturam". As Eqs. (95) e (96) nos permite perceber que em
|φ (0, U)(cid:105) e |φ (1, U)(cid:105) os coeﬁcientes a (b) e α (a, b) (β (a, b)) multiplicam estados de paridade
+1 (−1) em Πz (U). Assim já escrevemos que α (a, b) = α (a) e β (a, b) = β (b). Como rota-
ções unitárias não alteram a norma de um estado e como a evolução é unitária, nós podemos
escrever |α (a)|2 + |β (b)|2 = |a|2 + |b|2, donde tiramos as reguintes igualdades α (a) = aeiθa e
β (b) = beiθb. Por ﬁm usamos a simetria em Πx (U) para garantir que os estados, indepedente da
paridade, evoluem de forma equivalente. Portanto nós escrevemos α (a) = aeiθ e β (b) = beiθ,
consequentemente o estado ﬁnal ﬁca da forma

|φ (1, U)(cid:105) =

eiθ√
2

[a (|000, U(cid:105) + |110, U(cid:105)) + b (|001, U(cid:105) + |111, U(cid:105))]123

,

(97)

onde ainda podemos usar que |mnk, U(cid:105) = |mn(cid:105)3 U3 |k(cid:105)3 para mostrar que o estado ﬁnal é, a
menos de uma fase global θ, dado por |β00(cid:105)12 U3 |ψ(cid:105)3. Em conclusão mostramos que portas
de 1 q-bit podem ser implementadas apenas fazendo uma "rotação"(transformação unitária) no
Hamiltoniano que depende da porta a ser implementada, onde um estado de Bell 12U3 |β00(cid:105)23
deve ser dado como recurso para Alice e Bob.

3.3.5 Portas quânticas de 2 q-bits via TQ

Para ﬁnalizar a demonstração de que o TQ pode ser usado para realizar computação universal,
nós precisamos mostrar que portas de 2 q-bits também podem ser implementadas. Para isso

46

nós combinamos o duplo TQ, visto na seção 3.3.2, com as Proposições 1 e 2. O nosso sistema
novamente será composto de 6 q-bits e é idêntico ao esquema apresentado no duplo TQ.

Primeiro deixe-nos deﬁnir o unitário Udup = 11234U56 que atuará sobre os q-bit físicos 5
e 6, que é onde desejamos aplicar a porta ao ﬁnal da computação. Então para que o sistema
termine no estado por |β00(cid:105)24 |β00(cid:105)13 U56 |ψ2(cid:105)56, com a porta U56 aplicada no estado |ψ2(cid:105)56, o
Hamiltoniano que deverá governar o sistema é

HD (s, U) = UdupHD (s) U†

dup ,

(98)

onde inicialmente o sistema deve ser rodado pela porta Udup de modo que o estado inicial seja
|ψ2(cid:105)12 (134U56)|β00(cid:105)46 |β00(cid:105)35. Em geral a porta Udup pode ser qualquer, desde uma porta con-
trolada (como a porta CNOT) ou o produto de duas unitárias que atuam nos q-bits físicos 5 e
6 independentemente (como uma porta qualquer A5B6, para unitários A e B). Essa é a nossa
primeira extensão do modelo do Bacon e Flammia, onde eles mostram a implementação apenas
da porta de fase-controlada [41].

Considerando que o estado inicial do sistema é |ψ2(cid:105)12 (134U56)|β00(cid:105)46 |β00(cid:105)35 e que o sistema
evolui adiabaticamente segundo o Hamiltoniano HD (s, U), o estado ﬁnal do sistema deverá
ser |β00(cid:105)24 |β00(cid:105)13 U56 |ψ2(cid:105)56. Como o Hamiltoniano HD (s, U) difere de HD (s) por uma trans-
formação unitária, novamente nos deparamos com um Hamiltoniano degenerado e devemos
novamente analisar com cuidado a evolução a ﬁm de ver como garantir que o estado ﬁnal real-
mente seja |β00(cid:105)24 |β00(cid:105)13 U56 |ψ2(cid:105)56. Vale mencionar que o gap mínimo de HD (s, U) é não nulo,
uma vez que o gap mínimo de HD (s) é não nulo.

As simetrias do Hamiltoniano e sua forma matricial Vimos que no duplo TQ nós temos
algumas simetrias que nos ajudaram a contornar o obstáculo imposto pela degenerescência do
Hamiltoniano. De forma análoga ao que foi feito no TQ de unitários de 1 q-bit, nós também
faremos uso da Proposição 2 para encontrar as simetrias do Hamiltoniano HD (s, U).

Das Eqs.

(62), (63), (65) e (66) e usando a Proposição 2, conclui-se facilmente que as

simetrias de HD (s, U) são

z (U) 1I = Z2Z4U56 (15Z6) U†
ΠP
z (U) = Z1Z3U56 (Z516) U†
1PΠI

56

56

, ΠP
, 1PΠI

x (U) 1I = X2X4U56 (15X6) U†
56 ,
z (U) = X1X3U56 (X516) U†
56 ,

para cada setor individualmente, e

z (U) = ΠP
ΠD
ΠD
x (U) = ΠP

z (U) ΠI
x (U) ΠI

z (U) = UdupZ2Z4Z6Z1Z3Z5U†
z (U) = UdupX2X4X6X1X3X5U†

dup ,
dup ,

(99)
(100)

(101)
(102)

para o sistema como um todo. Ao mudarmos de base nós não teremos mais os estados da base
computacional como autoestados dos novos operadores ΠD
x (U). Motivados por essa

z (U) e ΠD

47

mudança, nós deﬁnimos os novos estados da base computacional no sistema "rodado"como de-
notados por |n2n4n6(cid:105)|n1n3n5(cid:105) = Udup |n2n4n6(cid:105)|n1n3n5(cid:105), de forma que ainda mantém-se os dois
conjuntos de autoestados de paridades +1 e −1 do operador ΠD
z (U) denotados, respectivamente,
por {|n2n4n6(cid:105)± |n1n3n5(cid:105)±} e {|n2n4n6(cid:105)± |n1n3n5(cid:105)∓}, na nova base. Os elementos em negrito indi-
cam que, na nova base, os estados dos q-bits 5 e 6 são modiﬁcados de modo que podem ser
superposições dos estados da base original (não rodada). Devido a esse conjunto de simetrias
com ΠP
z (U) o Hamiltoniano HD (s, U) pode ser expresso na base computaci-
onal rodada na forma bloco diagonal. Por outro lado as simetrias em ΠP
x (U)
sugerem que, nesta nova base rodada, os blocos que compõem a diagonal do Hamiltoniano
HD (s, U) sejam idênticos.

x (U) e ΠD

z (U) e ΠD

z (U), ΠI

x (U), ΠI

Mais uma vez nós podemos determinar os elementos de matrizes de HD (s, U) na base com-
putacional rodada {|n2n4n6(cid:105)|n1n3n5(cid:105)} e mostrar que este tem a mesma forma matricial que HD (s)
quando escrito na base não rodada {|n2n4n6(cid:105)|n1n3n5(cid:105)}. Para isso, devemos usar que U é um uni-
tário que atua apenas sobre os q-bits 5 e 6. Portanto, desde que nós ordenemos adequadamente
a base, a forma matricial de HD (s, U) na nova base rodada é dada pela Eq. (69).

O estado ﬁnal Deixe-nos escrever o estado inicial do sistema como

|φ2 (0, U)(cid:105) = a1 |00(cid:105)12 |β00(cid:105)46 |β00(cid:105)35 + a2 |01(cid:105)12 |β00(cid:105)46 |β00(cid:105)35
+a3 |10(cid:105)12 |β00(cid:105)46 |β00(cid:105)35 + a4 |11(cid:105)12 |β00(cid:105)46 |β00(cid:105)35

,

,

onde |β00(cid:105)46 |β00(cid:105)35 = U56 |β00(cid:105)46 |β00(cid:105)35 e consequentemente

|β00(cid:105)46 |β00(cid:105)35 =

1
2

(|00(cid:105)|00(cid:105) + |00(cid:105)|11(cid:105) + |11(cid:105)|00(cid:105) + |11(cid:105)|11(cid:105))4635

.

Por outro lado, o estado ﬁnal é dado por

(cid:12)(cid:12)(cid:12) ¯φ2 (1, U)(cid:11) = α1 |β00(cid:105)24 |β00(cid:105)13 |00(cid:105)56 + α2 |β00(cid:105)24 |β00(cid:105)13 |01(cid:105)56

+α3 |β00(cid:105)24 |β00(cid:105)13 |10(cid:105)56 + α4 |β00(cid:105)24 |β00(cid:105)13 |11(cid:105)56

,

,

Como já sabemos, o estado |n2n4n6(cid:105)|n1n3n5(cid:105) tem a mesma paridade que |n2n4n6(cid:105)|n1n3n5(cid:105),
pois |n2n4n6(cid:105)|n1n3n5(cid:105) = Udup |n2n4n6(cid:105)|n1n3n5(cid:105). Assim, nós podemos novamente usar a compa-
ração entre |φ2 (0, U)(cid:105) e
estados de mesma paridade. Ainda podemos reescrever |φ2 (0, U)(cid:105) e
forma

(cid:12)(cid:12)(cid:12) ¯φ2 (1, U)(cid:11) para analisar como evoluem os coeﬁcientes que multiplicam
(cid:12)(cid:12)(cid:12) ¯φ2 (1, U)(cid:11) da seguinte

|φ2 (0, U)(cid:105) = a1 |++, U(cid:105)PI + a2 |−+, U(cid:105)PI + a3 |+−, U(cid:105)PI + a4 |−−, U(cid:105)PI

(cid:12)(cid:12)(cid:12) ¯φ2 (1, U)(cid:11) = α1 |++, U(cid:105)PI + α2 |−+, U(cid:105)PI + α3 |+−, U(cid:105)PI + α4 |−−, U(cid:105)PI

(103)
(104)
onde |xy, U(cid:105)PI = Udup |xy(cid:105)PI, com |xy(cid:105)PI = |x(cid:105)P |y(cid:105)I, onde |x(cid:105)P é uma superposição de estados

,

,

48

z (U), ΠI

z (U) e ΠD
n=1 |αn (an)|2 = Σ4

(cid:12)(cid:12)(cid:12) ¯φ2 (1, U)(cid:11) pode ser escrito apenas como αn = αn (an). A unitariedade

do setor par de paridade x e |y(cid:105)I uma superposição de estados do setor ímpar de paridade y.
Note que cada um dos coeﬁcientes ai de |φ2 (0, U)(cid:105) não se misturar durante a evolução, pois
nessa nova base as simetrias em ΠP
z (U) nos garantem que isso não acontece.
Assim, cada coeﬁciente
n=1 |an|2, cuja solução nos fornece as
da evolução que nos permite escrever Σ4
relações entre αn (an) e an dadas por αn (an) = aneiθn, para algum θn real. Já que cada parâ-
metro θn carrega a informação de como cada bloco de estados evoluem independentemente,
novamente entra o uso das simetrias que são as simetrias em ΠP
x (U).
Essas simetrias nessa nova base também nos diz que independente de como os estados |xy(cid:105)PI
evoluem, eles evoluem da mesma forma e consequentemente as fases θn’s são todas iguais.
Isso é o bastante para nos assegurarmos que o estado ﬁnal do sistema é exatamente dado por
|φ2 (1, U)(cid:105) = |β00(cid:105)24 |β00(cid:105)13 U56 |ψ2(cid:105)56.

x (U) 1I , 1PΠI

x (U) e ΠD

3.3.6 Portas quânticas de n q-bits via TQ

Com o objetivo de construir um modelo que nos permita realizar diferentes designers para a CQ
universal, nós mostraremos que o TQ adiabático também nos permite implementar portas de n
q-bits. Os casos com n = 1 e n = 2 já foram mostrados, aqui generalizaremos esses resultados.
Nós desejamos iniciar o sistema da Alice como sendo o estado |ψn(cid:105) dado na Eq. (79) e que
ao ﬁnal do processo esse estado seja enviado para o Bob com uma porta Un de n-qbits aplicada.
Isso é possível se nós iniciarmos nosso sistema no estado

e deixar o sistema evoluir segundo o Hamiltoniano

|φn (0, U)(cid:105) = |ψn(cid:105) Un |β00(cid:105)c1
1c1
2
(cid:88)

Hmult (s, U) = Un

···|β00(cid:105)cn
1cn
2

,

Hk (s) U†
n ,

(105)

(106)

k=1

onde H j (s) = [⊗ j−1
nós deixamos livre que a porta Un seja qualquer.

i=1 1i] ⊗ H j (s) ⊗ [⊗n

i= j+11i], com H j (s) sendo dado pela Eq. (84). Novamente

Como os Hamiltonianos Hmult (s) e Hmult (s, U) diferem por uma transformação unitária, isso
deve manter invariante o espectro de Hmult (s) e, portanto, Hmult (s, U) é degenerado. O gap de
energia de Hmult (s, U) é dado por gT (s) = g (s), onde g (s) é o gap de energia do TQ de 1 q-bit.
As simetrias nessa nova base são também rodadas de modo que as novas simetrias no caso

de portas de n q-bit são dadas por

ΠzT (U) = UnΠzT U†

n = Un

ΠxT (U) = UnΠxT U†

n = Un

49

n(cid:79)
n(cid:79)

i=1

i=1

ΠziU†
n ,

ΠxiU†
n ,

(107)

(108)

Xci

B

A

A

Zci

B

e Πxi = XiXci

onde Πzi = ZiZci
são os operadores paridade e inversão de paridade,
respectivamente, do setor i. Além das simetrias mostradas acima nós temos também as simetrias
de cada setor que são modiﬁcadas e dadas por Πzi (U) = UnΠziU†
n. Essas
simetrias podem ser usadas para mostrar que o estado ﬁnal do sistema será dado por |φn (1, U)(cid:105) =
|Φn(cid:105)A Un |ψn(cid:105)B a menos de uma fase global.

n e Πxi (U) = UnΠxiU†

Assim concluímos a nossa generalização do modelo apresentado por Bacon e Flammia.
Como esse modelo foi desenvolvido de modo a usar o TQ para implementar adiabaticamente
as portas, o número de q-bits requerido pelo modelo é de 3 q-bits para cada setor. Manipular
uma grande quantidade de q-bits nem sempre é fácil, mas desde que seja possível, nós temos
um modelo de computação adiabática para simular o modelo de circuitos.

50

4 Computação Quântica Universal por Evoluções Adiabáti-

cas Controladas.

Neste capítulo nós mostraremos um modelo alternativo ao modelo apesentado anteriormente
para implementar portas quânticas adiabaticamente. Na seção 4.1 nós discutiremos sobre evolu-
ções adiabáticas controladas (EAC) de forma genérica. Em seguinda, na seção 4.2, vamos apre-
sentar o modelo de computação que faz uso de EAC proposto recentemente por Itay Hen [42]
para implementar portas de 1 q-bit e portas controladas de 2 q-bits. Por ﬁm na seção 4.3 nós
apresentaremos uma extensão do modelo proposto em [42] mostrando como implementar portas
n-controladas.

4.1 Evoluções Adiabáticas Controladas (EAC)

Como em toda evolução adiabática, consideremos um estado inicial que seja autoestado fun-
damental de um Hamiltoniano Hini (independente do tempo). Usualmente, em evoluções adia-
báticas, deixa-se o sistema evoluir por um Hamiltoniano dependente do tempo H (s), que varia
muito lentamente, até atingir o estado ﬁnal que é autoestado fundamental de um Hamiltoniano
Hﬁn (independente do tempo).

O sistema que usaremos para realizar EAC é um sistema bipartido (SA) composto por um
subsistema alvo S e um subsistema auxiliar A. Para descrever a dinâmica do sistema SA, con-
sidere um Hamiltoniano Hini e o conjunto composto por k Hamiltonianos Hﬁn
k , todos indepen-
dentes do tempo, que atuam sobre o subsistema A. Então deﬁnimos o seguinte Hamiltoniano
adiabático

H (s) = f (s) 1 ⊗ Hini + g (s)

Pk ⊗ Hﬁn

(109)
que governará a dinâmica do sistema SA. As funções f (s) e g (s) são funções de interpolação
que satisfazem f (0) = g (1) = 1 e f (1) = g (0) = 0. Os operadores Pk formam um conjunto
completo de projetores ortogonais do espaço onde reside o subsistema S (isto é, vale a relação
PkPm = δmkPk ). Outra forma de escrever o Hamiltoniano H (s) é

,

k

(cid:88)

k

(cid:105)

f (s) Hini + g (s) Hﬁn
k

,

(110)

(cid:88)
Pk ⊗(cid:104)
onde usa-se que(cid:80)
o sistema é H (0) = 1⊗Hini e H (1) =(cid:80)

H (s) =

k

k Pk = 1. Vale notar que quando s = 0 e s = 1 o Hamiltoniano que atua sobre
k , respectivamente. Desde que o sistema evolua
adiabaticamente o estado do sistema evoluirá do estado |Ψ (0)(cid:105) = |ψ(cid:105)|a. f.ini(cid:105) (com |a. f.ini(cid:105) sendo
autoestado fundamental de Hini) para o estado ﬁnal |Ψ (1)(cid:105) onde
Pk |ψ(cid:105) ⊗ |kﬁn(cid:105) ,

k Pk⊗Hﬁn
(cid:88)

|Ψ (1)(cid:105) =

(111)

k

51

com |kﬁn(cid:105) sendo o autoestado fundamental do k-ésimo Hamiltoniano Hﬁn
k . O estado inicial |ψ(cid:105)
do subsistema S é um estado desconhecido, ao passo que cada autoestado |kﬁn(cid:105) do subsistema
A é conhecido. Nota-se que o estado |Ψ (1)(cid:105) caracteriza um estado emaranhado do sistema, de
modo que não podemos caracterizar totalmente o subsistema A em separado do subsistema S.
Suponha, portanto, que ao ﬁnal do processo realizamos uma medida sobre o subsistema
A, então é sabido que essa medida implicará no colapso do sistema SA para um estado que
depende do resultado da medida realizada sobre A. Dos postulados da Mecânica quântica
podemos mostrar que realizando uma medida, representada pelo conjunto de operadores de
medida Mk = |kﬁn(cid:105)(cid:104)kﬁn| associados aos resultados mk, sobre o subsistema A o estado do sistema
imediatamente colapsará para o estado

|Ψ (1)k−medido(cid:105) =

(1 ⊗ Mk)|Ψ (1)(cid:105)

√

pk

=

Pk |ψ(cid:105) ⊗ |kﬁn(cid:105)

√

pk

,

(112)

onde pk = (cid:104)Ψ (1)|Mk|Ψ (1)(cid:105) = (cid:104)ψ|Pk|ψ(cid:105) é a probabilidade de obtermos mk como resultado da
medida. Um resultado imediato dessa análise é que se o estado |ψ(cid:105) do subsistema S vive no
espaço projetado por algum projetor Pk, então Pl |ψ(cid:105) = δkl |ψ(cid:105) , como observado na Ref. [42].

4.2 Portas de 1 e 2 q-bits via EAC

Nesta seção nós usaremos os resultados analisados anteriormente para mostrar como imple-
mentar rotações de 1 q-bit e rotações controladas por 1 q-bit. Ao ﬁnal daremos exemplos que
ilustram a forma como devemos proceder ao usar EAC para realizar CQ universal.

4.2.1 Unitários de um 1 q-bit via EAC

Para mostrar como implementar portas (rotações) de 1 q-bit usando EAC, consideraremos o
sistema SA composto do subsistema alvo (S) e auxiliar (A) que são compostos por 1 q-bit,
cada. Como o nome sugere, o sistema alvo será o sistema no qual realizaremos a computação
e o sistema auxiliar é o sistema onde realizamos a medida. Assim o sistema S deve iniciar-se
sempre em um estado qualquer |ψ(cid:105) = a|0(cid:105) + b|1(cid:105), enquanto que o subsistema A pode iniciar no
estado que queiramos, onde usaremos que o estado inicial do sistema A é |0(cid:105). A razão pela qual
o subsistema S deve iniciar-se sempre em um estado qualquer, é que para realizar CQ universal
nós devemos ter um modelo capaz de implementar portas em estados desconhecidos.

Como uma porta quântica de 1 q-bit pode ser vista como uma rotação de um determinado
angulo φ em torno de uma direção ˆn, precisamos apenas mostrar como realizar essa rotação.
Assim, deixe-nos iniciar o sistema no estado input |ψinp(cid:105) = |ψ(cid:105)|0(cid:105). O Hamiltoniano que deve
agir sobre o sistema SA que nos permite implementar rotações de um angulo φ em torno de
uma direção arbitrária ˆn, na esfera de Bloch, sobre um q-bit é dado por

H (s) = Pˆn+ ⊗ H0 (s) + Pˆn− ⊗ Hφ (s)

,

(113)

52

onde H0 (s) e Hφ (s) podem ser obtidos de

Hξ (s) = −ω

cos[θ (s)]σz + sin[θ (s)]

(cid:110)

(cid:104)

(cid:105)(cid:111)

,

σx cos ξ + σy sin ξ

(114)

fazendo ξ = 0 e ξ = φ, respectivamente, onde θ (s) = θ0s, com s = t/T, T sendo o tempo total de
evolução e θ0 um parâmetro cujo signiﬁcado físico ﬁcará mais claro em seguida. Os projetores
Pˆn± são projetores ortogonais sobre o espaço de estados do sistema S e dados por Pˆn± = |ˆn±(cid:105)(cid:104)ˆn±|
com |ˆn+(cid:105) sendo um estado na esfera de Bloch que aponta na direção de um dado versor ˆn. Em

termos das matrizes de Pauli σi, com i = {x, y, z}, nós temos |ˆn±(cid:105)(cid:104)ˆn±| = 1/2(cid:0)1 ± ˆn · (cid:126)σ(cid:1), onde

(cid:126)σ = (σx, σy, σz).

Para garantir que o Hamiltoniano da Eq. (113) permite-nos realizar uma evolução adia-
bática, é necessário mostrar que o mesmo possui um gap não nulo de energia entre seus níveis
fundamental e primeiro excitado. Calculando o espectro (energias) En (s) de Hξ (s) nós obtemos
E± (s) = E± = ±ω, onde o estado |ψ(cid:105)|0(cid:105) é autoestado de H (0) com energia −ω. Logo temos
garantido que o gap é não nulo e independende dos parâmetros ξ e θ0 e das componentes vetor
ˆn.

Para estudarmos como se dá a evolução do sistema, deixe-nos escrever o estado inicial do
sistema S na base {|ˆn±(cid:105)} como |ψ(cid:105) = α|ˆn+(cid:105) + β|ˆn−(cid:105). Ao ﬁnal da evolução adiabática o estado
do sistema SA será um estado ﬁnal |Ψ (1)(cid:105) que é autoestado de H (1) com autovalor −ω e,
segundo a Eq. (111), é dado por

|Ψ (1)(cid:105) = Pˆn+ |ψ(cid:105) ⊗ |E0

0 (1)(cid:105) + Pˆn− |ψ(cid:105) ⊗ |E0

φ (1)(cid:105) ,

(115)
onde |E0
ξ (1)(cid:105) = cos (θ0/2)|0(cid:105) + eiξ sin (θ0/2)|1(cid:105) é autoestado fundamental de Hξ (1). Usando o
fato de que |ψ(cid:105) pode escrito como uma combinação linear de estados que residem no espaço
projetado pelos operadores Pˆn±, nós escrevemos
|Ψ (1)(cid:105) = α|ˆn+(cid:105) ⊗ |E0

0 (1)(cid:105) + β|ˆn−(cid:105) ⊗ |E0

φ (1)(cid:105) ,

(116)

ou equivalentemente

|Ψ (1)(cid:105) = cos

(cid:18) θ0

2

(cid:19)

(α|ˆn+(cid:105) + β|ˆn−(cid:105)) ⊗ |0(cid:105) + sin

(cid:19)(cid:16)
α|ˆn+(cid:105) + eiφβ|ˆn−(cid:105)(cid:17) ⊗ |1(cid:105) ,

(cid:18) θ0

2

(117)

onde vemos claramente que nos deparamos com um estado emaranhado. Note que se realizar-
mos uma medida sobre o sistema A usando o conjunto de medidas Mm = |m(cid:105)(cid:104)m|, onde |m(cid:105) é
um estado da base computacional, nós podemos obter como resultado |0(cid:105) com probabilidade
cos2 (θ0/2) ou |1(cid:105) com probabilidade sin2 (θ0/2).

Se encontrarmos o estado |0(cid:105) como resultado da nossa medida sobre o subsistema A, então
consequentemente o estado do subsistema S será exatamente o estado inicial |ψ(cid:105) = α|ˆn+(cid:105) +
β|ˆn−(cid:105), assim o estado do sistema SA ﬁca exatamente como no inicio da evolução e portanto

53

a computação falha. Isso pode ser visto diretamente do fato que |ψ(cid:105) = α|ˆn+(cid:105) + β|ˆn−(cid:105) nada
mais é do que o estado |ψ(cid:105) = a|0(cid:105) + b|1(cid:105) escrito na base {|ˆn±(cid:105)}. Por outro lado, se após a
medida o subsistema A colapsar para o estado |1(cid:105), então o subsistema S colapsará para o es-
tado |ψrod(cid:105) = α|ˆn+(cid:105) + eiφβ|ˆn−(cid:105), que é exatamente o resultado de uma rotação sobre o estado
|ψ(cid:105) = a|0(cid:105) + b|1(cid:105) de φ em torno de uma direção ˆn na esfera de Bloch. Nesse caso temos o
sucesso da computação. No caso onde o processo falha devemos realizar novamente a evolução
usando o mesmo Hamiltoniano (já que o estado que obtemos é exatamente o estado inicialmente
preparado). Assim, a probabilidade de falha do sistema, depois de j repetições, é cos2 j (θ0/2) o
que deve decrescer a medida que j cresce.

Com essa análise ﬁca evidente o signiﬁcado do parâmetro θ0 como um parâmetro de su-
cesso da computação. No limite θ0 → π podemos ver que a probabilidade de sucesso da
computação torna-se maior, pois sin2 (θ0/2) → 1. Considerar o valor θ0 = π torna a medida,
ao ﬁnal da evolução, sobre o subsistema A desnecessária, pois o estado ﬁnal do sistema SA é
|Ψ (1, θ0 = π)(cid:105) = |ψrod(cid:105) ⊗ |1(cid:105). Embora tenhamos conhecimento desse resultado, nós não tomare-
mos valores para o parâmetro θ0, exceto em casos excepcionais onde devemos atribuir valores
a este parâmetro.

4.2.2 Portas controladas por 1 q-bit via EAC

Para implementar portas controladas por 1 q-bit o esquema é ligeiramente diferente do que
vimos anteriormente para o caso de unitários (rotações) de 1 q-bit. Sabendo que portas de 1
q-bit controladas por 1 q-bit atuam num espaço de Hilbert de 2 q-bits, o nosso subsistema S
deverá ser composto por 2 q-bits físicos, os q-bits controle e alvo. Nós vamos considerar que
desejamos implementar uma rotação sobre o q-bit alvo quando o estado do controle for |1(cid:105).
Deixe-nos escrever o estado inicial do subsistema S como sendo o estado mais geral de dois
qbits dado por

|ψ2(cid:105) = a1 |00(cid:105) + a2 |01(cid:105) + a3 |10(cid:105) + a4 |11(cid:105) ,

(118)
i |ai|2 = 1 é nossa condição de normalização e onde denotamos |n(cid:105)con |m(cid:105)alv = |nm(cid:105), com
|n(cid:105)con e |m(cid:105)alv sendo os estados do q-bit de controle e alvo, respectivamente. Considerando que
a rotação será implementada no q-bit alvo, é conveniente escrever |ψ2(cid:105) na base {|mˆn±(cid:105)}, onde
m = {0, 1}. Fazendo isso, o estado |ψ2(cid:105) ﬁca escrito como

onde(cid:80)

|ψ2(cid:105) = α1 |0ˆn+(cid:105) + α2 |0ˆn−(cid:105) + α3 |1ˆn+(cid:105) + α4 |1ˆn−(cid:105) .

(119)
Novamente o subsistema A é inicializado no estado |0(cid:105), de modo que o estado inicial do
sistema seja |ψ2(cid:105)|0(cid:105). Para esse novo propósito, o Hamiltoniano que deverá governar o sistema é
dado por

Pmˆn+

54

|0ˆn−(cid:105)(cid:104)0ˆn−| +

(cid:88)

m

 ⊗ H0 (s) + P1ˆn− ⊗ Hφ (s)

H (s) =

,

(120)

com Pmˆn± = |mˆn±(cid:105)(cid:104)mˆn±|. Se notarmos que(cid:80)
H (s) =(cid:2)1 − P1ˆn−

de escrever o Hamiltoniano acima é

(cid:80)
(cid:3) ⊗ H0 (s) + P1ˆn− ⊗ Hφ (s)

ν Pmˆnν

m

= 1, onde ν = {±}, uma forma alternativa

.

(121)

0 (1)(cid:105) + α4 |1ˆn−(cid:105) ⊗ |E0
(cid:18) θ0

(cid:19)|ψrod

2 (cid:105) ⊗ |1(cid:105) ,

Essa forma de escrever o Hamiltoniano será conveniente mais a frente. Assim, desde que
o sistema evolua adiabaticamente, garantimos que o estado ﬁnal do Hamiltoniano pode ser
determinado com ajuda da Eq. (111) e é dado por

|Ψ2 (1)(cid:105) = (α1 |0ˆn+(cid:105) + α2 |0ˆn−(cid:105) + α3 |1ˆn+(cid:105)) ⊗ |E0

φ (1)(cid:105) ,

(122)

ou equivalentemente

(cid:18) θ0

(cid:19)|ψ2(cid:105) ⊗ |0(cid:105) + sin

|Ψ2 (1)(cid:105) = cos

2

(123)
2 (cid:105) = α1 |0ˆn+(cid:105) + α2 |0ˆn−(cid:105) + α3 |1ˆn+(cid:105) + eiφα4 |1ˆn−(cid:105) é exatamente o estado |ψ2(cid:105) depois de
onde |ψrod
uma rotação controlada de φ em torno de uma direção ˆn. Finalizada a evolução, ao realizarmos
a medida novamente sobre o subsistema S teremos uma probabilidade sin2 (θ0/2) de obtermos
o estado computado.

2

Embora nossa discussão tenha sido feita considerando que o registro de ativação da porta
controlada seja o estado |1(cid:105) do q-bit controle, isso não é uma exigência necessária. Qualquer
porta controlada que atua quando o estado do q-bit controle for |0(cid:105) também é realizável pelo
modelo. Para isso, basta fazer a troca P1ˆn− → P0ˆn− no Hamiltoniano da Eq. (121) e deixar o
sistema evoluir segundo esse novo Hamiltoniano, de modo que nenhuma mudança no estado
inicial do sistema é necessária.

4.2.3 Portas Universais via EAC

É sabido que existem conjuntos de portas quânticas que são universais para a CQ [10]. Exem-
plos são os conjuntos universais {CNOT + Rotações de 1 q-bit} e {CNOT + H + porta π
8}. Já
vimos que qualquer rotação de 1 q-bit pode ser implementado pelo modelo. Assim, só nos resta
discutir como implementar a porta CNOT para que tenhamos um conjunto universal que pode
ser simulado pelo modelo.

O papel da porta CNOT é "ﬂipar"(inverter) o estado do q-bit alvo de |n(cid:105) → |1 − n(cid:105) quando
o estado do q-bit controle for |1(cid:105). Notando-se que a ação |n(cid:105) → |1 − n(cid:105) pode ser vista como
uma rotação de um angulo π em torno da direção |+(cid:105) na esfera de Bloch, então identiﬁcamos o
conjunto {|ˆn±(cid:105) , φ} = {|±(cid:105) , π}.

Para mostrar que a escolha {|ˆn±(cid:105) , φ} = {|±(cid:105) , π} nos permite implementar uma CNOT no
(118), na base

subsistema S deixe-nos escrever o estado inicial do sistema, dado pela Eq.

55

{|+(cid:105) ,|−(cid:105)} como

√
2, α2 = (a1 − a2) /

(124)
√
2 e α4 = (a3 − a4) /
onde deﬁnimos α1 = (a1 + a2) /
2.
Realizando a computação deixando o sistema evoluir adiabaticamente segundo o Hamiltoniano
da Eq. (121) nós obtemos, no limite θ0 → π, um estado |ψrod

|ψ2(cid:105) = α1 |0+(cid:105) + α2 |0−(cid:105) + α3 |1+(cid:105) + α4 |1−(cid:105) ,
√
2, α3 = (a3 + a4) /
2 (cid:105) dado por
|ψrod
2 (cid:105) = α1 |0+(cid:105) + α2 |0−(cid:105) + α3 |1+(cid:105) − α4 |1−(cid:105) ,

(125)

√

que na base computacional pode ser escrito como

O que mostra que |ψrod

|ψrod
2 (cid:105) = a1 |00(cid:105) + a2 |01(cid:105) + a3 |11(cid:105) + a4 |10(cid:105) .
(126)
2 (cid:105) = CNOT|ψ2(cid:105). Assim, temos ilustrado que a escolha do conjunto
{|+(cid:105) ,|−(cid:105) , π} é conveniente para implementarmos a porta CNOT via EAC. Esse mesmo con-
junto é usado para implementar a porta NOT de 1 q-bit. Outro exemplo de porta que pode
ser implementada adiabáticamente por este modelo, também mencionado em [42], é a porta
Hadamard. Para implementar a porta Hadamard a escolha do conjunto {|ˆn±(cid:105) , φ} é diferente da
escolha feita para a porta CNOT. Dessa vez o conjunto deve ser {|ˆn±(cid:105), φ} =
, onde
|±y(cid:105) = (|0(cid:105) ± i|1(cid:105)) /

(cid:110)|±y(cid:105), π/2

(cid:111)

√

2.

4.3 Portas controladas por n-q-bits via EAC

Nesta seção nós mostramos uma generalização do modelo apresentado anteriormente. Vimos
que usando EAC nós podemos realizar CQ universal usando classes de conjuntos universais de
portas compostos por portas de 1 q-bit e portas controladas. Mostraremos agora como estender
esse modelo de modo que outras classes de portas universais possam ser usadas para a com-
putação. A ideia é mostrar que, usando EAC, podemos implementar portas controladas por n
q-bits. Para isso, deixe-nos deﬁnir os novos subsistema S e A.

Análogo aos casos anteriores, o nosso subsistema A será composto pelo único q-bit auxi-
liar que é inicializado no estado |0(cid:105) e, ao ﬁnal do processo, a medida também é feita sobre o
subsistema A. Por outro lado, o subsistema S é formado pelos (n + 1) q-bits sobre os quais
realizaremos a computação. Desses (n + 1) q-bits nós deﬁniremos os n primeiros q-bits como
sendo os q-bits controle, e o (n + 1)-ésimo será o q-bit alvo. Nosso modelo não se restrige a
essa única conﬁguração, permitindo assim qualquer permutação dos q-bits controle e alvo. As-
sumiremos, também, que a porta controlada apenas atuará quando o estado dos q-bits controle
for |1··· 1(cid:105), nos demais casos nada é feito sobre o estado do q-bit alvo. Assim como a esco-
lha dos q-bits controle e alvo, a escolha da condição sobre os q-bits controle para que a porta
atue também é arbitrária, permitindo implementar qualquer porta controlada que atue quando o
estado dos q-bits controle for | j1 ··· jn(cid:105), para algum conjunto de valores { jn}, por exemplo.

Iniciamos nosso processo considerando o estado mais geral possível de (n + 1) q-bits dado

56

(cid:88)

···(cid:88)

por

|ψn(cid:105) =

am1···mn+1 |m1 ··· mn(cid:105)|mn+1(cid:105) ,

m1

(127)
onde denotamos |m1 ··· mn(cid:105) como sendo o estado dos n primeiros q-bits, |mn+1(cid:105) como o estado
do (n + 1)-ésimo q-bit e cada mk = {0, 1}. Por questão de notação, é conveniente escrever o
estado dos n primeiros q-bits na forma decimal usando que um número inteiro N = 2n − 1
pode ser expresso, na forma binária, como Nbin = an ··· a0 onde os coeﬁcientes an’s satisfazem

mn+1

k=0 ak2n−1−k. Assim, podemos fazer a mudança

(cid:88)

···(cid:88)

am1···mn+1 |m1 ··· mn(cid:105)|mn+1(cid:105) → N−1(cid:88)

(cid:88)

akmn+1 |k(cid:105)|mn+1(cid:105) ,

(128)

N =(cid:80)n−1

m1

mn+1

k=0

mn+1

portanto o estado inicial do sistema SA é dado por

|Ψn (0)(cid:105) =

akmn+1 |k(cid:105)|mn+1(cid:105)|0(cid:105) ,

(129)

N−1(cid:88)

(cid:88)

k=0

mn+1

N−1(cid:88)

(cid:88)

k=0

µ

onde o estado |0(cid:105) é o estado inicial do subsistema A. Novamente, antes de iniciarmos nossa
análise da evolução do sistema, faz-se conveniente escrever o estado do q-bit alvo na base {|ˆn±(cid:105)}
de modo que obtemos

|Ψn (0)(cid:105) =

αkµ |k(cid:105)|ˆnµ(cid:105)|0(cid:105) ,

(130)

com µ = {±}. Assim, nós deixamos o sistema evoluir segundo o Hamiltoniano

H (s) =(cid:2)1 − PN−1,ˆn−

(cid:3) ⊗ H0 (s) + PN−1,ˆn− ⊗ Hφ (s)

(cid:80)

(131)
1 = (cid:80)N−1
onde Pk,ˆn± = |kˆn±(cid:105)(cid:104)kˆn±|, com k = {1,··· , N − 1}, é um projetor sobre o subsistema S e onde
µ Pk,ˆnµ. A forma do Hamiltoniano na Eq. (131) é devido a escolha feita no início
dessa seção acerca do subsistema composto pelos q-bits controle e alvo e a forma como a porta
controlada deve atuar.

k=0

,

Se desejamos mudar a conﬁguração, onde trocamos o estado dos q-bits controle que ativa a
porta controlada, então a forma como arranjamos os projetores Pk,ˆnµ deve mudar. Por exemplo,
se uma dada porta controlada atua quando o estado dos q-bits de controle for |l(cid:105), então devemos
fazer a troca PN−1,ˆn− → Pl,ˆn− no Hamiltoniano da Eq. (131). Portanto, adotar o Hamiltoni-
ano como na Eq. (131) para o desenvolvimento dos resultados não causa nenhuma perda de
generalidade do nosso modelo.

Permitindo que o sistema evolua segundo o Hamiltoniano presente na Eq. (131), o estado

ﬁnal do sistema será, pela Eq. (111), dado por

|Ψn (1)(cid:105) =(cid:2)(cid:0)1 − PN−1,ˆn−

(cid:1)|ψn(cid:105)(cid:3) ⊗ |E0

0 (1)(cid:105) + PN−1,ˆn− |ψn(cid:105) ⊗ |E0

φ (1)(cid:105) ,

57

desenvolvendo a equação acima nós ainda podemos escrever

onde |ψn(cid:105) =(cid:80)N−1

k=0

(cid:18) θ0

(cid:19)|ψn(cid:105)|0(cid:105) + sin

(cid:18) θ0

(cid:19)|ψrod

2

n (cid:105)|1(cid:105) ,
|Ψn (1)(cid:105) = cos
(cid:80)
ˆnµ αkµ |k(cid:105)|ˆnµ(cid:105) é exatamente o estado de entrada e |ψrod
(cid:88)
N−2(cid:88)

2

(132)

n (cid:105) é dado por

|ψrod
n (cid:105) =

αkµ |k(cid:105)|ˆnµ(cid:105) + αN−1ˆn+ |N − 1(cid:105)|ˆn+(cid:105) + eiφαN−1ˆn− |N − 1(cid:105)|ˆn−(cid:105) ,

(133)

onde os dois ultimos termos podem ser escritos como |N − 1(cid:105)(cid:16)

k=0

µ

αN−1ˆn+ |ˆn+(cid:105) + eiφαN−1ˆn− |ˆn−(cid:105)(cid:17)

que
representa justamente a atuação da porta controlada sobre o q-bit alvo, já que o estado |N − 1(cid:105)
na representação binária corresponde exatamente ao estado |1··· 1(cid:105). O sucesso da computação
novamente depende especialmente do parâmetro θ0, onde o limite θ0 → π é mais uma vez o
limite de máxima probabilidade de sucesso.

Como mencionamos, nosso modelo pode ser usado para outras formas de realizar computa-
ção usando outros conjuntos de portas universais. Para exempliﬁcar a utilidade desse modelo.
Primeiro, devemos lembrar que a porta Toﬀoli juntamente com Hadamard são universais para
computação quântica [65]. Com esse intuito, a porta Toﬀoli pode ser implementada pelo nosso
modelo usando a mesma escolha do conjunto {|ˆn+(cid:105) ,|ˆn−(cid:105) , φ} que foi adotado para implementar
a porta NOT e CNOT. Em adição, para simular CQ universal nós ainda precisamos implemen-
tar a porta Hadamard, que pode ser feito escolhendo o conjunto {|ˆn±(cid:105) , φ} =
, onde
|±y(cid:105) = (|0(cid:105) ± i|1(cid:105)) /

(cid:110)|±y(cid:105), π/2
(cid:111)

√

2.

4.4 Computação Adiabática Probabilística

Visto que o parâmetro θ0 é responsável pelo grau de ﬁdelidade da computação, surge a pergunta:
Em média, abrir mão da máxima ﬁdelidade de computação seria energeticamente mais vanta-
joso? Aqui tentaremos responder a essa pergunta analisando a realização de CQ Adiabática
probabilística por evoluções controladas.

Para tal, deixe-nos deﬁnir o custo energético em uma evolução de um sistema quântico como

a medida de energia dada por [66, 67]

Σ (τ) =

1
τ

(cid:90) τ

0

(cid:107)H (t)(cid:107) dt .

(134)

(cid:112)

Para determinar a quantidade (cid:107)H (t)(cid:107) nós usamos a norma de Hilbert-Schmidt (cid:107)A(cid:107) =

Tr[A†A].

Calculando o custo energético para o Hamiltoniano que implementa rotações controladas por n
q-bits dado na Eq. (131) nós obtemos que ΣAd (n) =
= 2ω é o custo
energético para implementar portas de 1 q-bit.

√
23(n−1)nΣsing

Ad , onde Σsing

Ad

A computação probabilística é consequência de escolhermos diferentes valores para o parâ-
metro θ0. Da Eq. (117) percebe-se que a probabilidade de sucesso da computação é sin2 (θ0/2),

58

logo em média precisamos de (cid:104)N(cid:105) = 1/ sin2 (θ0/2) de repetições do protocolo para que tenha-
mos sucesso na computação. Sem perda de generalidade, uma vez que o custo energético para
implmentar portas de n q-bits é proporcional ao custo para implementar portas de 1 q-bit, deixe
nos deﬁnir a média do custo energético requerido para realizar a computação probabilística
como

Ad (θ0) = (cid:104)N(cid:105) Σsing
Σprob

Ad

= cos sec2 (θ0/2) Σsing
Ad

Note que no limite θ0 → π nós temos exatamente Σprob

.
(135)
Ad , mas no limite θ0 → 0
Ad (θ0) = Σsing
Ad (θ0) → ∞. Esse último resultado é explicado pelo fato de que quando temos θ0 → 0
temos Σprob
a probabilidade de sucesso vai a zero. Mas o que queremos é saber para quais valores de θ0 nós
temos o valor ótimo de Σprob
Ad para algum θ0?
Fazendo o estudo da criticidade da função Σprob

Ad (θ0). Será que podemos obter um Σprob
Ad (θ0) nós obtemos que

Ad (θ0) < Σsing

(cid:18) θ0

(cid:19)

2

sin (θ0)

.

(136)

dΣprob
Ad (θ0)
dθ0

= Σsing
Ad

d cos sec2 (θ0/2)

dθ0

= −1
2

Σsing
Ad cos sec2

Assim, os pontos críticos de Σprob

Ad (θ0) ocorrem quando

dΣprob
Ad (θ0)
dθ0

= 0 ,

ou equivalentemente sin (θ0) = 0, já que cos sec (θ0/2) (cid:44) 0 no intervalo 0 < θ0 ≤ π. Assim, o
único ponto crítico da função Σprob
Ad (θ0) é exatamente θ0 = π, mostrando que não existe nenhum
valor de θ0 tal que Σprob
Ad (θ0) < Σsing
Ad . A introdução do conceito de computação adiabática pro-
babilística por EAC não nos dá nenhuma vantagem em termos de custo energético com relação
a computação determinística (onde consideramos θ0 = π), porém o conceito de computação
probabilística se fará vantajoso mais a frente quando analisarmos a computação superadiabática
probabilística.

59

Parte II
Computação Quântica Superadiabática

Agora nesta parte nós passaremos a discutir detalhadamente o que vem a ser o coração da nossa
pesquisa e, consequentemente, desta dissertação. Todos os resultados aqui apresentados foram
discutidos e publicados de acordo com as referências [43, 44].

Incialmente nós faremos, no capítulo 5, um breve resumo acerca dos principais resultados
sobre atalhos para adiabaticidade. Na seção 5.1 nós derivaremos, de forma genérica, os cha-
mados Hamiltonianos contra-diabáticos que são os elementos fundamentais quando desejamos
remover o vínculo temporal de uma evolução adiabática. Já na seção 5.2 nós nos dedicamos
a responder uma pergunta cuja resposta seguia sem uma demonstração formal desde o desen-
volvimento de atalhos para adiabaticidade via Hamiltonianos contra-diabáticos. Tal questão diz
respeito ao tempo total de evolução em evoluções superadiabáticas: Como poderemos estimar
o tempo de evolução superadiabática, uma vez que tal evolução não carrega nenhum vínculo
temporal? Para isso nós mostramos que essa questão é satisfatoriamente respondida fazendo
uso de limites para o tempo de evolução em sistemas quânticos e a análise do custo energético,
ambos para sistemas fechados, caracterizando um estudo da complementaridade energia-tempo
em evoluções superadiabáticas.

No capítulo 6 nós derivamos o atalho para o TQ adiabático e mostramos em seguida, com
ajuda de dois teoremas, que o TQ superadiabático é um primitivo para CQ universal superadia-
bática. Para tanto, mostramos que é possível, com o TQ superadiabático, implementar qualquer
conjunto universal de portas quânticas. Em seguida nós mostramos que o método pode ser es-
tendendido para implementar o TQ superadiabático de portas de n q-bits. Encerramos a seção
com a análise do custo energético para implementar portas de n q-bits que, onde nossa análise
é discutida numericamente para algumas interpolações especíﬁcas.

No capítulo 7 nós propomos o uso de atalhos para adiabaticidade via Hamiltonianos contra-
diabáticos para realizar CQ universal. Para tal, derivamos um atalho para EAC de forma gené-
rica na seção 7.1 e nas seções seguintes aplicamos os resultados para mostrar como evoluções
superadiabáticas controladas (ESC) podem ser usadas para realizar CQ universal, e assim ob-
tendo um modelo híbrido de CQ universal superadiabática. Um dos resultados mais signiﬁcan-
tes da referida seção, é que mostramos que, independente da porta que desejamos implementar
pelo modelo, isso sempre pode ser feito com a adição de um Hamiltoniano contra-diabático in-
dependente do tempo. O estudo da complementaridade energia-tempo para o modelo proposto
será de grande utilidade para podermos analisar a performance de tal modelo. Na seção 7.4
nós ﬁnalizamos com um estudo da QC probabilística, onde a computação ocorre apenas com
certa probabilidade p < 1, baseada em ESC. Como resultado mostramos que, em média, exis-
tem situações onde energeticamente é mais vantajoso realizarmos QC probabilística e não a CQ
deterministica, onde a computação ocorre com ﬁdelidade 1.

60

5 Atalho para Adiabaticidade

Na Parte I desta dissertação vimos que evoluções adiabáticas nos permite simular circuitos
quânticos, desde que um Hamiltoniano adiabático seja construído para tal ﬁnalidade. Além
disso, podemos mostrar que qualquer porta quântica pode ser implementada adiabaticamente,
seja via TQ ou evoluções controladas. Porém, independente do modelo usado para realizar tal
tarefa, existe um vínculo que deve ser respeitado na implementação individual de cada porta de
um circuito. Como sabemos, o tempo necessário para implementar uma porta é estabelecido
pelas condições de validade do teorema adiabático. Assim poderíamos nos perguntar: Existiria
alguma maneira de imitar uma evolução adiabática, mas de forma que o vínculo temporal
possa ser removido?

A resposta a essa pergunta é positiva e o método de como fazer isso foi proposto por De-
mirplak e Rice [37, 38], posteriormente também estudado por Berry [39]. Neste capítulo nós
introduziremos o método proposto por Demirplak e Rice que faz uso dos chamados Hamiltoni-
anos contra-diabáticos .

5.1 O Hamiltoniano contra-diabático

Como ponto de partida, considere a equação de Schrödinger
H (t)|ψ0 (t)(cid:105) = i| ˙ψ0 (t)(cid:105) ,

para um Hamiltoniano dependente do tempo H (t). O elemento básico usado para derivar um
atalho para adiabaticidade é um operador U (t) que é usado para rodar a equação acima de forma
a obter uma boa aproximação adiabática. Uma deﬁnição conveniente para o operador U (t) é

(cid:88)

0 εn(t(cid:48))dt(cid:48)+(cid:82) t
(cid:82) t

e− i



U (t) =

0(cid:104) ˙En(t)|En(t)(cid:105)dt(cid:48) |En (t)(cid:105)(cid:104)En (0)|

,

(137)

n

onde |En (t)(cid:105) é o n-ésimo autoestado do Hamiltoniano com autoenergia εn (t). Essa deﬁnição é
boa, pois dessa forma o operador U (t) pode ser identiﬁcado como sendo um operador evolução
que nos fornece uma evolução adiabática. De fato, seja o estado inicial do sistema |ψ0 (0)(cid:105) =
|Ek (0)(cid:105), onde |Ek (0)(cid:105) é autoestado de H0 (0), então
0 εk(t(cid:48))dt(cid:48)+(cid:82) t
(cid:82) t

0(cid:104) ˙Ek(t)|Ek(t)(cid:105)dt(cid:48) |Ek (t)(cid:105) ,

(138)

U (t)|ψ0 (0)(cid:105) = e− i



que nada mais é do que a solução adiabática.

A maneira de determinar como realizar o atalho via Hamiltonianos contra-diabáticos é supor
que existe um termo HCD que, quando adicionado ao Hamiltoniano H (t), nos forneça uma

61

solução |ψ0 (t)(cid:105) = U (t)|ψ0 (0)(cid:105). Então, deixe-nos deﬁnir o novo Hamiltoniano

HSA (t) = H (t) + HCD (t)

,

(139)

chamado Hamiltoniano superadiabático, onde o termo somado ao Hamiltoniano original é cha-
mado de Hamiltoniano contra-diabático ou termo contra-diabático. Assim, deixamos o sistema
evoluir segundo a equação

HSA (t)|ψ0 (t)(cid:105) = i| ˙ψ0 (t)(cid:105) .

(140)

Rodando a equação acima pelo operador unitário U (t), obtemos

U† (t) HSA (t) U (t) U† (t)|ψ0 (t)(cid:105) = iU† (t)| ˙ψ0 (t)(cid:105) ,

onde usamos que U (t) U† (t) = 1. Agora note que usando U† (t)| ˙ψ0 (t)(cid:105) = | ˙ψ1 (t)(cid:105)− ˙U† (t)|ψ0 (t)(cid:105),
onde |ψ1 (t)(cid:105) = U† (t)|ψ0 (t)(cid:105), na equação acima ﬁcamos com

mos

A ﬁm de obter uma equação para | ˙ψ1 (t)(cid:105), usamos novamente a unitariedade U (t) e escreve-

U† (t) HSA (t) U (t) U† (t)|ψ0 (t)(cid:105) = i[| ˙ψ1 (t)(cid:105) − ˙U† (t)|ψ0 (t)(cid:105)] .
(cid:104)

(cid:105)|ψ1 (t)(cid:105) = i| ˙ψ1 (t)(cid:105) .

U† (t) HSA (t) U (t) + i ˙U† (t) U (t)

(141)
O objetivo é mostrar que existe um HCD (t) de modo que a solução para |ψ0 (t)(cid:105) seja exata-
mente a solução adiabática. Para isso, notamos que U (0) = 1, consequentemente |ψ1 (0)(cid:105) =
|ψ0 (0)(cid:105), de modo que a deﬁnição |ψ1 (t)(cid:105) = U† (t)|ψ0 (t)(cid:105) sugere que se | ˙ψ1 (t)(cid:105) = 0, então
|ψ1 (t)(cid:105) = |ψ1 (0)(cid:105) = |ψ0 (0)(cid:105). Portanto temos que

|ψ0 (t)(cid:105) = U (t)|ψ1 (t)(cid:105) = U (t)|ψ0 (0)(cid:105) ,

(142)

e considerando que o sistema inicialmente é preparado em um autoestado especíﬁco do Hamil-
toniano H (t), então temos Eq. (138) como solução.

Assim, se ﬁzermos tal imposição sobre |ψ1 (t)(cid:105), a Eq. (141) nos fornece

HSA (t) = −iU (t) ˙U† (t)

.

(143)

Derivando U† (t) encontramos

˙U† (t) =

 εn(t) + (cid:104)En (t)| ˙En (t)(cid:105)(cid:19)
(cid:18) i
(cid:88)
(cid:88)
(cid:82) t
0 εn(t(cid:48))dt(cid:48)+(cid:82) t

0 εn(t(cid:48))dt(cid:48)+(cid:82) t
(cid:82) t
0(cid:104)En(t)| ˙En(t)(cid:105)dt(cid:48) |En (0)(cid:105)(cid:104) ˙En (t)|

e i

+

e i



n



,

0(cid:104)En(t)| ˙En(t)(cid:105)dt(cid:48) |En (0)(cid:105)(cid:104)En (t)|

n

62

portanto temos

U (t) ˙U† (t) =

(cid:88)

n

|En (t)(cid:105)(cid:104) ˙En (t)| +

Substituido o resultado acima na Eq. (143) obtemos que

(cid:88)

n

(cid:88)

 εn(t) + (cid:104)En (t)| ˙En (t)(cid:105)(cid:19)|En (t)(cid:105)(cid:104)En (t)|
(cid:18) i
(cid:16)| ˙En (t)(cid:105)(cid:104)En (t)| + (cid:104) ˙En (t)|En (t)(cid:105)|En (t)(cid:105)(cid:104)En (t)|(cid:17)
| ˙En (t)(cid:105)(cid:104)En (t)| = −(cid:88)
(cid:88)
(cid:16)| ˙En (t)(cid:105)(cid:104)En (t)| + (cid:104) ˙En (t)|En (t)(cid:105)|En (t)(cid:105)(cid:104)En (t)|(cid:17)

|En (t)(cid:105)(cid:104) ˙En (t)|

,

n

(cid:88)

n

.

(144)

,

(145)

(146)

(147)

n εn(t)|En (t)(cid:105)(cid:104)En (t)| = H (t), que (cid:104) ˙En (t)|En (t)(cid:105) = −(cid:104)En (t)| ˙En (t)(cid:105) e que

HSA (t) = H (t) + i

n

onde usamos que(cid:80)
devido a(cid:80)

que

HCD (t) = i

n |En (t)(cid:105)(cid:104)En (t)| = 1. Portanto, comparando a Eq. (145) com a Eq. (139) concluímos

n

deve ser o Hamiltoniano contra-diabático que será adicionado ao Hamiltoniano H0 (t) que nos
permite imitar uma evolução adiabática. Em momento algum precisamos submeter o tempo de
evolução do sistema, de modo que nessa teoria não há vínculo sobre o mesmo.

5.2 Complementaridade Energia-Tempo em Evoluções Superadiabáticas

Ao removermos o vínculo temporal em evoluções adiabáticas usando atalhos para adiabati-
cidade, deixamos que agora o sistema evolua sem qualquer restrição sobre o tempo total de
evolução. Além disso, acredita-se que usando atalhos para adiabaticidade nós podemos imitar
a evolução adiabática em intervalos de tempo arbitrariamente pequenos.

Mas como podemos garantir isso? Existiria um limite inferior para o quão rápido a evolução
superadiabática pode ocorrer? Se sim, quem é responsável por moderar o tempo de evolução
do sistema?

Diante dessas questões somos motivados a analisar a complementaridade energia-tempo em
evoluções superadiabáticas. Esse estudo é feito aqui mediante a análise de limites para o tempo
de evolução em sistemas quânticos em conjunto com uma deﬁnição de custo energético.

5.2.1 O tempo total de evolução

Limites de velocidade quântica (QSL do inglês quantum speed limit) em evoluções de siste-
mas quânticos surgiram da investigação do tempo mínimo requerido para um sistema quântico,
governado por um Hamiltoniano H, evoluir de um estado |ψ(cid:105) até um estado |ψ⊥(cid:105) ortogonal
ao estado |ψ(cid:105) ((cid:104)ψ|ψ⊥(cid:105) = 0) [68]. Outros resultados mais gerais para sistemas governados por
Hamiltonianos independentes do tempo também foram propostos [69, 70].

63

Aqui nós adotaremos o bound mais geral possível para sistemas quânticos fechados, pois
em geral lidamos com Hamiltonianos dependentes do tempo H (t1) onde [H (t1) , H (t2)] (cid:44) 0
para t1 (cid:44) t2. A ﬁm de determinar o QSL para Hamiltonianos desse tipo nós devemos usar a
expressão do QSL para sistemas fechados, que foi derivada por Deﬀner e Lutz [71], dada pela
desigualdade (ver Apêndice C)

(cid:12)(cid:12)(cid:12)cos(cid:2)L (ψ0, ψt)(cid:3) − 1
(cid:82) τ
0 dt |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|, que não pode ser vista como
onde tem-se deﬁnido a quantidade Eτ = 1
uma média da energia do sistema em geral. De fato, a energia média do sistema leva em conta
uma média sobre a quantidade (cid:104)E (t)(cid:105) = |(cid:104)ψ (t)|H (t)|ψ (t)(cid:105)|, mas o que temos é uma média sobre
A quantidade cos(cid:2)L (ψ0, ψt)(cid:3) acima é a métrica de Bures que para estados puros é dado por
a quantidade |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|. Este não pode, em geral, ser visto como a energia do sistema.
L (|ψ1(cid:105) ,|ψ2(cid:105)) = arccos(cid:2)|(cid:104)ψ1|ψ2(cid:105)|(cid:3) [9].

(148)

τ ≥

Eτ

(cid:12)(cid:12)(cid:12)

,

τ

Para encontrar um limite para o tempo total de evolução nós devemos identiﬁcar o estado
evoluído presente na deﬁnição de Eτ como |ψ (t)(cid:105) = e−ϑk(t) |Ek (t)(cid:105), para alguma fase ϑk (t), e o
estado inicial como sendo |ψ (0)(cid:105) = |Ek (0)(cid:105). Como o Hamiltoniano que realiza uma evolução
superadiabática é dado pela Eq. (145), nós temos que

(cid:90) τ
(cid:90) τ
(cid:90) τ

0

0

1
τ
1
τ
1
τ

Eτ =

=

=

dt |(cid:104)Ek (0)|HSA (t)|Ek (t)(cid:105)|
dt |(cid:104)Ek (0)|H (t) + HCD (t)|Ek (t)(cid:105)|
dt |εk (t)(cid:104)Ek (0)|Ek (t)(cid:105) + (cid:104)Ek (0)|HCD (t)|Ek (t)(cid:105)|

0

onde εk (t) é a energia associada ao autoestado |Ek (t)(cid:105) do Hamiltoniano adiabático. Usando a
desigualdade

0 dt |g (t)| nós obtemos

(cid:82) τ
0 dt | f (t) + g (x)| ≤(cid:82) τ

0 dt | f (t)| +(cid:82) τ

,

(149)

(cid:90) τ
(cid:90) τ
dt |E0 (t)(cid:104)E0 (0)|E0 (t)(cid:105)| +
dt |(cid:104)E0 (t)|∂tE0 (t)(cid:105)(cid:104)E0 (0)|E0 (t)(cid:105)|

(cid:90) τ



τ

0

0



τ

0

Eτ ≤ 1

τ

+

dt |(cid:104)E0 (0)|∂tE0 (t)(cid:105)|

.

(150)

Agora, por simplicidade, fazemos a seguinte mudança de variável s = t/τ nas integrais para

escrever

η2 + η3

Eτ ≤ η1 +

com as seguintes deﬁnições η1 = (cid:82) 1
e η3 = (cid:82) 1
des χ ≡ η2 + η3 e η1 = ωη, com η = (cid:82) 1

(151)
0 ds|(cid:104)E0 (0)|∂sE0 (s)(cid:105)|
0 ds|(cid:104)E0 (s)|∂sE0 (s)(cid:105)(cid:104)E0 (0)|E0 (s)(cid:105)|. Nós sabemos ainda que podemos escrever
E0 (s) = ωg0 (s), para alguma função admensional g0 (s), assim nós deﬁnimos as quantida-
0 ds|g (s)(cid:104)E0 (0)|E0 (s)(cid:105)|. Usando a Eq. (148) e a

0 ds|E0 (s)(cid:104)E0 (0)|E0 (s)(cid:105)| , η2 = (cid:82) 1

τ

,

64

quantidade Eτ determinada pela Eq. (151) para escrever

η ωτ + χ ≥ |cosL (E0 (0) , E0 (1)) − 1|

,

(152)

χ ≥ η2 ≥ 

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:90) 1

0

ds|ds |(cid:104)E0 (0)|E0 (s)(cid:105)|| ≥ 

Então, para determinar um limite para o tempo τ nós precisamos analisar a equação acima.
Deixe-nos iniciar analisando com cuidado a quantidade χ. Primeiro note que, por deﬁnição, nós
temos χ ≥ η2, portanto
(cid:90) 1

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:2)(cid:104)ψ (0)|ψ (t)(cid:105)(cid:3)(cid:12)(cid:12)(cid:12) e
(cid:12)(cid:12)(cid:12), respectivamente. Da deﬁnição da métrica de Bures nós ﬁcamos com

onde na primeira e segunda desigualdade usamos |(dt |(cid:104)ψ (0)|ψ (t)(cid:105)|)| ≤ (cid:12)(cid:12)(cid:12)dt
0 dt | f (t)| ≥(cid:12)(cid:12)(cid:12)(cid:82) τ
(cid:82) τ
χ ≥ |cosL (E0 (0) , E0 (1)) − 1|. Esse resultado propõe que qualquer quantidade ωτ > 0 é
admissível e não viola a desigualdade na Eq. (152), sendo compatível inclusive com o limite
ωτ → 0.

ds (ds |(cid:104)E0 (0)|E0 (s)(cid:105)|)
= |cosL (E0 (0) , E0 (1)) − 1|

0 dt f (t)

0

,

(153)

Nossa análise sugere, portanto, que evoluções contra-diabáticas podem ser realizadas em
intervalos de tempo arbitrariamente curtos e que independem dos estados inicial e ﬁnal da evo-
lução. Em evoluções adiabáticas tal limite não é veriﬁcado para gap’s ﬁnitos, uma vez que em
tais evoluções o tempo de evolução é da ordem de τAd ∝ 1/ωn, onde n ∈ N+ [14, 29, 55, 72].
Em conclusão, se desejamos acelerar evoluções adiabáticas usando atalhos para adiabaticidade
via Hamiltonianos contra-diabáticos o tempo de evolução é, segundo propõe a análise do QSL,
arbitrariamente pequeno. No entanto, é de se esperar que esse ganho sobre o tempo de evolu-
ção não venha a custo zero, alguma outra quantidade física deve estar sendo responsável por
moderar esse tempo de evolução.

5.2.2 Custo energético

Quem é o responsável por moderar o tempo de evolução superadiabática? Essa é a pergunta que
está intrínseca aos resultados apresentados na seção anterior e que desejamos responder agora.
Deixe-nos analisar o custo médio da energia durante a evolução do sistema deﬁnindo a

quantidade Σ (τ) dada por

(154)
para evoluções superadiabáticas. Para calcular a quantidade (cid:107)HSA (t)(cid:107) nós adotamos novamente
a norma de Hilbert-Schmidt. Então, ﬁcamos com

ΣSA (τ) =

0

(cid:107)HSA (t)(cid:107) dt ,
(cid:90) τ

1
τ

0

(cid:113)
Tr{[H (t) + HCD (t)]2}dt .

(cid:90) τ

(cid:113)

(cid:104)

ΣSA (τ) =

1
τ

0

Tr

H2
SA (t)

dt =

(cid:90) τ

1
τ

(cid:105)

Agora deixe-nos determinar o traço calculando-o na base de autoestados do Hamiltoniano

65

(155)

H (t). Primeiramente, escrevemos

Tr{[H (t) + HCD (t)]2} = Tr[H2 (t) + H2

(156)
onde {A, B} = AB+BA denota o anti-comutador entre os operadores A e B. Devido a propriedade
cíclica do traço, podemos escrever Tr[{H (t) , HCD (t)}] = 2Tr[H (t) HCD (t)]. Assim

CD (t)] + Tr[{H (t) , HCD (t)}] ,

Tr[H (t) HCD (t)] =

=

(cid:104)En (t)|H (t) HCD (t)|En (t)(cid:105)
εn(t)(cid:104)En (t)|HCD (t)|En (t)(cid:105) ,

(157)

(cid:88)
(cid:88)

n

n

onde usamos (cid:104)En (t)|H (t) = (cid:104)En (t)|εn(t). Agora escrevendo HCD (t) a partir da Eq. (147), temos

(cid:104)En (t)|HCD (t)|En (t)(cid:105) = i

(cid:88)
(cid:88)
(cid:104) ˙Ek (t)|Ek (t)(cid:105)(cid:104)En (t)|Ek (t)(cid:105)(cid:104)Ek (t)|En (t)(cid:105)
(cid:104)En (t)| ˙Ek (t)(cid:105)(cid:104)Ek (t)|En (t)(cid:105)

n

+i

= i(cid:104)(cid:104) ˙En (t)|En (t)(cid:105) + (cid:104)En (t)| ˙En (t)(cid:105)(cid:105)

n

= i d
dt

[(cid:104)En (t)|En (t)(cid:105)]

.

Usando que (cid:104)En (t)|En (t)(cid:105) = 1 para todo t, então concluímos que

(cid:104)En (t)|HCD (t)|En (t)(cid:105) = 0 ∀ n ,

(158)

o que mostra que na base de autoestados de H (t) o termo contra-diabatico HCD (t) tem todos os
elementos da diagonal nulos. Usando o resultado da equação acima na Eq. (157), encontramos
que Tr[H (t) HCD (t)] = 0, consequentemente Tr[{H (t) , HCD (t)}] = 0. Portanto a Eq. (156) se
reduz à

Tr{[H (t) + HCD (t)]2} =

E2
n (t) + Tr[H2

CD (t)] ,

(cid:88)

n

n (t). Para determinar Tr[H2

CD (t)], deixe-nos escrever H2

CD (t)

n E2

explicitamente como

onde usamos que Tr[H2 (t)] =(cid:80)
CD (t) HCD (t) = 2(cid:88)
+2(cid:88)
+2(cid:88)
+2(cid:88)

H†

n,m

n,m

n

|(cid:104) ˙En (t)|En (t)(cid:105)|2|En (t)(cid:105)(cid:104)En (t)|
(cid:104) ˙En (t)| ˙Em (t)(cid:105)|En (t)(cid:105)(cid:104)Em (t)|
(cid:104) ˙En (t)|En (t)(cid:105)(cid:104) ˙En (t)|Em (t)(cid:105)|En (t)(cid:105)(cid:104)Em (t)|
(cid:104)En (t)| ˙En (t)(cid:105)(cid:104)En (t)| ˙Em (t)(cid:105)|En (t)(cid:105)(cid:104)Em (t)|

.

n,m

66

(cid:90) 1

(cid:115)(cid:88)

0

m

(cid:90) 1

(cid:115)(cid:88)

(cid:34)

0

m

(cid:35)

Então calculando os elementos diagonais da matriz H†

CD (t) HCD (t) na base de autoestados

de H (t) nós obtemos
(cid:104)Ek (t)|H†

CD (t) HCD (t)|Ek (t)(cid:105) = 2[(cid:104) ˙Ek (t)| ˙Ek (t)(cid:105) − |(cid:104)Ek (t)| ˙Ek (t)(cid:105)|2] .

Portanto, Tr[H2

CD (t)] ﬁca dado por

Tr[H2

CD (t)] = 2(cid:88)
[(cid:104) ˙En (t)| ˙En (t)(cid:105) − |(cid:104)En (t)| ˙En (t)(cid:105)|2] .
(cid:90) τ

(cid:2)E2
m (t) + 2µm (t)(cid:3)dt ,

(cid:115)(cid:88)

ΣSA (τ) =

n

1
τ

0

m

Em conclusão, o custo energético em evoluções superadiabátics é calculado usando

(159)

(160)

onde µm (t) = (cid:104) ˙m (t)| ˙m (t)(cid:105) − |(cid:104)m (t)| ˙m (t)(cid:105)|2 é a contribuição superadiabática e Em (t) são os au-
tovalores do Hamiltoniano adiabático. Por outro lado, o custo energético na evolução adiabática
é

ΣAd =

m (s)ds ,
E2

(161)

onde nós parametrizamos a integral usando s = t/τ. Então usando a mesma parametrização na
Eq. (160) nós obtemos que

ΣSA (τ) =

ds

(162)

m (s) + 2 µm (s)
E2
τ2

é o custo para implementar a evolução superadiabática. Com isso primeiro podemos veriﬁcar
que ΣSA (τ) > ΣAd, mostrando assim que sempre teremos um custo adicional para imitar uma
evolução adiabática via Hamiltonianos contra-diabáticos. Uma segunda conclusão é que, como
esperado, no limite adiabático τ → ∞ nós recuperamos o custo energético associado à evolução
adiabática, isto é limτ→∞ ΣSA (τ) → ΣAd.

67

6 Computação Quântica Universal via TQ Superadiabático

Motivados pela proposta do TQ adiabático de portas, nós propomos o TQ superadiabático como
um primitivo para CQ. Neste capítulo nos derivaremos um atalho via Hamiltonianos contra-
diabáticos para o TQ adiabático, em seguida estenderemos os resultados aﬁm de mostrar como
o modelo pode ser usado para implementar portas quânticas.

6.1 TQ Superadiabático

O conhecimento do spectrum e autoestados do Hamiltoniano adiabático é de crucial importância
para derivar um atalho via Hamiltonianos contra-diabáticos. Nesse caso precisamos conhecer o
conjunto de oito autoestados do Hamiltoniano H (s) da Eq. (36). Na seção 3 nós ﬁzemos uso
das simetrias do Hamiltoniano adiabático para escrevê-lo na forma bloco diagonal e com isso
facilitar a análise. Isso foi possível devido conhecermos explicitamente tal Hamiltoniano, mas
teria alguma maneira de fazer a mesma análise na sua versão superadiabática? A resposta é sim,
e isso é assegurado pelo seguinte teorema (veja demonstração no Apêndice D).

Teorema 1 Seja H0 (t) um Hamiltoniano adiabático tal que(cid:2)H0 (t) , Πz
(cid:3) = 0 e [H0 (t) , Πx] = 0.
(cid:3) =
Então o Hamiltoniano superadiabático HSA (t) associado a H0 (t) também satisfaz(cid:2)HSA (t) , Πz

0 e [HSA (t) , Πx] = 0.

Basicamente, o teorema acima assegura que as simetrias de paridade Πz e inversão de pari-
dade Πx se veriﬁcadas para o Hamiltoniano adiabático, também o são na versão superadiabática.
Então, similarmente ao que foi feito na seção 3 para o TQ adiabático do estado de um q-bit, a si-
metria em Πz permite, desde que a base seja adequadamente ordenada, escrever o Hamiltoniano
superadiabático para o TQ na forma bloco diagonal como
∅
H−
SA (s)

 H+

 ,

SA (s)
∅

HSA (s) =

(163)

SA (s) é o Hamiltoniano superadiabático associado ao Hamiltoniano adiabático H±

onde H±
4×4 (s)
dos blocos do Hamiltoniano adiabático da Eq. (47). Por outro lado, a simetria em Πx garante que
SA (s) = H−
SA (s). Portanto o problema de determinar
a base pode ser ordenada de forma que H+
o Hamiltoniano superadiabático se resume ao problema de determinar o termo contra-diabático
do Hamiltoniano adiabático 4 × 4 dado pela Eq. (49).
Escrevendo o Hamiltoniano superadiabático H±

CD (s), onde H±

4×4 (s) é

dado pela Eq. (49), o Hamitoniano contra-diabático H±

SA (s) = H±

4×4 (s) + H±
CD (s) é escrito como

H±
CD (s) =

i
τ

|dsE±

n (s)(cid:105)(cid:104)E±

n (s)|

,

(164)

3(cid:88)

n=0

68

(165)

(166)

(167)

(168)

4×4 (s) e dados por (não normalizados)

onde |E±

 ,

χ − η f
ηi

,

, 1

(cid:3)

,

(cid:104)

χ − η f

n (s)(cid:105) são os autoestados (normalizados) de H±
(cid:105)(cid:2)χ + ηi
(cid:33)
(cid:33)
+ 1, 1, 0
,
η f − ηi + χ
ηi − η f + χ

(cid:12)(cid:12)(cid:12)E±
0 (s)(cid:11) =
(cid:12)(cid:12)(cid:12)E±
1 (s)(cid:11) =
(cid:12)(cid:12)(cid:12)E±
2 (s)(cid:11) =
(cid:12)(cid:12)(cid:12)E±
3 (s)(cid:11) =

 ηi + χ
(cid:32)
(cid:32)
(cid:32)

η f
− 1,− ηi
η f

ηiη f

,

, 0, 1

ηi
η f
− ηi
ηi
,
η f
η f
ηi − χ
η f
f (s)]1/2. Na Eq. (164) já usamos que (cid:104)dsE±

,− η f + χ

(cid:33)

, 1

ηi

,

,

i (s)+η2

n (s)(cid:105) =
n (s)|dsE±
onde η = η (s) e χ = χ(s) = [η2
0 (s)(cid:105) também
0, pois como as funções de interpolação ηi (s) e η f (s) são funções reais, então |E±
são. A realização do TQ superadiabático é portanto possível usando o Hamiltoniano superadia-
bático da Eq. (163). Assumindo novamente o esquema apresentado na Fig. 6, o estado inicial do
sistema é preparado em |ψ(cid:105)1 |β00(cid:105)23 e evolui até o estado ﬁnal |β00(cid:105)12 |ψ(cid:105)3, passando sempre por
autoestados instantâneos fundamentais do Hamiltoniano adiabático HSA (s) dado na Eq. (36).

Para mostrarmos que o TQ superadiabático pode ser usado como um primitivo para com-
putação quântica, devemos ser capazes primeiramente de estender os resultados anteriores para
um sistema ainda maior. Dado que é sempre possível realizar o TQ adiabático de um estado de
n q-bits, desde que os recursos exigidos sejam disponibilizados, agora pretendemos mostrar que
também é possível teleportar superadiabaticamente um estado qualquer de n q-bits. A extensão
para o TQ do estado de n q-bits é imediato combinando o Hamiltoniano da Eq. (83) com a
seguinte proposição (ver demonstração no Apêndice E).

Proposição 3 Dado um sistema k-partido onde o Hamiltoniano que evolui o sistema é da forma

k(cid:88)

n=1

k(cid:88)

n=1

H (t) =

Hn (t)

,

(169)

i=1 1i) ⊗ Hn (t) ⊗ (⊗k

onde Hn (t) = (⊗n−1
i=n+11i) é o Hamiltoniano que dirige a n-ésima partição
do sistema, o atalho via Hamiltonianos contra-diabáticos é feito por meio do Hamiltoniano
superadiabático

(t) = (⊗n−1

onde H SA
associado ao n-ésimo Hamiltoniano Hn (t).

i=1 1i)⊗HSA

n (t)⊗(⊗k

n

HSA (t) =

H SA

n

(t)

,

(170)

i=n+11i), com HSA

n (t) sendo o Hamiltoniano superadiabático

A partir do Hamiltoniano da Eq. (83) e da proposição acima a transição da versão adiabática
para a superadiabática do TQ do estado de n q-bits torna-se simples. Assim como no caso
adiabático, nós precisamos conhecer apenas o Hamiltoniano contra-diabático no caso do TQ do

69

estado de um q-bit.

6.2 TQ Superadiabático de portas

Para mostrar que o TQ superadiabático pode ser usado para realizar CQ universal, precisamos
mostrar que este é capaz de implementar portas quânticas de 1 e 2 q-bits, ou até portas de mais
de 2 q-bits. Primeiramente, deixe-nos enunciar mais um teorema, cuja demonstração pode ser
veriﬁcada no Apêndice F.

Teorema 2 Sejam dois Hamiltonianos H (t) e H (t, G), com H (t, G) = GH (t) G† para algum
unitário G. Se conhecemos o Hamiltoniano superadiabático HSA (t) associado a H (t), então

HSA (t, G) = GHSA (t) G†

(171)

é o Hamiltoniano superadiabático associado ao Hamiltoniano H (t, G).

Independentemente da evolução que nos proposmos a fazer com o Hamiltoniano H (t, G), o
teorema acima aﬁrma que se conseguirmos escrever H (t, G) como uma rotação unitária de um
outro Hamiltoniano H (t), onde conhecemos o Hamiltoniano superadiabático associado a este,
então o conhecimento de HSA (t, G) é imediato e segue da Eq. (171). Em particular, o teorema
acima tem grande utilidade para mostrar que podemos realizar o TQ superadiabático de portas.
Para o TQ adiabático de portas de n q-bits nós já sabemos que, dado um unitário qualquer Un
de n q-bits, o TQ adiabático da porta Un pode ser feito pelo Hamiltoniano adiabático H (s, Un) =
UnHmult (s) U†
n, onde Hmult (s) é dado pela Eq. (83). Assim, é possível usar o Teorema 2 para
mostrar que

Hmult
SA (s, Un) = UnHmult

SA (t) U†
n ,

(172)

deve ser o Hamiltoniano superadiabático que implementará portas de n q-bits superadiabatica-
mente. Onde Hmult
SA (s) é o Hamiltoniano superadiabático que realiza o TQ do estado de n q-bits
discutido anteriormente, portanto conhecido. O teorema acima é válido para qualquer Hamil-
toniano dependente do tempo H (t) e qualquer unitário G, sendo que a única exigência é feita
sobre G que deve ser independente do tempo e satisfaça GG† = 1. Em consequência disso, o
protocolo descrito aqui nos fornece um modelo universal de CQ.

6.3 Complementaridade Energia-Tempo

Aqui nós faremos a estudo do custo energético para realizar CQ via TQ superadiabático. A
forma como o custo energético está deﬁnido na Eq. (134) revela que não deve haver diferença
entre o custo de usar o TQ superadiabático para teleportar apenas os estados ou as portas junto
com os estados. Portanto os resultados obtidos para o TQ simples (apenas estados) podem ser
aplicados ao caso do TQ de portas.

70

Figura 9: Gráﬁco da quantidade Σsing (τ) para algumas interpolações especíﬁcas (curvas com
ﬁguras geométricas preenchidas). As linhas horizontais estão indicando o custo energético no
limite de tempo adiabático τ → ∞.

Para fazer a análise do custo energético, deixe-nos inicialmente análisar o caso do TQ de um
estado desconhecido de um q-bit. Dado o Hamiltoniano superadiabático da Eq. (163), devido
sua forma bloco diagonal podemos escrever

(cid:104)

Tr
√

(cid:105)

(cid:110)(cid:2)H+
SA (s)(cid:3)2(cid:111)
(cid:13)(cid:13)(cid:13). Deﬁnindo o custo energético de um hipotético

(173)

= 2Tr

,

H2

SA (s)

(cid:13)(cid:13)(cid:13)H+

2

SA (s)

SA (s) como Σ+ (τ), o custo energético associado ao Hamiltoniano HSA (t) é

consequentemente (cid:107)HSA (t)(cid:107) =
Hamiltoniano H+
dado por

√

Σsing (τ) =

2Σ+ (τ)

.

(cid:12)(cid:12)(cid:12)E+
n (s)(cid:11) e autovalores εm (s) de H+ (s), dados

(174)

Portanto, o problema se resume ao problema de determinar o custo energético Σ+ (τ). A

partir da Eq. (162) e do conjunto de autoestados
pelas Eqs. (165 − 168) e (37 − 39), respectivamente, nós temos

(cid:40)

(cid:115)(cid:88)

(cid:90) 1
n (s)(cid:105)(cid:12)(cid:12)(cid:12). Devido a forma complexa dos autoestados para deter-

m (s)
[εm (s)]2 + 2 µ+
τ2

(175)

ds ,

(cid:41)

m

0

Σ+ (τ) =

(cid:12)(cid:12)(cid:12)(cid:104)dsE+

n (s)|dsE+

m (s) =

onde µ+
minadas escolhas das funções ηi (s) e η f (s) a integral acima é diﬁcilmente solúvel, quando
solúvel analiticamente. Nós escolhemos três diferentes interpolações especíﬁcas, a saber a in-
terpolação linear com ηlin
i (s) = cos (πs/2)
i
(s) = (e1−s − 1)/(e − 1) e
e ηtri

f (s) = sin (πs/2) e a interpolação exponencial em que ηexp

f (s) = s, trigonométrica onde ηtri

(s) = 1 − s e ηlin

i

71

(s) = (es − 1)/(e − 1). Nós determinamos numericamente o custo Σsing (τ) que foi obtido na

ηexp
f
Eq. (174) para as interpolações citadas e o resultado encontra-se no gráﬁco da Fig. 9.

Como mencionado anteriormente, o gráﬁco representado na Fig. 9 é exatamente o custo
energético para implementarmos unitários de 1 q-bit. Além disso, nós também podemos esti-
pular o custo energético esperado para implementar portas de n q-bits analisando o custo para
realizar o TQ de n q-bits. No caso do TQ de portas de n q-bits nós temos que (veja Apêndice
G)

√
23(n−1)nΣsing (τ)

Σn (τ) =

(176)

é o custo energético requerido para tal ação. É evidente o crescimento do custo energético
com o número de q-bits do sistema onde a porta U deverá atuar bastante signiﬁcativo. Em
certos casos isso não é um problema, pois sabe-se que se somos capazes de implementar portas
de 1 q-bit e portas controladas por 1 q-bit, então podemos realizar CQ universal. No caso do
conjunto universal composto por rotações de 1 q-bit e CNOT, temos os custos Σ1 (τ) = Σsing (τ) e
Σ2 (τ) = 4Σsing (τ), respectivamente. Em outros desing nós precisamos ir até portas controladas
controladas por 2 q-bits, como o conjunto composto por Hadamard e Toﬀoli, onde tais portas
podem ser implementadas a um custo Σ1 (τ) e Σn (τ) = 8

3Σsing (τ), respectivamente.

√

72

7 Evoluções Superadiabáticas Controladas e CQ Universal

Nós já discutimos anteriormente sobre EAC e sua utilidade em nos permitir implementar qual-
quer porta controlada por n-q-bits. Agora mostraremos como realizar CQ universal de forma
superadiabática. Assim como no uso de EAC para realizar CQ universal, aqui nós propomos um
modelo híbrido de CQ, onde nós simulamos a funcionalidade de portas quânticas, mas usando
evoluções superadiabáticas.

Para este ﬁm, primeiro discutiremos de forma geral como derivar um atalho superadiabático
para EAC. Em seguida aplicaremos os principais resultados obtidos para propor um modelo uni-
versal de computação quântica superadiabática. Por ﬁm nós faremos a análise da complementa-
ridade energia-tempo, introduzida na seção 5.2, para a implementação de portas n-controladas.

7.1 Evoluções Superadiabáticas Controladas

Como sempre é feito quando tentamos derivar uma versão superadiabática de alguma evolução
adiabática, o ponto de partida é o Hamiltoniano adiabático que governa a evolução do sistema.
Então para estudar evoluções superadiabáticas controladas (ESC) nós partimos do Hamiltoniano
adiabático para EAC da forma como está escrita na Eq. (110) e que novamente escrevemos aqui
sob uma forma mais compacta

H (s) =

Pk ⊗ Hk (s)

,

(177)

(cid:88)

k

com Hk (s) = f (s) Hini + g (s) Hﬁn
k . Para construir o Hamiltoniano contra-diabático para H (s)
nós devemos, portanto, conhecer o conjunto de autoestados e autovalores de H (s). Nós po-
demos mostrar facilmente como obter o conjunto de autoestados e autovalores de H (s) se co-
nhecermos os respectivos conjuntos para cada Hk (s). De fato, deixe que conheçamos todos os
autoestados {|En
k (s)} de todos os Hamiltonianos Hk (s), onde temos que a
relação de autovalor

k (s)(cid:105)} e autovalores {εn

Hk (s)|En

k (s)(cid:105) = εn

k (s)|En

k (s)(cid:105)

é satisfeita para todo Hk (s). Então, a equação de autovalor para H (s) é dada por

H (s)|Ek,n (s)(cid:105) = εn

k (s)|Ek,n (s)(cid:105) ,

(178)

(179)

onde

(180)
com |pk(cid:105) sendo o autovetor associado ao único autovalor não nulo de Pk. A demonstração da
relação de autovalor na Eq. (179) é imediata se substituirmos a Eq. (180) diretamente na Eq.

|Ek,n (s)(cid:105) = |pk(cid:105)|En

k (s)(cid:105) ,

73

(179). Fazendo isso obtemos

H (s)|Ek,n (s)(cid:105) =

=

(cid:88)
(cid:88)

m

m

k (s)(cid:105)

Pm ⊗ Hm (s)|pk(cid:105)|En

(Pm|pk(cid:105)) ⊗(cid:0)Hm (s)|En

k (s)(cid:105)(cid:1) ,

como os operadores Pk’s formam um conjunto de projetores ortogonais do subespaço S nós
podemos escrevemos Pk em sua decomposição espectral como Pk = |pk(cid:105)(cid:104)pk|, onde os |pk(cid:105)
formam uma base para o subespaço S de modo que (cid:104)pk|pm(cid:105) = δkm, consequentemente observa-
se que Pk |pm(cid:105) = δkm |pk(cid:105). Usando isso, temos

H (s)|Ek,n (s)(cid:105) = |pk(cid:105) ⊗ Hk (s)|En

= εn

k (s)|pk(cid:105)|En

k (s)|Ek,n (s)(cid:105) ,

k (s)(cid:105)
k (s)(cid:105) = εn

onde usamos a Eq. (178) na ultima passagem da equação acima. Assim nós temos veriﬁcado
que a Eq. (179) é satisfeita para |Ek,n (s)(cid:105) escrito como na Eq. (180). Sabendo que o espaço SA
tem dimensão dimSA = dimS dimA, onde dimA e dimS são as dimensões dos subespaços
A e S, respectivamente, então precisamos mostrar que o conjunto {|Ek,n (s)(cid:105)} é composto por
dimSA vetores ortonormais. Facilmente podemos mostrar que quaisquer dois vetores do con-

junto {|Ek,n (s)(cid:105)} satisfazem a condição de ortonormalização(cid:10)Ek,n (s)|Ek(cid:48),n(cid:48) (s)(cid:11) = δkk(cid:48)δnn(cid:48), para

isso basta fazer o produto escalar e obtemos

(cid:10)Ek,n (s)|Ek(cid:48),n(cid:48) (s)(cid:11) = (cid:104)pk|pk(cid:48)(cid:105)(cid:104)En

k(cid:48) (s)(cid:105) = δkk(cid:48)(cid:104)En
agora note que para k e k(cid:48) diferentes não podemos garantir que (cid:104)En
podemos garantir que para o mesmo k = k(cid:48) nós temos (cid:104)En
acima ﬁca

k (s)|En(cid:48)

k (s)|En(cid:48)

(cid:10)Ek,n (s)|Ek(cid:48),n(cid:48) (s)(cid:11) = δkk(cid:48)δnn(cid:48)

k (s)|En(cid:48)
k (s)|En(cid:48)

k(cid:48) (s)(cid:105) ,
k(cid:48) (s)(cid:105) = δkk(cid:48)δnn(cid:48), mas
k(cid:48) (s)(cid:105) = δnn(cid:48). Portanto a equação

(181)
o que mostra que a condição de ortonormalização e consequentemente {|Ek,n (s)(cid:105)} é composto
por vetores ortonormais. A contagem da quantidade de estados tem o conjunto {|Ek,n (s)(cid:105)} é
k (s)(cid:105), como temos
simples, para isto basta ver que para cada k nós temos dimA autoestados |En
dimS possíveis k’s, implica que a quantidade de elementos do conjunto {|Ek,n (s)(cid:105)} é exatamente
dimSA.

,

Para derivar um atalho superadiabático via Hamiltoniano contra-diabático para evoluções
controladas, nós usamos a formas dos autoestados dado na Eq. (180) do Hamiltoniano H (s) e
a forma do Hamiltoniano contra-diabático dado na Eq. (147). Fazendo isso, obtemos que

HCD (s) =

Pk ⊗ HCD

k

(s)

(182)

(cid:88)

k

74

é o Hamiltoniano contra-diabático que deve ser somado ao Hamiltoniano adiabático H (s) para
obtermos a evolução adiabática, com

k (s)| +(cid:10)∂sEn

k (s)(cid:11)|En

k (s)|En

k (s)(cid:105)(cid:104)En

k (s)|

,

(183)

HCD

k

(s) =

i
τ

|∂sEn

k (s)(cid:105)(cid:104)En

(cid:88)

n

sendo o Hamiltoniano contra-diabático associado ao k-ésimo Hamiltoniano que atua sobre o
subespaço A. Deixe-nos comprovar as Eqs. (182) e (183).

Das Eqs. (147) e (179) nós podemos escrever

HCD (s) =

=

i
τ
i
τ

k,n

(cid:88)
|∂sEk,n (s)(cid:105)(cid:104)Ek,n (s)| + (cid:104)∂sEk,n (s)|Ek,n (s)(cid:105)|Ek,n (s)(cid:105)(cid:104)Ek,n (s)|
(cid:88)
(cid:104)∂sEn (s)|En (s)(cid:105)|pk(cid:105)|En
(cid:88)

k (s)|(cid:104)pk|

k (s)(cid:105)(cid:104)En
k (s)|(cid:104)pk| ,

k (s)(cid:105)(cid:104)En

|pk(cid:105)|∂sEn

k,n

+

i
τ

k,n

onde usamos que |∂sEk,n (s)(cid:105) = |pk(cid:105)|∂sEn
k (s)(cid:105) e (cid:104)∂sEk,n (s)|Ek,n (s)(cid:105) = (cid:104)∂sEn (s)|En (s)(cid:105) na última
igualdade. Como os projetores |pk(cid:105)(cid:104)pk| não carregam informações com respeito ao índice n da
segunda soma, ainda podemos escrever HCD (s) como

(cid:12)(cid:12)(cid:12)∂sEn
k (s)(cid:11)(cid:10)En

k (s)

(cid:12)(cid:12)(cid:12) +(cid:10)∂sEn

k (s)(cid:11)(cid:12)(cid:12)(cid:12)En

k (s)(cid:11)(cid:10)En

k (s)

k (s)|En

(cid:12)(cid:12)(cid:12) ,

(cid:88)

k

i

τ

(cid:88)

n

HCD (s) =

Pk ⊗

onde usamos que Pk = |pk(cid:105)(cid:104)pk|. De modo que deﬁnindo a Eq. (183) podemos obter exatamente
a Eq. (182) como resultado do cálculo acima.

Assim, conhecendo como o conjunto de projetores {Pk} se dispõem na soma dada na Eq.
(177) e os respectivos Hamiltonianos contra-diabáticos para cada Hamiltoniano adiabático Hk (s),
então o Hamiltoniano contra-diabático associado ao Hamiltoniano adiabático dado na Eq. (177)
é conhecido e facilmente obtido das Eqs. (182) e (183).

Para encontrarmos o Hamiltoniano superadiabático, podemos usar as Eqs. (182) e (139)

para mostrar que

HSA (s) =

Pk ⊗ HSA

k

(s)

(184)

k

é o Hamiltoniano superadiabático que deve guiar o sistema, onde cada HSA
(s)
k
é o Hamiltoniano superadiabático associado ao Hamiltoniano adiabático Hk (s). Isso mostra que
o custo para implementarmos uma aproximação superadiabática em qualquer evolução adiabá-
tica controlada é dado pelo custo de conhecermos o conjunto de autoestados e energias de cada
Hamiltoniano Hk (s).

(s) = Hk (s)+HCD

k

75

(cid:88)

7.2 Computação Quântica por Evoluções Superadiabáticas Controladas

A ideia da CQ superadiabática é imitar a CQ Adiabática sem o vínculo estabelecido pelo teo-
rema adiabático e para isso nós usamos atalhos para adiabaticidade via Hamiltonianos contra-
diabáticos. Em particular, aqui nós propomos a CQ superadiabática via evoluções controladas.
Primeiramente mostraremos como implementar portas de 1 q-bit e em seguida mostraremos
que portas n-controladas podem ser implementadas facilmente com uma pequena extensão do
subespaço S.

7.2.1 Portas de 1 q-bit via ESC

O atalho para implementar portas de 1 q-bit via ESC pode ser feito por meio da determinação
do termo contra-diabático associado ao Hamiltoniano adiabático que nos permite implementar
adiabaticamente portas de 1 q-bit, já discutido na seção 4.2, que é dado pela Eq. (113). Com-
binando os resultados da seção 4.2 com os resultados obtidos na seção anterior nós podemos
mostrar que o Hamiltoniano superadiabático para implementar portas de 1 q-bit é dado por

HSA (s) = Pˆn+ ⊗ HSA

0

(s) + Pˆn− ⊗ HSA

φ

(s)

,

(185)

(s) é o Hamiltoniano superadiabático associado ao Hamiltoniano adiabático genérico
(s) nós usamos

onde HSA
ξ
Hξ (s) dado pela Eq. (114). Para obter o Hamiltoniano contra-diabático do HCD
que os autoestados de Hξ (s) são dados por

ξ

associados ao nível de energia εn
Hamiltoniano HCD
modo que ﬁca claro que (cid:104)∂sEn

ξ

|E0
ξ (s)(cid:105) = cos (θ0s/2)|0(cid:105) + eiξ sin (θ0s/2)|1(cid:105) ,
|E1
ξ (s)(cid:105) = − sin (θ0s/2)|0(cid:105) + eiξ cos (θ0s/2)|1(cid:105) ,

(186)
(187)
ξ (s) = (−1)n ω, com n = {0, 1}. Antes de escrevermos o
(s)(cid:105), para algum escalar λ1−n, de
ξ (s)(cid:105) = 0, assim ﬁcamos com
ξ (s)|

(s) primeiro note que |∂sEn
ξ (s)(cid:105) = λ1−n|E1−n
(cid:88)

ξ (s)(cid:105)(cid:104)En

ξ (s)|En

|∂sEn

(188)

(s) =

HCD

,

ξ

ξ

i
τ

n={0,1}

onde, usando as Eqs. (186) e (187) na relação acima, nós podemos mostrar que HCD
por

ξ

(cid:16)
σy cos ξ − σx sin ξ

(cid:17)

,

HCD

ξ

(s) =  θ0
2τ

(s) é dado

(189)

Com isso o Hamiltoniano superadiabático é dado pela Eq. (185) onde cada Hamiltoniano
(s) (com ξ = {0, φ}) é da forma HSA
(s), onde o termo contradiabático
(s) é dado pela Eq. (189). A informação sobre a porta a ser implementada pelo Hamiltoni-

(s) está contida no conjunto de projetores(cid:8)Pˆn+, Pˆn−

HSA
ξ
HCD
ano HSA
ξ
impresso no Hamiltoniano superadiabático HSA
φ

(cid:9) e no valor do parâmetro φ que está

(s) = Hφ (s) + HCD

φ

(s).

(s) = Hξ (s) + HCD

ξ

ξ

ξ

76

O resultado mais signiﬁcante aqui é a forma simples do termo contra-diabático HCD

(s) que
precisamos implementar. Notamos que para implementar qualquer porta superadiabaticamente
nós apenas precisamos adicionar um Hamiltoniano independente do tempo ao Hamiltoniano
adiabático do sistema. Isso elimina o problema de simular experimentalmente o Hamiltoniano
contra-diabático necessário para realizar o atalho, uma vez que a priori este pode depender do
tempo e ter a forma mais não trivial que imaginarmos.

ξ

7.2.2 Portas n-controladas via ESC

Mostramos agora que o Hamiltoniano adiabático para implementar portas n-controladas pode
ser derivado facilmente fazendo apenas uma extensão no subespaço alvo S e ajustanto adequa-
damente o conjunto de projetores sobre S.

Aqui usamos novamente que o atalho superadiabático é feito apenas determinando os Ha-
miltonianos superadiabáticos que atuam sobre o subsistema auxiliar A. Sabendo que Hamilto-
niano adiabático usado para implementar rotações controladas quaisquer sobre 1 q-bit é dado
pela Eq. (131), então da Eq. (184) temos

(s) + PN−1,ˆn− ⊗ HSA

φ

(s)

,

(190)

HSA (s) =(cid:2)1 − PN−1,ˆn−

(cid:3) ⊗ HSA

0

que é o Hamiltoniano superadiabático usado para realizar essa tarefa, onde os hamiltonianos
HSA
(s) são os mesmos determinados na seção anterior com o Hamiltoniano contra-diabático
ξ
dado pela Eq. (189).

O papel do parâmetro θ0 na versão superadiabática é o mesmo papel exercido por este na
versão adiabática apresentada anteriormente. De fato, para o caso de portas n-controladas o
sistema inicia sua evolução em um estado |Ψn (0)(cid:105) dado pela Eq. (129) e evolui superadiabati-
camente, governado pelo Hamiltoniano HSA (s) dado pela Eq. (190), até o estado ﬁnal |Ψn (0)(cid:105)
dado pela Eq. (132). Assim, ﬁca claro que precisamos realizar uma medida ao ﬁnal do pro-
cesso, onde θ0 terá o papel de deﬁnir a probabilidade de sucesso da computação, onde tomando
θ0 → π nós teremos probabilidade de sucesso p → 1. Como mencionado na seção 4.2 essa
medida pode ser evitada adotando θ0 = π.

7.3 A complementaridade energia-tempo

Em evoluções superadiabáticas nós podemos deﬁnir um tempo total de evolução inferior ao
tempo adiabático, de tal forma que esse tempo pode ser pré-deﬁnido na implementação física
da evolução superadiabática em laboratório. O moderador do tempo será, portanto, o custo
energético para realizar a evolução do sistema e que é, em geral, deﬁnido pela Eq. (134). Agora
nós discutiremos esse custo para implementar portas controladas por n q-bits em ESC.

77

O ponto de partida é a Eq. (134) para o Hamiltoniano dado na Eq. (190). Assim, deﬁnimos

ΣS CE (τ, n) =

(cid:107)HSA (s)(cid:107) ds ,

(191)

(cid:90) 1

0

onde HSA (t) é dado na Eq. (190). Estamos denotando o custo como uma função de τ devido
o resultado expresso na Eq. (162), onde para cada escolha de τ teremos um custo diferente.
Assim, escrevemos

Tr

(cid:113)
(cid:104)
(cid:105)
(cid:113)
Tr{(cid:0)1 − PN−1,ˆn−
(cid:113)
Tr{(cid:0)1 − PN−1,ˆn−

H2
SA (s)

(cid:107)HSA (s)(cid:107) =

=

=

(cid:1) ⊗ [HSA
(cid:1)}Tr{[HSA

0

0

(s)]2} + Tr{PN−1,ˆn− ⊗ [HSA
(s)]2} + Tr{PN−1,ˆn−}Tr{[HSA

φ

φ

(s)]2}

(s)]2} ,

onde na ultima passagem usamos que Tr{A ⊗ B} = Tr{A}Tr{B}. Como na base {|m, ˆnµ(cid:105)} o termo
1 − PN−1,ˆn− é uma matriz diagonal com um elemento nulo e 2N − 1 elementos iguais a 1 e
Tr{PN−1,ˆn−} tem apenas um elemento não nulo e igual a 1, temos

(cid:113)
(2N − 1) Tr{[HSA

0

(cid:107)HSA (s)(cid:107) =

(s)]2} + Tr{[HSA

φ

(s)]2} .

(192)

Prosseguindo,
Tr{[HSA

ξ

(s)]2} = Tr{[Hξ (s) + HCD
= Tr[{Hξ (s) , HCD

(s)]2}
(s)}] + Tr{H2

ξ

ξ

ξ (s)} + Tr{[HCD

ξ

(s)]2} .

Na subseção 5.2.2 vimos que em evoluçoes superadiabáticas temos Tr[{H (s) , HCD (s)}] = 0,
onde HCD (s) é o termo contra-diabático associado ao Hamiltoniano adiabático H (s), então
podemos escrever que Tr[{Hξ (s) , HCD

(s)}] = 0, portanto

ξ

onde já usamos que Tr{H2
que

ξ

Tr{[HSA

ξ (s)} =(cid:80)

Tr{[HCD

ξ

(s)]2} =

Note que as quantidades Tr{[HCD

ξ

temos

(s)]2} = 22ω2 + Tr{[HCD

(s)]2} ,

(193)

ξ

k={0,1}[εk

k={0,1}

ξ (s)(cid:105) =

ξ (s)]2 = 22ω2. Por outro lado, da Eq. (159) tem-se

(cid:88)
2
ξ (s)|dsEk
(cid:104)dsEk
(194)
τ2
ξ (s)} independem de ξ, então da Eq. (192)
(s)]2} e Tr{H2
(cid:113)
Tr{[HSA

(s)]2} .

2θ2
0
2τ2

(195)

2N

√

.

ξ

(cid:107)HSA (s)(cid:107) =

Portanto substituindo as Eqs. (193), (194) na equação acima e escrevendo N = 2n, a Eq.

78

(191) nos fornece

(cid:115)

1 +

(cid:18) θ0

(cid:19)2

2τω

,

√
2n+2

ΣS CE (τ, n) = ω

(196)

que é o custo para implementar portas de um q-bit controladas por n quits. Da Eq. acima
podemos ver que o custo também depende diretamente do parâmetro de sucesso na computação
θ0, assim escrevemos ΣS CE (τ, n) → ΣS CE (τ, n, θ0). Além dissso, o custo para implementar
portas controladas por n q-bits pode ser escrita como

√

(cid:115)

2nΣsing

S CE (τ, θ0)

(cid:18) θ0

(cid:19)2

2τω

,

,

(197)

(198)

ΣS CE (τ, n, θ0) =

onde

Σsing
S CE (τ, θ0) = 2ω

1 +

é o custo para implementar portas de um q-bit. A Fig. 10 mostra o comportamento do custo
para implementar portas de um q-bit Σsing
S CE (τ, θ0) para alguns valores especíﬁcos do parâmetro
θ0.

Figura 10: Custo energético em unidades de ω como uma função de ωτ para diferentes valores
do parâmetro θ0.

Da Fig. 10 nós vemos que o maior custo energético é aquele associado à evolução onde o
estado ﬁnal é tal que θ0 = π. Esse custo pode ser explicado pelo fato de que, visto na esfera de
Bloch, para diferentes valores de θ0 o estado ﬁnal encontra-se a diferentes distâncias do estado
inicial.

79

7.4 Computação Superadiabática Probabilística

Na subseção 4.4 discutimos o impacto sobre a média do custo energético ao assumirmos dife-
rentes valores para o parâmetro θ0, onde introduzimos a deﬁnição de computação probabilís-
tica adiabática. Aqui nós tentaremos responder a mesma pergunta feita na subseção 4.4, mas
analisando a realização de computação probabilística superadiabaticamente. Por simplicidade,
vamos analisar o caso da implementação de portas simples de 1 q-bit já que a Eq. (197) nos
garante que não haverá perda de generalidade em nossa análise.

O estado ﬁnal da evolução na implementação de portas de 1 q-bit é dada pela Eq. (117),
onde temos uma probabilidade de sucesso de sin2 (θ0/2), o custo energético Σsing
S CE (τ, θ0) é dado
pela Eq. (198). No caso de falha do protocolo, devemos repetir o processo usando o mesmo
procedimento e para isso gastaremos mais uma quantidade Σsing
S CE (τ, θ0) de energia (considerando
que θ0 não muda). A depender do valor de θ0, esse processo pode se repetir várias vezes, assim,
depois de k evoluções, nós teremos um custo dado por kΣsing
S CE (τ, θ0). Sendo sin2 (θ0/2) a proba-
bilidade de sucesso a cada medida, em média precisaremos de (cid:104)N(cid:105) = 1/ sin2 (θ0/2) repetições
para que tenhamos sucesso na computação. Portanto, o custo energético médio ¯Σsing
S CE (τ, θ0) da
computação probabilística é

θ2
0

S CE (τ, θ0) = (cid:104)N(cid:105) Σsing
¯Σsing

1 +

(199)

4 (τω)2 .
Então no intervalo Iθ0 : (0, π], certamente existe um θ0 que minimiza ¯Σsing

S CE (τ, θ0) = 2ω cos sec2

S CE (τ, θ0) e nosso
intuito aqui é determinar seu valor e se há alguma dependência com a escolha de τ. O intervalo
Iθ0 não leva em consideração o valor θ0 = 0. De fato, note que no limite θ0 → 0 nós teremos
S CE (τ, θ0) → ∞, o que signiﬁca que mesmo se ﬁzermos a evolução tendo certeza da falha do
¯Σsing
processo (θ0 = 0) nós ainda temos um gasto de Σ (0) = 2ω, e se insistirmos na tentativa de
S CE (τ, θ0) → ∞.
sucesso nós iremos repetir o processo inﬁnitamente, o que implica no fato que ¯Σsing
Sabemos que a criticalidade (pontos de mínimo e máximo) de uma função pode ser estudado
S CE (τ, θ0)

a partir de simples derivações. Faremos o estudo analítico da criticalidade da função ¯Σsing
a ponto de obter uma relação para o valor de θ0 que criticaliza ¯Σsing

S CE (τ, θ0).

Usando regras simples de derivação nós podemos mostrar que para a função ¯Σsing

S CE (τ, θ0) nós

(cid:113)

cos sec2 (θ0/2)

(cid:26)
θ0 −(cid:104)

(cid:105)

(cid:27)

4 (ωτ)2 + θ2
0

cot θ0
2

.

(200)

temos

∂
∂θ0

¯Σsing
S CE (τ, θ0) =

0/4 (ωτ)2
Para que nós tenhamos os pontos críticos de ¯Σsing

2 (ωτ)2

1 + θ2

de θ0 tal(is) que dθ0

¯Σsing
S CE (τ, θ0) = 0. Primeiro devemos notar que isso só acontece quando

S CE (τ, θ0) precisamos encontrar o(s) valor(es)

(cid:19)(cid:115)

(cid:18) θ0

2

pois cos sec (θ0/2) (cid:44) 0 ∀ 0 < θ0 ≤ π.

0 −(cid:104)

θcri

(cid:105)

4 (ωτ)2 + θcri2

0

80

cot

θcri
0
2

= 0 ,

(201)

Da equação acima já podemos ver a dependência do valor de θcri
0

(valor de θ0 que criticaliza
¯Σsing
S CE (τ, θ0)) com a quantidade ωτ. Além disso, o teste da segunda derivada, que nos fornece a
¯Σsing
concavidade da curva formada pelo gráﬁco de ¯Σsing
S CE (τ, θ0) > 0 para
todo 0 < θ0 ≤ π, consequentemente θcri
que minimiza ¯Σsing
S CE (τ, θ0). Agora
(cid:113)
deixe-nos escrever a Eq. (201) na forma

S CE (τ, θ0), acusa que d2

0 é o próprio θmin
0

θ0

ωτ =

tan

− θmin

0

,

(cid:115)

θmin
0
2

(cid:32) θmin

(cid:33)

0
2

0

(cid:32) θmin

(cid:33)

0
2

que representa a relação entre a quantidade ωτ e θmin
0
sobre os valores de θmin
e essa condição diz que θmin

. Note, portanto, que existe uma condição
é tal que

0

tan

≥ θmin

0

,

(202)

já que ωτ é real. Com isso nós encontramos que existem valores de θmin
críticos da função ¯Σsing
θmin
0

que não são valores
S CE (τ, θ0). O gráﬁco da Fig. 11 mostra como varia o valor do parâmetro

para alguns valores da quantidade ωτ.

0

0

Figura 11: Gráﬁco de θmin
em função da quantidade ωτ determinado numericamente com pre-
cisão de 10−5 onde variamos a quantidade ωτ em intervalos de 10−6. Nós mostramos θmin
em
função da quantidade ωτ para valores de ωτ > 1. Podemos ver que a medida que a quantidade
ωτ cresce, o valor de θmin
se aproxima de π (linha horizontal tracejada em preto). No inset nós
mostramos o gráﬁco das mesmas quantidades onde o intervalo de valores de ωτ são tais que
0 (cid:54) ωτ (cid:54) 1.

0

0

Diferentemente do caso adiabático, nós podemos ver que a resposta para nossa pergunta,
um tanto não trivial, é que sim. Há valores especíﬁcos de θ0 que, em média, poderia nos for-
necer um ganho energético fazendo a computação probabilística superadiabática. Além disso,

81

nossa liberdade na escolha do tempo total de evolução tem um impacto direto no θ0 ótimo.
Obviamente, custos relacionados ao processo de medida não estão sendo contabilizados nessa
análise.

82

8 Conclusões e Perspectivas Futuras

Nessa dissertação nós nos propomos a estudar modelos de CQ universal usando evoluções adia-
báticas e superadiabáticas (via Hamiltonianos contra-diabáticos). No cenário de CQ Adiabática
nós estendemos os resultados obtidos por Bacon e Flammia [41], onde mostramos como usar o
TQ para implementar portas arbitrárias de n q-bits, de modo que nós estendemos a classe de por-
tas quânticas que podem ser implementadas quando usamos o TQ como um primitivo para CQ.
Para isso nós analisamos o TQ adiabático do estado desconhecido de um q-bit fazendo uso das
simetrias do Hamiltoniano adiabático que realiza tal tarefa. Os resultados puderam, portanto,
ser estendidos para portas de n q-bits usando o TQ adiabático de estados de n q-bits juntamente
com a Proposições 1 e 2. Além disso, ainda dentro do cenário adiabático, mostramos como
implementar rotações controladas por n q-bits (que caracterizam uma porta controlada por n
q-bits) usando EAC. Esse resultado é uma extensão do modelo proposto por Hen [42].

Derivando atalhos para adiabaticidade de modelos adiabáticos de CQ nós propomos aqui
dois modelos de CQ superadiabática. O primeiro modelo proposto aqui é o de CQ via TQ su-
peradiabático [44]. Iniciamos o estudo mostrando como realizar o TQ superadiabático de um
estado quântico desconhecido de 1 q-bit. A partir dessa proposta nós mostramos como realizar
o TQ de um estado quântico de n q-bits. Esses resultados formam o alicerce que usamos para
mostrar como usar o TQ superadiabático para implementar portas quânticas (controladas ou
não) de n q-bits. Com a ajuda de dois teoremas que foram introduzidos durante o desenvolvi-
mento do modelo, nós mostramos que toda a teoria se constrói em cima do TQ de 1 q-bit e que
diferentes implementações de CQ universal podem ser realizadas combinando simples trans-
formações unitárias (que dependem da porta a ser implementada pelo modelo) e a extensão do
número de q-bits do sistema que usamos para codiﬁcar o estado onde a porta atuará.

No segundo modelo proposto nós mostramos como ESC pode ser usado para realizar CQ
universal usando diferentes conjuntos universais de portas quânticas [43]. O modelo sustenta-
se na introdução de um Hamiltoniano contra-diabático independente do tempo que deve ser
somado ao Hamiltoniano adiabático do sistema. Além disso, diferentes conjuntos universais de
portas podem ser implementadas tomando como base o mesmo Hamiltoniano contra-diabático.
A performance da CQ superadiabática foi caracterizada aqui pelo estudo da complementa-
ridade energia-tempo em uma evolução superadiabática via Hamiltonianos contra-diabáticos.
Nós usamos limites para o tempo total de evolução em sistemas quânticos (QSL) que nos su-
gerem que o tempo requerido para uma evolução superadiabática é compatível com tempos
arbitrariamente pequenos, e além disso mostramos que essa arbitrariedade no tempo de evo-
lução está apenas vinculado pelo custo energético necessário para realizar tal evolução. Nós
mostramos que, em geral, uma evolução superadiabática tem um custo energético maior do que
a sua análoga evolução adiabática e que este custo se reduz ao custo adiabático no limite de
longos tempos de evolução (τω → ∞). Nesse caso, a performance da CQ superadiabática, in-
dependentemente de como ela é implementada, é vantajosa quando queremos um menor tempo

83

de processamento de informação quântica.

Uma vez que em sistemas quânticos abertos existe uma competição entre o tempo reque-
rido por uma evolução adiabática (tempos longos) e a escala de tempo de decoerência (tempos
curtos), cabe ressaltar que a formulação superadiabática é promissora no cenário de evoluções
sob decoerência, em que as interações inevitáveis do sistema com o seu ambiente são levadas
em consideração. Assim, a formulação superadiabática para sistemas abertos [73] tem o po-
tencial de fornecer um tempo de execução ótimo para a realização do circuito mas de modo a
manter ainda alguma proteção do sistema contra decoerência. Desse modo, o tempo total de
evolução superadiabática nesse novo cenário deve ser estudando usando extensões dos limites
para o tempo total de evolução em sistemas quânticos abertos [74, 75]. Esse tópico é deixado
como desaﬁo para pesquisa futura.

84

A Apêndice A: Lema de Riemann-Lebesgue

Aqui nós faremos uma simples demonstração do Lema de Riemann-Lebesgue, que é enunciado
como

Lema 1 (Lema de Riemann-Lebesgue) Seja f (x) uma função integrável cuja integral existe
em qualquer intervalo da variável x e que

a f (x) dx = Mab para algum Mab ﬁnito. Então

(cid:82) b

(cid:90) b

lim
L→∞

a

f (x) eiLxdx → 0 .

Prova 1 Seja f (x) como no enunciado, então façamos uma mudança de variável na integral
de forma que Lx = k, portanto dx → dk/L e [a, b] → [aL, bL] e portanto temos

lim
L→∞

f (x) eiLxdx = lim
L→∞

f (k) eikdk .

(cid:90) Lb

La

1
L

(cid:90) b
(cid:82) b

a

(cid:82) Lb

como estamos a considerar que
consequentemente
f (k) eik é exatamente o valor absoluto da função f (k), pois
garantido que a integral

a f (x) dx = Mab para algum Mab ﬁnito em todo intervalo de x,
ab para algum Mk
ab também ﬁnito. O valor absoluto da função

(cid:12)(cid:12)(cid:12) f (k) eik(cid:12)(cid:12)(cid:12) = | f (k)|, assim nós temos

La f (k) eikdk não diverge. Assim nós podemos escrever

La f (k) = Mk

(cid:82) Lb

(cid:90) Lb

La

lim
L→∞

1
L

pois Mk

ab é um número ﬁnito.

f (k) eikdk = lim
L→∞

Mk
ab
L

→ 0 ,

85

B Apêndice B: Prova da Proposição 2

A demonstração da Proposição 2 é imediata e é como segue. Considere dois operadores A e
B de modo que existem outros dois operadores A (U) = UAU† e B (U) = UBU†, para algum
unitário U. Considerando que [A, B] = 0, então

[A, B] = U [A, B] U† = U (AB − BA) U†

(cid:16)

(cid:17)
AU†UB − BU†UA

= U
= A (U) B (U) − B (U) A (U) = [A (U) , B (U)]

U†

onde foi usado que U†U = 1. Isso conclui a prova da Proposição 2.

86

C Apêndice C: Limite de Velocidade Quântica

Aqui nós deduziremos o resultado expresso na Eq. (148) reproduzindo detalhadamente os cál-
culos presentes na Ref. [71].

Inicialmente considere um hamiltoniano H (t) que faz o sistema evoluir de um estado inicial
puro |ψ (0)(cid:105) até um estado ﬁnal desejado |ψ (t)(cid:105), não necessariamente ortogonal a |ψ (0)(cid:105). Com
isso a evolução é governada pela equação de Schrödinger
H (t)|ψ (t)(cid:105) = i| ˙ψ (t)(cid:105) ,

(203)

onde estamos considerando, a priori, que H (t) é o mais geral possível, ou seja, H (t) (cid:44) H e
[H (t1) , H (t2)] (cid:44) 0, para algum t1 (cid:44) t2. A ideia é deﬁnirmos a distância entre dois estados
quaisquer na esfera de Bloch, a partir da ﬁdelidade F (|ψ1(cid:105) ,|ψ2(cid:105)), como

L (|ψ1(cid:105) ,|ψ2(cid:105)) = arccos(cid:2)F (|ψ1(cid:105) ,|ψ2(cid:105))(cid:3) = arccos(cid:2)|(cid:104)ψ1|ψ2(cid:105)|(cid:3)

(204)
para estados puros [9]. A partir desta deﬁnição ﬁca claro que 0 ≤ L (|ψ1(cid:105) ,|ψ2(cid:105)) ≤ π/2. Essa
escolha é tão boa quanto a escolha da métrica deﬁnida pela distância de traço como medida de
distância entre |ψ1(cid:105) e |ψ2(cid:105), pois para estados puros elas são equivalentes [9]. Derivando a Eq.
(204) com relação ao tempo e depois tomando apenas o módulo nós ﬁcamos com

,

com a igualdade ocorrendo se Re

sidere |(cid:104)ψ (0)|ψ (t)(cid:105)| = (cid:112)(cid:104)ψ (0)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105), então derivando nós podemos escrever

Antes de prosseguirmos, deixe-nos demonstrar a desigualdade presente na Eq. (206). Con-

dt |(cid:104)ψ (0)|ψ (t)(cid:105)| =

=

1
2
1
2i

(cid:104)ψ (0)| ˙ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105) + (cid:104)ψ (0)|ψ (t)(cid:105)(cid:104) ˙ψ (t)|ψ (0)(cid:105)
(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105) − (cid:104)ψ (0)|ψ (t)(cid:105)(cid:104)ψ (t)|H (t)|ψ (0)(cid:105)

|(cid:104)ψ (0)|ψ (t)(cid:105)|

|(cid:104)ψ (0)|ψ (t)(cid:105)|

,

87

Na equação acima podemos olhar para a quantidade dtL (ψ0, ψt) como uma velocidade de-

ﬁnida na esfera de Bloch. Agora precisamos usar a desigualdade

.

|dtL (ψ0, ψt)| =

|(dt |(cid:104)ψ (0)|ψ (t)(cid:105)|)|

sin(cid:2)L (ψ0, ψt)(cid:3)
(cid:2)(cid:104)ψ (0)|ψ (t)(cid:105)(cid:3)(cid:12)(cid:12)(cid:12)
(cid:104)(cid:104)ψ (0)|H (t)| ˙ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)(cid:105)

|(dt |(cid:104)ψ (0)|ψ (t)(cid:105)|)| ≤(cid:12)(cid:12)(cid:12)dt
(cid:12)(cid:12)(cid:12)dtL (ψ0, ψt) sin(cid:2)L (ψ0, ψt)(cid:3)(cid:12)(cid:12)(cid:12) ≤ 1

,

= 0, para obter

|(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|

.



(205)

(206)

(207)

como em geral (cid:104)ψ (0)|ψ (t)(cid:105)(cid:104) ˙ψ (t)|ψ (0)(cid:105) é complexo, temos

então a quantidade |(dt |(cid:104)ψ (0)|ψ (t)(cid:105)|)| é obtida tomando o módulo, assim

dt |(cid:104)ψ (0)|ψ (t)(cid:105)| =

1


|dt |(cid:104)ψ (0)|ψ (t)(cid:105)|| =

1


Im(cid:2)(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)(cid:3)
(cid:12)(cid:12)(cid:12)Im(cid:2)(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)(cid:3)(cid:12)(cid:12)(cid:12)

|(cid:104)ψ (0)|ψ (t)(cid:105)|

|(cid:104)ψ (0)|ψ (t)(cid:105)|

.

.

Agora usa-se a desigualdade |a + ib| ≥ |b|, onde a igualdade acontece quando a = 0, ou seja

Re [a + ib] = 0. Logo temos

(cid:12)(cid:12)(cid:12)Im(cid:2)(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)(cid:3)(cid:12)(cid:12)(cid:12) ≤ |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)|

com a desigualdade para Re(cid:2)(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)(cid:3) = 0. Portanto

,

|dt |(cid:104)ψ (0)|ψ (t)(cid:105)|| ≤ 1


|(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)(cid:104)ψ (t)|ψ (0)(cid:105)|

|(cid:104)ψ (0)|ψ (t)(cid:105)|

=

1


|(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|

,

então usando a Eq. de Schrödinger, ﬁcamos com

|dt |(cid:104)ψ (0)|ψ (t)(cid:105)|| ≤ |dt (cid:104)ψ (0)|ψ (t)(cid:105)|

.

Como queríamos mostrar.
Agora podemos voltar ao desenvolvimento iniciado anteriormente. Para facilitar o entendi-

mento do próximo passo, escrevamos

,

(208)

de modo que a Eq. (207) ﬁca escrita como

(cid:12)(cid:12)(cid:12)dtL (ψ0, ψt) sin(cid:2)L (ψ0, ψt)(cid:3)(cid:12)(cid:12)(cid:12) = dt cos(cid:2)L (ψ0, ψt)(cid:3)
(cid:12)(cid:12)(cid:12)dt cos(cid:2)L (ψ0, ψt)(cid:3)(cid:12)(cid:12)(cid:12) ≤ 1
(cid:12)(cid:12)(cid:12)dt cos(cid:2)L (ψ0, ψt)(cid:3)(cid:12)(cid:12)(cid:12) ≤ 1
(cid:90) L(|ψ(0)(cid:105),|ψ(τ)(cid:105))

|(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|
(cid:90) τ
d cos(cid:2)L (ψ0, ψt)(cid:3)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) =

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

dt



0



.

0

(cid:90) τ

0

Agora integramos ambos os lados da desigualdade obtemos

dt |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|

,

(209)

onde para o lado esquerdo da Eq. (209) podemos escrever

(cid:90) τ

dt

0

(cid:12)(cid:12)(cid:12)dt cos(cid:2)L (ψ0, ψt)(cid:3)(cid:12)(cid:12)(cid:12) ≥

(cid:12)(cid:12)(cid:12)cos(cid:2)L (ψ0, ψτ)(cid:3) − 1
(cid:12)(cid:12)(cid:12)

e, por outro lado, usando o teorema do valor médio para o lado direito da Eq. (209) nós encon-

88

tramos

com a quantidade E (τ) = 1
τ

dt |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)| = τE (τ)

(cid:90) τ
τE (τ) ≥(cid:12)(cid:12)(cid:12)cos(cid:2)L (ψ0, ψt)(cid:3) − 1
(cid:12)(cid:12)(cid:12)

(cid:82) τ
0 dt |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)|.

(210)
com E (τ) sendo o valor médio da função |(cid:104)ψ (0)|H (t)|ψ (t)(cid:105)| no intervalo I : [0, τ]. Em con-
clusão nós obtemos

,

0

,

(211)

89

D Apêndice D: Prova do Teorema 1

toniano H (t) tal que(cid:2)H (t) , Πz

explicitamente o comutador, temos

A demonstração do Teorema 1 é dada como segue. Inicialmente nós consideramos um Hamil-

(cid:3) = 0, então temos(cid:2)HSA (t) , Πz
(cid:3) = HCD (t) Πz − ΠzHCD (t)
(cid:2)HCD (t) , Πz

.

(cid:3) = (cid:2)HCD (t) , Πz

(cid:3). Escrevendo

Como Πz e H (t) são diagonais na mesma base, então um autoestado |n (t)(cid:105) de H0 (t) tem
paridade em Πz bem deﬁnida e escrevemos Πz |n (t)(cid:105) = (−1)n |n (t)(cid:105). Usando que Πz |˙n (t)(cid:105) =

(−1)n |˙n (t)(cid:105) facilmente mostra-se que HCD (t) Πz = ΠzHCD (t), portanto temos(cid:2)HCD (t) , Πz
consequetemente temos(cid:2)HSA (t) , Πz

(cid:3) = 0,
(cid:3) = 0. Por outro lado, se [H0 (t) , Πx] = 0, então temos

[HSA (t) , Πx] = [HCD (t) , Πx].

Calculando um elemento de matriz de [HCD (t) , Πx] na base de autoestados de H0 (t) dado

por

[HCD (t) , Πx]kl = (cid:104)k (t)| [HCD (t) , Πx]|l (t)(cid:105)

= [HCD (t) Πx]kl − [ΠxHCD (t)]kl

Usando que Πx |n (t)(cid:105) = |n(cid:48) (t)(cid:105), onde |n (t) e |n(cid:48) (t) tem paridades opostas, e que Πx |˙n (t)(cid:105) =

|˙n(cid:48) (t)(cid:105), podemos escrever que

[ΠxHCD (t)]kl = i(cid:104)k(cid:48) (t)|˙l(cid:105) + (cid:104)k(cid:48) (t)|l (t)(cid:105)(cid:104)˙l (t)|l (t)(cid:105)

= i(cid:104)k (t)|˙l(cid:48) (t)(cid:105) + (cid:104)k (t)|l(cid:48) (t)(cid:105)(cid:104)˙l(cid:48) (t)|l(cid:48) (t)(cid:105) = [HCD (t) Πx]kl

Portanto [HCD (t) , Πx]kl = 0. Como queríamos demonstrar.

90

E Apêndice E: Prova da Proposição 3

Para demonstrar a validade da proposição 3, considere um sistema k-partido onde o Hamiltoni-
ano que evolui o sistema é que tem a forma da Eq. (169) e dado por

H (t) =

Hn (t)

,

(212)

i=1 1i) ⊗ Hn (t) ⊗ (⊗k

onde Hn (t) = (⊗n−1
i=n+11i) é o Hamiltoniano que dirige a n-ésima partição do
sistema. O Hamiltoniano H (t) trata portanto de sistemas não interagentes. O Hamiltoniano
contra-diabático associado à H (t) é obtido usando o conjunto de autoestados de H (t). Não é
difícil veriﬁcar que tais autoestados são dados por

|E{nk} (t)(cid:105) = |En1···nk (t)(cid:105) =

|E j
n j (t)(cid:105) ,

(213)

n j (t)(cid:105) denota o n j-ésimo autoestado do Hamiltoniano H j (t). É importante mencionar

onde |E j
que a relação de completitude sobre cada subsistema estabelece que

|Enm (t)(cid:105)(cid:104)Enm (t)| = 1n .

(214)

(cid:88)

nm

k(cid:88)

n=1

k(cid:79)

j=1

Assim, temos que

(cid:88)
onde denotamos(cid:80){nk} =(cid:80)

HCD (t) = i

{nk}

n1 ···(cid:80)

| ˙E{nk} (t)(cid:105)(cid:104)E{nk} (t)| + (cid:104) ˙E{nk} (t)|E{nk} (t)(cid:105)|E{nk} (t)(cid:105)(cid:104)E{nk} (t)|

nk. Derivando a Eq. (213) nós temos

| ˙E{nk} (t)(cid:105) = | ˙E1

n1 (t)(cid:105)|E2
+··· + |E1

n2 (t)(cid:105)···|Ek
n1 (t)(cid:105)|E2

nk (t)(cid:105) + |E1

n1 (t)(cid:105)| ˙E2

n2 (t)(cid:105)···|Ek

nk (t)(cid:105)

que pode ser reescrito sob a forma

nk (t)(cid:105) ,

n2 (t)(cid:105)···| ˙Ek
(cid:88)

| ˙E{nk} (t)(cid:105) =

na (t)(cid:105) ,
|Λa

a

(cid:104) ˙E{nk} (t)|E{nk} (t)(cid:105) =
| ˙E{nk} (t)(cid:105)(cid:104)E{nk} (t)| =

i=a+1|Ei
(cid:88)
(cid:88)
(cid:104) ˙Ea
na (t)|Ea
Γa{nk} (t)

,

a

a

na (t)(cid:105) ,

91

na (t)(cid:105) = (⊗a−1

onde |Λa
podemos notar que

i=1 |Ei

ni (t)(cid:105)) ⊗ | ˙Ea

na (t)(cid:105) ⊗ (⊗k

ni (t)(cid:105)), com a = {1, k}. Dessa forma nós

,

(215)

(216)

(217)

(218)

(219)

onde usamos que (cid:104)Λa
deﬁnimos

na (t)|E{nk} (t)(cid:105) = (cid:104) ˙Ea

na (t)|Ea

na (t)(cid:105) na primeira igualdade acima e onde nós

Γa{nk} (t) = (⊗a−1

i=1 |Ei

na (t)(cid:105)(cid:104)Ea

na (t)| ⊗ (⊗k

i=a+1|Ei

ni (t)(cid:105)(cid:104)Ei

ni (t)|) .

(220)

ni (t)(cid:105)(cid:104)Ei
ni (t)|) ⊗ | ˙Ea
(cid:88)
(cid:88)

{nk}

a

Então, substituindo as relações (218) e (219) em (215) nós ﬁcamos com
na (t)(cid:105)|E{nk} (t)(cid:105)(cid:104)E{nk} (t)|

Γa{nk} (t) + (cid:104) ˙Ea

na (t)|Ea

HCD (t) = i

Fazendo uso da completitude (214), nós podemos encontrar que
na (t)| ⊗ (⊗k

Γa{nk} (t) = (⊗a−1

| ˙Ea
na (t)(cid:105)(cid:104)Ea

i=1 1i) ⊗(cid:88)

(cid:88)

i=a+11i) ,

{nk}

na

,

(221)

(222)

e que

(cid:88)
onde Φa (t) = (cid:80)

{nk}

mos ver que

na (t)|Ea
(cid:104) ˙Ea
na(cid:104) ˙Ea
na (t)|Ea
(cid:88)

i

{nk}
(t) = (⊗a−1
i=1 1i)⊗ HSA

a

na (t)(cid:105)|E{nk} (t)(cid:105)(cid:104)E{nk} (t)| = (⊗a−1
na (t)(cid:105)|Ea

(223)
na (t)|. Portanto, das equações (222) e (223) pode-

i=1 1i) ⊗ Φa (t) ⊗ (⊗k

na (t)(cid:105)(cid:104)Ea

i=a+11i) ,

Γa{nk} (t) + (cid:104) ˙Ea

na (t)|Ea

na (t)(cid:105)|E{nk} (t)(cid:105)(cid:104)E{nk} (t)| = H CD

a

(t)

,

(224)

a

(t)⊗ (⊗k

onde H SA
i=a+11i) é o Hamaltoniano contra-diabático que atua sobre
a a-ésima partição do sistema. Substituindo o resultado acima na Eq. (221), a conclusão é que
o atalho via Hamiltonianos contra-diabáticos para um Hamiltoniano da forma (212) é feito por
meio do hamiltoniano superadiabático

k(cid:88)

HSA (t) =

H SA

n

(t)

,

que foi introduzido na Eq. (170). Isso conclui a demonstração da proposição 3.

n=1

92

F Apêndice F: Prova do Teorema 2

Para demonstrarmos o Teorema 2, considere dois Hamiltonianos H (t) e H (t, G) tais que é
valido a relação H (t, G) = GH (t) G†, com GG† = 1, e que nós conhecemos o Hamiltoniano
contra-diabático associado ao Hamiltoniano H (t). Para determinarmos o Hamiltoniano contra-
diabático associado ao Hamiltoniano H (t, G), primeiro notamos que

(225)
é o conjunto de autoestados |n (s) , G(cid:105) do Hamiltoniano H (t, G) que pode ser determinado a
partir do conhecimento do conjunto de autoestados |n (s)(cid:105) do Hamiltoniano H (s). Assim

|n (s) , G(cid:105) = G |n (s)(cid:105)

HCD (s, G) =

i
τ

|∂sn, G(cid:105)(cid:104)n, G| + (cid:104)∂sn, G|n, G(cid:105)|n, G(cid:105)(cid:104)n, G|

,

(226)

é o Hamiltoniano contra-diabático associado a H (s, G). Agora usamos a relação indicada na
Eq. (225) para mostrar que

(cid:88)

n

i

τ

(cid:88)

n

HCD (s, G) = G

|∂sn(cid:105)(cid:104)n| + (cid:104)∂sn|n(cid:105)|n(cid:105)(cid:104)n|

 G† ,

(227)

(228)

onde nós usamos o fato de que o operador G é independente do tempo para escrever que
|∂sn, G(cid:105) = G |∂sn(cid:105), e que GG† = 1 para escrever que (cid:104)∂sn, G|n, G(cid:105) = (cid:104)∂sn|n(cid:105). Consequente-
mente nós concluímos que

HCD (s, G) = GHCD (s) G† ,

Assim o termo contra-diabático associado ao Hamiltoniano H (t, G) pode facilmente ser
encontrado a partir do conhecimento prévio do termo contra-diabático associado a H (t). Isso
conclui a demonstração do Teorema 2.

93

G Apêndice G: Prova da Eq. (176)

Com o intuito de demonstrar a validade da Eq. (176), deixe-nos escrever o Hamiltoniano supe-
radiabático que é usado para realizar o TQ de um estado de n q-bits como

HSA (s) =

H SA
m (s)

(cid:16)⊗k−1

(cid:17) ⊗ HSA

(s) ⊗(cid:16)⊗n
(cid:90) 1

Σn =

0

(cid:105)

ds

Tr

H2
SA (s)

,

onde H SA
três q-bits dado pela Eq. (163). Então o custo energético é dado por

, com cada HSA

l=k+11l

(s) =

l=1 1l

k

k

m (s) sendo um Hamiltoniano de

onde nós podemos escrever

H2

SA (s) =

n(cid:88)

k=1

(cid:105)2

(s)

+

(cid:88)

m(cid:44)k

Agora nós usamos que, para k (cid:44) m, nós temos

k

(cid:104)H SA
(cid:105)

(cid:104)H SA

k

Tr

m (s)

= (Tr [1])n−2 Tr

HSA
k

(s)

HSA

m (s)

 .

(229)

(230)

.

(231)

(cid:105)

H SA

k

m (s)

(s)H SA
(cid:104)
(cid:105)
(cid:105)

Tr

m=1

n(cid:88)
(cid:17)
(cid:113)

(cid:104)
(cid:88)
(cid:104)

k

√

23(n−1)nΣsingle .

94

HSA
, onde H j (s) é o Hamiltoniano
Então, nós escrevemos Tr
j
adiabático para o setor j e HCD
(s) é seu correspondente Hamiltoniano contra-diabático. Medi-
ante o cálculo explicito do traço na base de autoestados de H j(s) e usando as Eqs.(37)-(39) e a
Eq. (158), nós obtemos que Tr

= 0 (∀ j ∈ {1,··· , N}), que então implica em

H j (s) + HCD

(s)

(s)

j

m (s)

= 0 (k (cid:44) m) .

(232)

(s)H SA
(cid:104)
(cid:104)

j

HSA
j

(cid:104)H SA

k

Tr

(cid:104)

= Tr

(cid:105)
(cid:105)
(s)
(s)H SA

(cid:105)

Assim, o custo energético para o TQ de um estado desconhecido de N q-bits ﬁca escrito

como

(cid:104)

Tr

(cid:105)

H2

SA (s)

=

(cid:105)2(cid:27)

n(cid:88)

k=1

(cid:26)(cid:104)H SA
(cid:26)(cid:104)

k

Tr

(s)

= 23(n−1) n Tr

HSA
k

(s)

(cid:105)2(cid:27)

= (Tr [1])n−1
(∀k) .

(cid:26)(cid:104)

n(cid:88)

k=1

Tr

HSA
k

(s)

(cid:105)2(cid:27)

Consequentemente, substituindo a Eq. (233) na Eq. (229) obtém-se que

(233)

(234)

Σn =

que prova a validade da Eq. (176).

Referências

[1] P. Benioﬀ, The computer as a physical system: A microscopic quantum mechanical Ha-
miltonian model of computers as represented by Turing machines, Journal of Statistical
Physics 22(5), 563–591, (1980).

[2] P. Benioﬀ, Quantum mechanical hamiltonian models of turing machines, Journal of Sta-

tistical Physics 29(3), 515–546 (1982).

[3] R.P. Feynman, Simulating physics with computers, Int. Jour. Theor. Phys. 21, 467-488

(1982).

[4] D. Deutsch, Quantum Theory, the Church-Turing Principle and the Universal Quantum

Computer, Proc. R. Soc. Lond. A 400, 97-117 (1985).

[5] L.K. Grover, A fast quantum mechanical algorithm for database search, Proc. 28th Annual

ACM Symposium on the Theory of Computing (STOC), 212-219 (1996).

[6] L.K. Grover, Quantum Mechanics helps in searching for a needle in a haystack, Phys.

Rev. Lett. 79, 325 (1997).

[7] D. Deutsch & R. Jozsa, Rapid solution of problems by quantum computation, Proc. R.

Soc. London A 439, 553-558 (1992).

[8] P.W. Shor, Algorithms for quantum computation: discrete logarithms and factoring, Foun-

dations of Computer Science, 35th Annual Symposium, pp.124-134 (1994).

[9] M.A. Nielsen & I.L. Chuang, Quantum Computation and Quantum Information, Cam-

bridge University Press, Reino Unido, (2000).

[10] A. Barenco et al., Elementary gates for quantum computation, Phys. Rev. A 52,

3457–3467 (1995).

[11] E. Farhi et al., A Quantum Adiabatic Evolution Algorithm Applied to Random Instances

of an NP-Complete Problem, Science 292, 472 (2001).

[12] M. Born & V. Fock, Beweis des adiabatensatzes, Zeit. für Phys. 51, 165 (1928).

[13] T. Kato, On the adiabatic theorem of quantum mechanics, J. Phys. Soc. Jpn. 5, 435 (1950).

[14] A. Messiah, Quantum mechanics, North-Holland, Amsterdam (1962).

[15] D. Aharonov et al., Adiabatic Quantum Computation is Equivalent to Standard Quantum

Computation, SIAM Journal of Computing 37:1, 166-194 (2007).

[16] A. Mizel, D.A. Lidar & M. Mitchell, Simple Proof of Equivalence between Adiabatic

Quantum Computation and the Circuit Model, Phys. Rev. Lett. 99, 070502 (2007).

95

[17] A.M. Childs, E. Farhi & J. Preskill, Robustness of adiabatic quantum computation,

Phys.Rev. A 65, 012322 (2002).

[18] D.A. Lidar, Towards Fault Tolerant Adiabatic Quantum Computation, Phys. Rev. Lett.

100, 160506 (2008).

[19] G.L. Long et al., Experimental NMR realization of a generalized quantum search algo-

rithm, Phys. Lett. A 286, 121-126 (2001).

[20] G.L. Long & Li Xiao, Experimental realization of a fetching algorithm in a 7 qubit NMR

quantum computer, J. Chem. Phys. 119, 8473-8481 (2003).

[21] I.L. Chuang et al., Experimental realization of a quantum algorithm, Nature 393, 143-146

(1998).

[22] P. Richerme et al., Experimental performance of a quantum simulator: optimizing adia-
batic evolution and identifying many-body ground states, Phys. Rev. A 88, 012334 (2013).

[23] S.H.W. van der Ploeg et al., Adiabatic Quantum Computation With Flux Qubits, First Ex-
perimental Results, Applied Superconductivity, IEEE Transactions 17:2, 113-119 (2007).

[24] N. Chancellor & S. Haas, Scalable universal holonomic quantum computation realized
with an adiabatic quantum data bus and potential implementation using superconducting
ﬂux qubits, Phys. Rev. A 87, 042321 (2013).

[25] R. Barends et al., Digitized adiabatic quantum computing with a superconducting circuit,

pre-print arXiv:1511.03316.

[26] M.W. Johnson et al., Quantum annealing with manufactured spins, Nature 473, 194

(2011).

[27] S. Boixo et al., Evidence for quantum annealing with more than one hundred qubits, Na-

ture Phys. 10, 218 (2014).

[28] D.M. Tong, K. Singh, L.C. Kwek & C.H. Oh, Suﬃciency Criterion for the Validity of the

Adiabatic Approximation, Phys. Rev. Lett. 98, 150402 (2007).

[29] M.S. Sarandy, L.-A. Wu & D.A. Lidar, Consistency of the Adiabatic Theorem, Quantum

Information Processing 3, 331 (2004).

[30] D. M. Tong, Quantitative Condition is Necessary in Guaranteeing the Validity of the Adi-

abatic Approximation, Phys. Rev. Lett. 104, 120401 (2010).

[31] H.X. Cao, Z. Guo, Z. Chen & W. Wang, Quantitative suﬃcient conditions for adiabatic

approximation, Sci China - Phys. Mech. Astron. 56, 1401 (2013).

96

[32] M.H.S. Amin, C.J.S. Truncik & D.V. Averin, Role of single-qubit decoherence time in

adiabatic quantum computation, Phys. Rev. A 80, 022303 (2009).

[33] M.V. Berry, Quantum phase corrections from adiabatic iteration, Proc. R. Soc. A 414,

31-46 (1987).

[34] M.V. Berry, Histories of adiabatic quantum transitions, Proc. R. Soc. A 429, 61-72 (1990).

[35] R. Lim & M.V. Berry, Superadiabatic Tracking of Quantum Evolution, J. Phys. A 24,

3255-3264 (1991).

[36] S. Ibáñez, Xi Chen & J.G. Muga, Improving shortcuts to adiabaticity by iterative interac-

tion pictures, Phys. Rev. A 87, 043402 (2013).

[37] M. Demirplak & S. A. Rice, Adiabatic Population Transfer with Control Fields, J. Phys.

Chem. A 107, 9937 (2003).

[38] M. Demirplak & S. A. Rice, Assisted adiabatic passage revisited, J. Phys. Chem. B 109,

6838 (2005).

[39] M.V. Berry, Transitionless quantum driving, J. Phys. A 42, 365303 (2009).

[40] H.R. Lewis & W.B. Riesenfeld, An Exact Quantum Theory of the Time-Dependent Har-
monic Oscillator and of a Charged Particle in a Time-Dependent Electromagnetic Field,
J. Math. Phys. 10, 1458 (1969).

[41] D. Bacon & S. T. Flammia, Adiabatic Gate Teleportation, Phys. Rev. Lett. 103, 120504

(2009).

[42] I. Hen, Quantum gates with controlled adiabatic evolutions, Phys. Rev. A 91, 022309

(2015).

[43] A.C. Santos & M.S. Sarandy, Superadiabatic Controlled Evolutions and Universal Quan-

tum Computation, Sci. Rep. 5, 15775 (2015).

[44] A.C. Santos, R.D. Silva & M.S. Sarandy, Shortcut to Adiabatic Gate Teleportation, Phys.

Rev. A 93, 012311 (2016).

[45] A.Y. Kitaev, Quantum computations: Algorithms and error correction, RMS: Russian

Mathematical Surveys 52(6), 1191 (1997).

[46] D. Aharonov, A Simple Proof that Toﬀoli and Hadamard are Quantum Universal, e-print:

Arxiv:quant-ph/0301040 (2003).

[47] P.O. Boykin et al., A new universal and fault-tolerant quantum basis, Information Proces-

sing Letters 75, 101–107 (2000).

97

[48] C. H. Bennett et al., Teleporting an unknown quantum state via dual classical and

Einstein-Podolsky-Rosen channels, Phys. Rev. Lett. 70, 1895 (1993).

[49] D. Gottesman & I. L. Chuang, Demonstrating the viability of universal quantum compu-

tation using teleportation and single-qubit operations, Nature 402, 390-393 (1999).

[50] J. J. Sakurai, Modern Quantum Mechanics, by Addison-Wesley Publishing Company, Rev.

Ed. (1982).

[51] D.M. Tong, K. Singh, L.C. Kwek & C.H. Oh, Quantitative Conditions Do Not Guarantee

the Validity of the Adiabatic Approximation, Phys. Rev. Lett. 95, 110407 (2005).

[52] J. Du et al., Experimental Study of the Validity of Quantitative Conditions in the Quantum

Adiabatic Theorem, Phys. Rev. Lett. 101, 060403 (2008).

[53] A. Ambainis & O. Regev, An Elementary Proof of the Quantum Adiabatic Theorem, e-

print: arXiv:quant-ph/0411152 (2004).

[54] M.H.S. Amin, Consistency of the Adiabatic Theorem, Phys. Rev. Lett. 102, 220401 (2009).

[55] S. Jansen, M.-B. Ruskai & R. Seiler, Bounds for the adiabatic approximation with appli-

cations to quantum computation, J. Math. Phys. 48, 102111 (2007).

[56] M.V. Berry, Quantal Phase Factors Accompanying Adiabatic Changes, Proc. R. Soc. A

392, 45 (1984).

[57] H.L. Guidorizzi, Um Curso de Cálculo Vol. 1, LTC, 5a Ed. (2011).

[58] J.W. Brown & R.V. Churchill, Fourier series and boundary value problems, McGraw-Hill,

New York, (1993).

[59] W.H. Wang, Z.H. Guo & H.X. Cao , An upper bound for the adiabatic approximation

error, Sci. China-Phys. Mech. Astron. 56(2), 218–224 (2014).

[60] W.H. Wang, H.X. Cao, Lu Ling & B.M. Yu, An upper bound for the generalized adiabatic
approximation error with a superposition initial state, Sci. China-Phys. Mech. Astron.
58(3), 030001 (2015).

[61] H. Takesue et al., Quantum teleportation over 100 km of ﬁber using highly-eﬃcient super-

conducting nanowire single photon detectors, Optica 2, 832 (2015).

[62] X.-S. Ma et al., Quantum teleportation over 143 kilometres using active feed-forward,

Nature 489, 269 (2012).

[63] G. Brassard, Teleportation as a quantum computer, Physica D 120, 43-47 (1998).

98

[64] R.A. Horn & C.R. Johnson, Topics in Matrix Analysis, (New York: Cambridge University

Press) (1991).

[65] D. Aharonov, A Simple Proof that Toﬀoli and Hadamard are Quantum Universal, e-print:

arXiv:quant-ph/0301040 (2003).

[66] Y. Zheng, S. Campbell, G. De Chiara & D. Poletti, Cost of transitionless driving and work

output, arXiv:1509.01882 (2015).

[67] M. Kieferová & N. Wiebe, On the power of coherently controlled quantum adiabatic

evolutions, New J. Phys. 16 123034 (2014).

[68] L. Mandelstam & I.G. Tamm, The uncertainty relation between energy and time in non-

relativistic quantum mechanics, J. Phys. (Moscow) 9, 249 (1945).

[69] N. Margolus & L.B. Levitin, The maximum speed of dynamical evolution, Physica D 120,

188 (1998).

[70] V. Giovannetti, S. Lloyd & L. Maccone, Quantum limits to dynamical evolution, Phys.

Rev. A 67, 052109 (2003).

[71] S. Deﬀner & E. Lutz, Energy-time uncertainty relation for driven quantum systems, J.

Phys. A: Math. Theor. 46, 335302 (2013).

[72] S. Teufel, Adiabatic perturbation theory in quantum dynamics. Lecture Notes in Mathe-

matics 1821, SpringerVerlag, Berlin, Heidelberg, New York (2003).

[73] G. Vacanti et al., Transitionless quantum driving in open quantum systems, New J. Phys.

16, 053017 (2014).

[74] S. Deﬀner & E. Lutz, Quantum Speed Limit for Non-Markovian Dynamics, Phys. Rev.

Lett. 111, 010402 (2013).

[75] A. del Campo, I.L. Egusquiza, M.B. Plenio & S.F. Huelga, Quantum Speed Limits in Open

System Dynamics. Phys. Rev. Lett. 110, 050403 (2013).

99

