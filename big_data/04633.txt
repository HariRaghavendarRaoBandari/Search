epl draft

When do microswimmers exit the Stokes regime?

Kristina Pickl1 *, Jayant Pande2 *, Harald Köstler1, Ana-Sunčana Smith2,3 (a) and Ulrich Rüde1

1 Lehrstuhl für Systemsimulation, Friedrich-Alexander-Universität Erlangen-Nürnberg, Erlangen, Germany
2 EAM Cluster of Excellence, Friedrich-Alexander-Universität Erlangen-Nürnberg, Erlangen, Germany
2 PULS group, Department of Physics, Friedrich-Alexander-Universität Erlangen-Nürnberg, Erlangen, Germany
3 Division of Physical Chemistry, Ruđer Bošković Institute, Zagreb, Croatia
∗ These authors contributed equally to this work.

PACS 47.63.Gd – Swimming microorganisms
PACS 47.11.-j – Computational methods in ﬂuid dynamics
PACS 87.85.Tu – Modeling biomedical systems

Abstract – We compare fully-resolved, 3D lattice Boltzmann (LB) simulations of a three sphere
microswimmer to analytical calculations, and show thereby that (i) LB simulations reproduce
the motion very well in the Stokes regime, and (ii) the swimmer exits this regime at Reynolds
numbers Re ∼ 10−2, signiﬁcantly lower than previously realised. Below this Re value Stokesian
theory describes the motion accurately, but fails above it due to inertial eﬀects.
In the latter
case, the swimmer’s relaxation matches that of an underdamped harmonic oscillator, and this
speciﬁes its eﬀective hydrodynamic radius in a narrow Re range, as we show by calculating the
radius analytically. The method can be used to determine the limit of the Stokes regime and the
eﬀective radius for a general mechanical microswimmer.

6
1
0
2

 
r
a

 

M
5
1

 
 
]
t
f
o
s
.
t
a
m
-
d
n
o
c
[
 
 

1
v
3
3
6
4
0

.

3
0
6
1
:
v
i
X
r
a

Introduction. – The motion of microswimmers,
whether natural ones like E. coli [1] and C. reinhardtii [2]
or artiﬁcial ones like various proposed micro-machines [3–
7], is dominated by the viscous forces exerted by the sur-
rounding ﬂuid, with the inertia of the swimmers playing
practically no role. For these organisms the Reynolds
number (Re) is typically very small, usually 10−2 or
smaller. Because of this, a common approach in the lit-
erature to model their motion is to assume that the Re
vanishes [8–12]. In this limit the non-linear terms in the
Navier-Stokes equation for the ﬂuid ﬂow can be elimi-
nated, resulting in the Stokes equation, which makes the
analysis of the motion much easier [9]. The swimmers are
then said to be in the “Stokes regime”.

Larger organisms such as small insects swim in what
may be termed the “intermediate regime”, at which both
the viscous forces and the inertial forces are important in
directing the motion [13]. Their Reynolds numbers typi-
cally range between 1 and a few hundred. Finally, organ-
isms on the scale of meters, such as large ﬁsh, swim at
Re (cid:38) 103, where the inertial forces dominate the motion,
and the coasting of the swimmer during the non-active
part of each cycle is an integral part of the swimming strat-

(a)E-mail: smith@physik.fau.de

egy [14]. This is the domain of the “non-Stokes regime”.

The above demarcation of the three regimes is only
loosely deﬁned, with the speciﬁc details of a swimmer con-
trolling its Reynolds number as well as the importance
of inertial eﬀects in determining its motion. In practice
Re < 1 is often taken to be a suﬃcient condition for
assuming the Stokes regime, but the validity of such an
assumption is not established. Moreover, inherently non-
Stokesian methods such as lattice Boltzmann (LB) sim-
ulations are often used to simulate microswimmers with
Re < 1, and any inertial eﬀects if present in the simula-
tion are typically ignored in the analysis.

In this work we study the limits of the Stokes regime
for microswimmers and the suitability of using LB sim-
ulations within and beyond this regime. We adopt as a
model the popular three-sphere microswimmer of Najaﬁ
and Golestanian [4], modiﬁed to allow consideration of the
forces driving the motion. We show that for suﬃciently
low driving forces and sphere masses and consequently
small Re, LB simulations reproduce to a high degree of ac-
curacy the swimmer motion predicted by purely Stokesian
theory. As Re becomes larger than 10−2, Stokesian the-
ory fails and the swimmer enters the intermediate regime,
where its motion is characterised by inertial coasting in
accordance with the Stokes drag law as well as the expo-

p-1

K. Pickl et al.

nential oscillation of an underdamped harmonic oscillator.
The damping constant for this motion depends on the ef-
fective hydrodynamic radius of the swimmer. This fact
can be used to identify the intermediate regime and ﬁnd
the eﬀective radius for a general mechanical microswim-
mer driven by elastic shape changes.
For the three-sphere swimmer, the intermediate regime
is narrow, with its upper limit being at Re ∼ 5 × 10−2.
Above this Re value, the coasting exhibited by the swim-
mer is stronger than that predicted using the Stokes force
law and the swimmer enters the inertia-dominated non-
Stokes regime. The limit of the Stokes regime as found
by us is therefore considerably smaller than the low Re
limit of Re < 0.5 for an isolated three-sphere swimmer
suggested by Pooley and Yeomans using LB simulations
in 2D [15].

Fig. 1: Three-sphere swimmer model, based on [4].

Swimmer model. – Our swimmer, based on the
Najaﬁ-Golestanian design [4], consists of three rigid
spheres of equal masses m and radii r connected by two
linear springs of equal stiﬀness constants k and mean rest
lengths l.
In the simulations, additionally, we include
angular springs of high stiﬀness constants to ensure lin-
ear and rotational alignment of the swimmer [16]. Time-
irreversibility in the stroke, as required by the Scallop The-
orem for net propulsion at zero Reynolds number [3], is
achieved via the sinusoidal driving forces

Fd1(t) = − (Fd2 (t) + Fd3 (t)) ,
Fd2(t) = −a sin (ωt) , and
Fd3(t) = b sin (ωt + α) , for t ≥ (π − α) /ω,

(1)
(2)
(3)

that are applied to the centers of mass of the spheres along
the main axis of the swimmer, the x-axis. The parameters
a and b denote the amplitudes of the sinusoidal forces,
ω is the force frequency, T is the cycle period (so that
T = 2π/ω), α is the relative phase shift in the forces and
t is the instantaneous time. The force Fd3 on the right
sphere is kept zero for the ﬁrst (π − α) /ω time steps, so
that it starts continuously from a value of zero as that
aids in the stability of simulations; this has no bearing
on the model itself. Due to Eq. (1) the criterion of force
neutrality is always satisﬁed. As a result of the forces, the
trailing and leading arms perform sinusoidal motion with
oscillation amplitudes d1 and d2, respectively (Fig. 1).

Simulation framework. – The simulation system
consists of two parts, the parallel software framework

waLBerla [17–19] for simulating the ﬂuid, and the rigid
body engine pe [20] for the bodies within it.

waLBerla is based on the lattice Boltzmann method
(LBM) [21, 22] and uses a D3Q19 model [23] for three-
dimensional space discretisation employing 19 particle dis-
tribution functions (PDFs) per lattice site. For the colli-
sion operator, Ginzburg’s two-relaxation time model [24]
is applied, which splits the PDFs, the used incompressible
equilibrium distribution function, and the relaxation pa-
rameter into symmetric and antisymmetric parts. For the
simulations, the best accuracy at the solid walls is achieved
with the symmetric relaxation parameter set to 1/τ and
the antisymmetric one set to 8(2 − 1/τ )/(8 − 1/τ ) [24],
where τ denotes the relaxation time. The software utilizes
the message passing interface (MPI) and is optimized for
scalable and eﬃcient execution on the fastest supercom-
puters available [25].

The massively parallel rigid body engine pe [20] handles
the dynamics of the bodies using Newton’s equations of
motion, and includes mechanisms for resolving frictional
rigid body collisions and modelling external forces like
gravity or the sinusoidal forces driving the swimmer. Po-
tential contacts are handled in this work using the paral-
lel Discrete Element Method (DEM) [26]. In addition to
these soft-contact models it also supports, e.g., a contact
resolution based on hard-contact models [27]. The algo-
rithm is augmented with an MPI communication strat-
egy that can handle general pairwise spring-damper sys-
tems [16]. To avoid problems resulting from non-local
communication among processes resulting from extended
springs, communication is restricted to those pairs of pro-
cesses on which objects interact. Global communication
is avoided since it might lead to a deterioration of parallel
performance and scalability on modern supercomputers.
The interactions between the swimmer and the ﬂuid,
as well as between diﬀerent bodies within the swimmer,
are modelled by a four-way coupling scheme [16, 28, 29].
The rigid bodies of the swimmer overlap with the cells
of the LBM grid and are marked as obstacles within the
ﬂuid. Those that interface to the ﬂuid are speciﬁed to have
a moving boundary condition [30–32]. The ﬂuid couples
to a rigid body via the momentum exchange method [30,
31, 33] that takes into account the instantaneously acting
hydrodynamic forces from the ﬂuid on the rigid body. A
detailed description of the algorithms and methods used in
the simulation systems can be found in Pickl et al. [16,28].

Stokes regime: velocity and stroke. – To ﬁrst
test the suitability of the LBM simulation system to re-
produce swimming within the Stokes regime, we compare
the simulation results with purely Stokesian theory. We
have described this theory in previous work [34,35], where
we have determined the velocity of the swimmer by con-
sidering the eﬀect on each sphere of the diﬀerent forces
it faces, these being the spring forces, the driving forces
and the hydrodynamic forces. For small driving forces,
the oscillations of the spheres are small too, and one ob-

p-2

tains a coupled system of ordinary diﬀerential equations
for the sphere positions as functions of time, due to the
linear velocity-force relationship in Stokes ﬂow. This sys-
tem is solved in a perturbative manner with the oscillation
of the swimmer arms being the variable of perturbation,
and this leads to a swimming velocity given by (in the
notation employed in this paper) [35]

7r(cid:2)2(cid:0)a2 − b2(cid:1) κr − ab(cid:0)κ2 + 12r2(cid:1) sin α(cid:3)

uforce =

24l2π2ν2ρ2ω (κ4 + 40κ2r2 + 144r4)

.

(4)

Here uforce denotes the swimming velocity calculated us-
ing the forces acting upon the swimmer, ν is the kinematic
viscosity of the ﬂuid, ρ is its density, and κ is a constant
deﬁned for convenience as κ = k/(πνρω). This calcula-
tion assumes that there is no slip between the spheres and
the ﬂuid, and that the distances between the spheres are
much larger than the other length scales in the problem.
In response to the driving forces, the swimming stroke

induced is sinusoidal, and can be expressed as

L1(t) = l + d1 cos(ωt + δ1),
L2(t) = l + d2 cos(ωt + δ2),

(5)

where Li is the instantaneous length of the ith arm, and di
and δi are the amplitude and the phase of its oscillation.
Once this form of the swimming stroke is adopted, and the
earlier-mentioned conditions of no ﬂuid slip, large sphere
separations and small arm-length oscillations are assumed,
then the swimmer’s velocity can be written as [36]

ustroke = Gd1d2ω sin (δ1 − δ2) .

(6)
Here ustroke is the swimming velocity (with the subscript
referring to the stroke-dependence of its calculation), and
G is a geometrical constant which for equal sphere radii r
and equal mean arm-lengths l is given by G = 7r/(24l2).
The two approaches of ﬁnding the swimming velocity–
i.e. assuming known driving forces and known strokes–
may be reconciled by determining the various stroke pa-
rameters for the assumed force protocol, and then using
the now-known strokes to ﬁnd the velocity as in Eq. (6).
The stroke parameters are found to be

a2κ2 + 4r2(cid:2)4a2 + b2 − 4ab cos α(cid:3) + 4abκr sin α
b2κ2 + 4r2(cid:2)a2 + 4b2 − 4ab cos α(cid:3) − 4abκr sin α

π2ν2ρ2ω2 (κ4 + 40κ2r2 + 144r4)

(cid:115)
(cid:115)

π2ν2ρ2ω2 (κ4 + 40κ2r2 + 144r4)

(7)
The stroke phase diﬀerence sin(δ1 − δ2) is presented in
the Supplementary Information (SI) due to the heft of the
expression involved.

Recasting now the stroke-based velocity form of Eq. (6)

into the force-based one of Eq. (4), we ﬁnd

d1 =

d2 =

,

.

ustroke ≈ 7(4l − 3r)(4l − 7r)
4l(28l − 45r)

uforce.

(8)

Clearly, to the lowest order in r/l, the two velocities match
each other perfectly.

When do microswimmers exit the Stokes regime?

Fig. 2: Dependence of the stroke parameters on (a) the force
phase shift α, (b) the force amplitude ratio a/b, and (c) the
cycle period T ; and (d) comparison of velocity from theory
and simulations for diﬀerent cycle periods. The superscripts
‘sim’ and ‘theory’ refer to simulations and theory, respectively.

Comparison to simulation results. We compare the
above theory with simulations using the waLBerla-pe
framework.
In all the simulations, the ﬂuid has a kine-
matic viscosity of ν = 7.36 × 10−5 m2/s and a density
of ρ = 1.36 × 103 kg/m3. The relaxation time is set to
τ = 1.5, and the lattice resolution to 10−6 m. The spring
stiﬀness is k = 2.3 kg/s2, and the mass of each sphere is
m = 5.44 × 10−13 kg while its radius is r = 4 × 10−6 m.

p-3

K. Pickl et al.

Each arm has a rest length of l = 2.0 × 10−5 m. The
simulations are carried out in a box of size (x × y × z) =
(1200×800×800) lattice cells, and six full swimming cycles
are performed in total to ensure that the steady state is
reached. The other parameters in the diﬀerent simulations
are detailed in the SI (Table 1).

Figs. 2 (a) and (b) show a comparison of the stroke
parameter values from theory and from simulations for in-
creasing values of the force phase shift α and the force am-
plitude ratio a/b, respectively, for a cycle period of 4800
time steps. The errors are less than 6% in both cases.
If the cycle period is increased, the errors become even
smaller (Fig. 2 (c)), since the accuracy of the force resolu-
tion in the simulations increases with the cycle period.

Comparison of the swimmer velocity from theory and
simulations shows good agreement as well (Fig. 2 (d)),
with the relative errors again going down as the cycle pe-
riod increases (to 0.5% for a cycle period of 10000). This
shows the suitability and the robustness of the LBM sys-
tem to simulate Stokesian swimmers. Note that LBM is
subject to unavoidable boundary eﬀects and discretization
errors; these however prove to be small enough to not af-
fect the results signiﬁcantly.

Swimmers beyond the Stokes regime. – We now
focus on ﬁnding the Reynolds numbers at which the Stokes
regime is surpassed by our swimmers, and for this make
them heavier and faster. The radius of each sphere in the
simulations is increased to 6 × 10−6 m, its mass to 5.44 ×
10−11 kg, and the rest length of each arm to 3.2× 10−5 m.
The cycle period is increased to 8000 time steps to aid
simulation accuracy. The phase shift α is set to 0.5π.

We run a series of ten simulations where the equal driv-
ing force amplitudes increase successively from a value of
3.71 × 10−6 N to one of 3.71 × 10−5 N, in multiples of the
smaller value. The largest allowed force amplitude is set
by the requirement of keeping a minimum distance of one
lattice cell between any two spheres at all times. This is
important because at smaller distances, lubrication cor-
rection forces are switched on in the simulation system,
and these are not included in the theoretical model.

We ﬁnd that the earlier-described theory predicts the
correct swimmer velocities only for low driving force am-
plitudes, and diverges from the simulations as the forces
increase (Fig. 3). This matches the expectation of a con-
tinuous transition from the Stokes regime (Fig. 3, left blue
region) to the non-Stokes one (Fig. 3, right yellow region).
In between lies an intermediate regime (Fig. 3, middle pink
region) where the transition occurs. In the next section,
we locate this transition more precisely.

Swimmer relaxation. The swimmer can be viewed as
a system of connected harmonic oscillators, which are cou-
pled through both the middle sphere and the surrounding
ﬂuid, as well as damped by the ﬂuid. Since the drag force
is dominant in Stokes ﬂow, we assume that the Stokes and
the non-Stokes regimes are characterised by overdamping
and underdamping, respectively, in the motion of this os-

Fig. 3: Velocity of swimmer for diﬀerent force amplitudes, from
simulations and theory.

cillator system. For an underdamped driven harmonic os-
cillator, the trajectory is given by

x(t) = x0e−γt cos (ωrt − αr) ,

(9)

where x0 is the maximum amplitude, γ is the damping
constant, and ωr and αr are constants of oscillation. For
underdamped motion of a coupled system such as ours,
and of any mechanical microswimmer in general, it is dif-
ﬁcult to specify the diﬀerent parameters in Eq. (9), yet
the damping coeﬃcient γ may still be identiﬁed. To do
this, consider the swimmer’s relaxation from an initially
steady state when the driving forces are switched oﬀ. In
the steady state, the swimmer faces the Stokes drag force
FSt = −6πηreﬀ u where reﬀ is its eﬀective hydrodynamic
radius. When the driving forces vanish, then the body
stops instantly if inertial eﬀects are discounted, but in the
presence of inertia the body exhibits coasting, and its ve-
locity decreases continuously as
FSt = mdu/dt = −6πηreﬀ u.
⇒ u = Ce−γt, with γ =

and C a constant.

6πηreﬀ

(10)

m

Due to the use of the Stokes drag force FSt in obtaining
γ, Eq. (9) with said γ describes the relaxation only in
the intermediate regime between the Stokes and the non-
Stokes ones. Therefore, by ﬁtting the relaxation curve of
the swimmer with Eq. (9), the intermediate regime can
be identiﬁed. This can then also be used to determine
the swimmer’s eﬀective hydrodynamic radius reﬀ, by us-
ing Eq. (10) to ﬁnd reﬀ once γ has been identiﬁed from
the ﬁt to Eq. (9). This procedure can be used for other
mechanical microswimmers such as in [3, 6] which can be
viewed as oscillators.

Swimmer eﬀective radius.

In order to check the valid-
ity of the method, we ﬁrst ﬁnd the eﬀective hydrodynamic
radius reﬀ for our swimmer from theory. For negligibly
small oscillation amplitudes, i.e. to the zeroth order in
di/lj, the reﬀ for the swimmer over a cycle is the same
as that of the equilibrium conﬁguration moving rigidly
with a constant velocity. Such a rigid conﬁguration is
obtained for our swimmer when the driving forces on the

p-4

When do microswimmers exit the Stokes regime?

Fig. 4: Relaxation of swimmer for diﬀerent driving force amplitudes.

three spheres, allowed to have diﬀerent radii, are propor-
tional to the radii. The velocity of motion can then be
calculated using the Stokes-Oseen force-velocity relations,
and the ratio of the total driving force and the velocity,
appropriately normalized, gives the eﬀective radius of the
swimmer. This gives to the ﬁrst order in ri/lj (see SI),

(cid:26)

(cid:20)

(cid:18) 1
(cid:18) 1

r1

l1

1
2

1 +

(cid:19)

+ r3

(cid:19)
(cid:19)(cid:21)(cid:27)

1

+

l1 + l2

1
reﬀ

=

r1 + r2 + r3

1

(cid:18) 1

+ r2

+

1
l2

l1

+

1
l2

l1 + l2

(11)

,

where the general form of the expression for unequal ri’s
and li’s is presented. Ref. [36] states the eﬀective radius of
the three-sphere swimmer for the case of equal ri = r and
li = l. To the ﬁrst order in r/l and zeroth order in di/lj,
the formula therein agrees with Eq. (11) and gives reﬀ =
6rl/(5r + 2l). For our swimmers, with r = 6.0 × 10−6 m
and l = 3.2× 10−5 m, this results in reﬀ = 1.23× 10−5 m.
Intermediate regime for the three-sphere swimmer. As
described before, we turn oﬀ the driving forces on our
swimmer in the steady state, for each simulation marked in
Fig. 3, and then compare the relaxation curves to Eqs. (9)
and (10). Fig. 4 shows the relaxation obtained from sim-
ulation (blue dotted curve) and the ﬁt to this curve using
Eq. (9) (orange solid curve) for three diﬀerent force am-
plitude values. In each case, the ﬁt parameters are chosen
such that they minimise the error to the simulation curve
in the initial part of the relaxation, i.e. from the initial
point on the left to the ﬁrst local minimum.
The middle simulation in Fig. 4, with a force amplitude
of 1.86 × 10−5 N, shows perfect agreement with the theo-
retically predicted relaxation curve based on Eq. (9), and
thus identiﬁes the transition between the Stokes and the
non-Stokes regimes. For the smallest force amplitude of
3.71 × 10−6 N (leftmost plot, Fig. 4), the swimmer’s mo-
tion after the ﬁrst local minimum is much more damped in
the actual simulation (blue dotted) curve than in the ﬁt-
ted (solid orange) curve. In contrast, for the largest force
amplitude value of 3.71 × 10−5 N (rightmost plot, Fig. 4),
the damping seen in the simulation is weaker than as an-
ticipated by the ﬁtted curve. This behaviour is consistent
with the notion of the swimmer’s motion going from over-
damped to underdamped as the driving forces increase.

Fig. 5: Eﬀective radius of swimmer for diﬀerent force ampli-
tudes, as determined by relaxation after force cut-oﬀ. Only
the simulations in the intermedite regime are expected to repro-
duce the theoretically predicted value of 1.23×10−5 m (marked
by a dashed red line).

The determination of the transition regime is conﬁrmed
when one uses Eq. (10), with the value of γ found from
the ﬁts based on Eq. (9), to calculate the eﬀective ra-
dius reﬀ of the swimmer in each simulation (Fig. 5). The
simulation with force amplitudes equalling 1.86 × 10−5 N
leads to an reﬀ value which matches very well the theo-
retically expected value of 1.23 × 10−5 m. In general, the
reﬀ value found from simulations increases monotonically
as the driving forces increase, because the parameter γ
found from Eqs. (9) and (10) initially underestimates and
then overestimates the actual damping in the simulations.
It is interesting to compare the Reynolds numbers in the
diﬀerent simulations. We measure not just the Reynolds
number of the entire swimmer, but also that of the three
individual spheres (Table 2 in the SI). These are de-
ﬁned respectively as Reswim = uswim lswim/ν, and ReSi =
uSi lSi /ν (for i = 1, 2, 3). Here lswim is the rest length
of the swimmer along the direction of motion, equalling
76 lattice cells, uswim is the swimmer’s velocity in the last
full cycle, uSi denotes the maximum velocity of the ith
sphere during the last cycle and lSi is a sphere’s diameter,
equalling 12 lattice cells. We ﬁnd that the Reynolds num-
bers increase monotonically with the driving force, and,
more interestingly, that they remain small across all the
simulations. In particular, for the simulation in the inter-
mediate regime (i.e. with force amplitudes 1.86 × 10−5 N)
the swimmer Reynolds number is Reswim = 0.015, while

p-5

K. Pickl et al.

the simulation in the non-Stokes regime (with force am-
plitudes 3.71 × 10−5 N) has Reswim = 0.064. This shows
the narrowness (in terms of the Re value range) of the in-
termediate regime, and underscores the fact that inertial
eﬀects for the swimmer set in at low Reynolds numbers
much smaller than 1.

Conclusions. – We have studied the motion of the
three-sphere microswimmer when inertial inﬂuences on
its motion start becoming signiﬁcant. We have simu-
lated the swimmer under the action of increasing driv-
ing forces, using a framework which combines the lattice
Boltzmann-based waLBerla system and the rigid body
engine pe. By comparing with theory at small values of
the Reynolds number (below 10−2) we have shown the
suitability of the simulation system for studying the mi-
croswimming motion. For increasing Reynolds numbers,
the theoretical analysis starts to be inapplicable, as non-
Stokesian eﬀects in the motion become visible.
In this
case we have based our analysis on the simulations, and
determined the limits of the Stokes regime by combin-
ing the Stokes force law with the expected trajectory of
an underdamped harmonic oscillator. The eﬀective hy-
drodynamic radius of the swimmer obtained in this way
agrees excellently with the theoretical value, indicating
that the method may be used to determine the eﬀective
radius of any mechanical microswimmer driven by elastic
shape changes. We have found that the swimmer is in
the Stokes regime for Re (cid:46) 10−2, and in the non-Stokes
regime for Re (cid:38) 5 × 10−2. These values are smaller than
the often-assumed bound of Re ≤ 1 for microswimmers,
and smaller also than previous estimates in the literature.

∗ ∗ ∗

The work was supported by konwihr under the project

ParSwarm.

REFERENCES

[1] Berg H. C., E. coli in Motion (Springer-Verlag New

York) 2004.

[2] Guasto J. S., Johnson K. A. and Gollub J. P., Phys.

Rev. Lett., 105 (2010) 168102.

[3] Purcell E. M., Am. J. Phys., 45 (1977) 3.
[4] Najafi A. and Golestanian R., Phys. Rev. E, 69

(2004) 062901.

[5] Dreyfus R., Baudry J., Roper M. L., Fermigier
M., Stone H. A. and Bibette J., Nature, 437 (2005)
862.

[6] Avron J. E., Kenneth O. and Oaknin D. H., New J.

Phys., 7 (2005) 234.

[7] Baraban L., Tasinkevych M., Popescu M. N.,
Sanchez S., Dietrich S. and Schmidt O. G., Soft
Matter, 8 (2012) 48.

[8] Yeomans J., Pushkin D. and Shum H., Eur. Phys. J.

Special Topics, 223 (2014) 1771.

[9] Happel J. and Brenner H., Low Reynolds Number Hy-

drodynamics (Springer Netherlands) 1983.

[10] Koch D. L. and Subramanian G., Annu. Rev. Fluid

[11] Lauga E. and Powers T. R., Rep. Prog. Phys., 72

Mech., 43 (2011) 637.

(2009) 096601.

[12] Elgeti J., Winkler R. G. and Gompper G., Rep.

Prog. Phys., 78 (2015) 056601.

[13] Ngo V. and McHenry M. J., J. Exp. Biol., 217 (2014)

72740.

[14] Childress S., Mechanics of swimming and ﬂying (Cam-

bridge University Press) 1981.

[15] Pooley C. M. and Yeomans J. M., Comp. Phys. Com-

mun., 179 (2008) 159.

[16] Pickl K., Hofmann M., Preclik T., Köstler H.,
Smith A.-S. and Rüde U., in Parallel Computing: Ac-
celerating Computational Science and Engineering (CSE)
Vol. 25 of Advances in Parallel Computing (IOS Press)
2014 pp. 395–404.

[17] Feichtinger C., Donath S., Köstler H., Götz J.

and Rüde U., J. Comput. Sci., 2 (2011) 105 .

[18] Feichtinger C., Habich J., Köstler H., Hager
G., Rüde U. and Wellein G., Parallel Computing, 37
(2011) 536 .

[19] Köstler H. and Rüde U., IT - Information Technology,

[20] Iglberger K. and Rüde U., Multibody Syst. Dyn., 25

55 (2013) 91.

(2011) 81.

[21] Aidun C. K. and Clausen J. R., Annu. Rev. Fluid

Mech., 42 (2010) 439.

[22] Succi S., The Lattice Boltzmann Equation - For Fluid

Dynamics and Beyond (Clarendon Press) 2001.

[23] Qian Y. H., d’Humières D. and Lallemand P., EPL,

17 (1992) 479.

[24] Ginzburg I., Verhaeghe F. and d’Humières D.,

Commun. Comput. Phys., 3 (2008) 427.

[25] Godenschwager C., Schornbaum F., Bauer M.,
Köstler H. and Rüde U., in proc. of Proceedings of
the International Conference on High Performance Com-
puting, Networking, Storage, and Analysis SC’13 (ACM)
2013 pp. 35:1–35:12.

[26] Cundall P. A. and Strack O. D. L., Géotechnique,

[27] Preclik T. and Rüde U., Comp. Part. Mech., 2 (2015)

29 (1979) 47.

173.

[28] Pickl K., Götz J., Iglberger K., Pande J., Mecke
K., Smith A.-S. and Rüde U., J. Comput. Sci., 3 (2012)
374.

[29] Götz J., Iglberger K., Stürmer M. and Rüde U.,
in proc. of Proceedings of the 2010 ACM/IEEE Interna-
tional Conference for High Performance Computing, Net-
working, Storage and Analysis SC ’10 (IEEE Computer
Society) 2010 pp. 1–11.

[30] Ladd A. J. C., J. Fluid Mech., 271 (1994) 285.
[31] Ladd A. J. C., J. Fluid Mech., 271 (1994) 311.
[32] Yu D., Mei R., Luo L.-S. and Shyy W., Prog. Aerosp.

Sci., 39 (2003) 329.

[33] Iglberger K., Thürey N. and Rüde U., Comput.

Math. Appl., 55 (2008) 1461.

[34] Pande J., Merchant L., Krüger T., Harting J. and

Smith A.-S., arXiv, (2014) arXiv:1411.5723.

[35] Pande J. and Smith A.-S., Soft Matter, 11 (2015) 2364.
[36] Golestanian R. and Ajdari A., Phys. Rev. E, 77

(2008) 036308.

p-6

