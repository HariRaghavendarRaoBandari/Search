Incompatibility boundaries for properties of community partitions

A. Browet and J.M. Hendrickx

Universit´e catholique de Louvain, ICTEAM institute

INRIA Paris (QUANTIC lab) & Ghent University (Data Science Lab)

A. Sarlette

We prove the incompatibility of certain desirable properties of community partition quality func-
tions. Our results generalize the impossibility result of [Kleinberg 2003] by considering sets of weaker
properties. In particular, we use an alternative notion to solve the central issue of the consistency
property. (The latter means that modifying the graph in a way consistent with a partition should not
have counterintuitive eﬀects). Our results clearly show that community partition methods should
not be expected to perfectly satisfy all ideally desired properties.

We then proceed to show that this incompatibility no longer holds when slightly relaxed ver-
sions of the properties are considered, and we provide in fact examples of simple quality functions
satisfying these relaxed properties. An experimental study of these quality functions shows a be-
havior comparable to established methods in some situations, but more debatable results in others.
This suggests that deﬁning a notion of good partition in communities probably requires imposing
additional properties.

PACS numbers: 89.75.Fb, 89.75.Hc, 05.10.-a, 89.65.-s, 87.23.Ge, 89.20Hh, 87.53.Wz

6
1
0
2

 
r
a

M
2

 

 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 

1
v
1
2
6
0
0

.

3
0
6
1
:
v
i
X
r
a

I.

INTRODUCTION

2

In the rich literature about deﬁning communities in graphs, two major and complementary approaches are the
proposal of particular criteria deﬁning communities and the identiﬁcation of axioms that should reasonably be satisﬁed
by such criteria, in particular by value functions that the optimal partition should maximize. When confronting the
two approaches, the popular clustering criteria all fail to satisfy at least one of the reasonable axioms. For instance,
the popular modularity criterion [40] is neither local (i.e. the optimal partitioning of a subset of nodes does depend
on the whole graph) nor consistently improving (i.e. an optimal community partitioning for a given graph can loose
its optimality when strengthening intra-community links and weakening inter-community links).

In fact Kleinberg [36] has proved that it is impossible for a function F associating a community partition to any
weighted graph[41] to simultaneously satisfy the three following properties, although getting two of them separately
is easy:

• Richness: given any partition of the nodes Σ, there exists at least one graph for which F returns Σ as the

unique[42] associated partition;

• Scale-invariance: given any graph, multiplying all the edge weight by a constant does not change the partition

returned by F ;

• Consistency:

if F returns a partition Σ for a graph G, then it also returns Σ for any graph G′ obtained by
increasing the weight of intra-communities edges and decreasing the weight of inter-communities edges with
respect to Σ.

The last property means that modifying a graph in a way “consistent” with its associated community partition, by
increasing links inside communities and decreasing links between communities, should lead to a graph with the same
community partition. Despite its natural formulation, this property is actually debatable [51], and we will see in
Section II that it has counterintuitive consequences.

Other recent approaches have run into similar barriers, e.g. the hierarchy-based axioms in [31] would not admit
scale invariance; the various subgraph-based alternatives in [44] and [35] do not return a single partition per graph,
and in fact for any graph they return among others the single community encompassing the entire node set, hence
failing richness. More examples will be covered later.

In this paper, we begin by presenting two generalizations of the result of [36] in a more ﬂexible framework where
a value function evaluates the quality of each community partition for a graph (as opposed to considering a function
that directly associates a community partition to each graph). The “best” partition associated to a graph can then
be obtained by optimizing this value function over all possible partitions, but “suﬃciently good” partitions can also
be computed when an exact solution to this generally hard optimization problem is out of reach. This approach is
followed in [51], and is consistent with many well-known community partition methods, as those listed in Table II in
Section II.

Our ﬁrst main result (Section III) shows the impossibility of satisfying richness, scale-invariance and (together with
some continuity assumption about the value function) a much weaker form of consistency than in [36], which we
argue appears more natural. In our second impossibility result, the consistency requirement is removed altogether
and replaced by some locality axiom, forbidding modiﬁcations in one part of a graph to aﬀect the (relative) quality
of communities in another part of the graph.

We further add some insight to these impossibility results. The problem can be pinpointed to the request, for
richness, to make both the unique “all-encompassing” partition optimal for some graph, and the “all-singletons”
partition optimal for some other graph. If we drop the all-singletons partition from the richness requirement, then
value functions satisfying all the axioms can be constructed, as we show by providing actual examples (Section IV).
It turns out that in previous papers which try to circumvent Kleinberg’s impossibility result, this distinction is made
implicitly. For instance in [27], the authors propose to circumvent Kleinberg’s impossibility by imposing similar axioms
on a value function for partitions instead of directly on the “clustering function” F . Our variant of the impossibility
theorem precisely shows that this does not resolve the impossibility. However, the value function proposed in [27] is
undeﬁned for the “all-singletons” partition, and we identify that this is the key relaxation. In [28], the authors discuss
and compare alternatives by incidentally restricting themselves to k-clustering, and [52] considers the special case of
bi-partitions. In the light of our result, ﬁxing k is just a way to satisfy the suﬃcient relaxation, i.e. excluding either the
all-singletons or the all-encompassing partition (and many others). In all those cases, this simple implicit relaxation
of excluding the all-singleton partition (and possibly others) is in fact suﬃcient and the key step to allow satisfying
Kleinberg’s set of axioms. In this sense, the present paper establishes a clear and possibly practically relevant way
to circumvent the impossibility. Another point is that Kleinberg’s impossibility refers to graphs without self-loops.
Some previous investigations, like e.g. [51], let self-loops play an instrumental role. In that case there are more options

3

for constructing optimal graphs towards richness. We can in fact state that our example value functions, proposed in
Section IV, satisfy all the axioms of Kleinberg if we allow for self-loops.

We stress that this paper implies no value judgment about clustering criteria which fail to satisfy some of the
proposed axioms (including the assumption about no self-loops). To the contrary, the impossibility results clarify
that it is hopeless to look for value function-based criteria satisfying all the axioms. It is hence perfectly unavoidable
to select a subset of axioms, and one reasonable selection criterion is to get the most useful results. One defensible
viewpoint is to exclude some partitions as a priori irrelevant, e.g. partitions containing almost only isolated nodes.
Along this line, we analyze, in Section V, the partitions obtained using one of the proposed value functions which
satisﬁes all the axioms except strict richness for partitions involving singletons. Although our proposed value functions
turn out to have strong similarities with the sum of community strengths and especially with the modular density,
introduced respectively in [38, 39], they satisfy stronger axiomatic properties. Moreover, we use a more general way
of normalizing the contribution of each community, allowing for some additional ﬂexibility. The conclusion of our
experimental investigation is that only particular tuning of our value function parameters leads to results that are
compatible with expectations on benchmark problems. Hence, satisfying the “standard” axioms considered here is
not a guarantee for more relevant results.

Towards the future, our results hence not only clarify that the set of historically proposed axioms cannot be kept
in its most general form; they also highlight the need to add compatible axioms that would isolate a most useful set of
value functions, since our own examples satisfy a minimally relaxed set of axioms, yet they still leave a design freedom
among which far from all choices behave as intuitively desired.

II. PROPERTIES OF QUALITY FUNCTIONS

As mentioned in the introduction, there are diﬀerent ways of specifying what a good partition in communities is
[33, 48]. One can for example directly specify the properties that the (best) partition should have, or the algorithm to
obtain it, as in the framework of [40]. We follow here the popular and more ﬂexible option [51] of deﬁning a quality
measure of a given partition into communities for any given weighted graph. The best partition into communities is
then the one maximizing the quality function. This optimization problem is often computationally challenging [29],
but the use of a quality function deﬁned for all partitions allows using heuristic methods to compute relatively good
partitions.

More formally, we consider weighted symmetric graphs G(V, W ) without self-loops, where V = {1, . . . , N } is the
set of nodes, N being the number of nodes, and W the set of weights Wij = Wji ≥ 0 (with Wii = 0). When
Wij > 0, we say that i and j are connected or that (i, j) = (j, i) is an edge, and it will sometimes be convenient to
refer to the set E of edges, which is entirely determined by W . A partition σ of V into communities corresponds
to an assignment of each node i ∈ V to a community label σi ∈ {1, . . . , nc}, where nc depends on the partition σ.
The partition induces communities c1, . . . , cnc deﬁned by ck = {i|σi = k} and whose cardinality, i.e. the number of
nodes within the community, is denoted |ck|. We sometimes use the Kronecker delta δ (σi, σj) = 1 if σi = σj , and
0 otherwise, to express whether i and j belong to the same community. We denote by sint
(resp. sext
connecting node i to nodes in the same (resp.

i = Pj∈V Wij δ (σi, σj)
i = Pj∈V Wij (1 − δ (σi, σj))) the internal (resp. external) strength of node i, i.e. the sum of edge weight

strength of node i, and m =Pi∈V si which equals twice the total weight of the graph.

We then consider a value (or quality) function f (G, σ), that represents the quality of the community partition
σ on the graph G. A classical example is Newman’s Modularity [40], deﬁned for a weighted undirected graph as
Q(G, σ) = 1

in any other) community, si = Pj∈V Wij = sext

m Pi,j∈V (cid:0)Wij − si sj

m (cid:1) δ (σi, σj), which measures the diﬀerence between the actual fraction of edges falling

inside the communities and the expected fraction of such edges under the conﬁguration null model with respect to
the partition. Since the graph is entirely determined by the matrix of weights W , we will sometimes abuse notation
and refer to f (W, σ).

i + sint

i

the total

Following the approach of [51], we now list some properties that are considered desirable for value functions. These
properties are either taken or adapted from [51]. The ﬁrst property is relatively natural towards ensuring robustness
of conclusions with respect to the data, and towards providing favorable settings for community-ﬁnding algorithms.

Property 1 (Continuity). For any community partition σ, the value function f is continuous with respect to the
weights W .

Thus property 1 excludes quality functions that would heavily rely on the presence or absence of an edge without
considering its weight. Strictly speaking, the impossibility proofs later in the paper only require continuity “at
potential optimal W, σ combinations”. As this is diﬃcult to guarantee a priori and questionable for practical purposes,
we here require full continuity.

4

The second property requires that only the ratio of weights on diﬀerent edges is relevant, as far as clustering

decisions are concerned.

Property 2 (Scale invariance). For any graph G(V, W ), community partitions σ, σ′ of V and α > 0, the following
implication holds:

f (W, σ) ≥ f (W, σ′) ⇒ f (αW, σ) ≥ f (αW, σ′),

(1)

or equivalently[43] f (W, σ) > f (W, σ′) ⇒ f (αW, σ) > f (αW, σ′).

Scale-invariance induces that the communities should not depend on an exogeneous threshold value for individual
edge weights. Value functions like the adaptive scale modularity [51], or the constant Potts model [50] are therefore
not scale invariant.

The next property represents the fact that the community partition of one part of the graph should not be aﬀected
by the structure of other parts of the graph. It is notably not satisﬁed by the modularity, which suﬀers from the
well-known resolution limit [34, 50], or in general when the clustering is inﬂuenced by the average weight in the graph.
Diﬀerent notions of locality can be proposed and we use the following.

Property 3 (k-locality). Given k ∈ {0, 1}, consider two graphs G1(V, W (1)) and G2(V, W (2)) whose restriction to a
subset of nodes V0 and its neighbors at distance k is identical, that is: W (1)
for all i, j ∈ V0 and, if k = 1, for
all i, j for which either i or j belongs to V0. Consider then a community partition σ for which C0 = {i |i ∈ V0 } is a
community, and another community partition σ′ exactly identical to σ except that the community C0 is split in two
communities C01 and C02. Then there holds

ij = W (2)

ij

f (W (1), σ) ≥ f (W (1), σ′) ⇔ f (W (2), σ) ≥ f (W (2), σ′)

(2)

Zero-locality thus means that the decision of splitting a community C0 into two communities only depends on the
weights of edges incident to nodes within C0. The weaker notion of 1-locality would allow this decision to also depend
on the edges incident to one node of C0 and one node outside C0. A similar case appears in the deﬁnition of “locality”
in [51] for instance. In the deﬁnition of [51] however, G1 and G2 are allowed to have diﬀerent node sets V (1), V (2) and
C0 might be split in an arbitrary way in both σ and σ′. One could also request {W (1)
: j ∈ V (2)}
for each i ∈ C0, without requiring that the endpoints j of each edge match in G1 and G2. Such locality notions would
impose condition (2) on a larger class of situations with respect to our deﬁnition of Property 3. Thus our deﬁnition
is a weaker property, easier to satisfy, hence providing a stronger impossibility result. When proposing cost functions
that do satisfy locality in Section IV, we will show that they actually satisfy stronger notions of locality.

: j ∈ V (1)} = {W (2)

ij

ij

The next property excludes value functions for which some “relevant” partitions would never be optimal, indepen-
dently of the graph. At this stage, we abstractly deﬁne the set Σ of relevant partitions, which would typically depend
on the application.

Property 4 (Richness, with respect to a set of partitions Σ). For any partition σ ∈ Σ of a set V of nodes, there
exists a graph G(V, W ), for which σ is a strictly optimal community partition: f (G, σ) > f (G, σ′)

∀σ′ ∈ Σ \ {σ} .

Again, a stronger property could be stated by comparing to all partitions σ′ instead of only those in Σ. This makes
no real diﬀerence for our results since our impossibility results in section III consider Σ to be the set of all partitions,
and the proposed value functions in section IV would also satisfy this stronger version of Property 4.

The properties introduced so far do not imply that nodes inside a community should be more connected to each
other than to those outside of the community, which corresponds to the general intuitive idea of community partition.
In order to formalize this idea, we introduce the notion of consistent improvement as in [51]. Consider a graph
G(V, W ) and a community partition σ. We say that G′(V, W ′) is a consistent improvement of G(V, W ) with respect to
σ if W ′
ij ≤ Wij for all i, j for which σi 6= σj . Compared to G, the graph
G′ thus has links that are stronger inside the communities deﬁned by σ and weaker between these communities.

ij ≥ Wij for all i, j for which σi = σj; and W ′

Even with this notion, it turns out to be non-trivial to formalize the fact that the dependence of partitions on

weights should be consistent with our intuitive idea of communities.

A natural formulation would be that an optimal partition should remain optimal for all consistent improvements
of the graph with respect to this partition. This “absolute consistency” requirement is the one used in Kleinberg’s
impossibility result [36]. But this condition actually has counterintuitive consequences, as illustrated on Figure 1.
Consider indeed a graph G with a clique of four nodes {1, 2, 3, 4} all connected one to each other by edges of similar
weights. Intuitively, one would want to consider this clique as a community in the optimal partition σ. Now any
graph obtained by strongly increasing the weights of the edges (1, 2) and (3, 4) is a consistent improvement of G with
respect to this partition. If these weights are suﬃciently increased however, we argue that partitioning those four
nodes into two communities {1, 2} and {3, 4} would be more natural. This would however not be allowed by “absolute

1

2

3

4

>

1

2

3

4

5

imposed only by

absolute consistency

3

4

>

1

2

imposed by relative

and absolute consistency

3

4

>

1

2

1

2

1

2

3

4

3

4

Figure 1. Illustration of the diﬀerence between (top) “absolute” consistency requirement [36] and (bottom) “relative” consis-
tency requirement (Property 5). Symbol “>” denotes that the left partition is better than the right one.

consistency” (see Figure 1 top), which requires the community {1, 2, 3, 4} to remain optimal under this consistent
improvement. The impossibility proof by Kleinberg in fact relies precisely on this fact: if a partition belongs to the
richness set, then none of its sub-partitions can ever be optimal.

There is however a natural workaround when using value functions: a consistent improvement should increase the
value of a graph partition, but nothing forbids that the quality of another graph partition, consistent with the same
improvement, increases even more and supplants the initial partition. On the example of Figure 1, since the graph
modiﬁcation proposed on the top right is a consistent improvement for both the partition using {1, 2, 3, 4} and the one
using two separate communities {1, 2} and {3, 4}, this would impose no condition on their ordering. Therefore, in this
paper, we only require that the ordering between partition qualities is preserved when a graph modiﬁcation makes
a bad partition less consistent and a good partition more consistent, as illustrated on the bottom right of Figure 1.
This weaker requirement is similar to the relative monotonicity in [51] and we hence call it “relative consistency”.

Property 5 (relative consistent improvement). Consider two graphs G(V, W ), G′(V, W ′) and two partitions σ, σ′ of
V . Suppose that

(i) f (G, σ) > f (G, σ′),
(ii) G′ is a consistent improvement of G with respect to σ,
(iii) G is a consistent improvement of G′ with respect to σ′;

then f (G′, σ) > f (G′, σ′).

In the following sections, we establish strict results about the impossibility to deﬁne quality functions which satisfy
all the above properties. Table II lists how those properties are satisﬁed by some quality functions proposed in
the literature.
It is notable that none of them satisﬁes all properties, and we prove in Section III that this is
indeed impossible. Note that some proposals for community partitioning involve more complex constructions than
optimizing a value function. A simple variation is e.g. introducing constraints on admissible partitions in the spirit
of [44], which could be reformulated as violating continuity and restricting richness. Other examples can be more
diﬃcult to (minimally) ﬁt in the value function framework, and for the sake of simplicity we choose to not include
any of them in the table below.

Remark: To conclude this section, we would like to insist on two points about the freedom allowed by the introduced
properties.

R1. All our properties (with the exception of continuity) essentially state that the ordering of partitions according to
increasing values of f must be invariant under some graph transformations, but say nothing about the actual values of
f when the graph changes. This does not preclude that e.g. referring to property 3 (locality) the change in value from
f (W, σ) to f (W, σ′) depends on weight values outside C0 and its neighbors, as long as this dependence does not aﬀect
the ordering f (·, σ) > f (·, σ′). This ordering-based approach allows more ﬂexibility in the expression of the accepted
value functions. One could of course consider analog but stronger properties about the values of f . In particular,

Modularity [40]

Adaptative scale modularity [51]

Constrained q-states Potts model [45]

Constant Potts model [50]

Modularity density [38]

Sum of community strengths [39]g

Label Propagation [49]

Map Equation [47]

f (W, σ)

σi=σj

1

nc

[Wij] − βPnc

mPi,j∈V (cid:0)Wij − si sj
Pk=1(cid:20) Pσi=σj =k Wij
α Pi,j∈V
Pi,j∈V
Pk=1
Pnc
Pi,j∈V

sint
i −sext
sint
i +sext

|ck | Pi∈ck

Pi∈σk
Pi∈σk

[Wij − γ]

[Wij]

σi=σj
nc

1

k=1

i

i

sint
i − sext

i

m (cid:1) δ (σi, σj)

M +γvk

M +γvk(cid:17)2(cid:21) , vk = Pσi=k

−(cid:16) vk
k=1 [|ck| (|ck| − 1)]

j∈V

σi=σj
optimal coding of random walk

Wij

e
c
n
a
i
r
a
v
n

i

e
l
a
c
S

y

y
t
i
l
a
c
o
l
-
k

n

y
c
n
e
t
s
i
s
n
o
c

.
l
e
R

n

s
s
e
n
h
c
i
R

l
l

u
F

na

∼b

k = 1

∼c

∼d

n

n

y

y

y

y

k = 0

y

k = 0

∼e

k = 1

k = 1

k = 0

n

nf

nf

n

nf

y

y

y

y

y

?

y
t
i

u
n
i
t
n
o
C

y

y

y

y

y

y

y

yh

a Σ must exclude all partitions that contain an isolated node.
b Yes for M = 0
c Yes for γ = 0 at least. No for M = 0, nor for γ ≥ 1 (note that the authors reach another conclusion with self-loops.)
d Yes for γ ≥ 2, as claimed by authors
e Yes for γ ≥ 0
f Σ must exclude at least all partitions with more than one singleton community.
g Those authors add a positivity constraint; we here consider it without constraints.
h for connected graph

Table I. Properties satisﬁed by quality functions.

6

7

one can verify that the following properties are suﬃcient but not necessary for satisfying their weaker order-based
counterpart:

[value-scale invariance] For any W, σ and α > 0, we have f (αW, σ) = a(α) f (W, σ) for some monotonically increasing

function a(α) > 0.

[value-k-locality] Consider two graphs G1(V, W (1)) and G2(V, W (2)) whose restrictions to a subset of nodes are
identical as in Property 3; and partitions σ, σ′ which are identical except possibly on C0 and for both of which C0 is
a union of communities. Then

f (G1, σ) − f (G1, σ′) = f (G2, σ) − f (G2, σ′) .

[value-consistent improvement] Let G(V, W ′) be a consistent improvement of G(V, W ) with respect to a community

partition σ, then f (G′, σ) ≥ f (G, σ).

R2. We do not impose invariance under permutation of the nodes as in [51]. This means that the value functions
could depend on the particular labels of the nodes, which does allow using prior knowledge on the community
partition. For instance, to reinforce the value of having two particular nodes i, j in the same community, we can
deﬁne fp(W, σ) = f (W ′, σ) where W ′
i,j = Wi,j for all other i, j. If f satisﬁes some
of the above properties, then the same properties are satisﬁed by fp(W, σ).

1,2 = pW1,2 for some p ≫ 1 and W ′

In the sequel, our impossibility results in Section III allow all this freedom, while the value functions which we
introduce as feasibility examples in Section IV do satisfy the stronger value-based properties of R1 and are independent
of node labels.
In this sense, the distinction of the “extra freedom” in R1 and R2 allows no extra margin in the
impossibility and possibility results proposed in the present paper.

III.

IMPOSSIBILITY RESULTS

We now provide two extensions to Kleinberg’s result [36] about incompatible axioms for community partition
based on optimizing a cost function. Our ﬁrst result replaces the absolute notion of consistency used in [36] by our
relative one, Property 5 (together with the continuity assumption of Property 1, related to the quality-function based
framework we use). Our second result shows that even when dropping the axiom of consistent improvement, it is
impossible to satisfy all the other axioms if 0-locality is required.

In Section IV, we will further identify richness as a central culprit for these impossibilities. Indeed, we will provide
explicit value functions which show that the axioms can all be satisﬁed if richness is required with respect to all
except a few particular partitions. Furthermore, we will see that these value functions satisfy all the axioms, including
full richness, if the latter is allowed to exploit graphs with self-loops. The impossibility result `a la Kleinberg indeed
applies to the setting without self-loops.

The next lemma, stating that graphs for which a partition is strictly optimal can always be assumed to have positive

weights Wij > 0 on all pairs of nodes, will be useful in the sequel. The proof is available in Appendix A.

Lemma 1. Let f be a value function satisfying Property 1 on continuity with respect to W , and let G(V, W ) be a
graph for which a partition σ is strictly optimal: f (G, σ) > f (G, σ′) for all σ′ 6= σ. Then there exists a δ > 0 such
that σ is also strictly optimal for any graph G(V, W ′) with |W ′

ij − Wij | < δ for all i, j.

In particular, there exists an open set of graphs G+(V, W +) for which σ is also strictly optimal and for which
ij > 0 for all i 6= j.

W +

Continuity is required only through this essential implication in the proofs of two main results presented in this

Section.

III.1. Generalizing Kleinberg’s impossibility result

Theorem 1. There is no value function satisfying properties 1 (continuity), 2 (scale invariance), 4 (richness) with
respect to all partitions, and 5 (relative consistent improvement). This holds true even if the value function is only
required to be deﬁned for a speciﬁc number of nodes N > 1.

More particularly, we prove the impossibility if the richness set Σ must contain both the partition in one community

to which all nodes belong, and the partition in N singleton communities.

Proof. We consider any set V of N > 1 nodes and any value function satisfying the four properties mentioned in the
statement of the result, and derive a contradiction.

8

Let σg be a partition in one community to which all nodes belong, and σs a partition in N singleton communities.
Let then Gg(V, W g) and Gs(V, W s) be graphs for which the respective partitions σg and σs are optimal; these graphs
exist from the richness Property 4. In particular f (W s, σs) > f (W s, σg) and f (W g, σg) > f (W g, σs). Moreover,
we can assume W s
ij > 0 for all i, j thanks to Property 1 (continuity) which implies Lemma 1. There exists
thus a ρ > 1 such that ρW s
ij for all i 6= j. By scale invariance, f (W s, σs) > f (W s, σg) implies then that
f (ρW s, σs) > f (ρW s, σg).

ij ≥ W g

ij , W g

ij ≥ W g

Since ρW s

ij for all i 6= j, observe that ρW s is a consistent improvement of W g for σg, since it corresponds
to increasing the weights of edges which are all trivially within the unique community of σg. Similarly, W g is a
consistent improvement of ρW s for the partition σs into N singleton communities, as it corresponds to decreasing
the weights of edges between these communities. It follows then from f (ρW s, σs) > f (ρW s, σg) and Property 5 that
f (W g, σs) > f (W g, σg), in contradiction with the optimality of σg for W g i.e. f (W g, σg) > f (W g, σs).

Note that Theorem 1 does not mention any locality requirement. Before trying to ﬁnd a value function satisfying
locality, we must anyways ﬁrst relax some of the other axioms. Possibilities in this direction are outlined in Section
IV. Yet before this we present an impossibility result with another set of properties.

III.2.

Impossibility due to locality instead of consistent improvement

In the light of the impossibility result of the previous section, it is relevant to relax some assumptions or replace
them by weaker or alternative versions. One candidate property could be the consistent improvement. We have
indeed seen that absolute consistency can have problematic consequences, and it could be that our version of relative
consistency is still too restrictive. Besides, it is not satisﬁed by some famous community partition methods such as
the modularity maximization (see Table II).

This section however highlights a new impossibility, independent of any requirement related to consistent improve-
ment, and that would therefore need to be taken into account for any property replacing consistent improvement. We
remark that as consistent improvement is the only property of Section II that imposes the partition to correspond to
our intuitive notion of communities, this impossibility result is actually relevant for any arbitrary notion of value-based
partition.

Theorem 2. There is no value function satisfying properties 1 (continuity), 3 for k = 0 (0-locality), 2 (scale invari-
ance) and 4 (richness) with respect to all partitions. This holds true even if the value function is only required to be
deﬁned for a speciﬁc number of nodes N > 1.

More particularly, we prove the impossibility if the richness set Σ must contain a partition where two nodes form

one community and a partition where these same two nodes form two singleton communities.

Proof. We will again show that the properties mentioned in the statement of the theorem imply a contradiction, for
any set V of N > 1 nodes.

Consider two partitions σa, σb that are identical except that nodes 1 and 2 form one community in σa and form two
separate singleton communities in σb. By the richness property, there exists two graphs Ga(V, W a) and Gb(V, W b)
such that σa is the unique optimal partition for Ga and σb the unique optimal partition for Gb.
In particular,
f (W a, σa) > f (W a, σb) and f (W b, σb) > f (W b, σa).

It follows from the continuity property and thus Lemma 1 that the weights W a
1 and 2 in Ga and Gb respectively can both be assumed positive, so that ρ = W b
scale-invariance property, f (W a, σa) > f (W a, σb) implies then f (ρW a, σa) > f (ρW a, σb).

12 and W b
12/W a

12 of the edge connecting
12 > 0 is well deﬁned. By the

By deﬁnition of ρ, the restriction to {1, 2} of the graphs deﬁned by ρW a and W b are identical. Besides, remember
that σb is obtained from σa by only splitting the community {1, 2} in two singleton communities. Then because of
the 0-locality property, the inequality f (ρW a, σa) > f (ρW a, σb) implies f (W b, σa) > f (W b, σb), in contradiction with
the strict optimality of σb for Gb(V, W b).

IV. NEW VALUE FUNCTIONS

We have seen that none of the main value functions available in the literature satisfy all the desirable properties of
Section II, and that it is actually impossible to simultaneously satisfy their strict versions. We now show that slightly
weaker versions of these properties are not mutually incompatible, by providing examples of value functions satisfying
them. At this point we do not claim that these value functions lead to practically relevant community partitions;
we only design them to show the possibility of simultaneously satisfying the properties of Section II, when richness
excludes a few speciﬁc partition types.

9

We ﬁrst note that, when trying to follow a common approach in which the quality of a partition is computed by
summing the individual contributions of all edges or of all edges inside communities, it appears necessary to introduce
non-trivial scalings in order to simultaneously satisfy scale-invariance, locality and signiﬁcant richness properties. For
example, in the general framework introduced by Reichardt and Bornholdt [46], the quality function is expressed as

f (W, σ) = Pi,j(Wij − Nij) δ(σi, σj ) where Nij is the expected value of Wij in a given null model. This encourages

grouping nodes in a community if they are joined by an edge whose weight exceeds the threshold Nij. Now if this
threshold depends on exogenous parameters (e.g. a constant), then the value function f will typically not be scale-
invariant. On the other hand if the Nij are determined endogenously involving global graph properties (like say the
average node strength, as e.g. in the modularity [40]), then f is typically non-local: a modiﬁcation in any part of the
graph can change the value of Nij and therefore aﬀect the decision of having i and j in a same community or for
instance as isolated nodes. This only leaves the possibility to compute Nij from the weights of edges incident on i
and j. A simple example of such quality function would be modularity density as deﬁned in [38]:

1

fmd :=Xk

|ck| Xi∈ck(cid:0)sint

i − sext

i (cid:1) .

(3)

This is a Reichardt-Bornholdt-like version of the adaptive scale modularity from [51] with M = 0, satisfying scale-
invariance and 1-locality. It is not diﬃcult to prove that if σ is a partition with two isolated nodes, then fmd can
always be increased by grouping these nodes.

In the following, we show that by cleverly using community-size-dependent scalings in variations of fmd, one can
obtain a class of quality functions with stronger locality or larger richness set than fmd and than all the proposed
quality functions we are aware of.

We refer the reader to Section V for an experimental investigation of the partitioning behavior with those value

functions.

IV.1. Sum of “average” internal strengths

Our ﬁrst new value function is a re-scaled version of the sum over all communities of the internal strength of their

nodes:

fA(G, σ) = Xk=1...nc

1

R(|ck|) Xi∈ck

sint

i = Xk=1...nc

1

R(|ck|) Xi∈ck Xj∈ck

Wij,

(4)

where R is any nonnegative normalization function satisfying the following conditions: (i) R is strictly increasing, and
(ii) R(a)/a is nonincreasing. The class of possible R includes all functions R(a) = aβ for β ∈ (0, 1]. For β = 1 we are
just summing the average internal strengths of the communities.

Theorem 3. The value function fA deﬁned in (4) satisﬁes Properties 1 (continuity), 2 (scale-invariance), 3 for k = 0
hence also k = 1, Property 4 (richness) for the set Σ of partitions with at most one singleton community, and Property
5 (relative consistent improvement).

More precisely, fA satisﬁes the stronger properties of value-scale invariance, value-consistent improvement and
value-0-locality mentioned in Remark R1. The locality property may in fact be extended like in [51] to graphs G(1)
and G(2) with diﬀerent node sets and to σ, σ′ both containing arbitrary partitions of C0.

Proof. For a ﬁxed σ, the value of fA(W, σ) is a linear combination with positive coeﬃcients of the weights Wij of
edges inside the communities. It is therefore clearly continuous with respect to W and scale invariant, as fA(αW, σ) =
αfA(W, σ).

Regarding consistent improvement, consider weights W ′ for which W ′

ij ≥ Wij whenever σi = σj and W ′

ij ≤ Wij

otherwise. Then there holds

fA(W ′, σ) = Xk=1...nc

1

R(|ck|) Xi∈ck Xj∈ck

W ′

ij ≥ Xk=1...nc

1

R(|ck|) Xi∈ck Xj∈ck

Wij = fA(W, σ).

This proves value-consistent improvement as deﬁned in Remark R1, which is a suﬃcient condition for Property 5.

Regarding locality, it is straightforward to see that the following value-locality property from Remark R1 holds and
is suﬃcient to imply 0-locality: Given two graphs G1(V, W (1)) and G2(V, W (2)) with W (1)
for all i, j ∈ C0 ⊂ V ,
take any partition σ for which C0 is a union of communities. Consider σ′ exactly equal to σ except that C0 might be
partitioned diﬀerently into communities. Then

ij = W (2)

ij

fA(G1, σ) − fA(G1, σ′) = fA(G2, σ) − fA(G2, σ′) .

10

There remains to prove that fA is rich for the set Σ of partitions containing no more than one singleton community.
For any such partition σ∗, we deﬁne a graph consisting of disjoint cliques corresponding exactly to the communities:
j (and i 6= j) and Wij = 0 else. The strict optimality of σ∗ for this graph is shown in Appendix B.
Wij = 1 if σ∗
By Lemma 1 this automatically implies that the partition Σ∗ is strictly optimal for an open set of values of W .

i = σ∗

In terms of satisfying the properties of Section II, fA is at least as good as the modular density fmd; in particular,
as fA only comprises a positive term for each edge present inside a community, it satisﬁes the stronger property of
0-locality in conjunction with all the other axioms. This might appear surprising, considering e.g. Radicchi’s proposal
[44] that a community is expected to have stronger inside links than external links (the latter does not appear in fA
and seems to almost exclude 0-locality). Now, the academic properties satisﬁed by fA do not guarantee its practical
relevance, which we further investigate in Section V. The existence of fA probably hints at an insuﬃciency of the
listed properties towards guaranteeing relevant quality functions for community detection.

IV.2. Penalizing external strength

From an axiomatic viewpoint, the shortcoming of fA introduced in Section IV.1 is that a partition with several
singleton communities is never strictly optimal. It could however be relevant in practice to have several singleton
communities. The intuitive reason for the restricted richness of fA is the following: suppose that we want nodes 1
and 2 to form two singleton communities in a partition σ. Their internal strength would by deﬁnition be 0, so the
contribution of {1, 2} ⊂ V to fA(W, σ) would be 0. On the other hand, if we join them in a two-nodes community
to get the partition σ′, then their internal strength would be W12, and the contribution of {1, 2} ⊂ V to fA(W, σ′)
would be 2W12. Hence we get fA(W, σ′) ≥ fA(W, σ) for any W , such that σ cannot be strictly optimal.

To palliate this issue, we add in this section an incentive to keep certain weakly connected nodes in separate
singleton communities. More precisely, we will penalize every edge connecting a node i to other communities, with
a penalization weight that depends on the size of the community to which i belongs and that happens to be 0 if the
community only contains i.

Formally, for some ﬁxed parameter α > 0, we deﬁne the value function

(5)

(6)

fB(W, σ) =Xk
=Xk

1

R(|ck|) Xi∈ck(cid:0)sint

Xj∈ck
R(|ck|) Xi∈ck

1

i − α(|ck| − 1)sext

i (cid:1)

Wij − α(|ck| − 1)Xj6∈ck

Wij
 ,

where we remind that the normalization function is any positive increasing function for which R(a)/a is nonincreasing.
The next theorem shows that the particular penalization weight α(|ck| − 1) allows fB to be richer over a larger set
Σ than fA, and than the modular density fmd which is similar to fB but just with uniform penalization weight 1.
With respect to fA this richness is however achieved at a cost, since fB only satisﬁes 1-locality (as fmd does), while
fA satisﬁes 0-locality. By Theorem 1, irrespective of locality concerns, a further extension of the richness set Σ is not
possible unless other properties are further relaxed.

Theorem 4. The value function fB deﬁned in (5) satisﬁes Properties 1 (continuity), 2 (scale-invariance), 3 (locality)
with k = 1, Property 4 (richness) with respect to the set Σ of partitions containing at least one community with more
than one node, and Property 5 (relative consistent improvement).

More precisely, fA satisﬁes the stronger properties of value-scale invariance, value-consistent improvement and
value-1-locality mentioned in Remark R1. The locality property may in fact be extended like in [51] to graphs G(1)
and G(2) with diﬀerent node sets and to σ, σ′ both containing arbitrary partitions of C0.

Proof. Once the partition σ is ﬁxed, f (W, σ) is a linear function of the weights Wij , it is hence trivially continuous in
W and scale-invariant as fB(αW, σ) = αfB(W, σ).

Regarding consistent improvement, consider weights W ′ for which W ′

ij ≥ Wij for all i, j in the same communities

and W ′

ij ≤ Wij for other pairs i, j. Then for all i we have

Xi∈Ck Xj∈Ck
Xi∈Ck Xj6∈Ck

W ′

W ′

ij ≥ Xi∈Ck Xj∈Ck
ij ≥ Xi∈Ck Xj6∈Ck

Wij and

Wij .

Referring to the deﬁnition (5) this straightforwardly proves value-consistent improvement as deﬁned in Remark R1,
which is a suﬃcient condition for Property 5.

11

Regarding locality, it is straightforward to see that the following value-locality property from Remark R1 holds and
is suﬃcient to imply 1-locality: Given two graphs G1(V, W (1)) and G2(V, W (2)) with W (1)
for all i, j ∈ C0 ⊂ V
and for all i, j for which i or j belongs to C0, take any partition σ for which C0 is a union of communities. Consider
σ′ exactly equal to σ except that C0 might be partitioned diﬀerently into communities. Then

ij = W (2)

ij

fB(G1, σ) − fB(G1, σ′) = fB(G2, σ) − fB(G2, σ′) .

There remains to prove the richness property of fB. We do this in two steps. For a given partition σ of the node set
V , let V ∗ ⊂ V the nodes which do not belong to a singleton partition in σ and σ∗ the partition of V ∗ corresponding
to σ. First, we prove that the same construction as for fA, applied to the weights W ∗ between nodes V ∗, makes the
partition σ∗ of V ∗ optimal for fB, i.e. : for any i ∈ V ∗, let W ∗
j and Wij = δ otherwise, with small
δ > 0 selected by continuity. Second, we add (if necessary) the nodes of V \ V ∗ to this construction by taking Wi,j = ε
for all i ∈ V \ V ∗ and we show that for ε > 0 suﬃciently small this W makes σ strictly optimal. Details are given in
Appendix C.

ij = 1 if σ∗

i = σ∗

Remark: Before moving to further considerations, we must mention that both fA and fB would satisfy all the axioms,
including richness for all possible partitions of the graph nodes, if the graph was allowed to contain self-loops. Linearity,
scale-invariance and locality indeed remain trivially true if self-loops are added into W . Consistent improvement also
still holds with the same proof. Regarding richness, we know that particular graphs, in which all self-loops have zero
weight, already allow to make a large set of partitions strictly optimal. To make a partition with several isolated
nodes optimal, it suﬃces to construct the optimal weights for the partition without those nodes, and then complete
the graph by adding those nodes with each a strong self-loop and a very weak connection to any other node in the
graph.

IV.3. Relaxing consistent improvement

In Theorem 2 we have shown that even if consistent improvement is dropped, then it is still not possible to satisfy
all the other criteria including 0-locality and richness with respect to all partitions. If richness is relaxed, then fA
shows how also consistent improvement can be included. As a complement, the following value function shows that
it is possible to be rich with respect to all partitions and satisfy 1-locality instead of 0-locality:

fC(W, σ) =Xk

1

|ck|   Xi∈ck

sin

i ! − α|ck|(|ck| − 1) min

j∈ck, l∈V

Wlj! .

One can show that fC satisﬁes properties 1 (continuity), 3 with k = 1(1-locality), 2 (scale invariance) and 4
(richness) with respect to all partitions provided α > 1, while it then (unavoidably, from Theorem 1) fails to satisfy
Property 5 (relative consistent improvement).

We do not provide a formal proof here because, before claiming any usefulness for fC, it should be shown to satisfy
some accepted criterion which would distinguish community partitions from arbitrary partitions; in the absence of
such property, fC is left with the status of curiosity.

Accordingly, the main idea in the construction of fC, namely enlarging the penalty term to the minimum over all
edges connected to the community, both internal and external, is motivated by technical richness arguments and not
by intuitive community characteristics. Essentially, we observe that fB(W, σs) = fC (W, σs) = 0 for all W for σs
the all-singletons-partition. However, thanks to the modiﬁed penalty in fC, with Wij = 1 for all i, j ∈ V we have

fC(σ, W ) =Pk(|ck| − 1)(1 − α) < 0 for all σ 6= σs, hence the strict optimality of the all-singletons partition in that

case.

Invariance to symmetries

To conclude this Section, let us mention that the value functions fA, fB and fC are all independent of node labels,
see Remark R2. They hence trivially satisfy permutation invariance as deﬁned in [51], i.e.: if G features some isome-
tries then deﬁning σ′ by applying one of the associated isometries to an initial partition σ implies f (G, σ′) = f (G, σ).

The following Section experimentally investigates how useful the proposed value function fA and fB might be in

practical clustering applications.

V. EXPERIMENTS

Benchmark and methods

12

We have investigated the behavior of our value functions by optimizing them for typical graphs generated using
the popular LFR benchmark model [37]. This planted partitions method ﬁrst deﬁnes “prior communities” on a set of
nodes, and then generates a graph with edges preferentially inside these prior communities. It further ensures power-
law degree and community size distributions consistent with realistic networks. We have considered graphs with
N = 1000 nodes, an average degree k = 25 and community size in [10, 100]. Two additional parameters allow tuning
the signiﬁcance of the prior communities and therefore the diﬃculty of extracting them: µw the expected proportion
of the strength of each node connecting it to nodes outside its prior community, and µt the expected proportion of
edges (without taking their weight into account) connecting a node to nodes outside its prior community.

We optimize our values functions fA and fB with R(x) = xβ, for diﬀerent values of β ∈ [0, 1]. For this purpose,
we use the local optimization algorithm introduced in [30]. The latter requires self-loops at intermediate steps, which
our value functions accommodate naturally, although our theoretical analysis is made without self-loops.

We evaluate the partitions extracted by optimizing our quality functions in several ways. First, we compute their
normalized mutual information (NMI) [32] to the “ground truth”, which we deﬁne as being the planted partition
drawn by the LFR benchmark model to generate the graph. Recall that this “ground truth” is only meaningful when
the method wires, on average, more edges inside the communities, i.e. µt ≪ 1, and assigns signiﬁcantly larger weight
to edges inside communities, i.e.
for µw ≤ µt; strictly speaking it is never 100% “true” except in trivial cases. In
fact we are precisely seeking to better deﬁne communities in (almost all) non-trivial cases, and we are optimizing cost
functions locally. So, although the quantitative results do most often agree with intuitive decisions about “visually
reasonable or unreasonable” partitions, this comparison to ground truth must be taken with the usual grain of salt.
Therefore, in complement, we have computed two indicators of stability for the partitions, namely the number of

communities found nc and the sum-of-squares of the sizes of those communities Pk |ck|2.

Results

Figure 2 presents the results for fA as a function of β and compares it to those obtained with the well-established

modularity criterion[40].

For easy to detect communities (µt = 0.3 and µw = 0.1, ﬁrst column in Figure 2), sub-partitions of the planted
communities are almost always found except for very small values of β. The planted communities are moreover exactly
recovered for a wide range of values of β smaller than 0.5. Selecting any value of β should thus be expected to yield
good results in such cases.

Reasonable results are also observed for planted communities of “medium” diﬃculty (µt = 0.6 and µw = 0.3,
second column of Figure 2). The extracted communities do not correspond exactly to the planted one, but the results
outperform those obtained with the modularity criterion ([40], see table II) for almost all values of β. This could be
explained by the fact that modularity is known to hit a “resolution limit” which prevents it from correctly extracting
communities in this situation. Our cost function fA apparently does not suﬀer from this problem.

The limitations of fA appear more clearly for graphs with harder-to-ﬁnd communities (µt = 0.8 and µw = 0.6, third
column of Figure 2 ). Only a very narrow range of β values give reasonable and more or less stable results – i.e. an a
priori selected value of β would almost surely fail. This is complementary to the modularity, which precisely handles
this situation well.

In conclusion, the function fA which was proposed on purely academic grounds appears to give reasonable partitions
in many cases, but of course not always. An issue is the choice of β, which can strongly aﬀect the quality of the
partitions produced. Acceptable results appear not too diﬃcult to obtain by scanning diﬀerent values and analyzing
the evolution of certain stability measures, i.e. selecting for example values of β for which these measures appear
“reasonable” and stable with respect to small variations of β. Such strategies would however not be compatible with
our axiomatic approach. Indeed, when β is not ﬁxed a priori, the property of locality would almost surely be lost, and
consistent improvement would not be a priori guaranteed either (those are the two properties where diﬀerent graphs
must be compared). There might be “soft” tuning strategies which preserve the axiomatic properties, e.g. letting β
depend on the number of nodes or replacing R(|ck|) by some slightly more complicated dependence function. Such
explorations however go beyond the main purpose of the present paper.

Similar observations apply to fB, see Figure 3. Reasonable results are obtained for appropriate tuning of both α
and β, but the “good” tuning values depend on the graph. Since such tuning departs from our axiomatic approach,
we do not include more extensive experimental results about fB in this paper.

fA based partition

Q based partition

13

1

0.8

0.6

0
0

0.5
0.5
β

1
1

1

0.8

0.6

0
0

0.5
0.5
β

1
1

0.5
0.5
β

1
1

1

I

M
N

0.8

0.6

0
0

105

2
|
k
c
|

k

104

P

/

fA based partition

/

planted partition

400

300

200

100

0

1

105

104

103

0

400

300

200

100

0

1

105

104

103

0

400

300

200

c
n

100

0

1

0.5
β

0.5
β

103

0

0.5
β

Figure 2. (color online) Quality and stability of the partitions returned by fA as a function of β (continuous curve). The
plots on the ﬁrst row show the normalized mutual information (NMI) of the partitions extracted using fA with respect to the
“ground truth” partition planted by the LFR benchmark model (solid line), compared to that obtained with the modularity
(dashed line). The second row shows the number of communities (red, increasing with β) and their sum-of-square size (green,
decreasing in β). The value of those criteria for the planted partition is also provided (dashed line). The diﬃculty of extracting
communities increases from left to right (diﬀerent µt and µw values in the LFR graph generator, see main text). For easy
(left column) and medium (middle column) diﬃculty graphs, fA consistently outperforms modularity. For diﬃcult graphs
(right column), it is necessary to tune β in a precise range in order to obtain, with our function fA, results comparable to the
modularity. This good range of β values depends on the graph (not shown), which shows a limitation of our value function.

VI. CONCLUSION

We have considered an axiomatic approach towards deﬁning communities as the optimum of a value function.
We show that without relying on self-loops, it is not possible to satisfy a complete set of standard properties. Our
main message is that this impossibility remains even when replacing Kleinberg’s very strong consistent improvement
requirement by a weaker and seemingly more natural form of consistency. We further show, by explicit construction,
that by slightly restricting the set of a priori expected communities — e.g. excluding the case of all isolated nodes —
it becomes possible to satisfy all the axioms, and reach in some situations a performance comparable to modularity.
Furthermore, our constructions do satisfy the complete set of axioms when self-loops can be used to satisfy richness.
These two points clarify precisely how some previous papers were able to circumvent Kleinberg’s impossibility result.
This points towards several options for future research. First comes the necessity to select a subset of the standard
axioms; excluding a set of a priori uninteresting partitions has been identiﬁed as one economical way to do this,
but there might be others. Second and maybe more importantly, while our experimental investigations show good
performance for certain parameter values, they also return extremely poor partitions for other parameter values, even
though the corresponding functions still satisfy all the axioms. This demonstrates that our set of axioms is by no
means suﬃcient to single out useful value functions, and new properties should therefore be deﬁned. A third direction
would be to extend or circumvent our impossibility result in a framework departing from value functions.

Finally, the experimental investigations with our simple value functions provide results that might be of independent
interest for community partitioning. Indeed, despite their simplicity, our value functions outperform modularity in
several cases and for well-chosen parameter values. This suggests an adaptive tuning procedure for the value function
parameters. Note that the axioms would no longer necessarily be satisﬁed when introducing such adaptive tuning.

α = 0
α = 0.2

α = 0.1
α = 0.3

α = 0

α = 5.10−2

α = 5.10−3

α = 0.1

α = 0

α = 10−3

α = 5.10−4
α = 5.10−3

14

1

0.9

0.8

0.7

I

M
N

1

0.9

0.8

0.7

1

0.9

0.8

0.7

0

0.5
β

1

0

0.5
β

1

0

0.5
β

1

Figure 3. (color online) Quality of the partitions obtained using fB, as a function of β for diﬀerent values of α. As previously,
the quality is measured using the normalized mutual information (NMI) of the partitions extracted with respect to the “ground
truth” partition (solid line). The NMI obtained by the partition extracted using the modularity is also provided (dashed line).
The columns correspond respectively to easy, medium and hard graphs as in Figure 2. The quality obtained by fA (i.e. α = 0)
can be outperformed with a ﬁne tuning of the parameter α but the performance is highly sensitive to this parameter.This
includes interdependencies between α and β as can be seen in the third column.

ACKNOWLEDGMENTS

This work is supported by the DYSCO network (Dynamical Systems, Control, and Optimization), funded by the

Interuniversity Attraction Poles Programme, initiated by the Belgian Federal Science Policy.

The authors want to thank Vincent Traag, Vincent Blondel and Renaud Lambiotte for occasional but very helpful
discussions on this topic, in addition to drawing our attention to it and providing useful references. This paper
presents research results of the Belgian Network DYSCO (Dynamical Systems, Control, and Optimization), funded
by the Inter-university Attraction Poles program, initiated by the Belgian State, Science Policy Oﬃce. QUANTIC
is a joint project team involving INRIA Paris (host institution), Mines ParisTech, Ecole Normale Superieure Paris,
Universit´e Pierre & Marie Curie Paris and CNRS.

[1] Margareta Ackerman and Shai Ben-David. Measures of clustering quality: A working set of axioms for clustering. Advances

in neural information processing systems (NIPS), pages 121–128, 2009.

[2] Margareta Ackerman, Shai Ben-David, and David Loker. Towards property-based classiﬁcation of clustering paradigms.

Advances in Neural Information Processing Systems (NIPS), pages 10–18, 2010.

[3] Ulrik Brandes, Daniel Delling, Marco Gaertler, Robert Gorke, Martin Hoefer, Zoran Nikoloski, and Dorothea Wagner. On

Modularity Clustering. IEEE Transactions on Knowledge and Data Engineering, 20(2):172–188, 2008.

[4] A. Browet, P.-A. Absil, and P. Van Dooren. Fast community detection using local neighbourhood search. arxiv preprint

1308.6276, August 2013.

[5] Gunnar Carlsson, Facundo M´emoli, Alejandro Ribeiro, and Santiago Segarra. Axiomatic construction of hierarchical
clustering in asymmetric networks. Proc. IEEE Int.Conf. Acoustics, Speech and Signal Processing, pages 5219–5223, 2013.
[6] Leon Danon, Albert D´ıaz-Guilera, Jordi Duch, and Alex Arenas. Comparing community structure identiﬁcation. Journal

of Statistical Mechanics: Theory and Experiment, 2005(09):P09008, 2005.

[7] Santo Fortunato. Community detection in graphs. Physics reports, 486(3):75–174, 2010.
[8] Benjamin H. Good, Yves-Alexandre de Montjoye, and Aaron Clauset. Performance of modularity maximization in practical

contexts. Phys. Rev. E, 81:046106, Apr 2010.

[9] Yanqing Hu, Hongbin Chen, Peng Zhang, Menghui Li, Zengru Di, and Ying Fan. Comparative deﬁnition of community

and corresponding identifying algorithm. Physical Review E, 78:026121, 2008.

[10] Jon Kleinberg. An impossibility theorem for clustering. Advances in neural information processing systems (NIPS), pages

463–470, 2003.

[11] Andrea Lancichinetti, Santo Fortunato, and Filippo Radicchi. Benchmark graphs for testing community detection algo-

rithms. Phys. Rev. E, 78:046110, Oct 2008.

[12] Zhenping Li, Shihua Zhang, Rui-Sheng Wang, Xiang-Sun Zhang, and Luonan Chen. Quantitative function for community

detection. Phys. Rev. E, 77:036109, Mar 2008.

[13] AD Medus and CO Dorso. Alternative approach to community detection in networks. Physical Review E, 79(6):066111,

2009.

[14] M. E. J. Newman and M. Girvan. Finding and evaluating community structure in networks. Phys. Rev. E, 69:026113, Feb

15

2004.

[15] This was in a framework where nodes are separated by a “distance.
[16] Uniqueness is necessary to avoid trivial multi-valued functions associating for example all partitions to all graphs.
[17] In both statements, if we have an equality on the left hand side then σ and σ′ can be swapped, so we also need equality
on the right hand side. From this, the second statement readily implies the ﬁrst. Furthermore, by redeﬁning W ′ = αW
and α′ = 1/α, we can reverse the ﬁrst statement so equality on the right hand side also must imply equality on the left
hand side, i.e. inequality on the left can only be associated to inequality on the right. Thus the ﬁrst statement implies the
second one.

[18] Filippo Radicchi, Claudio Castellano, Federico Cecconi, Vittorio Loreto, and Domenico Parisi. Deﬁning and identifying

communities in networks. Proceedings of The National Academy of Sciences, 101(9):2658–2663, 2004.

[19] J¨org Reichardt and Stefan Bornholdt. Detecting fuzzy community structures in complex networks with a potts model.

Phys. Rev. Lett., 93:218701, Nov 2004.

[20] J¨org Reichardt and Stefan Bornholdt. Statistical mechanics of community detection. Phys. Rev. E, 74:016110, Jul 2006.
[21] Martin Rosvall and Carl T. Bergstrom. Maps of random walks on complex networks reveal community structure. Proceed-

ings of the National Academy of Sciences, 105(4):1118–1123, 2008.

[22] Satu Elisa Schaeﬀer. Graph clustering. Computer Science Review, 1(1):27–64, 2007.
[23] Gergely Tibely and Janos Kertesz. On the equivalence of the label propagation method of community detection and a

potts model approach. Physica A: Statistical Mechanics and its Applications, 387(19 - 20):4982 – 4984, 2008.

[24] V. A. Traag, P. Van Dooren, and Y. Nesterov. Narrow scope for resolution-limit-free community detection. Phys. Rev. E,

84:016114, Jul 2011.

[25] Twan Van Laarhoven and Elena Marchiori. Axioms for graph clustering quality functions. Journal of Machine Learning

Research, 15(1):193–215, January 2014.

[26] Reza Bosagh Zadeh. Towards a principled theory of clustering. 13th Int.Conf. Artif.Intell. and Stat., 2010.
[27] Margareta Ackerman and Shai Ben-David. Measures of clustering quality: A working set of axioms for clustering. Advances

in neural information processing systems (NIPS), pages 121–128, 2009.

[28] Margareta Ackerman, Shai Ben-David, and David Loker. Towards property-based classiﬁcation of clustering paradigms.

Advances in Neural Information Processing Systems (NIPS), pages 10–18, 2010.

[29] Ulrik Brandes, Daniel Delling, Marco Gaertler, Robert Gorke, Martin Hoefer, Zoran Nikoloski, and Dorothea Wagner. On

Modularity Clustering. IEEE Transactions on Knowledge and Data Engineering, 20(2):172–188, 2008.

[30] A. Browet, P.-A. Absil, and P. Van Dooren. Fast community detection using local neighbourhood search. arxiv preprint

1308.6276, August 2013.

[31] Gunnar Carlsson, Facundo M´emoli, Alejandro Ribeiro, and Santiago Segarra. Axiomatic construction of hierarchical
clustering in asymmetric networks. Proc. IEEE Int.Conf. Acoustics, Speech and Signal Processing, pages 5219–5223, 2013.
[32] Leon Danon, Albert D´ıaz-Guilera, Jordi Duch, and Alex Arenas. Comparing community structure identiﬁcation. Journal

of Statistical Mechanics: Theory and Experiment, 2005(09):P09008, 2005.

[33] Santo Fortunato. Community detection in graphs. Physics reports, 486(3):75–174, 2010.
[34] Benjamin H. Good, Yves-Alexandre de Montjoye, and Aaron Clauset. Performance of modularity maximization in practical

contexts. Phys. Rev. E, 81:046106, Apr 2010.

[35] Yanqing Hu, Hongbin Chen, Peng Zhang, Menghui Li, Zengru Di, and Ying Fan. Comparative deﬁnition of community

and corresponding identifying algorithm. Physical Review E, 78:026121, 2008.

[36] Jon Kleinberg. An impossibility theorem for clustering. Advances in neural information processing systems (NIPS), pages

463–470, 2003.

[37] Andrea Lancichinetti, Santo Fortunato, and Filippo Radicchi. Benchmark graphs for testing community detection algo-

rithms. Phys. Rev. E, 78:046110, Oct 2008.

[38] Zhenping Li, Shihua Zhang, Rui-Sheng Wang, Xiang-Sun Zhang, and Luonan Chen. Quantitative function for community

detection. Phys. Rev. E, 77:036109, Mar 2008.

[39] AD Medus and CO Dorso. Alternative approach to community detection in networks. Physical Review E, 79(6):066111,

2009.

[40] M. E. J. Newman and M. Girvan. Finding and evaluating community structure in networks. Phys. Rev. E, 69:026113, Feb

2004.

[41] This was in a framework where nodes are separated by a “distance.
[42] Uniqueness is necessary to avoid trivial multi-valued functions associating for example all partitions to all graphs.
[43] In both statements, if we have an equality on the left hand side then σ and σ′ can be swapped, so we also need equality
on the right hand side. From this, the second statement readily implies the ﬁrst. Furthermore, by redeﬁning W ′ = αW
and α′ = 1/α, we can reverse the ﬁrst statement so equality on the right hand side also must imply equality on the left
hand side, i.e. inequality on the left can only be associated to inequality on the right. Thus the ﬁrst statement implies the
second one.

[44] Filippo Radicchi, Claudio Castellano, Federico Cecconi, Vittorio Loreto, and Domenico Parisi. Deﬁning and identifying

communities in networks. Proceedings of The National Academy of Sciences, 101(9):2658–2663, 2004.

[45] J¨org Reichardt and Stefan Bornholdt. Detecting fuzzy community structures in complex networks with a potts model.

Phys. Rev. Lett., 93:218701, Nov 2004.

[46] J¨org Reichardt and Stefan Bornholdt. Statistical mechanics of community detection. Phys. Rev. E, 74:016110, Jul 2006.
[47] Martin Rosvall and Carl T. Bergstrom. Maps of random walks on complex networks reveal community structure. Proceed-

ings of the National Academy of Sciences, 105(4):1118–1123, 2008.

[48] Satu Elisa Schaeﬀer. Graph clustering. Computer Science Review, 1(1):27–64, 2007.

[49] Gergely Tibely and Janos Kertesz. On the equivalence of the label propagation method of community detection and a

potts model approach. Physica A: Statistical Mechanics and its Applications, 387(19 - 20):4982 – 4984, 2008.

[50] V. A. Traag, P. Van Dooren, and Y. Nesterov. Narrow scope for resolution-limit-free community detection. Phys. Rev. E,

84:016114, Jul 2011.

[51] Twan Van Laarhoven and Elena Marchiori. Axioms for graph clustering quality functions. Journal of Machine Learning

Research, 15(1):193–215, January 2014.

[52] Reza Bosagh Zadeh. Towards a principled theory of clustering. 13th Int.Conf. Artif.Intell. and Stat., 2010.

16

Appendix A: Proof of Lemma 1

Remember that there are only ﬁnitely many possible partitions. Let σ(2) be (one of) the second best partition(s) for

the graph G(V, W ), that is, f (G, σ(2)) ≥ f (G, σ′) for every σ′ 6= σ, and let ǫ = 1
for every σ′ we can pick a δ′ > 0 such that ||W − W ′|| < δ′ implies |(f (G(V, W ′), σ′) − f (G(V, W ), σ′))| < ǫ. Let δ be
the minimum of these δ′ over all partitions, which is positive and well deﬁned since there are ﬁnitely many of them.
It follows that ||W − W ′|| < δ′ implies |(f (G(V, W ′), σ′) − f (G(V, W ), σ′))| < ǫ for all σ′. Using the deﬁnition of ǫ,
we have then for every partition σ′

2(cid:0)f (G, σ) − f (G, σ(2))(cid:1). By continuity,

f (W ′, σ′) < f (W, σ′) + ǫ ≤ f (W, σ(2)) + ǫ = f (W, σ) − ǫ < f (W ′, σ),

which establishes the result.

Appendix B: Richness of fA in Theorem 3

For σ∗ a given partition, we consider the graph G(V, W ∗) where W ∗

ij = 0 otherwise, i.e.
the graph where there is one clique for each community of σ∗. We will prove that σ∗ is the strictly optimal partition
of G(V, W ∗) according to fA. The proof uses two claims.

ij = 1 if σ∗

j and W ∗

i = σ∗

Claim 1: Consider a community c0 of some arbitrary partition σ, and σ′ a partition identical to σ except that c0
ij = 0 for all i ∈ c01 and j ∈ c02 (i.e. no clique contains a node from

is split into two communities c01 and c02. If W ∗

both communities) then fA(σ′, W ∗) ≥ fA(σ, W ∗), with equality holding if and only if Pi∈c0Pj∈c0

Wij = 0.

Proof. (of Claim 1): Deﬁne ¯s(int)
Then we have by deﬁnition

k

=

1

R(|ck|)Pi∈ckPj∈ck

W ∗

ij the normalized internal strength of a community ck.

fA(σ, W ∗) − ¯s(int)

0

= fA(σ′, W ∗) − ¯s(int)

01 − ¯s(int)

02

.

If W ∗
R(|c0|)¯s(int)

ij = 0 for all i ∈ c01 and j ∈ c02 then we have Pj∈c0a

01 + R(|c02|)¯s(int)

= R(|c01|)¯s(int)

02

0

. From there we have

Wij =Pj∈c0

Wij for all i in c0a and a ∈ {0, 1}. Therefore,

¯s(int)
0

=

R(|c01|)
R(|c0|)

¯s(int)
01 +

R(|c02|)
R(|c0|)

¯s(int)
02 ≤ ¯s(int)

01 + ¯s(int)

02

,

(B1)

where we have used |c0| > max{|c01| , |c02|} and the fact that R is increasing, so that max{ R(|c01|)
follows thus also that the inequality in (B1) is strict unless ¯s(int)

01 = ¯s(int)

02 = 0, that is, Wij = 0 for all i, j ∈ c0.

R(|c0|) , R(|c02|)

R(|c0|) } < 1. It

Claim 2: Consider a partition σ where W ∗

ij = 1 for all i, j ∈ c0 and deﬁne a partition σ′ identical to σ except that

c0 is split into two communities c01 and c02. Then fA(σ, W ∗) > fA(σ′, W ∗).

Proof. (of Claim 2): With the same notation as in the proof of Claim 1, we still have

fA(σ, W ∗) − ¯s(int)

0

= fA(σ′, W ∗) − ¯s(int)

01 − ¯s(int)

02

.

Since W ∗

ij = 1 for all i, j ∈ c01 ∪ c02 = c0 we readily get ¯s(int)

01 = |c01|

R(|c01|) (|c01| − 1), ¯s(int)

02 = |c02|

R(|c02|) (|c02| − 1), and

¯s(int)
0

=

|c0|

R(|c0|)

(|c0| − 1) =

|c0|

R(|c0|)

(|c01| + |c02| − 1).

Remembering that R(a)/a is nonincreasing and that |c0| = |c01| + |c02|, we obtain

01 + ¯s(int)
¯s(int)

02 ≤

|c0|

R(|c0|)

(|c01| − 1) +

|c0|

R(|c0|)

(|c02| − 1) <

|c0|

R(|c0|)

(|c01| + |c02| − 1) = ¯s(int)

0

,

so that fA(σ, W ∗) > fA(σ′, W ∗).

17

We can now prove the strict optimality of σ∗. Consider a partition σ(1) and denote its communities by c(1)
k1 , c(2)

σ(2) the partition where each c(1)
ij = 1 whenever σ(2)
for which W ∗
we also have W ∗
repeated application of a transition from σ to σ′ as set out in Claim 1. Thus fA(σ(2), W ∗) ≥ fA(σ(1), W ∗).

k . Deﬁne
k2 ,... c(2)
knk
. Note that as we require the communities to remain as large as possible,
. Therefore the transition from σ(1) to σ(2) can be obtained by

k has been further partitioned into the largest possible communities c(2)
i = σ(2)

ij = 0 if σ(1)

i = σ(1)

but σ(2)

6= σ(2)

j

j

j

i

From σ(2), we can obtain the original partition σ∗ by repeated application of a transition from σ′ to σ (note the

reversed order!) as set out in Claim 2. We hence have fA(σ∗, W ∗) ≥ fA(σ(2), W ∗).

Hence overall fA(σ∗, W ∗) ≥ fA(σ(2), W ∗) ≥ fA(σ(1), W ∗) for any σ(1). Let us now examine in which cases we can
have equality. To have fA(σ∗, W ∗) = fA(σ(2), W ∗) we need σ(2) = σ∗. To have fA(σ(2), W ∗) = fA(σ(1), W ∗) we need
for each c(1)

k ∈ σ(1):

- either nk = 1 i.e. c(1)

W ∗

ij = 1 for all i, j ∈ c(1)
k ;

k has not been further partitioned in the process of obtaining σ(2), which also means that

- or Pi∈c(1)

k Pj∈c(1)

k

Wij = 0, which also implies that the c(2)

ki are all singleton communities for all i.

The second situation is excluded if σ(2) = σ∗ and σ∗ has no more than one singleton community. Hence we must be
in the ﬁrst situation for every c(1)
k ∈ σ(1), which means that σ(2) is obtained from σ(1) by applying no modiﬁcation,
and then σ∗ is obtained from σ(2) by applying no modiﬁcation; i.e. that σ(1) = σ∗. For any σ(1) 6= σ∗ we hence have
fA(σ∗, W ∗) > fA(σ(1), W ∗), proving the strict optimality of σ∗.

Appendix C: Richness of fB in Theorem 4

To establish the richness of fB with respect to all partitions containing at least one community with more than one

node, we will use the following Lemma.

Lemma 2. Let σ∗ be a strictly optimal partition for fB for a graph G(V, W ) on N nodes where Pj Wij > 0 for all

i ∈ V , i.e. every node is incident to at least one edge with positive weight. Build the graph G+1(V +1, W +1) by adding
a node N + 1 to G and one single edge of weight ǫ connecting node N + 1 to some node of V , and let σ+1
be the
partition of V +1 obtained by adding the singleton community {N + 1} to σ∗.

Then, there exists an ǫ∗ > 0 such that if ǫ < ǫ∗, then σ+1

is a strictly optimal partition for G+1. As a consequence,
and G+1 also satisfy the hypothesis of the present Lemma (and can thus play the role of σ∗ and G in a further

∗

∗

σ+1
∗
iteration of it).

Proof. (of Lemma 2) Any partition σ+1 of G+1 can be obtained from some particular partition σ of G by either adding
the node N + 1 to σ as a singleton community, or merging node N + 1 into an existing community of σ. We start by
examining these two cases assuming ǫ = 0, i.e. W(N +1)j = 0 for all j ∈ V , while sext
i ∈ V .

i + sint

First consider a partition σ+1 of G+1 which results from the addition of node N + 1 to some community ck of σ.
i > 0 for all i ∈ V , it is straightforward

Since W +1 just contains additional zero entries with respect to W and sext
to observe that

i +sint

i = Pj∈V Wij > 0 for all

fB(G+1, σ+1) − fB(G, σ) =(cid:18)
+(cid:18)

1

R(|ck| + 1)

|ck|

R(|ck| + 1)

−

−

1

sint

i !
R(|ck|)(cid:19) Xi∈ck
R(|ck|)(cid:19) −αXi∈ck

|ck| − 1

sext

i ! .

(C1)

(With a slight abuse of notation, in G+1 we still denote ck the set of nodes that constituted the community ck in
partition σ of the graph G.) In the ﬁrst term of (C1) we have
R(|ck|) because R is increasing. For the

R(|ck|+1) < 1

1

second term, observe that since R(a) is increasing and R(a)/a is nonincreasing, the following inequality holds for any
a > 0:

a − 1
R(a)

=

a

R(a)

−

1

R(a)

<

a + 1

R(a + 1)

−

1

R(a + 1)

=

a

R(a + 1)

.

18

In particular,

|ck|

R(|ck|+1) > |ck|−1

we have excluded Pi∈ck

fB(G, σ∗).

i =Pi∈ck

R(|ck|) . Thus for σ 6= σ∗ we have fB(G+1, σ+1) ≤ fB(G, σ) < fB(G, σ∗) . For σ = σ∗, since
i = 0, (C1) is strictly negative and thus in all cases we have fB(G+1, σ+1) <
sint
sext

∗

if σ = σ∗. The deﬁnition of fB readily implies that fB(G+1, σ+1) = fB(G, σ).

Next consider the partition σ+1 of G+1 consisting of σ plus the singleton community {N + 1}, which would
thus be σ+1
In particular, we
fB(G+1, σ+1) = fB(G, σ) < fB(G, σ∗) and thus again fB(G+1, σ+1) < fB(G, σ∗), whenever σ 6= σ∗. The only
remaining case, for σ = σ∗, gives fB(G+1, σ+1
∗ ) = fB(G, σ∗) and must thus be the optimal one. This establishes the
result for ǫ = 0.

The case of suﬃciently small ǫ > 0 follows then directly from Lemma 1. This ensures that node N + 1 is also

incident to an edge with positive weight, and thus G+1 and σ+1

∗

also satisfy the assumptions of the Lemma.

To prove that a target partition σ of V can be made optimal under fB for some well-chosen weights W , we build
as for fA the graph with Wij = 1 if σi = σj, otherwise Wij = 0. Deﬁne G∗(V ∗, W ∗) and σ∗ respectively the graph
and partition where all the nodes that form singleton communities in σ have been dropped. This graph is non-empty
because we have assumed σ contains at least one community with more than one node.

With respect to fA, the value function fB just adds a penalty for links between diﬀerent communities, so that
fB(W ′, σ′) ≤ fA(W ′, σ′) for any W ′ and σ′. For our particular construction of W ∗ associated to σ∗, we have sext
i = 0
for all i, hence fB(W ∗, σ∗) = fA(W ∗, σ∗). Note that σ∗ contains no singleton community so we can apply the proof
of Appendix B, showing that σ∗ is strictly optimal for W ∗ under fA, i.e. fA(W ∗, σ∗) > fA(W ∗, σ′) for all σ′ 6= σ∗.
We then get

fB(W ∗, σ∗) = fA(W ∗, σ∗) > fA(W ∗, σ′) ≥ fB(W ∗, σ′)

for all σ′
partition σ∗ will still be optimal under fB for a slightly modiﬁed W ∗ǫ where W ∗ǫ

6= σ∗, proving strict optimality of partition σ∗ for the graph weights W ∗ also under fB. By Lemma 1,

ij > 0 for all i, j ∈ V ∗.

The graph G∗ǫ(V ∗, W ∗ǫ) obtained in this way satisﬁes the assumptions of Lemma 2 with optimal partition σ∗. The
existence of a graph for which the target partition σ is strictly optimal follows then from a repeated application of
that Lemma, adding singleton communities one by one until σ is reached.

