A Fast Distributed Algorithm for Large-Scale

Demand Response Aggregation

Sleiman Mhanna, Student MIEEE, Archie C. Chapman, MIEEE and Gregor Verbiˇc, Senior MIEEE,

1

6
1
0
2

 
r
a

M
1

 

 
 
]

C
D
.
s
c
[
 
 

1
v
9
4
1
0
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—A major challenge to implementing residential de-
mand response is that of aligning the objectives of many house-
holds, each of which aims to minimize its payments and maximize
its comfort level, while balancing this with the objectives of
an aggregator that aims to minimize the cost of electricity
purchased in a pooled wholesale market. This paper presents
a fast distributed algorithm for aggregating a large number of
households with a mixture of discrete and continuous energy
levels. A distinctive feature of the method in this paper is that
the nonconvex DR problem is decomposed in terms of house-
holds as opposed to devices, which allows incorporating more
intricate couplings between energy storage devices, appliances
and distributed energy resources. The proposed method is a
fast distributed algorithm applied to the double smoothed dual
function of the adopted DR model. The method is tested on
systems with up to 2560 households, each with 10 devices on
average. The proposed algorithm is designed to terminate in 60
iterations irrespective of system size, which can be ideal for an on-
line version of this problem. Moreover, numerical results show
that with minimal parameter tuning, the algorithm exhibits a
very similar convergence behavior throughout the studied systems
and converges to near-optimal solutions, which corroborates its
scalability.

Index Terms—Dual decomposition, accelerated gradient meth-
ods, demand response aggregation, smoothing techniques, mixed-
integer variables, smart grid, energy management.

A. Acronyms

NOTATION

Combined heat and power.
CHP
Demand Response.
DR
Heating, ventilation and air conditioning.
HVAC
Mixed-integer program/programming.
MIP
MIQP
Mixed-integer quadratic program/programming.
MINLP Mixed-integer nonlinear program/programming.
QP
SoC

Quadratic program/programming.
State of charge.

B. Parameters

Ai

Agent i’s total number of devices.

C t(cid:0)xt

g(cid:1) Electricity cost ($) of drawing xt

from the grid during time-slot t.

g units of energy

c0t

c1t

c2t

during time-slot t.

Coefﬁcient ($) of the constant term in C t(cid:0)xt
g(cid:1)
Coefﬁcient ($/kWh) of the linear term in C t(cid:0)xt
g(cid:1)
C t(cid:0)xt

during time-slot t.
Coefﬁcient ($/kWh2) of the quadratic term in

g(cid:1) during time-slot t.

i,a (·) Dissatisfaction cost ($) incurred by agent i’s Type
Dt
2, Type 3 or Type 6 device a during time-slot t.

el
i,a

eSoC,ini
i,a

eSoC,ﬁnal
i,a

eSoC,min
i,a

eSoC,max
i,a

Ei,a

Gmax

I
ηch
i,a

ηdis
i,a

k
l

L

pl
i,a

P ch,min

i,a

P ch,max

i,a

P dis,min

i,a

P dis,max

i,a

P PV,t

i

P th,min

i,a

P th,max

i,a

P max

i

φ
πi,a
∆τ
T
T in,min
i

Energy (kW h) consumed by agent i’s Type 1,
Type 2 or Type 3 device a during time-step ∆τ.
Initial state of energy (kW h) of agent i’s Type 4
or Type 5 device a.
Final state of energy (kW h) of agent i’s Type 4
or Type 5 device a.
Minimum state of energy (kW h) of agent i’s
Type 4 or Type 5 device a.
Maximum state of energy (kW h) of agent i’s
Type 4 or Type 5 device a.
Total energy (kW h) requirement over T of agent
i’s Type 3 device a.
Maximum power (kW) that can be drawn from
the grid.
Total number of household agents.
Charging efﬁciency of agent i’s Type 4 or Type
5 device a.
Discharging efﬁciency of agent i’s Type 4 or
Type 5 device a.
Iteration number.
Operating mode of agent i’s Type 1, Type 2 or
Type 3 device a.
Total number of operating modes of agent i’s
Type 1, Type 2 or Type 3 device a.
Power level (kW) at operation mode l of agent
i’s Type 1, Type 2 or Type 3 device a.
Minimum charging power (kW) of agent i’s Type
4 or Type 5 device a.
Maximum charging power (kW) of agent i’s Type
4 or Type 5 device a.
Minimum discharging power (kW) of agent i’s
Type 4 or Type 5 device a.
Maximum discharging power (kW) of agent i’s
Type 4 or Type 5 device a.
Predicted power (kW) generation of agent i’s PV
system at time-slot t.
Minimum power requirement (kW) of agent i’s
Type 6 device a.
Maximum power requirement (kW) of agent i’s
Type 6 device a.
Maximum power rating (kW) of the household
main circuit breaker’s overload protection.
Type of agent i’s device a.
Minimum ‘on’ time of a Type 3 device a.
Time resolution (0.25 h or 1 h).
Length of the decision time horizon.
Minimum temperature value (◦C) in agent i’s
comfortable temperature range.

T in,max
i

T comf
i
T t
out
τi,a
τ start
i,a

τ end
i,a

γl
i,a

γi,a,γ

i,a

γth
i,a

ψi,a

ζi,a
µ
ν
κ

Maximum temperature value (◦C) in agent i’s
comfortable temperature range.
Agent i’s most comfortable temperature (◦C).
Outside temperature (◦C) at time-slot t.
Agent i device a’s desired scheduling interval.
Start time of agent i device a’s desired schedul-
ing interval.
End time of agent i device a’s desired scheduling
interval.
Nonnegative parameter ($) that reﬂects agent
i’s preference for operating mode l of Type 2
appliance a.
Nonnegative parameters ($) that determine how
quickly the user gets dissatisﬁed when the sched-
uled operation of Type 3 device a is delayed by
i,a + πi,a− ∆τ ) time-slots away from τ end
t− (τ end
,
i,a − t time-slots ahead of τ start
or advanced τ start
respectively.
Nonnegative parameter ($/◦C2) that depends on
agent i’s tolerance to deviations of the inside tem-
perature T in,t
from agent i’s most comfortable
temperature T comf
Parameter (◦C/kWh) of the thermal dynamics
equation.
Parameter of the thermal dynamics equation.
Smoothness parameter ($/kWh2).
Penalty parameter ($/kWh2).
Strong concavity parameter (kWh2/$).

i,a

i,a

i

.

i

C. Sets
Ai,φ
Ai
I
T

D. Variables

Set of agent i’s type φ devices.
Set of all devices of agent i.
Set of all household agents.
DR decision time horizon.

T in,t
i
ul,t
i,a

uch,t
i,a

udis,t
i,a

vt
i,a

xch,t
i,a

xdis,t
i,a

xSoC,t
i,a

xt

i,a

xt
0

Inside temperature (◦C) at time-slot t.
Binary variable that takes a value of ‘1’ when
agent i’s Type 2 or Type 3 device a is in operating
mode l during time-slot t.
Binary variable that takes a value of ‘1’ when
agent i’s Type 4 or Type 5 device a is in charging
mode during time-slot t.
Binary variable that takes a value of ‘1’ when
agent i’s Type 4 or Type 5 device a is in
discharging mode during time-slot t.
Startup binary variable of agent i’s Type 3 device
a during time-slot t.
Charging energy (kW h) of agent i’s Type 4 or
Type 5 device a during time-slot t.
Discharging energy (kW h) of agent i’s Type 4
or Type 5 device a during time-slot t.
State of energy (kW h) of agent i’s Type 4 or
Type 5 device a at time-slot t.
Energy consumption (kW h) of agent i’s device
a during time-slot t.
Total energy demand (kW h) during time-slot t.

2

xt
g

λ

Energy (kW h) drawn from the grid during time-
slot t.
Vector of Lagrange multipliers ($/kWh).

I. INTRODUCTION

D EMAND response programs capitalize on advancements

in communications, control, and computation technolo-
gies of the future grid to harness the ﬂexibility of electric
loads for demand shaping, supply-demand balancing and other
ancillary services. Central to the vision of the future grid is the
deployment of smart meters with embedded agents that repre-
sent the consumers in their interaction with a DR aggregator.
This technology can enable efﬁcient participation of ﬂexible
loads in energy markets through leveraging carefully designed
price and load information exchange schemes.

Given this context, efﬁcient load scheduling and aggregation
is a problem of growing importance in the area of demand
response. However, the problem of scheduling large numbers
of household loads, which comprise 25-30% of system load in
advanced economies and higher elsewhere, is particularly chal-
lenging for two main reasons. First, household agents are self-
interested and aim at minimizing their costs and maximizing
their comfort levels, whereas the aggregator aims at decreasing
peak demand and minimizing the cost of electricity purchased
in a pooled wholesale market. Therefore, the challenge lies in
devising a coordination scheme to aggregate these households
into a usable DR resource that aligns the objectives of the
households with the objectives of the aggregator.

Second, many household electrical devices have discrete
operating points that can only be represented by mixed-integer
variables (as in [1]–[11]), and some household device uses
are often coupled, thus giving household electricity demand
a combinatorial structure [12]. However, most energy man-
agement methods, such as those in [1]–[6], [11], [13]–[18],
address only one facet of the DR problem, which is local
energy and comfort management. That is, they do not address
system-wide aggregation of these DR capable households;
moreover, the methods proposed in these works are either
incompatible with wide-area aggregation or simply intractable
in large-scale problems [19].

The presence of mixed-integer variables results in a mixed-
integer program (MIP) that has a NP-hard computational
complexity. Therefore, solving the DR aggregation problem
centrally, as in [7]–[10], [20], may spell intractability when
the number of households is large. Furthermore, solving this
problem centrally requires sending all of the households’
private information to the aggregator, which entails substantial
communication overhead and privacy concerns.

To this end, distributed methods are emerging as a way
of efﬁciently implementing large-scale DR. The existing lit-
erature on distributed methods for demand response is split
into two main categories. The ﬁrst category includes methods
that treat the household energy levels as continuous [21]–[40],
which often renders the underlying DR problem convex and
therefore computationally conducive. The second category of
papers includes the more realistic methods that treat the house-
hold energy levels as a mixture of discrete and continuous and
account for inter-temporal device couplings [41]–[52].

In [41], the DR problem is decomposed in terms of devices
and a waterﬁlling-inspired negotiation mechanism is proposed
to reduce electricity generation costs, whereas [42] proposes a
method for the energy management of several prosumers in an
energy district in the aim of maximizing the energy district’s
utility and reducing reverse energy ﬂows. In [43], a subop-
timal distributed algorithm based on an extended Lyapunov
optimization technique is used to control the switching states
of HVAC units in the aim of reducing the average variation
of nonrenewable energy demand while ensuring user comfort.
The works in [44] and [45] aim at ﬂattening the load proﬁle by
minimizing the deviation of the total load in a time-slot from
the mean total load over the scheduling horizon subject to the
minimum cost of individual consumers. The resulting bi-level
optimization problem is transformed into its equivalent single-
level problem and solved in a distributed fashion. However,
the focus in [44] and [45] is not on pricing strategies but
on demand proﬁle reshaping. Moreoever, [46] shows that
the nonconvex demand response problem that results from
incorporating devices with interruptible tasks has a zero duality
gap if the problem is formulated over a continuous-time
horizon. It also shows that, in a discrete-time horizon, the
duality gap vanishes as the granularity of the discretization is
increased. A conventional gradient method is used in [46] to
solve the nonconvex discrete-time DR problem. On the other
hand, an approximate greedy iterative algorithm is used in
[47] to ﬁnd sub-optimal energy consumption schedules for
the users. Additionally, the algorithm in [47] is guided towards
convergence by introducing a penalty term that penalizes large
changes between successive iterations. The DR model in [48],
also decomposed in terms of devices, is solved in a distributed
fashion using the proximal bundle method.

Similar to [41], [47] and [48], the DR problems in [49] and
[50] are decomposed in terms of devices but use concepts
from game theory to solve the problem. In more detail, a
game theoretic approach based on a modiﬁed regret matching
procedure is proposed in [49] to solve the problem to within
4% of the optimum, whereas [50] formulates the problem as a
noncooperative game and uses mechanism design to distribut-
edly solve the problem to a near-optimal Nash equilibrium.

Furthermore, the work in [51] proposes a novel auction
format, inspired by the clock-proxy auction in [53], for the
on-line scheduling of large numbers of households and small-
and medium-sized businesses, and shows how the mechanism
improves the efﬁciency of on-line energy use scheduling.

In contrast to [41], [46]–[49] and [50], the DR problem
in this work and in our previous work [52] is decomposed
in terms of households. Doing so, allows for a more ex-
pressive household model, which can incorporate the intricate
couplings between storage devices, appliances and distributed
energy resources. In contrast to [52], the method in this paper
accounts for user satisfaction and comfort and engages an
algorithm that terminates in substantially fewer iterations.

Against this background, this paper proposes a fast dis-
tributed gradient algorithm applied to the double smoothed
dual function of the adopted DR problem and shows how to
recover a near-optimal primal solution. In more detail, this
paper advances the state of the art in the following ways:

3

• The nonconvex DR problem in this work is decomposed
in terms of households, which facilitates incorporating the
intricate couplings between storage devices, appliances
and distributed energy resources.

• The proposed distributed gradient algorithm is applied
to a double smoothed dual function and is designed to
terminate in 60 iterations, which can be ideal for an on-
line version of this problem.

• Numerical simulations show that, with minimal parameter
tuning, the proposed algorithm exhibits a similar conver-
gence behavior throughout all the studied systems and
converges to near-optimal solutions, which corroborates
its scalability.

The paper also provides a deeper insight into the geometry
of the dual function of the DR problem and shows that
this dual function is nonsmooth. Consequently,
the paper
demonstrates that a conventional gradient method fails to solve
this problem even if the integrality constraints are relaxed and
the problem is convex. Taken together, these advances show
that the proposed algorithm represents a feasible method for
implementing large-scale demand response.

The paper progresses with notation and pertinent concepts
from convex optimization in Section II, followed by a descrip-
tion of the DR model in Section III. Sections IV describes the
double smoothing technique and its properties and Section V
presents the proposed fast gradient method. Numerical results
are presented in Section VI and Section VII concludes the
paper.

II. PRELIMINARIES

All vectors are column vectors unless otherwise speciﬁed,
and 0 is an all-zeros vector of length depending on the context.
The inner product of two vectors x, y ∈ Rn is delineated by
hx, yi = x′y, where x′ is the transpose of x. The Euclidean
norm of a vector x ∈ Rn is denoted by kxk = phx, xi
and the nonnegative orthant in Rn is denoted by Rn
+. The
spectral norm of a matrix A ∈ Rn×m is deﬁned by kAk =
pλmax (A′A), where λmax (A′A) is the maximum eigenvalue
of A′A.
In smooth convex optimization, F 1,1
L (Rn) is the class of
continuously differentiable convex functions f : Rn 7→ R with
Lipschitz-continuous gradient [54], that is:

k∇f (x) − ∇f (y)k ≤ L kx − yk , for all x, y ∈ Rn,

for some constant L > 0. A continuously differentiable func-
tion f (x) is called strongly convex on Rn (i.e. f ∈ S1
κ (Rn))
if there exists a constant κ > 0 such that for any x, y ∈ Rn,

f (y) ≥ f (x) + h∇f (x) , y − xi +

κ

2 ky − xk2 .

We are particularly interested in functions that belong to the
L (Rn)

class S1,1
that are strongly convex with parameter κ > 0.

κ,L (Rn), which is the class of functions f ∈ F 1,1

III. DR MODEL AND PROBLEM DESCRIPTION

The adopted DR topology, illustrated in Figure 1, is com-
posed of one aggregator, which coordinates the schedules

4

Constraint (3) restricts only one binary variable ul,t
i,a to take a
value of ‘1’ during time-slot t. Type 2 devices are associated
with a function that reﬂects agent i’s tradeoff between cost
minimization and satisfaction maximization. This function is
deﬁned by

Dt

i,au1,t

i,auL,t
i,a ,

i,a, γ1

i,a) + γ1

i,a, . . . , γL

i,a(1 − ut

i,a.
i,a ≤ γ0

i,a(cid:0)ut

i,a(cid:1) = γ0

i,a + ··· + γL
a ∈ Ai,2, t ∈ τi,a, (4)
i,a are nonnegative parameters that
where γ0
reﬂect agent i’s preference for each operating mode l. For
instance, if a user prefers the highest operating mode over the
others, these parameters can be set as γL
i,a ≤
··· ≤ γ1
A Type 3 set contains ﬂexible and non-interruptible devices
whose operation can be delayed or advanced but cannot be
interrupted before they have completed their task. Devices of
Type 3 have a speciﬁc total energy requirement per scheduling
horizon. A Type 3 set includes appliances such as dishwashers,
washing machines and dryers that can operate at discrete
power levels similar to Type 2 devices. In more detail, the
feasible scheduling set Xi,a∈Ai,3 of Type 3 devices is deﬁned
by

i,a = 0 and γL−1

i,a − u1,t
i,ae1
xt

i,a = 0, a ∈ Ai,3, t ∈ T ,
i,a, a ∈ Ai,3, t ∈ T ,

i,a − ··· − uL,t
i,a eL
u1,t
i,a + ··· + uL,t
i,a = ut
Xt∈T
xt
i,a ≥ Ei,a, a ∈ Ai,3,
i,a − ut−∆τ
vt
i,a ≥ ut

, 1 a ∈ Ai,3, t ∈ T ,

i,a

and for all t ∈ {τ + πi,a − ∆τ, . . . , τ + T − ∆τ},

t

Xq=t−πi,a+∆τ

vq
i,a ≤ ut

i,a, a ∈ Ai,3.

(5)

(6)

(7)

(8)

(9)

The startup binary variable vt
i,a is only equal to ‘1’ when
device a is turned on during time-slot t. The minimum ‘on’
time constraint (9) states that if device a is turned on during
time-slot t (i.e. vt
i,a = 1), then this device should remain
‘on’ for at least πi,a time-slots. This formulation is not a
‘hold-time’ formulation as the device can still be ‘on’, even
after the minimum ‘on’ time has elapsed, in order to fulﬁll
its total energy requirement Ei,a. Constraints (8) and (9) are
inequalities that describe facets of the convex hull of the
projection on the space of both u and v [55]. This formulation
is a tight polyhedral representation of the convex hull of the
disjoint set Xi,a∈Ai,3. More interestingly, the variable v can
be modeled as continuous. Speciﬁcally, because u is binary,
constraints (8) and (9) ensure that the v variables are binary
even if they are modeled as continuous [56].

Unlike Type 2 devices, a user only cares that a Type 3
device ﬁnishes its task within the preferred scheduling interval

Generator

Generator

Generator

Retailer

Large user

Retailer

Fig. 1. Aggregator and agents detailed interaction model and the broader
energy market (the dashed line is the scope of this paper).

of the participating households’ loads,
interacting with I
household agents over a decision horizon T := {τ, τ +
∆τ, . . . , τ +T −∆τ} (typically one day) consisting of T time-
slots. Speciﬁcally, the DR model comprises a set of agents
I := {0, 1, 2, . . . , I}, where 0 is the aggregator and each i 6= 0
is a household agent.

A. Household agent model

i,a

i,a

and τ end

, . . . , τ end

For each agent i 6= 0, let xt

i,a (cid:9), where τ start

i,a be the energy consumption
variable of device a ∈ Ai := {1, . . . , Ai} during time-slot
t, where Ai is the set of all devices of agent i. Each device
a ∈ Ai is associated with a user-deﬁned preferred scheduling
i,a are
interval τi,a :=(cid:8)τ start
the start and end times of the desired scheduling interval
(e.g. washing machine desired to be ‘on’ somewhere between
5pm and 9pm or an EV desired to be charged between 11pm
and 7am). Devices can be classiﬁed into seven types. To this
end, let φ ∈ {1, . . . , 7} denote the type of agent i’s device
a and Ai,φ ⊆ Ai be the set of agent i’s type φ devices.
Additionally, let l ∈ {1, . . . , L} be the operating mode of agent
i’s device a ∈ {Ai,1 ∪ Ai,2 ∪ Ai,3} and pi,a = [p1
i,a, . . . , pL
i,a]
be the associated vector of power levels. Consequently, the
energy consumed during ∆τ would be el
i,a = pl

i,a∆τ.

A set of Type 1 includes must-run devices that must always
be ‘on’, such as refrigerators. These devices constitute the base
load of a household and their feasible set Xi,a∈Ai,1 ∈ RT is
deﬁned by

i,a = e1
xt

i,a, a ∈ Ai,1, t ∈ T .

(1)

A set of Type 2 includes inﬂexible devices that can operate
at discrete power levels, such as electric ovens, lighting and
TVs with DVD players or game consoles. Devices of Type
2 do not have a total energy requirement over the scheduling
horizon, but they have an adjustable energy level that depends
on the dissatisfaction of the user. The feasible scheduling set
Xi,a∈Ai,2 of Type 2 devices is deﬁned by

i,a − u1,t
i,a − ··· − uL,t
i,ae1
xt
u1,t
i,a + ··· + uL,t

i,a eL
i,a = ut

i,a = 0, a ∈ Ai,2, t ∈ T ,
i,a, a ∈ Ai,2, t ∈ T .

(2)

(3)

1At t = τ , t − ∆τ is equal to τ − ∆τ , which is equal to τ + T − ∆τ of

the previous scheduling horizon.

τi,a. Therefore, for Type 3 devices, the dissatisfaction function
would be

Dt

i,a(cid:1) =
i,a(cid:0)ut


0,
γi,a(t − τ end,π

)ut
(τ start
i,a − t)ut

i,a

i,a

γ

i,a,
i,a,

if t ∈ τ π
i,a,
if t > τ end,π
if t < τ start

i,a

,

i,a

,

a ∈ Ai,3, t ∈ T , (10)

i,a

i,a

i,a = τ end

i,a =nτ start

i,a o and τ end,π

, . . . , τ end,π
where τ π
i,a + πi,a −
∆τ.2 Parameters γi,a > 0 and γ
> 0 determine how quickly
the user gets dissatisﬁed when the scheduled operation of Type
3 device a is delayed by t− τ end,π
time-slots away from τ end
i,a
, respectively.
or advanced τ start
A Type 4 set contains ﬂexible and interruptible storage
devices with a continuous power level within a certain range
is
τi,a,
deﬁned by

like EVs. Their feasible scheduling set Xi,a∈Ai,4

i,a − t time-slots ahead of τ start

i,a

i,a

uch,t

i,a (cid:16)P ch,min
i,a (cid:16)P dis,min

i,a ∆τ(cid:17) ≤ xch,t
∆τ(cid:17) ≤ xdis,t

i,a

udis,t

i,a ≤ uch,t

i,a ≤ udis,t

i,a = ut
i,a = xt

udis,t
i,a + uch,t
xch,t
i,a − xdis,t
xSoC,t
i,a = xSoC,t−∆τ

i,a,
i,a, 3

i,a

SoC,τ start
i,a

i,a −∆τ

x

= eSoC,ini

i,a

,

x

SoC,τ end
i,a
i,a

= eSoC,ﬁnal
i,a ≤ eSoC,max

≤ xSoC,t

i,a

i,a

eSoC,min
i,a

i,a

i,a

∆τ(cid:17) ,
∆τ(cid:17) ,

i,a (cid:16)P ch,max
a ∈ Ai,4, t ∈ τi,a, (11)
i,a (cid:16)P dis,max
a ∈ Ai,4, t ∈ τi,a, (12)
a ∈ Ai,4, t ∈ τi,a, (13)
(14)
a ∈ Ai,4, t ∈ T ,
xdis,t
i,a
+ ηch
ηdis
i,a

i,axch,t

i,a −

,

a ∈ Ai,4, t ∈ τi,a, (15)
(16)
a ∈ Ai,4,
, a ∈ Ai,4,
, a ∈ Ai,4, t ∈ τi,a.

(17)

(18)

A Type 5 set contains ﬂexible and interruptible storage devices
with a continuous power level over T , like batteries. Their
feasible scheduling set Xi,a∈Ai,5 is deﬁned by

uch,t

i,a (cid:16)P ch,min
i,a (cid:16)P dis,min

i,a ∆τ(cid:17) ≤ xch,t
∆τ(cid:17) ≤ xdis,t

i,a

udis,t

i,a ≤ uch,t

i,a ≤ udis,t

udis,t
i,a + uch,t
xch,t
i,a − xdis,t

i,a = ut
i,a = xt

i,a,
i,a, 3

i,a

i,a

∆τ(cid:17) ,
i,a (cid:16)P ch,max
a ∈ Ai,5, t ∈ T ,
∆τ(cid:17) ,
i,a (cid:16)P dis,max
a ∈ Ai,5, t ∈ T ,
a ∈ Ai,5, t ∈ T ,
a ∈ Ai,5, t ∈ T ,

(19)

(20)
(21)

(22)

i,a

, function Dt

i,a(cid:17) would be symmetrical around τ π
2If γi,a = γ
i,a.
3 Constraints (14) and (22) are deﬁning constraints that only provide a
deﬁnition to the variables on their left-hand side. They are therefore eliminated
during presolve.

i,a (cid:16)ut

xSoC,t
i,a = xSoC,t−∆τ

i,a

SoC,τ start
i,a

i,a −∆τ

x

,

i,a

= eSoC,ini
≥ eSoC,ﬁnal
i,a ≤ eSoC,max

i,a

i,a

SoC,τ end
i,a
i,a

x

≤ xSoC,t

eSoC,min
i,a

,

5

(23)

(24)

(25)

(26)

+ ηch

i,axch,t

i,a −

xdis,t
i,a
ηdis
i,a
a ∈ Ai,5, t ∈ T ,
a ∈ Ai,5,
, a ∈ Ai,5,
, a ∈ Ai,5, t ∈ T .

A Type 6 set contains thermostatically controlled devices like
air conditioners. Their feasible scheduling set Xi,a∈Ai,6 is
deﬁned by

ut

i,a(cid:16)P th,min

i,a ∆τ(cid:17) ≤ xt

i,a ≤ ut

i,a(cid:16)P th,max

i,a

∆τ(cid:17) ,

a ∈ Ai,6, t ∈ τi,a,

(27)

and their operation is governed by the (ﬁrst order) thermal
dynamics

T in,t
i = T in,t−∆τ

i

T in,min
i

+ ψi,axt

i,a + ζi,a(cid:16)T out,t−∆τ − T in,t−∆τ

i

≤ T in,t

i ≤ T in,max

i

a ∈ Ai,6, t ∈ τi,a,
,

t ∈ τi,a,

(cid:17) ,

(28)
(29)

where ψi,a > 0 and ζi,a are parameters deﬁned by the
geometry of the house (or room), thermal properties of the
house (or room) materials, and the thermostatically controlled
device characteristics (temperature of air ﬂow, air mass ﬂow
rate) [57]. Moreover, ψi,a < 0 if device a ∈ Ai,6 is in cooling
mode and ψi,a > 0 if device a ∈ Ai,6 is in heating mode.
Additionally, Type 6 devices are associated with a user
dissatisfaction function captured by

Dt

i,a(cid:16)T in,t

i (cid:17) = γth

i − T comf

(cid:17)2
i,a(cid:16)T in,t
,
a ∈ Ai,6, t ∈ τi,a.

i

(30)

The dissatisfaction function in (30) is adopted from [21] and
aims at reﬂecting agent i’s tolerance to deviations of T in,t
from T comf

.

i

Given the above, the electric energy demand of agent i 6= 0
i is deﬁned

i , where X t

during time-slot t is denoted by xt
by

i ∈ X t

i

i ∆τ,

xt

i = Xa∈Ai

i,a − P PV,t
xt
i ≤ P max

0 ≤ xt

i ∆τ.

(31)

(32)

i

Constraint (32) restricts agent i’s total energy consumption
during time-slot t to a maximum threshold of Emax
=
i ∆τ. This constraint can be thought of as a way to
P max
ensure that the power consumption during time-slot t does
not exceed the rated capacity of the household main circuit
breaker’s overload protection. In fact, one of the superiorities
of the method in this paper is its ability to handle the coupling
constraints (31) and (32), which can only be incorporated in
a distributed model that decomposes the problem in terms of
households.

i , . . . , xτ +T −∆τ

Finally, the demand proﬁle of agent i 6= 0 is denoted by
xi =(cid:2)xτ
Xi,a(cid:1)×
i(cid:1). Because of the presence of binary variables
(cid:0)Qt∈T X t

(cid:3) ∈ Xi, where Xi =(cid:0)Qa∈Ai

i

(enforced by integrality constraints), the feasible sets Xi are
disjoint and therefore nonconvex.

B. Aggregator model

g(cid:1) is the cost of drawing xt

The aggregator purchases energy in a pooled wholesale mar-
ket, and as such, faces a set of cost functions C t : R+ 7→ R+.
g units
In this expression, C t(cid:0)xt
of energy from the grid during time-slot t. Due to physical
system limits, the power drawn from the grid is bounded above
by Gmax, which represents the maximum power that can be
drawn from the grid, and therefore xt
g ∈ Xg := [0, Gmax∆τ ].
Under the assumption that open-cycle gas turbines are the
marginal energy producers4, the cost faced by an aggregator
buying energy in the wholesale market during time-slot t can
be approximated by the convex quadratic function,

C t(cid:0)xt

g(cid:1)2
g(cid:1) = c2t(cid:0)xt

+ c1txt

g + c0t,

(33)

where c0t, c1t and c2t are time-varying parameters that reﬂect
the ﬂuctuating wholesale prices.5 Throughout the rest of the
paper, parameters c1t and c0t are set to 0 for instantiation
purposes.6

C. Demand aggregation problem

The feasible scheduling sets Xi6=0 are private information
held individually by each household. If the aggregator is able
to access this information for all i 6= 0, then it can (centrally)
minimize the total energy cost per scheduling horizon T , and
thereby efﬁciently allocate electric energy to these households,
by solving the following problem:

minimize

xi∈Xi,xt

g ∈Xg,

i,a,T in,t
ut

i


 Xa∈Ai,2∪Ai,3
Xi∈I\0
subject to Xi∈I\0

Xt∈T  C t(cid:0)xt
g(cid:1) +
i,a(cid:1) + Xa∈Ai,6
i,a(cid:0)ut
t ∈ T ,

i = xt
xt
0,

Dt

Dt

i (cid:17)

i,a(cid:16)T in,t
 ,


(34a)

(34b)

where xt
time-slot t.

0 = xt

g and xt

0 ∈ X0 ∈ RT

+ is the total demand during

Letting x =n{xi}i∈I ,(cid:8)xt

g(cid:9)t∈To, and with a slight abuse

of notation, problem (34) can also be written as:

P ∗ = inf

x∈X {C (x) + D (x) : Acx = 0} ,

(35)

where X = (cid:0)Qi∈I Xi(cid:1) × Xg and Ac ∈ RT ×[(I+1)×T +T ] is

the coupling constraint matrix concatenating constraints (34b).

4In reality the wholesale prices are also affected by congestions on the
transmission network but in this paper this congestion component of the
wholesale electricity prices is neglected.

5The cost function in (33) is not tailored to a speciﬁc market but instead

is a general approximation of efﬁcient markets.

6Strictly positive values of c1t and c0t do not affect the derivations in this

paper.

6

Problem (34) is a mixed-integer quadratic program (MIQP)
that belongs to the class of NP-hard problems that are no-
torious for tending to be intractable (if solved centrally for
optimality) when they grow in size. In addition, sending the
households’ private information to the aggregator requires a
large communication overhead in a setting with a large number
of household agents, even before privacy issues are considered.
However, relaxing the coupling constraints (34b) through
the Lagrangian relaxation method bestows a separable struc-
ture on problem (34). The problem can then be decomposed
into I + 1 independent subproblems that can be solved in
parallel.

In more detail, the partial Lagrangian of (34) is given by:

Dt

Dt

L (x, λ) =Xt∈T

 Xa∈Ai,2∪Ai,3
Xi∈I\0

g(cid:1) + λt

 Xi∈I\0
C t(cid:0)xt
i,a(cid:1) + Xa∈Ai,6
i,a(cid:0)ut
=Xt∈T (cid:0)C t(cid:0)xt
g(cid:1) − λtxt
Xa∈Ai,2∪Ai,3
i,a(cid:0)ut

0
i − xt
xt
 +
i (cid:17)

i,a(cid:16)T in,t


0(cid:1) + Xi∈I\0 Xt∈T  λtxt

i (cid:17)
i,a(cid:16)T in,t
i,a(cid:1) + Xa∈Ai,6
 ,

where λ = (cid:2)λτ , . . . , λτ +T −∆τ(cid:3) is the vector of Lagrange

multipliers. Accordingly, the Lagrange dual function is

i +

Dt

Dt

D (λ) = inf

x∈X L (x, λ) .

(36)

Due to the block angular structure of the primal problem,
elements of the Lagrange dual (36) can be separated as
follows:

D (λ) = D0 (λ) + Xi∈I\0

where the aggregator solves

Di (λ) ,

D0 (λ) = inf

g∈Xg Xt∈T (cid:0)C t(cid:0)xt

x0∈X0,
xt

g(cid:1) − λtxt
0(cid:1) ,

while the household agents solve

(37)

(38)

Di (λ) = inf

xi∈Xi,
i,a,T in,t
ut

i Xt∈T
+ Xa∈Ai,6

Dt


i + Xa∈Ai,2∪Ai,3
λtxt
i (cid:17)
i,a(cid:16)T in,t
 ,

i ∈ I \ 0.

Dt

i,a(cid:0)ut
i,a(cid:1)

(39)

(40)

Finally, the dual problem is given by

max
λ(cid:23)0 D (λ) .

However, in this DR scenario, the concave dual function
D (λ) is typically nondifferentiable. Indeed, using Danskin’s
theorem [58]–[60], the subdifferentials of D (λ) are

∂D (λ) = {Acx : D (λ) , x ∈ X} .

7

← max

← max

10

0

−10

−20

−30

(cid:1)
2
λ

,
1
λ
(cid:0)
D

10

0

−10

−20

−30

(cid:1)
2
λ

,
1
λ
(cid:0)

κ
,
µ
D

10

10

10

10

5

λ2

0

0

5

λ1

5

λ2

0

0

5

λ1

Fig. 2. Dual function D (cid:0)λ1, λ2(cid:1) (and its contour plot) of a small DR problem
with two time slots. The white line delineates the evolution of the dual iterates.

Fig. 3. Double smoothed dual function Dµ,κ (cid:0)λ1, λ2(cid:1) (and its contour plot)
of the DR example in Section III-C for µ = 0.2 and κ = 0.02. The white
line delineates the evolution of the double smoothed dual iterates.

Speciﬁcally, as the subproblems in (38) and (39) can have mul-
tiple optimal solutions for a given vector λ, the subdifferentials
∂D (λ) may be not be unique and the dual function D (λ)
can be nonsmooth.7 Consequently, applying a conventional
gradient method [61] to this problem would most likely exhibit
very slow convergence. This can be visualized in Figure 2,
which illustrates the concave but nonsmooth dual function
(and its contour plot) of a small problem comprising two
households, each with two devices (an EV and an electric
oven) scheduled over two time slots. Figure 2 also showcases
the slow convergence of a conventional gradient method as
delineated by the white line. Therefore, in order to accelerate
convergence, a double smoothing technique is introduced,
which involves regularizing the dual problem in (40) to allow
applying a fast gradient method [54].

IV. DOUBLE SMOOTHING METHOD

As discussed in Section III-C, the dual function of the
DR problem at hand is typically nonsmooth and not strongly
convex. However, these properties can be conferred on the dual
function D (λ) by applying a double smoothing technique.

A. First smoothing

One way to obtain a smooth approximation of D (λ) is
to modify the subproblems in (39) to ensure a unique optimal
solution for every λ. The dual function is modiﬁed as follows:

where

Di,µ (λ) = inf

i

xi∈Xi,
i,a,T in,t
ut



Xt∈T
i + Xa∈Ai,2∪Ai,3
λtxt
i (cid:17)
2 kxik2
i,a(cid:16)T in,t
 +
 ,

µ

Dt

Dt

i,a(cid:0)ut
i,a(cid:1)
i ∈ I \ 0.

(42)

+ Xa∈Ai,6

2

µ

1

and µ > 0 is a smoothness parameter [62]. The modiﬁed
dual function Dµ (λ) is smooth and its gradient ∇Dµ (λ) =
Acxµ,λ, where xµ,λ delineates the unique optimal solution of
problem (41), is Lipschitz-continuous with Lipschitz constant
Lµ = kAck2
. To show the bounds introduced by Dµ (λ) on
D (λ), let

: {xi}i∈I\0 ∈ Yi∈I\0

2(cid:13)(cid:13)(cid:13){xi}i∈I\0(cid:13)(cid:13)(cid:13)

Xi
DX = min


then Dµ (λ) − µDX ≤ D (λ) ≤ Dµ (λ) for all λ ∈ RT
−Dµ (λ) ∈ F 1,1
.
Lµ
this smoothing is to obtain a Lipschitz-
The aim of
continuous gradient for which efﬁcient smooth optimization
methods can be applied. However, despite having a good
convergence rate of Dµ (λ∗) − Dµ (λk) at iteration k when
the same good rate of
applying a fast gradient method,
convergence does not apply to k∇Dµ (λk)k. Moreover, since
the aim is not only to efﬁciently solve the dual problem but
also to recover a feasible solution to the primal, a single
smoothing is not enough to achieve this goal [63].

+ and

,

B. Second smoothing

Dµ (λ) = D0 (λ) + Xi∈I\0

Di,µ (λ) ,

(41)

This goal can be achieved by applying a second smoothing
to the dual function to make it strongly concave. The new dual
function is written as

7If a function f (x) is smooth, its subdifferential contains only one point

and therefore ∂f (x) = ∇f (x).

Dµ,κ (λ) = D0 (λ) + Xi∈I\0

Di,µ (λ) −

κ

2 kλk2 ,

(43)

κ,Lµ,κ

which is strongly concave with parameter κ > 0, and
whose gradient ∇Dµ,κ (λ) = Acxµ,λ − κλ is Lipschitz-
continuous with constant Lµ,κ = kAck2
µ + κ = Lµ + κ.
Now that −Dµ,κ (λ) ∈ S1,1
, applying a fast gradient
method ensures the same rate of convergence for k∇Dµ,κ (λ)k
as for Dµ,κ (λ∗) − Dµ,κ (λk). This property is essential for
recovering a near-optimal solution for the primal in fewer
iterations compared to just applying a single smoothing [63].
The effect of the double smoothing is showcased in Fig-
ure 3 which illustrates the double smoothed dual function
Dµ,κ (λ1, λ2) (and its contour plot) of the DR example in
Section III-C with µ = 0.2 and κ = 0.02. Figure 3 also shows
a better performance of the conventional gradient method now
applied to the double smoothed dual problem, as delineated
by the white line.

V. FAST GRADIENT ALGORITHM

The algorithm is divided into two phases. The ﬁrst phase
consists of a fast gradient method applied to the double
smoothed dual function in (43). The fast gradient method
in the ﬁrst phase is designed to run for a ﬁxed number of
iterations during which both the recovered primal objective
value and the norm of the gradient of the dual function are
quickly decreased. At the termination of Phase I, the vector of
Lagrange multipliers along with the smoothness parameter and
the step size that resulted in the minimum recovered primal
objective value are selected as a warm start for second phase.
In the second phase, the second smoothing is dropped and a
penalty term is added to the single smoothed dual function in
(41). The penalty term in Phase II penalizes large deviations
of household agent i’s total load at time-slot t from its value
at the previous iteration. Similar to Phase I, Phase II is also
designed to run for a ﬁxed number of iterations irrespective
of the size of the DR system.

More speciﬁcally,

the fast gradient method in Phase I

involves two multiplier updates,

1

λk+1 = ˆλk +

Lk

µk,κk ∇Dµk ,κk(cid:16)ˆλk(cid:17) ,
ˆλk+1 = λk+1 + βk (λk+1 − λk) ,

(44)

(45)

where

The parameters of Phase I are set as follows:

βk = (cid:16)qLk
(cid:16)qLk

µk,κk −

√κk(cid:17)
µk,κk + √κk(cid:17)



µk, κk+1 = e

log  µmin
µ1 !
2maxiterI 




µk+1 = e

.

(46)

log(cid:18) κmin
3maxiterI 
κ1 (cid:19)

κk,

(47)

where maxiterI is the maximum number of iterations in Phase
I.

In Phase II, the single smoothed dual is modiﬁed to incor-

porate the penalty term as follows:

Dµk ,νk (λk) = D0 (λk) + Xi∈I\0

Di,µk ,νk (λk) ,

(48)

where

Di,µk ,νk (λk) = inf

xi∈Xi,
i,a,T in,t
ut

i +

i

kxt

 Xt∈T  λt
i,a(cid:1) + Xa∈Ai,6
i,a(cid:0)ut
k−1(cid:13)(cid:13)
2 (cid:13)(cid:13)xi − xi

νk

Dt

i (cid:17)
i,a(cid:16)T in,t
 +
2(cid:19) , i ∈ I \ 0.

Dt

Xa∈Ai,2∪Ai,3
µk
2 kxik2 +

The distributed algorithm is described in Algorithm 1.

8

(49)

Algorithm 1 Distributed algorithm
Phase I

Parameters: λ1 (cid:23) 0, κmin > 0, κ1 >> κmin, α1 ∈ (cid:2)10−3, 5 × 10−4(cid:3), αmin ∈

1: Initialization: Aggregator sets k = 1, µ1 = α1 kAck2, µmin = αmin kAck2,

(cid:2)8 × 10−4, 10−6(cid:3), maxiterI > 10.

ˆλ1 = λ1, ν 1 = 0 and J = 1.

2: while k ≤ maxiterI do
3:

Aggregator solves D0(cid:16)ˆλk(cid:17) and broadcasts ˆλk, µk and νk to the households.
Households solve and return Di,µk ,νk (cid:16)ˆλk(cid:17) and xi to the aggregator.
Aggregator computes ∇Dµk ,νk ,κk (cid:16)ˆλk(cid:17) and P k

r as in (50).

µk + κk, sets νk+1 = 0 and updates

µk ,κk = kAck2

4:

5:

6:

Aggregator computes Lk
λk+1, ˆλk+1, µk+1 and κk+1.
k ← k + 1.

7:
8: end while

End of Phase I: Aggregator

ﬁnds

the

along

with

ˆλJ ,

µJ , LJ

µJ ,κJ

best
and

primal
xµJ ,νJ ,ˆλJ

solution
such

P J
r
that

, ˆλk = ˆλJ , µ = ρµJ ,

J := (cid:26)k : P J

r = min(cid:26)nP k

rok∈{1,...,maxiterI}(cid:27)(cid:27).

Parameters: maxiterII > 1.

Phase II
9: Initialization: Aggregator sets δ = (cid:16)LJ

ν = σµJ .

µJ ,κJ(cid:17)−1

10: while k ≤ (maxiterI+maxiterII) do
11:

12:

13:

Aggregator solves D0(cid:16)ˆλk(cid:17) and broadcasts ˆλk, µ and ν to the households.
Households solve and return Di,µ,ν (cid:16)ˆλk(cid:17) and xi to the aggregator.
Aggregator computes ∇Dµ,ν (cid:16)ˆλk(cid:17) and P k
Aggregator sets ˆλk+1 = ˆλk + δ∇Dµ,ν (cid:16)ˆλk(cid:17).

r as in (50).

14:
15:
16: end while
End of Phase II: Aggregator

k ← k + 1.

P S
r

along

with

ˆλS

ﬁnds
and

the
xµ,ν,ˆλS

best

such

primal
that

S

solution
:=

(cid:26)k : P S

r = min(cid:26)nP k

rok∈{1,...,maxiterI+maxiterII}(cid:27)(cid:27).

In general, a feasible primal solution can only be recovered
when both the dual and the norm of its gradient converge,

i.e. when Dµk,νk ,κk(cid:16)ˆλk(cid:17)−Dµk−1,νk−1,κk−1(cid:16)ˆλk−1(cid:17) ≤ ǫ and
(cid:13)(cid:13)(cid:13)∇Dµk ,νk,κk(cid:16)ˆλk(cid:17)(cid:13)(cid:13)(cid:13) ≤ ǫ.8 In addition, recovering a feasible

primal solution when the norm of the gradient of the dual
is not equal to zero is nontrivial in general. However, in
this DR scenario, the aggregator is purchasing electricity for
the households only after receiving their demand proﬁles,
computed as a best response to the price signal ˆλk. Therefore,
the aggregator can in practice force the coupling variable xt
0
at each time-slot t and solve

to be equal toPi∈I\0 xt

i,µk ,νk ,ˆλk

8ǫ is a small positive number in the order of 10−4.

9

the following problem:

xt

g∈Xg Xt∈T
P k
r = minimize
kE −
−Dˆλk, xi
subject to Xi∈I\0

µk

g(cid:1) + Xi∈I\0
C t(cid:0)xt
k(cid:13)(cid:13)
2 (cid:13)(cid:13)xi
2 (cid:13)(cid:13)xi
−
i,µk ,νk ,ˆλk

Di,µk ,νk(cid:16)ˆλk(cid:17)
k−1(cid:13)(cid:13)
k − xi
g, t ∈ T .

= xt

νk

xt

2

2

(50a)

(50b)

r

This recovered primal solution P k
is only feasible when
g ∈ Xg := [0, Gmax∆τ ]. However, Phase I of the algorithm
xt
is designed to quickly decrease the norm of the gradient
of the dual function and move away from potential infeasi-
bility. Moreover, in the highly improbable case where this
constraint is violated, typically at the start of the algorithm,
the aggregator can still track the evolution of these recovered
primal iterates by relaxing this constraint. Eventually, at the
termination of the algorithm, the aggregator is able to select a
feasible recovered primal solution that achieves the minimum
value among the recovered primal iterates, as described at the
end of Phase II of Algorithm 1. In fact, the aggregator does not

needPi∈I\0 Di,µk ,νk(cid:16)ˆλk(cid:17) in order to ﬁnd the point ˆλS that
gives the minimum recovered primal value P S
covered primal iterates. The values of Pi∈I\0 Di,µk ,νk(cid:16)ˆλk(cid:17)
are retrieved here only for comparison purposes.

r among the re-

i,a

i,a

are both set to 0.3eSoC,max

respectively for batteries. Moreover, for batteries, eSoC,ini
eSoC,ﬁnal
i,a
are required to be fully charged by τ end
equal to eSoC,max
is set to 0.4eSoC,max
required to be charged somewhere between τ start
and τ end

and
, whereas for EVs, which
is set
for an EV
. Also, it is assumed that EVs are mostly
i,a∈Ai,4 = 7pm

i,a
. The initial state of energy eSoC,ini

, eSoC,ﬁnal

= 7am.

i,a∈Ai,4

i,a

i,a

i,a

i,a∈Ai,4

i

For Types 6 devices (air conditioners), the data for parame-
ters ψi,a and ζi,a is obtained by running the model initializa-
tion of the thermal model of a house in [57] for 10 distinct
households with distinct geometries and thermal properties of
the house materials. As for P th,min
, their values
are selected randomly from [0.1, 1] and [2, 5] respectively. The

and P th,max

i,a

i,a

, T in,max

i

i is assumed

comfortable temperature range hT in,min

as 22.5 ◦C. When it comes to τi,a,

to be [18 ◦C, 25 ◦C] with the most comfortable temperature
the agents are
T comf
divided into two groups. The ﬁrst group consists of agents
that prefer their air conditioners to be ‘on’ from midday
until
late afternoon hours. The second group consists of
agents preferring their air conditioners to be on from early
evening hours untill midnight. Furthermore, the dissatisfaction
parameter γth
i,a for Type 6 devices is selected randomly from
[0.001, 0.15]. Finally, the predicted input power P PV,t
from
PV panels is obtained from [65] and scaled by a factor drawn
randomly from [0.8, 1.5].

i

i

VI. NUMERICAL EVALUATION

The simulations are carried out with T = 24 hours,
∆τ = 1 h and up to I = 2560 household agents interacting
with one aggregator, as in Figure 1. Each household has up
to 10 devices on average, mixed among the types described in
Section III-A. Appliances’ power levels pl
i,a are obtained from
Ausgrid’s device usage guide [64] for different manufacturers
of the same appliance type and different household data. As a
result, for Type 1 appliances, pl
i,a is selected randomly from
[0.08, 0.15]. For Type 2 and Type 3 appliances, pl
i,a is selected
randomly from [0.1, 0.275] and [0.7, 4] respectively. Also,
Type 2 and Type 3 appliances can operate in up to 3 operating
modes, i.e. l ∈ {1, 2, 3}. Moreover, each household has 3
Type 3 appliances on average with πi,a selected randomly
i,a(cid:9)l∈{1,2,3}o.
from the set {2, 3} and Ei,a ≥ πi,a∆τ maxn(cid:8)pl

The dissatisfaction parameters γl
i,a for Type 2 appliances are
selected randomly from [0.001, 0.15], whereas for Type 3 γi,a
is selected randomly from [0.001, 0.15] with γ
= 1.5γi,a,
which makes the dissatisfaction function for Type 3 devices
asymmetrical.

i,a

i,a

i,a

is set to 0.25eSoC,max

For Type 4 (EVs) and Type 5 (batteries) devices, the values
for eSoC,max
are drawn randomly from [9, 16] and [8, 11]
respectively, whereas eSoC,min
for both
EVs and batteries to avoid deep discharging. The minimum
and maximum charging powers P ch,min
for both
EVs and batteries are drawn randomly from [0.1, 0.6] and
[1.1, 3.3] respectively. Analogously, P dis,min
are
drawn randomly also from [0.1, 0.6] and [1.1, 3.3] respectively.
The charging and discharging efﬁciencies ηch
i,a are set
to 0.87 and 0.9 respectively for EVs and to 0.91 and 0.95

and P dis,max

and P ch,max

i,a and ηdis

i,a

i,a

i,a

i,a

i,a

In an effort to reﬂect realism (and break symmetry), it is
assumed that only 40% of the households have PV and battery
storage systems and not more than 60% of the households have
EVs. It is also assumed that not more than 70% of households
have air conditioners. The coefﬁcient of the quadratic cost
component c2t is set to 0.007 from 8am to 2pm, 0.004 from
2pm to 7pm, 0.01 from 7pm to 12am, 0.003 from 12am to
5am, and 0.004 from 5am to 8am (as in [7]).

In all simulations, AMPL [66] is used as a frontend model-
ing language for the optimization problems along with Gurobi
6.0.5 [67] as a backend solver. Algorithm 1 is coded in
MATLAB and the interfacing between AMPL and MATLAB
is made possible by AMPL’s application programming inter-
face. The simulations are all carried out on an Intel Core i7,
3.70GHz, 64-bit, 128GB RAM computing platform. Finally,
the data set of 10 distinct households is replicated accordingly
to generate the data sets for larger systems.

A. Centralized computation

As a benchmark for comparison, the solution of the central-
ized problem (34) along with its associated root-node gap are
shown in Table I for different system sizes. Table I lists the
total number of variables (Var), the number of binary variables
(Bvar), the total number of constraints (Const), the solution to
problem (34) (P ∗) and its root-note gap (Gap (%) ).
As shown by Table I, a peculiar attribute of problem
(34) is that it has a large root-node gap (loose relaxation).
Problems that have a large root-node gap are, in practice,
particularly hard to solve because they cast a heavier burden
on the branch-and-cut algorithms, which manifests in longer
computation times to reach optimality. The solver run-time of

SOLUTION OF THE CENTRALIZED PROBLEM AND ITS ROOT-NODE GAP.

TABLE I

I
10
20
40
80
160
320
640
1280
2560

Var
3734
7276
14360
28528
56864
113536
226880
453568
906944

Bvar
1423
2774
5476
10880
21688
43304
86536
173000
345928

Const
4205
8218
16244
32296
64400
128608
257024
513856
1027520

P ∗ ($)
11.25
33.18
104.44
346.12
1184.65
4202.81
15495.29
58857.48
228738.14

Gap (%)

39.13
27.78
19.28
13.53
10.23
8.68
8.00
7.70
7.72

)
s
(

e
m

i
t

n
o
i
t
a
t
u
p
m
o
C

106

105

104

103

102

101

100

10-1

10-2

0

Centralized (MIQP)
Centralized (Relaxed)
Distributed

500

1000

1500
I

2000

2500

3000

Fig. 4. Scaling of the DR aggregation problem (semilogy plot).

both the original nonconvex problem in (34) and its convex
relaxation are shown in Figure 4. In fact, Gurobi’s parameters
are changed from their default values to ones that implement
aggressive cuts generation (clique cuts, cover cuts and other
Gurobi speciﬁc cuts) and aggressive presolve. Also, the primal
simplex algorithm was chosen, instead of the default dual sim-
plex algorithm, to solve the root-node and the node relaxations.
This solver parameter tuning results in signiﬁcant computation
speedups for this speciﬁc problem, with up to 30% faster
computations in some instances. However, even with this
solver parameter tuning, the solver run-time for the I = 1280
and I = 2560 test systems is more than 3 days, which is
3 times longer than the decision time horizon. Consequently,
from a computational point of view, a centralized approach
for solving the DR problem in this paper is not even suitable
for day-ahead market clearing applications. On the other hand,

the subproblems Di,µk,νk(cid:16)ˆλk(cid:17), also being MIQPs, are easily

handled by Gurobi in its default settings.

10

Primal
Dual

180

160

140

120

)
k
ˆλ
(
k
κ
,
k
ν
,
k
µ

100

D
d
n
a

kr
P

80

60

40

20

0

0

Phase I

Phase II

10

20

30

40

50

60

Iterations (k)

Fig. 5. Evolution of the recovered primal and modiﬁed dual objectives for
I = 40.

The evolutions of the recovered primal iterates P k

the modiﬁed (double smoothed) dual function Dµ,ν,κ (λ∗) is
as close as possible to the original dual function D (λ∗).
r and the
double smoothed dual function Dµk ,νk,κk (ˆλk) are displayed
in Figure 5 and Figure 6 for I = 40 and I = 1280
respectively. Figures 5 and 6 show that Dµk,νk,κk (ˆλk) exhibits
a fast and smooth convergence in less than 60 iterations. In
fact, Dµk ,νk,κk(cid:16)ˆλk(cid:17) − Dµk−1,νk−1,κk−1(cid:16)ˆλk−1(cid:17) decreases to
kept running until 60 iterations to allow (cid:13)(cid:13)(cid:13)∇Dµk ,νk,κk(cid:16)ˆλk(cid:17)(cid:13)(cid:13)(cid:13)

to decrease enough to guarantee recovering a good primal
solution. Furthermore, the convergence behavior of the dual
iterates witnessed in Figures 5 and 6 carries over to all
the other problem instances. This feature is of paramount
importance for the scalability of the algorithm.

less than 0.001 in around 25 iterations but the algorithm is

The algorithm has been found to suitably converge within
60 iterations across a large number numerical tests on a vast
array of test systems with different mixtures of devices and
appliances. The algorithm can be terminated in less than
60 iterations but this might come at the price of a lower
quality solution; or it may require instance-speciﬁc parameter
tuning to achieve the same quality solution in fewer iterations.
Conversely, increasing the number of maximum iterations
above 60 can result in smaller optimality gaps but the marginal
decrease in the recovered primal values is not high enough
to warrant this increase. In summary, 60 iterations has been
found empirically to strike a good tradeoff between having a
small number of iterations and recovering high quality feasible
solutions.

For all test systems, the optimality gap is measured as

B. Distributed computation

follows:

Algorithm 1 is initialized with λ1 = 0, κmin = 10−5,
κ1 = 50, α1 = 8 × 10−4, maxiterI = 30, ρ = 0.3, σ = 2
and maxiterII = 30. Consequently, the only parameter that
requires tuning depending on system size is αmin. Obviously,
this parameter has to be small enough so that the solution of

Gap = (cid:0)P S

r − P ∗(cid:1)
P ∗

× 100.

The optimality gaps for the studied test systems are listed in
Table II. Table II shows that the optimality gap does not exceed
0.48% in all the considered test cases. In fact, further tuning

11

Primal
Dual

Primal
Dual

140

120

100

)
k
ˆλ
(
k
κ
,
k
ν
,
k
µ

×104

10

)
k
ˆλ
(
k
κ
,
k
ν
,
k
µ

D
d
n
a

kr
P

9

8

7

6

5

4

3

2

1

0

Phase I

Phase II

D
d
n
a

kr
P

0

10

20

30

40

50

60

Iterations (k)

80

60

40

20

0

0

Phase I

Phase II

10

20

30

40

50

60

Iterations (k)

Fig. 6. Evolution of the recovered primal and modiﬁed dual objectives for
I = 1280.

Fig. 7. Evolution of the recovered primal and modiﬁed dual objectives of the
relaxed (convex) version of the test system with I = 40.

ALGORITHM PARAMETER SETTING AND OPTIMALITY GAP.

TABLE II

I
10
20
40
80
160
320
640
1280
2560

µmin

5 × 10−6
5 × 10−6
5 × 10−6
5 × 10−6
5 × 10−6
5 × 10−6
5 × 10−6
5 × 10−5
5 × 10−5

S
54
53
41
43
60
60
56
50
59

P S
r ($)
11.26
33.25
104.87
347.73
1187.47
4219.40
15570.22
59013.32
229560.12

P ∗($)
11.25
33.18
104.44
346.12
1184.65
4202.81
15495.29
58857.48
228738.14

Opt. Gap (%)

0.11
0.22
0.41
0.46
0.24
0.39
0.48
0.26
0.36

parameters α1, αmin, ρ and σ can result in optimality gaps as
low as 0.04% but these results are not displayed here for the
sake of keeping the algorithm as generic as possible.

C. Discussion

i,µk ,νk,ˆλk

A common trait for all the test systems is the oscillation of
the recovered primal iterates. These oscillations stem from a
combination of two reasons. The ﬁrst reason is that because
the households have mixed-integer variables, their feasible
scheduling sets are disjoint. Therefore, a change in the price
signal ˆλk can result in xt
changing in discrete steps.
The second reason is that the test systems are a replication
of the data set of 10 distinct households. Therefore all the
similar households will exhibit the same best response to
the price signal ˆλk which entails that the effect of the ﬁrst
reason will be magniﬁed on the collective level. By this
reasoning, this oscillatory behavior of the recovered primal
iterates should not exist when all the variables are continuous
and the problem is convex. Indeed, Figure 7 shows that the
recovered primal iterates of a relaxed version of the test system
with I = 40 do not exhibit this oscillatory behavior. It is also
evident from Figure 7 that an optimal solution can be found
within 60 iterations for a relaxed version of the adopted DR
problem. In fact, a close inspection of Figure 7 and Figure 5
shows that the modiﬁed dual function exhibits a very similar

convergence behavior in both the original nonconvex problem
and its convex relaxation.

Moreover, to see the superiority of the fast gradient algo-
rithm (applied to the double smoothed dual function) over a
conventional gradient method (applied to the original nons-
mooth dual function), Figure 8 shows the evolution of the
recovered primal and original dual objectives of the test system
with I = 40 using a conventional gradient method with a step
size of 0.0005. In this case, the dual function is nonsmooth
and exhibits an oscillatory behavior9 just like the recovered
primal. This has an adverse effect on the stopping criteria of
the algorithm. Additionally, it is clear from Figure 8 that the
duality gap (and also the optimality gap) does not decrease
below 15%. The same observation applies to all the considered
test systems.

Finally, the computational effort of the proposed fast gra-
dient method is distributed among the agents. The MIQPs
solved by agents i 6= 0 take less than 0.15 seconds to solve
in the worst case and the aggregator subproblem and primal
recovery problems10 require less than 0.01 seconds each to
solve in the worst case. Therefore, as shown in Figure 4, the
parallel solve time of the algorithm is at most 0.15 × 60 = 9
seconds (neglecting communication overhead), which can be
ideal for an on-line version of this problem. In a practical
implementation, the convergence time of the algorithm is
expected to align with the local energy market’s operation. For
example, in the Australian National Electricity Market, supply
procurement auctions are run for each 30 minute period. In this
case, 30 minutes is ample time compared to the 9 seconds
required for the proposed algorithm to complete 60 iterations
and ﬁnd a near-optimal solution.

9Refer to Figure 2 for a geometric interpretation of the oscillations.
10The aggregator subproblem and the primal recovery problem are both

convex QPs.

350

300

250

200

150

100

50

)
k
λ
(
D
d
n
a

kr
P

0

0

10

20

30

Primal
Dual

70

80

90

100

40

50

60
Iterations (k)

Fig. 8. Evolution of the recovered primal and original dual objectives of the
test system with I = 40 using a conventional gradient method with a step
size of 0.0005.

VII. CONCLUSION

The aim of this work is to demonstrate the scalability of a
fast gradient algorithm applied to the double smoothed dual
function of a large-scale nonconvex DR problem comprising
expressive household models and mixed-integer variables. This
work demonstrates how to recover a near-optimal solution
within a preset small number of iterations and minimal param-
eter tuning. More speciﬁcally, the solutions recovered from the
algorithm are on average within 0.32% of the optimum. Addi-
tionally, the results show that the convergence of the algorithm
exhibits a similar behavior across the studied test systems,
which corroborates the method’s scalability. The paper also
provides a geometrical insight into the dual problem of the
adopted nonconvex DR model and highlights the inefﬁcacy
of the conventional gradient method in solving this speciﬁc
problem.

The work in this paper can be extended in several directions.
The formulations in this paper can be easily extended to
account for reverse power ﬂow constraints, aggregator level
renewable energy resources and aggregator controlled storage.
Additionally, the DR problem in this paper can be extended to
incorporate the nonlinear characteristics of hot-water systems,
fuel cells, micro-CHP and a second order thermal model
of a household. In this case, the resulting DR problem is
a MINLP that has a nonconvex relaxation. Finally, future
work will involve extending the DR problem in this paper
to account for the underlying power distribution network
through incorporating AC power ﬂow and system operational
constraints.

VIII. ACKNOWLEDGMENT

This research was partly supported by Ausgrid and the
Australian Research Council under Australian Research Coun-
cil’s Linkage Projects
funding scheme (project number
LP110200784).

12

REFERENCES

[1] T. Bapat, N. Sengupta, S. K. Ghai, V. Arya, Y. B. Shrinivasan, and
D. Seetharam, “User-sensitive scheduling of home appliances,” in Pro-
ceedings of the 2Nd ACM SIGCOMM Workshop on Green Networking,
ser. GreenNets ’11. New York, NY, USA: ACM, 2011, pp. 43–48.

[2] K. C. Sou, J. Weimer, H. Sandberg, and K. Johansson, “Scheduling smart
home appliances using mixed integer linear programming,” in Decision
and Control and European Control Conference (CDC-ECC), 2011 50th
IEEE Conference on, Dec 2011, pp. 5144–5149.

[3] A. Anvari-Moghaddam, H. Monsef, and A. Rahimi-Kian, “Optimal
smart home energy management considering energy saving and a
comfortable lifestyle,” IEEE Trans. Smart Grid, vol. 6, no. 1, pp. 324–
332, Jan 2015.

[4] Z. Chen, L. Wu, and Y. Fu, “Real-time price-based demand response
management for residential appliances via stochastic optimization and
robust optimization,” IEEE Trans. Smart Grid, vol. 3, no. 4, pp. 1822–
1831, Dec 2012.

[5] H.-T. Roh and J.-W. Lee, “Residential demand response scheduling
with multiclass appliances in the smart grid,” IEEE Trans. Smart Grid,
vol. PP, no. 99, pp. 1–1, 2015.

[6] M. Yu and S. Hong, “A real-time demand-response algorithm for smart
grids: A stackelberg game approach,” IEEE Trans. Smart Grid, vol. PP,
no. 99, pp. 1–1, 2015.

[7] S. Mhanna, G. Verbiˇc, and A. Chapman, “A faithful distributed mecha-
nism for demand response aggregation,” IEEE Trans. Smart Grid, to be
published.

[8] Z. Zhu, J. Tang, S. Lambotharan, W. H. Chin, and Z. Fan, “An
integer linear programming based optimization for home demand-side
management
in smart grid,” in Innovative Smart Grid Technologies
(ISGT), 2012 IEEE PES, Jan 2012, pp. 1–5.

[9] D. Nguyen and L. B. Le, “Joint optimization of electric vehicle and
home energy scheduling considering user comfort preference,” IEEE
Trans. Smart Grid, vol. 5, no. 1, pp. 188–199, Jan 2014.

[10] M. Tushar, C. Assi, M. Maier, and M. Uddin, “Smart microgrids:
Optimal joint scheduling for electric vehicles and home appliances,”
IEEE Trans. Smart Grid, vol. 5, no. 1, pp. 239–250, Jan 2014.

[11] M. Beaudin, H. Zareipour, A. Bejestani, and A. Schellenberg, “Residen-
tial energy management using a two-horizon algorithm,” IEEE Trans.
Smart Grid, vol. 5, no. 4, pp. 1712–1723, July 2014.

[12] A. Chapman, G. Verbiˇc, and D. Hill, “A healthy dose of reality for game-
theoretic approaches to residential demand response,” in Bulk Power
System Dynamics and Control - IX Optimization, Security and Control
of the Emerging Power Grid (IREP), 2013, pp. 1–13.

[13] M. Pipattanasomporn, M. Kuzlu, and S. Rahman, “An algorithm for
intelligent home energy management and demand response analysis,”
IEEE Trans. Smart Grid, vol. 3, no. 4, pp. 2166–2173, Dec 2012.

[14] J. H. Yoon, R. Baldick, and A. Novoselac, “Dynamic demand response
controller based on real-time retail price for residential buildings,” IEEE
Trans. Smart Grid, vol. 5, no. 1, pp. 121–129, Jan 2014.

[15] S. Li, D. Zhang, A. Roget, and Z. O’Neill, “Integrating home energy
simulation and dynamic electricity price for demand response study,”
IEEE Trans. Smart Grid, vol. 5, no. 2, pp. 779–788, March 2014.

[16] H. Nguyen, D. Nguyen, and L. Le, “Energy management for households
with solar assisted thermal load considering renewable energy and price
uncertainty,” IEEE Trans. Smart Grid, vol. 6, no. 1, pp. 301–314, Jan
2015.

[17] H. Karami, M. Sanjari, S. Hosseinian, and G. Gharehpetian, “An
optimal dispatch algorithm for managing residential distributed energy
resources,” IEEE Trans. Smart Grid, vol. 5, no. 5, pp. 2360–2367, Sept
2014.

[18] S. Althaher, P. Mancarella, and J. Mutale, “Automated demand response
from home energy management system under dynamic pricing and
power and comfort constraints,” IEEE Trans. Smart Grid, vol. 6, no. 4,
pp. 1874–1883, July 2015.

[19] A. Chapman, G. Verbic, and D. Hill, “Algorithmic and strategic aspects
to integrating demand-side aggregation and energy management meth-
ods,” IEEE Trans. Smart Grid, vol. PP, no. 99, pp. 1–13, 2016.

[20] L. Igualada, C. Corchero, M. Cruz-Zambrano, and F.-J. Heredia, “Opti-
mal energy management for a residential microgrid including a vehicle-
to-grid system,” IEEE Trans. Smart Grid, vol. 5, no. 4, pp. 2163–2172,
July 2014.

[21] N. Li, L. Chen, and S. Low, “Optimal demand response based on utility
maximization in power networks,” in Power and Energy Society General
Meeting, 2011 IEEE, July 2011, pp. 1–8.

13

[44] A. Safdarian, M. Fotuhi-Firuzabad, and M. Lehtonen, “A distributed
algorithm for managing residential demand response in smart grids,”
Industrial Informatics, IEEE Transactions on, vol. 10, no. 4, pp. 2385–
2393, Nov 2014.

[45] ——, “Optimal residential load management in smart grids: A decen-
tralized framework,” IEEE Trans. Smart Grid, vol. PP, no. 99, pp. 1–1,
2015.

[46] N. Gatsis and G. Giannakis, “Residential demand response with inter-
ruptible tasks: Duality and algorithms,” in Decision and Control and
European Control Conference (CDC-ECC), 2011 50th IEEE Conference
on, Dec 2011, pp. 1–6.

[47] P. Chavali, P. Yang, and A. Nehorai, “A distributed algorithm of ap-
pliance scheduling for home energy management system,” IEEE Trans.
Smart Grid, vol. 5, no. 1, pp. 282–290, Jan 2014.

[48] S.-J. Kim and G. Giannakis, “Scalable and robust demand response with
mixed-integer constraints,” IEEE Trans. Smart Grid, vol. 4, no. 4, pp.
2089–2099, Dec 2013.

[49] N. Yaagoubi and H. Mouftah, “User-aware game theoretic approach for
demand management,” IEEE Trans. Smart Grid, vol. 6, no. 2, pp. 716–
725, March 2015.

[50] M. Tushar, C. Assi, and M. Maier, “Distributed real-time electricity
allocation mechanism for large residential microgrid,” IEEE Trans.
Smart Grid, vol. 6, no. 3, pp. 1353–1363, May 2015.

[51] A. Chapman and G. Verbiˇc, “An iterative on-line auction mechanism for
aggregated demand-side participation,” IEEE Trans. Smart Grid, vol. PP,
no. 99, pp. 1–1, 2015.

[52] S. Mhanna, A. Chapman, and G. Verbiˇc, “A distributed algorithm for
demand response with mixed-integer variables,” IEEE Trans. Smart
Grid, to be published.

[53] L. M. Ausubel, P. Cramton, and P. Milgrom, The clock-proxy auction:

A practical combinatorial auction design. MIT Press, 2006.

[54] Y. Nesterov, Introductory lectures on convex optimization.

Springer,

2004, vol. 87.

[55] D. Rajan and S. Takriti, “Minimum up/down polytopes of the unit

commitment problem with start-up costs,” IBM Res. Rep, 2005.

[56] K. Hedman, M. Ferris, R. O’Neill, E. Fisher, and S. Oren, “Co-
optimization of generation unit commitment and transmission switching
with N-1 reliability,” Power Systems, IEEE Transactions on, vol. 25,
no. 2, pp. 1052–1063, May 2010.

[57] “Thermal Model

of

a

Household”.

[Online].

Available:

http://au.mathworks.com/help/simulink/examples/thermal-model-of-a-house.html

[58] J. M. Danskin, The Theory of Max-Min and Its Applications to Weapons

Allocation Problems. New York: Springer-Verlag, 1967.

[59] P. Bernhard and A. Rapaport, “On a theorem of Danskin with an
application to a theorem of Von Neumann-Sion,” Nonlinear Analysis:
Theory, Methods & Applications, vol. 24, no. 8, pp. 1163 – 1181, 1995.

[60] D. P. Bertsekas, Nonlinear programming. Athena Scientiﬁc, 1999.
[61] S. Boyd, L. Xiao, and A. Mutapcic, “Subgradient methods,” lecture notes

of EE392o, Stanford University, Autumn Quarter, 2008.

[62] Y. Nesterov, “Smooth minimization of non-smooth functions,” Mathe-

matical programming, vol. 103, no. 1, pp. 127–152, 2005.

[63] O. Devolder, F. Glineur, and Y. Nesterov, “Double smoothing technique
for large-scale linearly constrained convex optimization,” SIAM Journal
on Optimization, vol. 22, no. 2, pp. 702–727, 2012.

[64] “Appliance

energy

usage

guide”.

[Online].

Available:

http://www.ausgrid.com.au

[65] O. Erdinc, N. Paterakis, T. Mendes, A. Bakirtzis, and J. Catal˜ao, “Smart
household operation considering bi-directional EV and ESS utilization
by real-time pricing-based DR,” IEEE Trans. Smart Grid, vol. PP, no. 99,
pp. 1–1, 2014.

[66] R. Fourer, D. M. Gay, and B. Kernighan, Algorithms and Model
Formulations in Mathematical Programming, S. W. Wallace, Ed. New
York, NY, USA: Springer-Verlag New York, Inc., 1989.

[67] Gurobi Optimization Inc., “Gurobi optimizer reference manual,” 2015.

[22] Y. Liu, C. Yuen, S. Huang, N. Ul Hassan, X. Wang, and S. Xie, “Peak-
to-average ratio constrained demand-side management with consumer’s
preference in residential smart grid,” Selected Topics in Signal Process-
ing, IEEE Journal of, vol. 8, no. 6, pp. 1084–1097, Dec 2014.

[23] S. Maharjan, Y. Zhang, S. Gjessing, and D. Tsang, “User-centric
demand response management in the smart grid with multiple providers,”
Emerging Topics in Computing, IEEE Transactions on, vol. PP, no. 99,
pp. 1–1, 2014.

[24] P. Samadi, A.-H. Mohsenian-Rad, R. Schober, V. Wong, and J. Jatske-
vich, “Optimal real-time pricing algorithm based on utility maximization
for smart grid,” in Smart Grid Communications (SmartGridComm), 2010
First IEEE International Conference on, Oct 2010, pp. 415–420.

[25] S. Maharjan, Q. Zhu, Y. Zhang, S. Gjessing, and T. Basar, “Dependable
demand response management in the smart grid: A stackelberg game
approach,” IEEE Trans. Smart Grid, vol. 4, no. 1, pp. 120–132, March
2013.

[26] N. Gatsis and G. Giannakis, “Residential

load control: Distributed
scheduling and convergence with lost AMI messages,” IEEE Trans.
Smart Grid, vol. 3, no. 2, pp. 770–786, June 2012.

[27] Z. Baharlouei and M. Hashemi, “Efﬁciency-fairness trade-off in privacy-
preserving autonomous demand side management,” IEEE Trans. Smart
Grid, vol. 5, no. 2, pp. 799–808, March 2014.

[28] Y. Zhang, N. Gatsis, and G. Giannakis, “Disaggregated bundle methods
for distributed market clearing in power networks,” in Global Conference
on Signal and Information Processing (GlobalSIP), 2013 IEEE.
IEEE,
2013, pp. 835–838.

[29] N. Gatsis and G. Giannakis, “Decomposition algorithms for market
clearing with large-scale demand response,” IEEE Trans. Smart Grid,
vol. 4, no. 4, pp. 1976–1987, Dec 2013.

[30] S. Maharjan, Q. Zhu, Y. Zhang, S. Gjessing, and T. Basar, “Demand
response management in the smart grid in a large population regime,”
IEEE Trans. Smart Grid, vol. PP, no. 99, pp. 1–1, 2015.

[31] J. Ma, H. Chen, L. Song, and Y. Li, “Residential load scheduling in smart
grid: A cost efﬁciency perspective,” IEEE Trans. Smart Grid, vol. PP,
no. 99, pp. 1–1, 2015.

[32] Z. Tan, P. Yang, and A. Nehorai, “An optimal and distributed demand
response strategy with electric vehicles in the smart grid,” IEEE Trans.
Smart Grid, vol. 5, no. 2, pp. 861–869, March 2014.

[33] N. Rahbari-Asr, U. Ojha, Z. Zhang, and M.-Y. Chow, “Incremental wel-
fare consensus algorithm for cooperative distributed generation/demand
response in smart grid,” IEEE Trans. Smart Grid, vol. 5, no. 6, pp.
2836–2845, Nov 2014.

[34] Z. Wang and R. Paranjape, “Optimal residential demand response for
multiple heterogeneous homes with real-time price prediction in a
multiagent framework,” IEEE Trans. Smart Grid, vol. PP, no. 99, pp.
1–12, 2015.

[35] S.-C. Tsai, Y.-H. Tseng, and T.-H. Chang, “Communication-efﬁcient
distributed demand response: A randomized ADMM approach,” IEEE
Trans. Smart Grid, vol. PP, no. 99, pp. 1–1, 2015.

[36] P. McNamara and S. McLoone, “Hierarchical demand response for peak
minimization using Dantzig-Wolfe decomposition,” IEEE Trans. Smart
Grid, vol. 6, no. 6, pp. 2807–2815, Nov 2015.

[37] F. Kamyab, M. Amini, S. Sheykhha, M. Hasanpour, and M. Jalali,
“Demand response program in smart grid using supply function bidding
mechanism,” IEEE Trans. Smart Grid, vol. PP, no. 99, pp. 1–1, 2015.
[38] H. Lu, M. Zhang, Z. Fei, and K. Mao, “Multi-objective energy consump-
tion scheduling in smart grid based on Tchebycheff decomposition,”
IEEE Trans. Smart Grid, vol. 6, no. 6, pp. 2869–2883, Nov 2015.

[39] I. Atzeni, L. Ordonez, G. Scutari, D. Palomar, and J. Fonollosa,
“Demand-side management via distributed energy generation and stor-
age optimization,” IEEE Trans. Smart Grid, vol. 4, no. 2, pp. 866–876,
June 2013.

[40] ——, “Noncooperative and cooperative optimization of distributed en-
ergy generation and storage in the demand-side of the smart grid,” IEEE
Trans. Signal Processing, vol. 61, no. 10, pp. 2454–2472, May 2013.

[41] L. Gkatzikis, T. Salonidis, N. Hegde, and L. Massoulie, “Electricity
markets meet the home through demand response,” in Decision and
Control (CDC), 2012 IEEE 51st Annual Conference on, Dec 2012, pp.
5846–5851.

[42] G. Brusco, A. Burgio, D. Menniti, A. Pinnarelli, and N. Sorrentino, “En-
ergy management system for an energy district with demand response
availability,” IEEE Trans. Smart Grid, vol. 5, no. 5, pp. 2385–2393, Sept
2014.

[43] L. Zheng and L. Cai, “A distributed demand response control strategy
using lyapunov optimization,” IEEE Trans. Smart Grid, vol. 5, no. 4,
pp. 2075–2083, July 2014.

14

Sleiman Mhanna (S’13) received the B.Eng. de-
gree (with high distinction) from the Notre Dame
University, Lebanon, and the M.Eng. degree from
the American University of Beirut, Beirut, Lebanon,
in 2010 and 2012, respectively, both in electrical
engineering. He is currently pursing the Ph.D. de-
gree with the School of Electrical and Information
Engineering, Centre for Future Energy Networks,
University of Sydney, Sydney, NSW, Australia.

His research interests include distributed methods
and game theoretic analysis in power systems, de-
mand response pricing mechanisms, and grid integration of distributed energy
resources.

Gregor Verbiˇc (S’98–M’03–SM’10) received the
B.Sc., M.Sc., and Ph.D. degrees in electrical engi-
neering from the University of Ljubljana, Ljubljana,
Slovenia, in 1995, 2000, and 2003, respectively. In
2005, he was a North Atlantic Treaty Organization-
Natural Sciences and Engineering Research Council
of Canada Post-Doctoral Fellow with the University
of Waterloo, Waterloo, ON, Canada. Since 2010, he
has been with the School of Electrical and Infor-
mation Engineering, University of Sydney, Sydney,
NSW, Australia. His expertise is in power system

operation, stability and control, and electricity markets.

His current research interests include integration of renewable energies into
power systems and markets, optimization and control of distributed energy
resources, demand response, and energy management in residential buildings.
Dr. Verbiˇc was a recipient of the IEEE Power and Energy Society Prize Paper
Award in 2006. He is an Associate Editor of the IEEE TRANSACTIONS ON
SMART GRID.

Archie C. Chapman (M’14) received the B.A.
degree in math and political science, and the B.Econ.
(Hons.) degree from the University of Queensland,
Brisbane, QLD, Australia, in 2003 and 2004, re-
spectively, and the Ph.D. degree in computer science
from the University of Southampton, Southampton,
U.K., in 2009.

He is currently a Research Fellow in Smart
Grids with the School of Electrical and Information
Engineering, Centre for Future Energy Networks,
University of Sydney, Sydney, NSW, Australia. He
has experience in game-theoretic and reinforcement learning techniques for
optimization and control in large distributed systems.

