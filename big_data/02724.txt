On the computational complexity of exterior products

Dmitri A. Ivanov1, 2

1Institute for Theoretical Physics, ETH Z¨urich, 8093 Z¨urich, Switzerland

2Institute for Theoretical Physics, University of Z¨urich, 8057 Z¨urich, Switzerland

(Dated: February 12, 2016)

Computing the coeﬃcients of an exterior product of two-forms of rank two is #P-hard. Specif-
ically, a permanent of a N × N matrix may be expressed as an exterior product of N 2 two-forms
of rank two in dimension 2N 2. In the context of quantum computing, such exterior products de-
scribe multi-particle scattering amplitudes of non-interacting fermions initially prepared in entangled
states.

6
1
0
2

 
r
a

M
8

 

 
 
]

C
C
.
s
c
[
 
 

1
v
4
2
7
2
0

.

3
0
6
1
:
v
i
X
r
a

I.

INTRODUCTION

The main result of this paper concerns the complexity
of computing the exterior product of two-forms of rank
two. Consider a 2M -dimensional linear space and 4M
vectors v1, . . . , v4M in this space. Deﬁne the function
D2,2(v1, . . . , v4M ) as

D2,2(v1, . . . , v4M ) = (v1 ∧ v2 + v3 ∧ v4)
∧ (v5 ∧ v6 + v7 ∧ v8) ∧ . . .
∧ (v4M−3 ∧ v4M−2 + v4M−1 ∧ v4M ) ,

(1)
where ∧ denotes exterior product. The above expres-
sion is the exterior product of M two-forms of rank
two, which produces a volume form D2,2(v1, . . . , v4M )
in the 2M -dimensional linear space.
If we ﬁx a basis
e1, . . . , e2M in the linear space, then each of the vec-
tors vi can be expressed as a sequence of 2M numbers,
and D2,2(v1, . . . , v4M ) is also a number (the coeﬃcient at
e1∧. . .∧e2M ). In other terms, D2,2(v1, . . . , v4M ) is a sum
of 2M determinants of 2M × 2M matrices composed of
vectors vi: the matrix is split into M pair of rows, and,
for each pair of rows, two pairs of vectors vi are consid-
ered (for the ﬁrst pair of rows, either v1 and v2 or v3 and
v4, and so on).

It is well known that computing the determinant of a
matrix can be done in a time polynomial in the matrix
dimension (see, e.g., the textbook [1]). One may there-
fore pose a question if a calculation of D2,2(v1, . . . , v4M )
could also be optimized to a polynomial in M number of
operations. The result of this paper answers this ques-
tion negatively, assuming that #P-hard problems can-
not be solved in polynomial time. More precisely, I show
that computing D2,2(v1, . . . , v4M ) is at least as diﬃcult
as computing a permanent of a matrix, which is, in turn,
known to be #P-complete [3].
The proof is done by re-expressing the permanent of
an arbitrary N × N matrix as D2,2(v1, . . . , v4M ) with
M = N 2 for a specially chosen set of vectors vi. The
details of the proof are presented in the next section.

The subsequent section contains a brief discussion of

the result, including some simple generalizations.

Finally, the last section provides a physical motiva-
tion for considering the function (1). Namely, it emerges
in one of the attempts to generalize the BosonSampling

proposal for quantum computing [2] to the sampling of
noninteracting fermions with the initial state entangled
in a special way.

II. PROOF

The proof can be most easily formulated in terms of
graphs. The permanent of a matrix A of dimension N
with coeﬃcients aij is deﬁned as

(cid:88)

N(cid:89)

Per(A) =

aiσ(i) ,

(2)

σ

i=1

where the sum is performed over all permutations σ of
N elements. We can think of A as a weighted adjacency
matrix for a graph with N nodes, so that aij is the weight
attributed to the edge directed from i to j. In this repre-
sentation, Per(A) can be thought of as the sum of prod-
ucts of weights over all cycle covers of this directed graph
[1].

A similar representation is possible for the function
(1). Namely, consider a directed graph with 2M nodes
and edges colored in two colors (dubbed “color 1” and
“color 2” below and shown as solid and dashed arrows
in the ﬁgures). Let vectors v1 and v2 contain weights
attributed to color-1 edges, originating from nodes 1
and 2, respectively, vectors v3 and v4 contain weights
attributed to color-2 edges, originating from the same
nodes 1 and 2, respectively, and so on. Generally, vectors
v4i−3 and v4i−2 correspond to color-1 edges originated
from nodes 2i − 1 and 2i, respectively, and vectors v4i−1
and v4i correspond to their color-2 counterparts. Then
D2,2(v1, . . . , v4M ) can be viewed as the sum of products
of weights, multiplied by the corresponding signs, over all
cycle covers of this directed graphs under the constraint
that, for each pair of nodes (1,2), (3,4), . . . , (2M − 1,
2M ), the cycle cover uses the same color for edges origi-
nating from the two nodes in the pair. The sign factor is
determined as the parity of the total number of cycles.

The idea of the proof is to construct, for each directed
graph for a matrix permanent, a two-color directed graph
for the function (1), so that the loop covers are in one-to-
one correspondence in the two graphs and produce the
same weights.
In order to cancel the sign factors, we

2

structed two-color directed graph equals the permanent
of the matrix (aij).
An example of the 3 × 3 matrix is presented in Ap-

pendix.

Since the computation of the permanent of a matrix
with integer elements is #P-complete [3], this proves
that the computation of the function D2,2(v1, . . . , v4M )
for integer-valued vectors vi is #P-hard (a computation
of the permanent can be reduced to this function with a
polynomial time overhead).

III. DISCUSSION

The above proof admits several simple generalizations

and corollaries.

First, the above relation between the permanent and
the function (1) holds for coeﬃcients in any ﬁeld or, even
more generally, in any commutative ring.
Second, one can generalize the function (1) to an ex-
terior product of k-forms of rank ≤ r in kM -dimensional
linear space,

Dk,r(ω1, . . . ωM ) = ω1 ∧ . . . ∧ ωk ,

(3)
where all ωi are k-forms of rank ≤ r. The function D2,2
is the simplest nontrivial example of this construction.
Moreover, for any k ≥ 2 and r ≥ 2, the function Dk,r
includes D2,2 as a particular case. This implies that the
more general function Dk,r is also #P-hard (for k ≥ 2
and r ≥ 2). On the other hand, for k = 1 or r = 1, the
function Dk,r is the determinant and is computable in
polynomial time.

The proof above shows that the exact computation of
the function (1) is at least as diﬃcult as the exact compu-
tation of the permanent. Yet another interesting question
is an approximate computation. While the permanent of
a matrix with positive entries admits an eﬃcient (ran-
domized) approximate calculation in a polynomial time
[4], even an approximate calculation (up to a multiplica-
tive factor) of a permanent in the general case is believed
to be exponentially hard [7–9]. If this is indeed the case,
the worst-case running time of an approximate calcula-
tion of the function (1) should also be exponential.

Finally, there is an apparent similarity between the
function (1) and mixed discriminants, which are also
known to be #P-hard [6, 7]. However, I am not aware of
any reduction of the function (1) to mixed discriminants
or vice versa.

IV. PHYSICAL MOTIVATION

The physical motivation for considering the function
(1) comes from the quantum-computing proposal of
BosonSampling [2].
In that proposal, noninteracting
bosons are sent into a scattering system in a set of chan-
nels with one boson per channel. The amplitudes of the

FIG. 1: The construction of the two-color directed graph for
function (1) [panel (b)] from the graph for a permanent [panel
(a)]. The weights of the directed edges are labeled as aij. The
unlabeled edges have weight one. The nodes of the two-color
directed graph are grouped in pairs: 1A together with 1B,
1A2 together with 1B2, and so on (every node labeled with
letter A is paired with the corresponding node with letter B).
Within each pair, the color of the outgoing edges in the cycle
cover must be unique.

double the number of nodes: the nodes in the two-color
graph will be denoted as “A nodes” and “B nodes”, and
the edges will only connect nodes of the same type. At
the same time, the coloring scheme will be used in such a
way as to constrain the cycle cover of A nodes to exactly
repeat the cycle cover of B nodes, so that the sign factor
cancels out.

The construction of such a two-color directed graph is
shown in Fig. 1. Without loss of generality, we consider
node 1. It has N outgoing edges (to the same node and to
the N−1 other nodes). This node and the outgoing edges
are replaced by 2N nodes (N A nodes and N B nodes)
and the corresponding outgoing edges as shown in the
ﬁgure. The A nodes are paired with the corresponding
B nodes (in the ﬁgure, node 1A forms a pair with node
1B, node 1A2 with node 1B2, etc.).

This construction is repeated for each node of the origi-
nal directed graph for the matrix permanent. As a result,
the two-color directed graph for the function (1) contains
2N 2 nodes.

On inspection, the constraint of the cycle covers in the
two-color directed graph guarantees that the cycles in
the A nodes exactly reproduce the cycles in the corre-
sponding B nodes. This cancels out the sign factor. At
the same time, the product of the weights of the edges
reproduces the product of the edges in the correspond-
ing cycle cover of the directed graph for the permanent.
This proves that the function (1) calculated for the con-

1

v1 a11
v2
v3
v4

a12

a13

1

1

v5
v6
v7
v8

v9
v10
v11
v12

v13
v14
v15
v16

v17
v18
v19
v20

v21
v22
v23
v24

v25
v26
v27
v28

v29
v30
v31
v32

v33
v34
v35
v36

a22

1

a33

1

1

1

1

1

a21

a23

1

1

a31

a32

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

3

the non-Gaussian property of the initial state that is im-
portant for the complexity of the quantum computation
[10, 11] (for bosons, the state of one boson per channel
is non-Gaussian).

The proposal of [5] involves fermions with a large num-
ber of internal quantum degrees of freedom. One can try
to optimize this proposal by using simpler non-Gaussian
states of fermions. One of the simplest non-Gaussian
states is the entangled state of two fermions in four single-
particle states:

Ψ4 =

1√
2

(|1100(cid:105) + |0011(cid:105)) ,

(4)

where 1100 and 0011 refer to the fermionic occupation
numbers in the four states. Consider a quantum sys-
tem of 4M single-particle states divided into quadruplets
and prepare the state Ψ4 in each of them. Then act
with an arbitrary single-particle evolution operator U on
this multi-particle state and measure the 4M occupation
numbers in the ﬁnal state. The amplitudes of the tran-
sitions from the initial state to each of the possible ﬁnal
conﬁgurations are then given by the function (1) with the
vectors vi composed of the corresponding columns of the
evolution operator U .

The result on the high complexity of the function (1)
allows us to conjecture (but does not prove) that this
fermionic protocol may be used to demonstrate quantum
supremacy of the same type as BosonSampling. A proof
(or a refutation) of this conjecture would go beyond the
scope of this paper and may present an independent chal-
lenge, similarly to the BosonSampling case [2].

V. ACKNOWLEDGMENTS

TABLE I: Vectors vi for the identity (5). Each of these vectors
has 18 components (grouped in pairs for better visualization).
Empty spaces denote zeros.

I thank A. G. Abanov, V. Fock, P. Roushan, and
A. Shen for discussions. This work was supported by the
Swiss National Foundation through the NCCR QSIT.

outgoing boson conﬁgurations are then given by the per-
manents of the submatrices of the scattering matrix, and
the authors conjecture that the complexity of the perma-
nent makes this experiment impossible to model in poly-
nomial time on a classical computer (and thus demon-
strates “quantum supremacy”).

A naive counterpart of this proposal with fermions does
not work: the corresponding amplitudes for fermions pro-
duce easily computable determinants. However, it was
shown that BosonSampling can also be performed with
fermions, provided that the fermions are prepared in a
specially entangled state [5].
In fact, it appears to be

VI. APPENDIX

The simplest nontrivial case that illustrates the con-
In that

struction shown in Fig. 1 is the 3 × 3 matrix.
case, we have the identity

a11 a12 a13

a21 a22 a23
a31 a32 a33

 = D2,2(v1, . . . , v36) ,

Per

(5)

where the vectors v1, . . . , v36 are listed in Table III.

[1] C. H. Papadimitriou, Computational Complexity,

[2] S. Aaronson and A. Arkhipov, The computational com-

(Addison-Wesley, 1994).

4

plexity of linear optics, Theory of Computing, 9, 143
(2013).

[3] L. G. Valiant, The complexity of computing the perma-

nent, Theor. Comp. Sci. 8, 189 (1979).

[4] M. R. Jerrum, A. Sinclair, and E. Vigoda, A polynomial-
time approximation algorithm for the permanent of a ma-
trix with nonnegative entries, J. of the ACM, 51, 671
(2004).

[5] V. S. Shchesnovich, Boson-Sampling with non-interacting
fermions, Int. J. Quantum Inform., 13, 1550013 (2015).
[6] A. Barvinok, Computing mixed discriminants, mixed vol-
umes, and permanents, Discrete Comput. Geom. 18, 205
(1997).

[7] L. Gurvits, On the complexity of mixed discriminants and

related problems, in Mathematical Foundations of Com-
puter Science, 3618, 447 (Springer, 2005).

[8] S. Aaronson and T. Hance, Generalizing and Derandom-
izing Gurvits’s Approximation Algorithm for the Perma-
nent, Quantum Inform. and Comp., 14, 541 (2014).

[9] S. Aaronson, A linear-optical proof that the permanent is

#P-hard, Proc. Roy. Soc. London, A467, 3393 (2011).

[10] S. Bravyi, Universal quantum computation with the
ν=5/2 fractional quantum Hall state, Phys. Rev. A 73,
042313 (2006).

[11] F. de Melo, P. ´Cwikli´nski, B. Terhal, The power of
noisy fermionic quantum computation, New J. Phys. 15,
013015 (2013).

