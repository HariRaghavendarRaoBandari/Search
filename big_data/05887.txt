6
1
0
2

 
r
a

 

M
8
1

 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 

1
v
7
8
8
5
0

.

3
0
6
1
:
v
i
X
r
a

Adjoint-based Optimal Flow Control for Compressible DNS
Open Cavity Noise Control

J. Javier Otero · Ati S. Sharma · Richard D. Sandberg

March 18, 2016

Abstract A novel adjoint-based framework oriented to optimal ﬂow control in compressible direct numerical simulations
is presented. Also, a new formulation of the adjoint characteristic boundary conditions is introduced, which enhances the
stability of the adjoint simulations. The ﬂow conﬁguration chosen as a case study consists of a two dimensional open cavity
ﬂow with aspect ratio L/H = 3 and Reynolds number Re = 5000. This ﬂow conﬁguration is of particular interest, as the tur-
bulent and chaotic nature of separated ﬂows pushes the adjoint approach to its limit. The target of the ﬂow actuation, deﬁned
as cost, is the reduction of the pressure ﬂuctuations at the sensor location. To exploit the advantages of the adjoint method,
a large number of control parameters is used. The control consists of an actuating sub-domain where a two-dimensional
body force is applied at every point within the sub-volume. This results in a total of 2.256 · 106 control parameters. The
ﬁnal actuation achieved a successful reduction of the cost of 79.6%, by altering the directivity of the sound radiated by the
trailing edge of the cavity and breaking up the large shear layer instabilities into smaller structures.

Keywords Adjoint · Optimal ﬂow control · Compressible DNS · Cavity noise

1 Introduction

The control of separated ﬂows has caught the attention of numerous researchers for several decades. The current computa-
tional capabilities permit the use of more advanced techniques for their study, which give a new perspective to develop ﬂow
control schemes. The use of the adjoint method to ﬂuid ﬂows is gaining in popularity amongst the ﬂow control community
to carry out gradient-based optimal ﬂow control. Examples of successful applications of adjoint-based optimal ﬂow control
are turbulence reduction in a channel ﬂow [2], aero-acoustic jet noise reduction [6,14], or optimal porous media distribution
in an aerofoil’s trailing edge to minimise aero-acoustic radiation [29]. Note that due to the high computational demands of
the method, it is a common practice to make simpliﬁcations of the ﬂow, such as assuming incompressibility [3], constant
viscosity [33] or even linearising the dynamics of the ﬂow [7].

In the current investigation we present a recently developed multi-block full compressible Navier-Stokes continuous ad-
joint solver with non-constant viscosity. The code is applied to a two dimensional separated ﬂow scenario to explore the
capabilities and limitations of the method. In particular, we focus on the importance of the sensor and actuator locations. Ad-
ditionally, the derivation of the method and especially a novel formulation of the adjoint characteristic boundary conditions
are explained in detail, which adds to this article a pedagogical value. The ﬂow conﬁguration chosen for the present investiga-
tion is an open cavity ﬂow with aspect ratio L/H = 3 (ﬁgure 1a). Despite its simple geometry, this ﬂow conﬁguration gives
rise to complex non-linear ﬂow phenomena with constant ﬂow separation and constant reattachment. Kelvin-Helmholtz type

J. Javier Otero (B) · Ati S. Sharma
Faculty of Engineering and the Environment, University of Southampton, Southampton SO17 1BJ, U.K.
E-mail: j.j.otero-perez@soton.ac.uk

Richard D. Sandberg
Department of Mechanical Engineering, University of Melbourne, Victoria 3010, Australia

2

(a)

y

2

1

0

−1

0

1

2

3

4

J.J. Otero, A.S. Sharma and R.D. Sandberg

(b)

2

1

0

−1

0

1

2

3

4

x

x

Fig. 1: (a) Instantaneous contours of z-vorticity. Red dashed lines represent the sound radiation from the trailing edge. (b)
Sketch of the ﬂow control setup with an instantaneous snapshot of the ﬂow dilatation ﬁeld in the background. The green box
and the blue dashed circle depict the ﬂow actuation and sensing regions, respectively.

instabilities grow in the separated shear layer, creating non-linear structures which impinge on the trailing edge of the cavity.
This unsteady interaction radiates acoustic waves that also propagate upstream. Due to the high receptivity of the leading
edge, these compressible ﬂow events further excite some of the unstable shear layer modes. The concatenation of these
phenomena results in a feedback loop that is responsible for self-sustained oscillations, which are also known as Rossiter’s
modes [25]. For further reading about open cavity ﬂows, a summary of the recent computations and experimental techniques
can be found in [16].

In summary, the present investigation uses adjoint-based optimal ﬂow control on a cavity ﬂow to minimise the acoustic
radiation at the sensor location actuating on the upstream ﬂow (ﬁgure 1b). The control methodology is introduced in section 2,
where the different branches within adjoint-based optimisation and their limitations are discussed. Sections 3 and 4 describe
the governing equations and the numerical treatment employed for the ﬂow and adjoint simulations respectively. The ﬂow
control exercise alongside the results is described in section 5. Finally, section 6 presents the conclusions.

2 Flow Control and Optimization

To evaluate the performance of a ﬂow control strategy a generic quadratic cost functional is deﬁned as

J (Q, φ) =

1

2Z T
0 ZΩhW (x) QT

M1Q + φT

M2φi dxdt,

(1)

where Q represents the state variables and φ is the vector of control parameters. M1 sets the relation of the state variables
in the cost function and M2 accounts for the cost in the actuation parameters. The function W (x) weights the cost in the
domain Ω. The optimal control will be the values of the actuation parameters that result in the absolute minimum of the cost
functional for the time horizon T .

To drive the cost function towards its minimum, the gradient

DJ
Dφ

=

∂J
∂Q

dQ
dφ

+

∂J
∂φ

(2)

must be computed. The challenging part of obtaining the gradient resides in the computation of the sensitivities of the system
dQ/dφ. The most intuitive method to calculate this term is perturbing individually each of the control parameters, and then
using a ﬁnite difference scheme to approximate the derivatives. This process would be repeated until the minimum value of
the cost functional is reached, where DJ /Dφ = 0. With this method, the amount of required ﬂuid simulations increases
proportionally with the number of control parameters, which makes this approach unattainable when dealing with practical
CFD simulations [28]. Fortunately for the present investigation, there are alternatives which provide optimal control with a
much lower computational cost.

Adjoint-based Optimal Flow Control for Compressible DNS

2.1 Adjoint Method

The Lagrangian functional L is deﬁned as

3

(3)

· N (Q, φ) ,

L(cid:0)Q, Q∗, φ(cid:1) = J (Q, φ) −(cid:0)Q∗(cid:1)T

where N is the operator representing the set of governing equations and Q∗ are the co-state or adjoint variables. The
governing equations, the adjoint equations and the optimality condition can be derived from the Lagrangian functional [19]
by setting its ﬁrst variation with respect to Q∗, Q and φ equal to zero, respectively

δL
δQ∗ = 0
δL
δQ
δL
δφ

= 0

= 0

⇒

⇒

⇒

State equations

Adjoint equations

Optimality condition.

(4)

(5)

(6)

From these three systems of equations the optimal control can be achieved by solving iteratively the state equations, fol-
lowed by the solution of the adjoint equations, to ﬁnally use these two results to compute the updated control parameters
with the optimality condition. Unfortunately, this method is equivalent to a steepest descent algorithm with a ﬁxed step size
[10], which can converge very slowly. Due to the great cost of performing DNS, we instead use the L-BFGS algorithm [21],
which is more efﬁcient [1]. Note that the tolerances of the optimisation algorithm might require modiﬁcation to satisfy the
Wolfe conditions [23]. The authors recommend a low tolerance in the descent condition. High tolerances are likely to not
satisfy this condition, resulting into the line search algorithm changing direction, converging to the initial control state. As
shown later in section 4, the reader should bear in mind that the state equations march forward in time starting from an ini-
tial condition at t = 0, whereas the adjoint equations are posed backwards in time starting from a terminal condition at t = T .

2.1.1 Adjoint-based Gradient

The sensitivity equations can be derived by differentiating the state equations with respect to φ, resulting in

∂N
∂Q

dQ
dφ

+

∂N
∂φ

= 0.

Rearranging (7) and substituting it into (2) leads to

where the solution to the adjoint system (5) is

DJ
Dφ

=

∂J
∂φ

−

∂J

∂Q(cid:18) ∂N

∂Q(cid:19)−1(cid:18) ∂N
∂φ(cid:19) ,

Q∗ =" ∂J

∂Q(cid:18) ∂N

∂Q(cid:19)−1#T

.

The adjoint equations can now be expressed as

Its solution can be used to compute the gradient of the functional as

∂Q(cid:19)T
(cid:18) ∂N

∂Q(cid:19)T
Q∗ =(cid:18) ∂J

.

Note that for (11), the cost of computing the gradient is independent of the number of control parameters and is only neces-
sary to solve the adjoint system once to obtain the gradients for every control parameter.

DJ
Dφ

=

∂J
∂φ

.

−(cid:0)Q∗(cid:1)T ∂N

∂φ

(7)

(8)

(9)

(10)

(11)

4

(a)

101

k
∗
Q
k

10−1

10−3

T0

T0 + 15

T0 + 30

T0 + 45

J.J. Otero, A.S. Sharma and R.D. Sandberg

(b)

y

2

1

0

−1

0

1

2

3

4

←− t

x

Fig. 2: (a) Norm of the adjoint-ﬁeld for the current 2D cavity. Note that adjoint simulations run backwards in time starting
from a terminal condition. (b) Sketch of the gradient computation setup with an instantaneous snapshot of the adjoint-ﬁeld
(m∗

v). The green box and the blue dashed circle depict the ﬂow actuation and sensing regions, respectively.

There are two different approaches to derive the adjoint of a system, where both of them have their advantages and disad-
vantages with respect to each other. These two methods are the continuous or differentiate then discretise, and the discrete or
discretise then differentiate. The continuous approach consists of deriving the adjoint equations analytically following (5),
where they are then discretised with a numerical scheme to be solved numerically. This procedure provides great ﬂexibility
in terms of choosing the numerical discretisation. On the other hand, the discrete approach starts from the already discretised
forward system which is then differentiated to obtain the discrete adjoint operator. Note that with this method, the numerics
used to solve the forward system of equations are kept during the entire derivation. This includes the numerical scheme used,
boundary conditions, and so on. Note also that if any of these numerical methods are changed the whole derivation procedure
must be repeated. To make this process simpler, automatic differentiation tools [20] or matrix-free methods [7] can be used.
The main characteristic of the discrete approach is that the sensitivities and the gradients obtained are consistent with the
discretised problem. This means that, for example, in a very under-resolved simulation, the discrete adjoint will provide the
‘right’ gradients to minimise the cost function even though the physics of the problem are corrupted due to poor grid resolu-
tion. On the contrary, the continuous adjoint would fail to give the the ‘correct’ gradients to minimise the given cost function.
This same situation would occur if the forward equations suffer from modelling errors. Theoretically, both continuous and
discrete approaches would converge to the same result when the discretisation errors vanish (∆x → 0) and the equations
are physically correct. Vishnampet et al. [33] claimed a higher ‘accuracy’ in the sense above of their discrete adjoint code
against their continuous one when comparing the gradients from both adjoint solvers with a ﬁnite difference approach. In
their study, they considered a shear-layer in an open ﬂow, where the boundary conditions were of characteristic-type and
they also assumed viscosity to be constant. A common practice when dealing with characteristic boundary conditions in
continuous adjoint codes is to neglect the boundary terms that arise from the derivation of the continuous adjoint equations
(see section 4.2.1). Similarly, the assumption of constant viscosity might have a different effect in the forward and adjoint
continuous equations. In the authors’ opinion it is unsurprising that they claimed an accuracy down to numerical precision
for the discrete adjoint, as both forward and discrete adjoint systems are the same. Further discussion about the differences
of both approaches can be found, for example, in [19,9].

2.1.2 Limitations of Adjoint-based Optimisation: Model Predictive Control

In a separated ﬂow, the trajectories of two neighbouring ﬂuid particles diverge exponentially with time due to the chaotic
behaviour of turbulence. Consequently, the initial condition is ‘forgotten’ by the system and the system’s sensitivities cannot
be computed because the initial and ﬁnal conditions are unrelated. This means that if the prediction time horizon is longer
than the time it takes two neighbouring trajectories to diverge, the computed sensitivities will be incorrect. Lea et al. [17]
used the Lorenz attractor as an example of chaotic systems, showing how the adjoint analysis failed to give the correct
time-averaged sensitivities. They suggested that for relatively long time horizons with respect to the predictability of the
system’s time scales, the adjoint quantities diverge exponentially due to cumulative error growth (ﬁgure 2a). Hence, the use
of techniques such as receding horizon [18] are necessary.

Bewley et al. [2] carried out ﬂow control on a turbulent channel ﬂow, where a larger time horizon was shown to be beneﬁcial
when controlling time-averaged ﬂow quantities. On the other hand, they stated that as the prediction horizon is increased, the
required effort to optimise the dynamical system for a given control scheme increases exponentially. An intrinsic limitation

Adjoint-based Optimal Flow Control for Compressible DNS

5

in the choice of this time horizon T resides in the travelling time of the control ﬂow scales from the actuation location to the
target region, which depends exclusively on the ﬂow characteristics between these two locations (ﬁgure 1b). Note that the
same limitation occurs in adjoint simulations in the opposite direction (ﬁgure 2b).

3 Flow Simulations

3.1 Governing Equations

The full compressible Navier-Stokes equations govern the ﬂuid ﬂow in our simulations. This set of equations are derived by
applying the mass conservation, Newton’s second law (momentum conservation) and the conservation of energy, resulting
into a non-linear set of ﬁve partial differential equations (PDEs), known as continuity (12), momentum (13) and energy (14)
equations, which are deﬁned for the entire ﬂow domain Ω. The equations are used in their conservative form, where the

variables are density ρ, the three-dimensional velocity vector u and the total energy E = T /(cid:2)γ (γ − 1) M 2

∞(cid:3) + 1

2 u · uT,

∂ρ
∂t

+ ∇ · (ρu) = 0

∂ρu
∂t

+ ∇ · (ρu ⊗ u) = −∇p + ∇ · τ + ρf

∂ρE
∂t

+ ∇ · (ρEu) = −∇ · (pu) + ∇ · (τ · u) + ∇ · q + ρu · f ,

(12)

(13)

(14)

where the vector f represents an external body force. Since the ﬂow is considered compressible, the equation of state (15)
gives closure to the system linking pressure p with density ρ and temperature T ,

The shear stress τ tensor is symmetric and is deﬁned as

p =

ρT
γM 2

∞

.

µ

Re∞

∇ · u(cid:19) δ,

(15)

(16)

τ =

µ

Re∞(cid:16)∇u + (∇u)T(cid:17) −(cid:18) 2

3

with µ as dynamic viscosity and δ as the identity matrix. The term q in (14) is known as heat ﬂux vector, which is deﬁned as

q =

µ

Re∞ (γ − 1) M 2

∞P r∞

∇T,

(17)

where the Prandtl number is assumed to be constant at P r = 0.72, and γ = 1.4. The molecular viscosity µ is computed
using Sutherland’s law [34], setting the ratio of the Sutherland constant over free-stream temperature to 0.36867.

3.2 Numerical Method

The software used to carry out the numerical simulations is a parallel in-house FORTRAN code called HiPSTAR (High-
Performance Solver for Turbulence and Aeroacoustics Research; [26]), which solves the governing equations by using gen-
eralized curvilinear coordinates. If running three-dimensional simulations, the code assumes periodicity in the spanwise
direction, hence this direction is discretised using Fourier transformations (FFTW library [8]). The streamwise and vertical
directions are discretised with an explicit fourth-order accurate standard central ﬁnite difference scheme. At the boundaries,
one-sided explicit schemes are used [5], being as accurate as the interior scheme. The solution advances in time with an ex-
plicit ultra-low storage Runge-Kutta method, which achieves fourth order accuracy with a ﬁve step method [12]. To enhance
the stability of the numerical scheme, skew-symmetric splitting of the non-linear terms present in the forward equations is
applied using the method suggested by Kennedy and Gruber [13]. A sixth-order accurate explicit ﬁlter [4] with a weighting
of 0.2 is applied after every Runge-Kutta cycle to remove the spurious numerical high-wavenumber oscillations. The paral-
lelisation is achieved with a combined method of MPI calls in the streamwise and vertical directions with OMP threads in
the spanwise direction.

6

J.J. Otero, A.S. Sharma and R.D. Sandberg

Open boundaries are treated with characteristic boundary conditions (CBC; [31,32]), which are used to avoid spurious
numerical reﬂections from the boundaries. An integral formulation of CBC [11] is applied at the inﬂow boundary, whereas
a zonal CBC [27] is used at the outﬂow. Wall boundaries are modelled as isothermal no-slip walls where the conditions
imposed are

uw = vw = ww = 0,

Tw = const.

(18)

4 Adjoint Simulations

As introduced in section 2.1, there are two main approaches to tackle the adjoint problem, the discrete and the continuous
approaches. One of the fundamental sources of disagreement between both methods resides in the resulting gradient of
the cost functional as the spatial resolution decreases. Direct Numerical Simulations (DNS) are carried out in the current
research, which implies that no modelling assumptions are considered, and also the temporal and spatial discretisations
are sufﬁciently ﬁne to capture all the events contained in the ﬂow ﬁeld. Given these conditions, the discrepancies between
the continuous and discrete approaches should be minimal [22]. For convenience and ﬂexibility in the implementation, the
continuous approach is chosen in the present investigation.

4.1 Adjoint Equations

The present adjoint formulation uses the energy equation (14) rearranged in terms of pressure. This is done by deriving the
internal energy equation and then substituting in the equation of state. The internal energy equation is obtained by subtracting
the kinetic energy equation from the total energy equation. The kinetic energy is calculated as

where the derivatives can be summed up using the product rule. Hence, subtracting equation (19) from the total energy
equation and using the equation of state (15) gives

∂ρekin

∂t

= u · momentum −

1
2

u2 · continuity,

(19)

Following the deﬁnition given in (5), the adjoint equations arise from the linearisation of eqs. (12), (13) and (20) as

∂p
∂t

+ ∇ · (pu) + (γ − 1) [p (∇ · u) + ∇ · q + tr (τ · ∇u)] = 0.

ǫ→0  L(cid:0)Q + ǫ ˜Q, Q∗, φ(cid:1) − L (Q, Q∗, φ)

lim

ǫ

! = 0,

(20)

(21)

where ˜Q is an arbitrary state. As the equations considered here are partial differential equations, integration by parts is
required to remove, if possible, the derivatives from the arbitrary state ˜Q. This last step introduces additional terms which
are only deﬁned at the boundary of the domain Γ , known as boundary terms. Note that (21) satisﬁes the Green-Lagrange
identity

(22)
where BT represents the boundary terms. These boundary terms should not be neglected since they determine the correct
boundary conditions of the adjoint problem.

(cid:10)Q∗, N ′ (Q, φ) ˜Q(cid:11) =(cid:10)N ∗ (Q, φ) Q∗, ˜Q(cid:11) + BT,

4.1.1 Adjoint Euler Equations

The state variables chosen for the derivation of the adjoint governing equations are Q = [p, ρu, ρv, ρw, ρ], where their
corresponding co-state or adjoint variables are Q∗ = [ρ∗, m∗
w, p∗]. For the sake of clarity, the viscous terms of the
governing equations are grouped as the RHS Sv terms for each equation. Hence, the adjoint Euler equations can be written
as

u, m∗

v, m∗

∂ρ∗
∂t

− u · ∇ρ∗ + (γ − 1) ρ∗∇ · u − ∇ · m∗ = Svρ∗

−

p
ρ

−

∂m∗
∂t

− γ

∇ρ∗ − (γ − 1)

ρ∗
ρ

−

∂p∗
∂t

+ γ

pu
ρ

· ∇ρ∗ + (γ − 1)

∇p − u(cid:16)∇m∗ +(cid:0)∇m∗(cid:1)T(cid:17) − ∇p∗ = Svm∗

u · ∇p + u · (u · ∇) m∗ = Svp∗ .

ρ∗
ρ

(23)

(24)

(25)

Adjoint-based Optimal Flow Control for Compressible DNS

7

Note that the derivation of the above adjoint equations relates the adjoint density with pressure and the adjoint pressure
with density [6]. Hence, both forward and adjoint equations present a “logical zero-Mach-number limit”, where in case of
constant ρ and ρ∗ the p and p∗ equations cancel out. A detailed derivation of these equations can be found in [2].

4.1.2 Adjoint Navier-Stokes Equations

In previous studies based on Lagrangian optimisation, the derivation of the adjoint viscous terms has usually been carried
out under the assumptions of constant viscosity and negligible viscous dissipation terms in the pressure equation [30]. On
the other hand there is no guarantee that these assumptions have the same effect in the forward and adjoint equations, which
might contribute to an inconsistent adjoint ﬁeld. Hence, no assumptions were made during the derivation of the viscous terms
in the present study. The viscous terms of eqs. (23), (24) and (25) are

Svρ∗ = q∗ + µ∗χ

Svm∗ =

1
ρ

∇ · σ∗

Svp∗ = −

u
ρ

· ∇ · σ∗ −

p

ρ(cid:0)q∗ + µ∗χ(cid:1) ,

σ∗ = τ ∗ − 2 (γ − 1) ρ∗τ.

where q∗ and σ∗ are

q∗ =

γ

P r∞Re∞ρ

∇ ·(cid:0)µ∇ρ∗(cid:1) ,

As the adjoint simulation propagates information in a backward sense, energy must be transmitted from small to bigger
structures, hence σ∗ must consist of a combination of dissipation and production terms. The dissipation is accounted for
with

τ ∗ =

µ

Re∞ (cid:16)∇m∗ +(cid:0)∇m∗(cid:1)T(cid:17) −(cid:18) 2

3

µ

Re∞

∇ · m∗(cid:19) δ,

which could be seen as an adjoint momentum shear stress tensor, whereas the production term depends on the forward shear
stress tensor τ . Note that if the viscous dissipation term is neglected in (20) this production term would vanish. For simplicity,
the terms that arise from considering varying viscosity have been collected into the adjoint viscosity (µ∗), which leads to the
following algebraic equation closing the full adjoint Navier-Stokes equations

(26)

(27)

(28)

(29)

(30)

(31)

µ(cid:19)(cid:19) +

µ∗ = tr(cid:18)(cid:0)∇m∗ − (γ − 1) ρ∗∇u(cid:1) ·(cid:18) τ
T + RSu(cid:19)(cid:18)
p (cid:18) 1 + RSu

T 3/2

χ =

1
P rM 2

∞Re∞(cid:16)∇ρ∗ · (∇T )T(cid:17) .

The adjoint viscosity term is weighted in (26) and (28) by χ, which follows directly from assuming the variations in viscosity
according to the Sutherland’s law, giving

T

(T + RSu)

−

3

2(cid:19) .

(32)

4.2 Adjoint Boundary Conditions

The derivation of appropriate boundary conditions (temporal and spatial) for a continuous adjoint approach starts by ac-
counting for the forward boundary conditions in the Lagrange functional. This will introduce additional adjoint variables
(ψ) which are only deﬁned at the boundaries and they are uncoupled from the adjoint governing equations

Hence, additional boundary terms are also introduced, closing the algebraic system of equations formed by the boundary
terms, whose solution is the adjoint boundary conditions.

L(cid:0)Q, Q∗, φ(cid:1) = J (Q, φ) − Q∗T

· N (Q, φ) − ψT · BC (Q, φ) .

(33)

As the adjoint equations are posed backwards in time, the adjoint initial condition or ‘terminal condition’ is required to start
the simulation. If no speciﬁc term is included in the Lagrangian functional to impose a given terminal condition, the adjoint
variables are initialized as ρ∗|t=T = 0, m∗|t=T = 0 and p∗|t=T = 0, the ‘null condition’.

The adjoint isothermal no-slip wall conditions are obtained after substituting forward wall boundary conditions into (33) and
solving the system of equations of the full viscous boundary terms. This leads to

u(cid:1)w =(cid:0)m∗
(cid:0)m∗

v(cid:1)w =(cid:0)m∗

w(cid:1)w =(cid:0)ρ∗(cid:1)w = 0.

(34)

8

J.J. Otero, A.S. Sharma and R.D. Sandberg

4.2.1 Adjoint Characteristic Boundary Conditions

To achieve an equivalent treatment as in the forward simulations, the free-stream, inﬂow and outﬂow boundaries, are also
modelled as characteristic boundary conditions. The idea behind the method of characteristics is to transform the derivatives
that are normal to the computational boundary into combinations of the amplitudes of the characteristic waves L , where
each one of them has its own characteristic velocity λ. The derivation of the adjoint characteristic equations in the ξ direction
for a uniform Cartesian grid can be found in the appendix A. With the equations in this form it is relatively straightforward
to model a ‘non-reﬂecting boundary’. This is done by setting to zero the amplitude of the waves L whose characteristic
velocity λ propagates into the domain. Similarly to the forward simulations, this boundary condition results in an ill-posed
problem where the quantities would drift with time marching [24]. Hence, this condition is only suitable for free-stream
boundaries.

If the terminal condition of the adjoint simulation is the null condition, one could model the far-stream or inﬁnity conditions
∞) as if all the quantities far away from the computational domain are set to zero. Hence, equivalent local one-dimensional
(Q∗
inviscid (LODI) relations [24] can be derived at the inﬂow and outﬂow boundaries, leading to suitable boundary conditions
that will prevent a drift of the adjoint quantities. The boundary conditions for inﬂow and outﬂow as streamwise boundaries
follow from (54), where after assuming the ﬂow at the boundaries to be locally one-dimensional and inviscid the source term
Cξ can be neglected giving the LODI system

Solving the above system of equations for L the adjoint LODI relations can be written as

−

∂Q∗
∂t

+ SξL = 0.

(35)

(36)

(37)

(38)

(39)

(40)

(41)

+ u

∂m∗
u
∂t

∂p∗
∂t
∂m∗
w
∂t
∂m∗
v
∂t
1

L1 =

L2 =

L3 =

L4 =

L5 =

2c(cid:18)−
2c(cid:18)−

1

∂m∗
u
∂t
∂m∗
u
∂t

−

+

∂p∗
∂t
∂p∗
∂t

∂t

−(cid:18)c2 ∂ρ∗
+(cid:18)c2 ∂ρ∗

∂t

+

+

∂m∗
u
∂t
∂m∗
u
∂t

u +

u +

∂m∗
v
∂t
∂m∗
v
∂t

v +

v +

∂m∗
w
∂t
∂m∗
w
∂t

w(cid:19)(cid:19)
w(cid:19)(cid:19) ,

where each time derivative can be replaced by

∂Q∗
∂t

= c(cid:16)1 − M 2(cid:17) σin/out(cid:2)Q∗ − Q∗
∞(cid:3) .

The value of σin/out determines the strength of the incoming waves and is chosen to be 0.25 as recommended by [24] for the
Navier-Stokes equations. These boundary conditions ensure a well-posed system, where for the case of an outﬂow (adjoint
inﬂow) the values of L1, L2, L3 and L4 are determined by (36) to (39), and in case of an inﬂow (adjoint outﬂow) L5 is
only modiﬁed by (40).

5 Open Cavity Noise Control

The cavity ﬂow considered in this article has a laminar inﬂow with Reynolds number Re = 5000, based on the cavity height
and free-stream velocity. The cavity height is also chosen to non-dimensionalise the stramwise and vertical directions. With
the coordinate origin at the lower-left corner of the cavity, the domain ranges from -20 to 20 in ξ and from 0 to 10 in η. The
grid consists of a total of 480000 points, where the DNS resolution was only kept in the vicinity of the cavity. The boundary
layer thickness is δ ≈ 0.28 at the separation point, where the non-dimensional free-stream velocity is U∞ = 1. The Prandtl
and Mach numbers are respectively P r∞ = 0.72 and M∞ = 0.5. To carry out the adjoint simulations, the ﬂow ﬁeld is
stored every 250 time-steps (at intervals of 0.1375 time units) and it is linearly interpolated in between for every sub-step
of the Runge-Kutta scheme. Note that this implicitly decreases the Nyquist frequency of our sensor, acting as a low-pass ﬁlter.

Adjoint-based Optimal Flow Control for Compressible DNS

To cost the noise radiation from the trailing edge of the cavity, a convenient cost function for this particular problem is

J (Q, φ) =

1

T Z T
0 ZΩ

1
2

(p − p)2 Ws (x) dΩdt,

9

(42)

where T represents the optimisation horizon and p is the averaged pressure over this time period. Ws (x) is a spatial weighting
function that represents the sensing region, which is deﬁned as

Ws (x) = e−

(x−4)2 +(y−3)2

0.05

.

(43)

To exploit the advantages of the adjoint method, the actuation is chosen to be a time-dependent body forcing sub-domain
f (x, t), where every grid point within the sub-domain has two control parameters (the streamwise and vertical components
of the forcing vector f ). Including both cost function and forcing terms in the Lagrangian functional (3), which are then
substituted into (21), leads to their respective adjoint terms which can be written as

−

∂ρ∗
∂t

−

∂p∗
∂t

Cost Function

.

Forcing Terms

From (11) the gradient for each of the control parameters follows as

= RHS + (p − p) Ws (x)

}
= RHS +(cid:0)m∗ · f(cid:1) Wa (x)
}

{z
{z

|
|

DJ
Dφξ

= ρm∗
u

and DJ
Dφη

= ρm∗
v.

(44)

(45)

(46)

To choose an appropriate location for the actuation, an initial statistical study of the adjoint quantities is carried out for an
entire time horizon T , which gives a measure of the ﬂow sensitivities. Given the time-dependency of the chosen actuation,
its control authority should be proportional to the temporal ﬂuctuations of m∗. Figure 3 reveals that the area with the highest
root mean square values in m∗ is in the boundary layer before the ﬂow separation point, reaching maximum values right
after the leading edge of the cavity. Hence, the location of our actuation is deﬁned as

Wa (x) =(1

0

if x ∈ [(−1, 0) , (1.015, 1.3)]
if x /∈ [(−1, 0) , (1.015, 1.3)]

.

(47)

The actuating sub-domain contains a total of 8000 grid points. In a similar fashion as for the ﬂow variables in the adjoint
simulations, the control parameters are updated every 250 time iterations and they are linearly interpolated in between every
capture. Note that this also removes implicitly the high frequencies from the controller. The fact that the sensing region is
located downstream of the cavity, in a region of the ﬂow with strong convection, reduces the communication time between
the sensor and the actuation. Based on the growth of the adjoint ﬁeld shown in ﬁgure 2a and a preliminary spectral analysis
of the pressure ﬂuctuations at the sensor location, the receding horizon is chosen to be T = 19.25 time units, and the leap
forward after the optimisation over the time horizon has converged is Ta = 8.25 time units. The optimisation is run for 5
complete horizons, which covers a total of 52.25 time units. This results in a total of 2.256 million control parameters per
receding horizon T, and 6.096 million control parameters over the ﬁve total optimisation periods.

5.1 Optimisation Results

The entire optimisation required a total of 76 function and gradient evaluations, with 4 additional forward simulations to
advance the optimisation between receding horizons once the previous one is converged. For the present case, the adjoint
computations required a similar amount of time as the forward simulations. Figure 4a illustrates the signiﬁcant reduction
in cost for all receding horizons. The local sudden increases in the cost function value (especially in T1) are caused by a
poor estimation of the control parameters by the control update algorithm (L-BFGS), which are rapidly corrected in the next
iteration. The convergence criterion consisted in the last two function evaluations of every horizon to be equal down to three
signiﬁcant ﬁgures, and being the lowest value of the series. Due to limitations in computational resources, the maximum

10

J.J. Otero, A.S. Sharma and R.D. Sandberg

y

4

3

2

1

0
−4

−3

−2

−1

0

1

2

3

4

5

6

7

x

Fig. 3: Root mean square of the magnitude of the adjoint momentum m∗. Red and blue contours indicate high and low
values, respectively. The green-dashed rectangle indicates the actuating sub-volume. The red-dashed circle represents the
sensing region.
(a)

(b)

10−5

)
φ

,

Q

(

J

10−6

10−7

T1
T2
T3
T4
T5

−50

−100

−150

−200

]

B
d
[

L
P
S

5

10

15

20

25

30

10−2

10−1

Iterations

100

St

101

Fig. 4: (a) Value of the cost function for every iteration of the optimisation framework, for all ﬁve receding horizons. Note
that the required number of iterations to achieve convergence varies for each horizon. (b) Sound pressure level (SPL) at the
center of the sensing region for the non-actuated (
) indicates
the ﬂow-capturing frequency, which is also the sampling frequency of the sensor.

) simulations. The vertical line (

) and actuated (

number of functions evaluations per receding horizon was limited to 30.

Once the iterative optimisation has concluded, the effect of the control is evaluated over the entire optimisation horizon by
performing controlled and uncontrolled simulations for 52.25 time units each. The reduction achieved in the value of the
cost function is 79.6% (without control J (Q, φ) = 2.679 · 10−6, with control J (Q, φ) = 5.458 · 10−7). Figure 4b shows
the spectrum of the pressure ﬂuctuations at the center of the sensing region with and without the actuation. The reduction of
energy in the lower resonant frequencies is evident, where the amplitude of the resonant frequency located at St = 0.2678
lessens from −46.76dB to −65.70dB. Note that there is a considerable increase in the energy present in the high frequencies
above the ﬂow-ﬁeld sampling frequency (St ≈ 7.272). As mentioned earlier, these high frequency ﬂuctuations cannot be
captured by the cost function due to an induced aliasing effect, which acts as a low-pass ﬁlter in the cost function.

Figures 5 shows the root mean square of pressure (prms) for the non-actuated and actuated simulations. Figure 5b suggests
that the actuator excites some of the unstable shear layer modes, triggering shorter wave-length Kelvin-Helmholtz instabil-
ities that (as seen in ﬁgure 4b) would radiate a higher frequency sound when impinging onto the trailing edge of the cavity.
Additionally, the directivity of the sound radiation has been altered by the ﬂow actuation. The prms contours in the controlled
case have lower levels in the area surrounding the sensor. Also, the contours show higher values towards the leading edge of
the cavity, which indicates an upstream noise propagation.

Adjoint-based Optimal Flow Control for Compressible DNS

11

(a)

y

4

3

2

1

0

−1

0

1

2

3

4

(b)

4

3

2

1

0

−1

0

1

2

3

4

x

x

Fig. 5: Root mean square pressure (prms) contours for uncontrolled (a) and controlled (b) cases, respectively. Sensing region
is indicated with a dashed-blue circle. Darker contours represent higher values of prms, ranging from 0 to 0.05.

6 Conclusions

A newly developed framework oriented to adjoint-based optimal ﬂow control was successfully applied on a two-dimensional
open cavity ﬂow. The target of the actuation was to minimise the pressure ﬂuctuations at the sensor location, and an ampli-
tude reduction of 79.6% respect to the non-actuated case was achieved. A statistical study of the adjoint-ﬁeld prior to the
optimisation indicated the ideal location for the actuator. To exploit the advantages of the adjoint method, a large number of
control parameters was used. Decreasing the ﬂow-ﬁeld sampling frequency acted as an implicit low-pass ﬁlter in the sensor.
This resulted into an increase in the energy content for frequencies higher than the sampling frequency of the sensor. Finally,
prms contours revealed a decrease of pressure ﬂuctuations in the area surrounding the sensor, by changing the directivity of
the noise radiation of the cavity’s trailing edge.

Acknowledgements The authors are grateful to EPSRC for the funding provided, and UK turbulence consortium under EPSRC grant EP/L000261/1
for the computational resources to carry out the simulations on ARCHER (national UK supercomputing facility). For the purposes of EPSRC data
policy, no signiﬁcant data were generated in this study.

A Adjoint Equations in Characteristic Form

The method of characteristics can be applied to the adjoint equations in the same manner as for the Navier-Stokes equations [31]. Note that eqs.
(23), (24) and (25) lack conservative or ﬂux form, hence the procedure gets easier since the conversion to primitive variables is already done [32].
The code used in the present investigation only allows periodic boundary conditions in the spanwise direction, which means that the characteristic
equations only need to be derived in the streamwise (ξ) and vertical (η) directions. This appendix only illustrates the derivation of the characteristic
equations in the ξ direction on a uniform Cartesian grid. The derivation for the η direction proceeds similarly. The idea behind the method is to
transform the derivatives that are normal to the computational boundary into combinations of the amplitudes of the characteristic waves L , where
each one of them has its own characteristic velocity λ. The L values, which are initially computed from the data within the domain, are corrected
afterwards by imposing the appropriate conditions. To achieve this transformation, the governing equations ﬁrst need to be written in the form

−

∂Q∗

∂t

+ Aξ

∂Q∗

∂ξ

+ Cξ = 0,

(48)

where Cξ contains the non-normal derivatives to the boundary, the source terms and the viscous terms. If the full viscous equations are considered,
the system of equations becomes non-hyperbolic, which makes necessary the use of certain assumptions. The LODI relations [24] assume that the
system is one-dimensional and inviscid at the boundaries, which implies that the contribution of Cξ can be neglected. Following this strategy, the
boundary conditions are ‘designed’ for the LODI problem, but the solution is advanced in time without any assumptions. The matrix Aξ contains
all the coefﬁcients multiplying the normal derivatives to the computational boundary. Hence, the matrix Aξ can be written as

Aξ =




0

0

−u −1
0
−c2 −2u −v −w −1
0
0
0
0 −u 0
c2u u2 uv uw 0

0 −u 0
0




,

(49)

12

where the speed of sound c is

c2 =

γp

ρ

.

The characteristic propagation velocities can be obtained by calculating the eigenvalues of Aξ, giving

λ =




−u
−u
−u

−u − c
−u + c

.




J.J. Otero, A.S. Sharma and R.D. Sandberg

(50)

(51)

At this point it can be seen already that the propagation of the adjoint characteristics occurs (as expected) in the opposite direction to the forward
system [15]. The amplitude of the characteristics is deﬁned as

where the rows of the matrix S−1

ξ

are left eigenvectors of Aξ. The matrix S−1

ξ

can be written as

L ≡ λ(cid:20)S−1

ξ

∂Q∗

∂ξ (cid:21)T

,

S−1

ξ =





1
0
0
u
0
1
0
0
0
1
0
0
2c − w
2c − v
2c − 1

0
0
0
2 − c+u
− c
c
2

−c+u

2c

2c
1
2c

v
2c

w
2c

.





(52)

(53)

At this stage, boundary conditions can be applied by modiﬁyng L , giving corrected L ′ values. Hence, (48) must be rewritten to get the corrected
time derivative as

(54)

(55)

−

∂Q∗

∂t

+ SξL ′ + Cξ = 0,

with Sξ being a matrix whose columns are the right eigenvalues of Aξ. The SξL ′ term can be written as

SξL ′ =

c

c2 − v
c2 − w
− 1
0
0
0
0
1
0
1
0

1
c2 − 1
c
0 −1 −1
0
1
0
0
0
0
0
u u







·

L ′
1
L ′
2
L ′
3
L ′
4
L ′
5







.

References

1. Badreddine, H., Vandewalle, S., Meyers, J.: Sequential quadratic programming (sqp) for optimal control in direct numerical simulation of

turbulent ﬂow. Journal of Computational Physics 256, 1 – 16 (2014)

2. Bewley, T.R., Moin, P., Temam, R.: DNS-based predictive control of turbulence: an optimal benchmark for feedback algorithms. Journal of

Fluid Mechanics 447, 179–225 (2001)

3. Blackburn, H.M., Barkley, D., Sherwin, S.J.: Convective instability and transient growth in ﬂow over a backward-facing step. Journal of Fluid

Mechanics 603, 271–304 (2008)

4. Bogey, C., de Cacqueray, N., Bailly, C.: A shock-capturing methodology based on adaptative spatial ﬁltering for high-order non-linear compu-

tations. Journal of Computational Physics 228, 1447 – 1465 (2009)

5. Carpenter, M.H., Nordstr¨om, J., Gottlieb, D.: A stable and conservative interface treatment of arbitrary spatial accuracy. Journal of Computa-

tional Physics 148, 341 – 365 (1999)

6. Cervi˜no, L., Bewley, T., Freud, J., Lele, S.: Perturbation and adjoint analyses of ﬂow-acoustic interactions in an unsteady 2D jet. In: Center for

Turbulence Research. Proceedings of the Summer Program 2002 (2002)

7. Fosas de Pando, M., Sipp, D., Schmid, P.J.: Efﬁcient evaluation of the direct and adjoint linearized dynamics from compressible ﬂow solvers.

Journal of Computational Physics 231, 77397755 (2012)

8. Frigo, M., Johnson, S.: The design and implementation of FFTW3. Proceedings of the IEEE 93, 216 – 231 (2005)
9. Giles, M.B., Pierce, N.A.: An introduction to the adjoint approach to design. Flow, Turbulence and Combustion 65, 393–415 (2000)
10. Gunzburger, M., Lee, H.C.: Analysis, approximation and computation of a coupled solid/ﬂuid temperature control problem. Computational

Methods and Applied Mechanical Engineering 118, 133–152 (1994)

11. Jones, L.E.: Numerical studies of the ﬂow around an airfoil at low Reynolds number. Ph.D. thesis, University of Southampton (2008)
12. Kennedy, C.A., Carpenter, M.H., Lewis, R.M.: Low-storage, explicit Runge-Kuta schemes for the compressible Navier-Stokes equations.

Applied Numerical Mathematics 35, 177 – 219 (2000)

13. Kennedy, C.A., Gruber, A.: Reduced aliasing formulations of the convective terms within the Navier-Stokes equations for a compressible ﬂuid.

Journal of Computational Physics 227, 1676 – 1700 (2008)

14. Kim, J., Bodony, D.J., Freund, J.B.: Adjoint-based control of loud events in a turbulent jet. Journal of Fluid Mechanics 741, 28–59 (2014)
15. Kim, J.W., Lee, D.J.: Generalized characteristic boundary conditions for computational aeroacoustics. AIAA 38, 2040 – 2049 (2000)

Adjoint-based Optimal Flow Control for Compressible DNS

13

16. Lawson, S.J., Barakos, G.N.: Review of numerical simulations for high-speed, turbulent cavity ﬂows. Progress in Aerospace Sciences 47(3),

186–216 (2011)

17. Lea, D.J., Allen, M.R., Haine, T.W.N.: Sensitivity analysis of the climate of a chaotic system. Tellus 52A, 523532 (2000)
18. Lee, J.: Model predictive control: Review of the three decades of development. International Journal of Control, Automation and Systems 9(3),

415–424 (2011)

19. M. D. Gunzburger: Perspectives in Flow Control and Optimization. SIAM, Ames, Iowa (2003)
20. Mader, C., Martins, J.: ADjoint: An Apporach for the Rapid Development of Discrete Adjoint Solvers. AIAA Journal 46, 863 – 873 (2008)
21. Morales, J.L., Nocedal, J.: Remark on Algorithm 778: L-BFGS-B: Fortran Subroutines for Large-scale Bound Constrained Optimization. ACM

Transactions on Mathematical Software 38(1), 7:1–7:4 (2011)

22. Nadarajah, S., Jameson, A.: A comparison of the continuous and discrete adjoint approach to automatic aerodynamic optimization. In: AIAA

2000-0667. Reno, Nevada (2000)

23. Nocedal, J., Wright, S.J.: Numerical Optimization. Springer (2006)
24. Poinsot, T.J., Lele, S.K.: Boundary Conditions for Direct Simulations of Compressible Viscous Flows. Journal of Computational Physics 101,

104 – 129 (1992)

25. Rossiter, J.: Wind tunnel experiments on the ﬂow over rectangular cavities at subsonic and transonic speeds. Tech. rep., Technical Report

64037. Royal Aircraft Establishment (1964)

26. Sandberg, R.D.: Compressible-Flow DNS with Application to Airfoil Noise. Flow, Turbulence and Combustion 95, 1–19 (2015)
27. Sandberg, R.D., Sandham, N.D.: Nonreﬂecting Zonal Characteristic Boundary Condition for Direct Numerical Simulation of Aerodynamic

Sound. AIAA Journal 44, 402 – 405 (2006)

28. Schulze, J., Schmid, P., Sesterhenn, J.: Iterative optimization based on an objective functional in frequency-space with application to jet-noise

cancellation. Journal of Computational Physics 230, 6075 – 6098 (2011)

29. Schulze, J., Sesterhenn, J.: Optimal distribution of porous media to reduce trailing edge noise. Computers and Fluids 78, 41 – 53 (2013)
30. Spagnoli, B., Airiau, C.: Adjoint analysis for noise control in a two-dimensional compressible mixing layer. Computers and Fluids 37, 475 –

486 (2008)

31. Thompson, K.W.: Time Dependant Boundary Conditions for Hyperbolic Systems. Journal of Computational Physics 68, 1 – 34 (1987)
32. Thompson, K.W.: Time Dependant Boundary Conditions for Hyperbolic Systems, II. Journal of Computational Physics 89, 439 – 461 (1990)
33. Vishnampet, R., Bodony, D.J., Freud, J.B.: A practical discrete-adjoint method for high ﬁdelity compressible turbulence simulations. Journal

of Computational Physics 285, 173–192 (2015)

34. White, F.: Viscous Fluid Flow. McGraw-Hill (1991)

