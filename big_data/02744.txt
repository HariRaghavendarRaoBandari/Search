6
1
0
2

 
r
a

M
9

 

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
4
4
7
2
0

.

3
0
6
1
:
v
i
X
r
a

Coupling vs decoupling approaches for PDE/ODE

systems modeling intercellular signaling

Thomas Carraro∗

Elfriede Friedmann

Daniel Gerecht

Institute for Applied Mathematics
Heidelberg University, Germany

March 10, 2016

Abstract

We consider PDE/ODE systems for the simulation of intercellular signal-
ing in multicellular environments. The intracellular processes for each cell
described here by ODEs determine the long-time dynamics, but the PDE
part dominates the solving eﬀort. Thus, it is not clear if commonly used
decoupling methods can outperform a coupling approach. Based on a sen-
sitivity analysis, we present a systematic comparison between coupling and
decoupling approaches for this class of problems and show numerical results.
For biologically relevant conﬁgurations of the model, our quantitative study
shows that a coupling approach performs much better than a decoupling one.

keywords Coupled PDE/ODE systems, Sensitivity analysis, Multilevel precondi-
tioner, Intercellular Signaling

1

Introduction

Cellular signaling has been mathematically described by a variety of models mostly
relying on large systems of ordinary diﬀerential equations (ODE) [1]. These earlier
models were extended by partial diﬀerential equations (PDE) to accurately consider
concentration gradients and their eﬀect [2, 3, 4, 5]. In our intercellular model we
consider the diﬀusion and action of small signaling proteins in the intercellular space
described by PDE, i.e. reaction-diﬀusion equations, coupled on the cell surfaces with
ODEs responsible for the intracellular dynamics. This coupling of mixed diﬀerential
equations allows mainly two strategies for an implicit solver:
(1) nonlinear methods
among them the nonlinear multigrid method also called “full approximation scheme”
(FAS) [6, 7], (2) linearization based approaches (Newton-type). These methods can
be used in a combined approach, where for example a Newton-type method can
be used as smoother for a FAS and a linear or a nonlinear multigrid can be used

∗thomas.carraro@iwr.uni-heidelberg.de

1

as a preconditioner for a Newton-type method. The comparison and discussion of
advantages and disadvantages of these strategies that depend on many aspects like,
e.g. the accuracy of the Jacobian approximation [8], is not the focus of our work.
Moreover, since in the considered coupled PDE/ODE system the linearization is not
a critical point we choose a Newton-type method preconditioned by a linear multigrid
and study the eﬀect of splitting the linearization. A decoupling solution approach,
based on a ﬁxed-point method, is often used when restrictions on accuracy can be
relaxed in order to allow an easier numerical treatment of complicated problems.
Such an approach makes it possible to reuse existing solvers and is widely used
in numerical methods for coupled systems, see [9, 10, 11, 12, 13, 14].
In case of
strongly coupled equations (see Section 4 for the deﬁnition of strong coupling used
here), this strategy leads usually to high computational costs through very small
time steps needed to reduce the strength of the coupling. In fact, the convergence
of the ﬁxed-point iterations is typically linear with the convergence rate depending
on the used block-iterative method and on the strength of the coupling since it
depends on the spectral radius of the matrices involved [15]. Therefore a drawback
of decoupling solvers is their low convergence and possibly divergence. On the
contrary, the drawback of fully implicit solvers is mainly that they demand for the
implementation of a special-purpose code.

We consider PDE/ODE systems for the simulation of intercellular signaling in
multicellular environments. Since the ODE part does not lead to a large discretiza-
tion system like the PDE part, it is not clear if a decoupling method can outperform
a coupling approach.
In fact other works with PDE/ODE models have used de-
coupling approaches for systems arising in biological applications, e.g. blood ﬂow
including chemical interaction [16, 17], signal transduction [4], cardiovascular ﬂow
[9], cancer invasion [18]. With the exception of [9] these works do not consider a com-
parison with a monolithic approach. In addition, for the most of these applications
it is not clear whether the strength of the coupling is strong or weak.

In this context, the scope of our work is to present a systematic comparison be-
tween coupling and decoupling approaches for this class of problems. The method
is based on a sensitivity analysis to compute the strength of the coupling. Addition-
ally, we compare a multigrid method in which the coupling is considered only at the
coarsest level to a fully coupling approach. There are few works that deal with the
fully coupling solution process of dimensionally heterogeneous systems such as [19].
Furthermore, we focus on the solution of local microenvironments. Therefore, this
solution process can be used for example as local solver for nonlinear preconditioner
of Newton-type methods [20] or domain decomposition methods [21].

Outline The paper is organized as follows. In Section 2 we give an abstract de-
scription of the model. We present the mathematical formulation and the functional
setting. We discretize the coupled PDE/ODE system by the ﬁnite element method
(FEM) in Section 3. We use a sensitivity approach in Section 4 to analyze the
coupling of the PDE/ODE system and in Section 5 we present diﬀerent solving ap-
proaches for the coupled system. We present the numerical results exemplarily for
a particular application and discuss numerical aspects in Section 6. In Section 7 we
describe a realistic conﬁguration and give a biological interpretation to the results
obtained.

2

2 Mathematical Models for Intercellular Signal-

ing

Our intercellular signaling model consists of one PDE equation for the interaction
between the cells in the intercellular area Ω ⊂ R3 coupled with ODEs for the intra-
cellular processes. We denote by Nc the number of cells in Ω and indicate by Γi
the boundary of each cell i for i = 1, . . . , Nc. The outer boundary of Ω is denoted
by Γout, see Figure 1.

Figure 1: Visualization of the computational domain

Γi

Γout

(a) 8 interacting cells with surfaces

(b) Intercellular area Ω

Γi

(sliced for visualization)

Depending on the type of intercellular signaling, diﬀerent nonlinear operators
describe the dynamics in the intercellular area (AΩ), e.g. degradation, the dynamics
on the cell surfaces (AΓi) of each cell and the intracellular processes (Bi). We denote
the solution of the PDE part with u and the vector of solutions of the ODE part
with v.

∂tu(t, x) − µ∆u(t, x) + AΩ(u(t, x)) = 0 for (t, x) ∈ (0, T ] × Ω,
µ∂nu(t, x) − AΓi(u(t, x), vi(t)) = 0 for (t, x) ∈ (0, T ] × Γi,
for (t, x) ∈ (0, T ] × Γout,

µ∂nu(t, x) = 0

∂tvi(t) + Bi(˜ui(t), vi(t)) = 0 for t ∈ (0, T ],

(1)

with given initial values u(0, x) = u0 and v(0) = v0. We denote the average of u on
the surface of Γi by ˜ui and by vi the associated ODE values with this cell

(cid:82)

˜ui(t) =

Γi

u(t, s) ds
|Γi|

.

(2)

Remark 2.1. To study the dynamical process and validate the model we compute
the entire trajectory. Nevertheless, the simulations converge to a stable steady state.
Therefore, we consider as well a coupling and a decoupling solver for a computation
of the steady state in Section 6.2.

3

3 Discretization

For a variational formulation we introduce the Hilbert space V p = H 1, for the
PDE part of the equation, and the vector space V o = Rn, where n denotes the
number of ordinary diﬀerential equations in the system. We deﬁne the product
space V := V p × V o.

We consider the implicit Euler method as time stepping scheme, and spatially

discretize the computational domain Ω by continuous ﬁnite elements.
problem (20b) to compute (un+1, vn+1) ∈ V in each time step for all ϕ ∈ V p:

Considering a time step k we use the semi-discretized weak formulation of the

(un+1, ϕ)Ω + kµ(∇un+1, ϕ) + k(AΩ(un+1), ϕ)Ω

(cid:88)

i≤NC

+k

(AΓi(un+1, vn+1
(cid:88)
Bi(˜un+1

i

i

i≤NC

vn+1 + k

, vn+1

) = vn.

i

), ϕ)Γi = (un, ϕ)Ω,

(3)

The domain in which the PDE part is deﬁned is the volume between the T
cells. Figure 1 (b) depicts a portion of it showing that the T cells are holes in the
domain. To discretize the system (3), we deﬁne a grid {Tl}0≤l≤L, consisting of non-
overlapping hexahedral cells K. The volume of the holes, representing the T cells,
is not discretized because the T cells are described by the ODE part of the system.
Therefore the domain has an outer boundary Γout and as many inner boundaries Γi
as the number of T cells, see Figure 1 (a). The diameters of the hexahedral cells hK
deﬁne a mesh parameter h by the piece-wise constant function h|K = hK. We use
the index h to indicate all terms of the equations that are discretized using the grid
T.
The discrete solution component uh is sought in the ﬁnite dimensional space
h ⊂ V p. We choose V p
V p
h as the space of Q1-elements, the space of functions obtained
by transformations of trilinear polynomials deﬁned on a reference unit cell (regular
hexahedral), see e.g. [22] for an introduction to the ﬁnite element method. As
explained above, only the PDE part needs to be discretized by the FEM, but due to
the coupling terms ˜ui, see (2), the ODE part of the discretized system depends as
well on the spatial discretization. Therefore, we use the symbol vh to indicate this
dependency. Since v was already deﬁned on a ﬁnite dimensional space V o, we have
vh ∈ V o. Then we can write the fully discretized version of system (3) as follows for
all ϕh ∈ V p
h :
(un+1

,∇ϕh)

h

, ϕh)Ω + k(AΩ(un+1
+k

h

(cid:88)

h

), ϕh)Ω + kµ(∇un+1
h,i , vn+1
Bi(˜un+1

(AΓi(˜un+1
(cid:88)

i≤NC
vn+1
h + k

i≤NC

h,i ), ϕh)Γi = (un

h, ϕh)Ω,

(4)

h,i , vn+1

h,i ) = vn
h.

A nonlinear coupled system arises as discrete system (4) and needs to be solved
for each step of the time marching scheme. For the resulting discrete nonlinear
coupled system we introduce the shorter notation

Ah(u, v) = f,
Bh(u, v) = g.

4

(4(cid:48))

We use the subscript h to indicate the dependence of the operator Bh on the mesh
discretization through the coupling with the PDE part. We omit the subscript h for
the solution components u and v to simplify the notation in the next sections.

4 Sensitivity Analysis of the Coupled System

In this section we study the strength of the coupling between the PDE and the ODE
part of the system. This is done to motivate the choice of the solution process that
we present in the following part of the work.
In this work we refer to strong or
weak coupling meaning the strength of the coupling independently of the approach
used to solve the coupled problem. We ﬁrst deﬁne in the next subsection the used
deﬁnition of strong and weak coupling, then we apply this deﬁnition to our system
of equations.

4.1 A criterion to measure the coupling strength
Let Sh : v (cid:55)→ u and Th : u (cid:55)→ v denote the solution operator for the PDE part
and respectively for the ODE part of the discretized system of equations (4(cid:48)). The
ﬁrst equation, u = Sh(v), is solved for a given value of v, then the second equation,
v = Th(u), is solved with the resulting value of u and the cycle is iterated until a
given tolerance is reached. This process can also be written as a composition of the
two operators:

(cid:0)Th(un)(cid:1).

un+1 = Sh

(5)

A ﬁxed-point iteration to solve a coupled system of equations has a slow conver-
gence rate (typically only linear) and the number of ﬁxed-point iterations depends on
the nature of the coupling and the model parameters. Considering the formulation
(5) to solve our coupled system we write the Jacobian of the ﬁxed-point operator as

J =

∂Sh
∂v

∂Th
∂u

.

(6)

For convergence the ﬁxed-point iteration (5) has to fulﬁll the following criterion
according to the Banach ﬁxed-point theorem
(cid:107)J(cid:107) < 1,

(7)
in some norm (cid:107)·(cid:107). A more convenient criterion is the substitution of the norm with
the spectral radius of the matrix J

|λmax(J)| < 1.

(8)

Based on this statement Haftka and coworkers have deﬁned in [23] a quantitative
measure for the strength of the coupling between the two parts of the problem. In
fact, according to their deﬁnition a system is weakly coupled if

|λmax(J)| (cid:28) 1,

(9)

5

respectively is strongly coupled if

|λmax(J)| (cid:29) 1.

(10)

In [23] there is no precise separation of the two ranges of weak and strong coupling.
We also do not give a quantitative deﬁnition of the ranges, because a more general
deﬁnition should consider many models. The criterion (9), respectively (10), has
been used here with the maximal eigenvalue of (6) to deﬁne whether the coupling
of our system is weak, respectively strong, considering that in one case the maximal
eigenvalue is two orders of magnitude smaller than 1 and in the other case almost
one order of magnitude larger than 1, see results in Section 6.

We remark that in case of nonlinear problems the strength of the coupling could
be time dependent. In particular, this is the case if the coeﬃcients of the operator
are time dependent. In our case, the coeﬃcients are constant.

4.2 Application to the PDE/ODE coupled system of equa-

tions

In the rest of this section we present the sensitivity approach needed to calculate the
largest eigenvalue of the Jacobian J of the ﬁxed-point problem, see (6). Therefore, we
diﬀerentiate the discretized operators Ah and Bh and obtain the sensitivity equations

and

A(cid:48)
h,u(ˆu, ˆv)uδv + A(cid:48)

h,v(ˆu, ˆv)δv = 0,

∀δv ∈ V o,

B(cid:48)
h,v(ˆu, ˆv)vδu + B(cid:48)

h,u(ˆu, ˆv)δu = 0,

∀δu ∈ V p
h .

(11)

(12)

where we have used the notation

uδv :=

∂u
∂v

(δv),

vδu =

∂v
∂u

(δu)

for the sensitivities.
In the decoupled system, uδv indicates the variation of the
PDE solution perturbing the solution of the ODE system and equivalently vδu is the
variation of the ODE system for a perturbation of the PDE system. For nonlinear
systems of equations the sensitivity analysis depends on a given point of lineariza-
tion (ˆu, ˆv). We compute an approximate numerical solution of the system (4(cid:48)) for
characteristic values of the parameters and choose the computed solution as point
of linearization.

Since the sensitivities in the linear solver strongly depend on the used time
stepping scheme, we consider only the sensitivities for a computation of the steady
state. Then, the equations (11) are stationary PDEs to be solved for each component
of δv, while the ODE part (12) consists of algebraic equations solved for each δu.
Therefore, we compute the sensitivity matrices ∂Sh/∂v as a N o × N p matrix and
∂Th/∂u as a N p × N o matrix, where N o denotes the number of ODE equations and
N p the dimension of the PDE discretization.

The sensitivity matrices are

(cid:19)T

,

(13)

(cid:18) ∂u

∂v1

∂Sh
∂v

=

. . .

∂u
∂vN o

. . .

∂u
∂vi

6

(cid:18) ∂u

(cid:19)T

∂vi

where each row

is of the dimension of the PDE discretization and



∂Th
∂u

=



∂v1
∂u1
. . .

∂v1
∂ui
. . .

∂v1
∂uN p

. . .

. . .

. . .

. . .

. . .

∂vi
∂u1
. . .

∂vi
∂ui
. . .

∂vi
∂uN p

. . .

. . .

. . .

. . .

. . .

∂vN o
∂u1
. . .

∂vN o
∂ui
. . .

∂vN o
∂uN p

,

(14)

where

denotes the derivatives of the ith component of v with respect to the jth

∂vi
∂uj

degree of freedom of u.

Practical realization In the PDE/ODE system presented in Section 6 the cou-
pling between the two parts appears only at the boundaries Γi and only with the
ﬁrst two components of v. Thus the product ∂Sh/∂v ∂Th/∂u decouples into a block
diagonal matrix consisting of 2 × 2 matrices for each biological cell. In addition, we
need to calculate the sensitivities (12) only for the restriction of δu on the boundaries
Γi, which are nonetheless algebraic equations, so that the major costs to calculate
the sensitivities are given by the PDE part (11).

5 Numerical Schemes

In this section we present two diﬀerent approaches to solve the class of coupled
PDE/ODE systems presented in this work that are depicted in Figure 2. In both
schemes we consider a Newton-type solver for the nonlinearities. In the coupling
scheme (a) the linear system is solved by a Krylov-solver that is preconditioned by a
multigrid scheme. In the decoupling scheme (b) the Newton update is approximated
by a ﬁxed-point iteration and a multigrid method is applied only to the PDE part.
Therefore, the decoupling approach is applied not to the original system but to its
linearization within a Newton step.

This section is organized as follows: we ﬁrst introduce the nonlinear solver based
on a (Quasi-)Newton method in Subsection 5.1 and then we present the variants of
multigrid preconditioner in Subsections 5.2 and 5.3.

7

Figure 2: Schematic representation of the considered coupling and decoupling
schemes

(a) Coupling scheme

(b) Decoupling scheme

Newton method

↓

Krylov-solver for system (15)

↓

Multigrid-preconditioner

↓

Smoother S1 or S2

Quasi-Newton method

↓

Fixed-point iteration for system (16)

(cid:46)
Direct solver

(cid:38)
Krylov-solver

↓

Multigrid-preconditioner

↓

PDE Smoother

5.1 Nonlinear solver

Newton-type methods provide a ﬂexible and reliable framework for nonlinear prob-
lems by solving a series of linear equations. As explained above, we present a fully
coupling and a decoupling approach to solve the linearized subproblems.

5.1.1 Fully coupling Newton’s method

the system:(cid:18)A(cid:48)

To apply Newton’s method we linearize the system and solve in each Newton step

h,u(un, vn) A(cid:48)
B(cid:48)
h,u(un, vn) B(cid:48)

h,v(un, vn)
h,v(un, vn)

(cid:19)(cid:18)δun+1

(cid:19)

δvn+1

=

(cid:18)f − Ah(un, vn)

g − Bh(un, vn)

(cid:19)

,

(15)

to obtain the Newton updates δun+1 and δvn+1, with which we calculate the next
iterates un+1 = un + δvn and vn+1 = vn + δvn+1. We write A(cid:48)
h,v for the
derivatives of Ah with respect to u and v and analogously B(cid:48)
h,v for the
derivatives of Bh.

h,u and A(cid:48)
h,u and B(cid:48)

5.1.2 Decoupling inexact Newton’s method

Secondly we consider a decoupling solving scheme for the linear systems deﬁned in
each Newton-step. For each Newton step n the decoupled system is solved by the
following ﬁxed-point iteration

h,u(un, vn) A(cid:48)
h,v(un, vn)
B(cid:48)
h,v(un, vn)

0

f − Ah(un, vn)

=

g − Bh(un, vn) − B(cid:48)

h,v(un, vn)δui

(16)

(cid:19)(cid:18)δui+1

(cid:19)

δvi+1

(cid:18)

(cid:18)A(cid:48)

(cid:19)

until the Newton updates (δui+1, δvi+1) fulﬁll the linear residual of the system (15)
to an accuracy (T OLiter).

If the linear system is solved until the full accuracy is reached then the update
formula (16) deﬁnes a full Newton-step, which is equivalent to the exact solution

8

of (15). A common approach to accelerate the computation of the Newton-updates
is a Quasi-Newton iteration in which the Jacobian matrix is approximated only up
to a certain accuracy. This corresponds not to solving the system (16) to the full
accuracy. In this way the costs per Newton iteration are reduced, while the number
of Newton iterations increases. A trade-oﬀ between accuracy and total costs can
enable a reduction of computing time with respect to a full Newton method. Such a
Quasi-Newton scheme is obtained if a low accuracy (T OLiter) or a small maximum
number of ﬁxed-point iterations (M AX iter) is chosen in the Algorithm 1.

Algorithm 1: Decoupling algorithm: Inexact Newton scheme

n = 0
repeat
i = 0
repeat

compute Newton updates (δui+1, δvi+1) by solving (16)
evaluate the residual resiter of the linear system (15)
i = i + 1

until resiter < T OLiter or i = M AX iter
update the iterate un and vn by δun+1 and δvn+1
evaluate the residual resnewton of the nonlinear system (4(cid:48))
n = n + 1

until resnewton < T OLnewton

This decoupling method is compared for diﬀerent parameters in numerical tests

of Section 6.2 to the fully coupling Newton method.

5.2 Multigrid scheme for the coupling approach

In this section we introduce a multilevel preconditioner which can cope with the
strong coupling between PDE and ODEs. Such a coupling arises in the solver of the
linear subsystems if the fully coupling Newton method is used instead of a decoupling
scheme. Coupled problems are commonly preconditioned by block preconditioning
approaches, e.g. by simple block diagonal methods or a preconditioning of the Schur
complement [24]. We will not use a block preconditioning approach because of the
small dimension of the ODE part but instead we set up a coupling preconditioner
based on the linear multigrid method.

In fact, it is well known that the most eﬃcient preconditioner for the PDE
block is a multilevel preconditioner, because the number of linear iterations becomes
independent of the mesh reﬁnement [25, 7]. We consider a hierarchy of meshes
{Tl}0≤l≤L, where the index 0 denotes the root mesh, i.e. the coarsest mesh from
which all other meshes are derived by reﬁnement. In this section we use the following
notation for the system matrix of (15):

(cid:18)A

(cid:19)

Kl :=

(cid:48),l
(cid:48),l
h,u A
h,v
B(cid:48)
h,u B(cid:48)

h,v

,

(17)

where the index l indicates the grid reﬁnement level. The diagonal block B(cid:48)
not depend on the mesh level, whereas the block B(cid:48)

h,v does
h,u does depend on the mesh

9

level through the coupling term ˜uh on the cell boundary. Nevertheless, we do not
use the notation with superscript l in the blocks of the ODE part. In fact, we use
an approximation in the coupling. To reduce the computational costs and simplify
the implementation, the coupling ODE/PDE block is calculated at each level with
the term ˜uh computed at the ﬁnest level. In this way the whole ODE part does not
depend on the reﬁnement level l. Our numerical results have indicated that this
modiﬁcation does not inﬂuence the performance of the multilevel algorithm.
The multigrid scheme is used as a preconditioner for a Krylov method applied
to the system matrix Kl. We use a generalized minimal residual (GMRES) method
because of the asymmetry of the system matrix, but a diﬀerent Krylov method as,
e.g., the BiCG or BiCGStab would also be appropriate for our purpose. In Section
6.2 we show numerically that the eﬃciency of the preconditioner is independent of
the mesh size. The work presented here is based for the PDE part on previous work
by Janssen and Kanschat [26]. For the coupling PDE/ODE a new implementation
was necessary. The diﬀerence to a standard multigrid implementation is that the
transfer operators have to take into account the structure of the problem and treat
the PDE and ODE parts in diﬀerent way as explained below.

5.2.1 Transfer operators

For the transfer operators we use the following notation

Rl−1

l

: Vl → Vl−1 (restriction), P l−1

l

: Vl−1 → Vl (prolongation).

(18)

The restriction and prolongation operators act only on the PDE part, i.e. the ﬁnite
element discretization, while the ODE part is transferred by the identity in both
directions. The restriction and prolongation for the PDE part are implemented as
intergrid transfers induced by the natural embedding of hierarchical meshes [26]. In
matrix notation the restriction of the whole residual is given by application of the
operator

(cid:18)Rl−1

l
0

(cid:19)

0
I

,

(19)

where I ∈ RN o×N o denotes the identity matrix of the ODE part. The prolongation
of the whole residual is deﬁned analogously.

5.2.2 Smoother

In case of strong coupled problems, for example in ﬂuid structure interaction, a
common strategy for the smoothing process is to consider the full coupling only
at the coarsest level and to smooth the two parts separately (decoupled) on the
ﬁner levels [27, 28, 29, 30]. Since in our case the ODE part is small in comparison
with the PDE one, we expect that the marginally more expensive smoothing of the
whole coupled system at all levels would be eﬃcient in the case of strong coupling.
Therefore, we have compared the two strategies of (1) smoothing the whole system
or (2) smoothing only the PDE part. For this comparison every eﬃcient smoother
would be appropriate, we have chosen the incomplete LU factorization (ILU). The
two smoothers are denoted S1 and S2:

10

S1: Incomplete factorization (ILU) of the whole matrix Kl (17);

S2:

incomplete factorization (ILU) of the PDE block as part of a Block Gauss
Seidel scheme.

5.3 Multigrid scheme for decoupling approach

In the decoupled formulation as depicted in Figure 2 we use the multigrid only for
the PDE part. Therefore, we use the standard multigrid scheme from [26] with ILU
as smoother.

6 Numerical Results

In this section we make a comparison between the diﬀerent numerical schemes pre-
sented in the previous section. The following computations were performed using
the C++ library deal.II, see Bangerth et al. [31], with the UMFPACK library ap-
plied as direct solver on the coarse grid level [32]. Further implementation details
can be found in [33].

Intercellular signalling model Exemplarily we focus on a model for signaling
of Interleukin-2 (IL-2) between T cells in the lymph node ﬁrst presented by Busse et
al. [5]. In the lymph node there are diﬀerent types of cells. We consider in our test
model IL-2 secreting cells and responder cells, i.e. cells that secrete IL-2 and cells
that receive the IL-2 which diﬀuses in the extracellular region. The cells are ﬁxed in
space and on their surface there are receptors responsible for recognizing antigens.
A description of the modeled biological processes is given in Section 7. Here, we
give a mathematical description of the model, which consists of a reaction-diﬀusion
equation describing the distribution of IL-2 between the T cells in the intercellular
area Ω coupled with ODEs for the intracellular processes involving the receptor
dynamics. The coupling is described by a Robin boundary condition for each T cell
indexed by i = 1, . . . , Nc.

Let us consider the following notation:
• u(t, x) : [0, T ] × Ω → R describes the concentration of IL-2 in the intercellular

area.

• Ri(t), Ci(t) and Ei(t) : [0, T ] → R describe the number of IL-2 receptors, built
receptor-complexes and internalized complexes for each of the simulated T
cells. The receptors are distributed homogeneously on the cell surfaces.

The mathematical model consists of one PDE
∂tu(t, x) = µ∆u(t, x) − kdu(t, x)

D∂nu(t, s) = qi − konRi(t)u(t, s) + kof f Ci(t)
for all (t, s) in (0, T ] × Γout,
∂nu(t, s) = 0

for all (t, x) in (0, T ] × Ω,

for all (t, s) in (0, T ] × Γi,

(20a)

11

coupled with three ODEs for each T cell

Ci(t)3

∂tRi(t) = w0

K 3 + Ci(t)3 − konRi(t)(cid:101)ui(t)
∂tCi(t) = konRi(t)(cid:101)ui(t) − (kof f + kiB)Ci(t),

i + w1
i
− kiRRi(t) + kof f Ci(t) + krecEi(t)

∂tEi(t) = kiBCi(t) − (krec + kdeg)Ei(t),

(cid:82)

˜ui(t) =

Γi

u(t, s) ds
|Γi|

,

for all cells i = 1, . . . , Nc,

(20b)

with given initial conditions for u(0), Ri(0), Ci(0) and Ei(0) for all cells i = 1, . . . , Nc.
The used parameters and their values are described in Table 1. The parameters and
the chosen initial values have been taken from [5]. The two types of cell that we

Table 1: Model parameters

Symbol Value

Parameter

qi
µ
kd
w0
i
w1
i
K
kon
kof f
kiR
kiC
krec
kdeg
r
d

0 − 22000 mol./cell/h IL-2 secretion rate
36000 µm2/h
0,1/h
150 mol./cell/h
3000 mol./cell/h
1000 mol./cell
111,6 /nM/h
0,83/h
0,64/h
1,7/h
9/h
5/h
5µm
5µm

Diﬀusion coeﬃcient of IL-2
Extracellular IL-2 degradation
Antigen stimulated IL-2 receptor expression rate
Feedback induced IL-2 receptor expression rate
Half-saturation constant of feedback expression
IL-2 association rate constant to IL-2 receptors
IL-2 dissociation rate constant from IL-2 receptors
Internalization rate constant of IL-2 receptors
Internalization rate constant of receptor complexes
Recycling rate constant of IL-2 receptors
Endosomal degradation constant IL-2 receptors
Cell radius
Cell to cell distance

consider share the same receptor dynamics but diﬀer in the IL-2 secretion rate:

• Secreting T cells, which secrete IL-2 with the secretion rate qi = 2500 mol/h,
• Responding T cells with qi = 0.

Table 2: Value of the IL-2 degradation parameter and corresponding maximum
eigenvalue of J, see (6)

Biologically relevant test model

Artiﬁcial test model

kd
0.1
1000

λmax
8.8
0.01

In Section 7 we show a simulation for a microenvironment conﬁguration with 216
T cells, among them 54 randomly chosen secreting T cells. That simulation is used

12

to give a biological interpretation to the results obtained with the presented model.
The numerical tests shown here are performed using a subproblem. We consider
only eight cells among them only one is secreting IL-2. The reduction in size allows
for fast tests and does not aﬀect the study of the strength of the coupling. In fact, we
have observed by calculations using many diﬀerent conﬁgurations that the strength
of the coupling depends on the model parameters and not on the number of cells.
The conﬁguration is displayed in Figure 1 where the responding T cells are in grey
and the secreting T cell is highlighted. For this test problem we found a stationary
state numerically.

The goal of the next subsections is to show the numerical comparison between the
two schemes depicted in Figure 2. We have divided the results in three subsections:
• Subsection 6.1: at ﬁrst we compare the two smoothers S1 and S2 that we have

chosen for the coupling solver, see again Figure 2.

Once we have decided which is the best smoother for the coupling solver, we compare
this solver with the decoupling solver in two cases:

• Subsection 6.2: the stationary case;
• Subsection 6.3: the non-stationary case.

Since the results depend on the strength of the coupling, we want to test our
solvers for strong and weak coupling conditions for both the stationary and the
non-stationary cases. In the stationary case, we consider two conﬁgurations chang-
ing the parameter kd. The two values of kd and the respective maximal eigenvalues
of the Jacobian are shown in Table 2. We denote the case with low value of kd
as biologically relevant since it is in the range of reference values given in Table 1.
According to the criterion (10) it is a strongly coupled system.

We refer to the case with a high value of kd as an artiﬁcial setting since this
value is far larger than the biological assumptions taken in other publications with
this model [5, 34]. According to the criterion (9) it is a weakly coupled system. High
values of kd correspond to large degradation of u. In this way the inﬂuence of v on
u is diminished. Thus the PDE part is artiﬁcially decoupled from the ODE part.
We use the two proposed settings to compare the solvers. In the next paragraphs
we give a biological interpretation of the two settings.

Biological scenario for the strongly coupled (biological relevant) test
model This model consists of 8 T cells among which one is a secreting cell. All
parameters are like in the real application, in the lymph node (Table 1). After the
deﬁnition in (10) we have a strongly coupling between the equations. In Figure 3
(a) we see the time course of the IL-2R receptors (the sum of R and C receptors) on
the surface of each cell. The receptors need some minutes to get the IL-2 for a slight
increase and reach their steady state quite early after 9 hours. In this conﬁguration
one secreting cell is not enough to activate the others. In Figure 3 (b) we see the
time course of the averaged IL-2. Again we have a slight increase in the ﬁrst 3 hours
and the steady state regulates quite early after 9 hours. The IL-2 concentration is
low, around 0.045 pM.

13

Figure 3: Dynamic behavior for the biological relevant test model which is strongly
coupled (8 T cells among them one secreting)

(a) Time course of the amount of IL-2R receptors (R+C) on the

surface of each cell. No cell is activated in this conﬁguration

(b) Time course of the averaged IL-2 concentration on the surface of

all cells

Biological scenario for the weakly coupled (artiﬁcial) test model This
model diﬀers from the biological relevant test model only in one parameter, kd , the
degradation rate. The parameter is chosen artiﬁcially to create a weekly coupling
between the equations. It is chosen to be greater by four orders of magnitude with
respect to the biologically relevant value (Table 2). Therefore, IL-2 degrades 104
faster than in the strongly coupled scenario. It follows that there is much less IL-2
available for the responder cells than in the strongly coupled model. Numerical
simulations (Figure 4) show that the amount of IL-2 is reduced by three orders of
magnitude. Thus, there will be less IL-2 for the responder cells and also no chance
for activation. In the steady state which occurs immediately, whereas in the strongly

14

05101520230240250260270280time (h)IL−2R (molecules/cell)0510152000.010.020.030.040.050.06time (h)IL−2 (pM)coupled model it occurs after 9 hours, there is only 2.2· 10−4 pM IL-2 which is three
orders of magnitude less than in the biological relevant scenario. The total amount
of IL-2R receptors stays almost constant for all times. With this concentration
changes in the ODEs the secreting cell also produces less IL-2.

In the non-stationary case, we do not have to change kd to compare two conﬁg-
urations. Instead we use two diﬀerent time discretizations with steps ∆t = 0.01h
and ∆t = 0.1h. By reducing the time step in this way we also reduce the strength
of the coupling as shown in the results.

Figure 4: Dynamic behavior for the artiﬁcial test model which is weekly coupled (8
T cells among them one secreting)

(a) Time course of the amount of IL-2R receptors (R+C) on the

surface of each cell. No cell is activated in this conﬁguration

(b) Time course of the averaged IL-2 concentration on the surface of

all cells

15

05101520234234.2234.4234.6234.8235time (h)IL−2R (molecules/cell)0510152001234x 10−4time (h)IL−2 (pM)6.1 Choice of multigrid preconditioner for the coupling solver

The two smoothers have been described in Subsection 5.2.2. We compare them using
the conﬁguration with a strong coupling strength, i.e. the biologically relevant case.
Recall that S1 uses a factorization of the whole matrix, while S2 uses a factorization
of only the PDE part.

We compute the number of GMRES steps over all Newton steps (Σn) and the
average reduction rate (r) of the residual in each GMRES step. We have set the
Newton accuracy to 10−6. The accuracy of the linear solver per Newton step is
set to 10−11. We have observed that the number of Newton steps only depends on
the coupling, the nonlinearity of the equation and the accuracy of the solver. In
particular it is not dependent on the grid reﬁnement. The latter eﬀect is known
as “asymptotic mesh independence” and a proof of it can be found in [35, 36] for
Newton-type methods applied to nonlinear operator equations and, e.g., in [37] for
a Gauss-Newton method for nonlinear Least Squares problems. The number of
smoothing cycles are set in both smoothers to three. We have observed that a larger
number of smoothing steps is unnecessary to improve the smoother performance.
To test the mesh independence of the multigrid preconditioner we compute several
reﬁnement levels up to ﬁve reﬁnements as indicated in the ﬁrst column of Table
3. We use a global reﬁnement of the grid. The ﬁnest grid has 885673 degrees of
freedom, the coarsest 367 degrees of freedom for the PDE part. Additionally 24
degrees of freedom for the ODE part are coupled to the PDE part. Table 3 shows
that the number of GMRES steps preconditioned by the two smoothers is almost
constant for S1 (from 46 at L = 2 to 54 at L = 5) and increases moderately for S2
(from 69 at L = 2 to 84 at L = 5). Therefore we have chosen S1 because it is mesh
independent and more eﬀective.
In fact, the computational costs per smoothing
iteration are almost the same for the two smoothers because the ODE block is not
large. Since the costs are comparable, we see that the smoother S1 costs from 33%
(at L = 2) to 35% (at L = 5) less than the smoother S2.

Table 3: Reduction rates of diﬀerent preconditioners

MG-S1 (ILU) MG-S2 (Bl.-ILU)

Σs
46
51
54
54

Σs
L log10 r
69
2.00
2
77
3
1.92
81
1.85
4
5
84
1.81
Notation: Σs GMRES iterations
in all Newton steps

log10r
1.41
1.27
1.21
1.15

r average reduction rate
L reﬁnement level

6.2 Stationary case

In this section we compare the two approaches depicted in Figure 2 where for the
coupling method (a) we use the smoother S1 as explained above. For the coupling

16

approach we use an iterative method preconditioned by the multigrid method de-
scribed in 5.2, while for the decoupling approach we use the method described in
5.3. In the coupled case, since the matrix is asymmetric we use a GMRES method.
In the decoupling approach the system matrix is symmetric, therefore the solver
of choice would be, e.g. the conjugate gradient method (CG). Nevertheless, for a
direct comparison we use instead the GMRES method also for this approach. In
fact, we have observed that, in combination with the preconditioner, both solvers
have similar performance. Furthermore, to make the schemes comparable we use
the same accuracy of the GMRES solver set to T OLiter for both schemes. In this
way the number of Newton steps to solve the nonlinear problem is independent of
the approach and we can compare the total number of GMRES steps to solve for a
Newton accuracy of T OLnewton.
In Table 4 we compare the number of Newton steps (n) and the number of total
GMRES iterations (Σs) needed to obtain a solution of accuracy (T OLnewton = 10−6).
In each Newton step the decoupling scheme described in Algorithm 1 is iterated until
a residual resiter < T OLiter = 10−11 is reached. The parameter M AX iter is not used
in this test, we will use it later in the non-stationary case. The average GMRES
iterations per Newton step is denoted by ¯s and the sum over all GMRES steps by Σs.
We globally reﬁne the coarse grid three times up to a number of 114929 degrees of
freedom. It can be observed that the coupling solver outperforms the decoupling one

Table 4: Coupling vs decoupling solver

“biologically relevant” problem λ = 8.8

“artiﬁcial” problem λ = 0.01

decoupling
Σs

¯s

L n

coupling

n

¯s

Σs

decoupling
n

¯s

Σs n ¯s

coupling

Σs

21
21
21

7
7
7

748
921
957

2
33
33
3
4
35
Notation: Σs GMRES iterations during all Newton steps

5236
6444
6699

11
11
11.7

6.6
7.3
7.7

46
51
54

7
7
7

3
3
3

3
3
3

7
7
7

n Newton steps
¯s average GMRES iterations per Newton step
L reﬁnement level
λ largest eigenvalue of the sensitivity matrices

in both cases, the “biologically relevant” and the “artiﬁcial” conﬁguration. While
in the strongly coupled case the coupling solver is much better than the decoupling
approach (compare the 4th column with the 7th column), in the weakly coupled case
it leads to 30–40% less GMRES iterations (compare the 10th column with the 13th
column).

6.3 Non-stationary case

In this section we solve the time-dependent system (4) until a stationary solution is
reached. In each time step a coupled non-linear system has to be solved. In contrast
to the stationary case, the strength of the coupling is reduced when using small time
steps. For the decoupling approach it is less eﬀective (in the non-stationary case) to

17

solve the linear problems up to a very small tolerance (T OLiter) as can be seen from
the numerical results. For this reason we have introduced the parameter M AX iter
in Algorithm 1, and for comparison purposes we have made numerical tests with the
values M AX iter = 1, . . . , 4, see ﬁrst column in Table 5. This table reports as well

Table 5: Decoupling and coupling solving of the non-stationary problem

M AX iter Σn

∆t = 0.1h
Σs

∆t = 0.01h
Σn Σs

decoupling

1
2
3
4

1393
754
547
448
356

3375
3792
4363
4775
1799

5566
3395
2880
2871
2868

14016
15217
21153
23658
11299

coupling
Notation: Σn Newton steps in all time steps

Σs Krylow iterations in all Newton steps
M AX iter maximum of iterations

per Newton step

the sum of computed newton steps (Σn) and the sum of computed GMRES steps
(Σs) over all time steps. The results are listed for computations on a spatial grid
level L = 2 (2189 degrees of freedom) with 200 (∆t = 0.1h) or 2000 (∆t = 0.01h)
time steps, with ﬁnal time 20 hours.

A higher maximal number of ﬁxed-point iterations per Newton step (i.e. a higher
M AX iter) increases the accuracy of the linear solver and thus reduces the number
of Newton steps. The decoupling solving scheme with a M AX iter = 4 results in
a number of Newton steps not much larger than in coupling solving scheme (448
vs 356) but with more than twice the number of computed GMRES steps (4775
vs 1799). Furthermore, it can be observed that the number of total GMRES steps
decreases reducing M AX iter, see the 3rd column. A comparison of the computational
time should consider also the time per Newton step. In fact, we observe that the
computing time for solving with the decoupling approach is much larger than the
double of the time needed by the coupling approach.
In fact, associated to each
Newton iteration there are additional computational costs, e.g. building or updating
the Jacobian and the residual. Since the time per Newton step depends on the
speciﬁc implementation (e.g. how often the Jacobian is updated), we restrict the
comparison to the total number of linear solving. For this reason we consider a
better choice the value of M AX iter = 1.

As already remarked, the eﬀectiveness of the decoupling solver depends on the
strength of the coupling and thus on the size of the time step. In fact the coupling
solver needs for time steps ∆t = 0.1h around half of the iterations of the decoupling
solver, while for smaller time steps (∆t = 0.01h) the iterations of the coupling solver
are reduced by 20% compared to the decoupling solver with M AX iter = 1.

Remark 6.1. By using the implicit Euler scheme we have shown that the coupling
solver is more eﬀective. The use of a higher order time scheme, e.g. the Crank-
Nicolson scheme, allows for larger time steps to produce the same accuracy. As
shown above, larger time steps lead to a stronger coupling during the time integration.

18

We expect therefore that the coupling solver is even more eﬀective using a higher
order time scheme.

Remark 6.2. For the test that we have done in this work we did not use a global-
ization method for the Newton convergence. Our experience is that for the dynamic
problem we do not need globalization, while for the stationary problem some critical
conﬁgurations could be solved only using pseudo time steps approach to get a good
start solution for Newton to converge.

Solver performance with increasing number of T cells To test how the
solver scales with the number of T cells, i.e. how the total number of Newton steps
and the total number of GMRES steps increase with the increasing number of the
simulated T cells, we have run simulations with 8, 27 and 64 T cells. The parameter
set is the same as that for the previous simulations, in particular we set the ﬁnal time
to 20 hours and a time step ∆t = 0.1h. To maintain the same ratio between secreting
and responding T cells, around 1/8 of the total number of T cells is randomly chosen
as secreting, i.e. 1, 3, and 8 for the simulations with 8, 27 and 64 T cells respectively.
Since the computing time for the decoupling solver is much larger than that for the
coupling solver, we have run the simulations at reﬁnement level L = 1.

In Table 6 we report the total number of Newton steps and the total number of
GMRES steps for all time steps. For the coupled problem we use the notation ΣnC
and ΣsC and for the decoupling solver the notation ΣnD and ΣsD. The last column
shows the reduction of total GMRES steps by using the coupling solver with respect
to the decoupling one. It can be observed that the gain of the coupling solver scales
perfectly with the number of T cells, i.e. the reduction of total number of GMRES
steps by using the coupling solver is around 50% independently of the number of T
cells.

Table 6: Scaling with the number of T cells

Coupling

Decoupling Reduction of Σs

Num. T cells ΣnC ΣsC ΣnD ΣsD

ΣsC/ΣsD

8
27
64
125

337
334
344
345

1601
2007
2316
2672

1250
1214
1343
1325

2997
3389
4386
4813

53%
59%
52%
55%

Notation: Σn Newton steps in all time steps

Σs Krylow iterations in all Newton steps

7 Application to a cellular microenviroenment

We present a numerical result applied to a cellular microenvironment consisting of
216 T cells. This in silico experiment can be considered as representative to observe
the cell-to-cell interactions in the lymph node. In our conﬁguration 54 T cells are
randomly chosen as T helper cells and release IL-2 locally into the immunological
synapse with a rate of qi = 3500 mol/h. The remaining cells are responding T cells

19

with qi = 0 which absorb the IL-2 from the environment. The amount of IL-2 which
is absorbed by each cell is proportional to the number of the expressed receptors
on their surface and this number depends again on the amount of absorbed IL-2.
This means, the more IL-2 a cell can absorb the more receptors are expressed on
its surface. If a certain amount of receptors are expressed, the T cell is activated
and ready for proliferation and diﬀerentiation determining the type of the immune
response. The more IL-2 a cell absorbs the better is the chance for it to get activated.
Thus, the result is a competitive behavior between the cells for IL-2.

For this application we have used a ﬁnal time of 30 hours, a time step ∆t = 0.1h
and a reﬁnement level L = 2. Due to the value of kd = 0.1/h the equations are
strongly coupled. In Figure 5 (a) we see the time development of the amount of
receptors for each T cell. At the beginning the amount of receptors grows strongly
in all cells with the same speed. After 9 hours they have ﬁve times more receptors
than in the biological relevant test model. Thereafter they split into two groups,
the activated (yellow curves) and non-activated (grey curves) cells. A cell is called
activated when it has more than 4000 IL-2R molecules. After 30 hours the T cells
have either become activated by building new receptors or their number of receptors
has decreased to the starting level. These biological processes take some time such
that the steady state will be reached later after 30 hours. The Figure 5 (b) shows
the averaged IL-2 concentration at the cell surface. Here, the same colors are used,
yellow (see electronic version of the paper for the colors) for the activated and gray
for the non-activated cells. Interestingly, there is almost no diﬀerence in the averaged
amount of IL-2 between activated and non-activated cells except at the time point of
decision, i.e. after 9 hours of activation. The cells which get slightly more IL-2 at this
time will be activated. All others will down-regulate their receptors. In the steady
state there is over 100 times more IL-2 than in the corresponding test model with
one secreting cell and in the initial phase 104 times more. One of the most important
biological ﬁndings from these simulations was the heterogeneity of the IL-2 amount
in time and space. Despite the rapid diﬀusion of IL-2, spatial inhomogeneities occur
in the concentration distribution (Figure 6) and large gradients develop over several
orders of magnitude (Figure 5 (b)). In Figure 6 we present a volume visualization of
our numerical results for the chosen conﬁguration in the steady state performed with
Covise [38]. Transparency of the whole data set is used to make the inner structure
visible and a ﬂexible mapping of the data on colors and opacity to visualize the
diﬀerent T cells for a realistic representation. The (randomly) chosen secreting cells
are marked with magenta (see color version of the paper). By visualizing only a
part of the IL-2 range we can see the secretion points on the cell surfaces (small red
domains). There, we ﬁnd the largest IL-2 concentration. The yellow cells are the
activated cells and the transparent gray ones the responder cells which have down-
regulated their receptors. Further visualization and numerical results are presented
in [34].

20

Figure 5: Dynamic behavior of 216 T cells among them 54 secreting T cells

(a) Time course of the amount of IL-2R receptors (R+C) on the
surface of each of the activated (yellow curves) and non-activated

(gray curves) cells

(b) Time course of the averaged IL-2 concentration on the surface of

all activated (yellow curve; at t=9h is the curve above) and

non-activated (gray curves) cell surfaces

21

051015202530010002000300040005000time (h)IL−2R (molecules/cell)051015202530  10 1001000time (h)IL−2 (pM)Figure 6: IL-2 concentration distribution in a cell microenvironment consisting of
216 T cells. This inhomogeneous IL-2 pattern develops in the steady state after 30
hours of activation of the IL-2 signaling pathway

8 Conclusions

In this paper, we considered a coupled nonlinear system consisting of a parabolic
partial diﬀerential equation and many ordinary diﬀerential equations, which emerges
e.g. in systems biology by modeling intercellular signaling pathways. We presented
numerical results for an application in immunology:
the dynamics of cytokine
(Interleukin-2) signaling between diﬀerent types of T cells. The presented methods
can nevertheless be used for solving other signaling pathways or other applications
modeled by systems of coupled PDE/ODE equations.

Previous works dealing with coupled PDE/ODE models have presented mainly
decoupling approaches (especially for biological applications) and have not shown
a quantitative comparison with coupling approaches (see references in the intro-
duction). This paper showed in a systematic way a quantitative comparison be-
tween coupling and decoupling approaches for this class of problems. Speciﬁcally,
we used a sensitivity analysis and its numerical implementation to study the cou-
pling/decoupling strategy. This approach, applied to the model for Interleukin-2

22

signaling, indicated that a coupling strategy performs better for our strongly cou-
pled model. We implemented a solution method based on a Newton-type solver with
a multigrid preconditioner. Depending on the time step length, the total number
of linear solver iterations over all Newton steps can be reduced with this strategy
up to 50%. The saving in computational time is typically much more than 50%
because also the number of Newton iterations is higher in the decoupling scheme in
comparison with the coupling one, and associated to each Newton iteration there
are additional computational costs. Nevertheless, the quantitative estimation of the
computing time highly depends on how the Newton method is implemented. There-
fore, in this work we have restricted the comparison to the total number of linear
solving over all Newton steps.

As future work, we indicate a possible strategy for an additional reduction of the
computation time by using local mesh reﬁnement both in space and time. In par-
ticular, diﬀerent time grids for the PDE and the ODE part allow, depending on the
strength of the coupling, to decrease the number of time steps for the computation-
ally expensive PDE part of the model. The essential question is how to choose the
two time grids without decreasing the overall convergence rate of the method. An a
posteriori error estimator for the errors of the PDE and ODE discretization is neces-
sary to reach a wanted accuracy eﬃciently by iterative adaptive reﬁnement. The use
of a reﬁnement strategy based on such an error estimator allows to control the two
time grids separately and obtain an optimal time discretization for both parts of the
system. The complex realization of such a method is subject of our current research.

Acknowledgements

The authors thank Prof. Rolf Rannacher for the numerous fruitful discussions on
numerical aspects of this work. Furthermore, the authors acknowledge Prof. Thomas
H¨ofer for his support and for provisioning this concrete application in immunology.
In addition, the authors gratefully acknowledged the work for the visualization in
3D done by Marcus Schaber (Visualization and Numerical Geometry Group at the
Interdisciplinary Center of Scientiﬁc Computing (IWR), Heidelberg.)
T.C. was supported by Deutsche Forschungsgemeinschaft (DFG) through the project
CA 633/2-1.
E.F. and D.G. were supported by the Helmholtz Alliance on Systems Biology (SB
Cancer, Submodule V.7) and D.G. additionally by ViroQuant.

References

[1] H. A. Kestler, C. Wawra, B. Kracher, M. K¨uhl, Network modeling of signal
transduction: establishing the global view, Bioessays 30 (11-12) (2008) 1110–
1125.

[2] J. Sherratt, P. Maini, W. J¨ager, W. Muller, A receptor based model for pattern

formation in hydra, Forma 10 (2) (1995) 77–95.

[3] A. Marciniak-Czochra, Receptor-based models with diﬀusion-driven instability
for pattern formation in hydra, Journal of Biological Systems 11 (03) (2003)
293–324.

23

[4] E. Friedmann, A. Pfeifer, R. Neumann, U. Klingmller, R. Rannacher, Inter-
action Between Experiment, Modeling and Simulation of Spatial Aspects in
the JAK2/STAT5 Signaling Pathway, in: H. G. Bock, T. Carraro, W. J¨ager,
S. K¨orkel, R. Rannacher, J. P. Schl¨oder (Eds.), Model Based Parameter Esti-
mation, Vol. 4 of Contributions in Mathematical and Computational Sciences,
Springer Berlin Heidelberg, 2013, pp. 125–143.

[5] D. Busse, M. de la Rosa, K. Hobiger, K. Thurley, M. Flossdorf, A. Schef-
fold, T. H¨ofer, Competing feedback loops shape IL-2 signaling between helper
and regulatory T-lymphocytes in cellular microenvironments, PNAS 107 (2010)
3058–3063.

[6] A. Brandt, Multi-level adaptive solutions to boundary-value problems, Mathe-

matics of Computation 31 (138) (1977) 333–390.

[7] W. Hackbusch, Multi-grid methods and applications., Springer Series in Com-

putational Mathematics, 4. Berlin etc.: Springer- Verlag. XIV, 377, 1985.

[8] D. J. Mavriplis, An assessment of linear versus nonlinear multigrid methods for
unstructured mesh solvers, Journal of Computational Physics 175 (1) (2002)
302–325.

[9] M. E. Moghadam, I. E. Vignon-Clementel, R. Figliola, A. L. Marsden, A mod-
ular numerical method for implicit 0D/3D coupling in cardiovascular ﬁnite el-
ement simulations, Journal of Computational Physics 244 (0) (2013) 63 – 79.

[10] C. Farhat, M. Lesoinne, Fast staggered algorithms for the solution of three-
dimensional nonlinear aeroelastic problems, Numerical Unsteady Aerodynamics
and Aeroelastic Simulation (1998) 7–1.

[11] C. A. Felippa, K. Park, C. Farhat, Partitioned analysis of coupled mechanical
systems, Computer methods in applied mechanics and engineering 190 (24)
(2001) 3247–3270.

[12] D. Mok, W. Wall, Partitioned analysis schemes for the transient interaction of
incompressible ﬂows and nonlinear ﬂexible structures, Trends in computational
structural mechanics (2001) 689–698.

[13] M. Heil, Stokes ﬂow in an elastic tubea large-displacement ﬂuid-structure in-
teraction problem, International journal for numerical methods in ﬂuids 28 (2)
(1998) 243–265.

[14] G. Seemann, F. Sachse, M. Karl, D. Weiss, V. Heuveline, O. D¨ossel, Framework
for Modular, Flexible and Eﬃcient Solving the Cardiac Bidomain Equations
Using PETSc, in: A. D. Fitt, et al. (Eds.), Progress in Industrial Mathematics
at ECMI 2008, Mathematics in Industry, Springer Berlin Heidelberg, 2010, pp.
363–369.

[15] M. Cervera, R. Codina, M. Galindo, On the computational eﬃciency and im-
plementation of block-iterative algorithms for nonlinear coupled problems, En-
gineering Computations: Int J for Computer-Aided Engineering 13 (6) (1996)
4–30.

24

[16] T. Ricken, D. Werner, H. Holzhtter, M. Knig, U. Dahmen, O. Dirsch, Model-
ing functionperfusion behavior in liver lobules including tissue, blood, glucose,
lactate and glycogen by use of a coupled two-scale PDE-ODE approach, Biome-
chanics and Modeling in Mechanobiology 14 (3) (2015) 515–536.

[17] A. Quarteroni, A. Veneziani, Analysis of a Geometrical Multiscale Model Based
on the Coupling of ODE and PDE for Blood Flow Simulations, Multiscale
Modeling & Simulation 1 (2) (2003) 173–195.

[18] C. Stinner, C. Surulescu, M. Winkler, Global weak solutions in a pde-ode sys-
tem modeling multiscale cancer cell invasion, SIAM Journal on Mathematical
Analysis 46 (3) (2014) 1969–2007.

[19] J. S. Leiva, P. J. Blanco, G. C. Buscaglia, Iterative strong coupling of dimen-
sionally heterogeneous models, International Journal for Numerical Methods in
Engineering 81 (12) (2010) 1558–1580.

[20] X.-C. Cai, D. E. Keyes, L. Marcinkowski, Nonlinear additive Schwarz precondi-
tioners and application in computational ﬂuid dynamics., Int. J. Numer. Meth-
ods Fluids 40 (12) (2002) 1463–1470.

[21] A. Quarteroni, A. Valli, Domain decomposition methods for partial diﬀerential

equations, Tech. rep., Oxford University Press (1999).

[22] P. G. Ciarlet, The ﬁnite element method for elliptic problems., Studies in Math-
ematics and its Applications. Vol. 4. Amsterdam - New York - Oxford: North-
Holland Publishing Company. (1978).

[23] R. Haftka, J. Sobieszczanski-Sobieski, S. Padula, On options for interdisci-
plinary analysis and design optimization, Structural optimization 4 (1992) 65–
74.

[24] J. Mandel, On block diagonal and schur complement preconditioning, Nu-

merische Mathematik 58 (1) (1990) 79–93.

[25] J. H. Bramble, Multigrid Methods, Longman Scientiﬁc and Technical, London,

1993.

[26] B. Janssen, G. Kanschat, Adaptive multilevel methods with local smoothing
for h1- and hcurl-conforming high order ﬁnite element methods, SIAM J. Sci.
Comput. 33 (2011) 2095–2114.

[27] E. van Brummelen, K. van der Zee, R. de Borst, Space/time multigrid for a
ﬂuid-structure-interaction problem, Applied Numerical Mathematics 58 (12)
(2008) 1951 – 1971, special Issue in Honor of Piet Hemker.

[28] M. W. Gee, U. Kttler, W. A. Wall, Truly monolithic algebraic multigrid for
ﬂuidstructure interaction, International Journal for Numerical Methods in En-
gineering 85 (8) (2011) 987–1016.

[29] Y. Langer, A note on robust preconditioners for monolithic ﬂuid-structure in-

teraction systems of ﬁnite element equations (2014).
URL http://arxiv.org/abs/1412.6845

25

[30] T. Richter, A monolithic geometric multigrid solver for ﬂuid-structure inter-
actions in ALE formulation, International Journal for Numerical Methods in
Engineering 104 (5) (2015) 372–390.

[31] W. Bangerth, T. Heister, L. Heltai, G. Kanschat, M. Kronbichler, M. Maier,
B. Turcksin, T. D. Young, The deal.II library, version 8.2, Archive of Numer-
ical Software 3.

[32] T. A. Davis, Algorithm 832: Umfpack v4. 3—an unsymmetric-pattern multi-
frontal method, ACM Transactions on Mathematical Software (TOMS) 30 (2)
(2004) 196–199.

[33] D. Gerecht, Adaptive ﬁnite element simulations of coupled PDE/ODE systems

modeling intercellular signaling, Ph.D. thesis, Heidelberg University (2015).

[34] K. Thurley, S. C. Tovey, G. Moenke, V. L. Prince, A. Meena, A. P. Thomas,
A. Skupin, C. W. Taylor, M. Falcke, Reliable Encoding of Stimulus Intensi-
ties Within Random Sequences of Intracellular Ca2+ Spikes, Science Signaling
7 (331) (2014) ra59.

[35] M. Weiser, A. Schiela, P. Deuﬂhard, Asymptotic Mesh Independence of New-
ton’s Method Revisited, SIAM Journal on Numerical Analysis 42 (5) (2005)
1830–1845.

[36] E. L. Allgower, K. B¨ohmer, Application of the Mesh Independence Principle
to Mesh Reﬁnement Strategies, SIAM Journal on Numerical Analysis 24 (6)
(1987) 1335–1351.

[37] M. Heinkenschloss, Mesh Independence for Nonlinear Least Squares Problems

with Norm Constraints, SIAM Journal on Optimization 3 (1) (1993) 81–117.

[38] HLRS High Performance Computing Center Stuttgart, COllaborative VIsual-

ization and Simulation Environment (COVISE).
URL www.hlrs.de/covise

26

