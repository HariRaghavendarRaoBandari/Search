6
1
0
2

 
r
a

 

M
5
1

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
5
4
7
4
0

.

3
0
6
1
:
v
i
X
r
a

A new class of high order semi-Lagrangian schemes for rareﬁed gas

dynamics.

Giacomo Dimarco∗,

Cory Hauck †,

Rapha¨el Loub`ere‡

March 16, 2016

Abstract

In this paper we genealize the fast semi-Lagrangian scheme developed in [J. Comput.
Phys., Vol. 255, 2013, pp 680-698] to the case of high order reconstructions of the distribution
function. The original ﬁrst order accurate semi-Lagrangian scheme is supplemented with
polynomial reconstructions of the distribution function and of the collisional operator leading
to an eﬀective high order accurate numerical scheme for all regimes, from extremely rareﬁed
gas to highly collisional siuation. The main idea relies on updating at each time step the
extreme points of the distribution function for each velocity of the lattice instead of updating
the solution in the cell centers, these extremes points being located at diﬀerent positions for
any ﬁxed velocity of the lattice. The result is a class of scheme which permits to preserve
the structure of the solution over very long times compared to existing schemes from the
literature. We propose a proof of concept of this new approach along with numerical tests and
comparisons with classical numerical methods.

Keywords: Semi-Lagrangian schemes, kinetic equations, high-order schemes, discrete velocity

models, rareﬁed gas dynamics.

Contents

1 Introduction

2 Kinetic equations and Fast Kinetic Scheme

2.1 The kinetic model
2.2 The ﬁrst order Fast Kinetic Scheme

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . .

3 High order polynomial reconstruction for the FKS scheme

3.1 General context for high accuracy extension . . . . . . . . . . . . . . . . . . . . . .
3.2 Linear polynomial reconstruction case . . . . . . . . . . . . . . . . . . . . . . . . .

2

3
3
4

7
7
10

∗Department of Mathematics and Computer Science University of Ferrara, Ferrara, Italy. & Universit´e de
Toulouse; UPS, INSA, UT1, UTM; CNRS, UMR 5219; Institut de Math´ematiques de Toulouse; F-31062 Toulouse,
France. (giacomo.dimarco@unife.it)

†Computer Science and Mathematics Division; Oak Ridge National Laboratory, US. (hauckc@ornl.gov )
‡Universit´e de Toulouse; UPS, INSA, UT1, UTM; CNRS, UMR 5219; Institut de Math´ematiques de Toulouse;

F-31062 Toulouse, France. (raphael.loubere@math.univ-toulouse.fr)

1

4 Numerical experiments

4.1 Convergence test problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2 Riemann problem using Sod like initial data . . . . . . . . . . . . . . . . . . . . . .
4.3 Highly oscillating kinetic problem . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.3.1 Mesh convergence study . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.3.2 Cost and eﬃciency study . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5 Conclusion and perspectives

1

Introduction

12
13
14
15
17
19

24

Kinetic models are nowadays a very important tool which is used to describe many diﬀerent phe-
nomena ranging from classical ﬂuid mechanics, plasmas and rareﬁed gases [13, 5, 2] to biology
and socio-economy models [35]. The advantage of kinetic equations with respect to more classical
approaches based on ﬂuid mechanics equations is the possibility to take into account a larger spec-
trum of regimes and, consequently, of phenomena. Typically ﬂuid mechanics describes problems
which are in the so-called thermodynamics equilibrium state while the kinetic approach permits to
consider both thermodynamics equilibrium as well as far from equilibrium states for the particles
constituting the system under analysis.

Unfortunately, the strong capability in terms of modelization are mitigated by several numerical
problems of diﬀerent nature [13]. One typically would like to preserve the physical conserved
quantities also at the numerical level because they characterize the steady states and, in addition,
to be able to deal with diﬀerent spatial and temporal scales which are often encountered in practical
applications. A more fundamental problem related to kinetic numerical simulation is represented
by a light version of ’the curse of dimensionality’ of these models.
In general the distribution
function which deﬁnes the state of the system and which gives the probability for a particle to be
at a given position with a given speed at a ﬁxed time depends on seven independent variables:
(x, v, t) ∈ R7. On the contrary ﬂuid mechanics unknowns live in a R4 space: three physical
space components plus the time. This makes numerical simulations of realistic multi dimensional
problems demanding in terms of computational time and memory consumption.

Historically, there exists two diﬀerent approaches which are typically used to tackle kinetic
equations: deterministic numerical methods such as ﬁnite volume, semi-Lagrangian and spectral
schemes [13] and probabilistic numerical methods such as Direct Simulation Monte Carlo (DSMC)
[1, 4]. Both methodologies have strengths and weaknesses. While the ﬁrst could normally reach
high order of accuracy, the second are often faster, especially for solving steady problems but,
typically, they exhibit lower convergence rate and diﬃculties in describing non stationary and slow
motion ﬂows.

For this reason, many diﬀerent research works have been dedicated in the recent past to reduce
some of the disadvantages of these classes of methods. In particular, concerning the drawback of
the excessive computational cost for deterministic methods we recall the fast spectral approaches
developed in [20, 33, 34], while for tackling the multiple scales problem we remind the work in
[28, 14, 15] and the references therein to have a broad view on the problematic and the associated
numerical techniques.

The recent review on deterministic numerical methods for kinetic equation [13] gives a panorama
of the state of the art of numerical discretization of kinetic equation. Concerning the issues related
to the excessive noise of Monte Carlo methods we quote [4] for an overview on eﬃcient and low
variance Monte Carlo methods while for applications of variance reduction techniques to kinetic
equation we remind to the recent works [26, 27] and [16, 17, 10].

2

In this work, we speciﬁcally tackle the issue related to the construction of eﬃcient numerical
methods for the linear transport part of a kinetic model. In details, we consider the development
of a new class of semi-Lagrangian methods with focus on the eﬃciency of the method and on the
possibility to extend the method developed in [18] to arbitrarily high order polynomial reconstruc-
tions of the distribution function. Thus, the class of methods described in this paper is the natural
extension of the fast kinetic scheme (FKS) described in [18, 19] which was based on the passage
from the continuous kinetic model to discrete velocity models (DVM) [3, 31, 32, 30] and on a semi
Lagrangian approach [6, 7, 8, 9, 24, 25, 21, 36] to solve the transport part. The FKS approach was
shown to be an eﬃcient way to solve linear transport equations which has permitted to simulation
the full six dimensions on a single processor machine. Unfortunately the solutions computed with
this method were limited to a ﬁrst order in space and time precision. This approach was, in fact,
based on a piece-wise constant reconstruction of the distribution function for each velocity of the
lattice. In this paper, contrarily, we consider arbitrary polynomial reconstructions which permit to
get a theoretical arbitrary high order accurate method if coupled with suitable high order splitting
techniques [37, 11] for solving the full problem given by the transport plus the collision opera-
tor. The main idea is to use a semi-Lagrangian technique to compute the solution of the transport
equation and then to compute the solution of the collision operator on the maxima and the minima
of the distribution function instead of computing it on the grid points. This approach, as will be
shown later, allows to diminish the numerical diﬀusion with respect to classical semi-Lagrangian
methods employing the same polynomial reconstruction. Moreover this approach is well suited to
preserve the structure of the solution for very long times compared to existing schemes.

The class of methods proposed can be used for discretizing diﬀerent kinetic equations with
diﬀerent type of collision operators as it will be clariﬁed later. Since the focus is on the way in
which the transport part is solved in the numerical test section a simple relaxation type collision
operator, i.e the BGK (Bhatnagar-Gross-Krook) operator [23], has been chosen. Extensions to the
full Boltzmann operator and to multidimensional settings is a work in progress.

The article is organized as follows. In the ﬁrst section 2, we present the model and the Fast
Kinetic numerical Scheme (FKS). In section 3 we generalize the FKS to arbitrary high order
reconstructions. A full example is described in the case of BGK kernel and piece-wise linear
reconstructions. Several test problem results are presented in section 4 to assess the eﬃciency
of this new high accurate numerical method exposed in this paper by comparison with classical
schemes. Conclusion and future developments are ﬁnally drawn in section 5.

2 Kinetic equations and Fast Kinetic Scheme

In this section we brieﬂy present the model and the numerical method designed in [18]. However
we refer the reader to the cited papers for an exhaustive description.

2.1 The kinetic model

In the kinetic theory of rareﬁed gases, the non-negative function f = f (x, v, t) characterizes the
state of the system and it deﬁnes the density of particles having velocity v ∈ R3 in position x ∈ R3
at time t ∈ R+. The time evolution of the system is obtained through the equation

∂f
∂t

+ v · ∇xf = Q(f ).

(1)

The operator Q(f ), on the right hand side in equation (1), describes the eﬀects of particle inter-
actions and its form depends on the details of the microscopic dynamic. Independently on the

3

type of microscopic interactions considered, typically the operator characterizes the conservation
properties of the physical system

Q(f )φ(v) dv = 0,

(2)

ZR3

where φ(v) = (1, v, |v|2) are commonly called the collision invariants. We denote by U (x, t) =
f (x, v, t)φ(v) dv ∈ R5 the ﬁrst three moments of the distribution function f . Integrating (1)

ZR3

against φ(v) yields a system of macroscopic conservation laws

∂

∂tZR3

f φ(v) dv +ZR3

v · ∇xf φ(v) dv = 0.

(3)

The above moment system is not closed since the second term involves higher order moments of
the distribution function f . However, using the additional property of the operator Q(f ) that the
functions belonging to its kernel satisfy

Q(f ) = 0

iﬀ f = M [f ],

(4)

where the Maxwellian distributions M [f ] = M [f ](x, v, t) can be expressed in terms of the set of
moments U (x, t), one can get a closed system by replacing f with M [f ] in (3). This corresponds
to the set of compressible Euler equations which can be written as

∂U
∂t

+ ∇x · F (U ) = 0,

(5)

M [f ]vφ(v) dv. Note that the simplest operator satisfying (2) and (4) is the linear

with F (U ) =ZR3

relaxation operator [23]

where ν = ν(x, t) > 0 deﬁnes the so called collision frequency. On the other hand, the classical
Boltzmann operator reads

QBGK(f ) = ν(M [f ] − f ),

(6)

QB(f ) =ZR3ZS2

B(|v − v∗|, ω) (f (v′)f (v′

∗) − f (v)f (v∗)) dv∗dω,

(7)

where ω is a vector of the unitary sphere S2 ⊂ R3. The post collisional velocities (v′, v′
by the relations

∗) are given

v′ =

(v + v∗ + |q|ω),

v′
∗ =

(v + v∗ + |q|ω),

(8)

1
2

1
2

where q = v − v∗ is the relative velocity, the kernel B characterizes the details of the binary
interactions. In this work, the construction of the numerical scheme is ﬁrst done in the general
case of a collision operator which only satisﬁes conditions (2) and (4). For the numerical simulations
we consider the BGK operator which has been shown to be able to model with suﬃcient accuracy
many diﬀerent rareﬁed regimes [5].

2.2 The ﬁrst order Fast Kinetic Scheme

The Fast Kinetic Scheme (FKS) [18] belongs to the family of so-called semi-Lagrangian schemes
[8, 9, 21] which are typically applied to a Discrete Velocity Model (DVM) [3, 30] approximation
of the original kinetic equation. We brieﬂy recall the basics of the scheme in the one dimensional
setting and we remind to [18] for details.

4

Vk+2

k

Vk+1

Vk

n
f k+2,j

j

n
f k+1,j

j

n
f k,j

j

Vk+2

k

Vk+1

Vk

n+1
f k+2,j

j

n+1
f k+1,j

j

n+1

f k,j
j

Figure 1:
Illustration of the transport scheme for the ﬁrst order FKS scheme. Left panel before
transport step, right panel after transport step. Each discrete velocity (index k) drives its own
transport equation with velocity vk. The representation of f is made by means of a piece-wise
constant function. The shape of the entire function has not changed during the transport but the
cell-centered values (bullets) may have.

Let us truncate the velocity space ﬁxing some given bounds and set a grid in velocity space
of N points with ∆v the grid step. The continuous distribution function f is then replaced by
a vector whose components are assumed to be approximations of the distribution function f at
locations vk:

fk(x, t) ≈ f (x, vk, t).

(9)

The discrete velocity kinetic model consists then of a set of N evolution equations in the velocity

space for fk, 1 ≤ k ≤ N , of the form

∂tfk + vk · ∇xfk = Q(fk),

(10)

where Q(fk) is a suitable approximation of the collision operator Q(f ) at location k. Observe
that, due to the truncation of the velocity space and to the ﬁnite number of points with which f
is discretized, the moments of the discrete distribution function fk are such that

eU (x, t) =Xk

φk fk(x, t) ∆v 6= U (x, t),

(11)

with φk = (1, vk, v2
k) the discrete collision invariants, are no longer the ones given by the continuous
distribution f . This problem concerns all numerical methods based on the discrete velocity models
and diﬀerent strategies can be adopted to restore the correct macroscopic physical quantities
[30, 31, 32, 22]. In order to solve this problem we adopt a L2 projection technique for the discretized
distribution which permits to project the discretized fk in the space of the distributions for which
the moments are exactly the continuous macroscopic quantities we aim to preserve. We do not
enter into more details and we refer the reader to [22] for a description of this technique.

Let us now introduce a Cartesian uniform grid in physical space made of M points with ∆x a
scalar which represents the grid step in the physical space. Further we deﬁne a time discretization
tn+1 = tn + ∆t starting at t0, where ∆t is the time step deﬁned by an opportune CFL condition
discussed next. We restrict ourselves to uniform meshes in space. Investigations are in progress to
extend the present method to more complex geometries.

5

Each equation of system (10) is solved by a time splitting procedure. We recall here a ﬁrst
order splitting approach: ﬁrst a transport step exactly solves the left-hand side, whereas a collision
stage solves the right-hand side using the solution from the transport step as initial data:

Transport stage −→ ∂tfk + vk · ∇xfk = 0,
Collisions stage −→ ∂tfk = Q(fk).

(12)

(13)

j,k be the point-wise values at time t0 of the distribution f , f 0

Transport step. Let f 0
j,k =
f (xj, vk, t0). The idea behind the fast kinetic scheme is to solve the transport stage (12) continu-
0
ously in space, see Fig. 1 for a sketch. To this aim we deﬁne at the initial time the function f
k(x)
as a piece-wise continuous function for all x ∈ Ωj, where spacial cell Ωj = [xj−1/2; xj+1/2] and

0
k,j at time index 0, the exact solution of (12) is simply

Ω =Sj Ωj. Hence starting from data f

∗,1
k = f

0
k(x − vk∆t),

f

∀x ∈ Ω.

(14)

0
In other words, the entire function f
k is advected with velocity vk during ∆t unit of time and the
∗ superscript indicates that only the transport step has been solved so far. The extension of this
procedure to the generic time step n gives

∗,n+1
k

f

= f

n
k (x − vk∆t),

∀x ∈ Ω,

(15)

n
where now, the key observation is that the discontinuities of the piece-wise function f
k (x) do not
lie on the interfaces of two diﬀerent cells.
Instead, the positions of the discontinuities depend
entirely on the previous advection step and thus they may be located anywhere in the physical
space. This means that if only the linear transport equation has to be solved, this approach gives
the exact solution to the equation if the initial data is eﬀectively a piece-wise constant function
initially centered on the spacial mesh.

Collision step. The eﬀect of the collisional step is to change the amplitude of f k(x). The idea
is to solve the collision operator locally on the grid points and successively extend these computed
values to the full domain Ω. Thus we need to solve the following ordinary diﬀerential equation

∂tfj,k = Q(fj,k),

(16)

for all velocities of the lattice k = 1, . . . , N and grid points j = 1, . . . , M . The initial data for
solving this equation is furnished by the result of the transport step obtained by (15) at points xj
of the mesh at time tn+1 = tn + ∆t, i.e. f
(xj ), for all k = 1, . . . , N , and j = 1, . . . , M . Then,
the solution of (16), locally on the grid points, reads if, for simplicity, a forward Euler scheme is
used

∗,n+1
k

j,k = f ∗,n+1
f n+1

j,k

+ ∆t Q(f ∗,n+1

j,k

),

(17)

∗,n+1
k

j,k

= f

where f ∗,n+1
(xj ). Of course many diﬀerent time integrators can be employed for solving
this equation. In particular special care is needed in the case in which the equation becomes stiﬀ,
refer to [14, 15] for alternative strategies. Since the time integration of the collision term is not
the issue considered in this paper, we considered the simplest possible scheme, the FKS technique
remains the same when other time integrators are employed. Equation (17) furnishes a new value
for the distribution f at time tn+1 only in the cell centers of the spacial cells for each velocity vk.
However, one needs also the value of the distribution f in all points of the domain in order to

6

perform the transport step at the next time step. Therefore, we deﬁne a new piece-wise constant
function Qk for each velocity of the lattice vk as

Q

n+1
k

(x) = Q(f ∗,n+1

j,k

), ∀x such that f

∗,n+1
k

(x) = f

∗,n+1
k

(xj ).

(18)

Said diﬀerently we make the fundamental assumption that the discontinuities of Q coincide with
the ones of f . Thanks to the above choice one can rewrite the collision step in term of spatially
reconstructed functions as
n+1
k

(x) = f k(x, tn + ∆t) = f

(x) + ∆t Q

∗,n+1
k

f

n+1
k

(x).

(19)

This ends one time step of the FKS scheme.

Concerning the transport part of the scheme, the time step ∆t is constrained by a CFL condition

of type

∆t max

k (cid:18) |vk|

∆x(cid:19) ≤ 1 = CFL.

(20)

while the time step constraint for the collision step depends on the choice of the operator Q. Since
in the numerical test section we used a BGK operator, the time step constraint for this part has
been chosen as ∆t 6 νρ. As observed in [18] the transport scheme is stable for every choice of the
time step, being the solution for a given ﬁxed reconstruction performed exactly. Nonetheless the
full scheme being based on a time splitting technique, the error is of the order of ∆t in the case
of ﬁrst order splitting or of order (∆t)q for a splitting of order q. This suggests to take the usual
CFL condition in order to maintain the time splitting error small enough.

To conclude this section let us observe that time accuracy can be increased by high order time
splitting methods, while spacial accuracy can be increased close to the ﬂuid limit to a nominally
second-order accurate scheme by the use of piece-wise linear reconstructions of state variables, see
the details in [19]. In the next section, we will introduce a procedure which allows to increase the
spacial accuracy by using high order polynomial reconstructions.

3 High order polynomial reconstruction for the FKS scheme

3.1 General context for high accuracy extension

The purpose of this section is to provide design principles to generalize the family of FKS schemes
to higher accuracy in space. The FKS method employs simple piece-wise constant functions while
our aim is to take into account arbitrary polynomial reconstruction of the distribution f . The
goal is to obtain a class of highly accurate in space schemes and to design a method which will be
viable in 3D×3D [12], relatively inexpensive and independent of the collisional operator employed:
BGK, ES-BGK, Boltzmann, etc. In this section we ﬁrst present the general framework and then
we introduce three possible choices which permit to design diﬀerent schemes. We conclude with
a critical discussion which leads naturally to choose only one of the listed possibilities for the
numerical experiments of the numerical section 4. While, in the ﬁrst part, the method is presented
in the general context valid for any reconstruction of the distribution function, in the second part
of the section we will give the details for the special case of piece-wise linear reconstructions.

The main idea behind such an extension of the original FKS method is to use a speciﬁc local
piece-wise representation of the underlying data, for instance using polynomial reconstructions
following classical MUSCL like technique [29] and to update the reconstructed distribution in the
extremes points instead of updating it as usual in the cell centers. The starting point is, as before,
the Discrete Velocity Model approximation of the original kinetic equation and a split into collision
and transport terms. Only a ﬁrst order splitting is considered in this work and the extension to
higher order splitting is under study.

7

Vk+2

k

Vk+1

Vk

n
f k+2,j

j

j

j

n
f k+1,j

n
f k,j

Vk+2

k

Vk+1

Vk

n+1
f k+2,j

j

j

j

n+1
f k+1,j

n+1

f k,j

Figure 2:
Illustration of the transport scheme in 1D for the high order FKS scheme. Left panel
before transport step, right panel after transport step. Each discrete velocity (index k) drives its
own transport equation with velocity vk. The representation of f is made by means of continuous
function. The shape of the entire function has not changed during the transport but the cell-
centered values (bullets) may have.

Initial data representation. Let, as before, f 0
the distribution f , f 0

j,k be the point-wise values at initial time t0 of
j,k = f (xj, vk, t0) at cell center xj for the lattice velocity vk. Now, we deﬁne
k of a given order p starting from point-wise values
f 0
j,k for each velocity of the lattice vk in cell center of Ωj. Then, as in the ﬁrst order case starting

k at time index 0, the exact solution of (12) is simply

a space piece-wise polynomial reconstruction ef 0
from data ef 0
In other words, the entire piece-wise polynomial function deﬁned by ef 0

k (x − vk∆t),

f ∗,1

k (x) = ef 0

vk during ∆t.

∀x ∈ Ω.

(21)

k , is advected with velocity

Reconstruction in the collisionless case.
If for one moment we simply consider the collision-
less case, i.e. Q(f ) = 0 ∀f , then the extension of this procedure to the generic time step index n
yields

f ∗,n+1
k

(x) = ef n

k (x − vk∆t),

∀x ∈ Ω,

(22)

where the key point is that the new transport step restarts from where the previous one was ﬁnished.
As a consequence there is no re-projection of the distribution function f on the mesh points
xj to compute the new polynomial reconstruction as it is the case for classical semi-Lagrangian
schemes. Therefore, in this pure convective case, this method is exact if the initial data are exactly
represented by the initial polynomial reconstruction employed (the one at time 0), see ﬁgure 2 for a
sketch of the transport phase in the one dimensional case when a continuous distribution function
is considered.

Remark 1 In order to practically compute the solution of the transport step, one simply needs
to store at the beginning of the computation for each point of the mesh a vector of size p + 1

8

where p is the order of the polynomial reconstruction containing the coeﬃcients of the polynomial.
Successively, in order to know the value of the distribution f everywhere, for each velocity of the
lattice one needs to keep track of a single ﬁxed point in the physical space (assuming that the
transport velocity is constant and the mesh is uniform). This means that the computational cost
associated to the solution of this step is very low compared to any kind of ﬁnite volume technique.

Reconstruction in the collisional case.

change the shape of the transported distribution in velocity space. Let ef ∗,n+1

In the case where collisions occur, their eﬀect is to
(x) be the solution
known for each point x in the physical space after the (n + 1)th transport step. The idea behind
the construction of the schemes is to replace the classical solution computed in the center of the
cell (ﬁrst order forward Euler scheme has been employed for simplicity but no restriction on the
time integrators is implied), that is

k

(xj )(cid:17) ,

(xextk ),

(23)

(24)

k

by

f n+1
k

(xj ) = ef ∗,n+1
(xextk ) = ef ∗,n+1
where xextk are the extreme points of ef ∗,n+1

f n+1
k

k

k

(xj ) + ∆t Q(cid:16)ef ∗,n+1
(xextk ) + ∆t eQn+1

k

k

(x) which are in general diﬀerent for each k. Let
observe that there exists only M extremes points for each value k of the velocity mesh since the
reconstruction is performed in such a way that the the Discrete Maximum Principle is satisﬁed and
then successively preserved since the transport phases keep the structure of the solution unchanged.
This choice permits to minimize the loss of accuracy due to the numerical diﬀusion since in general
the extreme points do not lie on the cell centers and thus they are lost at each time step. Notice
also that the eﬀect of (23) as well as of (24) is to compute the new value of the distribution in only
one point xj or alternatively on xextk . This means that only the solution in the cell centers or in
the extreme points have been updated with one of the two choices. However, the principle of the
FKS method is to know the solution in each point of the domain in order to continue to the next
time step. As a consequence in order to compute the next transport step and advance in time, we
need to deﬁne a new continuous distribution function, that is for all point x. For this we employ
the same initial polynomial reconstruction used for the distribution f at time 0 using these new
M extrema as interpolation points. This ends one time step of the scheme. The only point that
(xextk )? Three diﬀerent
possible choices as anticipated will discussed in the next paragraph. They lead to three possible
schemes. Only one choice is retained for the numerical simulation.

remains to specify is how, in practice, are computed the functions eQn+1

k

Computation of the collision operator in the extremes points. We identiﬁed three diﬀer-
(xextk ) for the diﬀerent lattice k and extreme

ent possibilities in order to give an estimation of eQn+1

points.

k

the transport step and so especially in xextk . Thus one could simply get eQn+1
direct computation from the values ef ∗,n+1

1. The ﬁrst possibility is to observe that the distribution function is known everywhere after
(xextk ) by
(xextk ). However, this ﬁrst simple and natural
choice may be very expensive when realistic collision operators have to be used such as the
Boltzmann operator (7). In fact, this choice implies the collision operator to be computed
N × M times, i.e. the number of extreme points, at each time step. Unfortunately, this will
be impracticable in multidimensional settings and with a Boltzmann like collision operator.

k

k

2. The second possibility is to compute at the M locations corresponding to the M cell centers

the collision operator that is

Q(cid:16)ef ∗,n+1

k

(xj)(cid:17) ,

9

(25)

k

eQn+1

and then to interpolate the known values in the cell centers in order to get an estimation of
(xextk ). This second choice will be largely computationally less expensive compared to
the ﬁrst proposed solution. However, the interpolation procedure will cause the same loss of
accuracy that one gets with a classical semi-Lagrangian discretization since the information
about the extreme points of the distribution function will not be used in this case to update
the solutions; only the cell centers values will be used. The resulting scheme would perform
very well in the non collisional or almost non collisional case since in this case extreme values
are preserved (or almost preserved) by the transport phase. However this scheme would
perform no better than a classical semi-Lagrangian scheme in the limit in which the number
of collision becomes very large.

k

k

k

3. The third possibility is to compute the collision operator at the M locations corresponding

(xj)(cid:17). Next we perform the same polynomial

to the M cell centers as before, i.e. Q(cid:16)ef ∗,n+1
the function eQn+1

(x), starting from the point-wise values Q(ef ∗,n+1

reconstruction employed for the distribution f for each velocity of the lattice vk. This gives
(xj)). The fundamental
assumption for using such an approach lies on the fact that f , which gives the distribution
of particles before the collision and Q(f ), which gives the distribution of particles after the
collision, are supposed to evolve in a close relationship so that to share the same space
topology. More precisely, our statement is that the collision operator modiﬁes the values fk
for each velocity of the lattice, in fact the collisions redistribute the relative weights of the
lattice velocity, but not their spacial distribution. This last solution, which will be the one
implemented and tested, preserves the structure of the solution as in the ﬁrst possibility but
at a cost comparable to that of the second possibility. In fact only M evaluations of the
collision operator are used in this case.

In order to detail the proposed approach (the third case) we need to deﬁne the polynomial re-
construction and an associated limiting procedure to ensure that new extrema are not generating
spurious oscillations. In the following, for the sake of clarity, we choose a simple piece-wise linear
reconstruction of the distribution function along with ad hoc limiters. Moreover we restrict our-
selves to the simple case of BGK collisional operator. Note that the detailed construction of FKS
schemes in multidimensions with higher order polynomial reconstructions for Boltzmann type of
operator is the subject of a future work.

3.2 Linear polynomial reconstruction case

In this section we will focus on a FKS method which employs a polynomial reconstructions of
degree one. The transport phase has been detailed in the previous paragraphs, it can however be
summarized by the sketch in ﬁgure 3 for the speciﬁc case under study. The collisions are modeled
by a relaxation towards the thermodynamics equilibrium QBGK = ν(M [f ] − f ). In this speciﬁc
case, being the transport phase unaltered, the collision phase becomes on the grid points

f n+1
k

(xj ) = [exp(−ν∆t)] f ∗,n+1

k

(xj ) + [1 − exp(−ν∆t)] Ek[U ∗,n+1

j

],

(26)

j

where Ek[U ∗,n+1
] is a consistent discretization of the Maxwellian distribution at the grid points.
This consistent discretization only depends on the macroscopic moments U (xj , t∗,n+1) = U ∗,n+1
also deﬁned on the grid points and satisﬁes the conservation of macroscopic quantities

j

U (xj, t∗,n+1) = Xk

φk Ek[U ∗,n+1

j

]∆v = Xk

φk f ∗,n+1

k

(xj )∆v.

(27)

In the previous equation we have used the exact solution of equation ∂tf = QBGK in this case
instead of the solution of the forward Euler scheme as before. Equation (26) furnishes the new

10

Vk+2

k

Vk+1

Vk

n
f k+2,j

j

j

j

n
f k+1,j

n
f k,j

Vk+2

k

Vk+1

Vk

n+1
f k+2,j

j

j

j

n+1
f k+1,j

n+1

f k,j

Figure 3:
Illustration of the transport scheme in 1D for the high order FKS scheme with linear
reconstruction. Left panel before transport step, right panel after transport step. Each discrete
velocity (index k) drives its own transport equation with velocity vk. The representation of f is
made by means of continuous function. The shape of the entire function has not changed during
the transport but the cell-centered values (bullets) may have.

k (xextk ) and a right E +

value of the distribution f at time tn+1 only in the cell centers of the spacial cells for each velocity
vk, see the green bullets in ﬁgure 4. Then, since our aim is to update the distribution function
at the extreme points xextk , we need to evaluate the Maxwellian distribution in these points.
In order to do that we use the same ﬁrst order polynomial interpolation used for f but for the
Maxwellian distribution, let observe the piece-wise linear green line in ﬁgure 4. These slopes are
then transferred onto the Maxwellian distribution to create a continuous version of M from cell
centered data (blue crosses in ﬁgure 4). However, this procedure causes loss of uniqueness in the
deﬁnition of the Maxwellian state at the extreme points, in fact for each of the extreme points we
get a left state E −
k (xextk ) state, see ﬁgure 4. In order to restore uniqueness
and to avoid the creation of extrema which may be possibly premises of spurious oscillations, the
value of the Maxwellian function at these points is deﬁned by taking the average between the left
and the right states when the slopes on both sides have the same sign. This average is weighted
by the distance from the cell center. On the other hand, when the slopes of the left and right
states are of opposite signs, then the value of the equilibrium function is ﬁxed as the minimum
between the left and the right states if the left slope is positive (presence of a maximum), or
as the maximum if the left slope is negative (presence of a minimum). For all cases, this value
is denoted by Ek[U ∗,n+1
at any extreme point xextk is
deﬁned by summing the values of the transported distribution and of the reconstructed Maxwellian
distribution at the M points at which the transported distribution function reaches its extrema,
that is

](xextk ). Finally the new distribution f n+1

j

k

f n+1
k

(xextk ) = [exp(−ν∆t)] f ∗,n+1

k

(xextk ) + [1 − exp(−ν∆t)] E[U n+1]k(xextk ).

(28)

From the knowledge of these new extreme values, we redeﬁne the new reconstructed distribution
f by the same ﬁrst order polynomial interpolation employed at time tn using the points xextk as
interpolation nodes. Consequently we are ready to compute another transport phase and this ends
one time step of the scheme.

11

M[f]

−

fj

Vk

f

+

+

ambiguous definition

chosen values

xj

x
j−1/2

x
j+1/2

linear reconstr.

M[f]

fjM[ ]

+

−

x
j−1/2

x
j+1/2

xj

x
j−1/2

x
j+1/2

Figure 4:
Illustration of the reconstruction technique employed in the R-FKS — From the dis-
tribution function data one reconstructs an upwind piece-wise linear polynomial (green on the left
panel). From the distribution functions known at the cell centers we evaluate the Maxwellian also
at cell centers (blue cross). Last on the top panel, we employ the same slope from the distribution
function which passes through the Maxwellian cell center value. An ambiguous deﬁnition at each
node is clariﬁed by choosing the less extreme values in case the slopes are of diﬀerent signs and
the mean value otherwise, see the black bullets.

4 Numerical experiments

In this section we test the FKS scheme with piece-wise linear reconstructions against the original
FKS schemes (referred to as R-FKS and FKS respectively) and some classical semi-Lagrangian
(SL-) schemes of ﬁrst order (referred to as ’SL-Upwind’) and second order of accuracy (referred to
as ’SL-MUSCL’). The SL-MUSCL scheme employs a simple piece-wise linear reconstruction with
van Leer ﬂux limiter [29]. Note that most of semi-Lagrangian second-order limited schemes would
produce rather equivalent results.

The methodology of veriﬁcation is revolving around three test cases:

• Numerical convergence test. Given a smooth solution for diﬀerent value of ν, we observe that

the numerical method is nominally second order accurate.

• Riemann problem using Sod like initial data

– for ν = 104 which consists of an almost pure hydrodynamics situation where genuine

shock wave and discontinuous solutions may appear;

– for ν = 103 which is a transition regime where discontinuities are no more present but

steep fronts are still present;

– for ν = 102 which is the entrance door towards the full collisional regime for which

physical diﬀusion dominates any other non-linear waves.

• Highly oscillating initial data which are generating a large number of discontinuities even in
the kinetic regime ν = 10−2. This problem requires a low dissipative scheme to maintain
accurate results. For this test we will present mesh convergence and eﬃciency studies.

12

One expects, and we will show that it is indeed the case, that the new FKS scheme with recon-
struction (R-FKS) is more accurate than FKS and the SL-Upwind schemes, and has the same -or
possibly better- accuracy than SL-MUSCL scheme. At the same time one expects that the R-FKS
scheme be computationally less expensive than the SL-MUSCL scheme. In an ideal situation the
cost of R-FKS should be close to the FKS scheme, which is already known to be an inexpensive
scheme compared to classical SL strategy. Finally, as expected, we will show that for a ﬁxed er-
ror the R-FKS demands less computational resources than SL-MUSCL, FKS and SL-Upwind in
1D×1D assuming that, if so, this situation will be vastly more interesting in 2D×2D and 3D×3D
computations. In all simulations we set the CFL number to one for all schemes.

4.1 Convergence test problem

This problem is initialized with a smooth macroscopic density, velocity and temperature data

ρ(x, t = 0) = 1 +

1
2

sin(2πx),

u(x, t = 0) = 0, T (x, t = 0) = 5 +

1
2

sin(2πx).

(29)

where Ω = [0, 1] and an initial thermodynamics equilibrium is chosen, i.e. f (x, v, t = 0) =
M [f ](x, v, t = 0). The ﬁnal time is set to tﬁnal = 0.025. The initial truncation of the velocity
space is Lv = [−15, 15]. The meshes are uniform both in velocity and physical spaces with N = 50
and Mj = 100j cells with j = 1, 2, 4, 8, 16, 32 and 64 respectively.
In ﬁgure 5 are presented the initial data (top panel) and the ﬁnal solution for ν = 101, 102, 104 from
left to right. Density, velocity and temperature are displayed when M1 = 100 cells are considered.
According to our initialization the cell centers for mesh M1 are also cell centers for any mesh Mi,

Density
Velocity
Temperature

 1.6

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

y
t
i
c
o
e
V

l

 
,
y
t
i
s
n
e
D

-0.2

 0

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 1

 0.5
x

 5.5

 5.4

 5.3

 5.2

 5.1

 5

 4.9

 4.8

 4.7

 4.6

 4.5

 4.4

t

e
r
u
a
r
e
p
m
e
T

Density
Velocity
Temperature

 1.6

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

-0.2

-0.4

y
t
i
c
o
e
V

l

 
,
y
t
i
s
n
e
D

-0.6

 0

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 1

 0.5
x

 5.15

 5.1

 5.05

 5

 4.95

 4.9

 4.85

Density
Velocity
Temperature

 1.6

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

-0.2

-0.4

e
r
u
t
a
r
e
p
m
e
T

y
t
i
c
o
e
V

l

 
,
y
t
i
s
n
e
D

-0.6

 0

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 1

 0.5
x

 5.2

 5.15

 5.1

 5.05

 5

 4.95

 4.9

 4.85

 1.6

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

-0.2

-0.4

e
r
u
t
a
r
e
p
m
e
T

y
t
i
c
o
e
V

l

 
,
y
t
i
s
n
e
D

Density
Velocity
Temperature

 5.25

 5.2

 5.15

 5.1

 5.05

 5

 4.95

 4.9

 4.85

e
r
u
t
a
r
e
p
m
e
T

-0.6

 0

 0.1

 0.2

 0.3

 0.4

 0.6

 0.7

 0.8

 0.9

 4.8

 1

 0.5
x

Figure 5: Convergence test case results for M1 = 100 cells — Top panel: initial data — Left to
right panels: ﬁnal solution for ν = 101, 102, 104 .

1 ≤ i ≤ 64. Consequently we can compute an estimation of the numerical order of convergence

13

Meshes

Order of convergence

Mj, Mj+1, Mj+2

1, 2, 4
2, 4, 8
4, 8, 16
8, 16, 32
16, 32, 63

ν = 101
1.010
9.404
2.711
2.658
1.968

ν = 102
1.056
6.695
2.012
2.043
1.948

ν = 104
1.776
4.569
2.584
2.556
2.357

Table 1: Convergence test case for a smooth solution computed from three successively reﬁned
meshes Mj, Mj+1, Mj+2 via equation (30) and for three collisional frequencies.

using three consecutive meshes of indices j, j + 1, j + 2 as

pj = log2




M1Xi=1
M1Xi=1

|ρj

i − ρj+1

2i

|

|ρj+1

2i − ρj+2

4i




|

,

j = 1, 2, 4, 8, 16.

(30)

In order to properly measure the error due to the space discretization, we make the time dis-
cretization error very small by ﬁxing the time step ∆t to the value needed for the ﬁnest mesh,
that is ∆t = (∆x)64/ max(|v|) ≃ 10−5, where (∆x)64 = 1/6400. Moreover, in order to observe the
convergence rate for diﬀerent regimes, we consider three diﬀerent collision frequencies : ν = 101,
102 and 104. The results are gathered in table 1 and we observe that, for the three collisional
frequencies considered, the nominal orders of accuracy are approaching 2. The ﬁrst two orders of
accuracy that can be computed present some eratic behaviors because the numerical solution is
not yet mesh-converged.

4.2 Riemann problem using Sod like initial data

In this paragraph we study the classical Riemann problem with Sod like initial data

f dv = 1, ZR
ZR
f dv = 0.125 ZR

ZR

f vdv = 0, ZR
f vdv = 0 ZR

f v2dv = 2.5,

f v2dv = 0.25,

if

if

x ≤ L/2,

x > L/2,

with Ω = [0, 1] the domain length and initial thermodynamics equilibrium, i.e. f (x, v, t = 0) =
M [f ](x, v, t = 0). The CFL condition is ﬁxed for all diﬀerent tests to ∆t = ∆x/ max(|v|), where
max(|v|) corresponds to the maximum speed of the particles which is ﬁxed by the initial truncation
of the velocity space Lv = [−20, 20]. The same initial data are used to run three diﬀerent problems
corresponding to three diﬀerent collision frequencies : ν = 102, 103 and 104. The meshes are
uniform both in velocity and in the physical space and the number of points is chosen respectively
as N = 50 and M = 300.

In ﬁgure 6 is reported the density of the computed solution for a ﬁnal time tﬁnal = 0.07, in
ﬁgure 7 the velocity and in ﬁgure 8 the temperature for the three diﬀerent collision frequencies
ν = 104 (top panels), 103 (middle panels), 102 (bottom panels). On the left side the solution on the
entire domain is plotted while on the right side a magniﬁcation of the solutions in some interesting
locations is reported. In particular for the density the zoom is around the region in which the

14

solution develops a contact discontinuity in the ﬂuid dynamic limit, for the velocity around the
region in which the solution forms a shock wave in the limit, while for the temperature the zooms
are around the region of the contact discontinuity for ν = 104 and around the region of the shock
wave for ν = 103 and ν = 102. The results obtained by the four schemes are reported on each plot:
FKS in red, R-FKS in blue, SL-Upwind in magenta and SL-MUSCL in green.
The results show that SL-MUSCL and R-FKS are clearly more accurate than SL-Upwind and
FKS in the highly collisional case ν = 104.
In particular, for the density we observe that the
contact discontinuity is better captured by the R-FKS scheme compared to the SL-MUSCL, while
for the temperature and the velocity the solutions are almost superimposed. The same behavior
is observed for the shock wave in the ﬂuid dynamic limit, the solution is better captured (less
points on the shock wave are present) by the R-FKS scheme in comparison with the three other
schemes employed, while the complexity of the scheme is the one of a ﬁrst order scheme (only ﬁrst
order polynomial are employed). On the other hand, when ν decreases, the diﬀerences between
the schemes are less pronounced as the physical diﬀusion takes over on the waves. However,
for ν = 103 we still observe a diﬀerence between the four solutions, in particular the two semi-
Lagrangian schemes SL-Upwind and SL-MUSCL are more diﬀusive than the two FKS schemes
(a convergence test, not reported, shows that the position of the waves converges to the one of
the FKS method when the number of points increases). In addition, comparing FKS and R-FKS
we observe that R-FKS produces slightly less diﬀusive results. Finally, in the case in which the
kinetic eﬀects are large, i.e. ν = 102 the four solutions are almost superimposed and it is diﬃcult
to appreciate the diﬀerences between the methods, only the SL-Upwind is clearly slightly more
diﬀusive than the others.
In order to better appreciate the behavior of our R-FKS method in the next paragraph we consider
a case test in which in the kinetic regime many oscillations are present, this problem permits to
enhance speciﬁc characteristics of the schemes.

4.3 Highly oscillating kinetic problem

The previous test case was clear in illustrating the gain of the R-FKS scheme compared to the
other schemes close to the ﬂuid limit and for intermediate regimes, i.e. ν = 103, while the gain
was less obvious when the regime was far from the thermodynamics equilibrium. Contrarily, the
test case in this section is designed to illustrate the anti-diﬀusive behavior of the FKS methods
compared to classical semi-Lagrangian schemes in a kinetic regime. In order to do that, let us
consider an homogeneous gas, ρ = 1, at constant temperature, T = 5 and at rest u = 0 on a
domain Ω = [0, 1]. This gas is further animated by a stair case oscillating velocity ﬁeld (u = ±1)
over a period 0 < δ ≪ L as

+1 if
−1 if
0

else

x ∈ [x2k − δ/2 : x2k + δ/2] ∩ [0.25; 0.75],
x ∈ [x2k+1 − δ/2 : x2k+1 + δ/2] ∩ [0.25; 0.75],

∀0 ≤ k ≤ M/2,

(31)

u(x) =


where {xi}i=1,M is the spacial mesh, see ﬁgure 9 for an illustration of the initial velocity ﬁeld.

We then consider a kinetic regime, ν = 102, for which kinetic eﬀects are non negligible. In
this situation, the highly oscillating velocity ﬁeld generates waves emanating from each disconti-
nuity. These waves later interact, creating secondary waves further in interaction and so on. The
physical relaxation will damp some of these waves, their amplitude and their structure, and, any
low dissipative numerical method must reproduce such behaviors. Associated with this physical
dissipation, due to the embedded numerical diﬀusion of the schemes, some small structures may
also be lost during the time evolution, or, at least, they may be damped. The goal of this test is to
show that the class of FKS methods are capable to maintain in time these small structures whereas

15

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

 0.65

 0.6

 0.55

 0.5

 0.45

 0.4

 0.35

 0.3

 0.25

 0.2

 0.15

 0.65

 0.6

 0.55

 0.5

 0.45

 0.4

 0.35

 0.3

 0.25

 0.2

 0.15

 0.65

 0.6

 0.55

 0.5

 0.45

 0.4

 0.35

 0.3

 0.25

 0.2

 0.15

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.54

 0.56

 0.58

 0.6

 0.62

 0.64

 0.66

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.54

 0.56

 0.58

 0.6

 0.62

 0.64

 0.66

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.5

 0.55

 0.6

 0.65

 0.7

Figure 6: Riemann problem — Solution at tﬁnal = 0.07 for the density. Left full solution, right
zoom close to the region in which the solution develops a contact discontinuity in the limit of
inﬁnite collisions. Collision frequency ν = 104 (top), 103 (middle), 102 (bottom).

they are, for a large part, lost using a semi-Lagrangian approach due to the intrinsic numerical
diﬀusion.

In the following we consider two kind of tests which measure the performances of the schemes.

The ﬁrst one is a mesh convergence test while the second one is an eﬃciency test.

16

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

-0.2

 0

 1.6

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

-0.2

 0

 1.8

 1.6

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

 0

SL-Upwind
SL-MUSCL
FKS
R-FKS

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

SL-Upwind
SL-MUSCL
FKS
R-FKS

-0.2

 0.83

 0.84

 0.85

 0.86

 0.87

 0.88

 0.89

 0.9

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0
 0.83

 0.84

 0.85

 0.86

 0.87

 0.88

 0.89

 0.9

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.83

 0.84

 0.85

 0.86

 0.87

 0.88

 0.89

 0.9

Figure 7: Riemann problem — Solution at tﬁnal = 0.07 for the velocity. Left full solution, right
zoom close to the region in which the solution develops a shock wave in the limit of inﬁnite collisions.
Collision frequency ν = 104 (top), 103 (middle), 102 (bottom).

4.3.1 Mesh convergence study

For the ﬁrst set of simulations, the ﬁnal time is ﬁxed at tﬁnal = 0.025, while we choose δ = 0.02.
Then, an increasing sequence of spacial meshes is used for the four schemes: M = 600, 1200, 2400
and 4800, while both the number of velocity cells N = 50 and the velocity domain Lv = [−30 : 30]

17

 9

 8

 7

 6

 5

 4

 3

 2

 0

 9

 8

 7

 6

 5

 4

 3

 2

 0

 8

 7

 6

 5

 4

 3

 2

 0

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.54

 0.56

 0.58

 0.6

 0.62

 0.64

 0.66

 0.68

 0.7

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.54

 0.56

 0.58

 0.6

 0.62

 0.64

 0.66

 0.68

 0.7

SL-Upwind
SL-MUSCL
FKS
R-FKS

 9

 8

 7

 6

 5

 4

 3

 2

 9

 8

 7

 6

 5

 4

 3

 2

 8

 7.5

 7

 6.5

 6

 5.5

 5

 4.5

 4
 0.75

 0.8

 0.85

 0.9

 0.95

 1

Figure 8: Riemann problem — Solution at tﬁnal = 0.07 for the temperature. Left full solution,
right zoom close to the region in which the solution develops a contact discontinuity (top) or a
shock wave (middle and bottom) in the limit of inﬁnite collisions. Collision frequency ν = 104
(top), 103 (middle), 102 (bottom).

are kept ﬁxed. In ﬁgure 10 we present the density, velocity and temperature for the four schemes
when 600 cells are used. Observing this ﬁgure the schemes seem to capture the same main waves
and they seem to overlap apart from the R-FKS which seems to oscillate. But a closer view shows
that this is not the case. Thus, in order to enhance the diﬀerences between the schemes and

18

Velocity initial

Velocity initial

 1

 0.5

 0

-0.5

-1

 1

 0.5

 0

-0.5

-1

 0

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

 0.2

 0.25

 0.3

 0.35

 0.4

Figure 9:
cells are used — Left: full view on Ω, right: zoom on [0.2, 0.4].

Initial velocity ﬁeld for the highly oscillating kinetic test case — δ = 0.02 and 600 mesh

investigate the small scale structures of the solution, in the next ﬁgures, we present magniﬁcations
on particular locations for each of the macroscopic variables. In ﬁgure 11 we present the mesh
convergence study for the density variable with four diﬀerent meshes: 600, 1200, 2400 and 4800
cells. Velocity and temperature variable magniﬁcations results are displayed in ﬁgure 12 and 13
respectively. From these ﬁgures we observe that although the SL-Upwind scheme can capture
the main ﬂow, most of the small scale structures are damped out due to an excessive numerical
diﬀusion. The same but less pronounced eﬀect can be observed for the SL-MUSCL scheme. Indeed
its embedded limiter1 has a know tendency to clip extrema, which in this extreme case yields to
excessive numerical diﬀusion. When the mesh is reﬁned the SL-Upwind scheme starts to develop a
wavy behavior which is a remembrance of the true physical oscillations. SL-MUSCL scheme, being
second-order accurate is capturing more oscillations, but, is nonetheless still destroying the stair
case initial proﬁle. Remarkably the (R-)FKS scheme is able to maintain the small scale structures
of the solution even with the coarser mesh. When the mesh is reﬁned some more details of the
ﬂow are further captured. The spacial mesh reﬁnement shows that SL-MUSCL, SL-Upwind and
(R-)FKS converge towards the same solution. However, thanks to its almost exact transport phase,
the FKS scheme family is drastically reducing the numerical diﬀusion in this kinetic regime. From
those curves we can clearly see that the FKS family is genuinely able to maintain the structure
of the solution for longer times and with much less mesh points whereas the intrinsic numerical
diﬀusion of semi-Lagrangian schemes damps such structures.

4.3.2 Cost and eﬃciency study

Although the numerical results presented in this paper are obtained in the one dimensional case,
it is nonetheless interesting to monitor the cost of each numerical scheme. Two situations are
considered; the ﬁrst one reports the CPU time at ﬁxed meshes independent of the obtained accu-
racy2, whereas the second situation measures the cost for a given accuracy (that is spacial mesh
reﬁnement is pursued up to the point the given error is attained). Because the exact solution does
not exist for this problem we have to design a reference diagnostics to decide when a given scheme

1Note that any other limiter will have more or less the same tendency because they are all designed to fulﬁll a
Discrete Maximum Principle, and, as such it clips all tn+1 extrema to min/max tn data no matter if it represents
a physically justiﬁed new extrema or if this extrema results from a numerical spurious oscillation.

2Basically it measures the time we have to wait when spacial/velocity meshes are chosen.

19

 1.04

 1.03

 1.02

 1.01

 1

 0.99

 0.98

 0.97

 0

SL-Upwind
SL-MUSCL
FKS
R-FKS

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.15

 0.1

 0.05

 0

-0.05

-0.1

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

-0.15

 0

 1

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

 6.2

 6

 5.8

 5.6

 5.4

 5.2

 5

 0

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.1

 0.2

 0.3

 0.4

 0.5

 0.6

 0.7

 0.8

 0.9

 1

Figure 10: Oscillating problem — 600 cells — Solution at tﬁnal = 0.025 for the density (left), mean
velocity (middle) and temperature (right) with ν = 102 and the SL-Upwind, SL-MUSCL, FKS and
R-FKS schemes.

 1.032

 1.03

 1.028

 1.026

 1.024

 1.022

 1.02

 1.018

SL-Upwind
SL-MUSCL
FKS
R-FKS

 1.032

 1.03

 1.028

 1.026

 1.024

 1.022

 1.02

 1.018

SL-Upwind
SL-MUSCL
FKS
R-FKS

 1.016

 0.77

 0.78

 0.79

 0.8

 0.81

 0.82

 0.83

 0.84

 0.85

 1.016

 0.77

 0.78

 0.79

 0.8

 0.81

 0.82

 0.83

 0.84

 0.85

 1.032

 1.03

 1.028

 1.026

 1.024

 1.022

 1.02

 1.018

SL-Upwind
SL-MUSCL
FKS
R-FKS

 1.032

 1.03

 1.028

 1.026

 1.024

 1.022

 1.02

 1.018

SL-Upwind
SL-MUSCL
FKS
R-FKS

 1.016

 0.77

 0.78

 0.79

 0.8

 0.81

 0.82

 0.83

 0.84

 0.85

 1.016

 0.77

 0.78

 0.79

 0.8

 0.81

 0.82

 0.83

 0.84

 0.85

Figure 11: Oscillating problem — Zooms on density for 600, 1200, 2400 and 4800 cells (from top-
left to bottom-right) — Solution at tﬁnal = 0.025 with ν = 102 for the SL-Upwind, SL-MUSCL,
FKS and R-FKS schemes.

has attained an “acceptable” accuracy.

20

 0.13

 0.125

 0.12

 0.115

 0.11

 0.105

 0.1

 0.095

 0.09

 0.085

 0.13

 0.125

 0.12

 0.115

 0.11

 0.105

 0.1

 0.095

 0.09

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.66

 0.68

 0.7

 0.72

 0.74

 0.76

 0.78

 0.8

 0.82

 0.84

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.66

 0.68

 0.7

 0.72

 0.74

 0.76

 0.78

 0.8

 0.82

 0.84

 0.13

 0.125

 0.12

 0.115

 0.11

 0.105

 0.1

 0.095

 0.09

 0.085

 0.13

 0.125

 0.12

 0.115

 0.11

 0.105

 0.1

 0.095

 0.09

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.66

 0.68

 0.7

 0.72

 0.74

 0.76

 0.78

 0.8

 0.82

 0.84

SL-Upwind
SL-MUSCL
FKS
R-FKS

 0.66

 0.68

 0.7

 0.72

 0.74

 0.76

 0.78

 0.8

 0.82

 0.84

Figure 12: Oscillating problem — Zooms on velocity for 600, 1200, 2400 and 4800 cells (from top-
left to bottom-right) — Solution at tﬁnal = 0.025 with ν = 102 for the SL-Upwind, SL-MUSCL,
FKS and R-FKS schemes.

Cost at ﬁxed meshes. We present in table 2 the cost of each of the previous simulations (from
the mesh convergence study). For each simulation we report the number of time steps Ncycle and
the CPU time T in second(s). We also compute the time per cycle by Tcycle = T/Ncycle and time
per cycle per physical cell Nc by Tcell = T/Ncycle/Nc. Last we propose the ratio of CPU time
with respect to the corresponding SL-Upwind scheme results. From this table we can see that at
ﬁxed meshes FKS is faster than SL-Upwind and SL-MUSCL and R-FKS are about two times more
expensive than FKS. When SL-MUSCL and R-FKS are compared then we can observe about 20%
speed-up using R-FKS. Of course in a multidimensional setting the situation is completely diﬀerent
as we have shown in [18, 19], in this case the gain in term of computational cost is much larger
for the FKS method. We expect the R-FKS method to be more expensive than FKS in more than
one dimension, since we pass from a piecewise constant reconstruction to a linear reconstruction
which leads to some additional operations but with a comparable computational cost [12].

Cost at ﬁxed accuracy. However, as already mentioned, the previous table is not suﬃcient to
give an idea of the performances of this class of methods. We also need to have a measure of the
computational cost at ﬁxed accuracy. For the oscillating test case we do not dispose of an exact
reference solution. However, we have observed that both SL-MUSCL and the FKS family seem

21

.
e
d
o
C

d
n
i
w
p
U
-
L
S

L
C
S
U
M
-
L
S

50

50

S
K
F

50

S
K
F
-
R

50

.
l
e

Nv V

Cell #

Cycle

Time

T/cycle

T/cell

Time ratio

Nc × Nv

600 × 50
= 3 × 104
1200 × 50
= 6 × 104
2400 × 50
= 12 × 104
4800 × 50
= 24 × 104

600 × 50
= 3 × 104
1200 × 50
= 6 × 104
2400 × 50
= 12 × 104
4800 × 50
= 24 × 104

600 × 50
= 3 × 104
1200 × 50
= 6 × 104
2400 × 50
= 12 × 104
4800 × 50
= 24 × 104

600 × 50
= 3 × 104
1200 × 50
= 6 × 104
2400 × 50
= 12 × 104
4800 × 50
= 24 × 104

Ncycle

T (s)

Tcycle (s)

Tcell (s)

vs SL-Upwind

220

441

0.772 s

0.0035

5.86 × 10−6

3.317 s

0.0075

6.27 × 10−6

882

14.233 s

0.0161

6.72 × 10−6

1764

61.008 s

0.0346

7.21 × 10−6

220

441

1.633 s

0.0074

1.24 × 10−5

6.784 s

0.0154

1.28 × 10−5

882

29.166 s

0.0331

1.38 × 10−5

1764

275.812 s

0.1564

3.26 × 10−5

220

441

882

0.518 s

0.0024

3.92 × 10−6

2.101 s

0.0048

3.97 × 10−6

8.754 s

0.0099

4.14 × 10−6

1764

38.544 s

0.0220

4.55 × 10−6

220

441

1.503 s

0.0068

1.14 × 10−5

5.981 s

0.0136

1.13 × 10−5

882

23.781 s

0.0270

1.12 × 10−5

1764

95.430 s

0.0541

1.13 × 10−5

—

—

—

—

2.12

2.05

2.05

4.52

0.67

0.63

0.62

0.63

1.95

1.80

1.67

1.56

]
5
1
,
5
1
−

[

]
5
1
,
5
1
−

[

]
5
1
,
5
1
−

[

]
5
1
,
5
1
−

[

Table 2: Oscillating test case results for 600, 1200, 2400 and 4800 cells for the SL-Upwind, SL-
MUSCL, FKS and R-FKS schemes. Time per cycle is obtained by Tcycle = T/Ncycle and time per
cycle per cell by Tcell = T/Ncycle/Nc.

22

 5.78

 5.76

 5.74

 5.72

 5.7

 5.68

 5.66

 5.64

 5.62

SL-Upwind
SL-MUSCL
FKS
R-FKS

 5.78

 5.76

 5.74

 5.72

 5.7

 5.68

 5.66

 5.64

 5.62

SL-Upwind
SL-MUSCL
FKS
R-FKS

 5.6

 0.28

 0.29

 0.3

 0.31

 0.32

 0.33

 0.34

 0.35

 0.36

 0.37

 5.6

 0.28

 0.29

 0.3

 0.31

 0.32

 0.33

 0.34

 0.35

 0.36

 0.37

 5.78

 5.76

 5.74

 5.72

 5.7

 5.68

 5.66

 5.64

 5.62

SL-Upwind
SL-MUSCL
FKS
R-FKS

 5.78

 5.76

 5.74

 5.72

 5.7

 5.68

 5.66

 5.64

 5.62

SL-Upwind
SL-MUSCL
FKS
R-FKS

 5.6

 0.28

 0.29

 0.3

 0.31

 0.32

 0.33

 0.34

 0.35

 0.36

 0.37

 5.6

 0.28

 0.29

 0.3

 0.31

 0.32

 0.33

 0.34

 0.35

 0.36

 0.37

Figure 13: Oscillating problem — Zooms on temperature for 600, 1200, 2400 and 4800 cells (from
top-left to bottom-right) — Solution at tﬁnal = 0.025 with ν = 102 for the SL-Upwind, SL-MUSCL,
FKS and R-FKS schemes.

to capture an equivalent solution with discontinuities at the same locations when the mesh is ﬁne
enough. Moreover thanks to the mesh convergence study we estimated that the characteristics
length between two discontinuuities is of the order ∆l = 4.8 × 10−3 (this corresponds to 23 cells of
size ∆x = 1/4800). In addition from the SL-MUSCL data we estimated that SL-MUSCL scheme
spreads those discontinuities over N = 15 cells. Therefore for the SL-MUSCL scheme it would
require about Nc ≥ 2N /δl cells to capture each of the “plateaus” between two discontinuities.
In short SL-MUSCL scheme requires at minima Nc = 6250 cells to provide an accurate ’enough’
numerical solution. For this amount of cells, according to table 2, the number of timesteps becomes
Ncycle = (0.3675) Nc, indeed the the ratio between timesteps and number of cell is constant equal
to 0.3675 = 1764/4800 = 882/2400 = 441/1200(≃= 220/600). Finaly, given the time needed to
update one cell during one timestep, Tcell from table 2, we can estimate the CPU time needed by
the SL-MUSCL scheme via equation: T = Nc × Ncycle × Tcell, that is about 466s ≃ 7mn45s. In
table 3 we report these CPU times along with the other parameters from the four schemes. As
expected from the numerical results, the numerical diﬀusion of SL-Upwind and SL-MUSCL schemes
drastically penalizes their eﬃciency as they would need about 3 hours and 8 minutes respectively
to compute a valid solution when the FKS family rounds about 2 to 3 seconds. We conclude by
observing that, as usual, the computational cost analysis is a diﬃcult task to accomplish and thus
the numbers reported in the tables are are only meant to provide a rough idea of the amount of

23

N
δl

Nc = 2N /δl

Ncycle = (0.3675) Nc

Tcell (s)

T = Nc × Ncycle × Tcell

SL-Upwind SL-MUSCL

150

15

FKS

2

R-FKS

2

4.8 × 10−3

4.8 × 10−3

4.8 × 10−3

4.8 × 10−3

62500
22969

7 × 10−6
10048.83s
(2h47mn)

6250
2297

833
306

833
306

3.25 × 10−5

4.55 × 10−6

1.13 × 10−5

466.55s
(7mn45s)

1.16s

2.88s

Table 3: Oscillating test case results — Estimation of the CPU time T needed to capture the
plateaus of estimated characteristics length δl. The schemes diﬀuse discontinuities over N cells.
The required number of cells is Nc = 2N /δl, the number of time steps Ncycle = (0.3675) Nc, where
0.3675 = 1764/4800 the ratio time steps/Nc observed in table 2, T = Nc × Ncycle × Tcell.

resources that can already be saved in 1D by this family of schemes. Vastly more interesting gains
are expected when 2D×2D and more important 3D×3D simulations will be performed.

5 Conclusion and perspectives

In this paper we have presented a new class of semi-Lagrangian methods based on high order
polynomial reconstructions of the distribution function which extends the Fast Kinetic Scheme
developed in [18, 19]. The main idea is based on updating the extreme points of the distribution
function instead of updating the solution on the cells centers in order not to lose maxima and
minima of the solution because of the numerical diﬀusion.
In the ﬁrst part of this paper, the
method has been presented in all its generality and diﬀerent approaches to compute the collision
operator on the extrema are proposed. A critical analysis leads to choose the one which possesses
the best properties in term of precision and eﬃciency. In a second part, details are then given for
the speciﬁc case of a piece-wise linear polynomial reconstruction and a BGK collision operator. The
technique is based on the assumption that the distribution function and its associated Maxwellian
share the same space topology for equal velocity of the lattice. Finally, a min/max choices is made
in order to treat the discontinuities of the Maxwellian function at the interface points.

In the third part of the paper, this new FKS scheme with reconstruction has been tested on
two problems. The ﬁrst one, a Riemann like problem, shows that in the ﬂuid regime the method
shares similar behaviors with respect a second-order accurate limited semi-Lagrangian (SL) scheme
whereas the original FKS reproduces the results of a ﬁrst-order accurate semi-Lagrangian scheme.
For intermediate regimes, the new scheme is still better than the original FKS and the second order
accurate semi-Lagrangian scheme but diﬀerences are extremely small. In a full kinetic regime this
test case does not help to make a clear diﬀerence between ﬁrst/second order accurate SL or FKS
schemes. Conversely the second test case is a highly oscillatory kinetic test presenting many
discontinuities which are damped by the classical semi-Lagrangian schemes. Contrarily the FKS
family is able to maintain the discontinuities of the solution over time due to its natural anti-
dissipation formulation. The results obtained by the FKS schemes are therefore superior in terms
of precision and in terms of computational costs.

In the near future we will investigate the extension of this approach to the multi-dimensional
case; the same reconstruction technique may apply but an analysis related to the choices to be
done at interface surfaces/lines (3D/2D) should be carried out. We plan also to extend the new
FKS scheme to the case of Boltzmann collisional operator.

24

Acknowledgements

This work was partly supported by Campus France under the PHC Gallileo 2015-2016 number
32272UL.

References

[1] G.A.Bird, Molecular gas dynamics and direct simulation of gas ﬂows, Clarendon Press, Oxford

(1994).

[2] C.K. Birsdall, A.B. Langdon, Plasma Physics Via Computer Simulation, Institute of Physics

(IOP), Series in Plasma Physics (2004).

[3] A.V. Bobylev, A. Palczewski, J. Schneider, On approximation of the Boltzmann equation by

discrete velocity models. C. R. Acad. Sci. Paris Ser. I. Math. 320, (1995), pp. 639-644.

[4] R. E. Caflisch, Monte Carlo and Quasi-Monte Carlo Methods, Acta Numerica (1998) pp. 1–49.

[5] C. Cercignani, The Boltzmann Equation and Its Applications, Springer-Verlag, New York, (1988).

[6] L. Chacn, D. del-Castillo-Negrete, C.D. Hauck , An asymptotic-preserving semi-Lagrangian
algorithm for the time-dependent anisotropic heat transport equation, J. Comp. Phys. (2014), vol. 272,
pp. 719-746.

[7] C.Z. Cheng, G. Knorr, The integration of the Vlasov equation in conﬁguration space, J. Comput.

Phys., vol. 22 (1976), pp. 330-351.

[8] N. Crouseilles, T. Respaud, E. Sonnendrucker, A Forward semi-Lagrangian Method for the

Numerical Solution of the Vlasov Equation, Comp. Phys. Comm. 180, 10 (2009) 1730–1745.

[9] N. Crouseilles, M. Mehrenberger, E. Sonnendrucker, Conservative semi-Lagrangian schemes

for Vlasov equations, J. Comp. Phys., (2010) pp. 1927–1953.

[10] P. Degond, G. Dimarco, L. Pareschi, The Moment Guided Monte Carlo Method, Int. J. Num.

Meth. Fluids, Vol.67, (2011), pp. 189-213.

[11] L. Desvillettes, S. Mischler, About the splitting algorithm for Boltzmann and BGK equations.

Math. Mod. & Meth. in App. Sci. bf 6, (1996), pp. 1079–1101.

[12] G. Dimarco, C. Hauck, R. Loub`ere, Multidimensional high order FKS schemes for the Boltzmann

equation, in progress.

[13] G. Dimarco, L. Pareschi, Numerical methods for kinetic equations, ACTA Numerica, Vol. 23 (2014),

pp. 369-520.

[14] G. Dimarco, L. Pareschi, Asymptotic preserving implicit-explicit Runge-Kutta methods for non

linear kinetic equations, SIAM J. Num. Anal., Vol. 49, (2011), pp. 2057-2077 ..

[15] G. Dimarco, L. Pareschi, Exponential Runge-Kutta methods for stiﬀ kinetic equations, SIAM J.

Num. Anal., Vol. 51, (2013), pp. 1064-1087.

[16] G. Dimarco, L. Pareschi, A Fluid Solver Independent Hybrid method for Multiscale Kinetic Equa-

tions, SIAM J. Sci. Comput. Vol. 32, (2010), pp. 603–634.

[17] G. Dimarco, The hybrid moment guided Monte Carlo method for the Boltzmann equation. Kin. Rel.

Models, Vol 6, pp. 291-315 (2013).

25

[18] G. Dimarco, R. Loub`ere, Towards an ultra eﬃcient kinetic scheme. Part I: basics on the BGK

equation, J. Comput. Phys., Vol. 255, 2013, pp 680-698.

[19] G. Dimarco, R. Loub`ere, Towards an ultra eﬃcient kinetic scheme. Part II: the high order case,

J. Comput. Phys., Vol. 255, 2013, pp 699-719.

[20] F. Filbet, G. Russo, High order numerical methods for the space non-homogeneous Boltzmann

equation. J. Comput. Phys., 186 (2003), 457–480.

[21] F. Filbet, E. Sonnendr¨ucker, P. Bertrand, Conservative Numerical schemes for the Vlasov

equation. J. Comput. Phys. 172, (2001) pp. 166–187.

[22] I.M. Gamba, S. H. Tharkabhushaman, Spectral - Lagrangian based methods applied to computation

of Non - Equilibrium Statistical States. J. Comput. Phys. 228, (2009) pp. 2012–2036.

[23] E.P. Gross P.L. Bathnagar, M. Krook, A model for collision processes in gases. I. small ampli-

tude processes in charged and neutral one-component systems Phys. Rev. 94 (1954), pp. 511–525.

[24] Y. G¨uc¸l¨u, W.N.G. Hitchon, A high order cell-centered semi-Lagrangian scheme for multi-

dimensional kinetic simulations of neutral gas ﬂows. J. Comput. Phys. 231, (2012) pp. 3289-3316.

[25] Y. G¨uc¸l¨u, A.J. Christlieb, W.N.G. Hitchon, Arbitrarily high order Convected Scheme solution

of the Vlasov-Poisson system J. Comput. Phys. 270, (2014) pp. 711-752.

[26] T. Homolle, N. Hadjiconstantinou, A low-variance deviational simulation Monte Carlo for the

Boltzmann equation. J. Comput. Phys., Vol 226 (2007), pp 2341–2358.

[27] T. Homolle, N. Hadjiconstantinou, Low-variance deviational simulation Monte Carlo. Phys.

Fluids, Vol 19 (2007), 041701.

[28] S. Jin, Eﬃcient asymptotic-preserving (ap) schemes for some multiscale kinetic equations, SIAM J.

Sci. Comput. Vol. 21 (1999), 441454.

[29] R. J. LeVeque, Numerical Methods for Conservation Laws, Lectures in Mathematics, Birkhauser

Verlag, Basel (1992).

[30] L. Mieussens, Discrete Velocity Model and Implicit Scheme for the BGK Equation of Rareﬁed Gas

Dynamic, Math. Models Meth. App. Sci., Vol. 10, (2000), 1121–1149.

[31] A. Palczewski, J. Schneider, A.V. Bobylev, A consistency result for a discrete-velocity model of

the Boltzmann equation. SIAM J. Numer. Anal. 34, (1997) pp. 1865-1883.

[32] A. Palczewski, J. Schneider, Existence, stability, and convergence of solutions of discrete velocity

models to the Boltzmann equation. J. Statist. Phys. 91, (1998) pp. 307-326.

[33] L. Pareschi, G. Russo, Numerical solution of the Boltzmann equation I: Spectrally accurate approx-

imation of the collision operator, SIAM J. Numer. Anal. Vol. 37, pp. 12171245 (2000).

[34] L. Pareschi, G. Russo and G. Toscani, Fast spectral methods for the Fokker PlanckLandau collision

operator, J. Comput. Phys. Vol 165, pp. 216236 (2000).

[35] L. Pareschi, G. Toscani, Interacting multi-agent systems. Kinetic equations and Monte Carlo methods,

Oxford University Press, USA, (2013).

[36] M. Shoucri, G. Knorr, Numerical integration of the Vlasov equation. J. Comput. Phys., vol. 14

(1974), pp. 8492.

[37] G. Strang, On the construction and the comparison of diﬀerence schemes. SIAM J. Numer. Anal.,

(1968), pp. 506–517.

26

