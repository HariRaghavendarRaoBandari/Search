Iterative Phase Optimisation of Elementary Quantum Error Correcting Codes

M. M¨uller1, A. Rivas2, E. A. Mart´ınez3, D. Nigg3, P. Schindler3, T. Monz3, R. Blatt3,4, and M. A. Martin-Delgado2

1Department of Physics, Swansea University, Singleton Park, Swansea SA2 8PP, United Kingdom

2Departamento de F´ısica Te´orica I, Universidad Complutense, Avenida Complutense s/n, 28040 Madrid, Spain

3Institut f¨ur Experimentalphysik, Universit¨at Innsbruck, Technikerstrasse 25, A–6020 Innsbruck, Austria

¨Osterreichische Akademie der Wissenschaften,Technikerstrasse 21A, 6020 Innsbruck, Austria

4Institut f¨ur Quantenoptik und Quanteninformation,

(Dated: March 2, 2016)

Performing experiments on small-scale quantum computers is certainly a challenging endeavor.
Many parameters need to be optimized to achieve high-ﬁdelity operations. This can be done eﬃ-
ciently for operations acting on single qubits as errors can be fully characterized. For multi-qubit
operations, though, this is no longer the case as in the most general case analyzing the eﬀect of the
operation on the system requires a full state tomography for which resources scale exponentially
with the system size. Furthermore, in recent experiments additional electronic levels beyond the
two-level system encoding the qubit have been used to enhance the capabilities of quantum informa-
tion processors, which additionally increases the number of parameters that need to be controlled.
For the optimization of the experimental system for a given task (e.g. a quantum algorithm), one
has to ﬁnd a satisfactory error model and also eﬃcient observables to estimate the parameters of
the model. In this manuscript we demonstrate a method to optimize the encoding procedure for
a small quantum error correction code in the presence of unknown but constant phase shifts. The
method, which we implement here on a small-scale linear ion-trap quantum computer, is readily
applicable to other AMO platforms for quantum information processing.

PACS numbers: 03.67.Pp, 03.67.Ac, 42.50.Dv, 37.10.Ty

I.

INTRODUCTION

The faithful execution of quantum algorithms, even
on small-scale prototype quantum computers, poses
formidable control requirements [1]. The inﬂuence of a
multitude of error sources and control parameters needs
to be characterized and minimised in order to enable
overall high-ﬁdelity operations. Within the ﬁeld of quan-
tum control and optimisation, many techniques have
been developed [2–8] to characterize noise and decou-
ple quantum systems to the highest possible degree from
their environment. This allows one to increase the ﬁdelity
of desired target quantum operations under remaining,
ultimately unavoidable, residual sources of imperfections.
in a bottom-up approach to building
quantum-information hardware one usually optimises
the performance of individual building blocks such as
e.g. single- and two-qubit gate operations. In principle,
imperfections in few-qubit operations can be character-
ized by full quantum process tomography. However, it
is much more practical to use prior understanding of the
dominant underlying noise processes to design an eﬃcient
protocol to characterize, validate and ﬁnally reduce the
resulting error sources.

In particular,

In the following, we will separate the imperfections into
a non-reversible coupling to a larger environment [9, 10],
including ﬂuctuations of control parameters on the one
hand, and unknown but constant unitary operations on
the other hand. The latter errors can, in principle, be
compensated by measuring the unknown operation and
applying the inverse operation onto the system. A sim-
ple laboratory example are systematic single-qubit phase
shifts, which arise, e.g., if the frequency of the ﬁeld driv-

ing the qubit does not perfectly match the qubit tran-
sition frequency [11]. This transforms an initial state
α|0(cid:105) + β |1(cid:105) into α|0(cid:105) + βeiφ |1(cid:105) with unknown but con-
stant phase φ. The phase shift φ can be measured system-
atically with Ramsey-type experiments [12, 13] and fur-
thermore compensated for by applying one single-qubit
rotation Ucomp = exp(iφ/2 Z), where Z denotes the third
Pauli matrix [14]. This Ramsey-based phase detection
and compensation technique can be extended to certain
classes of multi-qubit states, such as e.g. n-qubit GHZ
states, α|0(cid:105)
More general unitary errors can only be characterized
by full quantum state tomography which scales exponen-
tially with the number of qubits. Thus, it is highly de-
sirable to design protocols that allow one to eﬃciently
and precisely determine speciﬁc systematic errors. An
important class of such errors are unknown, though sys-
tematic relative phases between the components of more
complex quantum states.
It should be noted, that the
propagation of single qubit phase shifts through complex
algorithms cannot be measured eﬃciently with generic
methods that are algorithm independent.

⊗n + βeiφ |1(cid:105)

⊗n [14].

In this work we introduce and experimentally demon-
strate a method that allows one to compensate system-
atic, unknown, but constant phase shift errors that arise
in the encoding procedure of small quantum error cor-
recting codes [15]. We theoretically outline the protocol,
numerically study its performance and discuss how it was
successfully used in a recent experimental realisation of a
7-qubit quantum error correcting code with trapped ions
[16]. The iterative optimization protocol does not rely on
full quantum state tomography [14, 17] and furthermore
it is found to converge very rapidly for small quantum

6
1
0
2

 
r
a

M
1

 

 
 
]
h
p
-
t
n
a
u
q
[
 
 

1
v
2
0
4
0
0

.

3
0
6
1
:
v
i
X
r
a

error correcting codes. As a consequence, the method
can be experimentally applied “in-situ”, i.e. it can be
applied in real-time to optimize the experimental perfor-
mance. In fact, in the experiments of Ref. [16], the mea-
surements and feedback steps required by the algorithm
to optimize the overall performance of the whole encod-
ing circuit were performed within a total time of a few
minutes. This is short compared to typical time scales on
which systematic parameter drifts take place [18]. Here,
we apply the protocol to a case where the encoding of
logical states was achieved by a circuit of unitary gate
operations. However, similar scenarios where systematic,
constant phase shifts will arise in measurement-based en-
coding protocols, can be addressed by the proposed tech-
nique [19, 20]. Furthermore, the method is readily appli-
cable to other physical platforms for quantum informa-
tion processing, such as e.g. Rydberg atoms [21–23] in
optical lattices [24–26] or tweezer arrays [27, 28].

In the following two sections, we ﬁrst brieﬂy review
some basic properties of the implemented 7-qubit quan-
tum error correcting code [29, 30], and then present in
some detail the experimental procedure used for the en-
coding of logical quantum states. The latter discussion
aims at illustrating under which conditions the system-
atic phase shift errors which our protocol tackles arise in
the particular experiment of Ref. [16]. Similar errors are
expected to occur in other atom- or solid-state based ar-
chitectures [31–36], in particular those that exploit multi-
level systems to enhance the systems’ capability.

A.

Ideal Encoding of a 7-Qubit Quantum Error

Correcting Code

In Ref. [16] a seven-qubit quantum error correcting
code has been demonstrated. This particular code cor-
responds to the 7-qubit Steane code [29] and represents
also the smallest instance of a 2D topological color code
[30]. Since the realised quantum error correcting code
belongs to the class of CSS codes [14, 37], the code
space is generated as the simultaneous +1 eigenspace
of a set of mutually commuting stabiliser operators S(i)
x
and S(i)
z which are the product of Pauli X and Z op-
erators, respectively, associated to subsets {i} of qubits,
see Fig. 1(a). Each generator is of X- or Z-type so that
S(i)
x |ψ(cid:105)L = S(i)
|ψ(cid:105)L = +|ψ(cid:105)L holds for all subsets {i}
and any encoded logical state |ψ(cid:105)L. A 7-qubit code with
subsets as illustrated in Fig. 1 represents the minimal in-
stance of a 2D color code. There, each plaquette involves
4 physical qubits and hosts one 4-qubit X- and Z-type
stabiliser.

z

Encoding of a logical state |ψ(cid:105)L thus amounts to
preparing the system of physical qubits in the +1
eigenspace of all stabilisers. The logical state |0(cid:105)L, for
instance, being a +1 eigenstate of the six plaquette gener-
j=1 Zj,
is explicitly given by the following superposition of 23 = 8

ators as well as of the logical Z-operator, ZL =(cid:81)7

2

FIG. 1. Schematics of the implemented 7-qubit quan-
tum error correcting code and the encoding sequence.
(a) One logical qubit is encoded in seven physical qubits form-
ing a two-dimensional triangular planar structure of three pla-
quettes. The code space is deﬁned as the simultaneous +1
eigenspace of a set of six four-qubit stabilizer operators as-
sociated to the plaquettes. (b) Physical qubits are encoded
in (meta-)stable electronic states of a string of seven 40Ca+
ions. The computational subspace of each physical qubit
is spanned by the two electronic states 42S1/2(mj = −1/2)
(|1(cid:105)) and 32D5/2(mj = −1/2) (|0(cid:105)). Another pair of states
(32D5/2(mj = −5/2) and 32D5/2(mj = −3/2)) is used to
spectroscopically decouple individual ion-qubits. Red arrows
indicate sequences of pulses that are applied to realize this
coherent decoupling (see Ref. [16] for more details). Decou-
pled ions (indicated by dashed lines in (c)), will ideally not
participate in subsequent dynamics, until they are recoupled,
i.e. coherently transferred back into the computational sub-
space (solid lines in (c)). This technique enables the appli-
cation of entangling gate operations, which are in this setup
implemented by illuminating the entire ion string by a global
laser beam [18], to subsets of four qubits belonging to a given
plaquette.
(c) The logical qubit is encoded by coherently
mapping the product input state |1010101(cid:105) onto the logical
state |0(cid:105)L (see Eq. (1)). The quantum circuit combines spec-
troscopic decoupling and recoupling operations (white boxes)
with plaquette-wise entangling operations that eﬀectively cre-
ate GHZ-type entanglement between qubits belonging to the
same plaquette.

computational basis states:

|ψ0(cid:105) =

1
2√2

(|0000000(cid:105) + |0110110(cid:105) + |1111000(cid:105)

+ |1001110(cid:105) + |0011011(cid:105) + |0101101(cid:105)
+ |1100011(cid:105) + |1010101(cid:105)).

(1)

(a)(b)3124567(c)1572463531246731245671234567entangling gateon qubits 1234entangling gateon quibits 34676Z5Z3Z2Z=z(2)S6X5X3X2X=x(2)S7Z6Z4Z3Z=z(3)S7X6X4X3X=x(3)S4Z3Z2Z1Z=z(1)S4X3X2X1X=x(1)S(cid:31)0|(cid:31)1|(cid:31)0|(cid:31)1|(cid:31)0|(cid:31)1|(cid:31)1|L(cid:31)0|entangling gateon qubits 2356|0>|1>32D5/242S1/2mj -1/2-3/2-5/2+1/2+1/2+3/2+5/2-1/2B. Experimental Encoding and Origin of

Systematic Phase Shifts

In Ref. [16] the outlined 7-qubit quantum error correct-
ing code was realised using a string of 7 trapped 40Ca+
ions in a linear Paul-trap based quantum computing ar-
chitecture [18]. Each of the ions hosts one physical qubit
encoded in the computational subspace spanned by two
(meta-)stable, electronic states, as shown in Fig. 1(b).

Arbitrary operations can be applied to the quantum
register with the following universal set of operations:
Single qubit rotations can be realised by a tightly focused
laser beam illuminating single ions of the string, whereas
collective (non-entangling) rotations can be implemented
by a beam that collectively and homogeneously illumi-
nates the entire string of n ions (see Ref.
In
addition, a bichromatic laser ﬁeld, illuminating the en-
tire string of ions, is used to implement a collective, n-
qubit Mølmer-Sørensen (MS) entangling gate operation
[38, 39]. Any arbitrary unitary operation can be realized
by a sequence of these operations that can be found using
refocusing techniques originally developed in NMR [40]
or numerical optimisation routines [41].

[18]).

It is possible to extend the experimental toolbox by
using more electronic levels than only the two electronic
states of the qubit. This allows one to realize entangling
operations on subsets of ions with less overhead than any
known optimized sequence. Ions hosting physical qubits
that are not supposed to participate in a given entan-
gling operation, are coherently transferred to an addi-
tional set of meta-stable electronic states which do not
couple to the ﬁeld that generates the operations as shown
in Fig. 1(b). The quantum state of these decoupled ions
will ideally remain unaﬀected by the operation of the
globally applied, bi-chromatic laser ﬁeld driving the qubit
transition and implementing the collective entangling MS
gate operation. Subsequently, decoupled ions can be re-
coupled by coherently mapping their state back into the
qubit subspace.

This extended set of operations was used in Ref. [16]
to realise the encoding of an initial logical state, say |1(cid:105)L,
by a unitary circuit: There, the 7-ion system was initially
prepared in a product state, say |1010101(cid:105), thus being al-
ready a +1 eigenstate of the set of three Z-type stabiliser
operators. Preparation of the 7-qubit system in the +1
eigenspace of the X-type stabilisers was then realised by
a sequence of three entangling operations, each acting on
subsets of four qubits belonging to the three plaquettes
of the code, respectively (see Fig. 1(c)). Each of the ef-
fective 4-qubit MS gates creates GHZ-type entanglement
between the four qubits belonging to a given plaquette.
The entangling gates were interspersed by a series of on
the order of hundred single-ion pulses (see Ref. [16] and
supplemental material therein for details) to spectroscop-
ically decouple and subsequently recouple ions that are
supposed not to participate in the action of a four-qubit
plaquette-wise entangling operation.

Along the application of this encoding sequence, un-

3

desired systematic phase shifts on all ions are generated
and accumulate. These can be of various physical origins
and unknown magnitude, arising e.g. from oﬀ-resonant
light shifts on ions residing in the decoupled electronic
states during the application of the MS gate operations,
as well as from diﬀerential magnetic shifts between the
diﬀerent electronic states used to deﬁne the computa-
tional subspace and the decoupling of qubits. It is im-
portant to note that the MS entangling gate operation
commutes with systematic phase shifts in the sense that
the essential part of the complex circuit, namely the three
entangling gate operations, still generate a ﬁnal quantum
state that is locally equivalent to the ideal encoded state
of Eq. (1), however with a set of unknown, relative phases
{φi}:
(cid:48)
|ψ
0(cid:105) =

(|0000000(cid:105) + eiφ1 |0110110(cid:105) + eiφ2 |1111000(cid:105)
+ eiφ3 |1001110(cid:105) + eiφ4 |0011011(cid:105) + eiφ5 |0101101(cid:105)
+ eiφ6 |1100011(cid:105) + eiφ7 |1010101(cid:105)).
(2)

1
2√2

In order to maximize the ﬁdelity of the encoded state
these phases need to be characterized and compensated
for. There is no simple Ramsey type experiment to de-
termine these phases, hence we need to ﬁnd a protocol to
measure them without full quantum state tomography.

II. THE PROPOSED METHOD

Some of the error sources in a quantum state prepara-
tion process, such as in the encoding discussed in the
previous sections, result in “true” decoherence, which
cannot be reversed by a subsequent application of uni-
tary operations. The phase optimization algorithm we
propose aims at determining and undoing systematic uni-
tary errors such as relative phase shifts in a simple, iter-
ative manner without full state reconstruction. A simple
model to outline the working principle of the proposed
phase compensation technique is the formulation of the
resulting ﬁnal experimental state in the form of a Werner-
type state,

ρ =

p

dim

1 + (1 − p)|ψ

(cid:48)
0(cid:105)(cid:104)ψ

(cid:48)
0| ,

(3)

ond term corresponds to the state |ψ(cid:48)

where the part proportional to the identity operator, rep-
resenting a completely mixed state, stands for a white-
noise component, accounting for irreversible decoherence
processes (dim = 27 = 128 in the present case). The sec-
0(cid:105) (see Eq. (2)) con-
taining a set of unknown phase shifts, which will be com-
pensated by the application of corrective unitary phase
shifts,
in order to transform this component into the
ideal encoded logical state |ψ0(cid:105) of Eq. (1). The parame-
ter p ∈ [0, 1] quantiﬁes the magnitude of the irreversible
noise component, interpolating between the ideal target
state (up to the unitary phase shifts) for p = 0 and a
fully mixed state in the limit p = 1.

4

x (cid:105) and (cid:104)S(2)

FIG. 2. Experimental implementation of the phase optimisation protocol. Here, the algorithm was applied to the
intermediate state in the encoding sequence, which results from the application of the ﬁrst two entangling operations acting on
the qubits of the ﬁrst (red) and second (blue) plaquette of the planar 7-qubit quantum error correcting code. The resulting state
(a), before the application of the iterative phase optimisation technique, is characterised by positive values of Z-type plaquette
stabilizer expectation values, which are maximal within the experimentally achieved accuracy of the encoding circuit [16]. On the
other hand, X-type stabilizer expectation values have arbitrary values (positive on the ﬁrst, negative on the second plaquette),
indicating the presence of undesired, unknown relative phase shifts (see state Eq. (6)). In the ﬁrst step of phase optimisation
(b), a Z-rotation of variable magnitude is applied to qubit #2, which results in a sinusoidal behaviour of the expectation values
of the stabizers (cid:104)S(1)
x (cid:105) not containing X2 remains
constant. For each scan, the stabilizer that takes part in the optimization procedure, is highlighted by the bold line and the
corresponding maximum value is marked via the orange circle. After reading oﬀ and ﬁxing θ2 to the value which maximises
x (cid:105) (orange circle), next a Z-rotation is applied to qubit #5 (c). This scan is used to ﬁx θ5 to the value which maximizes
(cid:104)S(1)
x (cid:105) by a Z1-rotation scan, the
x (cid:105). Whereas in principle at this point one would proceed with the optimisation of (cid:104)S(1)
(cid:104)S(2)
data shows that all three stabilizers have within experimental resolution already reached the maximum, indicating convergence
of the protocol. This is also reﬂected by both X-type plaquette stabilizers now being positive and maximal (d), while the
expectation values of Z-type stabilizers and of the logical Z operator have remained unchanged over the application of the
algorithm – compare (a) and (d). Experimental parameters: In each scan, diﬀerent values for the phases characterising the
single-qubit rotations were applied with an elementary step-size of 2π/10. For each phase value, the experiment was repeated
200 times.

x (cid:105) (cf. Eqs. (8) and (9)), whereas the expectation value (cid:104)S(1)

x S(2)

x S(2)

For simplicity, we start by discussing the working prin-
ciple of the phase compensation method for an interme-
diate state in the full encoding sequence shown in Fig. 1.
This state we will optimize is the one that is reached af-
ter the application of the 4-qubit entangling operations
to the ﬁrst and the second plaquette of the planar, three-
plaquette quantum error correcting code (see Fig. 1(a)).
The ideal target state at this stage of the encoding se-
quence is given by

1
2

|ψ0(cid:105) =

(|0000000(cid:105) +|0110110(cid:105) +|1111000(cid:105) +|1001110(cid:105)).
(4)
It maximizes the value of the generating X-type stabi-
lizer operators on the ﬁrst and second plaquette, S(1)
x =
X1X2X3X4 and S(2)
x = X2X3X5X6, as well as of the sta-

bilizer operator formed by the product of both, S(1)

x S(2)
x :

x |ψ0(cid:105) = (cid:104)ψ0|S(2)

x |ψ0(cid:105) = (cid:104)ψ0|S(1)

x S(2)

x |ψ0(cid:105) = 1.

(cid:104)ψ0|S(1)
The state |ψ(cid:48)

(5)
0(cid:105) containing unknown phase shifts accumu-

lated up to this point then reads

(cid:48)
0(cid:105) =

|ψ

1
(|0000000(cid:105) + eiφ1 |0110110(cid:105)
2
+ eiφ2 |1111000(cid:105) + eiφ3 |1001110(cid:105)).

(6)

In order to compensate the relative phase shifts, we may
apply single qubit Z-rotations to three of the six qubits,
for instance

eiθ1Z1eiθ2Z2 eiθ5Z5 |ψ

(cid:48)
0(cid:105) →

1
2

(|0000000(cid:105) + ei[φ1+2(θ2+θ5)] |0110110(cid:105) + ei[φ2+2(θ1+θ2)] |1111000(cid:105) + ei[φ3+2(θ1+θ5)] |1001110(cid:105)),
(7)

325671expectation valueexpectation value00.511.52AC - Stark phase 2θ (π)x(2)SLZLXz(2)S10.50-0.5-110.50-0.5-1z(1)Sx(1)Sx(1)Sx(2)Sx(1)Sx(2)S00.511.5210.50-0.5-1x(1)Sx(2)Sx(1)Sx(2)Sexpectation valueAC - Stark phase 2θ (π)325671x(2)SLZLXz(2)Sz(1)Sx(1)S10.50-0.5-1expectation value(a)(b)(d)(c)x(1)Sx(2)Sx(1)Sx(2)Swhere we have discounted the global phase factor
e−i(θ1+θ2+θ5). The problem is to ﬁnd the correct set of
values θ = [θ1, θ2, θ5] that compensates the phases and
transform the state |ψ(cid:48)
0(cid:105) into |ψ0(cid:105). This can be viewed
as an optimization problem as it is equivalent to ﬁnding
the point θ that is simultaneously a maximum of (cid:104)S(1)
x (cid:105),
(cid:104)S(3)
x (cid:105) and (cid:104)S(1)
x (cid:105). Note that under the application
of Z-type rotations, Z-type stabiliser expectation values
remain unchanged.

x S(2)

Experimentally, an exhaustive search to determine the
set of values of the three phases θ which maximize the
X-type stabilizers is impractical, as the number of pos-
sible phase conﬁgurations grows exponentially with the
number of phases. Instead, we may apply the following
iterative protocol:

1. Fixing of the phase-to-stabiliser correspon-
dence: For each X-stabilizer, an associated control
parameter θi which controls the compensation uni-
tary exp(iθiZi), acting on ion i, is chosen. The par-
ticular assignment of stabilizer operators to phases
θ is somewhat arbitrary, however, it is important
that a given X-stabiliser associated to a given phase
depends on the application of the corresponding Zi
rotation. This is the case if and only if the X-
stabilizer under consideration contains the Pauli
matrix Xi corresponding to the ion i, and thus does
not commute with a Zi rotation. Note that once a
particular phase-to-stabiliser assignment is chosen,
this should not be altered during subsequent steps
of the optimization algorithm. Here, we choose θ2
for S(1)
x , respectively.

x and θ1 for S(1)

x , θ5 for S(2)

x S(2)

2. Choose an initial conﬁguration for the set of ro-

tation parameters θ(0) = [θ(0)

1 , θ(0)

2 , θ(0)
5 ].

3. Experimentally optimize S(1)

x : The mean value of
S(1)
x depends on control parameter θ2 in the follow-
ing sinusoidal form,

(cid:104)S(1)

x (cid:105) =

1
2 {cos[φ2 + 2(θ1 + θ2)]
+ cos[φ1 − φ3 + 2(θ2 − θ1)]} .

(8)

and θ5 = θ(0)
5

Scan θ2 over the interval [0, 2π], while keeping θ1 =
θ(0)
ﬁxed. Measure all qubits in
1
the X basis to determine and ﬁx θ2 to the value
θ2 = θ(1)
for which the measured mean value (cid:104)S(1)
x (cid:105)
2
is maximized.

4. Next, experimentally optimize S(2)

x

(cid:104)S(2)

x (cid:105) =

1
2 {cos[φ1 + 2(θ2 + θ5)]
+ cos[φ2 − φ3 + 2(θ2 − θ5)]} ,

(9)

by scanning θ5, while keeping the other control
parameters at their previously determined values,
i.e. θ2 = θ(1)
1 . Fix θ5 to the value
2
θ5 = θ(1)

5 which maximizes (cid:104)S(2)
x (cid:105).

and θ1 = θ(0)

5. Finally,
x S(2)
x ,

S(1)

apply a similar optimization for

5

x S(2)

(cid:104)S(1)

x (cid:105) =

1
2 {cos[φ3 + 2(θ1 + θ5)]
+ cos[φ1 − φ2 + 2(θ5 − θ1)]} ,

(10)

i.e. scan over θ1 at ﬁxed values θ2 = θ(1)
and
2
θ5 = θ(1)
5 , to ﬁnd the value of θ1 = θ(1)
that
maximizes (cid:104)S(1)
x (cid:105). This step completes one
update round for the set of control parameters
θ = [θ(0)
2 , θ(0)

2 , θ(1)
5 ].

1 , θ(0)

1 , θ(1)

x S(2)

1

5 ] → [θ(1)

5

2

1

, θ(n)

, θ(n)

x S(2)

x (cid:105), (cid:104)S(2)

x (cid:105) and (cid:104)S(1)

6. Iterate until convergence is reached: Repeat
steps 3–5 n times obtaining iteratively updated sets
of values θ(n) = [θ(n)
], until the set of
phases θ does – within experimental resolution –
not change any further. For large enough values
of n, the method converges to the maximal values
of (cid:104)S(1)
x (cid:105). Thereby, the com-
ponent of the ﬁnal state corresponding to |ψ(cid:48)
0(cid:105) of
Eq. (6) is transformed, as desired, into the correct
one |ψ0(cid:105) (see Eq. (4)).
If systematic phase shift errors were the only ex-
perimental source of imperfections, this maximal
values would all be equal to one, corresponding to
the case p = 0 in the model of Eq. (3). In prac-
tice, decoherence processes are signiﬁcant (p > 0)
and reduce the experimentally attainable maximal
values of the set of stabilizer operators.

Figure 2 shows how the described phase optimisation
algorithm works in experiment. Here, it was applied to
remove relative phase shifts in the ideal, intermediate
state Eq. (4) after the ﬁrst two entangling operations. In-
terestingly, the algorithm converges very quickly, namely
already after performing two optimisation steps of sta-
bilisers during the ﬁrst round of iterations, n = 1. Overall
this resulted in a time of ≈7 minutes required for the ap-
plication of the phase optimization protocol, as compared
to about ≈48 minutes necessary for a full six-qubit state
tomography under comparable conditions. Note that the
required time for full state tomography does not include
state reconstruction as well as phase optimization.

III. ANALYSIS AND PROPERTIES OF THE

METHOD

As seen, the proposed phase optimization method pro-
vides correct results with very fast convergence for the
two-plaquette case. Let us now analyze more in detail
its mathematical background and performance for larger-
dimensional optimization problems.

A. Connection to coordinate descent/ascent

methods

To better explain the properties of the protocol and
let us ﬁrst consider a function of θ =
why it works,
[θ1, θ2, θ5] deﬁned as the sum of the stabilizer operators
(cid:104)S(1)
x (cid:105), (cid:104)S(2)
x (cid:105) given in Eqs. (8), (9) and

x (cid:105) and (cid:104)S(1)

x S(2)

(10):

(11)

2 , θ(0)

x S(2)
x (cid:105).

x (cid:105) + (cid:104)S(2)

f (θ) := (cid:104)S(1)

and optimizing f [θ1, θ(0)

x (cid:105) + (cid:104)S(1)
Instead of optimizing separately (cid:104)S(1)
(cid:104)S(2)
x (cid:105),
x (cid:105) and
(cid:104)S(1)
x S(2)
x (cid:105), we may maximize f (θ) following the same
method as in the steps 3–5 above, i.e. ﬁxing θ2 = θ(0)
2
and θ5 = θ(0)
5 ] to obtain
5
θ(1)
1 ; then repeating the procedure now ﬁxing θ1 = θ(1)
and θ5 = θ(0)
5 ] to obtain
θ(1)
2 , and so on.
This recipe is essentially a global version of coordinate
descent (ascent) methods for minimizing (maximizing)
functions of several variables, see [42, 43].
It is global
in the sense that the optimization in every coordinate is
done by searching the global maximum instead of apply-
ing gradient algorithms. It is clear from the very formu-
lation of the method that f will monotonically increase,

5 , and optimizing f [θ(1)

1 , θ2, θ(0)

1

f (θ(0)) ≤ f (θ(1)) ≤ f (θ(2)) ≤ . . . .

(12)

Therefore, the only way that under this method f might
not converge to its maximum point is that it gets stuck in
a local (but not global) maximum at some step. Never-
theless, one can show that the function f (θ) in Eq. (11)

6

only has global maxima (see Appendix B), so the recipe is
guaranteed to work. In this regard, note that the method
can work even for a function with local maxima as the
optimization in every individual coordinate is done by
seeking for the global maximum instead of applying dif-
ferential methods which can present problems with local
extremal points.

x S(2)

x (cid:105), (cid:104)S(2)

x (cid:105) and (cid:104)S(1)

This argument regarding convergence of the method
for f (θ) does not explain entirely the convergence when
applied separately to (cid:104)S(1)
x (cid:105) as
in steps 3–5 of the iterative algorithm outlined above.
Nevertheless, the latter, experimentally used algorithm
works as well because, on the one hand, the optimal
point θ for (cid:104)S(1)
x S(2)
x (cid:105).
In other words, there exists a common optimum point
for every term contributing to the sum in f (θ). On
the other hand, despite the fact that the maximization
process of some stabilizer will,
in general, reduce the
value of other stabilizers at intermediate steps, the global
optimization in every coordinate rapidly overcomes this
eﬀect.

x (cid:105) is also optimal for (cid:104)S(2)

x (cid:105) and (cid:104)S(1)

B. Optimization of the entire 7-qubit encoding:

the three plaquette case

The practical applicability of the method has been
tested and benchmarked by applying it to the more com-
plex case of the entire encoding of the 7-qubit code. Here,
the aim is to determine and remove the 23 − 1 = 7 rela-
tive phases of the state Eq. (2) in the preparation of the
logical |0(cid:105)L. The procedure works similarly as in the case
of two plaquettes discussed above, however, here we need
to apply Z-rotations to all seven qubits,

7(cid:89)

i=1

eiθiZi |ψ

(cid:48)
0(cid:105) →

1
2√2

(|0000000(cid:105) + ei[φ1+2(θ2+θ3+θ5+θ6)] |0110110(cid:105)
+ ei[φ2+2(θ1+θ2+θ3+θ4)] |1111000(cid:105) + ei[φ3+2(θ1+θ4+θ5+θ6)] |1001110(cid:105)
+ ei[φ4+2(θ3+θ4+θ6+θ7)] |0011011(cid:105) + ei[φ5+2(θ2+θ4+θ5+θ7)] |0101101(cid:105)
+ ei[φ6+2(θ1+θ2+θ6+θ7)] |1100011(cid:105) + ei[φ7+2(θ1+θ3+θ5+θ7)] |1010101(cid:105)),

(13)

to correct all phases by maximizing the seven expecta-
tion values of plaquette operators (cid:104)S(1)
x (cid:105), (cid:104)S(3)
x (cid:105),
x S(2)
(cid:104)S(1)
x (cid:105) and (cid:104)S(1)
x S(3)
x (cid:105). The
explicit expressions of these expectation values show-
ing their dependences on the control parameters θ =
[θ1, . . . , θ7] are given in the Appendix A.

x (cid:105), (cid:104)S(2)
x S(2)

x (cid:105), (cid:104)S(2)

x (cid:105), (cid:104)S(1)

x S(3)

x S(3)

C. Convergence on average

Let us now obtain an estimate for the convergence rate.
The function f (θ) for two plaquettes in Eq. (11) can be
written as a function of one component of the vector θ,
say θ1, in the form of

f (θ1) = A cos(2θ1 + ϕ) + c,

(14)

7

x S(2)

x (cid:105), (cid:104)S(2)

x S(3)

x S(3)

FIG. 3. Experimental phase optimization of the complete 7-qubit quantum error correcting code. Here, the
algorithm was applied to the ﬁnal state resulting from the complete encoding sequence shown in Fig. 1, i.e. three entangling
operations applied to the qubits belonging to the ﬁrst (red), second (blue) and third (green) plaquette of the code. Initially, X-
type stabiliser expectation values are non-maximal (a), indicating the presence of unknown, relative phases in the desired target
x (cid:105),
x (cid:105), (cid:104)S(3)
state. After two rounds of iteratively maximising the seven expectation values of plaquette operators (cid:104)S(1)
x (cid:105), the algorithm converges to a set of compensation phases, θ = [θ1, . . . , θ7],
(cid:104)S(1)
for which all X-type stabilisers assume maximal values. The individual phase value θi to the Z rotation, which is adjusted
to maximize the corresponding stabilizer expectation value under consideration (bold line), is indicated by the orange circle
for each optimization step (see (b) - (i)). Note that due to the periodicity in θi, it is also possible to search for the minimum
expectation value of the stabilizer under consideration and adding the rotation angle 2θ = π, see (c) for an example. The Z
and X-type stabilisers of the logical state |0(cid:105)L after two rounds of optimization steps are shown in (j). Intermediate steps of
the second round of optimisation are not shown. The experimental parameters are as speciﬁed in Fig. 2.

x (cid:105) and (cid:104)S(1)

x (cid:105), (cid:104)S(2)

x (cid:105), (cid:104)S(1)

x S(2)

x S(3)

where A = A(θ2, θ5, φ1, φ2, φ3), ϕ = ϕ(θ2, θ5, φ1, φ2, φ3)
and c = c(θ2, θ5, φ1, φ2, φ3). Speciﬁcally,

A =

1
2

cos2

(cid:115)

(cid:20)

θ2 + θ5 +

(cid:21)

φ1
2

cos2

(cid:20)

θ2 − θ5 +

1
2

(cid:21)

.

(φ2 − φ3)
(15)

By computing the mean value of this amplitude on a
uniform distribution of their arguments we obtain ¯A =
0.81 and similarly the mean value of c is ¯c = 0.
In a
rough, conservative estimate where the average value of
c remains constant when moving from the optimization
of one coordinate of θ to the next one, we estimate that
in every coordinate optimization step we gain ¯A/2 = 0.40

expectation value0.40.200.6-0.6-0.4-0.2x(2)SLZLXz(2)Sz(1)Sx(1)Sx(3)Sz(3)S3256714325671432567143256714325671432567143256714expectation value0.40.200.6-0.6-0.4-0.200.20.40.60.81AC - Stark phase 2θ (π)x(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)S00.20.40.60.81AC - Stark phase 2θ (π)expectation value0.40.200.6-0.6-0.4-0.20.40.60.81.01.21.41.6AC - Stark phase 2θ (π)expectation value0.40.200.6-0.6-0.4-0.2x(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)Sx(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)Sx(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)Sx(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)Sx(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)Sx(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)S00.51.01.52.0AC - Stark phase 2θ (π)expectation value0.40.200.6-0.6-0.4-0.2expectation value0.40.200.6-0.6-0.4-0.200.51.01.52.0AC - Stark phase 2θ (π)00.51.01.52.0AC - Stark phase 2θ (π)expectation value0.40.200.6-0.6-0.4-0.2x(1)Sx(2)Sx(1)Sx(2)Sx(3)Sx(1)Sx(3)Sx(2)Sx(3)Sx(2)Sx(3)Sx(1)Sexpectation value0.40.200.6-0.6-0.4-0.200.51.01.52.0AC - Stark phase 2θ (π)2nd Iteration00.51.01.52.0AC - Stark phase 2θ (π)expectation value0.40.200.6-0.6-0.4-0.23256714x(2)SLZLXz(2)Sz(1)Sx(1)Sx(3)Sz(3)Sexpectation value0.40.200.6-0.6-0.4-0.2(a)(b)(d)(c)(e)(f)(h)(i)(g)(j)x(1)Sx(2)Sx(3)Sx(1)Sx(2)Sx(3)Son average. Therefore, since f (θ) = 0 we estimate that
we will obtain convergence after n = 2.47 iterations on
average. A similar estimate for the three plaquette case
leads to a gain per coordinate optimization step of ¯A/2 =
0.40 on average, and thus estimated convergence after
n = 2.47 iterations on average, which is the same value
as found for the 2-plaquette case.

These values can be checked by a numerical simula-
tion of the method averaging over many random conﬁg-
urations of phases φ. For two and three plaquettes the
simulation produces a mean value of n = 1 (exact) and
n = 2.25 (accuracy ∼0.05), respectively. On the one
hand, the exact convergence after n = 1 iterations for
two plaquettes is due to the high degree of symmetry of
f (θ) in that case, which has not been taken into account
in the rough estimation of the average convergence rate.
On the other hand, the simulation is compatible with
the estimate for the three plaquette case, with a slightly
improved, i.e. faster rate of convergence.

To determine the convergence rate of the method op-
timizing individual mean values instead of their sum, we
have numerically simulated this version of the algorithm
used in the experiment, by averaging over random values
of φ. This produces convergence after n = 1 (exact) iter-
ations for the two plaquette case and n = 2.16 (accuracy
∼0.05) for the three plaquette case. The numerically ob-
served convergence of n = 1 is in accordance with the
experimentally observed convergence within a single it-
erative cycle of optimization (see discussion above and
Fig. 2). Interestingly, the numerical results for the three
plaquette case suggest that the variant based on optimiz-
ing individual mean values converges slightly faster than
optimizing the sum over all of them.

D. Experimental optimisation of the 7-qubit code

Figure 3 shows experimental results of the iterative
phase optimisation algorithm applied to the entire en-
coding sequence of the 7-qubit error correcting code.
Whereas initially X-type stabilizer expectation values are
non-maximal due to the presence of unknown relative
phase shifts in the state of Eq. (2), after two iterative
cycles (n = 2), composed of 14 elementary optimisation
steps, the algorithm converges within the experimental
resolution, and outputs a set of values for the compensa-
tion phase shifts θ = [θ1, . . . , θ7], for which the initially
unknown relative phases {φi} are removed. As a conse-
quence, not only the Z-type stabilizer values, which are
unaﬀected by the optimisation protocol, but also all X-
type stabilizers are positive-valued and maximal within
the given accuracy of the encoding quantum circuit. The
experimentally observed convergence after n = 2 rounds
is in very good agreement with the numerically prediction
of n = 2.16 for the three plaquette case.

8

E. Scalability properties

Let us now brieﬂy discuss to which extent the present
protocol is scalable as quantum states of systems of larger
number of qubits are considered. In the analyzed two-
plaquette case, we have been able to compensate three
undesired relative phases by applying three qubit Z-
rotations. For the complete minimal planar 7-qubit color
code we needed to apply seven single-qubit Z-rotations.
Larger instances of 2D color codes (see Fig. 4 in the Ap-
pendix) encode logical qubits in a larger number of phys-
ical qubits and thereby provide larger logical distances
and increased robustness to errors. The number of com-
putational basis states involved as components in logical
states of such larger systems grows exponentially with
the number of plaquettes #, and so does the number
#of relative phases that need to be compensated:

#Phases = 2#Plaquettes − 1.

(16)

In the most general case, these relative phases may be
uncorrelated among each other, so that an exponential
number of independent Z-type Hamiltonian generators
are required to unitarily compensate all phases. This can
in principle be achieved by resorting not only to single-
qubit Z-rotations, but also to two-qubit ZZ-rotations,
exp(θijZiZj), three-qubit, and higher-order n-body ro-
tations. Following this route the required operations be-
come more and more nonlocal. One can then ask to which
size of a planar color code the method can be extended
such that only physically quasi-local rotations,
i.e. n-
qubit rotations only acting on qubits belonging to the
same plaquette, are suﬃcient to correct the set of unde-
sired phases. Combinatorics show (see Appendix C) that
phases in the state of a logical distance d = 5 color code
involving 17 qubits can in principle still be corrected by
such physically quasi-local rotations, whereas the next-
larger generation, a distance d = 7 color code encoded
in 31 qubits would require physically non-local rotations
acting on qubits on several plaquettes.

This mismatch between degrees of freedom and local
operations, which becomes more signiﬁcant as the code
size increases, is a generic feature and not speciﬁc to color
codes.
It will ultimately need to be circumvented by
the implementation of quantum error correcting codes in
physical architectures where physical error sources act
quasi-locally, and by using fault-tolerant encoding pro-
tocols [44, 45], which avoid an uncontrolled propagation
of errors during the encoding over the entire quantum
hardware [19, 20].

IV. CONCLUSIONS AND OUTLOOK

In this work we have proposed and experimentally
shown an iterative phase optimisation protocol that al-
lows one to eﬃciently compensate systematic, unknown
but constant phase shift errors, which can occur e.g. in re-
alizations of small quantum error correcting codes. The

method allows one to determine and remove such rela-
tive phases without full quantum state tomography, and
it converges very quickly when applied to small quantum
error correcting codes. This algorithm was a key ele-
ment in optimizing a recent successful implementation of
a 7-qubit quantum error correcting code in a system of
trapped ions [16]. The method can be equally applied to
alternative, non-unitary encoding protocols based e.g. on
Quantum non-demolition (QND) measurements of stabi-
lizer operators. Furthermore, the protocol demonstrated
here is not limited to trapped ion-systems, and we hope
that it will be useful also for other, currently ongoing ef-
forts in quantum computing and error correction in AMO
and solid-state systems.

ACKNOWLEDGMENTS

M.M. thanks M. Guta for valuable discussions. We
gratefully acknowledge support by the Austrian Science

9

Fund (FWF), through the SFB FoQuS (FWF Project
No. F4002-N16), as well as the Institut f¨ur Quantenop-
tik und Quanteninformation GmbH. E.A.M. is a recip-
ient of a DOC fellowship from the Austrian Academy
of Sciences. P.S. was supported by the Austrian Sci-
ence Foundation (FWF) Erwin Schr¨odinger Stipendium
3600-N27. This research was funded by the Oﬃce of
the Director of National Intelligence (ODNI), Intelli-
gence Advanced Reasearch Projects Activity (IARPA),
through the Army Research Oﬃce grant W911NF-10-1-
0284. All statements of fact, opinion or conclusions con-
tained herein are those of the authors and should not
be construed as representing the oﬃcial views or poli-
cies of IARPA, the ODNI, or the U.S. Government. We
also acknowledge support by U.S. A.R.O. through grant
W911NF-14-1-010, the Spanish MINECO grant FIS2012-
33152, and the CAM research consortium QUITEMAD+
S2013/ICE-2801.

Appendix A: Phase dependences of stabilizer operators

The expectation values of the seven stabilizer plaquette operators for the state Eq. (13) are given by

(cid:104)S(1)

x (cid:105) = 1

4{cos[φ2 + 2(θ1 + θ2 + θ3 + θ4)] + cos[φ1 − φ3 + 2(−θ1 + θ2 + θ3 − θ4)]
+ cos[φ4 − φ6 + 2(−θ1 − θ2 + θ3 + θ4)] + cos[φ5 − φ7 + 2(−θ1 + θ2 − θ3 + θ4)]},

(cid:104)S(2)

x (cid:105) = 1

4{cos[φ1 + 2(θ2 + θ3 + θ5 + θ6)] + cos[φ2 − φ3 + 2(θ2 + θ3 − θ5 − θ6)]
+ cos[φ4 − φ5 + 2(−θ2 + θ3 − θ5 + θ6)] + cos[φ6 − φ7 + 2(θ2 − θ3 − θ5 + θ6)]},

(cid:104)S(3)

x (cid:105) = 1

4{cos[φ4 + 2(θ3 + θ4 + θ6 + θ7)] + cos[φ1 − φ5 + 2(θ3 − θ4 + θ6 − θ7)]
+ cos[φ2 − φ6 + 2(θ3 + θ4 − θ6 − θ7)] + cos[φ3 − φ7 + 2(−θ3 + θ4 + θ6 − θ7)]},

x S(2)

(cid:104)S(1)

x (cid:105) = 1

4{cos[φ3 + 2(θ1 + θ4 + θ5 + θ6)] + cos[φ1 − φ2 + 2(−θ1 − θ4 + θ5 + θ6)]
+ cos[φ4 − φ7 + 2(−θ1 + θ4 − θ5 + θ6)] + cos[φ5 − φ6 + 2(−θ1 + θ4 + θ5 − θ6)]},

x S(3)

(cid:104)S(1)

x (cid:105) = 1

4{cos[φ6 + 2(θ1 + θ2 + θ6 + θ7)] + cos[φ1 − φ7 + 2(−θ1 + θ2 + θ6 − θ7)]
+ cos[φ2 − φ4 + 2(θ1 + θ2 − θ6 − θ7)] + cos[φ3 − φ5 + 2(θ1 − θ2 + θ6 − θ7)]},

x S(3)

(cid:104)S(2)

x (cid:105) = 1

4{cos[φ5 + 2(θ2 + θ4 + θ5 + θ7)] + cos[φ1 − φ4 + 2(θ2 − θ4 + θ5 − θ7)]
+ cos[φ2 − φ7 + 2(θ2 + θ4 − θ5 − θ7)] + cos[φ3 − φ6 + 2(−θ2 + θ4 + θ5 − θ7)]},

x S(2)

x S(3)

(cid:104)S(1)

x (cid:105) = 1

4{cos[φ7 + 2(θ1 + θ3 + θ5 + θ7)] + cos[φ1 − φ6 + 2(−θ1 + θ3 + θ5 − θ7)]
+ cos[φ2 − φ5 + 2(θ1 + θ3 − θ5 − θ7)] + cos[φ3 − φ4 + 2(θ1 − θ3 + θ5 − θ7)]}.

(A1)

(A2)

(A3)

(A4)

(A5)

(A6)

(A7)

Appendix B: Extrema of the function f (θ)

10

By considering all variables of θ ﬁxed except one, say θ1, we have seen that the function f (θ) can be written as a
cosine, Eq. (14). Since this is true for every variable of θ when ﬁxing the rest of them, the sections of the function
f (θ) in every variable are just cosine functions (one frequency). In such a situation it seems not to be possible to
obtain local maxima or minima. This is because the hypersurface f (θ) can be viewed as a modulation of a cosine
proﬁle along all the orthogonal directions by other cosine proﬁles; since every cosine does not have local extremes, its
modulation do not create local extremes. In fact the maximum (minimum) points are just the points which maximize
(minimize) all sections individually. This can be checked with the two-plaquette case where the condition for the
critical point of f (θ) is

∇f (θ) = −4

θ2 + θ5 + φ1
2
θ1 + θ5 + φ3
2
θ1 + θ2 + φ2
2

cos

cos

cos

2

θ2 − θ5 + φ2
θ1 − θ5 − φ1
θ1 − θ2 − φ1

2 − φ3
2 + φ2
2 + φ3

2

2

sin

sin

sin

2

2θ1 − φ1
2θ2 + φ1
2θ5 + φ1

2 + φ2
2 + φ2
2 − φ2

2 + φ3
2 − φ3
2 + φ3

2

2

By solving the three simultaneous conditions we obtain that the critical points which are a maximum or a minimum
(the rest are saddle points) are

(cid:17)
(cid:17)
(cid:17)

(cid:16)
(cid:16)
(cid:16)

(cid:16)
(cid:16)
(cid:16)

cos

cos
(cid:18) φ1

cos

(cid:17)
(cid:17)
(cid:17)

 = 0.

(cid:17)
(cid:17)
(cid:17)

(cid:16)
(cid:16)
(cid:16)

(cid:19)

φ3
4
where k1, k2, k3 ∈ Z. However, in this case

φ2
4 −

4 −

θc =

φ1
4 −

φ2
4

,−

+

φ3
4

φ1
4

,−

+

φ2
4 −

φ3
4

+

π
2

(k1, k2, k3)

reaches either its absolute maximum (3) or its absolute minimum (−1).

f (θc) = (−1)(k1+k2) + (−1)(k1+k3) + (−1)(k2+k3)

1-local: 17 one-qubit rotations.

(B1)

(B2)

(B3)

FIG. 4. Larger instances of planar color codes. The
17-qubit code (a) encodes a logical qubit of logical distance
d = 5, the 31-qubit code (b) has distance d = 7. Whereas
the 17-qubit code would, at least in principle, allow for the
correction of the undesired phases with physically quasi-local
rotations, acting only on subsets of qubits belonging to the
same plaquette, phase compensation for the 31 qubit case
(and larger codes) would require non-local rotations involving
qubits of several plaquettes.

2-local: There are 7 square plaquettes which share
6 sides, and 1 octagonal plaquette which shares
6 sides with square plaquettes, so that, square
plaquettes: 7 ×
− 6 = 36, octagonal plaquette:

(cid:0)4
(cid:1)

2

3-local: Square plaquettes: 7 ×

− 6 = 22, Total: 58.

2

(cid:1)
(cid:0)8
plaquette: (cid:0)8
plaquette: (cid:0)8

3

(cid:1) = 56.
(cid:1) = 70.

4-local: Square plaquettes: 7 ×

5-local: Octagonal plaquette: (cid:0)8

4

5

3

(cid:0)4
(cid:1) = 28, octagonal
(cid:1) = 7, octagonal
(cid:0)4
(cid:1) = 56.

4

Appendix C: Number of quasi-local control degrees

of freedom

For the code with 17 qubits (distance d = 5) we have
8 plaquettes (see Fig. 4), so the number of undesired
relative phases is 28 − 1 = 255. Counting the number
of degrees of freedom we have available with plaquette
Z-rotations yields the following numbers of n-local oper-
ations (i.e operations involving n qubits):

Therefore, taking into account up to 5-local rotations we
obtain 292 degrees of freedoms. Thus, indeed only local
plaquette rotations are suﬃcient to correct the undesired
255 phases in this 2nd generation of color codes.

The next code in the family, the one with 31 qubits (3rd
generation, distance d = 7), has 15 plaquettes (Fig. 4)
and so it requires 215 − 1 = 32767 rotations. A similar
counting as in the 17 qubit case shows that the number
of phases that can be corrected by quasi-local rotations
only involving qubits belonging to the same plaquette is

875. Henceforth, it requires physically non-local rota-

tions involving qubits of several plaquettes.

11

[1] T. D. Ladd, F. Jelezko, R. Laﬂamme, Y. Nakamura,

[23] D. Crow, R. Joynt, and M. Saﬀman, arXiv:1510.08359

C. Monroe, and J. L. O’Brien, Nature 464, 45 (2010).

(2015).

[2] H. M. Wiseman and G. J. Milburn, Quantum Measure-

[24] S. E. Anderson, K. C. Younge, and G. Raithel, Phys.

ment and Control (Cambridge University Press, 2009).

Rev. Lett. 107, 263001 (2011).

[3] L. Viola, E. Knill, and S. Lloyd, Phys. Rev. Lett 82,

2417 (1999).

[4] L. Viola, E. M. Fortunato, M. A. Pravia, K. E,
R. Laﬂamme, and D. G. Cory, Science 293, 2059 (2001).
[5] P. Facchi, S. Tasaki, S. Pascazio, H. Nakazato, A. Tokuse,

and D. A. Lidar, Phys. Rev. A 71, 022302 (2005).

[6] J. Emerson, M. Silva, O. Moussa, C. Ryan, M. Laforest,
J. Baugh, D. G. Cory, and R. Laﬂamme, Science 317,
1893 (2007).

[7] J. Wallman, C. Granade, R. Harper, and S. T. Flammia,

New Journal of Physics 17, 113020 (2015).

[8] C. Altaﬁni and F. Ticozzi, IEEE Trans. Automat. Con-

trol 57, 1898 (2012).

[9] H.-P. Breuer and F. Petruccione, The Theory of Open
Quantum Systems (Oxford University Press, Oxford,
2002).

[10] A. Rivas and S. F. Huelga, Open Quantum Systems. An

Introduction (Springer, Heidelberg, 2011).

[11] H. H¨aﬀner, C. F. Roos, and R. Blatt, Phys. Rep. 469,

155 (2008).

[12] N. F. Ramsey, Phys. Rev. 78, 695 (1950).
[13] C. J. Foot, Atomic Physics (Oxford University Press,

2005).

[14] M. A. Nielsen and I. L. Chuang, Quantum Computation
and Quantum Information (Cambridge University Press,
2000).

[15] D. A. Lidar and T. A. Brun, Quantum Error Correction

(Cambridge University Press, 2013).

[16] D. Nigg, M. M¨uller, E. A. Martinez, P. Schindler,
and

M. Hennrich, T. Monz, M. A. Martin-Delgado,
R. Blatt, Science 345, 302 (2014).

[17] M. Cramer, M. B. Plenio, S. T. Flammia, R. Somma,
D. Gross, S. D. Bartlett, O. Landon-Cardinal, D. Poulin,
and Y.-K. Liu, Nat. Commun. 1, 149 (2010).

[18] P. Schindler, Nigg, T. Monz, J. T. Barreiro, E. Martinez,
S. X. Wang, S. Quint, M. F. Brandl, V. Nebendahl, C. F.
Roos, M. Chwalla, M. Hennrich, and R. Blatt, New Jour-
nal of Physics 15, 123012 (2013).

[25] M. Viteau, M. G. Bason, J. Radogostowicz, N. Malossi,
D. Ciampini, O. Morsch, and E. Arimondo, Phys. Rev.
Lett. 107, 060402 (2011).

[26] P. Schauss, M. Cheneau, M. Endres, T. Fukuhara,
S. Hild, A. Omran, T. Pohl, C. Gross, S. Kuhr, and
I. Bloch, Nature 491, 87 (2012).

[27] F. Nogrette, H. Labuhn, S. Ravets, D. Barredo,
and A. Browaeys,

L. B´eguin, A. Vernier, T. Lahaye,
Phys. Rev. X 4, 021034 (2014).

[28] T. Xia, M. Lichtman, K. Maller, A. W. Carr, M. J. Pi-
otrowicz, L. Isenhower, and M. Saﬀman, Phys. Rev. Lett.
114, 100503 (2015).

[29] A. M. Steane, Phys. Rev. Lett. 77, 793 (1996).
[30] H. Bombin and M. A. Martin-Delgado, Phys. Rev. Lett.

97, 180501 (2006).

[31] R. Hanson and D. Awschalom, Nature 453, 1043 (2008).
[32] A. Corcoles, E. Magesan, S. J. Srinivasan, A. W. Cross,
and J. M. Chow, Nat.

M. Steﬀen, J. M. Gambetta,
Comm. 6, 2015/04/29/online (2015).

[33] J. Gambetta, J. Chow, and M. Steﬀen, arXiv:1510.04375

(2015).

[34] J. Kelly, R. Barends, A. G. Fowler, A. Megrant, E. Jef-
frey, T. C. White, D. Sank, J. Y. Mutus, B. Campbell,
Y. Chen, Z. Chen, B. Chiaro, A. Dunsworth, I.-C. Hoi,
C. Neill, P. J. J. O/’Malley, C. Quintana, P. Roushan,
A. Vainsencher, J. Wenner, A. N. Cleland, and J. M.
Martinis, Nature 519, 66 (2015).

[35] G. Waldherr, Y. Wang, S. Zaiser, M. Jamali, T. Schulte-
Herbruggen, H. Abe, T. Ohshima, J. Isoya, J. F. Du,
P. Neumann, and J. Wrachtrup, Nature 506, 204 (2014).
[36] A. Fedorov, L. Steﬀen, M. Baur, M. P. da Silva, and

A. Wallraﬀ, Nature 481, 170 (2012).

[37] A. R. Calderbank and P. W. Shor, Phys. Rev. A 54, 1098

(1996).

[38] K. Mølmer and A. Sørensen, Phys. Rev. Lett. 82, 1835

(1999).

[39] C. F. Roos, New J. Phys. 10, 013002 (2008).
[40] L. M. K. Vandersypen and I. L. Chuang, Rev. Mod. Phys.

[19] E. Dennis, A. Kitaev, A. Landahl, and J. Preskill, J.

76, 1037 (2004).

Math. Phys. 43, 4452 (2002).

[41] V. Nebendahl, H. H¨aﬀner, and C. F. Roos, Phys. Rev.

[20] B. M. Terhal, Rev. Mod. Phys. 87, 307 (2015).
[21] D. Jaksch, J. I. Cirac, P. Zoller, S. L. Rolston, R. Cˆot´e,

and M. D. Lukin, Phys. Rev. Lett. 85, 2208 (2000).

[22] M. Saﬀman, T. G. Walker, and K. Mølmer, Rev. Mod.

A 79, 012312 (2009).

[42] S. J. Wright, Math. Prog. 151, 3 (2015).
[43] Y. Nesterov, SIAM J. Optimiz. 22, 341 (2012).
[44] P. W. Shor, IEEE Symposium on Foundations of Com-

Phys. 82, 2313 (2010).

puter Science (1996).

[45] J. Preskill, “Fault-Tolerant Quantum Computation”
in“Introduction to Quantum Computation and Informa-
tion” (World Scientiﬁc, 1997).

