6
1
0
2

 
r
a

 

M
6
1

 
 
]
h
p
-
t
n
a
u
q
[
 
 

1
v
4
8
2
5
0

.

3
0
6
1
:
v
i
X
r
a

Computing coherence vectors and correlation matrices,

with application to quantum discord quantiﬁcation

Jonas Maziero1, 2, ∗

Universidade Federal de Santa Maria, Avenida Roraima 1000, 97105-900, Santa Maria, RS, Brazil

1Departamento de Física, Centro de Ciências Naturais e Exatas,

2Instituto de Física, Facultad de Ingeniería, Universidad de la República,

J. Herrera y Reissig 565, 11300, Montevideo, Uruguay

Coherence vectors and correlation matrices are important functions frequently used in physics.
The numerical calculation of these functions directly from their deﬁnitions, which involves Kronecker
products and matrix multiplications, may appear to be a reasonable option. Notwithstanding, as
we show in this article, some algebraic manipulations before programming can reduce considerably
their computational complexity. Besides, we provide Fortran code to generate generalized Gell Mann
matrices and to compute the optimized and unoptimized versions of the associated coherence vectors
and correlation matrix, in the case of bipartite quantum systems. As a code test and application
example, we consider the calculation of Hilbert-Schmidt quantum discords.

Keywords: quantum information, coherence vector, correlation matrix, Gell Mann matrices, quantum discord

I.

INTRODUCTION

Correlation functions are fundamental objects for sta-
tistical analysis, and are thus ubiquitous in most kinds
of scientiﬁc inquires and their applications [1, 2].
In
physics, correlation functions have an important role
for research in areas such as quantum optics and open
systems [3, 4], phase transitions and condensed matter
physics [5, 6], and quantum ﬁeld theory and nuclear and
particle physics [7]. Another area in which correlation
functions are omnipresent is quantum information sci-
ence (QIS), an interdisciplinary ﬁeld that extends the ap-
plicabilities of the classical theories of information, com-
putation, and computational complexity [8–10].

Investigations about the quantum correlations in phys-
ical systems have been one of the main catalyzers for
developments in QIS [11–15]. There are several guises
of quantum correlations, and quantum discord stands
among the most promising quantum resources for fuel-
ing the quantum advantage [16–26]. When computing or
witnessing quantum discord, or other kinds of correlation
or quantumness quantiﬁers, we are frequently faced with
the need for calculating coherence vectors and correlation
matrices [27–32]. And it is the main aim of this article
to provide formulas for these functions that are amenable
for more eﬃcient numerical calculations when compared
with the direct implementation of their deﬁnitions.

In order to deﬁne coherence vectors and correlation
matrices, let us consider a composite bipartite system
with Hilbert space Hab = Ha ⊗ Hb. Hereafter the cor-
responding dimensions are denoted by ds = dim Hs for
s = ab, a, b. In addition, let Γs

Tr(Γs

j ) = 0 and Tr(Γs

k) = 2δjk,

(1)

j , with
j Γs

be a basis for the special unitary group SU (ds). Any den-

ρ =

1

dab 


d2

a−1

d2

Xj=1
Xk=1

b −1

+

d2

a−1

Xj=1

cj,kΓa

j ⊗ Γb

k
 ,

d2

b −1

Xk=1

bkΓb
k

(2)

sity operator describing the state of the system Hab can
be written in the local basis Γa
a−1
and k = 1, · · · , d2

j ⊗Γb
b − 1, as follows:

k, with j = 1, · · · , d2

Ia ⊗ Ib +

ajΓa

j ⊗ Ib + Ia ⊗

where Is is the identity operator in Hs. One can readily
verify that the components of the coherence or Bloch
vectors a = (a1, · · · , ad2
a−1) and b = (b1, · · · , bd2
b−1) and
of the correlation matrix C = (cj,k) are given by:

aj = 2−1daTr(Γa
bk = 2−1dbTr(Ia ⊗ Γb
cj,k = 2−2dabTr(Γa

j ⊗ Ibρ),
kρ),
j ⊗ Γb

kρ).

(3)

(4)
(5)

In Ref.

[33], we provide Fortran code to compute
the coherence vectors, correlation matrices, and quan-
tum discord quantiﬁers we deal with in this article. Be-
sides these functions, there are other tools therein that
may be of interest to the reader. The instructions about
how to use the software are provided in the readme
ﬁle. Related to the content of this section, the sub-
routine bloch_vector_gellmann_unopt(ds, ρs, s) re-
turns the coherence vectors a or b and the subrou-
tine corrmat_gellmann_unopt(da, db, ρ, C) com-
putes the correlation matrix C. Now,
let us notice
that if calculated directly from the equations above, for
da, db ≫ 1, the computational complexity (CC) to obtain
the coherence vectors a and b or the correlation matrix
C is:

CC(a) = CC(b) = CC(C) ≈ O(d6

ad6

b ).

(6)

∗Electronic address: jonas.maziero@ufsm.br

The remainder of this article is organized as follows.
In Sec. II, we obtain formulas for a, b, and C that are

amenable for more eﬃcient numerical computations. In
Sec. III we test these formulas by applying them in the
calculation of Hilbert-Schmidt quantum discords. In Sec.
IV we make some ﬁnal remarks about the usefulness and
possible applications of the results reported here.

II. COMPUTING COHERENCE VECTORS

AND CORRELATION MATRICES

The partial trace function [34] can be used in order to
obtain the reduced states ρa = Trb(ρ) and ρb = Tra(ρ)
and to write the components of the Bloch vectors in the
form:

aj = 2−1daTr(Γa
bk = 2−1dbTr(Γb

j ρa),
kρb).

(7)

(8)

Thus, when computing the coherence vectors of the par-
ties a and b, we shall have to solve a similar problem;
so let’s consider it separately. That is to say, we shall
regard a generic density operator written as

ρs =

Is +

1

ds 


d2−1

Xj=1

sjΓs

j
 ,

(9)

where sj = 2−1dsTr(ρsΓs

j ).

Now, and for the remainder of this article, we assume
that the matrix elements of regarded density operator ρ
in the standard computational basis are given. We want
to compute the Bloch’s vector [35]: s = (s1, · · · , sd2
s−1).
For the sake of doing that, a particular basis Γs
j must be
chose. Here we pick the generalized Gell Mann matrices,
which are presented below in three groups [36]:

Γs(1)

j =s 2

j(j + 1)

j+1

Xk=1

(−j)δk,j+1 |kihk|

(10)

for j = 1, · · · , ds − 1,
Γs(2)
(k,l) = |kihl| + |lihk| for 1 ≤ k < l ≤ ds,
Γs(3)
(k,l) = −i(|kihl| − |lihk|) for 1 ≤ k < l ≤ ds, (12)

(11)

which are named the diagonal, symmetric, and antisym-
metric group, respectively. The last two groups possess
ds(ds − 1)/2 generators each. Any one of these matrices
can be obtained by calling the subroutine gellmann(ds,
g, k, l, Γs(g)
(k,l)). For the ﬁrst group, g = 1, we make
j = k and, in this case, one can set l to any integer.

It is straightforward seeing that, for the generators
above, the corresponding components of the Bloch’s vec-
tor can expressed directly in terms of the matrix elements

of the density operator ρs as follows:

2

(−j)δk,j+1 hk|ρs|ki

(13)

s(1)
j =

ds

p2j(j + 1)

j+1

Xk=1

for j = 1, · · · , ds − 1,
s(2)
(k,l) = dsRehl|ρs|ki for 1 ≤ k < l ≤ ds,
s(2)
(k,l) = dsImhl|ρs|ki for 1 ≤ k < l ≤ ds.

(14)

(15)

These expressions were implemented in the Fortran
subroutine bloch_vector_gellmann(ds, ρs, s). With
this subroutine, and the partial trace function [34], we
can compute the coherence vectors a and b.

We observe that after these simple algebraic manipula-
tions the computational complexity of the Bloch’s vector
turns out to be basically the CC for the partial trace func-
tion. Hence, from Ref. [34] we have that for da, db ≫ 1,

CC(a) ≈ O(d2

adb) and CC(b) ≈ O(dad2

b).

(16)

j

One detail we should keep in mind, when making use
of the codes linked to this article, is the convention we
apply for the indexes of the components of s. For the ﬁrst
group of generators, Γs(1)
, naturally, j = 1, · · · , ds − 1.
We continue with the second group of generators, Γs(2)
j =
Γs(2)
(k,l), by setting j(k,l)=(1,2) = ds−1+1 = ds, j(k,l)=(1,3) =
ds + 1, · · · , j(k,l)=(1,ds) = 2(ds − 1), j(k,l)=(2,3) = 2(ds −
1) + 1, · · · . The same convention is used for the third
group of generators, Γs(3)
(k,l), but here we begin
with j(k,l)=(1,2) = ds − 1 + 2−1ds(ds − 1) + 1 = ds +
2−1ds(ds − 1).

= Γs(3)

j

Next we address the computation of the correlation
b − 1) matrix

matrix C = (cj,k), which is a (d2
that we write in the form:

a − 1)x(d2

C =


C(1,1) C(1,2) C(1,3)
C(2,1) C(2,2) C(2,3)

C(3,1) C(3,2) C(3,3)
 ,

(17)

with the sub-matrices given as shown below. For conve-
nience, we deﬁne the auxiliary variables:

ι :=s 2

j(j + 1)

, κ :=s 2

k(k + 1)

, and ς :=

dadb

4

.

(18)

The matrix elements of C(1,1), whose dimension is
(da − 1)x(db − 1), correspond to the diagonal generators
for a and diagonal generators for b:

c(1,1)
j,k = ςTr(Γa(1)

j ⊗ Γb(1)

k ρ)

j+1

k+1

= ςικTr(

(−j)δm,j+1 |mihm|) ⊗ (

(−k)δp,k+1 |pihp|)ρ

j+1

k+1

Xm=1
Xm=1
Xp=1
Xm=1
Xp=1

k+1

j+1

= ςικ

= ςικ

Xp=1

(−j)δm,j+1 (−k)δp,k+1Tr(|mihm| ⊗ |pihp|ρ)

(−j)δm,j+1 (−k)δp,k+1hmp|ρ|mpi.

(19)

j+1

= ςι

= ςTr ι(
Xm=1
Xm=1
Xm=1

= 2ςι

= ςι

j+1

j+1

j+1

= −iςι

= −iςιTr (
Xm=1
Xm=1
Xm=1

= −iςι

= 2ςι

j+1

j+1

k+1

Xp=1
Xp=1

The matrix elements of C(1,2), whose dimension is
(da − 1)x2−1db(db − 1), correspond to the diagonal gen-
erators for a and symmetric generators for b:

c(1,2)
j,k = ςTr(Γa(1)

j ⊗ Γb(2)

k ρ) = ςTr(Γa(1)

j ⊗ Γb(2)

(p,q)ρ)

(−j)δm,j+1 |mihm|) ⊗ (|pihq| + |qihp|)ρ!

j+1

Xm=1

(−j)δm,j+1 (Tr(|mpihmq|ρ) + Tr(|mqihmp|ρ))

generators for a and symmetric generators for b:

3

j ⊗ Γb(2)

k ρ) = ςTr(Γa(2)

c(2,2)
j,k = ςTr(Γa(2)
= ςTr((|mihn| + |nihm|) ⊗ (|pihq| + |qihp|) ρ)
= ς (hnq|ρ|mpi + hmq|ρ|npi + hnp|ρ|mqi + hmp|ρ|nqi)
(23)
= 2ς (Rehnq|ρ|mpi + Rehnp|ρ|mqi) .

(m,n) ⊗ Γb(2)

(p,q)ρ)

The matrix elements of C(2,3), whose dimension is
2−1da(da−1)x2−1db(db−1), correspond to the symmetric
generators for a and antisymmetric generators for b:

(−j)δm,j+1 (hmq|ρ|mpi + hmq|ρ|mpi∗)

(−j)δm,j+1 Rehmq|ρ|mpi.

j ⊗ Γb(3)

k ρ) = ςTr(Γa(2)

(m,n) ⊗ Γb(3)
j,k = ςTr(Γa(2)
c(2,3)
(p,q)ρ)
= ςTr((|mihn| + |nihm|) ⊗ (−i) (|pihq| − |qihp|) ρ)
= −iς (hnq|ρ|mpi + hmq|ρ|npi − hnp|ρ|mqi − hmp|ρ|nqi)
(24)
= 2ς (Imhnq|ρ|mpi − Imhnp|ρ|mqi) .

(20)

The matrix elements of C(1,3), whose dimension is
(da − 1)x2−1db(db − 1), correspond to the diagonal gen-
erators for a and antisymmetric generators for b:

c(1,3)
j,k = ςTr(Γa(1)

j ⊗ Γb(3)

k ρ) = ςTr(Γa(1)

j ⊗ Γb(3)

(p,q)ρ)

(−j)δm,j+1 |mihm|) ⊗ (|pihq| − |qihp|)ρ!

j+1

Xm=1

(−j)δm,j+1 (Tr(|mpihmq|ρ) − Tr(|mqihmp|ρ))

The matrix elements of C(3,1), whose dimension is
2−1da(da − 1)x(db − 1), correspond to the antisymmetric
generators for a and diagonal generators for b:

j ⊗ Γb(1)

j,k = ςTr(Γa(3)
c(3,1)
= ςTr −i(|mihn| − |nihm|) ⊗ κ

(m,n) ⊗ Γb(1)
k ρ) = Tr(Γa(3)
(−k)δp,k+1|pihp|ρ!
Xp=1

k ρ)

k+1

k+1

= −iςκ

(−k)δp,k+1 (hnp|ρ|mpi − hmp|ρ|npi)

(−j)δm,j+1 (hmq|ρ|mpi − hmq|ρ|mpi∗)

= 2ςκ

(−k)δp,k+1Imhnp|ρ|mpi.

(25)

(−j)δm,j+1 Imhmq|ρ|mpi.

(21)

The matrix elements of C(3,2), whose dimension is
2−1da(da − 1)x2−1db(db − 1), correspond to the antisym-
metric generators for a and symmetric generators for b:

The matrix elements of C(2,1), whose dimension is
2−1da(da − 1)x(db − 1), correspond to the symmetric gen-
erators for a and diagonal generators for b:

j,k = ςTr(Γa(2)
c(2,1)

j ⊗ Γb(1)

k ρ) = ςTr(Γa(2)

= ςTr (|mihn| + |nihm|) ⊗ κ(
Xp=1

k+1

k+1

k ρ)

(m,n) ⊗ Γb(1)
(−k)δp,k+1|pihp|)ρ!

(−k)δp,k+1 (Tr(|mpihnp|ρ) + Tr(|npihmp|ρ))

(−k)δp,k+1 (hnp|ρ|mpi + hnp|ρ|mpi∗)

= 2ςκ

(−k)δp,k+1Rehnp|ρ|mpi.

(22)

The matrix elements of C(2,2), whose dimension is
2−1da(da−1)x2−1db(db−1), correspond to the symmetric

= ςκ

= ςκ

k+1

Xp=1
Xp=1
Xp=1

k+1

j ⊗ Γb(2)

k ρ) = ςTr(Γa(3)

j,k = ςTr(Γa(3)
c(3,2)
(p,q)ρ)
= ςTr ((−i) (|mihn| − |nihm|) ⊗ (|pihq| + |qihp|) ρ)
= −iς (hnq|ρ|mpi − hmp|ρ|nqi + hnp|ρ|mqi − hmq|ρ|npi)
(26)
= 2ς (Imhnq|ρ|mpi + Imhnp|ρ|mqi) .

(m,n) ⊗ Γb(2)

The matrix elements of C(3,3), whose dimension is
2−1da(da−1)x2−1db(db−1), correspond to antisymmetric
generators for a and antisymmetric generators for b:

j ⊗ Γb(3)

k ρ) = ςTr(Γa(3)

j,k = ςTr(Γa(3)
c(3,3)
= ςTr (−i (|mihn| − |nihm|) ⊗ (−i) (|pihq| − |qihp|) ρ)
= −ς (hnq|ρ|mpi + hmp|ρ|nqi − hnp|ρ|mqi − hmq|ρ|npi)
(27)
= 2ς (Rehnp|ρ|mqi − Rehnq|ρ|mpi) .

(m,n) ⊗ Γb(3)

(p,q)ρ)

We remark that when implementing these expressions
numerically, for the sake of mapping the local to the
global computational basis, we utilize, e.g.,

|npi ≡ |(n − 1)db + pi.

(28)

The subroutine corrmat_gellmann(da, db, ρ, C)
returns the correlation matrix C = (cj,k), as written in
Eq. (17), associated with the bipartite density operator
ρ and computed using the Gell Mann basis, as described
in this section. The convention for the indexes of the
matrix elements cj,k is deﬁned in the same way as for the
coherence vectors. The computational complexity for C,
computed via the optimized expressions obtained in this
section, is, for da, db ≫ 1,

CC(C) ≈ O(d2

ad2

b).

(29)

By generating some random density matrices [37], we
checked that the expressions and the corresponding code
for the unoptimized and optimized versions of a, b, and
C agree. Additional tests shall be presented in the next
section, where we calculate some quantum discord quan-
tiﬁers.

III. COMPUTING HILBERT-SCHMIDT

QUANTUM DISCORDS

The calculation of quantum discord functions (QD)
usually involves hard optimization problems [38, 39]. In
the last few years, a large amount of eﬀort have been
dedicated towards computing QD analytically, with suc-
cess being obtained mostly for low dimensional quantum
systems [40–56]. Although not meeting all the required
properties for a bona ﬁde QD quantiﬁer [57], the Hilbert-
Schmidt discord (HSD) [58],

Da

hs(ρ) = min
ρcq

||ρ − ρcq||2
2,

(30)

is drawing much attention due to its amenability for an-
alytical computations, when compared with most other
QD measures. In the last equation, the minimization is
performed over the classical-quantum states

pj|ajihaj| ⊗ ρb
j,

(31)

ρcq =Xj

with pj being a probability distribution, |aji an orthonor-
mal basis for Ha, ρb
j generic density operators deﬁned in

Hb, and ||O||2 :=pTr(O†O) is the Hilbert-Schmidt norm

of the linear operator O, with O† being the transpose
conjugate of O.

In this article, as a basic test for the Fortran code pro-
vided to obtain coherence vectors and correlation matri-
ces, we shall compute the following lower bound for the
HSD [59]:

Da

hs(ρ) =

d2

a−1

Xj=da

λa
j ,

(32)

j are the eigenvalues, sorted in non-increasing

where λa
order, of the (d2

4

In the equation above t stands for the transpose of a
vector or matrix. We observe that the other version of
the HSD, Db
hs, can be obtained from the equations above
simply by exchanging a and b and using C tC instead of
CC t.

It is interesting regarding that, as was proved in Ref.
[60], a bipartite state ρ, with polarization vectors a and
b and correlation matrix C, is classical-quantum if and
only if there exists a (da − 1)-dimensional projector Πa
in the space Rd2

a−1 such that:

Πaa = a and ΠaC = C,

(34)

Based on this fact, an ameliorated version for the Hilbert-
Schmidt quantum discord (AHSD) was proposed [60]:

Da

hsa(ρ) := min
Πa

||Υa − ΠaΥa||2
2,

with the matrix Υa deﬁned as

Υa :=s 2

d2

adb (cid:18)f (b)a g(b)r 2

db

C(cid:19) ,

(35)

(36)

where f and g are arbitrary functions of b ≡ ||b||2. Then,
by setting f (b) = g(b) = P (ρb) and using the purity,

P (ρb) := Tr(ρ2

b ) =Xj,k

|ρb

j,k|2,

(37)

to address the problem of non-contractivity of the
Hilbert-Schmidt distance, the following analytical for-
mula was presented [60]:

Da

hsa(ρ) =

1

P (ρb)

d2

a−1

Xj=da

λa
j =

Da
hs(ρ)
P (ρb)

.

(38)

hs and Da

Thus both discord quantiﬁers Da

hsa are, in the
end of the day, obtained from the eigenvalues λa
j . And
the computation of these eigenvalues requires the knowl-
edge of the coherence vector a (or b) and of the correla-
tion matrix C. These QD measures were implemented
in the Fortran functions discord_hs(ssys, da, db,
ρ) and discord_hsa(ssys, da, db, ρ), where ssys =
‘s’, with s = a, b, speciﬁes which version of the quan-
tum discord is to be computed. As an example, let us use
the formulas provided in this article and the associated
code to compute the HSD and AHSD of Werner states
in Ha ⊗ Hb (with da = db):

ρw =

da − w

da(d2

a − 1)

Ia ⊗ Ib +

daw − 1
da(d2
a − 1)

F,

(39)

where w ∈ [−1, 1] and

F =

da

Xj,k=1

|jkihkj|.

(40)

a − 1)x(d2

a − 1) matrix:

Ξa =

2
d2

adb (cid:18)aat +

2
db

CC t(cid:19) .

The reduced states of ρw are Is/ds, whose purity is
P (ρs) = 1/ds. The results for the HSD and AHSD of
ρw are presented in Fig. 1.

(33)

0.8

0.6

0.4

0.2

0

-1

-0.5

0

0.5

Figure 1: The points are the values of the ameliorated Hilbert-
Schmidt quantum discord of Werner states computed nu-
merically using Eq.
(38). The lines are the correspond-
ing values of the AHSD plotted via the analytical formula:
hs(ρw) = (daw − 1)2/((da − 1)(da + 1)2).
Da
Due to the symmetry of ρw, here Da

hsa(ρw) = daDa

hsa(ρw) = Db

hsa(ρw).

IV. CONCLUDING REMARKS

In this article we addressed of problem of computing
coherence vectors and correlations matrices. We obtained

5

formulas for these functions that make possible a con-
siderable more eﬃcient numerical implementation when
compared with the direct use of their deﬁnitions. We pro-
vided Fortran code to compute all the quantities regarded
in this paper. As a test for our formulas and code, we
calculated Hilbert-Schmidt quantum discords of Werner
states. It is important observing that, although our fo-
cus here was in quantum information science, the tools
provided can ﬁnd application in other areas, such as e.g.
in the calculation of order parameters and correlations
functions for the study of phase transitions in discrete
quantum or classical systems.

Acknowledgments

This work was supported by the Brazilian funding
agencies: Conselho Nacional de Desenvolvimento Cien-
tíﬁco e Tecnológico (CNPq), processes 441875/2014-
9 and 303496/2014-2, Instituto Nacional de Ciência e
Tecnologia de Informação Quântica (INCT-IQ), process
2008/57856-6, and Coordenação de Desenvolvimento de
Pessoal de Nível Superior (CAPES), process 6531/2014-
08.
I gratefully acknowledges the hospitality of the
Physics Institute and Laser Spectroscopy Group at the
Universidad de la República, Uruguay.

[1] E. T. Jaynes, Probability Theory, The Logic of Science

(2009).

[12] R. Horodecki, P. Horodecki, M. Horodecki, and K.
Horodecki, Quantum entanglement, Rev. Mod. Phys. 81,
865 (2009).

[13] M. Li, S.-M. Fei, and X. Li-Jost, Quantum entanglement:
Separability, measure, ﬁdelity of teleportation, and dis-
tillation, Adv. Math. Phys. 2010, 301072 (2010).

[14] L. C. Céleri, J. Maziero, and R. M. Serra, Theoretical
and experimental aspects of quantum discord and related
measures, Int. J. Quantum Inf. 9, 1837 (2011).

[15] K. Modi, A. Brodutch, H. Cable, T. Paterek, and V.
Vedral, The classical-quantum boundary for correlations:
Discord and related measures, Rev. Mod. Phys. 84, 1655
(2012).

[16] D. O. Soares-Pinto, R. Auccaise, J. Maziero, A. Gavini-
Viana, R. M. Serra, and L. C. Céleri, On the quantum-
ness of correlations in nuclear magnetic resonance, Phil.
Trans. R. Soc. A 370, 4821 (2012).

[17] M. Ávila, G. H. Sun, and A. L. Salas-Brito, Scales of time
where the quantum discord allows an eﬃcient execution
of the DQC1 algorithm, Adv. Math. Phys. 2014, 367905
(2014).

[18] A. Streltsov, Quantum Correlations Beyond Entangle-
ment, and Their Role in Quantum Information Theory
(SpringerBriefs in Physics, 2015).

[19] A. Datta, A. Shaji, and C. M. Caves, Quantum discord
and the power of one qubit, Phys. Rev. Lett. 100, 050502
(2008).

[20] D. Cavalcanti, L. Aolita, S. Boixo, K. Modi, M. Piani,

(Cambridge University Press, New York, 2003).

[2] M. A. Carlton and J. L. Devore, Probability with Applica-
tions in Engineering, Science, and Technology (Springer,
New York, 2014).

[3] C. Gerry and P. Knight, Introductory Quantum Optics

(Cambridge University Press, New York, 2005).

[4] H.-P. Breuer and F. Petruccione, The Theory of Open
Quantum Systems (Oxford University Press, New York,
2002).

[5] S. Sachdev, Quantum Phase Transitions (Cambridge

University Press, New York, 2011).

[6] J. Hutchinson, J. P. Keating, and F. Mezzadri, On
relations between one-dimensional quantum and two-
dimensional classical spin systems, Adv. Math. Phys.
2015, 652026 (2015).

[7] L. Álvarez-Gaumé and M. Á. Vázquez-Mozo, An Invita-
tion to Quantum Field Theory (Springer, Berlin, 2012).
[8] M. A. Nielsen and I. L. Chuang, Quantum Computation
and Quantum Information (Cambridge University Press,
Cambridge, 2000).

[9] J. Preskill, Quantum Information and Computation,

http:// theory.caltech.edu/people/preskill/ph229/.

[10] M. M. Wilde, Quantum Information Theory (Cambridge

University Press, Cambridge, 2013).

[11] M. D. Reid, P. D. Drummond, W. P. Bowen, E. G.
Cavalcanti, P. K. Lam, H. A. Bachor, U. L. Andersen,
and G. Leuchs, The Einstein-Podolsky-Rosen paradox:
From concepts to applications, Rev. Mod. Phys. 81, 1727

and A. Winter, Operational interpretations of quantum
discord, Phys. Rev. A 83, 032324 (2011).

[21] S. Pirandola, Quantum discord as a resource for quantum

cryptography, Sci. Rep. 4, 6956 (2014).

[22] L. Roa, J. C. Retamal, and M. Alid-Vaccarezza, Disso-
nance is required for assisted optimal state discrimina-
tion, Phys. Rev. Lett. 107, 080401 (2011).

[23] M Piani, V Narasimhachar, and J Calsamiglia, Quan-
tumness of correlations, quantumness of ensembles and
quantum data hiding, New J. Phys. 16, 113001 (2014).

[24] B. Dakic, Y. O. Lipp, X. Ma, M. Ringbauer, S.
Kropatschek, S. Barz, T. Paterek, V. Vedral, A. Zeilinger,
Č. Brukner, and P. Walther, Quantum discord as re-
source for remote state preparation, Nat. Phys. 8, 666
(2012).

[25] D. Girolami, A. M. Souza, V. Giovannetti, T. Tufarelli,
J. G. Filgueiras, R. S. Sarthour, D. O. Soares-Pinto, I.
S. Oliveira, and G. Adesso, Quantum discord determines
the interferometric power of quantum states, Phys. Rev.
Lett. 112, 210401 (2014).

[26] T. K. Chuan, J. Maillard, K. Modi, T. Paterek, M. Pa-
ternostro, and M. Piani, Quantum discord bounds the
amount of distributed entanglement, Phys. Rev. Lett.
109, 070501 (2012).

[27] J. Maziero and R. M. Serra, Classicality witness for two-

qubit states, Int. J. Quantum Inf. 10, 1250028 (2012).

[28] R. Auccaise, J. Maziero, L. C. Celeri, D. O. Soares-Pinto,
E. R. deAzevedo, T. J. Bonagamba, R. S. Sarthour, I.
S. Oliveira, and R. M. Serra, Experimentally witnessing
the quantumness of correlations, Phys. Rev. Lett. 107,
070501 (2011).

[29] F. M. Paula, I. A. Silva, J. D. Montealegre, A. M. Souza,
E. R. deAzevedo, R. S. Sarthour, A. Saguia, I. S. Oliveira,
D. O. Soares-Pinto, G. Adesso, and M. S. Sarandy, Obser-
vation of environment-induced double sudden transitions
in geometric quantum correlations, Phys. Rev. Lett. 111,
250401 (2013).

[30] I. A. Silva, D. Girolami, R. Auccaise, R. S. Sarthour, I.
S. Oliveira, T. J. Bonagamba, E. R. deAzevedo, D. O.
Soares-Pinto, and G. Adesso, Measuring bipartite quan-
tum correlations of an unknown state, Phys. Rev. Lett.
110, 140501 (2013).

[31] G. H. Aguilar, O. Jiménez Farías, J. Maziero, R. M.
Serra, P. H. Souto Ribeiro, and S. P. Walborn, Experi-
mental estimate of a classicality witness via a single mea-
surement, Phys. Rev. Lett. 108, 063601 (2012).

[32] A. Bayat and S. Bose, Entanglement transfer through
an antiferromagnetic spin chain, Adv. Math. Phys. 2010,
127182 (2010).

[33] https://github.com/jonasmaziero/LibForQ.git.
[34] J. Maziero, Computing partial traces and reduced density

matrices, arXiv:1601.07458.

[35] E. Brüning, H. Mäkelä, A. Messina, and F. Petruccione,
Parametrizations of density matrices, J. Mod. Opt. 59, 1
(2012).

[36] R. A. Bertlmann and P. Krammer, Bloch vectors for qu-

dits, J. Phys. A: Math. Theor. 41, 235303 (2008).

[37] J. Maziero, Fortran code for generating random proba-
bility vectors, unitaries, and quantum states, Front. ICT
3, 4 (2016).

[38] Y. Huang, Computing quantum discord is NP-complete,

New J. Phys. 16, 033027 (2014).

6

[39] T. Chanda, T. Das, D. Sadhukhan, A. K. Pal, A. Sen
De, and U. Sen, Reducing computational complexity of
quantum correlations, Phys. Rev. A 92, 062301 (2015).

[40] S. Luo, Quantum discord for two-qubit systems, Phys.

Rev. A 77, 042303 (2008).

[41] S. Luo and Q. Zhang, Observable correlations in two-

qubit states, J. Stat. Phys. 136, 165 (2009).

[42] M. Ali, A. R. P. Rau, and G. Alber, Quantum discord
for two-qubit X states, Phys. Rev. A 81, 042105 (2010).
[43] J. Maziero, L. C. Celeri, and R. M. Serra, Symmetry

aspects of quantum discord, arXiv:1004.2082.

[44] D. Girolami and G. Adesso, Quantum discord for general
two-qubit states: Analytical progress, Phys. Rev. A 83,
052108 (2011).

[45] Q. Chen, C. Zhang, S. Yu, X. X. Yi, and C. H. Oh,
Quantum discord of two-qubit X states, Phys. Rev. A
84, 042313 (2011).

[46] A. S. M. Hassan, B. Lari, and P. S. Joag, Tight lower
bound to the geometric measure of quantum discord,
Phys. Rev. A 85, 024302 (2012).

[47] F. Ciccarello, T. Tufarelli, and V. Giovannetti, Toward
computability of trace distance discord, New J. Phys. 16,
013038 (2014).

[48] D. Spehner and M. Orszag, Geometric quantum discord
with Bures distance: the qubit case, J. Phys. A: Math.
Theor. 47, 035302 (2014).

[49] M. A. Jafarizadeh, N. Karimi, and H. Zahir, Quantum
discord for generalized Bloch sphere states, Eur. Phys. J.
D 68, 136 (2014).

[50] M. Daoud, R. Ahl Laamara, and S. Seddik, Hilbert-
Schmidt measure of pairwise quantum discord for three-
qubit X states, Rep. Math. Phys. 76, 207 (2015).

[51] A. Beggi, F. Buscemi, and P. Bordone, Analytical ex-
pression of genuine tripartite quantum discord for sym-
metrical X-states, Quantum Inf. Process. 14, 573 (2015).
[52] Y.-K. Wang, N. Jing, S.-M. Fei, Z.-X. Wang, J.-P. Cao,
and H. Fan, One-way deﬁcit of two-qubit X states, Quan-
tum Inf. Process. 14, 2487 (2015).

[53] Z. Ma, Z. Chen, F. F. Fanchini, and S.-M. Fei, Quantum

discord for d ⊗ 2 systems. Sci. Rep. 5, 10262 (2015).

[54] N. Jing, X. Zhang, and Y.-K. Wang, Comment on “One-
way deﬁcit of two qubit X states”, Quantum Inf. Process.
14, 4511 (2015).

[55] G. Li, Y. Liu, H. Tang, X. Yin, and Z. Zhang, Ana-
lytic expression of quantum correlations in qutrit Werner
states undergoing local and nonlocal unitary operations,
Quantum Inf. Process. 14, 559 (2015).

[56] P. C. Obando, F. M. Paula, and M. S. Sarandy, Trace-
distance correlations for X states and the emergence
of the pointer basis in Markovian and non-Markovian
regimes, Phys. Rev. A 92, 032307 (2015).

[57] A. Brodutch and K. Modi, Criteria for measures of quan-
tum correlations, Quantum Inf. Comp. 12, 0721 (2012).
[58] B. Dakić, V. Vedral, and Č. Brukner, Necessary and suﬃ-
cient condition for nonzero quantum discord, Phys. Rev.
Lett. 105, 190502 (2010).

[59] S. Luo and S. Fu, Geometric measure of quantum discord,

Phys. Rev. A 82, 034302 (2010).

[60] S. J. Akhtarshenas, H. Mohammadi, S. Karimi, and
Z. Azmi, Computable measure of quantum correlation,
Quantum Inf. Process. 14, 247 (2015).

