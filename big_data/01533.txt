6
1
0
2

 
r
a

 

M
0
3
 
 
]

.

C
O
h
t
a
m

[
 
 

3
v
3
3
5
1
0

.

3
0
6
1
:
v
i
X
r
a

AC Power Flow Data in MATPOWER and QCQP

format: iTesla, RTE Snapshots, and PEGASE

C´edric Josz, St´ephane Fliscounakis, Jean Maeght, and Patrick Panciatici

1

Abstract—In this paper, we publish nine new test cases in
MATPOWER format. Four test cases are French very high-voltage
grid generated by the ofﬂine plateform of iTesla: part of the data
was sampled. Four test cases are RTE snapshots of the full French
very high-voltage and high-voltage grid that come from French
SCADAs via the Convergence software. The ninth and largest test
case is a pan-European ﬁcticious data set that stems from the
PEGASE project. It complements the four PEGASE test cases
that we previously published in MATPOWER version 5.1 in March
2015. We also provide a MATLAB code to transform the data
into standard mathematical optimization format. Computational
results conﬁrming the validity of the data are presented in this
paper.

Index Terms—Static grid model, MATPOWER, grid data, AC
optimal power ﬂow, quadratically-constrained quadratic pro-
gramming.

I. INTRODUCTION

T HE purpose of our grid data publications is to con-

tribute to the progress of the power systems scientiﬁc
community. As power systems practitioners, we deﬁnitely
need improved power ﬂow computation methods. By sharing
data sets that we use on a daily basis, we hope to help the
community develop faster and more reliable optimal power
ﬂow methods.

In arXiv, in the download table (other format), source code
for the article is delivered as a gzipped tar (.tar.gz) ﬁle. It
contains the nine test cases as MATLAB .m ﬁles.

A lot of European public grid data are already available
in various formats [1], [2]. The advantage of the data we
are providing is that we have written them in the format of
MATPOWER [20]. It also worth to mention the major work
made in [10] to document all of the AC power transmission
system data that is publicly available.

II. ORIGIN OF THE DATA

A. iTesla

iTesla stands for: Innovative Tools for Electrical System
Security within Large Areas; it is a large collaborative R&D
project co-funded by the EC 7th Framework Programme.
Detailed information may be found on the web site of the
project [3] and was presented during dissemination events [4],
[5]. In the ofﬂine platform of iTesla, a monte-carlo process
is run. Loads and uncontrollable generation (mainly solar and
wind power) are sampled. From these sampled values, and
for each monte-carlo run, a full AC network state is built to

The authors are with the French transmission system operator RTE, 9
rue de la Porte de Buc, BP 561, F-78000 Versailles, France. E-mails:
firstname.lastname@rte-france.com

serve as a starting point for time domain simulations (e.g. with
Eurostag simulation software). Thousands of such processes
were run during iTesla project, using High Performance Com-
puting facilities (10,000 cores). Only 4 are published here. 2 of
them contain French VHV grid, and 2 of them contain French
VHV grid and HV grid of the area of Marseille-Nice (French
Riviera).

B. Convergence

Convergence is the main network analysis tool used in RTE.
It is fully developped and maintained by RTE’s R&D teams.
Convergence is used for several time horizon usages: real time
advance computations (state estimation, N-1 security analysis),
operational planning and grid development. It embeds in a
single platform (and single Graphical User Interface) many
computation models: Load Flow computation model (named
HADES), slow dynamics (ASTRE, to simulate voltage sta-
bility with online tap changers transformers actions), short
circuit computation (COURCIRC), ﬂow-based market cou-
pling parameters, HVDC set point optimization (TOPAZE),
several OPFs, and some others... Convergence is also used
in Coreso (European coordination center based in Brussels,
Belgium) thanks to its coordination facilities: merging and
analysis of European network ﬁles coming from D2CF (two
days ahead capacity forecast), DACF (day ahead congestion
forecast), IDCF (intra-day congestion forecast) processes. It is
also used in real time in Coreso to merge and perform security
analysis for European Snapshot ﬁles. Concerning network
data, Convergence is directly connected to the French national
SCADA and the 7 regional SCADAs. Convergence gets every
5 minutes a full static network data from these 8 SCADAs,
including equipment description, topology and state variables.
Convergence performs merging of these 8 views of the French
network (one national for Very High Voltage: 400kV and
225kV; 7 regional for High Voltage: 63kV to 150kV) to get
a full consistent VHV+HV (63kV to 400kV) view of French
transmission and sub-transmission Grid. Step-up transformers
(20kV to 225kV or 400kV) are also included in grid data. As
already mentioned, in France Convergence is used with data
coming directly from SCADAs. But it is also able to import
and export grid data in UCTE and CIM [1] formats. Eurostag
format is also supported (import and export). In this paper, 4
VHV+HV snapshot cases are published: they have more than
6000 nodes, more than 50% are 63kV nodes.

C. PEGASE

The Pan European Grid Advanced Simulation and State
Estimation (PEGASE) is a project of the 7th Framework

Program of the European Union [6]. Its goal was to develop
new tools for the real-time control and operational planning of
the pan-Euporean transmission network [11]. Speciﬁcally, new
approaches were implemented for state estimation, dynamic
security analysis, and steady state optimization. A dispatcher
training simulator was also created.

The data accurately represents the size and complexity of
the European high voltage transmission network. However, the
data are ﬁctitious and do not correspond to real world data.
They can thus be used to validate methods and tools but should
not be used for operation and planning of the European grid.

III. CONVERSION OF THE DATA

Some modiﬁcations to the original grid data were made in

order to ﬁt them into the MATPOWER format.

Concerning the snapshots,

the generating units with
pumped-storage capabilities could not be represented in
MATPOWER format. Indeed, generating units with negative
generation values are considered by MATPOWER as dispatch-
able loads. The way dispatchable loads and pumped-storage
units are operated are signiﬁcantly different, since pumped-
storage units may work even if power prices are high because
the stored energy is needed in the near future if power prices
are expected to be higher. Moreover, reactive power production
is not the same for dispatchable loads and for pumped-storage
units. For these reasons, all generating units with Pmin lower
than zero in our snapshot data have been converted into
generating units with Pmin equals to zero.

Although some aspects of snapshots data might seem
strange,
that’s the way they are in our network analysis
tools. The most meshed 380kV bus is really connected to
17 branches; this is not an artefact. Neighbouring countries
are approximately represented with Ward equivalents; so these
parts are not real. But they are really parts of data used
in our SCADAs and network analysis tools. Some of these
equivalent parts, as well as equivalent representation of 3-
windings transformers, may lead to (small) negative reactances
or resistances. To summarize, the data published in this article
allow to build OPF problems that we really have to solve;
iTesla data and PEGASE date share this property.

PEGASE data contains asymmetric shunt conductance and
susceptance in the PI transmission line model of branches.
However, MATPOWER format does not allow for asymmetry.
As a result, we set the total line charging susceptance of
branches to 0 per unit
in the MATPOWER ﬁles. Instead,
we used the nodal representation of shunt conductance and
susceptance. This procedure leaves the power ﬂow equations
unchanged compared with the original PEGASE data. How-
ever, line ﬂow constraints in the optimal power ﬂow problem
are modiﬁed.

IV. DESCRIPTION OF THE DATA

In this section we give a few ﬁgures about the network

cases.

2

A. General ﬁgures

This ﬁrst table gives for each case the number of buses,

generating units, branches and transformers.

Case Name
case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

Bus.
89
1 354
1 888
1 951
2 848
2 868
2 869
6 468
6 470
6 495
6 515
9 241
13 659

Gen.
12
260
297
391
547
599
510
1 295
1 330
1 372
1 388
1 445
4 092

Bran.
210
1 991
2 531
2 596
3 776
3 808
4 582
9 000
9 005
9 019
9 037
16 049
20 467

Tran.
32
234
405
486
558
606
496
1 319
1 333
1 359
1 367
1 319
5 713

The next table gives the range of Voltage Levels that are

included in each case.

Case Name
case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

Voltage Levels (kV)

380 220 150

380 220

380 225 150 90 63 & 24→3
380 225 150 90 63 & 24→3

380 225 150 63 & 45→3
380 225 150 63 & 45→3

380 220 150 110

380 225 150 90 63 & 45→3
380 225 150 90 63 & 45→3
380 225 150 90 63 & 45→3
380 225 150 90 63 & 45→3

750 400 380 330 220 154 150 120 110
750 400 380 330 220 154 150 120 ...

110 & 27→0.4

The next table gives the number of buses for each main

Voltage Level category.

Number of Nodes per Voltage Level

≥330kV 225kV ≤154kV ≤63kV ≤27k

Case Name
case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

50
241
349
350
347
351
629
524
525
525
525
1945
1945

220kV ≥ 90kV ≥45kV
0
0
8
8
915
918
0
3151
3150
3152
3153
0
0

34
0
61
62
59
59
492
1183
1183
1184
1184
4111
4111

5
1113
1174
1185
1177
1193
1748
1274
1277
1277
1283
3185
3185

0
0
296
346
350
347
0
336
335
357
370
0
4418

Although pegase cases 89, 1354, 2869 and 9241 were
already published in MATPOWER in 2015, we include them
in description and result tables.

The next table gives the number of branches with negative
resistance R and the number of branches with negative reac-
tance X. There is no branch with both negative R and X.

Case Name
case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

Branches R<0 Branches X<0
0
0
77
76
75
77
0
80
80
80
80
16
16

0
0
0
0
0
0
0
0
0
0
0
75
78

1

0.5

)

(

V
m

I

0

-0.5

-1

B. Impedances and voltages

In this section we give an outlook on data, using illustrative
graphs. For 3 cases, a ﬁrst graph shows norm of impedances of
all lines, in descending order and logarithmic scale. A second
graph shows the complex values of voltages of all buses; the
circles on these graphs are corresponding to 0.9 and 1.1 p.u.

Among the 4 iTesla cases, we show these two graphs for
case2868rte. Among the 4 RTE snapshot cases, we show these
two graphs for case6515rte. For PEGASE cases, we chose to
show the graphs for the largest case: case13659pegase.

|

Z

|
 

g
o

l

1

0.5

0

-0.5

-1

-1.5

-2

-2.5

-3

-3.5

-4

-4.5

3

Voltages in complex plane of case2868rte

-1

-0.5

0

Re(V)

0.5

1

Impedances of case6515rte in decreasing order

0

1000

2000

3000

4000

5000

branches

6000

7000

8000

9000

|

Z

|
 

g
o

l

0.5

0

-0.5

-1

-1.5

-2

-2.5

-3

-3.5

-4

-4.5

Impedances of case2868rte in decreasing order

Voltages in complex plane of case6515rte

1

0.5

)

(

V
m

I

0

-0.5

-1

0

500

1000

1500

2000
branches

2500

3000

3500

4000

-1

-0.5

0

Re(V)

0.5

1

2

1

0

|

Z

|
 

g
o

l

-1

-2

-3

-4

Impedances of case13659pegase in decreasing order

0

0.5

1

branches

1.5

2

×104

Voltages in complex plane of case13659pegase

1

0.5

)

(

V
m

I

0

-0.5

-1

-1

-0.5

0

Re(V)

0.5

1

V. NUMERICAL RESULTS

A. Using Knitro to ﬁnd feasible solutions

With Knitro [7] as interior point solver, we were able to
run MATPOWER Optimal Power Flow (’runopf’). We found
out that MATPOWER option for Knitro ’xtol’ is set to 0.0001,
which is too large. Using an option ﬁle for Knitro (ﬁle
’knitro.opt’), we could modify ’xtol’ parameter of Knitro.

Options for Knitro in knitro.opt

1e-8

5e-6 (default value of MATPOWER)
1e-4 (default value of MATPOWER)

1000

xtol
feastol
opttol
maxit

All OPF could be solved with this parameterization of

Knitro.

Using Knitro to solve a non convex problem gives a solution
which is expected to satisfy local optimality conditions. In this
paper, the fact that the result of Knitro is a local solution is
not used. Instead, we simply use the property that Knitro’s
solution is a feasible solution for OPF problem. Any other

4

software, any other optimization method, any other heuristic
might be used to ﬁnd better feasible solution of OPF.

For instance, a method to ﬁnd a better feasible solution of

OPF could be:

1) From original OPF, create a modiﬁed OPF with better
numerical properties (e.g. agregation of electrical nodes
with very small electric distances as in [16]); eventually
also add penalty terms in OPF [13], [14], [16], [18].

2) Solve to global optimality the modiﬁed OPF.
3) Use the solution of the modiﬁed OPF to build a feasible

solution for original OPF.

In any case, ﬁnding better feasible solutions for OPF will
not be enough: ﬁnding better lower bounds will also help to
achieve global optimality for OPF.

B. Basic evaluation of optimality gap

Semideﬁnite programming is now known to be able to give
good lower bounds for OPF problem. However, comparisons
with basic lower bounds may not be avoided.

In the next table, the ﬁrst column contains result of DCOPF
with Mips (default solver of MATPOWER), without ﬂow limits.
As our cost functions are all linear with costs equal to 1, it
means that our objective function is simply minimizing the
total sum of generation, or equivalently losses minimization.
As losses are neglected in DC modelling, optimal value of
our DCOPFs is to be equal to the sum of loads. So why
writing here the results of these DCOPF ? Because it is a trivial
lower bound of ACOPF. In case cost functions really embed
generating units different costs, results of DCOPF without ﬂow
constraints will also be a basic lower bound of ACOPF. In the
next table, the second column shows result of ACOPF (without
ﬂow constraints) solved with Knitro. Using the basic lower
bound computed with DCOPF, optimality may be computed
in the third column.

Case9241pegase and case13659pegase have branches with
negative resistances; for these two cases, DCOPF result is not
a strict lower bound of OPF, since pushing a lot of power
through branches with negative resistances would create active
power. For this reason, the two last optimality values are not
sure.

Losses minimization without ﬂow constraints
Algorithm:
Solver:

DCOPF

case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

Mips
5 733.4
73 059.7
59 110.5
80 656.5
52 562.3
78 826.3
132 447.2
85 296.9
96 592.4
103 916.1
107 264.0
312 411.0
381 773.4

OPF
Knitro
5 817.6
74 060.4
59 769.9
81 724.2
53 020.9
79 783.4
133 980.7
86 791.8
98 308.0
105 943.6
109 561.2
315 888.5
386 107.5

Optimality

1.47%
1.37%
1.12%
1.32%
0.87%
1.21%
1.16%
1.75%
1.78%
1.95%
2.14%
1.11%?
1.14%?

Although solving ACOPF with Knitro usually gives only a
local optimum, without any information whether this optimum
might be global, interestingly we can see that all Knitro (local)
solutions are 0.87% to 2.14% optimal. To our opinion, any
method that gives results with larger proven optimality bounds
can not claim to give good results. Moreover, precision of nu-
merical methods should always be compared to the precision
of the pair (DCOPF;easily obtained feasible solution).

C. OPF with or without ﬂow constraints

We made three series of computation. First series was with
ﬂow limits in terms of apparent power (in MVA, using option
’S’ of MATPOWER), second series was with ﬂow limits in
terms of current (in Amperas, using option ’I’ of MATPOWER).
Third series was without any limit on ﬂows. Results are shown
in the next table.

OPF for losses minimization with/without ﬂow limits

5 819.8
74 069.4
59 805.1
81 737.7
53 021.8
79 794.7
133 999.3
86 860.0
98 345.5
106 283.4
109 804.2
315 912.7
386 107.5

5 817.6
74 064.2
59 808.5
81 737.4
53 021.9
79 794.5
133 993.5
86 841.8
98 325.4
106 215.7
109 767.8
315 903.3
386 107.5

Case Name
case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

Flow Lim. ’S’ Flow Lim. ’I’ No Limit
5 817.6
74 060.4
59 769.9
81 724.2
53 020.9
79 783.4
133 980.7
86 791.8
98 308.0
105 943.6
109 561.2
315 888.5
386 107.5
Reader will immediately notice that values with/without
ﬂow limits are very similar, and even identical for the largest
case (case13659pegase). This is not abnormal. RTE snapshots
are real observed data, Pegase and iTesla data were constructed
to be realistic. In real life grid operation, N-1 rule implies
that almost everywhere, lines are within their limits. Moreover,
French grid was historically built to optimally serve load and
production schemes for all situations; policy for construction
of new uncontrollable renewable energy production (wind,
solar) was to encourage small units distributed throughout the
whole country, with limited impact on transmission grid so
far. This situation is evolving fast, but snapshot data are from
year 2013. Occasionnaly, some lines may be over their limits:
temporary admissible limits are used by operators, they usually
have a 20 minutes time window to take corrective actions.

D. Lower bounds with SDPOPF

In this section we tried to obtain lower bounds via semidef-
inite programming. We used SDPOPF solver provided by
Daniel K. Molzahn [17] in MATPOWER, with Sedumi [8], [19]
and Mosek [9] SDP solvers.

We would like to address a special thank to Dan K. Molzahn
for helping us using his SDPOPF solver. He pointed out to us
that in order to have lower SDP bounds of our original OPF
problems, some options of SDPOPF has to be set:

5

Options for SDPOPF in order to compute lower bounds

mpopt.sdp_pf.eps_r = -inf
→ Do not enforce a minimum resistance
mpopt.sdp_pf.min_Pgen_diff = 0
→ Disable enforcing ﬁxed value when small range for Pgen
mpopt.sdp_pf.min_Qgen_diff = 0
→ Disable enforcing ﬁxed value when small range for Qgen
mpopt.sdp_pf.max_line_limit = inf
→ Disable elimination of large line limits
mpopt.sdp_pf.max_gen_limit = inf
→ Disable elimination of large generation limits

In the next table we compare the computed bounds; we

expect to have each line sorted in ascending order:

1) DCOPF value, basic lower bound of the optimal value,
2) then the value of the SDP relaxation computed by
SDPOPF, ideally the values obtained by the two different
SDP solvers would be equal,

3) and then, in the OPF column, a feasible solution of
our OPF problem, giving an upper bound to the OPF
problem.

Losses minimization without ﬂow constraints

Algorithm:
Solver:

case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

DCOPF

Mips
5 733.4
73 059.7
59 110.5
80 656.5
52 562.3
78 826.3
132 447.2
85 296.9
96 592.4
103 916.1
107 264.0
312 411.0
381 773.4

SDPOPF
Sedumi
5 817.6
74 052.8
59 572.0
81 718.7
53 006.6
79 782.9
133 970.9
86 754.5
98 305.0
105 969.7
109 560.7
310 723.5
381 047.8

SDPOPF
Mosek
5 817.6
74 049.5
59 557.7
81 706.4
52 986.4
79 769.1
133 964.6
86 726.2
98 277.0
105 919.4
109 533.5
310 697.1
381 027.7

OPF
Knitro
5 817.6
74 060.4
59 769.9
81 724.2
53 020.9
79 783.4
133 980.7
86 791.8
98 308.0
105 943.6
109 561.2
315 888.5
386 107.5

First, it is very interesting to note that extra large problems
(6 to 13 thousends of buses) could be addressed by SDPOPF
without reaching the limits of our 48GB RAM computer.
We also tried SDPT3 instead of Sedumi or Mosek, but we
encountered matlab exceptions with cases larger than 6000
buses.

Second, looking more precisely into log ﬁles, we could
see that
in all cases, Sedumi ended its computation with
message Run into numerical problems and Mosek
with message Mosek error: MSK_RES_TRM_STALL().
It means that SDP solvers are not totally mature yet to solve
our problems, and we have to take care using their results. For
instance, case6494rte has its Sedumi SDP lower bound larger
than OPF/Knitro value; obviously the SDP value is not well
computed. For this reason, we think that results obtained with
Sedumi are not precise enough to claim that, e.g., case6515rte
would be solved to global optimality with an error smaller
than 0.5MW.

Third, SDP lower bounds are smaller than DCOPF values
for the two largest cases. This is certainly due to the presence
of negative resistances in these two cases: DCOPF values are

not lower bounds of OPF and the only lower bounds we have
are the SDP ones. This point was already mentioned in [12],
when analyzing results of the Shor relaxation in Table 2 of
[12].

Last, with Mosek all results seems consistent. For the two
largest cases, global optimality is proven only to 1.7% and
1.3%, which are not very good values (order of magnitude of
the losses). case1888rte’ optimality is 0.36

Note that OPF (Knitro) results are not impacted by precision
issues: running again the OPF (Knitro) column with feastol
equals to 1e-10 gives the same results.

As a conclusion, in the next table, we compare global
optimality proofs obtained with DCOPF (Mips solver) and
SDPOPF (Mosek solver).

Global Optimality proofs

case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

DCOPF
1.47%
1.37%
1.12%
1.32%
0.87%
1.21%
1.16%
1.75%
1.78%
1.95%
2.14%
not valid
not valid

SDPOPF
0.00%
0.01%
0.36%
0.02%
0.07%
0.02%
0.01%
0.08%
0.03%
0.02%
0.03%
1.67%
1.33%

E. Global optimality quest

Our goal is to be able, in the near future, to prove global
optimality (with precision 10−5 or 10−6) for all these cases.
From operational point of view, it is worth to spend time
to compute a global optimum? Non global method such as
interior point methods have been sucessfully used for about
20 years to solve OPF problems, so is global optimality
necessary? Isn’t it only a game for scientists, with no industrial
consequence?

Our answer to this question is in a larger view of opti-
mization methods for grid operations and development. Once
continuous OPF will be solved to global optimality (for
losses minimization, but also with all kinds of generation
costs), we’ll start addressing global optimization of OPF with
discrete variables (e.g. on/off generating units statuses, but
also PST taps, discrete shunts, topology choices...). When
global optimality of OPF will be easily available, we’ll be
able to solve bilevel programs such as in [15], for which global
optimality of OPF is necessary as OPF are subproblems of a
wider framework.

VI. MATHEMATICAL FORMAT

In addition to the grid data, we provide a code
qcqp_opf.m that converts any MATPOWER test case data
into a standard mathematical optimization format. Its purpose
is to allow members of the applied mathematics community
to evaluated their methods on the test cases without requiring

6

any knowledge in power systems. Precisely, the MATPOWER
test cases are converted into large-scale sparse quadratically-
constrained quadratic programs (QCQP). Indeed, the opti-
mal power ﬂow problem can be viewed as an instance of
quadratically-constrained quadratic programming. In order for
this to be true, we consider the objective function of the
optimal power ﬂow problem to be a linear function of active
power. Higher degree terms are discarded from the objective
function. Moreover, current line ﬂow constraints are enforced
instead of apparent line ﬂow constraints in order to have
quadratic constraints only. The optimal power ﬂow problem
remains non-convex and non-deterministic polynomial-time
hard despite the slightly simpliﬁed framework we consider.
Notice that for rte and pegase cases (minimization of the total
generation) there is no simpliﬁcation: QCQP formulation is
equivalent to OPF with current line ﬂow constraints.

The standard format we use is described below where x is

a column vector of size nVAR:

QCQP:

inf
x

x′Cx + c

subject to nEQ equality constraints

x′Akx = ak ,

∀k = 1...nEQ,

and subject to nINEQ inequality constraints

x′Bkx 6 bk ,

∀k = 1...nINEQ,

(1)

(2)

(3)

where C, Ak’s, and Bk’s are squares matrices of size nVAR,
a, b are column vectors, and the apostrophe stands for conju-
gate transpose. The code provides matrices that either com-
plex, Hermitian, or real symmetric depending on an input
parameter (see comments in code for details). Depending on
this input parameter, column vectors x, a and b are either
complex or real.

The following table shows the size of the QCQP instances in
real numbers. The right column corresponds to the percentage
of monomials that have a non-zero coefﬁcient in the objective
or constraints compared to the total number of possible mono-
mials (in the case of a fully dense QCQP problem). It shows
that the OPF is a very sparse problem so we believe that it is
possible to solve these instances to global optimality.

Case Name
case89pegase
case1354pegase
case1888rte
case1951rte
case2848rte
case2868rte
case2869pegase
case6468rte
case6470rte
case6495rte
case6515rte
case9241pegase
case13659pegase

nVAR
178
2 708
3 776
3 902
5 696
5 736
5 738
12 936
12 940
12 990
13 030
18 482
27 318

nEQ nINEQ Spa. (%)
5.23
154
0.19
2 188
0.13
3 222
3 162
0.12
0.08
4 904
0.08
4 850
0.10
4 718
11 652
0.04
0.04
11 588
0.04
11 562
0.04
11 576
15 592
0.03
0.02
19 134

380
6 612
9 036
9 580
11 742
12 070
13 264
20 130
21 864
22 064
22 200
36 852
43 686

VII. CONCLUSION

In this paper our goal is to publish very realistic data, being
used every day by a large Transmission System Operator.
Elementary description of data and their origin are included.
Preliminary OPF results are also provided.

We aim to publish new versions of this document in the
future, with additional numerical results (e.g. better upper or
lower bounds) coming either from our own research activities
or from other public academic works.

All cases mentioned in this paper are included in this arXiv
publication (in the source tar ﬁle that can be donwloaded from
arXiv), except the PEGASE cases that were already published
in MATPOWER in 2015.

A MATLAB code to transform OPF data to standard QCQP
mathematical optimization format is also included, with the
hope that it will help mathematicians address these problems
without power system skills.

Moreover, a few m-ﬁles are also included in the tar ﬁle, in
order to help scientiﬁc OPF community to uses these data and
to reproduce results.

REFERENCES

[1] French network data published for testing CIM software :

https://www.entsoe.eu/major-projects/common-information-model-cim/
cim-for-grid-models-exchange/cgmes-conformity/Pages/default.aspx
(click ”Test Conﬁgurations”)
https://www.entsoe.eu/Documents/CIM documents/Grid Model CIM/
CGMES v2.4.15 TestConﬁgurations v4.0.3.zip .

7

[11] S. Fliscounakis, P. Panciatici, F. Capitanescu, and L. Wehenkel. Contin-
gency Ranking with Respect to Overloads in Very Large Power Systems
Taking into Account Uncertainty, Preventive and Corrective Actions.
IEEE Trans. Power Syst., 28(4):4909–4917, 2013.

[12] C. Josz and D. K. Molzahn. Moment/Sum-of-Squares Hierarchy for
Complex Polynomial Optimization. Submitted to SIAM J. Optim., 2015.
[13] R. Madani, M. Ashraphijuo, and J. Lavaei. Promises of Conic Relaxation
for Contingency-Constrained Optimal Power Flow Problem.
In 52nd
Annu. Allerton Conf. Commun., Control, Comput., pages 1064–1071,
Sept. 2014.

[14] R. Madani, S. Sojoudi, and J. Lavaei. Convex Relaxation for Optimal
IEEE Trans. Power Syst.,

Power Flow Problem: Mesh Networks.
30(1):199–211, Jan. 2015.

[15] Alexander Mitsos. Global solution of nonlinear mixed-integer bilevel

programs. Journal of Global Optimization, 47(4):557–582, 2009.

[16] D. Molzahn, C. Josz, I. Hiskens, and P. Panciatici.

Solution of
optimal power ﬂow problems using moment relaxations augmented with
objective function penalization.
In 2015 54th IEEE Conference on
Decision and Control (CDC), pages 31–38, Dec 2015.

[17] D.K. Molzahn, J.T. Holzer, B.C. Lesieutre, and C.L. DeMarco.

Im-
plementation of a Large-Scale Optimal Power Flow Solver Based on
Semideﬁnite Programming.
IEEE Trans. Power Syst., 28:3987–3998,
2013.

[18] D.K. Molzahn, C. Josz, I.A. Hiskens, and P. Panciatici. A Laplacian-
Based Approach for Finding Near Globally Optimal Solutions to OPF
Problems. Submitted. Preprint available: http://arxiv.org/abs/1507.07212.
[19] J.F. Sturm. Using SeDuMi 1.02, A Matlab Toolbox for Optimization

over Symmetric Cones. Optim. Method Softw., 11:625–653, 1999.

[20] R.D. Zimmerman, C.E. Murillo-S´anchez, and R.J. Thomas. MAT-
POWER: Steady-State Operations, Planning, and Analysis Tools for
Power Systems Research and Education.
IEEE Trans. Power Syst.,
(99):1–8, 2011.

[2] European public equipment descriptions

https://clients.rte-france.com/lang/an/visiteurs/vie/indispos

France:
caracteristiques statiques.jsp
Belgium: http://www.elia.be/en/grid-data/Grid-Technical-Data
Germany: http://www.amprion.net/statisches-netzmodell
http://www.amprion.net/en/static-grid-model
Germany: http://www.tennettso.de/site/Transparenz/veroeffentlichungen/
statisches-netzmodell/statisches-netzmodell
Germany:
engpassmanagement/standards-zukunft
Iceland: http://www.maths.ed.ac.uk/optenergy/NetworkData/iceland/
UK: http://www.maths.ed.ac.uk/optenergy/NetworkData/fullGB/
Public information on French generating units:
https://clients.rte-france.com/lang/an/visiteurs/vie/prod/accueil.jsp .

https://www.transnetbw.de/de/strommarkt/

[3] iTesla: Innovative Tools for Electrical System Security within Large

Areas http://www.itesla-project.eu.
Electronic versions of most papers and presentations of iTesla project
are available online here:
http://www.itesla-project.eu/publications .

[4] iTesla dissemination workshop on Probabilistic Risk-Based Approach to
Network Security Assessment, August 22nd 2014, Paris. Dissemination
presentations available online here:
http://www.itesla-project.eu/system/resources/
BAhbBlsHOgZmSSI+MjAxNC8wOC8yNi8xNl8yNl8wOV85MTNfTW9ybmluZ19zZXNzaW9uX0Z1bGxfT3ZlcnZpZXcuemlwBjoGRVQ/
MorningsessionFullOverview.zip .

[5] Final

iTesla Workshop: Network Security Assessment days, 4-5
November 2015, Brussels. Dissemination presentations available online
here:
http://www.itesla-project.eu/key-project-events/network-security-
assessment-days-download-page .

[6] Pan European Grid Advanced Simulation and State Estimation (PE-

GASE), 7th Framework Program, http://www.fp7-pegase.com/ .

[7] Artelys Knitro - Nonlinear optimization solver:

http://www.artelys.com/en/optimization- tools/knitro.

[8] SeDuMi: A linear/quadratic/semideﬁnite solver for Matlab and Octave,

commit of 2015/07/07 on repository: http://github.com/sqlp/sedumi.

[9] The MOSEK Optimization Toolbox for MATLAB Manual version 7.1

revision 49. http://docs.mosek.com/7.1/toolbox/.

[10] Carleton Coffrin, Dan Gordon, and Paul Scott. Nesta, the NICTA energy

system test case archive. http://arxiv.org/abs/1411.0359, 2015.

