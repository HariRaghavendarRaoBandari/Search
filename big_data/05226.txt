6
1
0
2

 
r
p
A
5

 

 
 
]

R
C
.
s
c
[
 
 

2
v
6
2
2
5
0

.

3
0
6
1
:
v
i
X
r
a

Explicit Non-Malleable Extractors, Multi-Source Extractors and

Almost Optimal Privacy Ampliﬁcation Protocols

Eshan Chattopadhyay∗

Xin Li

Department of Computer Science,

Department of Computer Science

University of Texas at Austin

eshanc@cs.utexas.edu

John Hopkins University

lixints@cs.jhu.edu

April 6, 2016

Abstract

We make progress in the following three problems: 1. Constructing optimal seeded non-
malleable extractors; 2. Constructing optimal privacy ampliﬁcation protocols with an active
adversary, for any possible security parameter; 3. Constructing extractors for independent weak
random sources, when the min-entropy is extremely small (i.e., near logarithmic).

For the ﬁrst two problems, the best known non-malleable extractors by Chattopadhyay,
Goyal and Li [CGL16], and by Cohen [Coh16a,Coh16b] all require seed length and min-entropy
at least log2(1/ε), where ε is the error of the extractor. As a result, the best known explicit
privacy ampliﬁcation protocols with an active adversary, which achieve 2 rounds of communi-
cation and optimal entropy loss in [Li15c, CGL16], can only handle security parameter up to
s = Ω(√k), where k is the min-entropy of the shared secret weak random source. For larger
s the best known protocol with optimal entropy loss in [Li15c] requires O(s/√k) rounds of
communication.

In this paper we give an explicit non-malleable extractor that only requires seed length
and min-entropy log1+o(1)(n/ε), which also yields a 2-round privacy ampliﬁcation protocol with
optimal entropy loss for security parameter up to s = k1−α for any constant α > 0.

For the third problem, previously the best known extractor which supports the smallest
min-entropy due to Li [Li13a], requires min-entropy log2+δ n and uses O(1/δ) sources, for any
constant δ > 0. A very recent result by Cohen and Schulman [CS16] improves this, and con-
structed explicit extractors that use O(1/δ) sources for min-entropy log1+δ n, any constant δ > 0.
In this paper we further improve their result, and give an explicit extractor that uses O(1) (an
absolute constant) sources for min-entropy log1+o(1) n.

The key ingredient in all our constructions is a generalized, and much more eﬃcient version
of the independence preserving merger introduced in [CS16], which we call non-malleable inde-
pendence preserving merger. Our construction of the merger also simpliﬁes that of [CS16], and
may be of independent interest.

∗Partially supported by NSF Grant CCF-1526952 and a Dissertation Writing Fellowship awarded by UT Austin.

1

Introduction

The theory of randomness extractors is a broad area and a fundamental branch of the more general
study of pseudorandomness. Informally, randomness extractors are functions that transform biased
probability distributions (weak random sources) into almost uniform probability distributions. Here
we measure the entropy of a weak random source by the standard min-entropy. A source X is said
to have min-entropy k if for any x, Pr[X = x] ≤ 2−k. An (n, k)-source X is a distribution on n bits
with min-entropy at least k.

It is well known that it is impossible to construct deterministic randomness extractors when
the input is just one (arbitrary) weak random source, even if the min-entropy is as large as n − 1.
A natural relaxation is then to give the extractor a short independent uniform seed, and such
extractors are called seeded extractors. With this relaxation it is indeed possible to construct
extractors that work for any weak random source with essentially any min-entropy. We now formally
deﬁne such extractors.
Deﬁnition 1.1. The statistical distance between two distributions D1 and D2 over some universal
2Pd∈Ω |Pr[D1 = d] − Pr[D2 = d]|. We say D1 is ǫ-close to D2 if
set Ω is deﬁned as |D1 − D2| = 1
|D1 − D2| ≤ ǫ and denote it by D1 ≈ǫ D2.
Deﬁnition 1.2 ([NZ96]). A function Ext : {0, 1}n × {0, 1}d → {0, 1}m is a seeded extractor for
min-entropy k and error ǫ if for any source X of min-entropy k, |Ext(X, Ud) − Um| ≤ ǫ. Ext is
strong if in addition |(Ext(X, Ud), Ud) − (Um, Ud)| ≤ ǫ, where Um and Ud are independent.

Through a long line of research we now have explicit constructions of seeded extractors with

almost optimal parameters [LRVW03, GUV09, DKSS09].

In recent years, there has been much interest in the study of two other kinds of randomness
extractors. The ﬁrst one, known as non-malleable extractors (introduced by Dodis and Wichs
[DW09]), is a generalization of strong seeded extractors.
Deﬁnition 1.3 (Non-malleable extractor). A function nmExt : {0, 1}n ×{0, 1}d → {0, 1}m is a (k,
ǫ)-non-malleable extractor if the following holds: For any (n, k)-source X, an independent uniform
seed Y on d bits and any function A : {0, 1}d → {0, 1}d with no ﬁxed points,1

|(nmExt(X, Y), nmExt(X,A(Y)), Y) − (Um, nmExt(X,A(Y)), Y)| ≤ ǫ.

The second one, known as multi-source extractors (ﬁrst studied by Chor and Goldreich [CG88]),
is another natural relaxation of deterministic extractors for one weak random source, in the sense
that now the input to the extractor are several (at least two) independent weak random sources.
Curiously, although this problem was ﬁrst studied around 30 years ago, it was not until recently
that signiﬁcant progress has been achieved.

The above two kinds of extractors are closely related, and in many cases techniques used for
one can also be used to improve the constructions of the other. These connections have been
demonstrated in a number of works (e.g., [Li12b, Li13b, Li13a, Li15d, CZ16]).

We now brieﬂy discuss the motivations for these two kinds of extractors.

1.1 Non-malleable extractors and privacy ampliﬁcation

The initial motivation for non-malleable extractors comes from the problem of privacy ampliﬁcation
with an active adversary [BBR88, Mau92, BBCM95]. As a basic problem in information theoretic

1i.e., for any x, A(x) 6= x

1

cryptography, privacy ampliﬁcation deals with the case where two parties want to communicate
with each other to convert their shared secret weak random source X into shared secret nearly
uniform random bits. On the other hand, the communication channel is watched by an adversary
Eve, who has unlimited computational power. To make this task possible, we assume two parties
have local (non-shared) uniform random bits.

If Eve is passive (i.e., can only see the messages but cannot change them), this problem can be
solved easily by applying the aforementioned strong seeded extractors. However, in the case where
Eve is active (i.e., can arbitrarily change, delete and reorder messages), the problem becomes much
more complicated. The major challenge here is to design a protocol that uses as few number of
interactions as possible, and outputs a uniform random string R that has length as close to H∞(X)
as possible (the diﬀerence is called entropy loss). A bit more formally, we pick a security parameter
s, and if the adversary Eve remains passive during the protocol then the two parties should achieve
shared secret random bits that are 2−s-close to uniform. On the other hand, if Eve is active, then
the probability that Eve can successfully make the two parties output two diﬀerent strings without
being detected should be at most 2−s. We refer the readers to [DLWZ14] for a formal deﬁnition.

There has been a long line of work on this problem [MW97, DKRS06, DW09, RW03, KR09,
CKOR10, DLWZ14, CRS14, Li12a, Li12b, Li15c, ADJ+14]. When the entropy rate of X is large, i.e.,
bigger than 1/2, there are known protocols that take only one round (e.g., [MW97, DKRS06]).
However these protocols all have very large entropy loss. When the entropy rate of X is smaller
than 1/2, [DW09] showed that no one round protocol exists; furthermore the length of R has to be
at least O(s) smaller than H∞(X). Thus, the natural goal is to design a two-round protocol with
such optimal entropy loss. However, all protocols before the work of [DLWZ14] either need to use
O(s) rounds, or need to incur an entropy loss of O(s2).

In [DW09], Dodis and Wichs showed that explicit constructions of the aforementioned non-
malleable extractors can be used to give two-round privacy ampliﬁcation protocols with optimal
entropy loss. Using the probabilistic method, they also showed that non-malleable extractors exist
when k > 2m + 2 log(1/ε) + log d + 6 and d > log(n − k + 1) + 2 log(1/ε) + 5. However, they
were not able to give explicit constructions even for min-entropy k = n − 1. The ﬁrst explicit
construction of non-malleable extractors appeared in [DLWZ14], with subsequent improvements in
[CRS14, Li12a, DY13, Li12b, ADJ+14]. All these constructions require the min-entropy of the weak
source to be bigger than 0.49n, and thus only give two-round privacy ampliﬁcation protocols with
optimal entropy loss for such min-entropy. Together with some other ideas, [DLWZ14] also gives
poly(1/δ) round protocols with optimal entropy loss for min-entropy k ≥ δn, any constant δ > 0.
This was subsequently improved by one of the authors in [Li12b] to obtain a two-round protocol
with optimal entropy loss for min-entropy k ≥ δn, any constant δ > 0. In the general case, using a
relaxation of non-malleable extractors called non-malleable condensers, one of the authors [Li15c]
also obtained a two-round protocol with optimal entropy loss for min-entropy k ≥ C log2 n, some
constant C > 1, as long as the security parameter s satisﬁes k ≥ Cs2. For larger security parameter,
the best known protocol with optimal entropy loss in [Li12b] still takes O(s/√k) rounds.

In a recent work, Chattopadhyay, Goyal and Li [CGL16] constructed explicit non-malleable
extractors with error ε, for min-entropy k = Ω(log2 (n/ǫ)) and seed-length d = O(log2(n/ǫ)). This
gives an alternative protocol matching that of [Li12b]. Subsequently, Cohen [Coh16a] improved this
result, and constructed non-malleable extractors with seed length d = O(log(n/ǫ) log((log n)/ǫ))
and min-entropy k = Ω(log(n/ǫ) log((log n)/ǫ)). In this work, he also gave another construction
that worked for k = n/(log n)O(1) with seed-length O(log n).
In a follow up, Cohen [Coh16b]
constructed non-malleable extractors with seed length d = O(log n + log3(1/ǫ)) and min-entropy
k = Ω(d). However, in terms of the general error parameter ε, all of these results require min-

2

entropy and seed length at least log2(1/ε), thus none of them can be used to improve the privacy
ampliﬁcation protocols in [Li15c].

A recent work by Aggarwal, Hosseini and Lovett [AHL15] obtained some conditional results. In
particular, they used a weaker variant of non-malleable extractors to construct privacy ampliﬁcation
protocols with optimal entropy loss for k = Ω(log(1/ǫ) log n) assuming a conjecture in additive
combinatorics.

1.2 Multi-source extractors for independent sources

As mentioned before, Chor and Goldreich [CG88] introduced the problem of designing extractors
for two or more independent sources. Explicit constructions of such extractors can also be used
in explicit constructions of Ramsey graphs ([BRSW12, Coh16c, CZ16]). A simple probabilistic
argument shows the existence of two-source extractors for min-entropy k ≥ log n + O(1). However,
explicit constructions of such functions are extremely challenging.

Chor and Goldreich [CG88] proved that the inner-product function is a two-source extractor for
min-entropy greather than n/2. It was not until 20 years later when Bourgain [Bou05] broke the
entropy rate 1/2 barrier and constructed a two-source extractor for min-entropy 0.49n. Raz [Raz05]
obtained another construction which requires one source with min-entropy more than n/2 and the
other source with min-entropy O(log n). Recently, Chattopadhyay and Zuckerman [CZ16] improved
the situation substantially by constructing two-source extractors for min-entropy k ≥ polylog(n),
with subsequent improvements obtained by Li [Li15a] and Meka [Mek15]. The ultimate goal here
is to obtain two-source extractors matching the entropy bound given by the probabilistic method.

If we allow the extractor to have a constant number of sources instead of just two sources,
then an exciting line of work [BIW06, BKS+10, Rao09, BRSW12, RZ08, Li11, Li13b, Li13a, Li15d,
Coh15] constructed extractors with excellent parameters. However, the smallest entropy these
constructions can achieve is log2+δ n for any constant δ > 0 [Li13a], which uses O(1/δ) + O(1)
sources. In a very recent work, Cohen and Schulman [CS16] managed to break this “quadratic”
barrier, and constructed extractors for O(1/δ) + O(1) sources, each with min-entropy log1+δ n.

1.3 Our results

Non-Malleable Extractors Our ﬁrst result is a new construction of non-malleable extractors
that breaks the log2(1/ε) barrier for min-entropy and seed length. Speciﬁcally, we have the following
theorem.

Theorem 1. There exists a constant C > 0 s.t for all n, k ∈ N and any ǫ > 0, with k ≥
log(n/ǫ)2C√log log(n/ǫ), there exists an explicit (k, ǫ)-non-malleable extractor nmExt : {0, 1}n ×
{0, 1}d → {0, 1}m, where d = log(n/ǫ)2C√log log(n/ǫ) and m = k/2√log log(n/ǫ).

We also construct a non-malleable extractor with seed-length O(log n) for min-entropy k =

Ω(log n) and ǫ ≥ 2− log1−β (n) for any β > 0. Prior to this, explicit non-malleable extractors with
seed-length O(log n) either requires min-entropy at least n/poly(log n) [Coh16a] or requires ǫ ≥
2− log1/3(n) [Coh16b].

Theorem 2. There exists a constant C > 0 s.t for and all n, k ∈ N with k ≥ C log n, any
constant 0 < β < 1, and any ǫ ≥ 2− log1−β (n), there exists an explicit (k, ǫ)-non-malleable extractor
nmExt : {0, 1}n × {0, 1}d → {0, 1}m, where d = O(log n) and m = Ω(log(1/ǫ)).

3

Remark 1.4. A careful examination reveals that our seed length and min-entropy requirement
are better than those of [Coh16a, Coh16b] in all cases except the case that ε is large enough (e.g.,

ǫ ≥ 2− log1/3(n)), where both [Coh16b] and our results require seed length and min-entropy O(log n).

Note that given any error parameter ε, our non-malleable extractor in Theorem 1 only requires

min-entropy and seed length log1+o(1)(n/ε).

We also show how to further lower the min-entropy requirement of the non-malleable extractor
in Theorem 1 at the expense of using a larger seed. We complement this result by constructing
another non-malleable extractor with shorter seed-length than in Theorem 1 at the expense of
larger entropy. We now state these results more formally.

Theorem 3. There exists a constant C > 0 such that for all n, k ∈ N and any ǫ > 0, with
k ≥ log(n/ǫ)22C√log log log(n/ǫ)
, there exists an explicit (k, ǫ)-non-malleable extractor nmExt : {0, 1}n×
{0, 1}d → {0, 1}m, where d = (log(n/ǫ))32(log log log(n/ǫ))O(1)
Theorem 4. There exists a constant C > 0 such that for all n, k ∈ N and any ǫ > 0, with
k ≥ (log(n/ǫ))32(log log log(n/ǫ))C
, there exists an explicit (k, ǫ)-non-malleable extractor nmExt :
{0, 1}n × {0, 1}d → {0, 1}m, where d = log(n/ǫ)22O(√log log log(n/ǫ))
log(n/ǫ)2(log log log(n/ǫ))O(1) −

, m = Ω(k).

O((log(n/ǫ))2).

, m =

k

Table 1.3 summarizes our new non-malleable extractors compared to previous results.

Privacy Ampliﬁcation Using Theorem 1 and the protocol in [DW09], we immediately obtain a
two-round privacy ampliﬁcation protocol with optimal entropy loss, for almost all possible security
parameters.

Theorem 5. There exists a constant C > 0 such that for any security parameter s with k ≥
(s + log n)2C√log(s+log n), there exists an explicit 2-round privacy ampliﬁcation protocol for (n, k)-
sources with entropy loss O(log n + s) and communication complexity (s + log n)2O(√log(s+log n)), in

the presence of an active adversary.

In particular, this gives us two-round privacy ampliﬁcation protocols with optimal entropy loss

for security parameter s ≤ k1−α for any constant α > 0.

Instead if we use the non-malleable extractor from Theorem 3, we obtain a two-round privacy
ampliﬁcation protocol with optimal entropy loss, for even smaller min-entropy (at the expense of
larger communication complexity). More formally, we have the following theorem.

Theorem 6. There exists a constant C > 0 such that for any security parameter s with k ≥
(s + log n)22C√log log(s+log n)
, there exists an explicit 2-round privacy ampliﬁcation protocol for (n, k)-
sources with entropy loss O(log n + s) and communication complexity (s + log n)32(log log(s+log n))O(1)
,
in the presence of an active adversary.

t-Non-Malleable Extractors and 2-Source Extractors Our techniques for constructing non-
malleable extractors can be generalized directly to construct t-non-malleable extractors (non-
malleable extractors with t tampering functions, see Deﬁnition 6.1 and Theorem 11). Such t-
non-malleable extractors were used in [CZ16] to construct two-source extractors. With subsequent
improvements [Li15a, Mek15], the best known 2-source extractor for constant error requires min-
entropy C(log n)10, and for polynomially small error requires min-entropy C(log n)18. By plugging
in our improved t-non-malleable extractor from Theorem 11, we obtain two-source extractors that

4

Reference

Min-Entropy

Seed Length

[DW09] (non-constructive)

[DLWZ14]

[CRS14, Li12a, DY13]

[Li12b]

[CGL16]

[Coh16a]

[Coh16b]

Theorem 1

Theorem 4

Theorem 3

> 2m + 2 log(1/ǫ) + log d + 6 > log(n−k+1)+2 log(1/ǫ)+5
> n/2

n

> n/2

0.49n

O(log(n/ǫ))

n

Ω((log(n/ǫ))2)

O((log(n/ǫ))2)

Ω(log(n/ǫ) log((log n)/ǫ))

O(log(n/ǫ) log((log n)/ǫ))

Ω(log n + (log(1/ǫ))3)
log(n/ǫ)2Ω(√log log(n/ǫ))
log(n/ǫ)22Ω(√log log log(n/ǫ))
(log(n/ǫ))3+o(1)

O(log n + (log(1/ǫ))3)
log(n/ǫ)2O(√log log(n/ǫ))
(log(n/ǫ))3+o(1)
log(n/ǫ)22O(√log log log(n/ǫ))

Table 1: A summary of results on non-malleable extractors

require min-entropy (log n)8 for constant error, and (log n)14 for polynomially small error (see The-
orem 12 and Theorem 13). By a well-known connection to Ramsey graphs (see [BRSW12]), the
constant error 2-source extractor implies an explicit 2(log log n)8
Multi-Source Extractors Next, we improve the entropy requirement in extractors for a constant
number of independent sources. In particular, we give explicit extractors for O(1) sources, each
having min-entropy log1+o(1)(n). More formally, we have the following theorem.

-Ramsey graph on n vertices.

Theorem 7. There exist constants C > 0, C′ > 0 s.t for all n, k ∈ N with k ≥ log n2C′√log log(n)
and any constant ǫ > 0,2 there exists an explicit function Ext : ({0, 1}n)C → {0, 1}, such that if
X1, . . . , XC are independent (n, k) sources, then

|Ext(X1, . . . , XC ) − U1| ≤ ǫ.

1.4 Non-malleable independence preserving merger

The barrier of log2(1/ε) in seed length and min-entropy requirement of non-malleable extractors,
as well as the barrier of log2 n in min-entropy requirement of multi-source extractors mainly come
from the fact that the previous constructions rely heavily on the “alternating extraction” based
techniques. In [CS16], Cohen and Schulman introduced a new object called independence preserving
merger (IPM for short). This is the key component in their construction, which helps them to
obtain the O(1/δ) + O(1) source extractor for min-entropy k ≥ log1+δ n. The construction of the
independence preserving merger in [CS16] is fairly complicated and takes up a bulk of work.

2As in [CS16], the error can actually be slightly sub-constant.

5

A key component in all of our constructions is a generalized, and much more eﬃcient version of
the independence preserving merger in [CS16], which we call non-malleable independence preserving
merger (NIPM for short). In addition, we believe that our construction of NIPM is simpler than
the construction of IPM in [CS16]. We now deﬁne this object below.
Deﬁnition 1.5. A (L, t, d′, ǫ, ǫ′)-NIPM : {0, 1}Lm ×{0, 1}d → {0, 1}m1 satisﬁes the following prop-
erty. Suppose

• X, X1, . . . , Xt are r.v’s, each supported on boolean L × m matrices s.t for any i ∈ [L], |Xi −

Um| ≤ ǫ,

• {Y, Y1, . . . , Yt} is independent of {X, X1, . . . , Xt}, s.t Y, Y1, . . . , Yt are each supported on

{0, 1}d and H∞(Y) ≥ d − d′,

• there exists an h ∈ [L] such that |(Xh, X1

h, . . . , Xt

h) − (Um, X1

h, . . . , Xt

h)| ≤ ǫ,

then

|(L, t, d′, ǫ, ǫ′)-NIPM((X, Y), (L, t, d′, ǫ, ǫ′)-NIPM(X1, Y1), . . . , (L, t, d′, ǫ, ǫ′)-NIPM(Xt, Yt)
−Um1, (L, t, d′, ǫ, ǫ′)-NIPM(X1, Y1), . . . , (L, t, d′, ǫ, ǫ′)-NIPM(Xt, Yt)| ≤ ǫ′.

We present an explicit construction of an NIPM which requires seed length d = log(m/ǫ)Lo(1)

for the case t = 1. More formally, we have the following theorem.

Theorem 8. For all integers m, L > 0, any ǫ > 0, there exists an explicit (L, 1, 0, ǫ, ǫ′)-NIPM :
2√log L − 2O(√log L) log(m/ǫ) and
{0, 1}mL × {0, 1}d → {0, 1}m′ , where d = 2O(√log L) log(m/ǫ), m′ = m
ǫ′ = O(ǫL).

We have a more general version of the above theorem presented in Section 4.3 which works for
general t. This is crucial for us to obtain our results on t-non malleable extractors and extractors
for independent sources with near logarithmic min-entropy.

Using our NIPM, we construct a standard IPM introduced in the work of Cohen and Schulman

[CS16]. We ﬁrst deﬁne an IPM.
Deﬁnition 1.6. A (L, k, t, ǫ, ǫ′)-IPM : {0, 1}Lm×{0, 1}n → {0, 1}m1 satisﬁes the following property.
Suppose

• X, X1, . . . , Xt are r.v’s, each supported on boolean L × m matrices s.t for any i ∈ [L], |Xi −

Um| ≤ ǫ,

• Y is an (n, k)-source, independent of {X, X1, . . . , Xt}.
• there exists an h ∈ [L] such that |(Xh, X1

h, . . . , Xt

h)| ≤ ǫ,

h) − (Um, X1

h, . . . , Xt

then

|(L, k, t, ǫ, ǫ′)-IPM(X, Y), (L, k, t, ǫ, ǫ′)-IPM(X1, Y), . . . , (L, k, t, ǫ, ǫ′)-NIPM(Xt, Y)
−Um1, (L, k, t, ǫ, ǫ′)-IPM(X1, Y), . . . , (L, k, t, ǫ, ǫ′)-IPM(Xt, Y)| ≤ ǫ′

Theorem 9. There exists a constant C > 0 such that for all integers m, L > 0, any ǫ > 0, and any

k ≥ 2C√log L log(m/ǫ), there exists an explicit (L, k, 1, ǫ, ǫ′)-IPM : {0, 1}mL × {0, 1}n → {0, 1}m′ ,
with m′ = 1

2√log L (m − O(log(n/ǫ))) − 2O(√log L) log(m/ε) and ǫ′ = O(ǫL).

6

As in the case of NIPM, we in fact construct an IPM for general t. The construction of IPM
from NIPM is relatively straightforward, and using this explicit IPM we derive our improved results
on extractors for independent sources.

h, . . . , Xt

We note that there are several important diﬀerences between our IPM and the construction in
[CS16]. First, we only require that there exists at least one “good” row Xh in the matrix (i.e., Xh
is uniform even given X1
h). In contrast, the IPM in [CS16] requires that 0.99 fraction of the
rows are good. Second, the construction of IPM in [CS16] oﬀers a trade-oﬀ between the number
of additional sources required and the min-entropy requirement of each source. In particular, they
construct an IPM using b additional sources, each having min-entropy k = Ω(L1/b log(n/ǫ)). In
contrast, we use just one additional source with min-entropy k = Ω(Lo(1) log(m/ε)), and works as
long as m ≥ O(log(n/ǫ)) + Lo(1) log(m/ε). In typical applications, we will have m ≈ k < n, so it
suﬃces to set k = Lo(1) log(n/ε). For all applications in this paper, we will choose L = O(log(n/ε))
and thus we get k = log1+o(1)(n/ε). The fact that our IPM uses only one additional source improves
signiﬁcantly upon the IPM in [CS16] and is crucial for us to obtain an O(1) source extractor for
min-entropy k = log1+o(1) n.

We also present a more involved construction of a NIPM that uses a shorter seed in comparison
to the NIPM in Theorem 8, but requires matrices with larger rows (i.e., m is required to be larger).
More formally, we have the following result.

Theorem 10. For all integers m, L > 0, any ǫ > 0, there exists an explicit (L, 1, 0, ǫ, ǫ′)-NIPM :
{0, 1}mL ×{0, 1}d → {0, 1}m′ , where d = 2O(√log log L) log(m/ε), m′ =
L2(log log L)O(1) − O(L log(m/ε))
and ǫ′ = 2O(√log log L)Lε.

m

We use the NIPM from the above theorem in obtaining the non-malleable extractors in Theorem

3 and Theorem 4.

2 Outline of Constructions

Here we give an informal and high level description of our constructions. We start with our non-
malleable independence preserving merger (NIPM) with a uniform (or high entropy rate) seed.

2.1 Non-malleable independence preserving merger with uniform seed

For simplicity we start by describing the case of only one tampering adversary. Here, we have
two correlated random variables X = (X1, . . . , XL) and X′ = (X′1, . . . , X′L), each of them is an
L × m matrix. We have another two correlated random variables Y, Y′. We assume the following
conditions: (X, X′) is independent of (Y, Y′), each Xi is uniform and there exists a j ∈ [L] such that
Xj is uniform even conditioned on X′j, and Y is uniform. Our goal is to construct a function NIPM
such that NIPM(X, Y) is uniform conditioned on NIPM(X′, Y′), i.e., using Y we can merge X into
a uniform random string which keeps the independence property over X′ even with a tampered
seed Y′.

Our starting point is the following simple observation. Let (X, X′) be two correlated weak
sources and (R, R′) be two correlated random variables such that (X, X′) is independent of (R,
R′). Let R be uniform and take any strong seeded extractor Ext, consider Z = Ext(X, R) and
Z′ = Ext(X′, R′). Assume the length of the output of Ext is small enough. Then Z is close to
uniform given Z′ if either of the following two conditions holds: R is uniform given R′ or X has
suﬃcient min-entropy conditioned on X′. Indeed, in the ﬁrst case, we can ﬁrst ﬁx R′, and argue

7

that conditioned on this ﬁxing, Z′ is a deterministic function of X′. We can now further ﬁx Z′, and
conditioned on this ﬁxing, X still has enough entropy left (since the length of Z′ is small). Note
that at this point R is still uniform and independent of X, thus Z = Ext(X, R) is close to uniform
given Z′. In the second case, we can ﬁrst ﬁx X′, and conditioned on this ﬁxing X still has enough
entropy left. Now since Ext is a strong extractor, we know that Z = Ext(X, R) is close to uniform
even given R. Since we have already ﬁxed X′ and (R, R′) is independent of (X, X′), this means
that Z is also close to uniform even given R′ and X′, which gives us Z′ = Ext(X′, R′).

Now we can describe our basic NIPM. The construction is actually simple in the sense that it is
essentially an alternating extraction process between X and Y, except that in each alternation we
use a new row from X. Speciﬁcally, we ﬁrst take a small slice S1 from X1, and apply a strong seeded
extractor to obtain R1 = Ext(Y, S1); we then use R1 to extract from X2 and obtain S2 = Ext(X2,
R1). Now we continue and obtain R2 = Ext(Y, S2) and S3 = Ext(X3, R2)... .The ﬁnal output of
our merger will be SL = Ext(XL, RL−1).

To see why this construction works, ﬁrst assume that the length of each Si, Ri is small enough.
Let j be the ﬁrst index in [L] such that Xj is uniform even conditioned on X′j. Then, we can ﬁx
all the intermediate random variables S1, S′1, R1, R′1, S2, S′2, R2, R′2 . . . Sj−1, S′j−1, and conditioned
on these ﬁxings we know that: 1. (Rj−1, R′j−1) are deterministic functions of (Y, Y′), and thus
independent of (X, X′); 2. Rj−1 is close to uniform; 3. Xj still has enough entropy conditioned
on X′j. Now, by the ﬁrst case we discussed above, this implies that Sj is close to uniform given
S′j. From this point on, by using the second case we discussed above and an inductive approach,
we can argue that for all subsequent t ≥ j, we have that Rt is close to uniform given R′t and St is
close to uniform given S′t. Thus the ﬁnal output SL is close to uniform given S′L.

Note that this construction can work even if Y is a very weak random source instead of being
uniform or having high min-entropy rate. However this basic approach will require the min-entropy
of Y to be at least O(L log(m/ǫ)), which is pretty large if L is large. We next describe a way to
reduce this entropy requirement, in the case where Y is uniform or has high min-entropy rate.

The idea is that, rather than merging the L rows in one step, we merge them in a sequence of
steps, with each step merging all the blocks of some ℓ rows. Thus, it will take us roughly log L
log ℓ steps
to merge the entire matrix. Now ﬁrst assume that Y is uniform, then in each step we will not use
the entire Y to do the alternating extraction and merging, but just use a small slice of Y for this
purpose. That is, we will ﬁrst take a small slice Y1 and use this slice to merge L/ℓ blocks of X,
where each block has ℓ rows; we then take another slice Y2 of Y and use this slice to merge L/ℓ2
new blocks, where each block has ℓ rows, and so on. The advantage of this approach is that now
the entropy consumed in each merging step is contained in the slice Yi (and Y′i), and won’t aﬀect
the rest of Y much.

As we discussed before, we need to make sure that each slice Yi has min-entropy O(ℓ log(m/ǫ))
conditioned on the ﬁxing of all previous (Yj, Y′j). As a result, we need to set |Yi+1| ≥ 2|Yi| +
O(ℓ log(m/ǫ)). It suﬃces to take |Yi| = ciℓ log(m/ǫ) for some constant c > 2. We know that the
whole merging process is going to take roughly log L
log ℓ steps, so the total length (or min-entropy) of
log L
Y is something like c
log ℓ ℓ log(m/ǫ). We just need to choose a proper ℓ to minimize this quantity.
A simple calculation shows that the best ℓ is roughly such that log ℓ = √log L, which gives us a
seed length of 2O(√log L) log(m/ǫ). This gives us the NIPM in Theorem 8.

It is not diﬃcult to see that this argument also extends to the case where Y is not perfectly
uniform but has high min-entropy rate (e.g., 1 − o(1)) where we can still start with a small slice
of Y, and the case where we have t + 1 correlated matrices X, X1, . . . , Xt and t tampered seeds
Y1, . . . , Yt of Y.

8

2.2 Non-malleable extractor with almost optimal seed

The NIPM in Theorem 8 is already enough to yield our construction of a non-malleable extractor
with almost optimal seed length. Speciﬁcally, given an (n, k) source X, an independent seed Y, and
a tampered seed Y′, we follow the approach of one of the authors’ previous work [CGL16] by ﬁrst
obtaining an advice of length L = O(log(n/ǫ)). Let the advice generated by (X, Y) be S and the
advice generated by X, Y′ be S′. We have that with probability 1− ǫ, S 6= S′. Further, conditioned
on (S, S′) and some other random variables, we have that X is still independent of (Y, Y′) and Y
has high min-entropy rate.

Now we take a small slice Y1 of Y, and use X and Y1 to generate a random matrix V with
L rows, where the i’th row is obtained by doing a ﬂip-ﬂop alternating extraction (introduced in
[Coh15]) using the i’th bit of S. Similarly a matrix V′ is generated using X′ and Y1. The ﬂip-ﬂop
alternating extraction guarantees that each row in V is close to uniform, and moreover if the i’th
bit of S and S′ are diﬀerent, then Vi is close to uniform even given V′i. Note that conditioned
on the ﬁxing of (Y1, Y′1), we have that (V, V′) are deterministic functions of X, and are thus
independent of (Y, Y′). Furthermore Y still has high min-entropy rate.

At this point we can just use our NIPM and Y to merge V into a uniform string Z, which
is guaranteed to be close to uniform given Z′ (obtained from (V′, Y′)). The seed length of Y
will be O(log(n/ǫ)) + 2O(√log log(n/ǫ)) log(k/ǫ). A careful analysis shows that the ﬁnal error will

be O(ǫ log(n/ǫ)). Thus we need to set the error parameter ǫ slightly smaller in order to achieve a
desired ﬁnal error ǫ′, but that does not aﬀect the seed length much. Altogether this gives us a seed
length and entropy requirement of 2O(√log log(n/ǫ)) log(n/ǫ), as in Theorem 1.

2.3 Further improvements in various aspects

We can further improve the non-malleable independence preserving merger and non-malleable ex-
tractor in various aspects. For this purpose, we observe that our NIPM starts with a basic merger
for ℓ rows and then use roughly log L
log ℓ steps to merge the entire L rows. If the basic merger uses a
log L
log ℓ d. In our basic and simple
seed length of d, then the whole merger roughly uses seed length c
merger, we have d = O(ℓ log(m/ǫ)). However, now that we have our improved NIPM, we can
certainly use the more involved construction to replace the basic merger, where we only need seed
length d = 2O(√log ℓ) log(m/ǫ). Now we can choose another ℓ to optimize c
log L
log ℓ d, which roughly gives
log ℓ = log2/3 L and the new seed length is 2O(log1/3 L) log(m/ǫ). We can now again use this merger
to replace the basic merger. By doing this recursively, we can get smaller and smaller seed length.
On the other hand, the entropy requirement becomes larger. We can also switch the roles of the
seed and source, and achieve smaller entropy requirement at the price of a larger seed. Eventually,
we can get d = 2O(√log log L) log(m/ε) and m = O(L22(log log L)O(1)
) log(m/ε), or vice versa. This
gives us Theorem 10. Applying these NIPMs to non-malleable extractors as outlined above, we get
Theorem 3 and Theorem 4.

2.4

Independence preserving merger with weak random seed

We now use our NIPM from Theorem 8 to construct a standard independence preserving merger
with weak random seed, an object introduced in [CS16]. Suppose we are given (X, X′) as described
above and an independent random variable Y. Here Y can be a very weak source, so our ﬁrst step
is to convert it to a uniform (or high min-entropy rate) seed.

9

To do this, our observation is that since we know that each row in X is uniform, we can just
take a small slice W of the ﬁrst row X1, and apply a strong seeded extractor to Y to obtain
Z = Ext(Y, W), which is guaranteed to be close to uniform. However by doing this we also created
a correlated Z′ = Ext(Y, W′) where W′ is a slice of X′1. Note that conditioned on the ﬁxing of
(W, W′) we have (X, X′) is independent of (Z, Z′), each row of X still has high min-entropy, and
the “good” row Xj still has high min-entropy even given X′j. We now take a small slice V of Z,
and use it to extract from each row of X to obtain another matrix X. Similarly we also have a slice
V′ from Z′ and obtain X′. We can now argue that conditioned on the ﬁxing of (V, V′), (X, X′)
is independent of (Z, Z′), each row of X is close to uniform, and the “good” row Xj is close to
uniform even given X′j. Moreover Z still has high min-entropy rate.

Thus, we have reduced this case to the case of an independence preserving merger with a
tampered high min-entropy rate seed. We can therefore apply our NIPM to ﬁnish the construction.
It is also not diﬃcult to see that our construction can be extended to the case where we have
X, X1, . . . , Xt instead of having just X and X′.

2.5

Improved multi-source extractor

We can now apply our independence preserving merger with weak random seed to improve the
multi-source extractor construction in [CS16]. Our construction follows the framework of that in
[CS16], except that we replace their independence preserving merger with ours. Essentially, the key
step in the construction of [CS16], and the only step which takes O(1/δ) independent (n, log1+δ n)
sources (if we only aim at achieving constant or slightly sub-constant error) is to merge a matrix
with O(log n) rows using (n, log1+δ n) sources. For this purpose and since the error of the merger
needs to be 1/poly(n), the independence preserving merger in [CS16] uses two additional sources in
each step to reduce the number of rows by a factor of logδ n. Thus altogether it takes 2/δ sources.
Our merger as described above, in contrast, only requires one extra independent source with min-
entropy at least O(log n) + 2O(√log log n) log n = log1+o(1) n. Therefore, we obtain a multi-source
extractor for an absolute constant number of (n, log1+o(1) n) sources, which outputs one bit with
constant (or slightly sub-constant) error.

The improved two-source extractors are obtained directly by plugging in our improved t-non-

malleable extractors to the constructions in [CZ16, Mek15].

Organization We introduce some preliminaries in Section 3. We present our constructions of
non-malleable independence preserving mergers and independence preserving mergers in Section 4.
We use Section 5 to present the construction of our almost-optimal non-malleable extractor. We
present improved constructions of t-non-malleable extractors and applications to 2-source extractors
in Section 6. We use Section 7 to present the NIPM construction of Theorem 10, and the non-
malleable extractor constructions of Theorem 3 and Theorem 4. We present our results on multi-
source extractors in Section 8.

3 Preliminaries

We use Um to denote the uniform distribution on {0, 1}m.
For any integer t > 0, [t] denotes the set {1, . . . , t}.
For a string y of length n, and any subset S ⊆ [n], we use yS to denote the projection of y to the
coordinates indexed by S.

10

For a string y of length m, deﬁne the string Slice(y, w) to be the preﬁx of length w of y.
We use bold capital letters for random variables and samples as the corresponding small letter,
e.g., X is a random variable, with x being a sample of X.

3.1 Conditional Min-Entropy

Deﬁnition 3.1. The average conditional min-entropy of a source X given a random variable W
is deﬁned as

eH∞(X|W) = − log(cid:16)Ew∼W hmax

x

Pr[X = x|W = w]i(cid:17) = − log(cid:16)Eh2−H∞(X|W=w)i(cid:17) .

We recall some results on conditional min-entropy from the work of Dodis et al. [DORS08].

Lemma 3.2 ([DORS08]). For any ǫ > 0, Prw∼WhH∞(X|W = w) ≥ eH∞(X|W) − log(1/ǫ)i ≥
1 − ǫ.
Lemma 3.3 ([DORS08]). If a random variable Y has support of size 2ℓ, then eH∞(X|Y) ≥
H∞(X) − ℓ.

We require extractors that can extract uniform bits when the source only has suﬃcient condi-

tional min-entropy.
Deﬁnition 3.4. A (k, ǫ)-seeded average case seeded extractor Ext : {0, 1}n × {0, 1}d → {0, 1}m
for min-entropy k and error ǫ satisﬁes the following property: For any source X and any arbitrary
random variable Z with ˜H∞(X|Z) ≥ k,

Ext(X, Ud), Z ≈ǫ Um, Z.

It was shown in [DORS08] that any seeded extractor is also an average case extractor.

Lemma 3.5 ([DORS08]). For any δ > 0, if Ext is a (k, ǫ)-seeded extractor, then it is also a
(k + log(1/δ), ǫ + δ)-seeded average case extractor.

3.2 Some Probability Lemmas

The following result on min-entropy was proved by Maurer and Wolf [MW97].

Lemma 3.6. Let X, Y be random variables such that the random variable Y takes at ℓ values.
Then

Pry∼Y(cid:20)H∞(X|Y = y) ≥ H∞(X) − log ℓ − log(cid:18) 1

ǫ(cid:19)(cid:21) > 1 − ǫ.

Lemma 3.7 ([BIW06]). Let X1, . . . , Xℓ be independent random variables on {0, 1}m such that
|Xi − Um| ≤ ǫ. Then, |Pℓ

i=1 Xi − Um| ≤ ǫℓ.

3.3 Seeded Extractors

We use optimal constructions of strong-seeded extractors.

Theorem 3.8 ([GUV09]). For any constant α > 0, and all integers n, k > 0 there exists a
polynomial time computable strong-seeded extractor Ext : {0, 1}n × {0, 1}d → {0, 1}m with d =
c3.8(log n + log(1/ǫ)) and m = (1 − α)k.

11

4 Non-Malleable Independence Preserving Mergers

In this section we present our constructions of non-malleable independence preserving mergers. We
gradually develop the ideas to build our ﬁnal NIPM, starting with a simpler construction which
is then used as a building block in the more involved construction. In our proofs, we repeatedly
condition on random variables with small support and account for entropy loss by implicitly using
Lemma 3.3.

4.1

ℓ-Non-Malleable Independence Preserving Merger

In this section, we construct an explicit function NIPM that uses a (weak) seed Y to merge ℓ
correlated r.v’s X1, . . . , Xℓ, X′1, . . . , X′ℓ in a way such that such that if for some i, Xi|X′i’s is close
to uniform on average, then this property is transferred to the output of NIPM. As discussed
in the introduction, a recent work by Cohen and Schulman [CS16] introduces a similar object in
the context of constructing multi-source extractors with nearly logarithmic min-entropy. However
there are some important diﬀerences. To carry out the independence preserving merging, [CS16]
uses access to multiple independent sources which are themselves not tampered. Here we allow
access to an independent weak seed Y which is further subject to being tampered (Y′ being the
tampered seed).

The following is the main result of this section.

Theorem 4.1. There exist constants c4.1, c′4.1 > 0 such that for all integers m, d, k1, ℓ > 0 and any
ǫ > 0, with m ≥ d ≥ k1 > c4.1ℓ log(n/ǫ), there exists an explicit function ℓ-NIPM : ({0, 1}m)ℓ ×
{0, 1}d → {0, 1}m1 , m1 = 0.9(m − c4.1ℓ log(m/ǫ)), such that if the following conditions hold:

• X1, . . . , Xℓ are r.v’s s.t for all i ∈ [ℓ], |Xi − Um| ≤ ǫ1, and X′1, . . . , X′ℓ are r.v’s with each X′i

supported on {0, 1}m.

• {Y, Y′} is independent of {X1, . . . , Xt, X′1, . . . , X′t}, s.t the r.v’s Y, Y′ are both supported on

{0, 1}d and H∞(Y) ≥ k1.

• there exists an h ∈ [t] such that |(Xh, X′h) − (Um, X′h)| ≤ ǫ,

then

|ℓ-NIPM((X1, . . . , Xℓ), Y), ℓ-NIPM((X′1, . . . , X′ℓ), Y′), Y, Y′
−Um1, ℓ-NIPM((X′1, . . . , X′ℓ), Y′), Y, Y′| ≤ c′4.1ℓǫ

Our construction of NIPM uses the method of alternating extraction and extends it in a new
way. Brieﬂy we recall the method of alternating extraction which was introduced by Dziembowski
and Pietrzak [DP07], and has been useful in a variety of extractor constructions [DW09, Li13a,
Li15d, Coh15, CGL16, Li15b, CL16, Coh16a, Coh16b].

Alternating Extraction Assume that there are two parties, Quentin with a source Q and
Wendy with a source W. The alternating extraction protocol is an interactive process between
Quentin and Wendy, and starts oﬀ with Quentin sending the seed S0 to Wendy. Wendy uses S0
and a strong-seeded extractor Extw to extract a seed R1 using W, and sends R1 back to Quentin.
This constitutes a round of the alternating extraction protocol. In the next round, Quentin uses a
strong extractor Extq to extract a seed S2 from Q using S1, and sends it to Wendy and so on. The

12

protocol is run for h steps, where h is an input parameter. Thus, the following sequence of r.v’s is
generated:

S1 = Slice(Q, d), R1 = Extw(W, S1), S1 = Extq(Q, R1), . . . , Su = Extq(Q, Rh−1).

ℓ-Alternating Extraction We extend the above technique by letting Quentin have access to
ℓ sources Q1, . . . , Qℓ (instead of just Q) and ℓ strong-seeded extractors {Extq,i : i ∈ [ℓ]} such that
in the i’th round of the protocol, he uses Qi to produce the r.v Si = Extq,i(Qi, Ri). More formally,
the following sequence of r.v’s is generated: S1 = Slice(Q1, d), R1 = Extw(W, S1), S2 = Extq,2(Q2,
R1), . . . , Rℓ−1 = Extw(Qℓ−1, Sℓ−1), Sℓ = Extq,ℓ(Qℓ, Rℓ). Deﬁne the look-ahead extractor

ℓ-laExt((Q1, . . . , Qℓ), W) = Sℓ.

We are now ready to prove Theorem 4.1.

Proof of Theorem 4.1. We instantiate the ℓ-look-ahead extractor described above with the following
strong seeded extractors: Let Ext1 : {0, 1}m×{0, 1}d1 → {0, 1}d1 , Ext2 : {0, 1}d×{0, 1}d1 → {0, 1}d1
and Ext3 : {0, 1}m × {0, 1}d1 → {0, 1}m1 be explicit strong-seeded from Theorem 3.8 designed
to extract from min-entropy m/2, k1/4, m − c4.1ℓ log(m/ǫ) respectively, each with error ǫ. Thus
d1 = c3.8 log(m/ǫ).

We think of each Xi being uniform, and add back an error ǫ1ℓ in the end.
For each i ∈ [ℓ − 1], let Extq,i = Ext1, Extq,ℓ = Ext3 and Extw = Ext2.
Deﬁne

NIPM((X1, . . . , Xℓ), Y) = laExt((X1, . . . , Xℓ), Y).

For any random variable V = f ((X1, . . . , Xℓ), Y) (where f is an arbitrary deterministic function),
let V′ = f ((X′1, . . . , X′ℓ), Y′).

We ﬁrst prove the following claim.

Claim 4.2. For any j ∈ [h − 1], conditioned on the r.v’s {Si : i ∈ [j − 1]},{S′i : i ∈ [j − 1]},
{Ri : i ∈ [j − 1]},{R′i : i ∈ [j − 1]} the following hold:

• Sj is 2(j − 1)ǫ-close to Ud1,
• Sj, S′j are deterministic functions of {Xj, X′j},
• for each i ∈ [t], Xi has average conditional min-entropy at least m − 2(j − 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2(j − 1)d1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Further, conditioned on the r.v’s {Si : i ∈ [j]},{S′i : i ∈ [j]},{Ri : i ∈ [j − 1]},{R′i : i ∈ [j − 1]} the
following hold:

• Rj is (2j − 1)ǫ-close to Ud,
• Rj, R′j are deterministic functions of {Y, Y′},
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m − 2jd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2(j − 1)d1 − log(1/ǫ),

13

• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Proof. We prove the above by induction on j. The base case when j = 1 is direct. Thus suppose
j > 1. Fix the r.v’s {Si : i ∈ [j − 1]},{S′i : i ∈ [j − 1]},{Ri : i ∈ [j − 2]},{R′i : i ∈ [j − 2]}. Using
inductive hypothesis, it follows that

• Rj−1 is (2j − 3)ǫ-close to Ud,
• Rj−1, R′j−1 are deterministic functions of {Y, Y′},
• for any i ∈ [t], Xi has average conditional min-entropy at least m − 2(j − 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2(j − 2)d1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.
Now since Sj = Ext1(Xj, Rj−1), it follows that Sj is 2(j − 1)ǫ-close to Ud1 on average condi-
tioned on Rj−1. We thus ﬁx Rj−1. Further, we also ﬁx R′j−1 without aﬀecting the distribution of Sj.
Thus Sj, S′j are now a deterministic function of Xj, X′j. It follows that after these ﬁxings, the aver-
age conditional min-entropy of Y is at least k1−2(j−2)d1−log(1/ǫ)−2d1 = k1−2(j−1)d1−log(1/ǫ).
Next, we have Rj = Ext2(Y, Sj), and thus ﬁxing Sj, it follows that Rj is (2j − 1)ǫ-close to
uniform on average. Further, since Rj is now a deterministic function of Y, we ﬁx S′j. As a result
of these ﬁxings, each Xi loses conditional min-entropy at most 2d1 on average. Since at each point,
we either ﬁx a r.v that is a deterministic function of either {X1, . . . , Xℓ, X′1, . . . , Xℓ} or {Y, Y′} it
follows that {X1, . . . , Xℓ, X′1, . . . , X′ℓ} remain independent of {Y, Y′}. This completes the inductive
step, and hence the proof follows.

We now proceed to prove the following claim.

Claim 4.3. Conditioned on the r.v’s {Si : i ∈ [h− 1]},{S′i : i ∈ [h]},{Ri : i ∈ [h− 1]},{R′i : i ∈ [h]}
the following hold:

• Sh is 2(h − 1)ǫ-close to Ud,
• Sh is a deterministic function of Xh,
• for each i ∈ [t], Xi has average conditional min-entropy at least m − 2hd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2hd1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Proof. We ﬁx the r.v’s {Si : i ∈ [h − 1]},{S′i : i ∈ [h − 1]},{Ri : i ∈ [h − 2]},{R′i : i ∈ [h − 2]}, and
using Claim 4.2 the following hold:

• Rh−1 is (2h − 3)ǫ-close to Ud,
• Rh−1, R′h−1 are deterministic functions of {Y, Y′},
• for any i ∈ [t], Xi has average conditional min-entropy at least m − 2(h − 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2(h − 2)d1 − log(1/ǫ),

14

• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Next we claim that Xh has average conditional min-entropy at least m− 2(h− 1)d1 − log(1/ǫ) even
after ﬁxing X′h. We know that before ﬁxings any other r.v, we have Xh|X′h is ǫ-close to uniform
on average. Since while computing the average conditional min-entropy, the order of ﬁxing does
not matter, we can as well think of ﬁrst ﬁxing of X′h and then ﬁxing the r.v’s {Si : i ∈ [h − 1]},
{S′i : i ∈ [h − 1]},{Ri : i ∈ [h − 2]},{R′i : i ∈ [h − 2]}. Thus, it follows that the average conditional
min-entropy of Xh is at least m − 2(h − 1)d1 − log(1/ǫ).
We now show that even after ﬁxing the r.v’s X′h, Rh−1, R′h−1, the r.v Sh is 2(h − 1)ǫ-close to
uniform on average. Fix X′h and by the above argument Xh has average conditional min-entropy
at least m− 2(h − 1)d1 − log(1/ǫ). Since Sh = Ext1(Xh, Rh−1), it follows that Sh is 2(h − 1)ǫ-close
to uniform on average even conditioned on Rh−1. We ﬁx Rh−1, and thus Sh is a deterministic
function of Xh. Note that S′h = Ext1(X′h, R′h−1) is now a deterministic function of R′h (and thus
Y′). Thus, we can ﬁx R′h (which also ﬁxes S′h) without aﬀecting the distribution of Sh.
Observe that after the r.v’s Rh−1, R′h−1 are ﬁxed, S′h is a deterministic function of X′h. We
only ﬁx S′h and do not ﬁx X′h, and note that Sh is still 2(h − 1)ǫ-close to uniform. Further after
these ﬁxings, each Xi has average conditional min-entropy at least m− 2hd1 − log(1/ǫ), and Y has
average conditional min-entropy at least k1 − 2hd1 − log(1/ǫ).

By our construction of NIPM, Theorem 4.1 is direct from the following claim.

Claim 4.4. For any j ∈ [h, ℓ], conditioned on the r.v’s {Si : i ∈ [j − 1]},{S′i : i ∈ [j]},{Ri : i ∈
[j − 1]},{R′i : i ∈ [j]} the following hold:

• Sj is 2(j − 1)ǫ-close to Ud,
• Sj is a deterministic function of Xj
• for each i ∈ [ℓ], Xi has average conditional min-entropy at least m − 2jd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2jd1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Further, conditioned on the r.v’s {Si : i ∈ [j]},{S′i : i ∈ [j + 1]},{Ri : i ∈ [j − 1]},{R′i : i ∈ [j]} the
following hold:

• Rj is (2j − 1)ǫ-close to Ud,
• Rj is a deterministic function of Y,
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m − 2(j + 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2(j + 1)d1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Proof. We prove this by induction on j. For the base case, when j = h, ﬁx the r.v’s {Si : i ∈ [h−1]},
{S′i : i ∈ [h]},{Ri : i ∈ [h − 1]},{R′i : i ∈ [h]}. Using Claim 4.3, it follows that

• Sh is 2(h − 1)ǫ-close to Ud,

15

• Sh is a deterministic function of Xh,
• for each i ∈ [ℓ], Xi has average conditional min-entropy at least m − 2hd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2hd1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Noting that Rh = Ext2(Y, Sh), we ﬁx Sh and Rh is 2hǫ-uniform on average after this ﬁxing. We
note that Rh is now a deterministic function of Y. Since R′h is ﬁxed, S′h+1 is a deterministic
function of X′h+1, and we ﬁx it without aﬀecting the distribution of Rh. The average conditional
min-entropy of each Xi after these ﬁxings is at least m − 2(h + 1)d1 − log(1/ǫ). Further, we note
that our ﬁxings preserve the independence between {X1, . . . , Xℓ, X′1, . . . , X′ℓ} and {Y, Y′}. This
completes the proof of the base case.

Now suppose j > h. Fix the r.v’s {Si

{R′i : i ∈ [j − 1]}. Using inductive hypothesis, it follows that

: i ∈ [j − 1]},{S′i

: i ∈ [j]},{Ri

: i ∈ [j − 2]},

• Rj−1 is (2j − 3)ǫ-close to Ud,
• Rj−1 is a deterministic function of Y,
• for any i ∈ [t], Xi has average conditional min-entropy at least m − 2jd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2jd1 − log(1/ǫ),
• {X1, . . . , Xℓ, X′1, . . . , X′ℓ} is independent of {Y, Y′}.

Using the fact that Sj = Ext1(Xj, Rj−1), we ﬁx Rj−1 and Sj is (2j−2)ǫ-close to uniform on average
after this ﬁxing. Further, Sj is a deterministic function of Xj. Since S′j is ﬁxed, it follows that
R′j is a deterministic function of Y and we ﬁx it without aﬀecting the distribution of Sj. We note
that after these ﬁxings, Y has average conditional min-entropy at least k1 − 2(j + 1)d1 − log(1/ǫ).
Further, we note that our ﬁxings preserve the independence between {X1, . . . , Xℓ, X′1, . . . , X′ℓ} and
{Y, Y′}.
Now, we ﬁx Sj and it follows that Rj is a deterministic function of Y and is (2j − 1)ǫ-close to
uniform on average. Further, since R′j is ﬁxed, it follows that S′j+1 is a deterministic function of
Xj+1 and we ﬁx it without aﬀecting the distribution of Rj. The average conditional min-entropy
of each Xi after these ﬁxings is at least m− 2(j + 1)d1 − log(1/ǫ). Further, we note that our ﬁxings
preserve the independence between {X1, . . . , Xℓ, X′1, . . . , X′ℓ} and {Y, Y′}.
This completes the proof of inductive step, and hence the claim follows.

4.2

(ℓ, t)-Non-Malleable Independence Preserving Merger

In this section, we generalize the construction of NIPM from Section 4 to handle multiple adver-
saries.

We ﬁrst introduce some notation. For a random variable V supported on a × b matrices, we
use Vi to denote the random variable corresponding to the i’th row of V. Our main result in this
section is the following theorem.

16

Theorem 4.5. There exists constant c4.5, c′4.5 > 0 such that for all integers m, d, k1, ℓ, t > 0
and any ǫ > 0, with m ≥ d ≥ k1 > c4.5(t + 1)ℓ log(m/ǫ), there exists an explicit function t-
NIPM : {0, 1}mℓ ×{0, 1}d → {0, 1}m1 , m1 = 0.9
t (m− c4.5(t + 1)ℓ log(m/ǫ)) such that if the following
conditions hold:

• X, X1, . . . , Xt are r.v’s, each supported on boolean ℓ × m matrices s.t for any i ∈ [ℓ], |Xi −

Um| ≤ ǫ,

• {Y, Y1, . . . , Yt} is independent of {X, X1, . . . , Xt}, s.t Y, Y1, . . . , Yt are each supported on

{0, 1}d and H∞(Y) ≥ k1.

• there exists an h ∈ [ℓ] such that |(Xh, X1

h, . . . , Xt

h)| ≤ ǫ,

h) − (Um, X1

h, . . . , Xt

then

|(ℓ, t)-NIPM((X, Y), (ℓ, t)-NIPM(X1, Y1), . . . , (ℓ, t)-NIPM(Xt, Yt), Y, Y1, . . . , Yt
−Um1, (ℓ, t)-NIPM(X1, Y1), . . . , (ℓ, t)-NIPM(Xt, Yt), Y, Y1, . . . , Yt| ≤ c′4.5ℓǫ.

Proof. We instantiate the ℓ-look-ahead extractor described in Section 4.1 with the following strong-
seeded extractors: Let Ext1 : {0, 1}m × {0, 1}d1 → {0, 1}d1 , Ext2 : {0, 1}d × {0, 1}d1 → {0, 1}d1 and
Ext3 : {0, 1}m ×{0, 1}d1 → {0, 1}m1 be explicit strong-seeded from Theorem 3.8 designed to extract
from min-entropy k1 = m/2, k2 = d/2, k3 = m− c4.5(t + 1) log(m/ǫ) respectively with error ǫ. Thus
d1 = c3.8 log(m/ǫ).

For each i ∈ [ℓ − 1], let Extq,i = Ext1, Extq,ℓ = Ext3 and Extw = Ext2.
Deﬁne

t-NIPM((X1, . . . , Xℓ), Y) = ℓ-laExt((X1, . . . , Xℓ), Y).

For any random variable V = f ((X1, . . . , Xt), Y) (where f is an arbitrary deterministic function),
ℓ), Yi). The proof of correctness of the construction is similar in structure
let Vi = f ((Xi
to Theorem 4.1, but requires more care to handle t adversaries.

1, . . . , Xi

We think of each Xi being uniform, and add back an error ǫ1ℓ in the end.
We begin by proving the following claim.

Claim 4.6. For any j ∈ [h − 1], conditioned on the r.v’s {Si : i ∈ [j − 1]},{Sg
{Ri : i ∈ [j − 1]},{Rg

i : i ∈ [j − 1], g ∈ [t]} the following hold:

i : i ∈ [j − 1], g ∈ [t]},

j : g ∈ [t]} are deterministic functions of X,{Xg

• Sj is 2(j − 1)ǫ-close to Ud,
• Sj,{Sg
• for each i ∈ [ℓ], Xi has average conditional min-entropy at least m−(t+1)(j−1)d1−log(1/ǫ),
• Y has average conditional min-entropy at least k1 − 2(t + 1)(j − 1)d1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

j : g ∈ [t]},

Further, conditioned on the r.v’s {Si : i ∈ [j]},{Sg
[j − 1], g ∈ [t]} the following hold:
• Rj is (2j − 1)ǫ-close to Ud,

i

17

: i ∈ [j], g ∈ [t]},{Ri : i ∈ [j − 1]},{Rg

i

: i ∈

j : g ∈ [t]} are deterministic functions of Y,{Yg : g ∈ [t]},

• Rj,{Rg
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m − (t + 1)jd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (t + 1)(j − 1)d1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

Proof. In the course of the proof, we always maintain the property that the r.v’s being ﬁxed are
either a deterministic function of {X, X1, . . . , Xt} or {Y, Y1, . . . , Yt}, and thus ensure {X, X1, . . . ,
Xt} is independent of {Y, Y1, . . . , Yt}.

We prove the claim by induction on j. The base case when j = 1 is direct. Thus suppose j > 1.
Fix the r.v’s {Si : i ∈ [j−1]},{Sg
i : i ∈ [j−2], g ∈ [t]}.

i : i ∈ [j−1], g ∈ [t]},{Ri : i ∈ [j−2]},{Rg

Using inductive hypothesis, it follows that

• Rj−1 is (2j − 3)ǫ-close to Ud1 ,
• Rj−1, R′j−1 are deterministic functions of {Y, Y′},
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m − (j − 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (j − 2)d1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.
Now since Sj = Ext1(Xj, Rj−1), it follows that Sj is 2(j − 1)ǫ-close to Ud1 on average con-
ditioned on Rj−1. We thus ﬁx Rj−1, and Sj is now a deterministic function of X. Next, we ﬁx
{Rg
j−1 : g ∈ [t]} without aﬀecting the distribution of Sj. Thus Sj, S′j are now a deterministic
function of X, X1, . . . , Xt. It follows that after these ﬁxings, the average conditional min-entropy
of Y is at least k1 − (j − 2)(t + 1)d1 − log(1/ǫ) − (t + 1)d1 = k1 − (j − 1)(t + 1)d1 − log(1/ǫ).
Next, we have Rj = Ext2(Y, Sj), and thus ﬁxing Sj, it follows that Rj is (2j − 1)ǫ-close to
uniform on average. Further, since Rj is now a deterministic function of Y, we ﬁx {Sg
j : g ∈ [t]}.
As a result of these ﬁxings, each Xi loses conditional min-entropy at most 2(t + 1)d1 on average.
This completes the inductive step, and hence the proof follows.
Claim 4.7. Conditioned on the r.v’s {Si : i ∈ [h − 1]},{Sg
{Rg

i : i ∈ [h], g ∈ [t]} the following hold:
• Sh is 2(h − 1)ǫ-close to Ud,
• Sh is a deterministic function of Xh,
• for each i ∈ [t], Xi has average conditional min-entropy at least m − (t + 1)hd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (t + 1)hd1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

: i ∈ [h], g ∈ [t]},{Ri : i ∈ [h − 1]},

i

Proof. We ﬁx the r.v’s {Si : i ∈ [h− 1]},{Sg
g ∈ [t]}, and using Claim 4.6 the following hold:

i : i ∈ [h− 1], g ∈ [t]},{Ri : i ∈ [h− 2]},{Rg

i : i ∈ [h− 2],

• Rh−1 is (2h − 3)ǫ-close to Ud,

18

h−1 : g ∈ [t]} are deterministic functions of Y,{Yg : g ∈ [t]},

• Rh−1,{Rg
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m− (t + 1)(h− 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (t + 1)(h − 2)d1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

h : g ∈ [t]}. Before ﬁxings any other r.v, we have Xh|{Xg

Next we claim that Xh has average conditional min-entropy at least m− (h− 1)(t + 1)d1 − log(1/ǫ)
even after ﬁxing {Xg
h : g ∈ [t]} is ǫ-close
to uniform on average. Since while computing the average conditional min-entropy, the order of
ﬁxing does not matter, we can as well think of ﬁrst ﬁxing of {Xg
h : g ∈ [t]} and then ﬁxing the r.v’s
{Si : i ∈ [h − 1]},{S′i : i ∈ [h − 1]},{Ri : i ∈ [h − 2]},{R′i : i ∈ [h − 2]}. Thus, it follows that the
average conditional min-entropy of Xh is at least m − (t + 1)(h − 1)d1 − log(1/ǫ).
h−1 : g ∈ [t]}, the r.v Sh is
2(h−1)ǫ-close to uniform on average. Fix {Xg
h : g ∈ [t]} and by the above argument Xh has average
conditional min-entropy at least m − (t + 1)(h − 1)d1 − log(1/ǫ). Since Sh = Ext1(Xh, Rh−1), it
follows that Sh is 2(h−1)ǫ-close to uniform on average conditioned on Rh−1. We ﬁx Rh−1, and thus
Sh is now a deterministic function of Xh. Note that Sg
h−1) is now a deterministic
h (and thus Yg). Thus, we can ﬁx {Rg
function of Rg
h : g ∈ [t]})
without aﬀecting the distribution of Sh.

h = Ext1(Xg
h : g ∈ [t]} (which also ﬁxes {Sg

We now prove that even after ﬁxing the r.v’s {Xg

h : g ∈ [t]}, Rh−1,{Rg

h, Rg

h : g ∈ [t]}. We ﬁx {Sg

Observe that once the r.v’s Rh−1,{Rg

h : g ∈ [t]} is a deterministic
function of {Xg
h : g ∈ [t]}, and note that
Sh is still 2(h − 1)ǫ-close to uniform. Further after these ﬁxings, each Xi has average conditional
min-entropy at least m− (t + 1)hd1 − log(1/ǫ), and Y has average conditional min-entropy at least
k1 − (t + 1)hd1 − log(1/ǫ).

h−1 : g ∈ [t]} are ﬁxed, {Sg
h : g ∈ [t]} and do not ﬁx {Xg

Theorem 4.5 follows directly from the following claim.

Claim 4.8. For any j ∈ [h, ℓ], conditioned on the r.v’s {Si : i ∈ [j − 1]},{Sg
{Ri : i ∈ [j − 1]},{Rg

i : i ∈ [j], g ∈ [t]} the following hold:

i

: i ∈ [j], g ∈ [t]},

• Sj is 2(j − 1)ǫ-close to Ud,
• Sj is a deterministic function of Xj
• for each i ∈ [ℓ], Xi has average conditional min-entropy at least m−(t+1)(j +1)d1−log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (t + 1)jd1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

: i ∈ [j]},{Sg

i

: i ∈ [j + 1], g ∈ [t]},{Ri

Further, conditioned on the r.v’s {Si
{Rg
i : i ∈ [j], g ∈ [t]} the following hold:
• Rj is (2j − 1)ǫ-close to Ud,
• Rj is a deterministic function of Y,
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m− (t + 1)(j + 1)d1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (t + 1)jd1 − log(1/ǫ),

: i ∈ [j − 1]},

19

• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

i : i ∈ [h], g ∈ [t]}. Using Claim 4.7, it follows that

Proof. We prove this by induction on j. For the base case, when j = h, ﬁx the r.v’s {Si : i ∈ [h−1]},
{Sg

i : i ∈ [h], g ∈ [t]},{Ri : i ∈ [h − 1]},{Rg
• Sh is 2(h − 1)ǫ-close to Ud,
• Sh is a deterministic function of Xh,
• for each i ∈ [ℓ], Xi has average conditional min-entropy at least m − (t + 1)hd1 − log(1/ǫ),
• Y has average conditional min-entropy at least d − (t + 1)hd1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

h : g ∈ [t]} is ﬁxed, {Sg

Noting that Rh = Ext2(Y, Sh), we ﬁx Sh and Rh is 2hǫ-uniform on average after this ﬁxing. We
note that Rh is now a deterministic function of Y. Since {Rg
h+1 : g ∈ [t]} is a
deterministic function of {Xg
h+1 : g ∈ [t]}, and we ﬁx it without aﬀecting the distribution of Rh. The
average conditional min-entropy of each Xi after these ﬁxings is at least m−(t+1)(h+1)d1−log(1/ǫ).
: i ∈ [j], g ∈ [t]},{Ri : i ∈ [j − 2]},
{Rg

Now suppose j > h. Fix the r.v’s {Si : i ∈ [j − 1]},{Sg
i : i ∈ [j − 1], g ∈ [t]}. By inductive hypothesis, the following hold:
• Rj−1 is (2j − 3)ǫ-close to Ud,
• Rj−1 is a deterministic function of Y,
• for any i ∈ [ℓ], Xi has average conditional min-entropy at least m − (t + 1)jd1 − log(1/ǫ),
• Y has average conditional min-entropy at least k1 − (t + 1)(j − 1)d1 − log(1/ǫ),
• {X, X1, . . . , Xt} is independent of {Y, Y1, . . . , Yt}.

i

Using the fact that Sj = Ext1(Xj, Rj−1), we ﬁx Rj−1 and Sj is (2j − 2)ǫ-close to uniform on
average after this ﬁxing. Further, Sj is a deterministic function of Xj. Since {Sg
j : g ∈ [t]} is ﬁxed,
it follows that {Rg
j : g ∈ [t]} is a deterministic function of Y and we ﬁx it without aﬀecting the
distribution of Sj. We note that after these ﬁxings, Y has average conditional min-entropy at least
k1 − (t + 1)jd1 − log(1/ǫ).
Now, we ﬁx Sj and it follows that Rj is a deterministic function of Y and is (2j − 1)ǫ-close
to uniform on average. Further, since {Rg
j+1 : g ∈ [t]} is a
deterministic function of Xj+1 and we ﬁx it without aﬀecting the distribution of Rj. The average
conditional min-entropy of each Xi after these ﬁxings is at least m − (t + 1)jd1 − log(1/ǫ).

j : g ∈ [t]} is ﬁxed, it follows that {Sg

This completes proof of the inductive step, and the claim now follows.

4.3 A Recursive Non-Malleable Independence Preserving Merger

In this section, we show a recursive way of applying the (ℓ, t)-NIPM constructed in the previous
section in order to achieve better trade-oﬀ between parameters. This object is crucial in obtaining
our near optimal non-malleable extractor construction.

20

Notation: For an a × b matrix V, and any S ⊆ [a], let VS denote the matrix obtained by

restricting V to the rows indexed by S.

Our main result in this section is the following theorem.

Theorem 4.9. For all integers m, ℓ, L, t > 0, any ǫ > 0, r = ⌈ log L
log ℓ ⌉ and any d = (c4.5ℓ log(m/ǫ) +
d′)(t + 2)r+1, there exists an explicit function (L, ℓ, t)-NIPM : {0, 1}mL × {0, 1}d → {0, 1}m′ , m′ =
(0.9/t)r(m − c4.5ℓ(t + 1)r log(m/ǫ)), such that if the following conditions hold:

• X, X1, . . . , Xt are r.v’s, each supported on boolean L × m matrices s.t for any i ∈ [L], |Xi −

Um| ≤ ǫ,

• {Y, Y1, . . . , Yt} is independent of {X, X1, . . . , Xt}, s.t Y, Y1, . . . , Yt are each supported on

{0, 1}d and H∞(Y) ≥ d − d′,

• there exists an h ∈ [ℓ] such that |(Xh, X1

h, . . . , Xt

h) − (Um, X1

h, . . . , Xt

h)| ≤ ǫ,

then

|(L, ℓ, t)-NIPM((X, Y), (L, ℓ, t)-NIPM(X1, Y1), . . . , (L, ℓ, t)-NIPM(Xt, Yt), Y, Y1, . . . , Yt
−Um1 , (L, ℓ, t)-NIPM(X1, Y1), . . . , (L, ℓ, t)-NIPM(Xt, Yt), Y, Y1, . . . , Yt| ≤ 2c′4.5Lǫ.

Proof. We set up parameters and ingredients required in our construction.

• For i ∈ [r], let Li = ⌈ L
ℓi⌉.
• Let d1 = d′ + log(1/ǫ) + c4.5(t + 1)ℓ log(m/ǫ). For i ∈ [r], let di = (t + 2)di−1.
• Let m0 = m. For i ∈ [r], deﬁne mi = 0.9i(m − ic4.5(t + 1)ℓ log(m/ǫ))
• For each i ∈ [r], let (ℓ, t)-NIPMi : {0, 1}ℓmi × {0, 1}di → {0, 1}mi+1 be an instantiation of the

function from Theorem 4.5 with error parameter ǫ.

Algorithm 1: (L, ℓ, t)-NIPM(x, y)
Input: x is a boolean L × m matrix, and y is a bit string of length d.
Output: A bit string of length mr.
1 Let x[0] = x.
2 for i = 1 to r do
3

Let y[i] = Slice(y, di)
Let x[i] be a Li × mi matrix, whose j’th row x[i]j = (ℓ, t)-NIPMi(x[i − 1][(j−1)ℓ+1,jℓ], y[i])

4

5 end
6 Ouput x[r].

We prove the following claim from which it is direct that the function (L, ℓ, t)-NIPM computed by
Algorithm 1 satisﬁes the conclusion of Theorem 4.9. Let ǫ0 = ǫ, and for i ∈ [r], let ǫi = ℓǫi−1+c′4.5ℓǫ.

Claim 4.10. For all i ∈ [r], conditioned on the r.v’s {Y[j] : j ∈ [i]},{Yg[j] : j ∈ [i], g ∈ [t]}, the
following hold:

21

• X[i], X1[i], . . . , Xt[i] are r.v’s, each supported on boolean Li× mi matrices s.t for any j ∈ [Li],

|X[i]j − Umi| ≤ (c′4.5ℓ)iǫ,

• {Y, Y1, . . . , Yt} is independent of {X[i], X[i]1, . . . , X[i]t}.
• there exists an hi ∈ [Li] such that X[i]h|{X[i]1
h, . . . , X[i]t
• Y has average conditional min-entropy at least d − di+1 + c4.5(t + 1)ℓ log(m/ǫ).

h} is ǫi-close to Umi on average,

Proof. We prove this claim by an induction on i. The base case, when i = 0, is direct. Thus suppose
i ≥ 1. Fix the r.v’s {Y[j] : j ∈ [i − 1]},{Yg[j] : j ∈ [i − 1], g ∈ [t]}. By inductive hypothesis, it
follows that

• X[i − 1], X1[i − 1], . . . , Xt[i − 1] are r.v’s each supported on boolean Li−1 × mi−1 matrices s.t

for any j ∈ [Li−1], |X[i − 1]j − Um−1| ≤ (c′4.5ℓ)i−1ǫ,

• {Y[i − 1], Y1[i − 1], . . . , Yt[i − 1]} is independent of {X[i − 1], X[i − 1]1, . . . , X[i − 1]t}.
• hi ∈ [Li] such that X[i − 1]h|{X[i − 1]1
h} is ǫi−1-close to Umi−1 on average,
• Y has average conditional min-entropy at least d − di + c4.5(t + 1)ℓ log(m/ǫ).

h, . . . , X[i − 1]t

Thus the r.v Y[i] = Slice(Y, di) has average conditional min-entropy at least c4.5(t + 1)ℓ log(n/ǫ).
Let hi ∈ [ℓ(hi − 1) + 1, ℓhi], for some hi ∈ [Li]. By Claim 4.6, it follows that conditioned on the
r.v’s Y[i],{Yg[i] : g ∈ [t]}, for any j ∈ [Li], |X[i]j − Um| ≤ ℓǫi−1 + c′4.5ℓǫ = ǫi.
Further, using Theorem 4.5, conditioned on Y[i],{Yg[i] : g ∈ [t]},{Xg[i]hi : g ∈ [t]}, the r.v
X[i]hi is ℓǫi−1 + c′4.5ℓǫ-close to uniform on average.
Thus, we ﬁx the r.v’s Y[i],{Yg[i] : g ∈ [t]}, and note that Y still has average conditional
min-entropy at least d − di + c4.5(t + 1)ℓ log(m/ǫ) − (t + 1)di ≥ d − di+1 + c4.5(t + 1)ℓ log(m/ǫ).
This completes the proof of the inductive step, and the theorem follows.

4.4 An Independence Preserving Merger Using a Weak Source

In this section, we show a way of using the (L, ℓ, t)-NIPM constructed in the Section 4.3 to merge
the r.v’s X, X1, . . . , Xt, each supported on boolean L × m matrices, with the guarantee that there
is some h ∈ [L] s.t Xh is uniform on average conditioned on {Xg
h : g ∈ [t]} using an independent (n,
k)-source Y (instead of a seed as in the previous section). We note that our construction provides a
direct improvement in terms of parameters over [CS16], and further uses just 1 independent source.
In Section 8, we use this new merger to improve upon the results on multi-source extractors obtained
in [CS16].

We use the following notation, as introduced before.
Notation: For an a × b matrix V, and any S ⊆ [a], let VS denote the matrix obtained by

restricting V to the rows indexed by S.

Our main result in this section is the following theorem. We reuse the constants c4.5, c′4.5 from

Theorem 4.5.

22

Theorem 4.11. For all integers m, ℓ, L, t > 0, any ǫ > 0, r = ⌈ log L
log ℓ ⌉ and any k ≥ 2c4.5ℓ log(m/ǫ)(t+
2)r+2, there exists an explicit function (L, ℓ, t)-IPM : {0, 1}mL × {0, 1}n → {0, 1}m′′ , m′′ =
(0.9/t)r+1(m − c4.5ℓ(t + 1)r log(m/ǫ) − c3.8(t + 2) log(n/ǫ))), such that if the following conditions
hold:

• X, X1, . . . , Xt are r.v’s, each supported on boolean L × m matrices s.t for any i ∈ [L], |Xi −

Um| ≤ ǫ,

• Y is an (n, k)-source, independent of {X, X1, . . . , Xt}.
• there exists an h ∈ [ℓ] such that |(Xh, X1

h, . . . , Xt

h)| ≤ ǫ,

h) − (Um, X1

h, . . . , Xt

then

|(L, ℓ, t)-IPM(X, Y), (L, ℓ, t)-IPM(X1, Y), . . . , (L, ℓ, t)-NIPM(Xt, Y)
−Um′′, (L, ℓ, t)-IPM(X1, Y), . . . , (L, ℓ, t)-IPM(Xt, Y)| ≤ 3c′4.5Lǫ.

Proof. We set up parameters and ingredients required in our construction.

• Let d = 0.8k, d′ = c3.8 log(m/ǫ), d1 = c3.8 log(n/ǫ).
• Let Ext1 : {0, 1}n × {0, 1}d1 → {0, 1}d be a (k, ǫ)-strong-seeded extractor from Theorem 3.8.
• Let Ext2 : {0, 1}m ×{0, 1}d′ → {0, 1}m′ , m′ = 0.9(m− c3.8(t + 1) log(n/ǫ)), be a (m− c3.8(t +

1) log(n/ǫ), ǫ)-strong-seeded extractor from Theorem 3.8.

• Let (L, ℓ, t)-NIPM : {0, 1}Lm′ × {0, 1}d → {0, 1}m′′ be the function from Theorem 4.9 with

error parameter ǫ.

Algorithm 2: (L, ℓ, t)-IPM(x, y)
Input: x is a boolean L × m matrix, and y is a bit string of length n.
Output: A bit string of length m′′.
1 Let w = Slice(x1, d1)
2 Let z = Ext1(y, w).
3 Let v = Slice(z, d′).
4 Let v be a L × m′-matrix, whose i’th row is given by vi = Ext2(xi, v).
5 Output z = (L, ℓ, t)-NIPM(v, z).

We begin by proving the following claim.
Claim 4.12. Conditioned on W,{Wg : g ∈ [t]}, the following hold:

• Z is ǫ-close to Ud,
• Z,{Zg : g ∈ [t]} is independent of X,{Xg : g ∈ [t]},
• For each i ∈ [L], Xi has average conditional min-entropy at least m − (t + 2) log(n/ǫ),
• Xh|{Xg
h : g ∈ [t]} has average conditional min-entropy at least m − (t + 2)d1 log(n/ǫ).

23

Proof. Since Ext1 is a strong extractor, we can ﬁx W, and Z is ǫ-close to Ud on average. Further,
Z is now a deterministic function of X1. Thus, we can ﬁx {W1, . . . , Wt}, without aﬀecting the
distribution of Z. Since Wi is on d1 bits, and without any prior conditioning since X|{Xg
h : g ∈ [t]}
is ǫ-close to uniform on average, it follows that conditioned on {Xg
h : g ∈ [t]}, W,{Wg : g ∈ [t]},
the r.v Xh has average conditional min-entropy m − (t + 1)d1 log(n/ǫ) − log(1/ǫ).
Claim 4.13. Conditioned on W,{Wg : g ∈ [t]}, V,{Vg : g ∈ [t]}, the following hold:

t

1

, . . . , V

} is a deterministic function of {X, X1, . . . , Xt},

• {Z, Z1, . . . , Zt} is independent of {X, X1, . . . , Xt},
• {V, V
• For each i ∈ [L], Vi is 2ǫ-close to uniform,
• Vh|{V
• Z has average conditional min-entropy at least d − (t + 2) log(m/ǫ).

h : g ∈ [t]} is 2ǫ-close to uniform on average.

g

Proof. Fix W,{Wg : g ∈ [t]}. Thus, by Claim 4.12, we have

h : g ∈ [t]} has average conditional min-entropy at least m − (t + 2) log(n/ǫ).

• Z is ǫ-close to Ud,
• Z,{Zg : g ∈ [t]} is independent of X,{Xg : g ∈ [t]},
• For each i ∈ [L], Xi has average conditional min-entropy at least m − (t + 2) log(n/ǫ),
• Xh|{Xg
Since each Xi has average conditional min-entropy at least m − (t + 2) log(n/ǫ), it follows that
each Vi is 2ǫ-close to uniform and Ext2 is a strong extractor, it follows that Vi is 2ǫ-close to
Ud on average even conditioned on {V, V1, . . . , Vt}. After this ﬁxing, Z has average conditional
min-entropy at least d − (t + 2) log(n/ǫ).
h : g ∈ [t]} is 2ǫ-close to uniform on average. First, we ﬁx the r.v’s
W,{Wg : g ∈ [t]} (at this point no other r.v’s are ﬁxed). As before, we have Xh|{Xg
h : g ∈ [t]}
has average conditional min-entropy kx ≥ m − (t + 2) log(n/ǫ). Thus, we ﬁx {Xg
h : g ∈ [t]}. Now
since Ext2 is a strong extractor, Vh is uniform on average even conditioned on V. We ﬁx V, and
h : g ∈ [t]} is a deterministic function of
thus Vh is a deterministic function of Xh. Further, {V
{Vg : g ∈ [t]}, and hence a deterministic function of Z,{Zg : g ∈ [t]}. Thus, we can ﬁx {V
h : g ∈ [t]}
without aﬀecting the distribution of Vh. This completes the proof of our claim.

We now prove that Vh|{V

g

g

g

The correctness of the function IPM is direct from the next claim.

Claim 4.14. Conditioned on {Z
Proof. Fix the r.v’s W,{Wg : g ∈ [t]}, V,{Vg : g ∈ [y]}. We observe that the following hold:

: g ∈ [t]}}, the r.v Z is 3Lǫ-close to uniform on average.

g

• Z,{Zg : g ∈ [t]} is independent of Y,{Yg : g ∈ [t]},
• For each i ∈ [L], Vi is 2ǫ-close to uniform,
• Vh|{V
• Z has average conditional min-entropy at least d − (t + 2) log(m/ǫ).

h : g ∈ [t]} is 2ǫ-close to uniform on average.

g

24

The claim is now direct from Theorem 4.9 by observing that by our choice of parameters, the
following hold:

• d ≥ (c4.5ℓ log(m/ǫ) + d′′)(t + 2)r+1, where d′′ = (t + 2) log(m/ǫ),
• Z has average conditional min-entropy at least d − d′′,
• m′′ ≤ (0.9/t)r(m′ − c4.5ℓ(t + 1)r log(m/ǫ)).

This completes the proof of the claim, and hence Theorem 4.11 follows.

5 Explicit Almost-Optimal Non-Malleable Extractor

We present an explicit construction of a non-malleable extractor with min-entropy requirement
k = (log(n/ǫ))1+o(1) and seed-length d = (log(n/ǫ))1+o(1). We also show a way of setting parameters
that allows for O(log n) seed-length for large enough error. The following are the main results of
this section.

Theorem 5.1. There exist a constant C5.1 > 0 s.t for all n, k ∈ N and any ǫ > 0, with k ≥
log(n/ǫ)2C5.1√log log(n/ǫ), there exists an explicit (k, ǫ)-non-malleable extractor nmExt : {0, 1}n ×
{0, 1}d → {0, 1}m, where d = log(n/ǫ)2C5.1√log log(n/ǫ) and m = k/2√log log(n/ǫ).
Theorem 5.2. There exist a constant C5.2 > 0 s.t for constant β > 0 and all n, k ∈ N and
any ǫ > 2− log1−β (n), with k ≥ C5.2 log n, there exists an explicit (k, ǫ)-non-malleable extractor
nmExt : {0, 1}n × {0, 1}d → {0, 1}m, where d = O(log n) and m = Ω(log(1/ǫ)).

We derive both the above theorems from the following theorem.

Theorem 5.3. There exist constants δ5.3, C5.3 > 0 s.t for all n, k ∈ N and any error parameter
ǫ1 > 0, with k ≥ log(k/ǫ1)2C5.3√log log(n/ǫ1) + C5.3 log(n/ǫ1), there exists an explicit (k, ǫ′)-non-
malleable extractor nmExt : {0, 1}n × {0, 1}d → {0, 1}m, where d = log(k/ǫ)2C5.3√log log(n/ǫ1) +
C5.3 log(n/ǫ1), m = δ5.3k/2√log log(n/ǫ1) and ǫ′ = C5.3ǫ1 log(n/ǫ1).

We ﬁrst show how to derive Theorem 5.1 and Theorem 5.2 from Theorem 5.3.

Proof of Theorem 5.1. Let nmExt : {0, 1}n × {0, 1}d → {0, 1}m be the function from Theorem 5.3
set to extract from min-entropy k, where we set the parameter ǫ1 = ǫ/2C5.3n . It follows that the
error of nmExt is

C5.3ǫ1 log(n/ǫ1) =

ǫ
2n

(log n + log(2C5.3n) + log(1/ǫ)) < ǫ.

Further note that for this setting of ǫ1, the min-entropy required and seed length are log(n/ǫ)2C5.1√log log(n/ǫ)+
C5.1 log(n/ǫ), for some constant C5.1.

25

Proof of Theorem 5.2. Let nmExt : {0, 1}n × {0, 1}d → {0, 1}m be the function from Theorem 5.3
set to extract from min-entropy 2C5.3 log(n/ǫ1), where we set the parameter ǫ1 = ǫ/2C5.3 log n.
Thus, the error of nmExt is

ǫ1 log(n/ǫ1) ≤

ǫ

2 log n

(log n + log(1/ǫ) + log(2C5.3 log n)) < ǫ.

For this setting of parameters, we note that the seed-length required by nmExt is bounded by

log((log2 n)/ǫ)2C5.3√log log(n log n/ǫ) + C5.3 log(n log n/ǫ) = O(log n).

We spend the rest of the section proving Theorem 5.3. We recall some explicit constructions

from previous work.

The following ﬂip-ﬂop function was constructed by Cohen [Coh15] using alternating extraction.
Subsequently, Chattopadhyay, Goyal and Li [CGL16], used this in constructing non-malleable ex-
tractors. Informally, the ﬂip-ﬂop function uses an independent source X to break the correlation
between two r.v’s Y and Y′, given an advice bit. We now describe this more formally.

Theorem 5.4 ([Coh15, CGL16]). There exist constants C5.4, δ5.4 > 0 such that for all n > 0
and any ǫ > 0, there exists an explicit function ﬂip-ﬂop : {0, 1}n × {0, 1}d → {0, 1}m, m = δ5.4k,
satisfying the following: Let X be an (n, k)-source, and Y be an independent weak seed on d bits
with entropy d − λ, λ < d/2. Let Y′ be a r.v on d bits independent of X, and let b, b′ be bits s.t.
b 6= b′. If k, d ≥ C5.4 log(n/ǫ), then

|ﬂip-ﬂop(X, Y, b), ﬂip-ﬂop(X, Y′, b′), Y, Y′ − Um, ﬂip-ﬂop(X, Y′, b′), Y, Y′| ≤ ǫ.

We now recall an explicit function advGen from [CGL16]. Informally, advGen takes as input
a source X and a seed Y and produces a short string such that for any r.v Y′ 6= Y, advGen(X,
Y) 6= advGen(X, Y). We record this property more formally.
Theorem 5.5 ([CGL16]). There exists a constant c5.5, C5.5 > 0 such that for all n > 0 and any
ǫ > 0, there exists an explicit function advGen : {0, 1}n × {0, 1}d → {0, 1}L, L = c5.5 log(n/ǫ)
satisfying the following: Let X be an (n, k)-source, and Y be an independent uniform seed on d
bits. Let Y′ be a r.v on d bits independent of X, s.t Y′ 6= Y. If k, d ≥ C5.5 log(n/ǫ), then

• with probability at least 1 − ǫ, advGen(X, Y) 6= advGen(X, Y′),
• there exists a function f such that conditioned on advGen(X, Y), advGen(X, Y′), f (X),

– X remains independent of Y, Y′,
– X has average conditional min-entropy at least k − C5.5 log(n/ǫ),
– Y has average conditional min-entropy at least d − C5.5 log(n/ǫ)

We are now ready to prove Theorem 5.3.

Proof of Theorem 5.3. We set up parameters and ingredients required in our construction.

• Let advGen : {0, 1}n × {0, 1}d → {0, 1}L, L = c5.5 log(n/ǫ1), be the function from Theorem

5.5 with error parameter ǫ1.

• Let d1 = (C5.5 + C5.4 + 1) log(n/ǫ1).

26

• Let ﬂip-ﬂop : {0, 1}n × {0, 1}d1 → {0, 1}m′ , m′ = δ5.4k, be the function from Theorem 5.4

with error parameter ǫ1.

• d2 = c3.8 log(d/ǫ1), d3 = c3.8 log(m′/ǫ1).
• Let Ext1 : {0, 1}n × {0, 1}d2 → {0, 1}d′ , d′ = 0.9d − 2d1 − C5.5 log(n/ǫ1) be a (d − 2d1 −

C5.5 log(n/ǫ1), ǫ1)-strong-seeded extractor from Theorem 3.8.

strong-seeded extractor from Theorem 3.8.

• Let Ext2 : {0, 1}m′ × {0, 1}d3 → {0, 1}m′′ , m′′ = 0.9m′ − 2d2, be a (m′ − 2d2 − log(1/ǫ1), ǫ1)-
• Let ℓ = 2√log L.
• Let (L, ℓ, 1)-NIPM : {0, 1}Lm′′ × {0, 1}d′ → {0, 1}m be the function from Theorem 4.9, m =

0.9rm′ − 2c4.5ℓ(t + 1)r log(m/ǫ1) with error parameter ǫ1.

Algorithm 3: nmExt(x, y)
Input: x, y are bit string of length n, d respectively.
Output: A bit string of length m.

string w).

1 Let w = advGen(x, y).
2 Let y = y1 ◦ y2, where y1 = Slice(y, d1).
3 Let v be a L × m′ matrix, whose i’th row vi = ﬂip-ﬂop(x, y1, wi) (wi is the i’th bit of the
4 Let v1 = Slice(v1, d2)
5 Let y = Ext1(y, v1) = y1 ◦ y2, where y1 = Slice(y, d3).
6 Let z be a L × m′′ matrix, whose i’th row zi = Ext2(vi, y1)
7 Output z = (L, ℓ, 1)-NIPM(z, y).

Notation: For any random variable H = g(X, Y) (where g is an arbitrary deterministic

We prove in the following claims that the function nmExt constructed in Algorithm 2 satisﬁes
the conclusion of Theorem 5.3. Let A be the adversarial function tampering the seed Y, and let
Y′ = A(Y). Since A has no ﬁxed points, it follows that Y 6= Y′.
function), let H′ = g(X, Y′).
Claim 5.6. With probability at least 1 − ǫ, W 6= W′.
Proof. Follows directly from Theorem 5.5.

Let f be the function guaranteed by Theorem 5.5.

Claim 5.7. Conditoned on the r.v’s W, W′, Y1, Y′1, f (X), the following hold:

• for each i ∈ [L], Vi is ǫ1-close to uniform,
• there exists an h ∈ [L] such that conditioned on V′h, the r.v Vh is ǫ1-close to uniform on

average,

• {V, V′} is independent of {Y, Y′}.
• Y has average conditional min-entropy at least d − C5.5 log(n/ǫ1) − 2d1.

27

Proof. Fix the r.v’s W, W′, f (X) such that W 6= W′. It follows from Theorem 5.5 that after this
conditioning,

• X is independent of Y, Y′,
• X has average conditional min-entropy at least k − C5.5 log(n/ǫ1),
• Y has average conditional min-entropy at least d − C5.5 log(n/ǫ1)

Thus Y1 = Slice(Y, d1) has average conditional min-entropy at least 2C5.4 log(n/ǫ1). The claim
now follows by applying Theorem 5.4.
Claim 5.8. Conditioned on the r.v’s W, W′, V1, V1′, Y1, Y′1Y1, Y1′, f (X), the following hold:

• Y has average conditional min-entropy at least d′ − 2d3 − log(1/ǫ).
• for each i ∈ [L], Zi is 3ǫ1-close to uniform on average.
• there exists h ∈ [L] such that further conditioned on Z′i, Zi is 3ǫ1-close to uniform on average.
• {Y, Y′} is independent of {Z, Z′}.

Proof. Fix the r.v’s W, W′, Y1, Y′1, f (X). By Claim 5.7, we have

• for each i ∈ [L], Vi is ǫ1-close to uniform,
• there exists an h ∈ [L] such that conditioned on V′h, the r.v Vh is ǫ1-close to uniform on

average,

• {V, V′} is independent of {Y, Y′}.
• Y has average conditional min-entropy at least d − C5.5 log(n/ǫ1) − 2d1.

V.

Using the fact that Ext1 is a strong extractor, it follows that we can ﬁx V1, and Y is 2ǫ1-close to
uniform on average. Further, Y is a deterministic function of Y. Thus, we ﬁx V1′ without aﬀecting
the distribution of Y. Now, using the fact that Ext2 is a strong extractor, we can ﬁx Y1, and we
have for each i ∈ [L], Zi is 3ǫ1-close to uniform on average. Next we can ﬁx Y1′ without aﬀecting
We prove that conditioned on Z′i, the r.v Zi is 3ǫ1-close to uniform on average in the following
way. For this argument, as above we ﬁx all r.v’s but do not yet ﬁx Y1, Y1′. Instead, we ﬁrst ﬁx
V′h, and Vh has average conditional min-entropy at least m′ − 2d2. We now ﬁx Y1, and as before
we have Zh is 3ǫ1-close. At this point, Z′h is a deterministic function of Y1′, and hence we can ﬁx
it without aﬀecting the distribution of Zh. This completes the proof.
Claim 5.9. Conditioned on Z′, the r.v Z is O(ǫ1 log(n/ǫ1))-close to uniform on average.

Proof. Fix the r.v’s W, W′, V1, V1′, Y1, Y′1Y1, Y1′, f (X). By Claim 5.8, the following hold:

• Y has average conditional min-entropy at least d′ − 2d3 − log(1/ǫ1).
• for each i ∈ [L], Zi is 3ǫ1-close to uniform on average.

28

• there exists h ∈ [L] such that further conditioned on Z′i, the r.v Zi is 3ǫ1-close to uniform on

average.

• {Y, Y′} is independent of {Z, Z′}.

log ℓ ⌉ = ⌈√log L⌉. Thus d′′ = O(log(k/ǫ1)), r = O(plog log(n/ǫ1)),
Let d′′ = 2d3 + log(1/ǫ1), r = ⌈ log L
ℓ = 2O(√log log(n/ǫ1)). In order to use Theorem 4.9, we observe that for a large enough constant
C5.3 the following hold:

• Y has conditional min-entropy at least d − d′′,
• d′ ≥ (c4.5ℓ log(m′′/ǫ1) + d′′)3r+1,
• m < (0.9)r(m′′ − c4.5ℓ(t + 1)r log(m/ǫ1)).

Thus the conditions of Theorem 4.9 are met, and hence it follows that conditioned on Z′, the r.v
Z is 2c′4.5Lǫ1-close to uniform on average. Recall that L = O(log(n/ǫ1)), and hence the claim
follows.

6

Improved t-Non-Malleable Extractors and 2-Source Extractors

The framework to construct non-malleable extractors in Section 5 can be generalized directly to
construct non-malleable extractors that can handle multiple adversaries.
Deﬁnition 6.1 (t-Non-malleable Extractor). A function t-nmExt : {0, 1}n × {0, 1}d → {0, 1}m is
a seeded t-non-malleable extractor for min-entropy k and error ǫ if the following holds : If X is
a source on {0, 1}n with min-entropy k and A1 : {0, 1}n → {0, 1}n, . . . ,At : {0, 1}n → {0, 1}n are
arbitrary tampering function with no ﬁxed points, then

|t-nmExt(X, Ud), t-nmExt(X,A1(Ud)), . . . , t-nmExt(X,At(Ud)), Ud
−Um ◦ t-nmExt(X,A1(Ud)), . . . , t-nmExt(X,At(Ud)), Ud| < ǫ

In particular, Theorem 5.4 and Theorem 5.5 both generalize to the case there are t tampered
variables, and further our NIPM construction in Theorem 4.5 handles t adversaries. By using these
versions of the components in the above construction, the following theorem is easy to obtain. Since
the proof is similar to the proof of Theorem 5.3, we omit the proof of the following theorem.

Theorem 11. There exists a constant δ > 0 such that for all n, k, t, ℓ ∈ N and any ǫ > 0,
with r = (log log(n/ǫ))/(log ℓ), k = Ω(t2rℓ log(n/ǫ)), there exists an explicit (t, k, ǫ)-non-malleable
extractor nmExt : {0, 1}n × {0, 1}d → {0, 1}m, where d = O(t(1+δ)rℓ log(n/ǫ)) and m = (δk −
ℓtr log(n/ǫ))/(2t)(log L/ log ℓ).

As discussed in the introduction, such non-malleable extractors were used in [CZ16] to construct
two-source extractors, with subsequent improvements in parameters [Li15a, Mek15]. Combining
the framework of [CZ16], with the improved components from [Li15a, Mek15] and our new t-non-
malleable extractor from Theorem 11, the following results are easy to obtain by suitably optimizing
parameters.

29

Theorem 12. There exists a constant C > 0 such that for any δ > 0 and for all n, k ∈ N
with k ≥ C(log n)2√6(1+δ)+3 and any constant ǫ < 1
2 , there exists an eﬃcient polynomial time
computable 2-source extractor min-entropy k with error ǫ that outputs 1 bit.
Theorem 13. There exists a constant C > 0 such that for any δ > 0 and for all n, k ∈ N with
k ≥ C(log(n))4√5(1+δ)+5, there exists an eﬃcient polynomial time computable 2-source extractor
min-entropy k with error n−Ω(1) and output length Ω(k).

7 A More Involved NIPM and Non-Malleable Extractor

In this section we use our previous NIPM to construct a more involved NIPM, which can be used
to give explicit non-malleable extractors with either a better seed length or a better min-entropy
requirement. For simplicity and clarity, we will just assume t = 1, i.e., there is only one tampering
adversary. This is also the most interesting case for standard privacy ampliﬁcation protocols.

Note that our previous NIPM construction implies Theorem 8, which we restate for convenience.

Theorem 8 (restated). For all integers m, L > 0, any ǫ > 0, there exists an explicit (L, 1,
2√log L −

0, ǫ, ǫ′)-NIPM : {0, 1}mL × {0, 1}d → {0, 1}m′ , where d = 2O(√log L) log(m/ǫ), m′ =
2O(√log L) log(m/ǫ) and ǫ′ = O(ǫL).

m

We start by proving the following lemma.

log(m/ǫ), m1 =

Lemma 7.1. For all integers m, L > 0, any ǫ > 0, if there is an explicit (L, 1, 0, ǫ, ǫ1)-NIPM1 :
{0, 1}mL×{0, 1}d1 → {0, 1}m1 , with d1 ≤ 2r(log L)1/q
and ǫ1 ≤ g(L)ǫL, where g(L) is a monotonic non-decreasing function of L, and r, s, q are param-
eters, with q ∈ N, then there is an explicit (L, 1, 0, ǫ, ε2)-NIPM2 : {0, 1}mL × {0, 1}d2 → {0, 1}m2 ,
with d2 ≤ 22r1−1/(q+1)(log L)
q+1 (log L)1−1/(q+1) − 2O((log L)1−1/(q+1)) log(m/ǫ)) and
ε2 ≤ 2ε1.
Proof. The idea is to use Algorithm 1, with (ℓ, 1, 0, ǫ, ǫ′1)-NIPM1, ǫ′1 ≤ g(ℓ)ℓǫ as the simpler merger
for some parameter ℓ s.t. in each step, the merger acts on ℓ rows. Following the proof of Theorem
4.9, it can be shown that the seed length of NIPM2 will be

q+1 log(m/ǫ), m2 =

2sr

m

2s(log L)1−1/q −2O((log L)1−1/q) log(m/ǫ)

m

1

1

d2 = log(m/ǫ)2r(log ℓ)1/q

22 log L
log ℓ .

We now choose an ℓ to minimize this, which gives (log ℓ)

q+1

q = 2 log L

r

, and thus the seed length is

It can be veriﬁed that for this setting of parameters, the output length is

d2 = 22r

q

q+1 (2 log L)

1

q+1 log(m/ǫ).

m2 =

m

(2s(log L)1−1/q )

m

1

q+1 (log L)
m

=

=

2sr

2sr

log L

log ℓ − O(ℓ log(m/ǫ))
q+1 − 2O(( log L

)

r

q

q

q+1 ) log(m/ǫ)

q+1 (log L)1−1/(q+1) − 2O((log L)

1

q

q+1 ) log(m/ǫ))

30

Finally, the error is bounded by P log L

log ℓ

i=1 g(ℓ)ǫℓi < 2g(ℓ)Lǫ < 2ǫ1.

Now, starting with the NIPM from Theorem 8, and using Lemma 7.1 an optimal number of

times, we have the following theorem.

Theorem 10 (restated). For all integers m, L > 0, any ǫ > 0, there exists an explicit (L, 1, 0, ǫ,
L2(log log L)O(1) −

ǫ′)-NIPM : {0, 1}mL × {0, 1}d → {0, 1}m′ , where d = 2O(√log log L) log(m/ε), m′ =
O(L log(m/ε)) and ǫ′ = 2O(√log log L)Lε.

m

Proof. We start from the basic case with the (L, 1, 0, ǫ, ǫ′) − NIPM from Theorem 8. Thus q = 2,
r = O(1), s = 1. We now use Lemma 7.1, increasing q by one each time. Eventually, we stop at
q = √log log L, noticing that this minimize the seed length. It can be veriﬁed that the seed length
of the ﬁnal NIPM is 2O(√log log L) log(m/ε), the output length is
L2(log log L)O(1) − O(L log(m/ε)) and
the error is bounded by ε ≤ 2O(√log log L)Lε.

m

Using the NIPM from Theorem 10 in Algorithm 3, we obtain the following non-malleable
extractor with a slightly shorter seed length than Theorem 5.3 at the expense of requiring larger
min-entropy.
Theorem 4 (restated). For all n, k ∈ N and any ǫ > 0, with k ≥ (log(n/ǫ))32(log log log(n/ǫ))O(1)
,
there exists an explicit (k, ǫ)-non-malleable extractor nmExt : {0, 1}n × {0, 1}d → {0, 1}m, where
d = log(n/ǫ)22O(√log log log(n/ǫ))

log(n/ǫ)2(log log log(n/ǫ))O(1) − O((log(n/ǫ))2).

, m =

k

The proof of Theorem 4 is exactly similar to Theorem 5.3, and we skip it.

It is not hard to modify Algorithm 3 such that the the role of the source and the seed are
swapped, in the sense that the seed to NIPM is a deterministic function of the source to the non-
malleable extractor, and the matrix is a deterministic function of the seed to the non-malleable
extractor. By this modiﬁcation. we can achieve a non-malleable extractor that works for lower
slightly min-entropy than Theorem 5.3 at the expense of using a larger seed. We state the following
theorem without proof.

Theorem 3 (restated). For all n, k ∈ N and any ǫ > 0, with k ≥ log(n/ǫ)22Ω(√log log log(n/ǫ))
,
there exists an explicit (k, ǫ)-non-malleable extractor nmExt : {0, 1}n × {0, 1}d → {0, 1}m, where
d = (log(n/ǫ))32(log log log(n/ǫ))O(1)

, m = Ω(k).

8

Improved Multi-Source Extractors

In this section, we construct extractors for a constant number of independent sources X1, . . . , XC ,
each with min-entropy ˜O(log n). In particular, this improves upon a recent result of Cohen and
Schulman [CS16], where they constructed an extractor for O(1/δ) independent sources, with each
having min-entropy log1+δ(n).

Our main result in this section is the following.

Theorem 7 (restated). There exists a constant C > 0 s.t for all n, k ∈ N and any constant ǫ > 0,
with k ≥ 2C√log log(n) log n, there exists an explicit function Ext : ({0, 1}n)C → {0, 1}, such that

|Ext(X1, . . . , XC ) − U1| ≤ ǫ.

31

Our starting point is the following reduction from [CS16]. Informally, a constant number of
independent sources are used to transform into a sequence of matrices such that a large fraction of
the matrices follow a certain t-wise independence property. For our purposes, we need to slightly
modify this construction. The length of the rows (the parameter m in the following theorem) in
the work of [CS16] can be set to c log(n/ǫ), for any constant c. Using another additional source and
extracting from it using each row as seed (using any optimal strong-seeded extractor), the length
of each row can be made Ω(k). We state the theorem from [CS16] with this modiﬁcation.

Theorem 8.1 ([CS16]). There exists constants α > 0 and and c8.1 such that for all n, t ∈ N, and
for any ǫ, δ > 0, there exists an polynomial time computable function f : ({0, 1}n)C → ({0, 1}Lm)r,
where C = 7/α, L = O(t log n), r = n3/α, m = Ω(k), such that the following hold: Let X1, . . . , XC
be independent (n, k) sources, k = c8.1t log(t) log(n log t/ǫ). Then there exists a subset S ⊂ [r],
|S| ≥ r − r

2−α and a sequence of L × m matrices Y1, . . . , Yr such that:

1

• f (X1, . . . , XC ) is 1/r-close to Y1, . . . , Yr,
• for any i ∈ [L] and g ∈ S, Yg
• for any g ∈ S, and any distinct i1, . . . , it in S \ {g}, there exists an h ∈ [L] such that

i is ǫ-close to Um,

Yg
h|{Yj

h : j ∈ [r] \ {g}} is ǫ-close to uniform.

Now composing the above theorem with our independence preserving merger from Section 4.4,

we have the following result.

Theorem 8.2. There exists a constant α > 0 such that for all n, t ∈ N, and for any ǫ, δ >
0, there exists an polynomial time computable function reduce : ({0, 1}n)C+1 → {0, 1}r, where
C = 7
α + 1, r = n3/α, such that the following hold: Let X1, . . . , XC be independent (n, k) sources,
k ≥ 2√log t+log log n log(k/ǫ)(t + 2)O(√log t+log log n) + c8.1t log(t) log(n log t/ǫ), and let Z = reduce(X1,
2−α such that ZS is n−Ω(1)-close to a
. . . , XC+1). Then there exists a subset S ⊂ [r], |S| ≥ r − r
(t, γ8.2)-wise independent distribution, where γ8.2 = O(ǫt log n).
Proof. Let f : ({0, 1}n)C → ({0, 1}Lm)r be the function from Theorem 8.1 with ǫ8.1 = ǫ, m = βk
for some constant β > 0. Thus L = O(t log n). Let (L, ℓ, t)-IPM : ({0, 1}Lm)t × {0, 1} be the
function from Theorem 4.11, with ℓ = 2√log L = 2O(√log t+log log n) and error parameter ǫ4.11 = ǫ.
Deﬁne

1

reduce(x1, . . . , xC+1) = (L, ℓ, t)-IPM(f (x1, . . . , xC), xC+1).

We note that k > c8.1t log(t) log(n log t/ǫ). Thus, using Theorem 8.1, it follows that there exists a
subset S ⊂ [r], |S| ≥ r − r

2−α and a sequence of L × m matrices Y1, . . . , Yr such that:

1

• f (X1, . . . , XC ) is 1/r-close to Y1, . . . , Yr,
• for any i ∈ [L] and g ∈ S, Yg
• for any g ∈ S, and any distinct i1, . . . , it in S \ {g}, there exists an h ∈ [L] such that

i is ǫ-close to Um,

Yg
h|{Yj

h : j ∈ [r] \ {g}} is ǫ-close to uniform.

We now work with the sources Y1, . . . , Yr, and add an error of 1/r in the end. The theorem is
now direct using Theorem 4.11 and observing that the following hold by our setting of parameters:

• k ≥ 2c4.5ℓ log(k/ǫ)(t + 2)⌈ log L

log ℓ ⌉+1,

32

• m = βk ≥ 2√log L(c4.5ℓ(t + 1)r log(m/ǫ) + c3.8(t + 2) log(n/ǫ)).

Our multi-source extractor in Theorem 7 is now easy to obtain using a result on the majority

function.

Theorem 8.3 ([DGJ+10, Vio14, CS16]). Let Z be a source on r bits such that there exists a subset
S ⊂ [r], |S| ≥ r − r

2−α such that ZS is t-wise independent. Then,

1

(cid:12)(cid:12)(cid:12)(cid:12)Pr[Majority(Z) = 1] −

1

2(cid:12)(cid:12)(cid:12)(cid:12) ≤ O(cid:18) log t

t

+ r−α(cid:19) .

We also recall a result about almost t-wise independent distributions.

Theorem 8.4 ([AGM03]). Let D be a (t, γ)-wise independent distribution on {0, 1}n. Then there
exists a t-wise independent distribution that is ntγ-close to D.

Thus, we have the following corollary.

Corollary 8.5. There exists a constant c such that the following holds: Let Z be a source on r
2−α such that ZS is (t, γ)-wise independent.
bits such that there exists a subset S ⊂ [r], |S| ≥ r − r
Then,

1

| Pr[Majority(Z) = 1] −

1

2| ≤ c(cid:18) log t

t

+ r−α + γrt(cid:19) .

Proof of Theorem 7. Set t to a large enough constant such that c log t
t < ǫ/2. Let α be the constant
from Theorem 8.2, r = n3/α and C = 7
α + 1. Let reduce be the function from Theorem 8.2 with
parameter t8.2 = t, r8.2 = r, and the error parameter ǫ8.2 set such that the parameter γ8.2 ≤ 1
rt+1 .
This can be ensured by setting ǫ = n−C′ for a large enough constant C′.

Deﬁne

Ext(x1, . . . , xC) = Majority(f (x1, . . . , xC )).

Let Z = f (X1, . . . , XC). We note that with this setting of parameters, there exists some

constant C′′ such that any k ≥ 2C′′√log log n log(n) is suﬃcient for the conclusion of Theorem 8.2 to
2−α for which
hold. Thus, Z is a source on r bits such that there exists a subset S ⊂ [r], |S| ≥ r − r
ZS is (t, γ)-wise independent. Theorem 7 is now direct from Corollary 8.5.

1

References

[ADJ+14] Divesh Aggarwal, Yevgeniy Dodis, Zahra Jafargholi, Eric Miles, and Leonid Reyzin.
Advances in Cryptology – CRYPTO 2014: 34th Annual Cryptology Conference, Santa
Barbara, CA, USA, August 17-21, 2014, Proceedings, Part II, chapter Amplifying Pri-
vacy in Privacy Ampliﬁcation, pages 183–198. Springer Berlin Heidelberg, Berlin, Hei-
delberg, 2014.

[AGM03] Noga Alon, Oded Goldreich, and Yishay Mansour. Almost k-wise independence versus

k-wise independence. Inf. Process. Lett., 88(3):107–110, 2003.

33

[AHL15] Divesh Aggarwal, Kaave Hosseini, and Shachar Lovett. Aﬃne-malleable extrac-
tors, spectrum doubling, and application to privacy ampliﬁcation. Cryptology ePrint
Archive, Report 2015/1094, 2015. http://eprint.iacr.org/.

[BBCM95] C. H. Bennett, G. Brassard, C. Crepeau, and U. M. Maurer. Generalized privacy
ampliﬁcation. IEEE Transactions on Information Theory, 41(6):1915–1923, Nov 1995.

[BBR88] C.H. Bennett, G. Brassard, and J.-M. Robert. Privacy ampliﬁcation by public discus-

sion. SIAM Journal on Computing, 17:210–229, 1988.

[BIW06]

Boaz Barak, Russell Impagliazzo, and Avi Wigderson. Extracting randomness using
few independent sources. SIAM J. Comput., 36(4):1095–1118, December 2006.

[BKS+10] Boaz Barak, Guy Kindler, Ronen Shaltiel, Benny Sudakov, and Avi Wigderson. Simu-
lating independence: New constructions of condensers, Ramsey graphs, dispersers, and
extractors. J. ACM, 57(4), 2010.

[Bou05]

J. Bourgain. More on the sum-product phenomenon in prime ﬁelds and its applications.
International Journal of Number Theory, 01(01):1–32, 2005.

[BRSW12] Boaz Barak, Anup Rao, Ronen Shaltiel, and Avi Wigderson. 2-source dispersers for
no(1) entropy, and Ramsey graphs beating the Frankl-Wilson construction. Annals of
Mathematics, 176(3):1483–1543, 2012. Preliminary version in STOC ’06.

[CG88]

Benny Chor and Oded Goldreich. Unbiased bits from sources of weak randomness and
probabilistic communication complexity. SIAM Journal on Computing, 17(2):230–261,
1988.

[CGL16]

Eshan Chattopadhyay, Vipul Goyal, and Xin Li. Non-malleable extractors and codes,
with their many tampered extensions. In STOC, 2016.

[CKOR10] N. Chandran, B. Kanukurthi, R. Ostrovsky, and L. Reyzin. Privacy ampliﬁcation
In Proceedings of the 42nd Annual ACM

with asymptotically optimal entropy loss.
Symposium on Theory of Computing, pages 785–794, 2010.

[CL16]

Eshan Chattopadhyay and Xin Li. Extractors for sumset sources. In STOC, 2016.

[Coh15]

Gil Cohen. Local correlation breakers and applications to three-source extractors and
mergers. In Proceedings of the 56th Annual IEEE Symposium on Foundations of Com-
puter Science, 2015.

[Coh16a] Gil Cohen. Non-malleable extractors - new tools and improved constructions. In CCC,

2016.

[Coh16b] Gil Cohen. Non-malleable extractors with logarithmic seeds. Technical Report TR16-

030, ECCC, 2016.

[Coh16c] Gil Cohen. Two-source dispersers for polylogarithmic entropy and improved Ramsey

graphs. In STOC, 2016.

[CRS14] Gil Cohen, Ran Raz, and Gil Segev. Non-malleable extractors with short seeds and
applications to privacy ampliﬁcation. SIAM Journal on Computing, 43(2):450–476,
2014.

34

[CS16]

[CZ16]

[DGJ+10]

Gil Cohen and Leonard Schulman. Extractors for near logarithmic min-entropy. Tech-
nical Report TR16-014, ECCC, 2016.

Eshan Chattopadhyay and David Zuckerman. Explicit two-source extractors and re-
silient functions. In STOC, 2016.

Ilias Diakonikolas, Parikshit Gopalan, Ragesh Jaiswal, Rocco A. Servedio, and
Emanuele Viola. Bounded independence fools halfspaces. SIAM Journal on Computing,
39(8):3441–3462, 2010.

[DKRS06] Y. Dodis, J. Katz, L. Reyzin, and A. Smith. Robust fuzzy extractors and authenticated
key agreement from close secrets. In Advances in Cryptology — CRYPTO ’06, 26th
Annual International Cryptology Conference, Proceedings, pages 232–250, 2006.

[DKSS09] Zeev Dvir, Swastik Kopparty, Shubhangi Saraf, and Madhu Sudan. Extensions to the
method of multiplicities, with applications to Kakeya sets and mergers. In Proceedings
of the 50th Annual IEEE Symposium on Foundations of Computer Science, pages 181–
190, 2009.

[DLWZ14] Yevgeniy Dodis, Xin Li, Trevor D. Wooley, and David Zuckerman. Privacy ampliﬁca-
tion and non-malleable extractors via character sums. SIAM Journal on Computing,
43(2):800–830, 2014.

[DORS08] Y. Dodis, R. Ostrovsky, L. Reyzin, and A. Smith. Fuzzy extractors: How to generate
strong keys from biometrics and other noisy data. SIAM Journal on Computing, 38:97–
139, 2008.

[DP07]

[DW09]

[DY13]

Stefan Dziembowski and Krzysztof Pietrzak. Intrusion-resilient secret sharing. In Pro-
ceedings of the 48th Annual IEEE Symposium on Foundations of Computer Science,
FOCS ’07, pages 227–237, Washington, DC, USA, 2007. IEEE Computer Society.

Yevgeniy Dodis and Daniel Wichs. Non-malleable extractors and symmetric key cryp-
tography from weak secrets. In STOC, pages 601–610, 2009.

Yevgeniy Dodis and Yu Yu. Overcoming weak expectations. In 10th Theory of Cryp-
tography Conference, 2013.

[GUV09] Venkatesan Guruswami, Christopher Umans, and Salil P. Vadhan. Unbalanced ex-
panders and randomness extractors from Parvaresh–Vardy codes. J. ACM, 56(4), 2009.

[KR09]

[Li11]

[Li12a]

B. Kanukurthi and L. Reyzin. Key agreement from close secrets over unsecured chan-
nels. In EUROCRYPT 2009, 28th Annual International Conference on the Theory and
Applications of Cryptographic Techniques, 2009.

Xin Li. Improved constructions of three source extractors. In Proceedings of the 26th
Annual IEEE Conference on Computational Complexity, CCC 2011, San Jose, Cali-
fornia, June 8-10, 2011, pages 126–136, 2011.

Xin Li. Design extractors, non-malleable condensers and privacy ampliﬁcation.
In
Proceedings of the 44th Annual ACM Symposium on Theory of Computing, pages 837–
854, 2012.

35

[Li12b]

[Li13a]

[Li13b]

[Li15a]

[Li15b]

[Li15c]

[Li15d]

Xin Li. Non-malleable extractors, two-source extractors and privacy ampliﬁcation. In
Proceedings of the 53rd Annual IEEE Symposium on Foundations of Computer Science,
pages 688–697, 2012.

Xin Li. Extractors for a constant number of independent sources with polylogarithmic
min-entropy. In Proceedings of the 54th Annual IEEE Symposium on Foundations of
Computer Science, pages 100–109, 2013.

In Pro-
Xin Li. New independent source extractors with exponential improvement.
ceedings of the 45th Annual ACM Symposium on Theory of Computing, pages 783–792,
2013.

Xin Li. Improved constructions of two-source extractors. Technical Report TR15-125,
ECCC, 2015.

Xin Li. Improved two-source extractors, and aﬃne extractors for polylogarithmic en-
tropy. Technical Report TR15-125, ECCC, 2015.

Xin Li. Non-malleable condensers for arbitrary min-entropy, and almost optimal pro-
tocols for privacy ampliﬁcation. In 12th Theory of Cryptography Conference, 2015.

Xin Li. Three-source extractors for polylogarithmic min-entropy. In Proceedings of the
56th Annual IEEE Symposium on Foundations of Computer Science, 2015.

[LRVW03] Chi-Jen Lu, Omer Reingold, Salil P. Vadhan, and Avi Wigderson. Extractors: optimal

up to constant factors. In STOC, pages 602–611, 2003.

[Mau92]

Ueli M. Maurer. Conditionally-perfect secrecy and a provably-secure randomized cipher.
Journal of Cryptology, 5(1):53–66, 1992.

[Mek15]

[MW97]

[NZ96]

[Rao09]

[Raz05]

[RW03]

[RZ08]

Raghu Meka. Explicit resilient functions matching Ajtai-Linial. CoRR, abs/1509.00092,
2015.

Ueli Maurer and Stefan Wolf. Privacy ampliﬁcation secure against active adversaries.
In Advances in Cryptology — CRYPTO ’97, volume 1294, pages 307–321, August 1997.

Noam Nisan and David Zuckerman. Randomness is linear in space. J. Comput. Syst.
Sci., 52(1):43–52, 1996.

Anup Rao. Extractors for a constant number of polynomially small min-entropy inde-
pendent sources. SIAM J. Comput., 39(1):168–194, 2009.

Ran Raz. Extractors with weak random seeds. In Proceedings of the 37th Annual ACM
Symposium on Theory of Computing, pages 11–20, 2005.

Renato Renner and Stefan Wolf. Unconditional authenticity and privacy from an arbi-
trarily weak secret. In Advances in Cryptology — CRYPTO ’03, 23rd Annual Interna-
tional Cryptology Conference, Proceedings, pages 78–95, 2003.

Anup Rao and David Zuckerman. Extractors for three uneven-length sources. In Ap-
proximation, Randomization and Combinatorial Optimization. Algorithms and Tech-
niques, 11th International Workshop, APPROX 2008, and 12th International Work-
shop, RANDOM 2008, Boston, MA, USA, August 25-27, 2008. Proceedings, pages
557–570, 2008.

36

[Vio14]

Emanuele Viola. Extractors for circuit sources. SIAM J. Comput., 43(2):655–672, 2014.

37

