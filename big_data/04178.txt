6
1
0
2

 
r
a

 

M
4
1
 
 
]

.

C
O
h
t
a
m

[
 
 

1
v
8
7
1
4
0

.

3
0
6
1
:
v
i
X
r
a

Stability Analysis and Design of

Momentum-based Controllers for Humanoid Robots

Gabriele Nava, Francesco Romano, Francesco Nori and Daniele Pucci1

Abstract— Envisioned applications for humanoid robots re-
quire the presence of balancing and walking controllers. While
promising results have been achieved recently, robust and reli-
able controllers are still a challenge for the control community.
State-of-the-art balancing controllers are based on the control
of the robot momentum, but the stability analysis of these con-
trollers is still missing. The contribution of this paper is twofold.
We ﬁrst numerically show that the application of state-of-the-
art momentum-based control strategies may lead to unstable
zero dynamics. Secondly, we propose simple modiﬁcations to the
control architecture that avoid instabilities at the zero-dynamics
level. Asymptotic stability of the closed loop system is shown
by means of a Lyapunov analysis. The theoretical results are
validated with both simulations and experiments on the iCub
humanoid robot.

I. INTRODUCTION

Humanoid robotics is doubtless an emerging ﬁeld of
engineering. One of the reasons accounting for this interest
is the need of conceiving systems that can operate as well
as human beings in places where humans are forbidden
to access. To this purpose, the scientiﬁc community has
paid much attention to endowing robots with two main
capabilities: locomotion and manipulation. At the present
day, the results shown at the DARPA Robotics Challenge
are promising, but still far from being fully reliable in
real applications. Stability issues of both low and high
level controllers for balancing and walking were among
the main contributors to robot failures. A common high-
level control strategy adopted during the competition was
that of regulating the robot’s momentum, which is usually
referred to as momentum-based control. This paper presents
numerical evidence that momentum-based controllers may
lead to unstable zero dynamics and proposes a modiﬁcation
to this control scheme that ensures asymptotic stability.

Balancing controllers for humanoid robots have long
attracted the attention of
the robotic community [1],
[2]. Kinematic and dynamic controllers have been com-
mon approaches for ensuring a stable robot behavior for
years [3],[4]. The common denominator of these strategies is
considering the robot attached to the ground, which allows
one for the application of classical algorithms developed for
ﬁxed-based manipulators.

At the modeling level, the emergence of ﬂoating-base
formalisms for characterizing the dynamics of multi-body
systems has loosened the assumption of having a robot link

*This paper was supported by the FP7 EU projects CoDyCo (No. 600716

ICT 2011.2.1 Cognitive Systems and Robotics)

1 The authors are with the iCub Facility department, Istituto Italiano di
Tecnhologia, Via Morego 30, Genoa, Italy name.surname@iit.it

attached to the ground [5]. At the control level, instead, one
of the major complexities when dealing with ﬂoating base
systems comes from the robot’s underactuation. As a matter
of fact, the underactuation forbids the feedback linearization
of the underlying system [6]. The lack of actuation is usually
circumvented by means of some rigid contacts between the
robot and the environment, but this requires close attention
to the forces the robot exerts at the contact locations. If
not regulated appropriately, uncontrolled contact forces may
break the contact, and the robot control in this case is
crucial [7],[8],[9].

Contact forces/torques, which act on the system as external
wrenches, have a direct impact on the rate-of-change of the
robot’s momentum. Indeed, the time derivative of the robot’s
momentum equals the net wrench acting on the system.
Furthermore, since the robot’s linear momentum can be
expressed in terms of its center-of-mass velocity, controlling
the robot’s momentum is particularly tempting for ensuring
both robot and contact stability as deﬁned in [10].

Several momentum-based control strategies have been im-
plemented in real applications [11],[12],[13],[9]. The essence
of these strategies is that of controlling the robot’s mo-
mentum while guaranteeing stable zero-dynamics. The latter
objective is often achieved by means of a postural task,
which usually acts in the null space of the control of
the robot’s momentum [14],[15],[16]. These two tasks are
achieved by monitoring the contact wrenches, which are en-
sured to belong to the associated feasible domains by resort-
ing to quadratic programming (QP) solvers [7],[8],[9],[17].
In addition to ensuring stability of the zero-dynamics, the
postural task can also be used to control the robot joint
conﬁguration [16].

The control of the linear momentum is exploited to stabi-
lize the robot’s center of mass, thus allowing the control of
the robot position with respect to the inertial frame. Hence,
control strategies that neglect the control of the robot’s angu-
lar momentum have also been implemented [18]. However,
controlling both the robot linear and angular momentum
is particularly useful for determining the contact torques,
and it has become a common torque-controlled strategy for
dealing with balancing and walking humanoid robots. As
a matter of fact, controlling also the angular momentum
results in a more human-like behavior and better response
to perturbations [19],[20].

To the best of the authors’ knowledge, the stability analysis
of momentum-based control strategies is still missing. The
contribution of this paper goes along this direction by con-
sidering a humanoid robot standing on one foot, and is then

twofold. We ﬁrst present numerical evidence that classical
momentum-based control strategies may lead to unstable
zero dynamics, thus meaning that classical postural tasks are
not sufﬁcient in these cases. The main cause of this instability
is the lack of position-angular correction terms at the angular
momentum level. Indeed, we show that correction terms
of the form of angular momentum integrals are sufﬁcient
for ensuring asymptotic stability of the closed loop system,
which is proved by means of a Lyapunov analysis. Hence,
the proposed control strategy ensures stable zero dynamics.
The postural control, however, is modiﬁed with respect to
(w.r.t.) state-of-the-art choices. The validity of the presented
controller is tested both in simulation and on the humanoid
robot iCub.

This paper is organized as follows. Section II intro-
duces the notation, the system modeling, and also recalls
a classical momentum-based control strategy. Section III
presents numerical results showing that momentum based
control strategies for humanoid robots may lead to unstable
zero dynamics. Section IV presents a modiﬁcation of the
momentum based control strategy for which stability and
convergence can be proven. Section V discusses the numer-
ical and experimental validation of the proposed approach.
Conclusions and perspectives conclude the paper.

II. BACKGROUND

A. Notation

• I denotes an inertial frame, with its z axis pointing
against the gravity. The gravitational constant is denoted
with g.

• ei ∈ Rm is the canonical vector, consisting of all zeros

but the i-th component which is one.

• Given two orientation frames A and B, and vectors of
coordinates expressed in these orientation frames, i.e.
Ap and Bp, respectively, the rotation matrix ARB is
such that Ap = ARB

Bp.

• 1n ∈ Rn×n is the identity matrix of size n; 0m×n ∈
Rm×n is the zero matrix of size m × n and 0n = 0n×1.
• Let denote with S(x) ∈ R3×3 the skew-symmetric
matrix such that S(x)y = x × y, where × denotes the
cross product operator in R3.

• Given a function f (x, y) : Rn × Rm → Rp, the partial
derivative of f (·) w.r.t. the variable x will be denoted
as ∂xf (x, y) = ∂f (x,y)

∂x ∈ Rp×n

B. Modelling

Q = R3 × SO(3) × Rn. An element of the set Q is then
a triplet q = (I pB, IRB, qj), where (I pB, IRB) denotes the
origin and orientation of the base frame expressed in the
inertial frame, and qj denotes the joint angles. It is possible
to deﬁne an operation associated with the set Q such that
this set is a group. More precisely, given two elements q and
ρ of the conﬁguration space, the set Q is a group under the
following operation:

q · ρ = (pq + pρ, RqRρ, qj + ρj).

(1)

Being the direct product of Lie groups, the set Q is itself
a Lie group. The velocity of the multi-body system can
then be characterized by the algebra V of Q deﬁned by:
V = R3 × R3 × Rn. An element of V is then a triplet
ν = (I ˙pB,I ωB, ˙qj) = (vB, ˙qj), where IωB is the angular
velocity of the base frame expressed w.r.t. the inertial frame,
i.e. I ˙RB = S(I ωB)IRB.

We also assume that the robot is interacting with the en-
vironment exchanging nc distinct wrenches. The application
of the Euler-Poincar´e formalism [21, Ch. 13.5] to the multi-
body system yields the following equations of motion:

nc

M (q) ˙ν + C(q, ν)ν + G(q) = Bτ +

J ⊤
Ck

fk

(2)

Xk=1

where M ∈ Rn+6×n+6 is the mass matrix, C ∈ Rn+6×n+6
is the Coriolis matrix, G ∈ Rn+6 is the gravity term, B =
(0n×6, 1n)⊤ is a selector matrix, τ is a vector representing
the internal actuation torques, and fk denotes an external
wrench applied by the environment to the link of the k-th
contact. We assume that the application point of the external
wrench is associated with a frame Ck, attached to the link
on which the wrench acts, and has its z axis pointing in
the direction of the normal of the contact plane. Then, the
external wrench fk is expressed in a frame whose orientation
coincides with that of the inertial frame I, but origin is
the origin of Ck, i.e. the application point of the external
wrench fk. The Jacobian JCk = JCk (q) is the map between
the robot’s velocity ν and the linear and angular velocity
IvCk := (I ˙pCk ,I ωCk ) of the frame Ck, i.e. I vCk = JCk (q)ν.
The Jacobian has the following structure:

(q) J j
Ck

Ck

JCk (q) = hJ b
Ck (q) = " 13

J b

03×3

∈ R6×n+6, (3a)

# ∈ R6×6.

(3b)

(q)i

13

−S(IpCk − I pB)

It is assumed that the robot is composed of n + 1 rigid
bodies – called links – connected by n joints with one
degree of freedom each. In addition, we also assume that
the multi-body system is free ﬂoating, i.e. none of the links
has an a priori constant pose with respect to the inertial
frame. This implies that the multi-body system possesses
n + 6 degrees of freedom. The conﬁguration space of
the multi-body system can then be characterized by the
position and the orientation of a frame attached to a robot’s
link – called base frame B – and the joint conﬁgurations.
More precisely, the robot conﬁguration space is deﬁned by

Lastly, it is assumed that a set of holonomic constraints act
on System (2). These holonomic constraints are of the form
c(q) = 0, and may represent, for instance, a frame having a
constant pose w.r.t. the inertial frame. In the case where this
frame corresponds to the location at which a (rigid) contact
occurs on a link, we represent the holonomic constraint as
JCk (q)ν=0.

C. Block-Diagonalization of the Mass Matrix

This section presents a new expression of the equations of
motion (2). In particular, the next lemma presents a change

of coordinates in the state space (q, ν) that transforms the
system dynamics (2) into a new form where the mass matrix
is block diagonal, thus decoupling joint and base frame
accelerations. The obtained equations of motion are then
used in the remaining of the paper.

Lemma 1: Consider the equations of motion given by (2)

and the mass matrix partitioned as following

M =" Mb Mbj
bj Mj#

M ⊤

with Mb ∈ R6×6, Mbj ∈ R6×n and Mj ∈ Rn×n. Perform
the following change of state variables:

q := q, ¯ν := T (q)ν,

with

0n×6

cXBM −1
b Mbj
1n

T := " cXB
# ,
#
cXB := " 13 −S(Ipc − I pB)

03×3

13

(4)

(5a)

(5b)

where the superscript c denotes the frame with the origin
located in the center of mass and orientation of I. Then, the
equations of motion with state variables (q, ν) can be written
in the following form

M (q) ˙ν + C(q, ν)ν + G = Bτ +

J ⊤
Ci

fi,

(6)

nc

Xi=1

with

M (q) = T −⊤M T −1 ="M b(q)

0n×6 M j(qj)# ,

06×n

C(q, ν) = T −⊤(M ˙T −1 + CT −1),

G = T −⊤G = mge3,

J Ci(q) = JCi (q)T −1 =hJ b

Ci(q) J j

Ci

(qj )i ,

(7a)

(7b)
(7c)
(7d)

M b(q) =(cid:20)m13

03×3

03×3

I(q)(cid:21) , J b

#
Ci(q)=" 13 −S(pCi− Ipc)

03×3

13

where m is the mass of the robot and I is the inertia
matrix computed with respect to the center of mass, with
the orientation of I.

The above lemma points out that the mass matrix of the
transformed system (6) is block diagonal, i.e. the transformed
base acceleration is independent from the joint acceleration.
More precisely, the transformed robot’s velocity ν is given
where I ˙pc is the velocity of the
center-of-mass of the robot, and Iωc is the so-called average
angular velocity1[23], [24], [25]. Hence, Eq. (6) uniﬁes
what the specialized robotic literature usually presents with
two sets of equations: the equations of motion of the free

by ν =(cid:16)I ˙p⊤

j (cid:17)⊤

Iω⊤
c

˙q⊤

c

1The term I ˙ωc is also known as the locked angular velocity [22].

ﬂoating system and the centroidal dynamics2 when expressed
in terms of the average angular velocity. For the sake of
correctness, let us remark that deﬁning the average angular
velocity as the angular velocity of the multi-body system is
not theoretically sound. In fact, the existence of a rotation
˙R(q)R⊤(q) = S(I ωc), i.e.
matrix R(q) ∈ SO(3) such that
the integrability of I ωc, is still an open issue.

Observe also that the gravity term G is constant and

inﬂuences the acceleration of the center-of-mass only.

A transformation similar to (4) was presented in [26].
The transformation in this work, however, is from the state
(q, ν) into a mixed state, which is composed of the robot’s
momentum and velocity. Thus it does not represent classical
transformations of the state space.

Remark 1: In the sequel, we assume that the equations
of motion are given by (6), i.e. the mass matrix is block
diagonal. As an abuse of notation but for the sake of
simplicity, however, we hereafter drop the overline notation.

D. A classical momentum-based control strategy

This section recalls a classical momentum-based control
strategy when implemented as a two-layer stack-of-task. In
particular, we assume that the objective is the control of the
robot momentum and the stability of the zero dynamics. The
latter task is achieved by means of a classical postural task.
Recall that the conﬁguration space of the robot evolves in
a group of dimension n + 6. Hence, besides pathological
cases, when the system is subject to a set of holonomic
constraints of dimension k, the conﬁguration space shrinks
into a space of dimension n + 6 − k. The stability analysis
of the constrained system may then require to determine the
minimum set of coordinates that characterize the evolution
of the constrained system. This operation is, in general, far
from obvious because of the topology of the group Q.
Now, in the case where the holonomic constraint is of the
form

T (q) = constant

with T (q) ∈ R3 × SO(3), i.e. a frame of the robot has a
constant position-and-orientation w.r.t. the inertial frame, one
gets rid of the topology related problems of Q by relating
the base frame B and the constrained frame. In this case, the
minimum set of coordinates belong to Rn and can be chosen
as the joint variables qj.

In light of the above, we make the following assumption.
Assumption 1: Only one frame associated with a robot
link has a constant position-and-orientation with respect to
the inertial frame.

Without loss of generality, it is assumed that the only
constrained frame is the one between the environment and
one of the robot’s feet. Consequently, one has:

J ⊤
Ck

fk =: J ⊤(q)f,

(8)

nc

Xk=1

2In the specialized literature, the terms centroidal dynamics are used to
indicate the rate of change of the robot’s momentum expressed at the center-
of-mass, which then equals to the summation of all external wrenches acting
on the multi-body system [25].

where J(q) ∈ R6×n+6 is the Jacobian of a frame attached
to the foot’s sole in rigid contact with the environment, and
f ∈ R6 the contact wrench.

Clearly, by differentiating the kinematic

constraint

J(q)ν = 0 associated with the rigid contact, one obtains

(cid:2)Jb Jj(cid:3)(cid:20) ˙vB

¨qj(cid:21) +h ˙Jb

˙Jji(cid:20)vB

˙qj(cid:21) = 0.

(9)

1) Momentum control: Recall that the rate-of-change of
the robot momentum equals the net external wrench acting
on the robot, which in the present case reduces to the contact
wrench f plus the gravity wrench. To control the robot
momentum, it is assumed that the contact force f can be
chosen at will. Note that given the particular form of (6),
the ﬁrst six rows correspond to the dynamics of the robot’s
momentum, i.e.

d
dt

MbvB = J ⊤

b f − mge3 = ˙H(f )

(10)

where H := (HL, Hω) ∈ R6 is the robot momentum,
and HL, Hω ∈ R3 denoting the linear and angular robot
momentum, respectively. The control objective can be then
deﬁned as the stabilization of a desired robot momentum H d.
Let us deﬁne the momentum error as follows ˜H = H − Hd.
The control input f in Eq. (10) is then chosen so as

˙H(f ) = ˙H ∗ := ˙Hd − Kp ˜H − KiZ t

0

˜H ds

(11)

where Kp, Ki ∈ R6×6 are two symmetric, positive deﬁnite
matrices. But, it is important to note that a classical choice
for the matrix Ki consists in [12],[27]

Ki =  K L

03×3

i

03×3

03×3! ,

(12)

i.e. the integral correction term at the angular momentum
level is equal to zero, while the positive deﬁnite matrix
i ∈ R3×3 is used for tuning the tracking of a desired
K L
center-of-mass position when the initial conditions of the
integral in (11) are properly set.

The contact wrench that satisﬁes the desired rate of change
of the robot momentum in Eq. (11) can then be chosen as

f = J −⊤

b

(cid:16) ˙H ∗ + mge3(cid:17) .

(13)

Now, to determine the control torques that instantaneously
realize the contact force given by (13), we use the dynamic
equations (6) along with the constraints (9), which yields

τ = Λ†(JM −1(h − J ⊤f ) − ˙J ν) + NΛτ0

(14)

where Λ = JjM −1
onto the nullspace of Λ, and τ0 ∈ Rn is a free variable.

j ∈ R6×n, NΛ ∈ Rn×n is the projector

2) Stability of the zero dynamics: The stability of the
zero dynamics is usually attempted by means of a so called
“postural task”, which exploits the free variable τ0. A clas-
sical state-of-the-art choice for this postural task consists in:
d ˙qjwhere hj − J ⊤
τ0 = hj − J ⊤
j f
compensates for by the nonlinear effect and the external

j f − K j

p(qj − qd

j ) − K j

forces. Hence, the (desired) input torques that are in charge
of stabilizing both a desired robot momentum Hd and the
associated zero dynamics are given by

τ = Λ†(JM −1(h − J ⊤f ) − ˙J ν) + NΛτ0
f = J −⊤

b

(cid:16) ˙H ∗ + mge3(cid:17)

j f − K j

τ0 = hj − J ⊤

p(qj − qd

j ) − K j

d ˙qj

(15a)

(15b)

(15c)

What follows presents numerical results showing that the
control laws (15) with Ki given by (12) may lead to unstable
zero dynamics.

III. NUMERICAL EVIDENCE OF

UNSTABLE ZERO DYNAMICS

A. Simulation Environments

Two different simulation setups have been exploited to

perform the numerical validation.

1) Custom setup: The ﬁrst simulation setup used to per-
form the validation is a custom setup that is in charge of
integrating the dynamics (6) when it is subject to the con-
straint (9). We parametrize SO(3) by means of a quaternion
representation Q ∈ R4. The resulting system state, which is
integrated through time, is then: χ := (pB, Q, qj, ˙pB, ωB, ˙qj),
and its derivative is given by ˙χ = ( ˙pB, ˙Q, ˙qj, ˙ν)

The constraints (9), as well as |Q| = 1, are then enforced
during the integration phase, and additional correction terms
are thus necessary. The evolution of the system is then
obtained by integrating the constrained dynamical system
with the numerical integrator MATLAB ode15s.

2) Gazebo setup: The Gazebo simulator [28] is the other
simulation setup used for our tests on the stability of
the zero dynamics. Of the different physic engines that
can be used with Gazebo, we chose the Open Dynamics
Engine (ODE). Differently from the previous simulation
environment, Gazebo allows more ﬂexibility. Indeed, we only
have to specify the model of the robot, and the constraints
arise naturally during the simulation. Furthermore, Gazebo
integrates the dynamics with a ﬁxed step semi-implicit Euler
integration scheme.

An advantage of using Gazebo w.r.t. the custom integration
scheme previously presented consists in the ability to test in
simulation the same control software used on the real robot.
While the use of the custom scheme allows a more precise
simulation of the dynamical system, effects of the discretiza-
tion of the control laws are more difﬁcultly perceived.

B. Unstable Zero Dynamics

To show that the momentum-based control strategies may
lead to unstable zero dynamics, we control the linear mo-
mentum of the robot so as to follow a desired center of mass
trajectory, i.e. a sinusoidal reference along the y coordinate
with amplitude 0.05m and frequency 0.3Hz.

1) Tests on the robot balancing on one foot in the custom
in this section we present simulation
simulation setup:
results obtained by applying the control laws (15) with Ki
as in (12). Hence, it is assumed that the left foot is attached

|
|

˜H

|
|

1

0.8

0.6

0.4

0.2

0
0

]
d
a
r
[
 
|
|

0

j

q
−
q

j

|
|

10

20

30

time [s]

40

50

60

1

0.8

0.6

0.4

0.2

0
0

10

20

30

Time [s]

40

50

60

Fig. 1. Time evolution of the robot’s momentum error when standing on
one foot and when the control law (15) is applied. Simulation run with the
custom environment.

Fig. 3. Time evolution of the norm of the position error |qj − q
j | when
the robot is standing on two feet and when the control law (16)- (19) is
applied. Simulation run with the Gazebo environment.

d

]
d
a
r
[
 
|
|

0

j

q
−
q

|
|

j

0.8

0.6

0.4

0.2

0
0

10

20

30

Time [s]

40

50

60

the above control objectives can be formulated as follows.

f ∗ = argmin

|τ ∗(f )|

f

s.t.

Cf < b
˙H(f ) = ˙H ∗
τ ∗(f ) = argmin

τ

s.t.

|τ (f ) − τ0(f )|

(16a)

(16b)
(16c)
(17)

Fig. 2. Time evolution of the norm of the position error |qj − q
j | when
the robot is standing on one foot and when the control law (15) is applied.
Simulation run with the custom environment.

d

to the ground, and no other external wrench applies to the
robot.

Figure 1 shows typical simulation results of the conver-
gence to zero of the robot’s momentum, thus meaning that
the contact forces ensure the stabilization of ˙H towards zero.
Figure 2, instead, depicts the norm of the joint position error
j |. This ﬁgures shows that the norm of the joint angles
|qj −qd
increases while the robot’s momentum is kept equal to zero.
This is a classical behavior of unstable zero dynamics.

2) Tests when the robot balances on two feet in the Gazebo
simulation setup: Tests on the stability of the zero dynamics
have been carried on also in the case the robot stands on
both feet. The main difference between the control algorithm
running in this case and that in (15) resides in the choice of
contact forces and in the holonomic constraints acting on
the system. More precisely, the contact wrench f is now
a twelve dimensional vector, and composed of the contact
wrench fL, fR ∈ R6 between the ﬂoor and left and right feet,
respectively. Hence, f = (fL, fR) ∈ R12. Also, let JL, JR ∈
R6×n+6 denote the Jacobian of two frames associated with
the contact locations of the left and right foot, respectively.
Then, J = (J ⊤
R )⊤ ∈ R12×n+6. By assuming that the
contact wrenches can still be used as virtual control input
in the dynamics of the robot’s momentum ˙H, one is left
with a six-dimensional redundancy of the contact wrenches
to impose ˙H(f ) = ˙H ∗. We use this redundancy to minimize
the joint torques. In the language of Optimization Theory,

L , J ⊤

˙J(q, ν)ν + J(q) ˙ν = 0
˙ν = M −1(Sτ + J ⊤(q)f −h(q, ν))
j )−K j
τ0 = hj − J ⊤

(18a)
(18b)
d ˙qj (18c)
Note that the additional constraint (16b) ensures that the
desired contact wrenches f belong to the associated friction
cones. Once the optimum f ∗ has been determined, the input
torques τ are obtained by re-using the expression (17), i.e.

p(qj − qd

j f −K j

τ = τ ∗(f ∗)

(19)

Figure 3 depicts the norm of the joint position error
j | when the above control algorithm is applied, and
|qj − qd
the simulation is run in the Gazebo setup. It is clear from this
ﬁgure that the instability of the zero dynamics is observed
also in the case where the robot stands on two feet.

IV. CONTROL DESIGN

To circumvent the problems related to the stability of
the zero dynamics discussed in the previous section, what
follows proposes a modiﬁcation of the control laws (15) that
allows us to show stable zero dynamics of the constrained,
closed loop system. In particular, the following result holds.
Lemma 2: Assume that Assumption 1 holds, and that the
robot possesses more than six degrees of freedom, i.e. n ≥ 6.
In addition, assume also that Hd = 0. Let

(qj, ˙qj) = (qd

j , 0)

(20)

denote the equilibrium point associated with the constrained,
closed loop system, and assume that
the matrix Λ =
Jj(q)M −1

(q) is full row rank in a neighborhood of (20).

j

Apply the control laws (15) with

Ki > 0
K j
K j

p = K j
d = K j

pNΛMj
dNΛMj

(21a)
(21b)
(21c)

p, K j

where K j
d ∈ Rn×n are two constant, positive deﬁnite
matrices. Then, the equilibrium point (20) of the constrained,
closed loop dynamics is asymptotically stable.

The proof is in Appendix. The above Lemma shows that
the asymptotic stability of the equilibrium point (20) of
the constrained, closed loop dynamics can be ensured by
choosing a positive deﬁnite matrix Ki, and by modifying the
gains of the postural task. Clearly, the asymptotic stability
of the equilibrium point (20) implies that the zero dynamics
are asymptotically stable.

The fact that the gain matrix Ki must be positive deﬁ-
nite conveys the necessity of closing the control loop with
position-angular terms at the momentum level. Some au-
thors, in fact, intuitively close the angular momentum loop
by using the orientation of the robot’s torso [7].

The proof of Lemma 2 exploits the fact that the minimum
coordinates of the robot conﬁguration space when Assump-
tion 1 holds is given by the joint angles qj. The analysis
focuses on the closed loop dynamics of the form ¨qj =
f (qj, ˙qj) which is then linearized around the equilibrium
point (20). By means of a Lyapunov analysis, one shows that
the equilibrium point is asymptotically stable. One of the
main technical difﬁculties when linearizing ¨qj = f (qj, ˙qj)
comes from the fact that the closed loop dynamics depends
on the integral of the robot momentum (see Eq. (15)), i.e.
0 H(qj (s), ˙qj(s)) ds The partial derivative w.r.t. the state
(qj, ˙qj) is, in general, not obvious because of the dependence
of the integrand function upon the state (qj, ˙qj). It is known,
however, that the momentum associated with a multi-body
system is linear w.r.t. the system’s velocity, i.e. H = JG(q)ν
where JG(q) ∈ R6×n+6 is the so-called centroidal momen-
tum matrix [29]. As a consequence of Assumption 1, one can
express the momentum H as a function of the state (qj , ˙qj)
only, which yields

R t

H = ¯JG(qj) ˙qj

(22)

where ¯JG(q) ∈ R6×n. Eq. (22) implies that the integral
of the momentum along the constrained motions is given
¯JG(qj) dqj. Consequently,

byR t

0 H(qj(s), ˙qj (s)) ds =R qj (t)

one has

qj (0)

0

∂

∂ ˙qj(t)Z t
∂qj(t)Z t

∂

0

H(qj (s), ˙qj(s))ds = 0

(23a)

H(qj (s), ˙qj(s))ds = ¯JG(qj (t))

(23b)

The expression (23) points out that in a neighborhood of
j , 0), the integral of the
the equilibrium point (qj, ˙qj) = (qd
momentum may be approximated as

H(qj (s), ˙qj(s)) ds ≈ ¯JG(qd

j )(qj − qd

j ).

(24)

Z t

0

Hence, Eq. (24) may also be used as a feedback control
action instead of the integral of the momentum in Eq. (15),
thus avoiding eventual nonstationary effects of the robot’s
motion due to the integral of measurement noise.

]
d
a
r
[
 
|
|

0

j

q
−
q

|
|

j

0.5

0.4

0.3

0.2

0.1

0
0

10

20

30

Time [s]

40

50

60

Fig. 4. Time evolution of the norm of the position error |qj − q
j | when
the robot is standing on one foot and when the control law (15) with the
modiﬁcation presented in Lemma (2) is applied. Simulation run with the
custom environment.

d

]
d
a
r
[
 
|
|

0

j

q
−
q

|
|

j

0.8

0.6

0.4

0.2

0
0

10

20

30

Time [s]

40

50

60

j | when
Fig. 5. Time evolution of the norm of the position error |qj − q
the robot is standing on two feet and when the control law (16)- (19) with
the modiﬁcation presented in Lemma (2) is applied. Simulation run with
the Gazebo environment.

d

V. SIMULATIONS AND EXPERIMENTAL RESULTS
This section shows simulation and experimental results
obtained by applying the control laws (15) and (16)- (19)
with the modiﬁcations presented in Lemma (2). To show the
improvements of the control modiﬁcation in this Lemma,
we apply the same reference signal of Section III, which
revealed unstable zero dynamics. Hence, the desired linear
momentum is chosen so as to follow a sinusoidal reference
on the center of mass. Also, control gains are kept equal to
those used for the simulations presented in Section III.

A. Simulation results

Figures 4 and 5 show the norm of the joint errors |qj − qd
j |
when the robot stands on either one or two feet, respectively.
These two simulations are performed with the custom and
Gazebo simulation environment, respectively. As expected,
the zero dynamics is now stable, and no divergent behavior
of the robot joints is observed.

B. Results on the iCub Humanoid Robot

We then went one step further and implemented the control
algorithm (16)- (19) with the modiﬁcation presented in
Lemma (2) on a real humanoid robot. The robotic platform
used for testing is the iCub humanoid robot [30]. For the
purpose of the proposed control law, iCub is endowed with
23 degrees of freedom. A low level torque control loop,
running at 1kHz, is responsible for stabilizing any desired
torque reference signal.

Figures 6 and 7 show the joint position error |qj − qd

j | and
the center of mass error. Though the center of mass does

]
d
a
r
[
 
|
|

0

j

q
−
q

|
|

j

0.4

0.3

0.2

0.1

0
0

10

20

30

Time [s]

40

50

60

j | when
Fig. 6. Time evolution of the norm of the position error |qj − q
the robot is standing on two feet and when the control law (16)- (19) with
the modiﬁcation presented in Lemma (2) is applied. Experiment run on the
humanoid robot iCub.

d

]

m

[
 
r
o
r
r
e
 
s
o
p
 
M
o
C

0.04

0.02

0

−0.02

−0.04
 
0

 

x dir
y dir
z dir

10

20

30

Time[s]

40

50

60

Time evolution of the robot center-of-mass error when standing
Fig. 7.
on two feet foot and when the controllaw (16)- (19) with the modiﬁcation
presented in Lemma (2) is applied. Experiment run on the humanoid robot
iCub.

not converge to the desired value, all signals are bounded,
and the control modiﬁcation presented in Lemma (2) does
not pose any barrier for the implementation on the control
algorithm (16)- (19) on a real platform.

VI. CONCLUSIONS AND FUTURE WORKS

Momentum-based controllers are nowadays the state-of-
the-art for balancing and walking tasks. In this paper, we
presented numerical evidence that a stack-of-task approach
to this kind of controllers may lead to an instability of
the zero dynamics. In particular, to ensure stability, it is
necessary to close the loop with position-angular terms at the
momentum level. We show a modiﬁcation of state-of-the-art
momentum based control strategies that ensure asymptotic
stability, which was shown by performing Lyapunov analysis
on the linearization of the closed loop system about the
equilibrium point. Simulation and experimental tests validate
the presented analysis.

The stack-of-task approach strongly resembles a cascade
of dynamical systems. It is the authors’ opinion that the
stability of the whole system can be proved by using the
general framework of stability of interconnected systems.
Lastly, a critical point needed to prove the stability of
constrained dynamical system is to deﬁne the minimum
set of coordinates identifying its evolution. While this can
be straightforward in case of one contact,
the extension
to multiple contact is not trivial and must be considered
carefully.

APPENDIX: PROOF OF LEMMA 2

As described in Section IV the proof is based ﬁrst on the
linearization of the constrained closed loop dynamics around
the equilibrium (qd
j , 0) and then by means of Lyapunov
analysis on the resultant linear system.

1) Linearization: Consider that Assumption 1 holds, and
that we apply the control laws (15) with the gains as in
Eq. (21). The closed loop joint space dynamics of system (6)
constrained by (9) is given by the following equation:

¨qj = −M −1

j

hΛ†(JbM −1

b

˙H ∗ + Γ ˙qj) + NΛu0i

where Γ = ˙Jj − JbM −1
and u0 = K j

p(qj − qd

b Cbj + (JbM −1
j ) + K j

d ˙qj.

b Cb − ˙Jb)J −1

b Jj

(25)

Deﬁne the state x as x := hx⊤

.
Given H d ≡ 0 and, without losing generality, the linearized
dynamical system about the equilibrium point (qd
j , 0) is given
by

= hq⊤

x⊤

˙q⊤

1

j

j i⊤

2i⊤

˙x =(cid:20)∂qj ˙x1 ∂ ˙qj ˙x1

∂qj ˙x2 ∂ ˙qj ˙x2(cid:21) x =(cid:20)0n×n

A1

1n

A2(cid:21) x

(26)

To compute the last row of the state matrix we have to
consider the partial derivatives of Eq. (25). First, notice that

= 0 with y = {qj, ˙qj}.

We are now left to compute

j
˙qj =0

∂y(Γ ˙qj)(cid:12)(cid:12)(cid:12)(cid:12)qj =qd
Xi=1
Xi=1

∂y ¨qj = −

−

6

6

∂y(M −1

j Λ†JbM −1

b ei)e⊤

i

˙H ∗ − M −1

j NΛ∂yu0

∂y(M −1

j NΛei)e⊤

i u0 − M −1

j Λ†JbM −1

b ∂y ˙H ∗

with y = {qj, ˙qj}. Note that
uated in qj = qd
the partial derivatives of
given by ∂qj u0 = K j
now compute ∂qj
is easy to verify that

˙H ∗ = 0 and u0 = 0 when eval-
j and ˙qj = 0. We thus have to compute only
˙H ∗ and u0. The latter is trivially
dNΛMj. We
˙H ∗. Noting that H = MbvB it

pNΛMj and ∂ ˙qj u0 = K j

˙H ∗ and ∂ ˙qj

˙H ∗ = −∂qj KiZ t
= ∂qj KiZ qj (t)

qj (0)

0

∂qj

∂ ˙qj

MbvB = ∂qj KiZ t

0

MbJ −1

b Jj ˙qj ds

MbJ −1

b Jj dqj = KiMbJ −1

b Jj,

˙H ∗ = −∂ ˙qj KpH − ∂ ˙qj KiZ t

0

H ds = KpMbJ −1

b Jj

which must then be evaluated in (qj, ˙qj) = (qd
Grouping the partial derivatives together, i.e.

j , 0).

A1 := −M −1
A2 := −M −1

j Λ†JbM −1
j Λ†JbM −1

b KiMbJ −1
b KpMbJ −1

b Jj − M −1
b Jj − M −1

j NΛK j
j NΛK j

pNΛMj
dNΛMj

we obtain the expression for the matrices in (26).

2) Proof of Asymptotic Stability: Consider now the fol-

lowing Lyapunov candidate:

1
2

V (x) =

where

(x⊤

1 M ⊤

j (qd

j )Q1Mj(qd

j )x1+x⊤

2 M ⊤

j (qd

j )Q2Mj(qd

j )x2)

x1 := qj − qd
j
Q1 := Λ⊤J −⊤
Q2 := Λ⊤J −⊤

b M ⊤
b M ⊤

b KiMbJ −1
b MbJ −1

b Λ + NΛ

b Λ + NΛK j

pNΛ

calculated at x1 = 0, x2 = 0. V is a properly deﬁned
candidate, in fact V = 0 ⇐⇒ x = 0 and is positive deﬁnite
otherwise. Indeed, Q1 can be rewritten in the following way:

Q1 =hΛ⊤ NΛi"J −⊤

b M ⊤

b KiMbJ −1

b

0

0
K j

p#(cid:20) Λ
NΛ(cid:21) .

and, because Λ and NΛ are orthogonal Q1 is positive deﬁnite.
The same reasoning can be applied to Q2.

We can now consider the time derivative of V :

˙V = x⊤

= −x⊤

1 M ⊤

j Q1Mjx2 + x⊤
j (Λ⊤J −⊤
b M ⊤
dNΛ)Mjx2 ≤ 0.

2 M ⊤
+NΛK j

2 M ⊤
b KpMbJ −1

j Q2Mj ˙x2
b Λ

The stability of the equilibrium point thus follows.

In order to prove the asymptotic stability of the equilib-
rium point we have to resort to LaSalle’s invariance principle.
˙V (x) = 0} which
Let’s deﬁne the invariant set S := {x :
implies S = {(x1, 0)}. It is easy to verify that the only
trajectory which starts in S and remains in S is given by
x1 = 0 thus proving LaSalle’s principle. As a consequence
the equilibrium point x = 0 ⇒ (qj, ˙qj) = (qd
j , 0) is
asymptotically stable.

REFERENCES

[1] S. Caux, E. Mateo, and R. Zapata, “Balance of biped robots: special
double-inverted pendulum,” Systems, Man, and Cybernetics, 1998.
1998 IEEE International Conference on, 1998.

[2] K. Hirai, M. Hirose, Y. Haikawa, and T. Takenaka, “The development
of Honda humanoid robot,” Robotics and Automation, 1998. Proceed-
ings. 1998 IEEE International Conference on, 1998.

[3] S. Hyon, J. Hale, and G. Cheng, “Full-body compliant human-
humanoid interaction: Balancing in the presence of unknown external
forces,” Robotics, IEEE Transactions on, Oct 2007.

[4] Q. Huang, K. Kaneko, K. Yokoi, S. Kajita, T. Kotoku, N. Koyachi,
H. Arai, N. Imamura, K. Komoriya, and K. Tanie, “Balance control
of a biped robot combining off-line pattern with real-time modiﬁca-
tion,” Robotics and Automation, 2000. Proceedings. ICRA ’00. IEEE
International Conference on, 2000.

[5] R. Featherstone, Rigid Body Dynamics Algorithms.

Secaucus, NJ,

USA: Springer-Verlag New York, Inc., 2007.

[6] J. A. Acosta and M. Lopez-Martinez, “Constructive feedback lineariza-
tion of underactuated mechanical systems with 2-DOF,” Decision and
Control, 2005 and 2005 European Control Conference. CDC-ECC ’05.
44th IEEE Conference on, 2005.

[7] C. Ott, M. Roa, and G. Hirzinger, “Posture and balance control
for biped robots based on contact force optimization,” in Humanoid
Robots (Humanoids), 2011 11th IEEE-RAS International Conference
on, Oct 2011, pp. 26–33.

[8] P. Wensing and D. Orin, “Generation of dynamic humanoid behaviors
through task-space control with conic optimization,” in Robotics and
Automation (ICRA), 2013 IEEE International Conference on, May
2013, pp. 3103–3109.

[9] S. Kuindersma, F. Permenter, and R. Tedrake, “An efﬁciently solvable
quadratic program for stabilizing dynamic locomotion,” in Robotics
and Automation (ICRA), 2014 IEEE International Conference on, May
2014, pp. 2589–2594.

[10] F. Nori, S. Traversaro, J. Eljaik, F. Romano, A. Del Prete, and
D. Pucci, “icub whole-body control through force regulation on rigid
noncoplanar contacts,” Frontiers in Robotics and AI, vol. 2, no. 6,
2015.

[11] B. Stephens and C. Atkeson, “Dynamic balance force control for
compliant humanoid robots,” in Intelligent Robots and Systems (IROS),
2010 IEEE/RSJ International Conference on, Oct 2010, pp. 1248–
1255.

[12] A. Herzog, L. Righetti, F. Grimminger, P. Pastor, and S. Schaal, “Bal-
ancing experiments on a torque-controlled humanoid with hierarchical
inverse dynamics,” in Intelligent Robots and Systems (IROS 2014),
2014 IEEE/RSJ International Conference on, Sept 2014, pp. 981–988.
[13] T. Koolen, S. Bertrand, G. Thomas, T. de Boer, T. Wu, J. Smith,
J. Englsberger, and J. Pratt, “Design of a momentum-based control
framework and application to the humanoid robot atlas,” preparation
for International Journal of Humanoid Robotics, 2015.

[14] L. Righetti, J. Buchli, M. Mistry, and S. Schaal, “Inverse dynamics
control of ﬂoating-base robots with external constraints: A uniﬁed
view,” IEEE International Conference on Robotics and Automation,
May 2011.

[15] ——, “Control of legged robots with optimal distribution of contact
forces,” in Humanoid Robots (Humanoids), 2011 11th IEEE-RAS
International Conference on, Oct 2011, pp. 318–324.

[16] J. Nakanish, M. Mistry, and S. Schaal, “Inverse Dynamics Control
with Floating Base and Constraints,” Robotics and Automation, 2007
IEEE International Conference on, pp. 1942 – 1947, 2007.

[17] M. Hopkins, R. Grifﬁn, A. Leonessa, B. Lattimer, and T. Furukawa,
“Design of a compliant bipedal walking controller for the darpa
robotics challenge,” in Humanoid Robots (Humanoids), 2015 IEEE-
RAS 15th International Conference on, Nov 2015, pp. 831–837.

[18] M. Liu and V. Padois, “Comments on ”Adaptive Manipulator Con-
trol: A Case study”,” Intelligent Robots and Systems (IROS), 2015
IEEE/RSJ International Conference on, pp. 3981 – 3987, 2015.

[19] A. Hofmann, M. Popovic, and H. Herr, “Exploiting angular momentum
to enhance bipedal center-of-mass control,” Robotics and Automation.
ICRA ’09. IEEE International Conference on. 2009, 2009.

[20] H. Herr and M. Popovic, “Angular momentum in human walking,”
Journal of Experimental Biology, vol. 211, no. 4, pp. 467–481, 2008.
[21] J. E. Marsden and T. S. Ratiu, Introduction to Mechanics and Symme-
Springer

try: A Basic Exposition of Classical Mechanical Systems.
Publishing Company, Incorporated, 2010.

[22] J. E. Marsden and J. Scheurle, “The reduced euler-lagrange equations,”

Fields Institute Comm, vol. 1, pp. 139–164, 1993.

[23] J. Jellinek and D. Li, “Separation of the energy of overall rotation in
any n-body system,” Physical review letters, vol. 62, no. 3, p. 241,
1989.

[24] H. Ess´en, “Average angular velocity,” European journal of physics,

vol. 14, no. 5, p. 201, 1993.

[25] D. Orin, A. Goswami, and S.-H. Lee, “Centroidal dynamics of a

humanoid robot,” Autonomous Robots, 2013.

[26] G. Garofalo, B. Henze, J. Englsberger, and C. Ott, “On the inertially
decoupled structure of the ﬂoating base robot dynamics,” IFAC-
PapersOnLine, 2015.

[27] S.-H. Lee and A. Goswami, “Ground reaction force control at each
foot: A momentum-based humanoid balance controller for non-level
and non-stationary ground,” in Intelligent Robots and Systems (IROS),
2010 IEEE/RSJ International Conference on, Oct 2010, pp. 3157–
3162.

[28] N. Koenig and A. Howard, “Design and use paradigms for gazebo,
an open-source multi-robot simulator,” Intelligent Robots and Systems,
2004. (IROS 2004). Proceedings. 2004 IEEE/RSJ International Con-
ference on, pp. 2149 – 2154, 2004.

[29] D. E. Orin and A. Goswami, “Centroidal momentum matrix of a
humanoid robot: Structure and properties,” Intelligent Robots and
Systems, 2008. IROS 2008. IEEE/RSJ International Conference on,
pp. 653 – 659, 2008.

[30] G. Metta, L. Natale, F. Nori, G. Sandini, D. Vernon, L. Fadiga, C. von
Hofsten, K. Rosander, M. Lopes, J. Santos-Victor, A. Bernardino, and
L. Montesano, “The iCub humanoid robot: An open-systems platform
for research in cognitive development,” Neural Networks, vol. 23, no.
89, pp. 1125 – 1134, 2010, social Cognition: From Babies to Robots.

