6
1
0
2

 
r
a

 

M
5
1

 
 
]
E
M

.
t
a
t
s
[
 
 

1
v
5
6
5
4
0

.

3
0
6
1
:
v
i
X
r
a

A Generalized Labeled Multi-Bernoulli Filter for

Maneuvering Targets

Yuthika Punchihewa
School of Electrical and
Computer Engineering

Ba-Ngu Vo

School of Electrical and
Computer Engineering

Ba-Tuong Vo

School of Electrical and
Computer Engineering

Curtin University of Technology

Curtin University of Technology

Curtin University of Technology

WA, Australia

WA, Australia

WA, Australia

Email: yuthikasgp@yahoo.com

Email: ba-ngu.vo@curtin.edu.au

Email: ba-tuong.vo@curtin.edu.au

Abstract—A multiple maneuvering target system can be viewed
as a Jump Markov System (JMS) in the sense that the target
movement can be modeled using different motion models where
the transition between the motion models by a particular target
follows a Markov chain probability rule. This paper describes a
Generalized Labelled Multi-Bernoulli (GLMB) ﬁlter for tracking
maneuvering targets whose movement can be modeled via such
a JMS. The proposed ﬁlter is validated with two linear and non-
linear maneuvering target tracking examples.

I. INTRODUCTION

Multiple target tracking is the problem of estimating an un-
known and time varying number of trajectories from observed
data. There are two main challenges in this problem. The ﬁrst
is the time-varying number of targets due to the appearance
of new targets and deaths of existing targets, while the
second is the unknown association between measurements and
targets, which is further confounded by false measurements
and missed detections of actual targets [1]–[6].

The Bayes optimal approach to the multi-target tracking
problem is the Bayes multi-target ﬁlter that recursively prop-
agates the multi-target posterior density forward in time [3]
incorporating both the uncertainty in the number of objects
as well as their states. Under the standard multi-target system
model (which takes into account target births,deaths,survivals
and detections,misdetections and clutter), the multi-target pos-
terior densities at each time are Generalized Labeled Multi-
Bernoulli (GLMB) densities [7]. The δ-GLMB ﬁlter [8]–[10]
is an analytic solution to the multi-target Bayes ﬁlter.

While a non-maneuvering target motion can be described
by a ﬁxed model, a combination of motion models that
characterise different maneuvers may be needed to describe
the motion of a maneuvering target.Tracking a maneuvering
target in clutter is a challenging problem and is the subject of
numerous works [1], [2], [11]–[16], [18], [24]–[26]. Tracking
multiple maneuvering targets involves jointly estimating the
number of targets and their states at each time step in the
presence of noise, clutter, uncertainties in target maneuvers,
data association and detection. As such,
this problem is
extremely challenging in both theory and implementation.

The jump Markov system (JMS) or multiple models ap-
proach has proven to be an effective tool for single ma-

neuvering target tracking [12], [13], [18], [24]–[26]. In this
approach, the target can switch between a set of models in a
Markovian fashion. The interacting multiple model(IMM) and
variable-structure IMM (VS-IMM) estimators [1], [2], [14]–
[16] are two well known single-target ﬁltering algorithms for
maneuvering targets. The number of modes in the IMM is
kept ﬁxed, whereas in the VS-IMM the number of modes are
adaptively selected from a ﬁxed set of modes for improved
estimation accuracy and computational efﬁciency.

A Probability Hypothesis Density (PHD) ﬁlter [17] for ma-
neuvering target tracking was derived in [18] together with a
Gaussian mixture implementation and particle implementation.
As shown by Mahler in [19], this was the only mathematically
valid ﬁlter amongst severval PHD (and Cardinalized PHD)
ﬁlters proposed for jump Markov systems (JMSs) [20], [21].
Recently, multi-Bernoulli and labeled multi-Bernoulli [22],
[23] ﬁlters were also derived for JMSs in [24]–[26]. These
ﬁlters, however, are only approximate solutions to the Bayes
multi-target ﬁlter for maneuvering targets, and at present there
are no exact solutions in the literature.

In this paper, we propose an analytic solution to the Bayes
multi-target ﬁlter for maneuvering target tracking using JMSs.
Speciﬁcally, we extend the GLMB ﬁlter to JMSs that can be
implemented via Gaussian mixture or sequential Monte Carlo
methods. In addition to being an analytic solution and hence
more accurate than approximations, the proposed solution
outputs tracks or trajectories of the targets, whereas the PHD
and (unlabeled) multi-Bernoulli ﬁlters do not. The proposed
technique is veriﬁed via numerical examples.

II. BACKGROUND

We review JMS and the Bayes multi-target tracking ﬁlter in

this section.

A. JMS model for maneuvering targets

A JMS consists of a set of parameterised state space models,
whose parameters evolve with time according to a ﬁnite state
Markov chain. An example of a maneuvering target scenario
which can be successfully represented using a JMS model
is the dynamics of an aircraft, which can ﬂy with a nearly
constant velocity motion, accelerated/decelerated motion, and

coordinated turn [1], [2]. Under a JMS framework for such a
system a target that is moving under a certain motion model
at any time step are assumed to follow the same motion model
with a certain probability or switch to a different motion model
(that belongs to a set of pre-selected motion models) with a
certain probability in the next time step.

A Markovian transition probability matrix describes the
probabilities with which a particular target changes/retains the
motion model in the next time step given the motion model
at current time step. Let ϑ(r|r′) denote the probability of
switching to motion model r from r′ as given by this marko-
vian transition matrix, in which the sum of the conditional
probabilities of all possible motion models in the next time
step given the current model adds upto 1, i.e.,

ϑ(r|r′) = 1

(1)

Xr∈R

where R is the (discrete) set of motion models in the system.
Suppose that model r is in effect at time k, then the state
transition density from ζ′, at time k − 1, to ζ, at time k, is
denoted by φk|k−1(ζ|ζ′, r), and the likelihood of ζ generating
the measurement z is denoted by γk(z|ζ, r) [1], [2], [35].
Moreover, the joint transition of the state and the motion model
assumes the form:

fk|k−1(ζ, r|ζ′, r′) = φk|k−1(ζ|ζ′, r)ϑ(r|r′).

(2)

In general, the measurement can also depend on the model
r and hence the likelihood function becomes gk(z|ζ, r). Note
that by deﬁning the augmented system state as x = (ζ, r) a
JMS model can be written as a standard state space model.

JMS models are not only useful for tracking maneuvering
targets, but are also useful in the estimation of unknown clutter
parameters [27], [28].

B. Bayes multi-target tracking ﬁlter

In the Bayes multi-target tracking ﬁlter, the state of a target
includes an ordered pair of integers ℓ = (k, i), where k is
the time of birth, and i is a unique index to distinguish targets
born at the same time. The label space for targets born at time
k is denoted as Lk and the label space for targets at time k
(including those born prior to k) is denoted as L0:k. Note that
L0:k = L0:k−1 ∪ Lk, and that L0:k−1 and Lk are disjoint. An
existing target at time k has state x = (x, ℓ) consisting of the
kinematic/feature x and label ℓ ∈ L0:k. A multi-target state X
(uppercase notation) is a ﬁnite set of single-target states.

All information about the multi-target state at time k is
contained in πk, the posterior density of the multi-target state
conditioned on Z1:k = (Z1, ..., Zk), the measurement history
upto time k, where Zk is the ﬁnite set of measurements
received at
time k. The Bayes multi-target tracking ﬁlter
consists of a prediction step (3) and an update step (4), which
propagate the multi-target posterior/ﬁltering density forward
in time. Note that the integral in this case is the set integral
from ﬁnite set statistics [3].

πk|k−1(Xk) =Z f

k|k−1(Xk|X)πk−1(X)δX

(3)

(4)

πk(Xk) =

gk(Zk|Xk)πk|k−1(Xk)

R gk(Zk|X)πk|k−1(X)δX

where f
k|k−1(·|·) denotes the multi-target transition kernel
from time k−1 to k, and gk(·|·) denotes the likelihood function
at time k. Note that for compactness we omitted dependence
on the measurement history from πk|k−1 and πk. Note that the
same multi-target recursion (3)-(4) also holds for multi-target
states without labels.

A generic particle implementation of the multi-target Bayes
recursions (3)-(4) (for both labeled and unlabeled multi-target
states) was given in [29], while analytic approximations for
unlabeled multi-target states, such as the PHD, Cardinalized
PHD and multi-Bernoulli ﬁlters were proposed in [3], [22],
[30]–[33]. The GLMB ﬁlter [7], [8] is an analytic solution to
the multi-target Bayes recursions (3)-(4).

III. JMS-GLMB FILTERING

We start this subsection with some notations. For the labels
of a multi-target state X to be distinct, we require X and
the set of labels of X, denoted as L(X), to have the same
cardinality,
.i.e. the same number of elements. Hence, we
deﬁne the distinct label indicator as the function

∆(X) , δ|X|[|L(X)|],

where |Y | denotes the cardinality of the set Y , and δn[m]
denotes the Kronecker delta. The indicator function is deﬁned
as as

1Y (x) ,n 1,

if x∈ Y

0, otherwise .

For any ﬁnite set Y , and test function h ≤ 1, the multi-object
exponential is deﬁned by

h(y),

hY , Yy∈Y

with h∅ = 1 by convention. We also use the standard inner
production notation

hf, gi =Z f (x)g(x)dx,

for any real functions f and g.

An association map at time k is a function θ : L0:k →
{0, 1, ..., |Zk|} such that θ(ℓ) = θ(ℓ′) > 0 implies ℓ = ℓ′.
Such a function can be regarded as an assignment of labels to
measurements, with undetected labels assigned to 0. The set
of all such association maps is denoted as Θk; the subset of
association maps with domain L is denoted by Θk(L); and
Θ0:k , Θ0 × ... × Θk denotes the space of association map
history.

A. GLMB ﬁlter

In the GLMB ﬁlter, the multi-target ﬁltering density at time

k − 1 is a GLMB of the form:

πk−1(X) = ∆(X) Xξ∈Θ0:k−1

w(ξ)
k−1(L(X))[p(ξ)

k−1]X,

(5)

where each ξ = (θ0, ..., θk−1) ∈ Θ0:k−1 represents a history
of association maps up to time k − 1; each weight w(ξ)
k−1(L)
is non-negative with

where

k|k−1(L),

Z,k ]Lw(ξ)
k|k−1(x, ℓ)

XL⊆L0:k−1 Xξ∈Θ0:k−1

w(ξ)

k−1(L) = 1,

and each p(ξ)

k−1(·, ℓ) is a probability density.

Given a GLMB ﬁltering density, a tractable suboptimal
multi-target estimate is obtained by the following proceedure:
determine the maximum a posteriori cardinality estimate n∗
from the cardinality distribution

ρk−1(n) = XL⊆L0:k−1 Xξ∈Θ0:k−1

δn[|L|]w(ξ)

k−1(L);

(6)

determine the label set L∗ and ξ∗ with highest weight
w(ξ∗)
k−1(L∗) among those with cardinality n∗; determine the
expected values of the states from p(ξ∗)

k−1(·, ℓ), ℓ ∈ L∗ [7].

The GLMB density is a conjugate prior with respect to the
standard multi-target likelihood function and is also closed
under the multi-target prediction [7]. Under the standard multi-
target transition model, if the multi-target ﬁltering density, at
the previous time, πk−1 is a GLMB of the form (5), then the
multi-target prediction density πk|k−1 is a GLMB of the form
(12) given by [7].

πk|k−1(X) = ∆(X) Xξ∈Θ0:k−1

where

k|k−1(L(X))[p(ξ)
w(ξ)

k|k−1]X,

(7)

S,k|k−1(x, ℓ)+1Lk(ℓ)pB,k(x, ℓ),

S,k|k−1(L ∩ L0:k−1)wB,k(L ∩ Lk),

k|k−1(L) = w(ξ)
w(ξ)
k|k−1(x, ℓ) = 1L0:k−1(ℓ)p(ξ)
p(ξ)
S,k|k−1]I−Lw(ξ)
S,k|k−1(L) = [ ¯P (ξ)
w(ξ)
S,k|k−1]LXI⊇L
S,k|k−1(ℓ) = DPS,k|k−1(·, ℓ), p(ξ)
k−1(·, ℓ)E ,
S,k|k−1(x, ℓ) = DPS,k|k−1(·, ℓ)fk|k−1(x|·, ℓ), p(ξ)

[1− ¯P (ξ)

k−1(·, ℓ)E

k−1(I),

¯P (ξ)

,

p(ξ)

¯P (ξ)
S,k|k−1(ℓ)

PS,k|k−1(x, ℓ) = probability of survival to time k of a target

with previous state (x, ℓ),

fk|k−1(x|x′, ℓ) = transition density of feature x′ at time

k − 1 to x at time k for target with label ℓ,

wB,k(L) = probability of targets with labels L being

born at time k,

pB,k(x, ℓ) = probability density of the feature x of a
new target born at time k with label ℓ.

Moreover, under the standard multi-target measurement
model, the multi-target ﬁltering density πk is a GLMB given
by

πk(X) = ∆(X)Xξ∈Θ0:k−1 Xθ∈Θk

w(ξ,θ)

k

(L(X)|Zk)[p(ξ,θ)(·|Zk)]X,

(8)

w(ξ,θ)

k

p(ξ,θ)

k

(x, ℓ|Z) =

Ψ(θ)

(L|Z) ∝ 1Θk(L)(θ)[ ¯Ψ(ξ,θ)
Z,k(x, ℓ)p(ξ)
¯Ψ(ξ,θ)
Z,k (ℓ)
Z,k(·, ℓ), p(ξ)

Z,k (ℓ) = DΨ(θ)

¯Ψ(ξ,θ)

k|k−1(·, ℓ)E ,

Ψ(θ)

{z1,...,zm},k(x, ℓ) = ( PD,k(x,ℓ)gk(zθ(ℓ)|x,ℓ)

1 − P D,k(x, ℓ),

κk(zθ(ℓ))

,

if θ(ℓ) > 0
if θ(ℓ) = 0

PD,k(x, ℓ) = probability of detection at time k

of a target with state (x, ℓ),

gk(z|x, ℓ) = likelihood that at time k target with
state (x, ℓ) generate measurement z,
κk = intensity function of Poisson clutter

at time k

The GLMB recursion above is the ﬁrst analytic solution
to the Bayes multitarget ﬁlter. Truncating the GLMB sum is
needed to manage the growing the number of components in
the GLMB ﬁlter [8].

B. GLMB ﬁlter for Manuevering Targets

We deﬁne the (labeled) state of a manuevering target to
include the kinematic/feature ζ, the motion model index r, and
the label ℓ, i.e., x = (ζ, r, ℓ), which can be modeled as a JMS.
Note that the label of each target remains constant throughout
it’s life even though it is part of the state vector. Hence the
JMS state equations for a target with label ℓ are indexed by
ℓ, i.e., φ(ℓ)
k (z|ζ, r). The new state of a
surviving target will also be governed by the probability of
the target transitioning to that motion model from the previous
model in addition to the probability of survival and the relevant
state transtition function. Consequently, the joint transition and
likelihood function for the state and the model index are given
by,

k|k−1(ζ|ζ′, r) and γ(ℓ)

fk|k−1(ζ, r|ζ′, r′, ℓ) = φ(ℓ)
gk(z|ζ, r, ℓ) = γ(ℓ)

k|k−1(ζ|ζ′, r) × ϑ(r|r′)
k (z|ζ, r)

(9)

(10)

Substituting (9) and (10) into the GLMB prediction and
update equations yields the GLMB ﬁlter for maneuvering
targets. Note that since x = (ζ, r)

Z f (x)dx = Xr∈RZ f (ζ, r)dζ.

The state extraction is akin to the single model system.
To estimate the motion model for each label, we select the
motion model that maximizes the marginal probability of that
model over the entire density for that label, i.e., for label ℓ of
component ξ, the estimated motion model ˆr is given by (11).

ˆr = argmax

r

Z p(ξ)(ζ, r, ℓ)dζ

(11)

C. Analytic Solution

Consider the special case where the target birth model,
motion models and observation model are all linear models
with Gaussian noise. Given that the posterior density at time
k − 1 is of the form (5) with x = (ζ, r, ℓ), the GLMB ﬁlter
prediction equation can be explicitly written as

πk|k−1(X) = ∆(X) Xξ∈Θ0:k−1

k|k−1(L(X))[p(ξ)
w(ξ)

k|k−1]X,

(12)

where

S,k|k−1(ζ, r, ℓ)+1Lk(ℓ)pB,k(ζ, r, ℓ),

[1− ¯P (ξ)

S,k|k−1]I−Lw(ξ)

S,k|k−1(L ∩ L0:k−1)wB,k(L ∩ Lk),

k|k−1(L) = w(ξ)
w(ξ)
k|k−1(ζ, r, ℓ) = 1L0:k−1(ℓ)p(ξ)
p(ξ)
S,k|k−1(L) = [ ¯P (ξ)
w(ξ)
S,k|k−1]LXI⊇L
S,k|k−1(ℓ) = Xr∈R
S,k|k−1(r, ℓ) = DPS,k|k−1(·, r, ℓ), p(ξ)
S,k|k−1(ζ, r, ℓ) = Pr′∈RDPS,k|k−1(·, ℓ)fk|k−1(ζ, r|·, r′, ℓ), p(ξ)

k−1(·, r, ℓ)E ,

¯P (ξ)
S,k|k−1(r, ℓ),

¯P (ξ)

¯P (ξ)

p(ξ)

k−1(I),

k−1(·,ℓ)E

,

¯P (ξ)
S,k|k−1(ℓ)

PS,k|k−1(ζ, r, ℓ) = probability of survival to time k of a

target with previous labeled state (ζ, r, ℓ),

fk|k−1(ζ, r|ζ′, r′, ℓ) = N (ζ; F (r)ζ′, Q(r)

F ) × ϑ(r|r′)

F (r) = state transition matrix of motion model r,
Q(r)

F = covariance matrix of motion model r,

wB,k(L) = probability of targets with labels L being

born at time k,
pB,k(ζ, r, ℓ) = N (ζ; m(i), Q(i)

B ) × ϑ(i)(r)

ϑ(i)(r) = probability that a target born at birth

region i possesses motion model r,

m(i) = mean of birth region i,
Q(i)

B = covariance of birth region i,

Moreover, GLMB update formula can be written explicitly

as

πk(X) = ∆(X)Xξ∈Θ0:k−1 Xθ∈Θk

where

w(ξ,θ)

k

(L(X)|Zk)[p(ξ,θ)(·|Zk)]X,

(13)

p(ξ,θ)

k

(ζ, r, ℓ|Z) =

w(ξ,θ)

k

k|k−1(L),

Ψ(θ)

Z,k ]Lw(ξ)
k|k−1(ζ, r, ℓ)

(L|Z) ∝ 1Θk(L)(θ)[ ¯Ψ(ξ,θ)
Z,k(ζ, r, ℓ)p(ξ)
¯Ψ(ξ,θ)
Z,k (ℓ)
Z,k(· , r, ℓ), p(ξ)

Z,k (ℓ) = Xr∈RDΨ(θ)

¯Ψ(ξ,θ)

k|k−1(·, r, ℓ)E ,

Ψ(θ)

{z1,...,zm},k(ζ, r, ℓ) = ( PD,k(ζ,r,ℓ)gk(zθ(ℓ)|ζ,r,ℓ)

1 − P D,k(ζ, r, ℓ),

κk(zθ(ℓ))

, if θ(ℓ) > 0
if θ(ℓ) = 0

PD,k(ζ, r, ℓ) = probability of detection at time k

of a target with state (ζ, r, ℓ),

gk(z|ζ, r, ℓ) = N (z; H (r)ζ, Q(r)
H )

κk = intensity function of Poisson clutter,

H (r) = likelihood matrix for targets

moving under motion model r,

Q(r)

H = covariance matrix of likelihood for
targets moving under motion model r.

For mildly non-linear motion models and measurement
models, the unscented Kalman Filter (UKF) [34], [35] can
been utilized for predicting and updating each Gaussian com-
ponent in the mixture forward. Alternatively, instead of a
making use of a Gaussian mixture to represent the posterior
density of each track in a hypothesis, a particle ﬁlter can
be employed. Instead of a Gaussian mixture, the density is
represented using a set of particles which are propagated
forward under the different motion models with adjusted
weights for each particle. As in the case of the Gaussian
mixture, the number of particles in the density increase by
threefold during each prediction forward. Thus resampling
needs to be carried out to discard particles with negligible
weights and keep the total count of particles in control.

D. Implementation Issues

In the above solution it is evident that the posterior density
for each track is a Gaussian mixture, with each mixture
component relating to one of the motion models present. For a
particular track, at each new time step the posterior is predicted
forward for all motion models present in the system, thereby
generating a new Gaussian mixture. The weight of each
new component will be the weight of the parent component
multiplied by the probability of switching to the corresponding
motion model. As a result the number of mixture components
escalates exponentially. Hence extensive pruning and merging
must be carried out for each track in each GLMB hypothesis
after the update step to keep the computation managable.

IV. SIMULATION RESULTS

In this section we demonstrate the use of the proposed JMS-
GLMB solution via two multiple manuevering target tracking
examples.

Linear Example: The kinematic state of each target in this
example consists of cartesian x and y coordinates and their
respective velocities. T = 5s is the sampling interval. The
observation area is a [-60, 60] × [-60, 60] km2 area. The
JMS used in the simulation consists of three types of motion
models viz. constant velocity, right turn (coordinated turn with
a 3◦ angle), and left turn (coordinated turn with a −3◦ angle).
The state transition matrices for the three models are obtained
via substituting ω = 0, ω = 5π/180 and ω = −5π/180 in
equation (15) respectively.The process noise co-variance QL
is given in (20) with σv1 = 5ms−1, σv2 = σv3 = 20ms−1.
The markovian motion model switching probability matrix is
given in (17).

1 T 0
0
0
0
0
1 T
0
0
0
1

1
0
0

F1 =





(14)

F2(ω) =


sin(T ω)/ω

0
1
0
0
0 −(cos(T ω) − 1)/ω 1
0
0

sin(T ω)

cos(T ω)

(cos(T ω) − 1)/ω

−sin(T ω)
sin(T ω)/ω

cos(T ω)


(15)

(16)

(17)



0.8


QL = σ2

vr


T 4/4 T 3/2
T 2
T 3/2
0
0

0
0

0
0

0
0

T 4/4 T 3/2
T 3/2
T 2

ϑ(r′|r) = M (r, r′) where M =


0.8 0.1 0.1
0.2 0.8
0
0.2
0

Targets are spontaneously born at

three pre-deﬁned
Gaussian birth locations N (m1, PL), N (m2, PL), N (m3, PL)
where.

m1 = [: 40000, 0, −50000, 0], :: m2 = [: −50000, 0, 40000, 0]

m3 = [−10000, 0, 0, 0], PL = diag([1000,300,1000,300]).

Targets are born from each location at each time step with a
probability of 0.2 and the initial motion model is model 1.

The x and y corrdinates of the targets are observed by a
single sensor located at (0, 0) with probability of detection
PD = 0.97 (observation matrix H given in (18)). The mea-
surements are subjected to zero mean noise with a covariance
hI2 where σh = 40m and I2 is the identity matrix of
of σ2
dimestion 2. Clutter is modeled as a uniform Poisson with an
average number of 60 measurements per scan.

H =(cid:20)1 0

0 0

0 0

1 0(cid:21)

(18)

Figure (1) shows the trajectories of three targets born at
different time steps in a simlation run. Fig.(3) illustrates the
estimated coordinates colour coded in red (constant velocity),
blue (right turn) and green (left turn) to indicate the estimated
motion models along with the true path (coninous lines) and
measurements (grey crosses).

The Optimal Subpattern Assignment Metric (OSPA) [36]
values calculated for 100 monte carlo runs for the linear
example are shown in the top graph of ﬁg.(6). The top graph
of ﬁgure (5) shows the probabilities of estimating each motion
model (colour coded) in each time step for target 1. For
example, between time steps 1 to 30, constant velocity model
(red) has a higher probability (above 0.9 in most time steps)
of being the motion model which guided the target. It can be
observed that the the actual motion model under which the
target was simulated to move and the estimated model are the
same in most time steps.

)

m

i

(
 
e
t
a
n
d
r
o
o
c
 
y

x 104

6

4

2

0

−2

−4

−6

−8

x 104

)

m

i

(
 
e
t
a
n
d
r
o
o
c
 
y

6

4

2

0

−2

−4

−6

Target 2; born k=3; dies k=92
Target 2; born k=3; dies k=92

Target 1; born k=1; dies k=100
Target 1; born k=1; dies k=100

Target 3; born k=11; dies k=91
Target 3; born k=11; dies k=91

−6

−4

−2

2
x coordinate (m)

0

4

6
x 104

Fig. 1. True Target Trajectories - Linear Example

Target 2; born k=3; dies k=95

Target 1; born k=1; dies k=90

Target 3; born k=11; dies k=100

−6

−4

−2
x coordinate (m)

0

2

4

6

x 104

Fig. 2. True Target Trajectories - Non-linear Example

Nonlinear Example: In this case the motion models and
the measurement models are non-linear, and the unscented
Kalman Filter (UKF) [34], [35] is used for predicting and
updating each Gaussian component in the mixture forward.

The motion models under which the targets are moving are
the constant velocity model and the coordinated turn model
with unknown turn rate. The birth locations are given by
N (m4, PN L), N (m5, PN L), N (m6, PN L) where,

m4 = [40000, 0, −50000, 0, 0], m5 = [−50000, 0, 40000, 0, 0],

m6 = [−10000,0,0,0,0],PN L= diag([1000,300,1000,300,−1×10−4]).

The state vector includes the turn rate in addition to the
positions and velocities in x, y directions and QN L is the
process noise co-variance matrix.

x 104

6

)

m

i

(
 
e
t
a
n
d
r
o
o
c
−
x

)

m

(
 

e

t

i

a
n
d
r
o
o
c
−
y

4

2

0

−2

−4

−6

6

4

2

0

−2

−4

−6

x 104

10

20

30

40

50

Time Step

60

70

80

90

100

10

20

30

40

50

Time Step

60

70

80

90

100

Fig. 3.

Position Estimates - Linear Example.

)

m

(
 

e

t

i

a
n
d
r
o
o
c
 
−
X

 

)

m

(
 

e

t

i

a
n
d
r
o
o
c
 
−
Y

 

x 104

x 104

6

4

2

0

−2

−4

−6

6

4

2

0

−2

−4

−6

10

20

30

40

50

60

70

80

90

100

Time Step

10

20

30

40

50

Time Step

60

70

80

90

100

Fig. 4.

Position Estimates - Non Linear Example.

The observation region is the same as in the linear example.
The measurements are obtained using a bearing and range
sensor at (0,0) position Clutter is poisson distributed uniformly
with an average value of 60. The measurement noise covari-
r ] with σθ = π/180rads−1 and σr = 20m.
ance is diag([σ2
The markovian transition matrix is given in (19).

θ , σ2

ϑ(r′|r) = M (r, r′) where M =(cid:20)0.8 0.2
0.2 0.8(cid:21)



T 4/4 T 3/2
T 2
T 3/2
0
0
0

0
0
0
0
T 2

T 4/4 T 3/2
T 2
T 3/2
0

0




0
0
0

0
0

0
0

(19)

(20)

QN L = σ2
vr

The Optimal Subpattern Assignment Metric (OSPA) [36]
values calculated for 100 monte carlo runs for the non linear
example are shown in the bottom graph of ﬁg.(6). The bottom
graph of ﬁgure (5) shows the probabilities of estimating each
motion model (colour coded) in each time step for target 1 in
the non-linear example. It can be observed that the the actual
motion model under which the target was simulated to move
has the higher probability.

V. CONCLUSION

An algorithm for tracking multiple maneuvering targets is
proposed using the GLMB multi-target tracking ﬁltering with
JMS motion models. Analytic prediction and update equations
are derived along with Linear Gaussian and Unscented im-
plementations. Simulation results verify accurate tracking and
motion model estimation.

REFERENCES

[1] Y. Bar-Shalom, X. Li and T. Kirubarajan, Estimation with Applications

to Tracking and Navigation, Wiley, New York, 2001.

[2] Y. Bar-Shalom, P. Willett, and X. Tian, Tracking and Data Fusion: A

Handbook of Algorithms, YBS Publishing, 2011.

[3] R. Mahler, Statistical Multisource-Multitarget Information Fusion, Nor-

wood, MA: Artech House, 2007.

[4] R. Mahler, Advances in Statistical Multisource-Multitarget Information

Fusion, Norwood, MA: Artech House, 2014.

[5] S. Blackman, Multiple Target Tracking With Radar Applications,” Nor-

wood, MA: Artech House; 1986.

1

0.8

0.6

0.4

0.2

y
t
i
l
i

b
a
b
o
r
p
 
s
s
a
c

l

0

 
0

1

0.8

0.6

0.4

0.2

y
t
i
l
i

b
a
b
o
r
p

 
s
s
a
c

l

0

 
0

CV model

right turn

left turn

 

10

20

30

40

50

Time Step

60

70

80

90

100

CV model

CT model

 

10

20

30

40
50
Time Step

60

70

80

90

Fig. 5.
example (above) and non-Linear example (below) (100 mc runs).

Probability of estimating each motion model for target 1 in linear

200

150

100

50

r
o
r
r

 

E
A
P
S
O

0

 
0

200

150

100

50

r
o
r
r

 

E
A
P
S
O

0

0

Total Error

Cardinality Error

Localization Error

 

10

20

30

40

50

Time Step

60

70

80

90

100

10

20

30

40

50

Time Step

60

70

80

90

100

Fig. 6. OSPA calculation with C = 200m P = 2 for linear example(above)
and non-linear example (below)(100 mc runs).

[6] Y. Bar-Shalom and T. E. Fortmann, Tracking and Data Association, San

Diego, CA: Academic, 1988.

[7] B.-T. Vo and B.-N. Vo ”Labeled Random Finite Sets and Multi-Object
IEEE Trans. Signal Processing, vol 61, no 13, 2013.

Conjugate Priors”,
pp. 3460-3475.

[8] B.-N. Vo, B.- T. Vo and D. Phung, ”Labeled Random Finite Sets and
IEEE Trans. Signal Processing,

the Bayes Multi-target Tracking Filter”,
2014.

[9] H. G. Hoang, B.-T. Vo, B.-N. Vo, ”A Generalized Labeled Multi-
Bernoulli Filter Implementation using Gibbs Sampling,” arXiv preprint
arXiv:1506.00821

[10] H. Hoang, B.-T. Vo and B.-N. Vo, ”A Fast Implementation of the
Generalized Labeled multi-Bernoulli Filter with Joint Prediction and
Update,” 18th Int. Conf. Inf. Fusion, Washington DC, July 2014.

[11] T. Kirubarajan, Y. Bar-Shalom, K.,R. Pattipati, and I. Kadar, ”Ground
tracking with variable structure IMM estimator,” IEEE Trans.

target
Aerospace and Electronic Systems, vol. 36, no. 1 pp. 26-46, 2000.

[12] A. Doucet, N. J. Gordon, V. Krishnamurthy, ”Particle ﬁlters for state es-
timation of jump Markov linear systems,” IEEE Trans. Signal Processing,
vol. 47, Issue 3, pp. 613 - 624, Mar. 2001.

[13] T. Vercauteren , D. Guo and X. Wang, ”Joint multiple target tracking
and classiﬁcation in collaborative sensor networks”, IEEE J. Select. Areas
in Communications, vol. 23, no. 4, pp.714 -723 2005.

[14] X. R. Li, “Engineer’s guide to variable-structure multiple-model esti-
mation for tracking,” Chapter 10, in Multitarget-Multisensor Tracking:

Applications and Advances, Volume III, Ed. Y. Bar-Shalom and W. D.
Blair, pp. 449–567, Aetech House, 2000.

[15] X. R. Li and V. P. Jilkov, “A survey of maneuvering target tracking,
Part V: Multiple-Model methods,” IEEE Trans. Aerospace & Electronic
Systems, vol. 41, no. 4, pp. 1255–1321, 2005.

[16] E. Mazor, A. Averbuch, Y. Bar-Shalom and J. Dayan, ”Interacting
Multiple Model Methods in Target Tracking:A Survey,” IEEE Trans.
Aerospace and Electronic Systems, vol. 34, no. 1, Jan. 1998.

[17] R. Mahler, “Multitarget Bayes ﬁltering via ﬁrst-order multitarget mo-
ments,” IEEE Trans. Aerospace & Electronic Systems, vol. 39, no. 4, pp.
1152–1178, 2003.

[18] A. Pasha, B.-N. Vo, H. D. Tuan and W.K. Ma, ”A Gaussian Mixture
PHD ﬁlter for Jump Markov Systems models,” IEEE Trans. Aerospace
and Electronic Systems, vol. 45, Issue 3, pp. 919-936, 2009.

[19] R. Mahler, ”On multitarget jump-Markov ﬁlters.” 15th Int. Conf. Inf.

Fusion, Singapore 2012.

[20] K Punithakumar, T Kirubarajan, and A. Sinha, ”Multiple-model prob-
ability hypothesis density ﬁlter for tracking maneuvering targets,” IEEE
Trans. Aerospace and Electronic Systems, vol. 44, no. 1, pp. 87-98, 2008.
[21] R. Georgescu and P. Willett, ”The multiple model CPHD tracker,” IEEE

Trans. Signal Processing, vol. 60, no. 4, pp. 1741-1751, 2012.

[22] B.-T. Vo, B.-N. Vo, and A. Cantoni, “The Cardinality Balanced Multi-
target Multi-Bernoulli ﬁlter and its implementations,” IEEE Trans. Signal
Processing, vol. 57, no. 2, pp. 409–423, Feb. 2009.

[23] S. Reuter, B.-T. Vo, B.-N. Vo, and K. Dietmayer, “The labelled multi-
Bernoulli ﬁlter,” IEEE Trans. Signal Processing, vol. 62, no. 12, pp. 3246–
3260, 2014.

[24] D. Dunne, and T. Kirubarajan, ”Multiple model multi-Bernoulli ﬁlters
for manoeuvering targets,” IEEE Trans. Aerospace and Electronic Sys-
tems, vol. 49, no. 4, pp. 2679-2692, 2013.

[25] X. Yuan, F. Lian, and C. Z. Han, ”Multiple-Model Cardinality Balanced
Multi-target Multi-Bernoulli Filter for Tracking Maneuvering Targets,”
Journal of Applied Mathematics, vol. 2013, 16 pages, 2013.

[26] S. Reuter, A. Scheel, and K. Dietmayer, “The Multiple Model Labeled

Multi-Bernoulli Filter,” Int. Conf. Inf. Fusion, WA, 2015

[27] R. Mahler, B.-T. Vo, and B.-N. Vo. ”CPHD ﬁltering with unknown
clutter rate and detection proﬁle.” IEEE Trans. Signal Processing, vol.
59, no. 8, pp. 3497-3513, 2011.

[28] B.-T. Vo, B.-N. Vo, R., Hoseinnezhad, R. Mahler ”Robust multi-
Bernoulli ﬁltering,” IEEE J. Selected Topics in Signal Processing, vol.
7, no. 3, pp. 399-409, 2013.

[29] B.-N. Vo, S. Singh, and A. Doucet, “Sequential Monte Carlo methods
for multitarget ﬁltering with random ﬁnite sets,” IEEE Trans. Aerospace
& Electronic Systems, vol. 41, no. 4, pp. 1224–1245, 2005.

[30] R. Mahler, “PHD ﬁlters of higher order in target number,” IEEE Trans.

Aerospace & Electronic Systems, vol. 43, no. 4, pp. 1523–1543, 2007.

[31] B.-N. Vo and W.-K. Ma, “The Gaussian mixture probability hypothesis
density ﬁlter,” IEEE Trans. Signal Processing, vol. 54, no. 11, pp. 4091–
4104, 2006.

[32] B.-T. Vo, B.-N. Vo, and A. Cantoni, “Analytic implementations of the
cardinalized probability hypothesis density ﬁlter,” IEEE Trans. Signal
Processing, vol. 55, no. 7, pp. 3553–3567, 2007.

[33] B.-N. Vo, B.-T. Vo, N.-T. Pham and D. Suter, “Joint detection and
estimation of multiple objects from image observations,” IEEE Trans.
Signal Procesing, vol. 58, no. 10, pp. 5129–5241, 2010.

[34] S. J. Julier and J. K. Uhlmann, A new extension of the Kalman ﬁlter
to nonlinear systems, ” 11th Int. Symp. Aerospace/Defense Sensing,
Simulation and Controls, 1997, pp. 182-193.

[35] B. Ristic, S. Arulampalam, and N. J. Gordon, Beyond the Kalman Filter:

Particle Filters for Tracking Applications. Artech House, 2004.

[36] D. Schuhmacher, B.-T. Vo, and B.-N. Vo, ”A consistent metric for
IEEE Trans. Signal

performance evaluation in multi-object ﬁltering,”
Processing, Vol. 56, No. 8 Part 1, pp. 3447-3457, 2008.

