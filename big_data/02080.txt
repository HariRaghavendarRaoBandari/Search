Finding the Maximum Subset with Bounded
Convex Curvature∗
Mikkel Abrahamsen†1 and Mikkel Thorup‡2

1,2 Department of Computer Science, University of Copenhagen

Universitetsparken 5
DK-2100 Copenhagen Ø
Denmark
miab@di.ku.dk, mikkel2thorup@gmail.com

Abstract

We describe an algorithm for solving an important geometric problem arising in computer-aided
manufacturing. When machining a pocket in a solid piece of material such as steel using a rough
tool in a milling machine, sharp convex corners of the pocket cannot be done properly, but have
to be left for ﬁner tools that are more expensive to use. We want to determine a tool path that
maximizes the use of the rough tool. Mathematically, this boils down to the following problem.
Given a simply-connected set of points P in the plane such that the boundary ∂P is a curvilinear
polygon consisting of n line segments and circular arcs of arbitrary radii, compute the maximum
subset Q ⊆ P consisting of simply-connected sets where the boundary of each set is a curve with
bounded convex curvature. A closed curve has bounded convex curvature if, when traversed in
counterclockwise direction, it turns to the left with curvature at most 1. There is no bound on
the curvature where it turns to the right. The diﬀerence in the requirement to left- and right-
curvature is a natural consequence of diﬀerent conditions when machining convex and concave
areas of the pocket. We devise an algorithm to compute the unique maximum such set Q. The
algorithm runs in O(n log n) time and uses O(n) space.

For the correctness of our algorithm, we prove a new generalization of the Pestov-Ionin
Theorem. This is needed to show that the output Q of our algorithm is indeed maximum in the
sense that if Q0 is any subset of P with a boundary of bounded convex curvature, then Q0 ⊆ Q.

1

Introduction

The motivation for our work comes from the generation of toolpaths for pocket machining.
Pocket machining is the process of cutting some speciﬁed pocket in a piece of material –
in our case most likely a piece of metal – using a milling machine. We ﬁrst describe the
clean mathematical problem that we solve and afterwards explain how it relates to pocket
machining.

Consider a simply-connected closed subset of the plane and the weakly simple, closed
curve around its boundary which we traverse in counter-clockwise direction. We say that
the curve is convex where it turns left and concave where it turns right. We say it has
bounded convex curvature if it turns left with curvature at most 1. There is no bound on
the right-curvature, and we may even have sharp concave corners. We say that a set in the
plane has bounded convex curvature if all the connected components are simply-connected

6
1
0
2

 
r
a

M
7

 

 
 
]

G
C
.
s
c
[
 
 

1
v
0
8
0
2
0

.

3
0
6
1
:
v
i
X
r
a

∗ A short version of this paper will appear at SoCG 2016.
† Research partly supported by Mikkel Thorup’s Advanced Grant from the Danish Council for Independent
‡ Research partly supported by an Advanced Grant from the Danish Council for Independent Research

Research under the Sapere Aude research career programme.

under the Sapere Aude research career programme.

2

Finding the Maximum Subset with Bounded Convex Curvature

and the weakly simple, closed curve around the boundary of each connected component has
bounded convex curvature. Similarly, we say that a closed curve has bounded curvature in
general if it turns to the left and to the right with curvature at most 1.

A nice composition property of sets of bounded convex curvature is that if
we take two such sets Q1 and Q2, unite them, and ﬁll out any holes, then the
resulting set, denoted Q1 ] Q2, has bounded convex curvature. See Figure 1,
where the boundary of Q1 ] Q2 is the thick curve. This composition property
does not hold if we demand that the curvature is bounded in general.

Q1

Q2

The input to our problem is a simply-connected closed set of points P in
the plane such that the boundary ∂P is a curvilinear polygon consisting of
n line segments and circular arcs of arbitrary radii. We present an algorithm
that in O(n log n) time ﬁnds the unique maximum subset Q ⊆ P of bounded
convex curvature, that is, Q contains any other Q0 ⊆ P of bounded convex curvature. See
Figure 2 for an example.

Figure 1

We note that the uniqueness of a maximal subset Q of bounded convex curvature follows
from the composition property; for if there was another Q0 ⊆ P of bounded convex curvature
that was not contained in Q, then Q ] Q0 would also be contained in P and have bounded
convex curvature, contradicting the maximality of Q.

The boundary of Q will be a curvilinear polygon consisting of O(n) line segments and
circular arcs. A very useful property of the boundary of Q is that all concave arcs and vertices
are also on the boundary of P. Indeed, it is easy to verify that if there is a concave arc or
vertex on the boundary of Q which is not on the boundary of P, then Q is not maximal. A
similar reasoning implies that if the boundary of P is a simple curve, then so is the boundary
of Q.

∂Q

∂Q

∂P

We now describe diﬀerent contexts in which this prob-
lem appears naturally. The general problem is that we are
given an area S of the plane whose boundary is represented
as a curvilinear polygon. There is a thin layer of material
in S close to the boundary ∂S of S. The goal is to remove
that layer without removing anything from outside S. We
are given a rough tool, and we want to remove as much as
possible of the thin layer, leaving as little as possible for
ﬁner tools that are more expensive to use. The output is
a toolpath for the rough tool consisting of one or more curvilinear polygons. The tool is a
disk D of radius r, where r is bigger than the width of the layer we wish to remove. The
toolpath is the path which the center of D is following and the material cut away is the area
swept by D as its center follows the toolpath. The reason that we only have to handle a thin
layer close to the boundary of S is because the area farther from the boundary is removed
beforehand by tools that are less precise since they do not get close to the boundary. Thus
we may assume that the material at all points at some distance δ ≤ r from the boundary
have been removed. Some of the points closer to the boundary may also have been removed,
but this only makes it easier for our tool to move. With this in mind, when the tool follows
a weakly simple closed curve, we think of it as removing the interior of the curve plus every
point at distance at most r to the curve.

Figure 2

Let P be the inwards oﬀset of S by r, that is, P is the subset of S of points with distance
at least r to the pocket boundary ∂S. See Figure 3. P is the set of all allowed positions of
the center of D. If we had complete control over the tool, then we would be able to remove
the material in all of P and at all points with distance at most r from P by letting the tool

M. Abrahamsen & M. Thorup

3

Figure 3 A pocket bounded by ∂S. To the left is shown the boundary ∂P of the inwards oﬀset
of S by r. To the right is shown the boundary ∂Q of the maximum subset with bounded convex
curvature of P . The dotted arcs in the corners show the boundary of the material in S that cannot
be removed by D using the two toolpaths.

center traverse the boundary ∂P. However, there are restrictions on what tool paths we can
follow, e.g., we cannot count on following a toolpath with sharp corners in a precise way.

We are now ready to describe the ﬁrst application where we want to compute the maximum
subset of bounded convex curvature. Assume that the tool can only follow a path which has
bounded curvature in general. Assume furthermore that the tool can turn at least as sharply
as its own boundary, that is, r ≥ 1.

Using our algorithm for bounded convex curvature, we
are able to identify the maximum area that can be removed
by the tool such that the toolpath has bounded curvature
in general. First we compute the above set P which is
the inwards oﬀset of S by r. The boundary ∂P can be
computed from the Voronoi diagram of ∂S [8]. Clearly
the toolpath has to stay inside P. We now note that every
concave part of ∂P has curvature at most 1/r ≤ 1. Next
we use our algorithm to ﬁnd the maximum subset Q ⊆ P
of bounded convex curvature, see Figure 3. The area cut
away as D follows ∂Q is the unique maximum subset that
can be cut out of S using a tool with radius r ≥ 1 and such that the toolpath has bounded
convex curvature. However, all concave arcs and vertices on ∂Q stem from P which has
concave curvature at most 1/r ≤ 1. It follows that using the toolpath ∂Q, we cut out the
maximum subset of S under the condition that the toolpath has bounded curvature in general.
This also implies that we remove the maximum subset of the thin layer of material close to
the pocket boundary ∂S.

Figure 4

In the above example, the set P had bounded concave curvature.

In particular, all
concave arcs on ∂P have radius at least r, and for each concave arc A on ∂P of radius r and
center v, there is an associated concave vertex v of ∂S. Let a and b be the ﬁrst and last
point on A. When the tool follows A, the corner v will be on the tool boundary ∂D, and
the slightest imprecision will blunt the corner v. A recommended alternative [12] is that we
substitute A with two line segments aw and wb tangential to A at a and b, respectively, thus
creating a sharp concave corner w on the toolpath, see Figure 4. Using this technique, the
corner v will be cut much sharper and more precise. One can think of various variations of
this technique, since we can “casually” stop and turn the tool at any point on its way to
w because the remaining toolpath already ensures that all material will be cut away. This

∂SD∂P∂SD∂Qvw∂Sba∂PD4

Finding the Maximum Subset with Bounded Convex Curvature

shows that we cannot in general assume that there is any bound on the concave curvature
of the input toolpath. We also note the asymmetry with convex corners and arcs, where
overshooting a convex corner implies an illegal cut through the boundary of S.

We shall now provide a completely diﬀerent explanation for the need for bounded convex
curvature. The point is that it is often preferable for the surface quality of the resulting part
that the tool moves with a constant speed. Recall that the tool is only removing a thin layer
close to the pocket boundary. The width of this layer is typically a deliberately chosen small
fraction of the tool radius r. When moving at constant speed, a convex turn implies a higher
engagement of the tool in the sense of the amount of material removed per time unit. In
concave turns the engagement is only decreased. A too high engagement could break the
tool, and therefore we must bound the convex curvature of the tool path.

These and other issues related to the machining of corners have been extensively studied
in the technical literature on pocket machining. See for instance the papers [6, 7, 10, 13, 17].
There are several previous papers suggesting methods to get bounded convex curvature,
but none of them guarantees an optimal solution like ours. One idea for how to handle
convex corners is to replace each of them by a convex circular arc as deep in the corner as
possible. This is suggested and studied in the papers [6, 10, 13]. However, in all the papers
it is assumed that every corner is formed by two line segments which are suﬃciently long
(relative to the angle between them) that a tangential corner-rounding arc of suﬃcient size
can be placed inside the wedge they form. As can be seen in Figure 3, this is not always the
case, and rounding a toolpath can require more complicated modiﬁcations.

One heuristic used to obtain a non-trivial
subset of bounded convex curvature is the
double oﬀset method, where we oﬀset P inwards
by 1 and then oﬀset the result outwards by 1
and use that as Q. This can be computed in
O(n log n) time using Voronoi diagrams [16].
However, the method does not in general res-
ult in the maximum subset of bounded convex
curvature. See for instance Figure 5, where P has bounded convex curvature and all material
in S will be machined using ∂P as the toolpath. ∂S is the thick solid curve and ∂P is the
thin solid curve. The innermost dotted curves are the boundary of the inwards oﬀset of P by
1. The area of S between the thick dashed arcs will not be machined if the double oﬀset
method is used.

Figure 5

We establish the mathematical foundation of our work in Section 2 by introducing a new
generalization of the theorem of Pestov and Ionin. In Section 3 we describe an algorithm that
computes the maximum subset of bounded convex curvature of P. In Section 4 we describe
how to implement the algorithm so that it uses O(n) space and runs in O(n log n) time.

1.1 General notation and conventions
If M is a set of points in the plane, ∂M denotes the boundary of M and M denotes the
closure of M. Let γ be a simple curve and x and y two points on γ. Then γ[x, y] is the
portion of γ between x and y including x and y. Similarly, γ(x, y), γ[x, y), and γ(x, y] are
used in the obvious way when none or one of x, y is included. If γ is a closed curve, γ[x, y]
denotes the portion of γ from x to y in the counterclockwise direction. As before, round
parenthesis can be used to exclude one or both endpoints. If γ is not closed, the order of
x and y does not matter. We say that a point z ∈ γ is an inner point of γ if z is not an
endpoint of γ.

∂S∂PM. Abrahamsen & M. Thorup

5

Figure 6 Cases where Theorem 1 does and does not apply.

2 Mathematical foundation: The theorem of Pestov and Ionin
An oriented, simple curve γ is in the class L+ if γ turns to the left with curvature at most 1,
but γ is allowed to turn to the right arbitrarily sharply. There can be corners on γ where γ
is not diﬀerentiable, but in such corners γ has to turn to the right. These notions are deﬁned
rigorously below. Note that a portion of a closed curve with bounded convex curvature
traversed in counterclockwise direction is a curve in L+.

The correctness of the algorithm presented in this paper depends on the following

generalization of the Pestov-Ionin Theorem, see Figure 6.
(cid:73) Theorem 1. Consider an open disk D of arbitrary radius and a curve γ in L+ from a to
b such that γ ∩ D = {a, b}. Let R be the region bounded by ∂D[b, a] and γ. If R contains D,
then R contains an open unit disk U such that there exists a point c ∈ ∂U ∩ γ(a, b).

From the theorem, the following corollary easily follows.

(cid:73) Corollary 2. Every simple, closed curve γ with bounded convex curvature contains an open
unit-disk in its interior.

The original theorem by Pestov and Ionin [14] was similar to Corollary 2, but γ was
assumed to have bounded curvature in general. Howard and Treibergs [9] proved Corollary 2
for closed curves γ with bounded convex curvature for a more restricted class of curves. Ahn
et al. [1] proved a theorem similar to Theorem 1, but assuming that γ has bounded curvature
in general. Hence, the version of the theorem presented here generalizes all previous versions
known to the authors of the present paper. The reader who is not interested in the formal
deﬁnitions and the proof of the theorem can jump directly to Section 3.

2.1 Deﬁnition of the class L+ and proof of Theorem 1
Let γ : [0, L] → R2 be a simple, continuously diﬀerentiable curve parameterized by arc
length. We sometimes use γ as a short-hand notation for the set of points γ([0, L]) on
γ. We deﬁne the coordinate fuctions γx and γy of γ such that γ(s) = (γx(s), γy(s)). Let

n(s) = bγ0(s) = (−γ0

y(s), γ0

x(s)) be the unit normal of γ in s.

We deﬁne K+ to be the simple, continuously diﬀerentiable curves γ : [0, L] → R2
parameterized by arc length such that for every s ∈ [0, L) there exists a H > 0 such that
for all h ∈ [0, H] we have hγ0(s + h) − γ0(s), n(s)i ≤ h, where h·,·i is the dot-product. We
denote the class of all such curves as K+. Howard and Treibergs [9] use a similar deﬁnition.
We ﬁrst prove a theorem similar to Theorem 1, but for curves in K+ which is a subset of L+.
In Section 2.1.1, we prove the general result by showing how to handle curves with sharp
corners.

abDγUcRabDRγ6

Finding the Maximum Subset with Bounded Convex Curvature

(cid:73) Example 3. Consider a counterclockwise arc of radius r > 0, γ(s) = (r cos s
r). We
only need to consider s = 0 to check if γ is in K+. We get hγ0(h) − γ0(0), n(0)i = sin h
r .
Since limh→0
r) is a clockwise arc, we get hγ0(h) −
γ0(0), n(0)i = − sin h

h/r = 1, γ is in K+ if and only if r ≥ 1.

r , r sin s

On the other hand, if γ(s) = (r cos s

r ,−r sin s
r < h, so γ is in K+ for any r.

sin h
r

Whenever γ is continuously diﬀerentiable and parameterized by arc length, there exists a

continuous function ϑ : [0, L] → R such that

and

γ(s) = γ(0) +

cos ϑ(r) dr,

sin ϑ(r) dr

Z s

0

(cid:19)

.

γ0(s) = (cos ϑ(s), sin ϑ(s))

(cid:18)Z s

0

We denote ϑ as the tangent indicatrix associated to γ. When more curves are in play, we
denote the tangent indicatrix of γ as ϑγ.
If p is a point and S is a set of points, dist(p, S) = inf s∈S kp − sk. We usually deﬁne
distances to compact sets S so that there is a point s ∈ S for which dist(p, S) = kp − sk.
(cid:73) Lemma 4. Let s > 0 and f : [0, s] → R be a continuous function such that f(0) = 0 and
ϑ(s) = (1 + ε) · s for ε > 0. Then there exists an r ∈ [0, s) such that for all x ∈ [r, s] we have
f(x) ≥ f(r) + (1 + ε)(x − r).
Proof. Consider the function g(x) = f(x)− (1 + ε)· x. Choose a global minimum r of g. If g
is a non-negative function, we can choose r = 0. Therefore, r < s in any case. For x ∈ [r, s],
we now have f(x)− (1 + ε)· x ≥ f(r)− (1 + ε)· r and hence f(x) ≥ f(r) + (1 + ε)(x− r). (cid:74)
(cid:73) Lemma 5. Let γ : [0, L] → R2 be a continuously diﬀerentiable curve parameterized by arc
length and let ϑ : [0, L] → R be the associated tangent indicatrix. Then the following two
conditions are equivalent:
1. γ is in K+.
2. For all p ∈ [0, L) and for all q ∈ [p, L] we have ϑ(q) − ϑ(p) ≤ q − p.
Proof. Assume ﬁrst that condition 2 holds. Without loss of generality, we may assume
that ϑ(0) = 0 and prove that γ is in K+ by verifying the curvature condition for s = 0.
Choose H ∈ (0, π/2] such that ϑ([0, H]) ⊆ [−π/2, π/2]. For every h ∈ [0, H] we now have
hγ0(h)− γ0(0), n(0)i = sin ϑ(h) ≤ h, since sin x is increasing for x ∈ [−π/2, π/2] and ϑ(h) ≤ h
for all h. Therefore, the curvature condition is satisﬁed.

Assume now that condition 2 does not hold, i.e., that ϑ(q) − ϑ(p) > q − p for some q and
p, p ≤ q. Lemma 4 gives that there exists an r ∈ [p, q) such that for all x ∈ [r, q] we have
ϑ(x) ≥ ϑ(r) + (1 + ε)(x − r). Assume without loss of generality that r = 0 and ϑ(0) = 0 so
that ϑ(x) ≥ (1 + ε) · x for all x ∈ [0, q]. Then hγ0(x) − γ0(0), n(0)i = sin ϑ(x) > x when x is
(cid:74)
small enough and the curvature condition is not satisﬁed.

A wedge is the intersection between two closed half-planes deﬁned by two non-parallel
lines. The tip of the wedge is the intersection point of the two lines deﬁning the half-planes.
(cid:73) Lemma 6. Let γ : [0, L] → R2 be a curve in K+ and let D be an open unit disk with center
γ(s) + n(s) for some ﬁxed s ∈ [0, L]. Then γ is disjoint from D in a neighborhood around
γ(s), i.e., there exists a h > 0 such that γ(I) ∩ D = ∅ for I = [s − h, s + h] ∩ [0, L].

M. Abrahamsen & M. Thorup

7

Proof. We assume that s < L and only show the existance of h > 0 such that γ([s, s + h]) ∩
D = ∅. The other case follows from symmetry. Without loss of generality, assume that
γ(0) = (0,−1), γ0(0) = (1, 0), ϑ(0) = 0, and s = 0, so that D is the unit disk with center
(0, 0). Choose h ∈ (0, π/4] such that ϑ([0, h]) ⊆ [−π/4, π/4]. Lemma 5 gives that ϑ(x) ≤ x,
and since cos x − sin x is decreasing for x ∈ [−π/4, π/4], we get for x ∈ [0, h] that

cos x − sin x ≤ cos ϑ(x) − sin ϑ(x).

By integrating over x ∈ [0, s] for s ∈ [0, h], we get

Since sin x is increasing for x ∈ [−π/4, π/4], we also have

cos s + sin s ≤ γx(s) − γy(s).

Z s

0

γy(s) = γy(0) +

Z s

0

sin ϑ(x) dx ≤ −1 +

sin x dx = − cos s.

Therefore, for any s ∈ [0, h], γ(s) is in the area

As = {(x, y) | y ≤ x − cos s − sin s and y ≤ − cos s}.

As is the wedge of points between the two half-lines starting at (sin s,− cos s) with directions
(−1,−1) and (1, 0), respectively. Therefore, As and D are clearly disjoint when 0 ≤ s ≤ π/4,
(cid:74)
and hence γ([0, h]) is disjoint from D.

In the remaining part of this section, we consider an open disk D of arbitrary radius
δ and a curve γ : [0, L] → R2 in class K+ such that γ ∩ D = {γ(0), γ(L)}. The endpoints
of γ divide ∂D into two arcs ∂D[γ(0), γ(L)] and ∂D[γ(L), γ(0)]. One of them is interior
and one is exterior in the sense that the interior is contained in the region bounded by the
exterior and γ. Let R be the open region bounded by ∂D[γ(L), γ(0)] and γ. Assume that
∂D[γ(0), γ(L)] ⊂ R is interior. Observe that R is to the left of γ and that D ⊂ R.

For the following lemma, it is actually not necessary that γ ∈ K+.

(cid:73) Lemma 7. Let g be an inner point on γ and let U be the largest open disk contained in R
such that ∂U contains g. Then ∂R ∩ ∂U ⊂ γ.
Proof. Assume for contradiction that ∂U contains a point d ∈ ∂D(γ(L), γ(0)). This means
that the radius of U is at most δ and that ∂U is contained in D. Therefore, ∂U cannot pass
through the point g for g /∈ {γ(0), γ(L)}.
(cid:74)

Let γ be the closed curve obtained by adding the line segment from γ(L) to γ(0) to
γ. γ is simple since the added line segment is in D. Deﬁne the tangent of γ with angle
ϕ as the line Tϕ with normal vector m(ϕ) = (cos ϕ, sin ϕ) such that Tϕ contains γ(s0) for
s0 = argmaxs∈[0,L]hγ(s), m(ϕ)i. Tϕ is a tangent of the convex hull of γ which contains the
extreme points in direction m(ϕ).
Let H be the boundary of the convex hull of γ. Since γ is a simple, closed curve, H is as

well. The following Lemma is well-known.
(cid:73) Lemma 8. The cyclic order of the points on H is the same as on γ, that is, let a, b, c ∈ H∩γ
and assume that b ∈ H(a, c). Then b ∈ γ(a, c).
(cid:73) Lemma 9. If L < π, there is no angle ϕ and a, b ∈ [0, L] such that γ(a) ∈ Tϕ, γ(b) ∈ Tϕ+π,
and γ0(a) = −γ0(b). In particular, there does not exist an angle ϕ such that both Tϕ and Tϕ+π
contain an inner point of γ. Furthermore, there exists an angle θ such that γ ∩ Tθ = {γ(0)}
and γ ∩ Tθ+π = {γ(L)}.

8

Finding the Maximum Subset with Bounded Convex Curvature

Proof. Assume that there is an angle ϕ such that γ(a) ∈ Tϕ, γ(b) ∈ Tϕ+π, and γ0(a) = −γ0(b)

and assume without loss of generality that a < b. Let bm(x) = (− sin x, cos x). If 0 < a, we
must have γ0(a) = bm(ϕ) and hence γ0(b) = bm(ϕ + π). The same holds when b < L. If a = 0
and b = L, we must have γ0(0) ∈ bm([ϕ, ϕ + π)) since otherwise the interior of γ is on wrong
side of Tϕ in a neighborhood around γ(0). Similarly γ0(L) ∈ bm((ϕ, ϕ + π]). Thus, we must
have γ0(0) = bm(ϕ) and γ0(L) = bm(ϕ + π). We have seen that in any case, γ0(a) = bm(ϕ) and
γ0(b) = bm(ϕ + π).

If Tϕ contains an inner point γ(t), then γ0(t) = bm(ϕ). Therefore, Tϕ+π cannot contain
the smallest angle larger than α such that Tβ contains an inner point of γ or bm(β) = γ0(0).

Construct the curve ρ consisting of γ([a, b]), then a line segment ‘0 on Tϕ+π with direction
γ0(b) of length L, then a counterclockwise semi-circle C tangential to Tϕ and Tϕ+π, and then
a line segment ‘1 on Tϕ to γ(a). We now observe that ρ is simple. γ([a, b]) cannot cross
‘0 or ‘1 due to Lemma 8 and not C since ‘0 has length L. Furthermore, ρ is continuously
diﬀerentiable.
Let ϑρ and Lρ be the tangent indicatrix associated to and length of ρ, respectively.
Hopf’s Umlaufsatz gives that ϑρ(Lρ) − ϑρ(0) = 2π, see for instance [11, Thm. 11.1]. We
now have ϑρ(Lρ) − ϑρ(b − a) = π since ϑρ increases by π along C. Hence ϑγ(b) − ϑγ(a) =
ϑρ(b − a) − ϑρ(0) = 2π − (ϑρ(Lρ) − ϑρ(b − a)) = π. By Lemma 5, either b − a ≥ π or γ is
not in K+, which is a contradiction.
an inner point, i.e., γ ∩ Tϕ+π ⊂ {γ(0), γ(L)}. Hence, there exists an angle α such that
γ ∩ Tα ⊂ {γ(0), γ(L)}. Assume without loss of generality that γ(0) ∈ γ ∩ Tα. Now, let β be
Then γ(0) ∈ γ ∩ Tβ and γ ∩ Tβ+π = {γ(L)}. Thus, by choosing θ slightly smaller than β,
where θ depends on γ, we also have γ ∩ Tθ+π = {γ(L)} while γ ∩ Tθ = {γ(0)}.
(cid:74)
(cid:73) Lemma 10. If L < π, then ∂D[γ(0), γ(L)] spans an angle of less than π, δ > 1, and γ is
contained in U, where U is the open unit disk with a center in the closed half-plane to the
left of the directed line from γ(0) through γ(L) such that γ(0), γ(L) ∈ ∂U.
Proof. If the interior arc of ∂D spans an angle of π or more, it contains two antipodal
points deﬁning a diameter of D. Assume without loss of generality that the diameter is
horizontal. Then, the tangents T0 and Tπ contain points on γ with opposite vertical tangents,
contradicting Lemma 9.

To prove the two remaining statements, we show that we can reduce the problem to the
case where δ = 1. Note that in that case, D = U. Assume for contradiction that one of the
remaining statements does not hold. In each case, γ is not contained in U. We choose a
maximal interval [p, q] ⊆ [0, L] such that γ([p, q]) ∩ U = {γ(p), γ(q)}. Considering U instead
of D and restricting γ to the interval γ([p, q]), we now have a similar situation as described
in the Lemma where δ = 1 and γ([p, q]) is not contained in U. Hence, let us in the following
assume that δ = 1 and that γ([0, L]) is not a subset of D.
Denote I = ∂D[γ(0), γ(L)]. Let θ be an angle such that γ ∩ Tθ = {γ(0)} and γ ∩ Tθ+π =

{γ(L)}. The existence of θ is ensured by Lemma 9.

Now, imagine that we slide I along the two tangents Tθ and Tθ+π in direction bm(θ) until

the last point of contact with R. Let I0 be the translation of I to this point and γ(σ) the
last point of contact, which are well-deﬁned since both γ and I are compact. γ(σ) cannot be
any of the end points of I0 since the tangents only contain end points of γ. Hence, γ(σ) is
an inner point of I0, and I0 and γ share a tangent in γ(σ). It follows that I0 is an arc on the
boundary of the open unit disk A with center γ(σ) + n(σ). γ enters A on a point on the arc
from γ(σ) to the end of I0 since the end of I0 is not on γ. That contradicts Lemma 6. (cid:74)

M. Abrahamsen & M. Thorup

9

s ∈ [σ, L − σ], where σ = minnkγ(0)−γ(L)k

o.

(cid:73) Theorem 11. The region R contains an open unit disk U such that γ(s) ∈ ∂U for some

2

, π
2

Proof. Inspired by Ahn et al. [1], we proceed by induction on bL/πc. For the base-case,
assume that L < π.

We see that for any s ∈ (0, L), we can choose an open unit disk U ⊂ R such that
γ(s) ∈ ∂U. Namely, assume that for some p ∈ (0, L) there is no such unit disk. Consider
the largest open unit disk D0 ⊂ R where γ(p) ∈ ∂D0. From Lemma 7, we know that ∂D0
contains a point γ(q) ∈ γ([0, L]) \ {γ(p)}. Lemma 6 gives that γ is disjoint from D0 in a
neighborhood around p since the radius of D0 is less than 1. Therefore, we assume without
loss of generality that p < q and that γ([p, q]) ∩ D0 = {γ(p), γ(q)}. But then γ[p, q] is not in
K+ by Lemma 10.

For the induction step, assume that the theorem is true when dL/πe ≤ k − 1 and consider
a curve γ with length L such that dL/πe = k. We ﬁrst show the weaker statement that there
is an open unit disk U ⊂ R such that γ(s) ∈ ∂U for some s /∈ {0, L}. This will be needed
when showing that we can choose s ∈ [σ, L − σ]. Let p = L/2 and let D0 be the largest open
disk such that D0 ⊂ R and γ(p) ∈ ∂D0. If the radius δ0 of ∂D0 is at least 1, we are done.
Otherwise, due to Lemma 7, ∂D0 contains a point γ(q) ∈ γ([0, L]) \ {γ(p)}.

Lemma 6 gives that γ is disjoint from D0 in an interval to each side of p since δ0 < 1.
Therefore, we assume without loss of generality that p < q and that γ((p, q)) ∩ D0 = ∅. The
curve γ([p, q]) has length at most L/2, so the induction hypothesis gives that the open region
R0 bounded by ∂D0[γ(q), γ(p)] and γ([p, q]) contains an open unit disk U, such that ∂U
contains γ(s) from some s ∈ (p, q). We note that R0 ⊆ R and s /∈ {0, L}, as required.

To prove that we can choose s in the interval [σ, L − σ], let D1 be the largest open disk
contained in R such that ∂D1 contains γ(σ). Assume D1 has a radius smaller than 1, since
otherwise, we are done. By Lemma 7, there exists a point γ(p1) ∈ ∂D1 \ {γ(σ)}. By Lemma
10 we get that p1 > σ since otherwise γ([0, σ]) is not in K+. If p1 ≤ L − σ, we know from
the above discussion that there exists an open unit disk U contained in the region bounded
by ∂D1[γ(p1), γ(σ)] and γ([σ, p1]) such that ∂U contains a point γ(s) ∈ γ((σ, p1)). Hence
also s ∈ [σ, L − σ], as stated in the theorem.
If p1 > L − σ, let R1 be the region bounded by D1[γ(p1), γ(σ)] and γ([σ, p1]), and let D2
be the largest open disk contained in R1 such that ∂D2 contains γ(L − σ). Assume that
D2 has a radius of less than 1, since otherwise we are done. Lemma 7 gives that there is a
point γ(p2) ∈ ∂D2 ∩ γ([σ, p1]) \ {γ(L − σ)}. Lemma 10 gives that p2 < L − σ since otherwise
γ([p2, p1]) is not in K+. Hence, p2 ∈ [σ, L − σ), and from the above discussion we know that
there is an open unit disk U contained in the open region bounded by ∂D2[γ(L − σ), γ(p2)]
and γ([p2, L − σ]) such that ∂U contains a point γ(s) ∈ γ((p2, L − σ)). This proves the
(cid:74)
theorem.

2.1.1 A generalization to curves with sharp corners
Let γ : [0, L] → R2 be a curve and assume that the backward tangent γ0
is deﬁned for all s ∈ (0, L] and the forward tangent γ0
all s ∈ [0, L). Furthermore, assume that kγ0
+(x) 6= γ0

−(s) = limx→s− γ(s)−γ(x)
s−x
is deﬁned for
+(s)k is 1 where they are deﬁned.
−(s)k and kγ0
−(x). For technical reasons, we also deﬁne γ(0)
and γ(L) to be corners and say that γ(x) is a proper corner if x /∈ {0, L}. Let X be the set
of all corners. We do not assume X to be ﬁnite, but it follows from the Denjoy–Young–Saks
Theorem [4, p. 63, Thm. 4.2] that X is countable.

We say that γ(x) is a corner if γ0

+(s) = limx→s+ γ(s)−γ(x)

s−x

10

Finding the Maximum Subset with Bounded Convex Curvature

+(x)i > 0 it is a right-turn. If hcγ0−(x), γ0

−(s) and γ0

+(x) for every x ∈ [0, L) and n−(x) = cγ0−(x) for every x ∈ (0, L]. At

We deﬁne n+(x) =cγ0
a point γ(x) which is not a corner, the unit-normal n(x) = n+(x) = n−(x) is deﬁned as for
At a proper corner γ(x), γ either makes a turn to the left or to the right. If hcγ0−(x), γ0
diﬀerentiable curves. At other points, the unit-normal is undeﬁned.
0, it is a left-turn and if hcγ0−(x), γ0
+(x)i <
+(x)i = 0, we have
+(x). To decide to which side γ turns in this case, we consider for each n ∈ N a
−(x) = −γ0
γ0
circle Cn with center γ(x) and a radius so small that it intersects both γ([x − 1/n, x]) in a
point yn and γ([x, x + 1/n]) in a point zn. Since γ0
+(s) are well deﬁned, the size
of the angle of the arc on Cn from yn counterclockwise to zn converges to either 0 or 2π, in
which case γ makes a right- or a left-turn at γ(x), respectively.
For each corner γ(x) ∈ X where x < L, we deﬁne Lx = (x, inf x<y,γ(y)∈X y), where Lx is
possibly empty. Note that γ is diﬀerentiable on each interval Lx. We say that γ has bounded
left-curvature and write γ ∈ L+ if each proper corner is a right-turn and γ(Lx) ∈ K+ for
every interval Lx. Since X is countable, γ0 is deﬁned and continuous almost everywhere.
0 kγ0(y)kdy = ‘, so it makes sense to say
that γ is parameterized by arc length. It also holds that the shortest curve in L+ between
two points follows the line segment between the points, for instance, the proof outlined in [3,
Exercise 1.2] generalizes to our case. The class K+ is clearly a proper subset of L+.

Therefore kγ0(y)k = 1 almost everywhere. HenceR ‘

We are now ready to prove Theorem 1 as stated in Section 1.

Proof of Theorem 1. We prove that Theorem 11 also holds when γ ∈ L+ instead of γ ∈ K+.
We construct a sequence of curves γ1, γ2, . . . in K+ with lengths L1, L2, . . ., such that
γn(0) = γ(0) and γn(Ln) = γ(L) for all n. The sequence converges to γ in such a way that
Theorem 11 applied to each curve γn implies the existence of a unit disk in R as wanted.
Informally, we may describe γn as the result of rounding the proper corners of γ with circular
arcs of radii less than 1/2n.
Each curve γn is itself the limit of a sequence γn,0, γn,1, . . . of curves in L+, such that
γn,0 = γ and γn,m+1 is the result of rounding at least one corner of γn,m. The endpoints of
γn,m are γ(0) and γ(L).
We deﬁne γn,0 = γ and C0 = ∅. Cm consists of the circular arcs on γn,m we have added
to round the corners of γ. Let x1, x2, . . . be an enumeration of the parameters such that
γ(x1), γ(x2), . . . are all the proper corners of γ. Assume that we have already deﬁned the
curve γn,m. We now show how γn,m+1 is deﬁned.

Choose the smallest k such that γ(xk) is also a corner of γn,m and deﬁne x such that
γ(xk) = γn,m(x). Let W we a wedge with tip γn,m(x) such that γn,m is contained in W in
an interval before and after x. Such a wedge exists since the forward and backward tangents
of γn,m are well-deﬁned in x. Let w > 0 be a number so small that the intersection between
γn,m and any open disk with center γn,m(x) and radius at most w is an interval of γn,m
contained in W. Then, let

r = min {1/n, w, dist(γn,m(x), Cm),kγn,m(x) − γ(0)k,kγn,m(x) − γ(L)k} .

We assume inductively that dist(γn,m(x), Cm) > 0 and hence r > 0. Let A be the open
disk with center x and radius r, and let γn,m([a, b]) be the interval A ∩ γn,m, where clearly
x ∈ [a, b]. The interval γn,m([a, x]) divides W ∩ A into two pieces, and since γn,m makes a
right-turn at γn,m(x), γn,m([x, b]) is contained in the piece to the right of γn,m([a, x]).
Let B be the open disk with center γn,m(x) and radius r/2 and let ∂B0 be the arc ∂B ∩ W.
The intersection points between ∂B0 and γn,m divide ∂B0 into smaller arcs. Consider the last
intersection point γn,m(c) between γn,m([a, x]) and ∂B0 following ∂B0 in counterclockwise

M. Abrahamsen & M. Thorup

11

direction. The arc ∂B00 on ∂B0 beginning at γn,m(c) must end at a point γn,m(d) on
γn,m([x, b]), since otherwise, γn,m cannot leave B after γn,m(x).
For each point p ∈ ∂B00, we consider the largest open disk Cp with center p disjoint
from γn,m. In the following, we show that for each p ∈ ∂B00, we have Cp ⊂ A and that
γn,m(x) /∈ ∂Cp: Let D be the largest open disk with center p contained in W and let S be the
region bounded by γn,m([a, b]) and the arc on ∂A from γn,m(a) counterclockwise to γn,m(b).
Then Cp ⊂ S ⊂ W, so Cp ⊂ D. But ∂D does not contain γn,m(x) since γn,m(x) is the tip of
the wedge W. Hence the radius of Cp is less than r/2 for all p ∈ ∂B00.
When p is close to γn,m(c), ∂Cp contains a point on γn,m([a, x)) while when p is close to
γn,m(d), ∂Cp contains a point on γ((x, b]). Therefore, there must be a point P ∈ ∂B00 such
that CP contains a point γn,m(e) ∈ γn,m([a, x)) and a point on γn,m(f) ∈ γn,m((x, b]).
The interior of S, and hence CP , is to the right of γn,m([a, b]) since γn,m(x) is a right-turn.
Therefore, since all corners on γn,m are right-turns, γn,m(e) and γn,m(f) cannot be corners,
so γn,m is diﬀerentiable in e and f, and ∂CP and γn,m have the same tangents there. We
now deﬁne γn,m+1 as the curve identical to γn,m, but where γn,m+1 follows the arc ∂C0
P on
∂CP from γn,m(e) clockwise to γn,m(f) instead of the interval γn,m([e, f]). We note that
∂C0
P . We also see that
dist(γn,m+1(y), Cm+1) > 0 for every remaining corner γn,m+1(y) on γn,m+1.

P is disjoint from all the arcs in Cm and deﬁne Cm+1 = Cm ∪ ∂C0

m=0 γn,m, i.e., γn consists of all the points on γ which are never
m=1 Cm. It now follows from the construction that
γn ∈ K+, since each point on γn is either a point on a clockwise circular arc or a point on γ
which is not a corner.
We note that the Hausdorﬀ distance between γ and γn converges to 0, i.e., that the
maximum distance from a point on γ to the closest point on γn converges to 0 as n → ∞
and likewise for the maximum distance from a point on γn to the closest point on γ.
By Theorem 11, there exists a unit disk Un in the region Rn bounded by D and γn for
each n, such that Un touches γn in an inner point γn(sn), where sn ∈ [σ, Ln − σ], where

o. Hence, there exists an accumulation point c among the sequence

σ = minnkγ(0)−γ(L)k

We now deﬁne γn asT∞
substituted by an arc and all the arcsS∞

2

, π
2

of the centers of the disks U1, U2, . . .. Let U be the open unit disk with center c. Since the
Hausdorﬀ distance between γ and γn converges to 0, U is contained in R. It remains to be
proven that γ(s) ∈ ∂U for some s ∈ [σ, L − σ].

We call a point on γn a ﬁxed point if the point also exists on γ. We note that the distance
along γn from an arbitrary point on γn to the closest ﬁxed point in each direction is less
than π/n, since the point which are not ﬁxed appear on circular arcs of lengths less than
π/n. Furthermore, we see that every arc C0
P is not longer than the interval γn,m([e, f]) that
it substitutes: It is well-known that γ([e, f]) is at least as long as any convex polygonal chain
from e to f contained in the area bounded by γ[(e, f)] and the line segment from γ(e) to
γ(f) [15]. The arc C0
P is the limit of a converging sequence of such polygonal chains and is
hence also not longer than γn,m([e, f]). Therefore, for each ﬁxed point γn(v) = γ(w), we
have v < w and Ln − v < L − w.

Let (an) be a subsequence of the positive integers (n) such that the center of Uan converges
to c. The sequence (γan(san)) has an accumulation point γ(s). Let (bn) be a subsequence of
(an) such that γbn(sbn) converges to γ(s). The sequence (sbn) has an accumulation point
χ. Let (cn) be a subsequence of (bn) such that scn converges to χ. We choose a sequence
(χn) such that (i) χn ≤ scn, (ii) χn converges to χ, and (iii) (γcn(χn)) is a sequence of ﬁxed
points. As mentioned above, we have χn ≤ s for each n since γ(χn) is a ﬁxed point. We thus
have

σ ≤ lim

n→∞ scn = χ = lim

n→∞ χn ≤ s.

12

Finding the Maximum Subset with Bounded Convex Curvature

Similarly, the sequence (Ln − sbn) has an accumulation point ψ, and we choose a
subsequence (dn) of (bn) such that Ln − sdn converges to ψ and a sequence (ψn) such that
(i) ψn ≥ sdn, (ii) Ln − ψn converges to ψ, and (iii) (γdn(ψn)) is a sequence of ﬁxed points.
We then have

σ ≤ lim

n→∞ Ln − sdn = ψ = lim

n→∞ Ln − ψn ≤ L − s.

(cid:74)

2.1.2 Closed curves with bounded convex curvature
We say that a closed, simple curve γ has bounded convex curvature if every closed, connected,
proper subset of γ can be parameterized as a curve ˜γ in L+ following the counterclockwise
direction of γ.

Proof of Corollary 2. Consider a maximal open disk D in the interior of γ in the sense that
no other open disk in the interior of γ contains D. Assume that D has radius less than 1.
Clearly, ∂D contains at least two points a, b ∈ γ. Since D has radius less than 1, γ must be
diﬀerent from ∂D. Therefore, we can choose a and b such that γ[a, b] ∩ D = {a, b}. Now,
Theorem 1 implies that the curve deﬁned by ∂D[b, a] and γ[a, b] contains an open unit-disk
(cid:74)
in its interior.

Algorithm

3
3.1 Preliminaries
We assume that a simply-connected region P1 in the plane is given such that the boundary
∂P1 consists of a ﬁnite number of line segments and circular arcs of arbitrary radii. For ease
of presentation, we assume that ∂P1 is a simple curvilinear polygon, but our algorithm works
as long as ∂P1 is weakly simple. We can therefore without loss of generality assume that P1 is
an open set. We set P ← P1 and our algorithm keeps removing parts of P while maintaining
the invariant that P contains every subset of P1 of bounded convex curvature. In the end, P
itself has bounded convex curvature and it follows that P is the unique maximum subset of
P1 of bounded convex curvature.

The region P is always a collection of disjoint, open, simply-connected sets each of which
is bounded by a simple curvilinear polygon. P is represented by its boundary ∂P, which is
a collection of disjoint, closed, simple curves where no curve is contained in the interior of
another. The input P1 is deﬁned by one such curve. The open region enclosed by each curve
is one connected component of P. ∂P is represented as a set of points known as the vertices
of ∂P and a set of line segments and circular arcs known as the arcs of ∂P. We think of
line segments as circular arcs with inﬁnite radius and therefore in most cases use the word
arcs for both circular arcs and line segments. Depending on the context, we may consider a
vertex as a point or a set containing a single point. An object of ∂P is a vertex or an arc.
We use the convention that an arc includes its endpoints. Every two arcs of ∂P are disjoint
except possibly at the endpoints, and for each vertex there are two arcs having an endpoint
at that vertex. This way, the arcs form the closed curves bounding P. We always use n to
denote the number of vertices of the input ∂P1.

The boundary of each connected component of P is oriented in counterclockwise direction
and we say that a point moving on ∂P is moving forward (resp. backward) if it is following
(resp. not following) the orientation of the boundary. Similarly, we orient every arc following
the orientation of the boundary of the component containing it. We denote the endpoints

M. Abrahamsen & M. Thorup

13

of an arc A as s(A) and t(A), so that a point moving forward along A moves from s(A) to
t(A). An arc which turns to the left when traversed in forward direction is called a convex
arc. A concave arc is deﬁned analogously. Line segments are regarded as both concave and
convex arcs at the same time. A vertex v is convex if the interior angle of ∂P at v is strictly
less than π. If the angle is strictly more than π, v is concave.

Let A be an arc of ∂P and a ∈ A a point on A. Then nA(a) is the unit-normal of A at a
which points to the left relative to the orientation of A. We say that two arcs A and B are
tangential if t(A) = s(B) and nA(t(A)) = nB(s(B)). Note that A and B are tangential if
and only if the vertex t(A) is neither convex nor concave.

3.2 High-level description of the algorithm

A high-level description of the algorithm is given as Algorithm 1. The basic format is to
maintain a stack Σ of pointers to objects of ∂P causing the convex curvature condition on
∂P to be violated. An object σ ∈ Σ can be a convex vertex, a convex arc of radius less
than 1, or a special cut arc of radius 1, where one or both of the endpoints might be convex
vertices. In each iteration of the loop at line 3, we test if the object σ on the top of Σ is
still on ∂P (it might have been removed in another iteration) and if so, we eliminate it by
removing from P a subset V ⊆ P. The object σ appears on the boundary ∂V and not on the
boundary of P \ V. By performing a cut or simply a cut, we mean the process of removing V
from P. It is important to choose V such that V ∩ Q = ∅ for every set Q ⊂ P1 of bounded
convex curvature. Theorem 1 will be used to prove this.

It is possible that a cut splits P into more components. The algorithm will then keep
working on each component separately. A cut can introduce new unit-radius cut arcs on ∂P,
the endpoints of which can be convex vertices. Therefore, these new cut arcs are added to Σ
so that the new convex vertices are eventually removed. The algorithm terminates when Σ is
empty, which means that P has bounded convex curvature.

Algorithm 1: SubsetOfBoundedConvexCurvature(P)
1 Add all convex arcs of ∂P with a radius less than 1 to Σ.
2 Add all convex vertices of ∂P to Σ.
3 while Σ 6= ∅
4
5
6
7
8 return P

Let σ be the topmost element on Σ and remove σ from Σ.
if σ ⊂ ∂P and σ is not a perfect cut arc

Cut away V from P and let Cj, j = 1, . . . , t, be the new cut arcs after the cut.
Add each new cut arc Cj to Σ.

Let Pi be the set P in the beginning of iteration i = 1, 2, . . . of the loop at line 3 in
Algorithm 1. We shall prove that the algorithm terminates after k = O(n) iterations. Hence
we have

P1 ⊇ P2 ⊇ ··· ⊇ Pk.

The challenge is to deﬁne V in each iteration so that k = O(n), P ← P \ V can be computed
eﬃciently, and V ∩ Q = ∅ for every set Q ⊂ P1 of bounded convex curvature.

14

Finding the Maximum Subset with Bounded Convex Curvature

∂K

σ
s(C)

Figure 7

t(C)

3.3 Specifying a cut using an arc C
Let σ be an object from Σ that is to be eliminated in a certain iteration of Algorithm 1, and
let K be the connected component of P such that σ ⊂ ∂K. If we conclude that K does not
contain any non-empty set of bounded convex curvature, we set V = K, so that all of the
component K is removed from P. Otherwise, we specify V using a circular arc C of unit
radius. See Figure 7, where C is grey and V is the area enclosed by the thick closed curve.
Assume for now that we have deﬁned C. Let s(C) and t(C) be the points where C starts
and ends in counterclockwise direction, respectively. The endpoints are included in C and
are points on ∂K. They will be deﬁned so that σ ⊆ ∂K[s(C), t(C)]. It will follow from the
deﬁnition of C that there will be at most two vertices on ∂K(s(C), t(C)). For eﬃciency, the
algorithm may choose an arc C that intersects ∂K(s(C), t(C)).

7. Deﬁne V as the union Ss

The arc C divides K into open regions R1, . . . , Rr, which are the
connected components of K \ C. Assume without loss of generality
that among all these regions, exactly the regions R1, . . . , Rs, s ≤ r,
contain a part of ∂K(s(C), t(C)) on their boundary. We note that
s = 1 if C does not intersect ∂K(s(C), t(C)), as is the case in Figure
i=1 K ∩ Ri. Then K \ V is open and
hence so is our new P ← P \V. The arc C will be carefully chosen so
that V ∩ Q = ∅ for every set Q ⊂ P1 of bounded convex curvature.
(cid:73) Lemma 12. V is connected and for each i = 1, 2, . . ., the boundary
∂K of each connected component K of Pi is a simple curvilinear
polygon.
Proof. Let two points p, q ∈ V be given. We can connect p to q by a curve contained in V
by walking along ∂K(s(C), t(C)). Hence, V is connected.
Assume that every component of Pi has a boundary which is a simple curve and assume
that the same is not true for the connected component K of Pi+1. Let C be the arc specifying
the cut that be made in Pi to obtain Pi+1. There must be an arc C[a, b] on ∂K and a point
x ∈ C(a, b) such that x ∈ ∂K(b, a). But that implies that K is not connected, which is a
(cid:74)
contradiction.
Consider the case where we remove a proper subset V from a connected component K of
Pi to obtain Pi+1. One or more arcs C1, . . . ,Ct of ∂Pi+1 are subsets of C and not arcs of ∂Pi.
We denote the arcs C1, . . . ,Ct as new cut arcs of ∂Pi+1. An arc of ∂Pi+1 which is a subset of
a new cut arc of ∂Pj, j ≤ i, is not a new cut arc of ∂Pi+1. An arc of ∂Pi+1 is a cut arc if it
is the subset of a new cut arc of ∂Pj for some j ≤ i + 1. We say that a cut arc C of ∂P is
perfect if none of the endpoints of C are convex vertices.
(cid:73) Lemma 13. Every cut arc of ∂P is convex.
Proof. We show that if the statement is true for Pi, then it is also true for Pi+1. Let C be
the arc specifying a cut to be performed in Pi. Assume that V is a subset of the connected
component K in Pi. We proceed by induction on the number r of connected components
R1, . . . , Rr of K \ C. If r = 1, the statement is trivial, since V = R1 = K.
Consider the case r = 2. Assume that V = K∩R1 is removed from K and that R2 remains,
since otherwise there is nothing to show. R2 is bounded by some interval ∂K[a, b] and a
subset C0 of C with endpoints a and b. The points must appear in the order s(C), t(C), a, b
along ∂K, since otherwise R2 is removed. Assume for contradiction that C0 is a clockwise arc
on ∂R2. That means that the points appear in the order s(C), a, b, t(C) along C. Furthermore,

M. Abrahamsen & M. Thorup

15

since r = 1, C[s(C), a] and C[b, t(C)] are disjoint from K, which means that ∂K[b, a] does not
cross C from one side to the other. There exists a point a0 ∈ ∂K[t(C), a] which is not on C
since otherwise b ∈ ∂K[t(C), a], contradicting that ∂K is simple. Let s0(C) be the ﬁrst point
on C[s(C), a] we meet when traveling along ∂K from b. Let b0 be the last point on C[a, t(C)]
we meet when traveling along ∂K from b to s0(C). Clearly, b0 6= a and b0 6= t(C) since ∂K is
simple. By construction, ∂K[b0, s0(C)] and C[s0(C), b0] form a simple closed curve J. Orient J
so that C[s0(C), b0] is a counterclockwise arc when traversing J in forward direction. When
walking from a to a0 along ∂P[a0, a], we leave J to its left side. When walking from b0 to
t(C), we leave J to its right side. Hence J separates t(C) from a0. Therefore, ∂K[t(C), a0]
crosses J, which is a contradiction.
Assume now r ≥ 3 and that the statement is true for smaller values of r. Since P is
simply connected, the regions R1, . . . , Rr induce a tree T such that two regions Rj and Rk
are connected if there is an arc C(x, y) ⊂ ∂Rj ∩ ∂Rk for x 6= y. Let Rj and Rk be two
leafs in T. Let Kj = K \ Rj and Kk = K \ Rk. Kj and Kk are both subdivided into
k be the result of performing the cut speciﬁed by C
r − 1 regions by C, and let K0
in Kj and Kk, respectively. Note that Rj and Rk are not neighbors in T since r ≥ 3 and
hence both of the unique neighbors in T of Rj and Rk are also regions in both Kj \ C and
Kk \ C. Therefore, every new cut arc in Pi+1 is a new cut arc in either K0
k. Hence,
(cid:74)
the induction hypothesis gives that every cut arc of ∂Pi+1 is convex.

j and K0

j or K0

A0

s(A0)
x2

3.4 The bisector curve ξ
A speciﬁc type of bisector curve, illustrated in Figure 8, turns out to
be useful when describing how to deﬁne the arc C specifying a cut and
when proving the correctness of our algorithm. The curve is somewhat
related to the medial axis of ∂P. Before introducing the curve, we
need the concept of an osculating circle.
Let A be an arc of ∂P. A circle C osculates A at a ∈ A if the
interior of C is disjoint from A, C and A have the point a in common,
and the center x of C is a point a + nA(a) · c where c ≥ 0. Recall that
nA(a) is the unit-normal to A in a pointing to the left. If c = 0, C
is a single point. Note that a is the point on A closest to x. A special
case happens when A is an arc on C, in which case A is a convex arc
and C osculates A at every point on A.
(cid:73) Observation 14. Let A be an arc of ∂P and x an arbitrary point. There exists at most
one circle C with center x that osculates A. If such a circle C exists, the radius of C is the
distance to the closest point a on A from x and C osculates A in a. If A is a convex arc,
then the radius of C is at most the radius of A.

Figure 8

Π0(x)

Cx

x1

x

ξ

t(A1)
A1
Π1(x)

x0

We denote the bisector curve as ξ = ξ(A0, A1, x0). A0 and A1 are arcs of ∂P and x0 is
the point where ξ begins. ξ consists of at most three intervals to be deﬁned below, each
of which is part of a conic section. Depending on x0, ξ might start in the second or third
interval. From the context where ξ is used, it will be clear in which interval ξ starts.

Often, but not always, A0 and A1 are neighboring arcs and x0 is their common endpoint,
i.e., x0 = t(A0) = s(A1). In this case, x0 will be a convex vertex of ∂P (as in Figure 8) or
A0 and A1 are tangential. If A0 and A1 are tangential, one of A0 and A1 will be a cut arc.
For each point x ∈ ξ, we are going to deﬁne a circle Cx and points Π0(x) ∈ A0 ∩ Cx
and Π1(x) ∈ A1 ∩ Cx. The circle Cx has its center at x. The functions Π0 and Π1 are the
projections associated to ξ and Cx is the clearance circle associated to ξ at x.

16

Finding the Maximum Subset with Bounded Convex Curvature

Interval (1) consists of points x such that Cx osculates both A0 and A1 at points Π0(x)
and Π1(x), respectively. Interval (2) consists of points x where s(A0) = Π0(x) and Cx
osculates A1 at a point Π1(x) or t(A1) = Π1(x) and Cx osculates A0 at a point Π0(x).
Interval (3) consists of points x such that s(A0) = Π0(x) and t(A1) = Π1(x).

Assume that x0 is contained in interval (1). In the following, we think of x as a point

that traverses ξ from x0.

Interval (1): ξ consists of the points x such that there is a circle Cx with center x that
osculates A0 and A1 at points Π0(x) and Π1(x), respectively. Hence, this interval consists
of points x on ξ such that the distance to the closest points on A0 and A1 is the same. In
the general case, as x traverses ξ, Π0(x) moves continuously backward and Π1(x) moves
continuously forward. We eventually reach a point x1 where Cx1 contains s(A0) or t(A1), and
ξ continues with the interval deﬁned in (2). A special case occurs if t(A0) = s(A1) and A0
and A1 are tangential. Then x moves in the direction nA0(t(A0)) until x is the center x1 of
A0 or A1. This happens since one of the arcs is a cut arc. Until x reaches x1, the projections
are constant, Π0(x) = Π1(x) = t(A0). If x1 is the center of A0, we deﬁne Π0(x1) = s(A0).
Similarly, if x1 is the center of A1, we deﬁne Π1(x1) = t(A1).

Interval (2): ξ has reached a point x1 such that Cx1 contains s(A0) or t(A1).

If
s(A0) = t(A1), ξ stops here. Otherwise, if Cx1 contains both s(A0) and t(A1), interval (2) is
degenerate, x2 = x1, and ξ continues with the interval described in (3). Otherwise, assume
without loss of generality that Cx contains s(A0) and osculates A1. From here, ξ consists
of points x such that there is a circle Cx with center x that contains s(A0) = Π0(x) and
osculates A1 at a point Π1(x). When x moves along ξ, Π1(x) moves continuously forward.
At some point, we reach a point x2 where Cx2 contains s(A0) and t(A1), and ξ continues
with the interval deﬁned in (3).

Interval (3): At the last point x2 of interval (2), Cx2 contains both of the points s(A0)
and t(A1). Now, ξ consists of the points x such that there is a circle Cx with center x
containing both Π0(x) = s(A0) and Π1(x) = t(A1), i.e., ξ follows a half-line. We deﬁne the
direction of the half-line to be the counterclockwise rotation by an angle of π/2 of the vector
t(A1) − s(A0).

When deﬁning the arc C that speciﬁes the cut we want to perform, we are often
searching for the ﬁrst point x3 on ξ where Cx3 has radius 1. We shall then deﬁne
C = Cx3[Π0(x3), Π1(x3)]. Yap [16] showed that each of the intervals (1)–(3) is a part
of a conic section. Using elementary geometry we can decide for each interval in O(1) time if
it contains a point x3 such that Cx3 has radius 1.

Note that when x0 = t(A0) = s(A1)
and x0 is a convex vertex of ∂P, then a
portion of ξ beginning at x0 is a subset
of the medial axis of ∂P. However, x3
(as deﬁned above) need not be on the
medial axis and can even be outside
P, also when C = Cx3[Π0(x3), Π1(x3)]
becomes a perfect cut arc. See Figure 9 for an example.

Figure 9

(cid:73) Observation 15. If Ak is a convex arc, k = 0, 1, and x0 = t(A0) = s(A1), then for each
a ∈ Ak, there exists x ∈ ξ such that Cx osculates Ak at a, and by Observation 14, the radius
of Cx is at most the radius of Ak.

Π1(x3)x0Π0(x3)x3Cx3ξM. Abrahamsen & M. Thorup

17

Π0(x3)

x3
C

Π1(x3)

3.5 Deﬁning the arc C specifying a cut
The objects in Σ are either (a) convex arcs of ∂P1 with a radius less than 1, (b) convex
vertices of ∂P1, or (c) cut arcs. Below, we describe how to deﬁne C when the object σ picked
by Algorithm 1 is of each of these types.
Case (a): σ is a convex arc with radius less than 1. Consider the curve ξ = ξ(σ, σ, x0),
where x0 is the center of σ, which begins in interval (3). Choose the ﬁrst point x3 ∈ ξ such
that the associated clearance circle Cx3 has radius 1 and deﬁne C = Cx3[Π0(x3), Π1(x3)] =
Cx3[s(σ), t(σ)]. Said in another way, we deﬁne C to be the unit-radius arc counterclockwise
from s(σ) to t(σ) which spans an angle of less than π.

A0

A1

Case (b): σ is a convex vertex of ∂P. Let A0 be the arc of ∂P before σ and A1 the
arc after σ. Consider the curve ξ = ξ(A0, A1, x0), where x0 = σ. Find the ﬁrst point
x3 ∈ ξ where Cx3 has a radius of 1. If such a point does not exist, we are in the case where
s(A0) = t(A1), and we let V be the complete component K of P where σ appears on the
boundary (in this case, the boundary of K only has two arcs, A0 and A1). Otherwise, we
deﬁne C = Cx3[Π0(x3), Π1(x3)].
ξ

Case (c): σ is a cut arc B. We assume that one of the endpoints of
B is a convex vertex, since otherwise B is perfect and hence ignored by
the algorithm. If one of the endpoints, say s(B), is a concave vertex, then
t(B) is a convex vertex, and we do as if σ = t(B) as described in case
(b). We now assume that none of the endpoints of B are concave vertices.
See Figure 10. Let A0 and A1 be the arcs preceding and succeeding B
on ∂P, respectively. Let ξ0 = ξ(A0, B, s(B)) and ξ1 = ξ(B, A1, t(B)). For
each b ∈ B, follow the ray starting at b with direction nB(b) and deﬁne
dk(b) to be the distance from b to the ﬁrst intersection point with ξk,
k = 0, 1. Since d0(s(B)) = 0 < d1(s(B)) and d1(t(B)) = 0 < d0(t(B)),
the continuity of ξk implies there must be an intersection point x0 between ξ0 and ξ1. By
Observation 15, we know that the distance from x0 to B is at most 1. We now consider the
curve ξ = ξ(A0, A1, x0) with associated projections Π0, Π1, and clearance circle Cx. The
clearance circle Cx0 of ξ at x0 is the same as for ξ0 and ξ1. If Cx0 osculates A0 and A1, ξ
begins in interval (1). If Cx0 osculates one of A0, A1 and contains an endpoint of the other,
ξ begins in interval (2). Otherwise, Cx0 contains s(A0) and t(A1), and ξ begins in interval
(3). We ﬁnd the ﬁrst point x3 ∈ ξ where Cx3 has radius 1. If such a point does not exist, we
are in the case where s(A0) = t(A1), and we let V be the complete component K of P where
σ appears on the boundary. Otherwise, we deﬁne C = Cx3[Π0(x3), Π1(x3)].

One may object to the algorithm that since a connected component of P can split into
more components by a cut, the arcs on Σ are not necessarily well-deﬁned, since subsets of the
arc originally added to Σ can be on the boundary of many diﬀerent connected components of
P. However, since the arcs are convex arcs of radius at most 1, the following lemma shows
that it is not a problem. The proof will be given in Section 3.7.
(cid:73) Lemma 16. Let A be an arc of ∂P1 which is a convex arc of any radius or a concave arc
with radius at least 1. For any i ≥ 1, there exists at most one connected component K of Pi
such that (a subset of) A is an arc of ∂K.

Figure 10

ξ0

ξ1

x0
B

3.6 Proof of correctness of Algorithm 1
In this section, we prove that the set V to be cut away from P is disjoint from every subset
of P1 of bounded convex curvature. The proof is by contradiction. The idea is that if there
is a subset of P1 of bounded convex curvature that overlaps V, then Theorem 1 gives the

18

Finding the Maximum Subset with Bounded Convex Curvature

existence of a unit disk in V which cannot be there. In general, V can have a complicated
shape and is not easy directly to reason about. Therefore, we describe a superset of V
consisting of simplices, which are suﬃciently simple that the argument goes through.

A simplex S is a closed region and has a boundary ∂S which is a closed, simple curve
consisting of two, three, or four circular arcs. One of the arcs D on the boundary is the
door. The door D has a radius of at most 1 and is clockwise when ∂S is traversed in
counterclockwise order. We denote the following as the simplex condition, which every
simplex is required to satisfy: Let U be the closed disk such that ∂U contains the door D.
Then U ∪ S does not contain any unit-disk unless U has radius 1, in which case U is the
only unit-disk contained in U ∪ S.

Consider a curve ξ = (A0, A1, x0) with associated projections Π0, Π1 and associated
clearance circles Cx. For x1, x2 ∈ ξ, where x1 appear before x2 on ξ, the simplex candidate as-
sociated to the pair (x1, x2) is the curve consisting of A0[Π0(x2), Π0(x1)], Cx1[Π0(x1), Π1(x1)],
A1[Π1(x1), Π1(x2)], and Cx2[Π0(x2), Π1(x2)]. The following lemma explains the connection
between simplices and simplex candidates.
(cid:73) Lemma 17. Let x1 and x2 belong to the same interval of ξ such that x1 appear before
x2. If there is no x ∈ ξ[x1, x2) for which the clearance circle Cx has a radius of 1 or more,
then the simplex candidate associated to (x1, x2) is the boundary of a simplex S with door
Cx2[Π0(x2), Π1(x2)].
Proof. We prove the lemma when both x1 and x2 are in interval (1). The other cases
follow from similar arguments. Since x1 and x2 are in interval (1), both of the circles
Cx1 and Cx2 osculate A0 and A1. Assume that we are not in the case where A0 and A1
are tangential, since in that case, the simplex candidate is the boundary of a degenerate
simplex and the statement trivial.
In the general case, Cx1 and Cx2 have exactly one
point in common with both A0 and A1. Therefore, to check that the simplex candidate
is simple, we only need to see that Cx1[Π0(x1), Π1(x1)] and Cx2[Π0(x2), Π1(x2)] do not
intersect. If they did, Cx2[Π0(x2), Π1(x2)] would cross Cx1[Π0(x1), Π1(x1) at some point
a ∈ Cx1[Π0(x1), Π1(x1). Since Π1(x2) is after Π1(x1) on ∂P, Cx2[Π0(x2), Π1(x2)] would have
to cross Cx1[Π0(x1), Π1(x1) again at some point b. But then Cx2[b, a] is contained in the
interior of Cx1 and can hence not reach a point Π1(x2) ∈ A1.

Let S be the closed region bounded by the simplex candidate. We need to check that S
satisﬁes the simplex condition. Let U be the open disk inside Cx2. Assume for contradiction
that there is another open unit-disk D in S ∪ U. We now move D such that the distance from
the center of D to x2 increases until D reaches the boundary of S ∪ U. That must happen at
an inner point of A0[Π0(x2), Π0(x1)] (resp. A1[Π1(x1), Π1(x2)]) since we move D away from
U and Cx1 has radius less than 1. We then “roll” D forward on A0 (resp. backward on A1)
until it would not be contained in S ∪ U if rolled any further. At this time, it must osculate
both A0 and A1 at points in A0(Π0(x2), Π0(x1)) and A1(Π1(x1), Π1(x2)), respectively. But
then the center of D is in ξ(x1, x2) and D has radius 1, contradicting the assumption. (cid:74)

We say that the simplex S from Lemma 17 is the simplex associated to the pair (x1, x2).
In the following we specify a set S of simplices using simplex candidates. The set S will be
used to prove the optimality of the cut performed by our algorithm when some object σ is
handled.

If σ is a convex arc of radius less than 1, S consists of one simplex S, which is the simplex
associated to the pair (x0, x3) as deﬁned in point (a) in Section 3.5. Put in another way, S
is bounded by the two arcs σ and C, the latter being the door.

M. Abrahamsen & M. Thorup

19

0 , Π(k)

If σ is a vertex, consider the curve ξ deﬁned in point (b) in Section 3.5. We make one
simplex for each of the intervals (1)–(3) of ξ. We only describe the situation where the
center x3 of C is in interval (3), since this is the most general case. Let x1 and x2 be the
points on ξ at the end of interval (1) and (2), respectively. We now make one simplex
associated to each of the pairs (x0, x1), (x1, x2), and (x2, x3).

1 (x0) = Π(1)

If σ is a cut arc B, let A0, A1, ξ0, ξ1, ξ, x0, x3, Cx, Π0, and Π1 be as deﬁned in point (c)
1 , and C(k) be the projections and clearance circle associated
(1)
x0 = Cx0,

in Section 3.5. Let Π(k)
to ξk, k = 0, 1. The circle Cx0 is osculating B at a point q. Note that C
Π(0)
0 (x0) = Π0(x0), Π(0)
x0 must be in interval (1) or (2) of both ξ0 and ξ1, since interval (3) consists of points
(k)
y does not osculate B. If x0 is in interval (1) of ξ0, we use
of points y where the circle C
(0)
one simplex associated to the pair (s(B), x0). If x0 is in interval (2), let x
1 be the end of
(0)
(0)
interval (1). We use simplices associated to the pairs (s(B), x
1 ) and (x
1 , x0). Note that
in any case, we make a simplex with the door Cx0[Π0(x0), q]. In a similar way, we make one
or two simplices for pairs of points on ξ1, where one of them has the door Cx0[q, Π1(x0)].

0 (x0) = q, and Π(1)

1 (x0) = Π1(x0).

In the most general situation where x0 is in interval (1), let x1 and x2 be the points on ξ
where interval (1) and (2) ends, respectively. We now make one simplex associated to each
of the pairs (x0, x1), (x1, x2), and (x2, x3).

(0)
x0 = C

The following is clear from the construction.

S∈S S.

(cid:73) Observation 18. For every point p ∈ ∂P[s(C), t(C)], there exists a simplex S ∈ S such
that p ∈ ∂S. Furthermore, every point of ∂S is either on ∂P[s(C), t(C)] or on C, where

S =S
(cid:73) Lemma 19. There exists a set S of at most ﬁve simplices such that if S =S

S∈S S, then
V ⊂ S and ∂S ⊆ ∂P[s(C), t(C)] ∪ C. There is a tree T with the nodes being S with the
following properties. The root of T is a simplex with the door C. If a curve φ ⊂ P exits a
simplex S0 ∈ S, it is either through the door of S0 or through an arc which is the door of a
child of S0 in T, and in the latter case, φ enters the child. If S0 has a parent in T and φ
exits S0 through the door of S0, then φ enters the parent.
Proof. We ﬁrst see that V ⊆ S. Let a point p ∈ V be given. There exists a curve φ ⊂ P
from p to a point q on ∂P[sC, tC] which does not cross C. By Observation 18, q is contained
in a simplex of S and thus q ∈ S. We follow φ from q to p. When φ exits a simplex, it must
enter another one by Observation 18 since φ does not cross ∂P[s(C), t(C)] or C. Therefore,
p ∈ S as well.

It is straightforward to check that the constructed simplices form a tree T as described in
(cid:74)

the lemma.

C

An example of the tree T is given in Figure 11 for case (c) from Section
3.5. The following lemma is the heart of our proof of correctness. Recall
that the curves in L+ are open, oriented curves that turn to the left with
curvature at most 1.
(cid:73) Lemma 20. Let γ be a curve in L+ contained in P. Let C be an arc
specifying an area V to be removed from P and suppose that γ starts at a
point a ∈ C. If γ leaves V again, it is through a point on C[s(C), a].
Proof. Assume for contradiction that γ leaves V through a point not as
stated in the lemma. Since the boundary of V is contained in ∂P ∪ C, γ
leaves V from a point on C(a, t(C)]. Consider the tree T as described in Lemma 19. Let

Figure 11

T
B

A0

A1

20

Finding the Maximum Subset with Bounded Convex Curvature

S be a simplex with maximum distance in T to the root such that γ enters S. Let D be
the door of S and s(D) and t(D) be the beginning and end of D in counterclockwise order,
respectively. Let D be the open disk such that D is an arc on the circle ∂D. It follows from
Lemma 19 that the ﬁrst time γ enters S, it is through a point on D. Let e ∈ D be the
point closest to s(D) such that γ eventually enters S through e. After e, γ must leave S
through a point f on D(e, t(D)], since otherwise γ enters the interior of the closed, simple
curve deﬁned by γ[a, e], D[s(D), e], ∂P[s(C), s(D)], and C[s(C), a], which it cannot exit again
by assumption. Hence, Theorem 1 implies that the region bounded by ∂D[f, e] and γ[e, f]
contain a unit disk diﬀerent from D. That contradicts the simplex condition of S.
(cid:74)

By the following lemma, we conclude that when the algorithm terminates, P is the
maximum subset of P1 of bounded conve curvature. The lemma follows easily from Lemma
20.
(cid:73) Lemma 21. For every i = 1, 2, . . ., Pi contains Q for every set Q ⊂ P1 of bounded convex
curvature.
Proof. Let Q ⊂ P1 be a set of bounded convex curvature. We prove the lemma by showing
that each time we perform a cut by removing some set V from P, V is disjoint from Q.
Consider for contradiction the ﬁrst iteration in which Q is not disjoint from V. If Q ⊆ V,
then, by Corollary 2, Q contains an open unit-disk D. From the simplex condition, we know
that no simplex in S contains D. Therefore, we may consider the simplex S with maximum
distance to the root that contains a part of ∂D and proceed as in the proof of Lemma 20 to
get a contradiction.

If not Q ⊆ V, consider the ﬁrst point a ∈ C where ∂Q enters V when following C from
(cid:74)

s(C). ∂Q must exit V through a point on C(a, t(C)], which contradicts Lemma 20.

3.7 Proof of Lemma 16
The following lemma is necessary to prove Lemma 16.
(cid:73) Lemma 22. The arc C specifying a cut spans an angle of at most π. Therefore, the same
holds for every cut arc of ∂P.
Proof. Assume that C spans an angle of more than π. Consider the curve ξ = ξ(A0, A1, x0)
and the associated clearance circles Cx and projections Π0 and Π1 used to deﬁne C. Let
x3 be the center of C. Then C = Cx3[Π0(x3), Π1(x3)]. Let x1 be the ﬁrst point in the ﬁrst
interval of ξ that contains x3 (since the intervals overlap at the endpoints, there might be
more intervals containing x3). Note that Cx1 has radius less than 1 since otherwise, we would
have chosen x3 = x1. Let S be the simplex associated to the pair (x1, x3) (using Lemma 17)
and let U be the open unit-disk bounded by Cx3. Since C spans an angle of more than π,
there exists unit-disks in S ∪ U diﬀerent than U, contradicting the simplex condition.
(cid:74)
Proof of Lemma 16. Consider the smallest i for which an arc A of ∂P1 exists such that
subsets of A appear as arcs on the boundary of more than one connected component of Pi+1.
Let C be the arc specifying the set V such that Pi+1 = Pi \ V. Since subsets of A appear on
more than one component of Pi+1, a part of A is removed from the boundary of Pi by the
cut. This means that C intersects A in points a and b when following C in counterclockwise
order, and the part A(a, b) is not on ∂Pi+1. A appears on the boundary of three regions
R1, R2, R3 of Pi \ C, where A[a, b] is an arc on ∂R2, ∂R1 contains s(A), and ∂R3 contains
t(A). It could be possible that R1 = R3, but it does not make a diﬀerence for this proof.

M. Abrahamsen & M. Thorup

21

Let C be the circle on which C is an arc. The arc A(a, b) is either in the interior or the
exterior of C. Assume ﬁrst that A(a, b) is in the interior. Note that parts of C are concave
arcs on the boundary of R1 and R3. Therefore, if R2 is the only region among R1, R2, R3
which is removed from Pi, there would be concave cut arcs on ∂Pi+1, contradicting Lemma
13.

Consider now the case where A(a, b) is in the exterior of C. We may assume that all
arcs of ∂P1 span an angle of at most π. If an arc spans a larger angle, we can divide it into
two arcs each spanning at most π by adding a vertex in the middle of the arc and thus at
most doubling the size of the input. Since C spans an angle of at most π by Lemma 22 and
the same holds for A, the radius of A must be less than 1. Assume for contradiction that
A is convex. Since R2 is removed from Pi, a part of Pi(s(C), t(C)) appear on ∂R2. C[a, b]
and A[a, b] form a closed, simple curve J. If ∂Pi(s(C), t(C)) did not cross C[a, b], R2 would
be the interior of J and R2 would not be removed from P1. We can therefore consider the
point x where ∂Pi(s(C), t(C)) enters J for the ﬁrst time and the point y where it leaves J for
the last time. y must be on A(a, x), since Pi is to the left of ∂Pi. If ∂Pi(s(C), x) is disjoint
from C, the curves ∂Pi[s(C), x] and C[s(C), x] form a simple, closed curve that separates t(C)
from the points on ∂Pi[s(C), x] in a neighborhood after y. Therefore, ∂Pi(y, t(C)) must cross
C(s(C), a) in order to get to t(C). Hence, there are at least ﬁve points in ∂P1[s(C), t(C)] ∩ C.
If ∂P1(s(C), x) crosses C somewhere, there are also at least ﬁve intersection points. Therefore,
∂P1[s(C), t(C)] must consist of at least three arcs, since there are at most two intersection
points between two arcs which are not one the same circle. On the other hand, we know from
the deﬁnition of C that there can be at most three such arcs. Denote the arcs B0, B1, B2
in the order in which they appear on ∂P1[s(C), t(C)], where B1 = σ is the cut arc that was
picked from Σ. Assume ﬁrst that x ∈ B0. Since either B0 and B1 are tangential, or s(B1) is
a convex vertex, it is clear that y has to be on C(x, b), which is a contradiction. It is also
impossible that x ∈ B2, since in that case, B2 should have four intersection points with C.
Assume then that x ∈ B1. Since B1 and C both have radius 1, the angle of the arc on B1
from a point where it exits C to the point where it enters C would be more than π. Hence,
B1 does not leave the interior of J again. Then B2 must have three intersection points with
C, which is a contradiction.

Hence, if parts of A appear on the boundary of more than one component of P, A must
(cid:74)

be a concave arc with radius lass than 1.

3.8 Proof that Algorithm 1 performs a linear number of iterations
Since the set V that we remove from P is contained in one connected component of P, the
algorithm only makes changes to one connected component of P at a time. A vertex v of ∂P
is improper if v is a convex vertex and v is not a vertex of ∂P1. An improper vertex can be
introduced in two diﬀerent ways: 1) If the arc C specifying a cut intersects a cut arc and the
intersection point v is on ∂V, then v becomes a convex and hence improper vertex. 2) If the
arc C begins or ends at the endpoint v /∈ ∂P1 of a cut arc which is not a convex vertex, v
might be a convex and hence improper vertex after the cut has been performed.

Consider the ﬁrst time an improper vertex appears. Let v be the vertex and let K be
the connected component such that v ∈ ∂K. Then v will be removed by the subsequent cut
performed in K since a cut arc with an endpoint at v is closest to the top of Σ among all
objects in Σ ∩ ∂K. It follows inductively that there can be one or two improper vertices in
each component, and after the next iteration performed in the component, none of them will
be left.

A vertex v of ∂P which is not a point on ∂P1 (note the diﬀerence between being a vertex

22

Finding the Maximum Subset with Bounded Convex Curvature

of ∂P1 and being a point on ∂P1) can only be created if the arc C specifying a cut to be
performed in P intersects a cut arc at v. It follows that v is a convex and hence improper
vertex. Equivalently, every proper vertex is on ∂P1.
Consider an endpoint c of the arc C specifying a cut to be performed in Pi, where
Pi+1 = Pi \V. If c is an inner point of an arc A of ∂Pi, Lemma 13 together with Observation
14 gives that A is not a cut arc since the circle containing C osculates A at c. Hence, A
is (a subset of) an arc of ∂P1 and c ∈ ∂P1. Furthermore, due to the way C is deﬁned, an
improper vertex of ∂Pi will never be chosen as c. Also in this case, we get that c is on ∂P1.
We summerize these observations in the following lemma.
(cid:73) Lemma 23. 1. There are at most two improper vertices of ∂K for each connected com-

ponent K of P. If there are two, they are endpoints of the same cut arc.

following cut performed in K.

2. All improper vertices of ∂K, where K is a connected component of P, are removed by the
3. The endpoints s(C) and t(C) of an arc C specifying a cut are both points on ∂P1.
(cid:73) Lemma 24. The algorithm performs O(n) iterations.
Proof. We divide the iterations into the types 1–5 deﬁned below and prove that there is a
linear number of each type. We bound the iterations of type 1 by observing that each such
iteration corresponds to introducing an edge in a planar multigraph with 2n vertices, where
each pair of vertices can be connected by at most O(1) edges. Hence, Euler’s formula implies
that O(n) edges are created in total. The iterations of types 2–5 can be bounded by the
number of iterations of type 1 or by observing that each iteration completely removes one of
the objects of ∂P1 from ∂P. Hence there are O(n) of each type.
Consider what happens during iterations i when the algorithm picks an object σ from Σ.
Let V be the set removed from Pi during the iteration, i.e., Pi+1 = Pi \ V, where possibly
V = ∅. Lemma 23 implies that the iteration is of one of the following types.
1. V is speciﬁed by an arc C and each endpoint of C is either a vertex of ∂P1 or an inner
2. V is speciﬁed by an arc C and one or both endpoints of C is a vertex v of ∂Pi which is
3. A complete connected component K is removed from P, i.e., V = K.
4. V = ∅ and nothing happens since σ is not anymore on ∂P.
5. V = ∅ and nothing happens since σ is a perfect cut arc.

not a vertex of ∂P1. Hence, such a vertex v is the endpoint of a cut arc of ∂Pi.

point of an arc of ∂P1 which is not a vertex of ∂Pi.

Consider cuts of type 1. We see that each such cut corresponds to adding an edge to a
planar graph G with 2n nodes. There is one node in G for each arc and vertex of ∂P1. We
choose a curve φ from s(C) to t(C) contained in V as the edge corresponding to the cut. This
is possible since V is connected by Lemma 12. A vertex v of ∂P1 is incident to φ if v is an
endpoint of φ. An arc A of ∂P1 is incident to φ if an endpoint of φ is an inner point of A.
Let A0 and A1 be the objects of ∂P1 incident to φ such that s(C) ∈ A0 and t(C) ∈ A1. Let
C be the circle containing C. Observe that if A0 (resp. A1) is an arc, then C osculates A0 at
s(C) (resp. A1 at t(C)).

We say that A0 and A1 are parallel if:
A0 and A1 are concentric arcs, one is concave, the other is convex, and the radius of the
convex is 2 larger than the radius of the concave.
A0 and A1 are two parallel line segments (in the ordinary sense) with opposite directions
and distance 2.
A1 (resp. A0) is a vertex while A0 (resp. A1) is convex arc with radius 2 and center A1
(resp. A0).

M. Abrahamsen & M. Thorup

23

If A0 and A1 are parallel, there are inﬁnitely many unit-circles that osculates A0 or A1
like C does. Otherwise, there are only O(1). Hence, by Euler’s formula, we are adding O(n)
edges to G that connect non-parallel objects.

We now verify that even if A0 and A1 are parallel, we make O(1) edges between them
in G. Consider the ﬁrst case where A0 and A1 are concentric, A0 is convex, A1 is concave,
and the radius of A0 is 2 larger than the radius of A1. The other types of parallel arcs are
handled in a similar way. We consider the case where more than one cut arc is made during
the execution of the algorithm which starts on A0, ends on A1, and is tangential to both arcs.
Assume that the ﬁrst such arc is C1 from s(C1) ∈ A0 to t(C1) ∈ A1 created during iteration i.
Consider the next time where such a cut arc C2 is made from s(C2) ∈ A0 to t(C2) ∈ A1 during
iteration k, k > i. The boundary interval ∂Pi+1[s(C2), t(C2)] contains no convex vertices or
convex arcs of radius less than 1. Therefore, some cut arc must have introduced a convex
vertex on ∂P(s(C2), t(C2)). Hence, during some iteration l, where i < l < k, a cut arc B is
introduced from x ∈ ∂Pi+1(s(C2), t(C2)) to y ∈ ∂Pi+1(x, t(C2)), where B(x, y) ⊂ Pi+1. From
Lemma 13 we know that B is convex when traversed from x to y. But such an arc B does
not exists for any x ∈ Pi+1(s(C2), t(C2)) due to the assumptions on A0 and A1. Therefore,
neither B nor C2 can appear as cut arcs and the number of edges between A0 and A1 in G is
O(1).

In a similar way, we see that the total number of perfect cut arcs created while executing
the algorithm is O(n) by describing a planar graph H. The vertex set of H is also the vertices
and arcs of ∂P1. If a cut creates a new cut arc C0 ⊆ C of ∂Pi+1 which is perfect, we add the
edge C0 to H. An endpoint of C0 cannot be an interior point of a cut arc since C0 is perfect.
Therefore, s(C0), t(C0) ∈ P1. Hence, we can bound the number of edges in H in a similar way
as the number of edges in G.

We say that a cut arc is active if it is in Σ. We see inductively that there can be at most
one active cut arc in each connected component of P. Namely, assume that there is one
active cut arc C in the component K of P. Assume that iteration i is the following iteration
performed in K. We must have σ = C, since C was added to the top of Σ when it was created.
During the iteration, C either disappears from ∂P when removing V or no change to P is
made since C is perfect. This means that all inactive cut arcs are perfect.

Consider now a cut of type 2. Assume that an endpoint of C is an endpoint of a cut arc
A of ∂Pi. The cut arc A is inactive and hence perfect. After the cut, v is a convex vertex.
After one more iteration in the component containing A, A will not anymore be an arc of
∂P. Hence, there are at most 2 iterations of type 2 for any perfect arc, so there are O(n)
iterations of type 2.

Consider a cut of type 3. Let K be the component removed by the cut. Note that there
are at most three arcs on ∂K. Assume ﬁrst that there are at least two cut arcs on ∂K. One
of them is not active and is hence perfect. Therefore, there can be removed at most O(n)
such components K. Assume now that there is at most one cut arc on ∂K. If there are
three arcs on ∂K, there is also a vertex of ∂P1. It can happen at most n times that such a
component is removed. The only remaining case is that ∂K consists of one cut arc C and an
arc A0 which is a subset of an arc A of ∂P1. A0 must be a convex arc, a line segment, or a
concave arc with radius more than 1. Therefore, by Lemma 16, there is no other connected
component of P where another subset of A is an arc. Hence, there can be removed at most
n such components K.

Consider an iteration of type 4. If σ is not anymore on ∂P, σ must be an object of
∂P1, since every active cut arc is the uppermost object in Σ among all objects of the same
connected component of P as σ. Therefore, there are at most 2n iterations of this type.

24

Finding the Maximum Subset with Bounded Convex Curvature

Consider the iterations of type 5. As we saw before, there are made O(n) perfect cut arcs
(cid:74)

during the execution of the algorithm, which bounds the number of this type.

Since every cut arc is eventually picked from Σ by Algorithm 1, the linear bound on the

number of iterations leads to the following lemma.
(cid:73) Lemma 25. The total number of cut arcs created while running Algorithm 1 is O(n).
Likewise, the total number of diﬀerent vertices appearing on ∂P while running Algorithm 1
is O(n).

We have now proved the following theorem.

(cid:73) Theorem 26. Given a simply-connected open region P1 bounded by a curvilinear polygon
consisting of n line segments and circular arcs, there is a unique maximum set Q ⊆ P1 of
bounded convex curvature which contains every set Q0 ⊆ P1 of bounded convex curvature.
∂Q consists of O(n) line segments and circular arcs, and Algorithm 1 computes Q in O(n)
iterations.

4

Implementation

In this section, we show how the algorithm can be implemented so that it uses O(n log n)
time in total and O(n) space.
Let C be the arc specifying a cut to be performed in P. Let R1, . . . , Rr be the connected
components of P \ C, and assume without loss of generality that the sets R1, . . . , Rs, s ≤ r,
have to be removed since their boundaries contain a part of ∂P(s(C), t(C)). For ease of
presentation we assume that C contains no vertices of ∂P except for possibly the endpoints
s(C) and t(C). Algorithm 2 traverses the boundary of each of the regions R1, . . . , Rs and
introduces the new cut arcs in order to remove the regions from P.

Algorithm 2: PerformCut(C)
1 U ← {s(C)}.
2 while U 6= ∅
3
4
5
6
7
8
9
10
11
12
13

a ← e.

else

Remove a point e from U. If e is not a vertex of ∂P, create a vertex at e.
a ← e.
repeat

Let b ← TraverseP(C, a, e). If b is not a vertex of ∂P, create a vertex at b.
Mark all objects on ∂P[a, b] as removed, except for vertices a and b.
If b ∈ ∂P(s(C), t(C)), add b to U.
if C enters or leaves P at b

a ← TraverseC(C, b). If a is not a vertex of ∂P, create a vertex at a.
Change ∂P by setting the arc succeeding a and preceding b to C[a, b].

14

until a = e

The algorithm traverses ∂P(s(C), t(C)) from s(C) and removes the regions R1, . . . , Rs one
by one. Each point in the set U is on the boundary of one of the regions R1, . . . , Rs which
has not so far been removed. The loop at line 5 traverses one such region.

M. Abrahamsen & M. Thorup

25

C enters or exits P. The point b where we stop traversing is returned.

The subroutine TraverseP(C, a, e) traverses ∂P from a until we meet e or a point where
The subroutine TraverseC(C, b) follows C from b through P until it exits P at some point
a, which is returned. Since we assumed that no vertex of ∂P is an inner point of C, it is
uniquely deﬁned which direction of C to follow.
Since P is simply-connected, the regions R1, . . . , Rr induce a tree T such that there is an
edge in T between two regions Rj and Rk if there is an arc C(x, y) ⊂ ∂Rj ∩ ∂Rk for x 6= y.
By Lemma 12, V is connected, so the regions R1, . . . , Rs induce a subtree in T. Therefore,
each of the regions in T is traversed at least once by Algorithm 2. On the other hand, a
region is removed from P while its boundary is traversed, so each region is traversed at most
once. Hence, we have the following lemma.
(cid:73) Lemma 27. Algorithm 2 traverses the boundary of each region R1, . . . , Rs exactly once
and thus correctly computes P ← P \ V as speciﬁed by the arc C.

The point TraverseC(C, b) is the ﬁrst intersection point between C and ∂P when following
C from b in the relevant direction. Cheng et al. [5] describes an eﬃcient solution to the
following problem. For a simple polygon V , preprocess V such that queries of the following
kind can be answered eﬃciently: Given a circular unit-radius arc beginning at some point in
the interior of V , ﬁnd the ﬁrst intersection point between the arc and V if it exists. The
algorithm requires O(n) space, uses O(n log n) time on preprocessing, and answers queries in
O(log n) time, where n is the number of vertices of V .
It is straightforward to generalize the method of Cheng et al. to curvilinear polygons. We
apply the preprocessing to the original input ∂P1. Thus, by querying an arc following C from
b in the direction through P, we know the point where C exits P1. However, the arc C can
exit P before it exits P1, namely if and only if it crosses a cut arc of ∂P. In the following,
we show how to detect if that is the case or not.
Since C enters or exits P at b, there exists a point d ∈ C ∩ P such that C(d, b) ⊂ P. In
the following, d denotes such a point. It is not necessary to compute d, it is merely a tool
in our analysis. We know from Lemma 23 that s(C), t(C) ∈ ∂P1. Using the circular ray
shooting data structure, we can ﬁnd a closed subset C0 ⊆ C such that s(C0), t(C0) ∈ ∂P1,
C0(s(C0), t(C0)) ⊂ P1, and b ∈ C0. Hence also d ∈ C0. The following lemma says that if the
arc C0, when traversed in any direction from d, enters a removed area, i.e., a connected
component of P1 \ P, then it stays in that removed area.
(cid:73) Lemma 28. Let x be one of the endpoints of C0. There is at most one cut arc A of ∂P
which intersects C0(d, x). There is such an arc A if and only if x /∈ ∂P. If A exists, C0(d, x)
and A intersect at a unique point y, and C0[y, x) ⊂ P1 \ P.
Proof. Assume ﬁrst that there is a cut arc A of ∂P intersecting C0(d, x) at a point y. Assume
for contradiction that C0(y, x) intersects a cut arc of ∂P at a point z. C0 exits P at y and
enters P at z. We may consider the smallest i such that C0(d, x) contains an interval C0[y, z]
which is outside Pi+1. Thus, C0[y, z] ⊂ V, where Pi+1 = Pi \ V. Let B be the arc that
speciﬁes the set V. Consider the intersection point w ∈ B ∩ C0(d, x) where C0(d, x) enters
or leaves V which is closest to s(B). Note that C0 is a curve in L+ independently of the
direction in which we traverse C0. Therefore, Lemma 20 gives that when following C0 into V
from w, the point where it exits V is on B[s(B), w). That is a contradiction since w was as
close to s(B) as possible. Hence, from y an on, C0 is contained in P1 \ P and x /∈ ∂P.
contained in P and therefore x ∈ ∂P.

On the other hand, if C0(d, x) does not intersect any cut arc of ∂P, then C(d, x) is
(cid:74)

26

Finding the Maximum Subset with Bounded Convex Curvature

It is possible that C0(s(C0), d) and C0(d, t(C0)) intersect the same cut arc B. That is easy
to detect since we are given a point b ∈ ∂P ∩C0 where C0 enters of leaves P. Thus, we check if
b is on a cut arc B and if C(b, x) intersects the same arc. Otherwise, every cut arc A satisﬁes
that A ∩ C0(s(C), d) = ∅ or A ∩ C0(d, t(C)) = ∅, and we have the following lemma.
(cid:73) Lemma 29. Let A be a cut arc of ∂P such that s(A), t(A) ∈ ∂P1. Assume that A ∩
C0(s(C0), d) = ∅ or A ∩ C0(d, t(C0)) = ∅. Then, the following two statements hold:
A and C0(s(C0), d) intersect if and only if the endpoints of C0 and A appear in the order
s(C0), t(A), t(C0), s(A) on ∂P1.
A and C0(d, t(C0)) intersect if and only if the endpoints of C0 and A appear in the order
s(C0), s(A), t(C0), t(A) on ∂P1.

Proof. We prove the ﬁrst statement. The second follows from similar arguments. Assume
that A and C0(s(C0), d) intersect at a point a. By Lemma 28, we know that C0(s(C0), a) does
not intersect A. Since C0(b, t(C0)) does not intersect A by assumption, the endpoints of
C0 are on diﬀerent sides of A in P1. A divides P1 into two regions, one with a boundary
including ∂P1(s(A), t(A)) and the other with a boundary including ∂P1(t(A), s(A)). The
portion C0(s(C0), a] is outside P. Hence C0 enters P at a, so Lemma 13 gives that s(C0) ∈
∂P1(s(A), t(A)) and t(C0) ∈ ∂P1(t(A), s(A)), or, equivalently, that the order of the points
are as stated in the lemma.
If the order of the endpoints is as stated, the endpoints of C0 are on diﬀerent sides of A,
and hence C0 and A intersect at some point a. Lemma 28 gives that C0(s(C0), a] ⊂ P1 \ P.
Hence, a ∈ C0(s(C0), d).
(cid:74)

See Figure 12, which illustrates Lemma 29. The black arc A is the only

cut arc of ∂P. The thick part of the grey arc C is C0.
Lemma 29 leads to our method for ﬁnding cut arcs intersecting an arc
C0 by searching after arcs with endpoints on speciﬁc portions of ∂P1. We
associate to each point p on ∂P1 a unique number ϕ(p) ∈ [0, n). Let the
Figure 12
vertices of ∂P1 be v0, v1, . . . , vn−1, vn, where v0 = vn. We set ϕ(vi) = i for
i < n. For the points p on the arc between two vertices vi and vi+1, we interpolate between i
and i+1 to uniquely deﬁne ϕ(p). For an arc A with s(A), t(A) ∈ ∂P1, we deﬁne an associated
point θ(A) ∈ [0, n) × (0, 2n) in the following way:

((ϕ(s(A)), ϕ(t(A)))

if ϕ(s(A)) < ϕ(t(A))

θ(A) =

(ϕ(s(A)), ϕ(t(A)) + n) otherwise.

Lemma 29 then leads to the following.

(cid:73) Lemma 30. Let A be a cut arc of ∂P such that s(A), t(A) ∈ ∂P1. Assume that A ∩
C0(s(C0), d) = ∅ or A ∩ C0(d, t(C0)) = ∅. Let θ(C0) = (x, y).

A and C0(s(C0), d) intersect if and only if
y < n and θ(A) is in [0, x) × (x, y) or (y, n) × (x + n, y + n), or
y ≥ n and θ(A) is in (y − n, x) × (x, y).
A and C0(d, t(C0)) intersect if and only if
y < n and θ(A) is in (x, y) × (y, x + n), or
y ≥ n and θ(A) is in [0, y − n) × (y − n, x) or (x, n) × (y, x + n).

Proof. Lemma 29 says that A and C0(s(C0), d) intersect if and only if the endpoints of C0
and A appear in the order s(A), s(C0), t(A), t(C0) on ∂P1. If we assume that y < n and
ϕ(s(A)) < ϕ(t(A)), this is equivalent to 0 ≤ ϕ(s(A)) < ϕ(s(C0)) < ϕ(t(A)) < ϕ(t(C0)) < n,
which means that θ(A) ∈ [0, x) × (x, y). The other cases follows in a similar way.
(cid:74)

M. Abrahamsen & M. Thorup

27

For each cut arc A of ∂P where s(A), t(A) ∈ ∂P1, we store the point θ(A) in a data
structure Θ. It is necessary to add new points to and delete points from Θ as the algorithm
proceeds, since new cut arcs are created and other no longer appear on ∂P. We need to be
able to ﬁnd a point θ(A) in a rectangle speciﬁed by C0 as stated in Lemma 30. Therefore,
we implement Θ as a fully dynamic orthogonal range searching structure as described by
Blelloch [2]. Algorithm 3 sketches how to implement TraverseC.

C0(s(C0), t(C0)) ⊂ P1, s(C0), t(C0) ∈ ∂P1, and b ∈ C0.

Algorithm 3: TraverseC(C, b)
1 Use the circular ray shooting data structure to ﬁnd the arc C0 ⊆ C such that
2 Let z ∈ {s(C0), t(C0)} be the endpoint of C0 when following C0 from b through P.
3 If b is on a cut arc B of ∂P and C(b, z) intersects B at a point a, return a.
4 Ask the data structure Θ if any point θ(A) is in the rectangle(s) as speciﬁed by Lemma

30. If so, return the intersection point between A and C0(b, z).

5 Return z.

It is now possible to bound the running time and memory requirement of Algorithm 1

when using our suggested implementation.
(cid:73) Theorem 31. Algorithm 1 can be implemented so that it runs in time O(n log n) and uses
O(n) space.

Proof. We ﬁrst bound the space and time used on maintaining and querying the data structure
Θ. From Lemma 25, we know that there are O(n) points in Θ at any time. Blelloch [2]
describes how to implement Θ using O(n) space so that insertions and deletions are performed
in O(log n) amortized time and orthogonal range reporting queries in O
time, where k is the number of reported points. In our case, due to Lemma 28, there is 0 or
1 point to report in each query. Therefore, we use O(n log n) time on Θ in total.

(cid:16)log n + k log n

log log n

(cid:17)

For each cut arc of ∂P, we perform 2 circular ray shooting queries. Thus, we use O(n log n)

time on that in total.

The portion of ∂P we traverse when calling TraverseP(C, a, e) is removed from P and
hence never traversed again. Therefore, the time used on TraverseP is bounded by the
number of vertices occuring on ∂P during the execution of the algorithm. By Lemma 25, we
(cid:74)
use O(n) time on TraverseP in total.

Acknowledgements

We want to thank Jacob Holm, Ralph Howard, Mathias Bæk Tejs Knudsen, and Eva
Rotenberg for useful suggestions and discussions

References

1 H.-K. Ahn, O. Cheong, J. Matoušek, and A. Vigneron. Reachability by paths of bounded

curvature in a convex polygon. Computational Geometry, 45(1):21–32, 2012.

2 G.E. Blelloch. Space-eﬃcient dynamic orthogonal point location, segment intersection, and

range reporting. In Proceedings of SODA, pages 894–903, 2008.
F. Bonahon. Low-dimensional geometry: From Euclidean surfaces to hyperbolic knots,
volume 49 of Student Mathematical Library. American Mathematical Society, 2009.

3

28

Finding the Maximum Subset with Bounded Convex Curvature

5

4 A.M. Bruckner. Diﬀerentiation of real functions, volume 659 of Lecture Notes in Mathem-

atics. Springer-Verlag, 1978.
S.-W. Cheng, O. Cheong, H. Everett, and R. van Oostrum. Hierarchical decompositions and
circular ray shooting in simple polygons. Discrete and Computational Geometry, 32:401–
415, 2004.

6 H.S. Choy and K.W. Chan. A corner-looping based tool path for pocket milling. Computer-

Aided Design, 35(2):155–166, 2003.

7 X. Han and L. Tang. Precise prediction of forces in milling circular corners. International

Journal of Machine Tools and Manufacture, 88:184–193, 2015.

8 M. Held. Voronoi diagrams and oﬀset curves of curvilinear polygons. Computer-Aided

Design, 30(4):287–300, 1998.

9 R. Howard and A. Treibergs. A reverse isoperimetric inequality, stability and extremal the-
orems for plane-curves with bounded curvature. Rocky Mountain Journal of Mathematics,
25(2):635–684, 1995.

10 H. Iwabe, Y. Fujii, K. Saito, and T. Kishinami. Study on corner cut by end mill. Interna-

tional Journal of the Japan Society for Precision Engineering, 28(3):218–223, 1994.
J. McCleary. Geometry from a diﬀerentiable viewpoint. Cambridge University Press, 2012.
S.C. Park and Y.C. Chung. Mitered oﬀset for proﬁle machining. Computer-Aided Design,
35(5):501–505, 2003.

13 V. Pateloup, E. Duc, and P. Ray. Corner optimization for pocket machining. International

Journal of Machine Tools and Manufacture, 44(12):1343–1353, 2004.

14 G. Pestov and V. Ionin. The largest possible circle imbedded in a given closed curve.

11
12

Doklady Akademii Nauk SSSR, 127(6):1170–1172, 1959.

15 H. Rohnert. Shortest paths in the plane with convex polygonal obstacles. Information

Processing Letters, 23(2):71–76, 1986.

16 C.K. Yap. An O(n log n) algorithm for the voronoi diagram of a set of simple curve segments.

Discrete and Computational Geometry, 2(1):365–393, 1987.
Z.Y. Zhao, C.Y. Wang, H.M. Zhou, and Z. Qin. Pocketing toolpath optimization for sharp
corners. Journal of Materials Processing Technology, 192:175–180, 2007.

17

