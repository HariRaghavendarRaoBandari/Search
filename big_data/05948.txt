6
1
0
2

 
r
a

 

M
8
1

 
 
]
T
N
h
t
a
m

.

[
 
 

1
v
8
4
9
5
0

.

3
0
6
1
:
v
i
X
r
a

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE

POLYLOGARITHMS VIA RATIONAL CHEN–FLIESS SERIES

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

Abstract. The goal of the paper is to give a systematic way to numerically evaluate the generating
function of a periodic multiple polylogarithm using a Chen–Fliess series with a rational generating
series. The idea is to realize the corresponding Chen–Fliess series as a bilinear dynamical system. A
standard form for such a realization is given. The method is also generalized to the case where the
multiple polylogarithm has non-periodic components. This allows one, for instance, to numerically
validate the Hoﬀman conjecture. Finally, a setting in terms of dendriform algebras is provided.

Keywords: multiple polylogarithms, multiple zeta values, Chen–Fliess series, rational formal power series

Math. Subject Classiﬁcation: 11G55, 11M32, 93B20, 93C10.

Contents

Introduction
1.
2. Preliminaries
2.1. Chen–Fliess series
2.2. Bilinear realizations of rational Chen–Fliess series
3. Evaluating periodic multiple polylogarithms
3.1. Periodic multiple polylogarithms
3.2. Periodic multiple polylogarithms with non-periodic components
3.3. The dendriform setting
4. Examples
5. Conclusions
Acknowledgements
References

1. Introduction

1
4
4
5
6
6
8
10
13
16
16
17

Given any vector s = (s1, s2, . . . , sl) ∈ Zl with s1 ≥ 2 and si ≥ 1 for i ≥ 2, the associated multiple
polylogarithm (MPL) of depth l and weight |s| :=Pl
Lis(t) := Xk1>k2>···>kl≥1

tk1
2 ··· ksl
1 ks2
ks1

i=1 si is taken to be

|t| ≤ 1,

(1)

,

l

whereupon the multiple zeta value (MVZ) of depth l and weight |s| is the value of (1) at t = 1, namely,

ζ(s) := Lis(1).

Any such vector s will be referred to as admissible. The MPL in (1) can be represented in terms of
iterated Chen integrals with respect to the 1-forms ω(1)
. Indeed, using the

and ω(0)

:= dtj
tj

j

:= dtj
1−tj

j

Date: March 21, 2016.

1

2

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

standard notation, |s(j)| := s1 + ··· + sj, j ∈ {1, . . . , l}, one can show that

(2)

For instance,

ω(0)

Lis(t) =Z t
Li(2,1,1)(t) =Z t

0 (cid:18) |s(1)|−1Yj=1
t1 Z t1

j (cid:19)ω(1)
1 − t2Z t2

|s(1)| ···(cid:18) |s(l)|−1Yj=|s(l−1)|+1
1 − t3Z t3

dt4
1 − t4

dt1

dt2

dt3

0

0

0

0

ω(0)

j (cid:19)ω(1)

|s(l)|.

= Xk1>k2>k3≥1

tk1
k2
1k2k3

.

An MPL of depth l is said to be periodic if it can be written in the form Li{s}n(t), where {s}n denotes
the n-tuple (s, s, . . . , s) ∈ Znl, n ≥ 0 with Li{s}0(t) := 1.1 In this case, the sequence (Li{s}n(t))n∈N0
has the generating function

(3)

Ls(t, θ) :=

∞Xn=0

Li{s}n(t)(cid:16)θ|s|(cid:17)n

.

In general, the integral representation (2) implies that Ls will satisfy a linear ordinary diﬀerential
equation in t whose solution can be written in terms of a hypergeometric function [1, 4, 5, 21, 22, 23, 24].
For example, when l = 1 and s = (s), it follows that

and its solution is the Euler–Gauss hypergeometric function

d

d

dt(cid:19)(cid:18)t

dt(cid:19)s−1

 (cid:18)(1 − t)
− θs! Ls(t, θ) = 0,
(cid:12)(cid:12)(cid:12)(cid:12) t(cid:19) ,
L(s)(t, θ) =s Fs−1(cid:18) −ωθ,−ω3θ, . . . ,−ω2s−1θ

1, 1, . . . , 1

where ω = eπi/s, a primitive s-th root of −1 [4]. By expanding this solution into a hypergeometric
series and equating like powers of θ with those in (3), it is possible to show, for example, when s = 2
that

(5)

ζ({2}n) =

π2n

(2n + 1)!

, n ≥ 1.

In a similar manner it can be shown that

ζ({3, 1}n) =

2π4n

(4n + 2)!

, n ≥ 1.

(4)

and

This method has yielded a plethora of such MZV identities [3, 4, 6, 25]. The most general case is
treated in [24], where it is shown that Ls satisﬁes the linear diﬀerential equation of Fuchs type
(6)
where for s = (s1, s2, . . . , sl) ∈ Zl

(Ps − θ|s|)Ls(t, θ) = 0,

Ps := PslPsl−1 ··· Ps1

Psi :=(cid:18)(1 − t)

d

dt(cid:19)(cid:18)t

d

dt(cid:19)si−1

.

1Following other authors, {s}n = {(s1, s2, . . . , sl)}n will be written more concisely as {s1, s2, . . . , sl}n.

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

3

(The conventions in [24] are to use −θ in place of θ and t in place of 1 − t.) In [24] and related work
[21, 22, 23], the authors develop WKB type asymptotic expansions of these hypergeometric solutions.
The ultimate goal of the present paper is to provide a numerical scheme for estimating Ls(t, θ) by
in essence mapping the |s|-order linear diﬀerential equation (6) to a system of |s| ﬁrst-order bilinear
diﬀerential equations which can be solved by standard tools found in software packages like MatLab.
Speciﬁcally, it will be shown how to construct a dynamical system of the form

(7a)

˙z = N0z u0 + N1z u1, z(0) = z0
y = Cz,

(7b)
which when simulated over the interval [0, 1] has the property that y(t) = Ls(t, θ) for any value of
θ and t ∈ [0, 1]. In this case, the matrices N0 and N1 will depend on θ, and the initial condition z0
and the input functions u0, u1 must be suitably chosen. Such a technique could be useful for either
disproving certain conjectures involving MZVs or providing additional evidence for the truthfulness
of other conjectures. For example, one could validate with a certain level of (numerical) conﬁdence a
conjecture of the form

ζ({sa}n) = bnζ({sb}n), n ∈ N, b ∈ Z,

where sa ∈ Zla, sb ∈ Zlb with |sa| = |sb|. Take as a speciﬁc example the known identity
(8)
for all n ≥ 1, so that sa = (4), sb = (3, 1) and b = 4 [4]. Note that for n = 1 the identity follows
immediately from double shuﬄe relations for MZVs [18]. On the level of generating functions it is
evident that

ζ({4}n) = 4nζ({3, 1}n)

L(4)(1, θ) =
L(3,1)(1,√2θ) =

=

∞Xn=0
∞Xn=0
Li{4}n (1)(cid:0)θ4(cid:1)n
Li{3,1}n (1)(cid:16)(√2θ)4(cid:17)n
∞Xn=0
L(4)(1, θ) − L(3,1)(1,√2θ) = 0,

ζ({4}n) θ4n
∞Xn=0

=

∀θ ∈ R,

Therefore, identity (8) implies that

(9)

4nζ({3, 1}n) θ4n.

a claim that can be tested empirically if these generating functions can be accurately evaluated. The
method can also be generalized to address the conjecture of Hoﬀman that
ζ({2}n, 2, 2, 2) + 2ζ({2}n, 3, 3) = ζ(2, 1,{2}n, 3),

(10)
for all integers n > 0, which has only been proved for n ≤ 8 [6]. The idea here is to admit non-periodic
components in the generating function calculation. For example, ({2}n, 3, 3) can be viewed as having
the periodic component {2}n and the non-periodic component (3, 3). In the general case, say when
sn := (sa,{sb}n, sc), n ≥ 0, the generating function is deﬁned analogously as

L(sa,{sb},sc)(t, θ) :=

Therefore, relation (10), if true, would imply that

∞Xn=0

Lisn(t)(cid:16)θ|sb|(cid:17)n

.

(11)

L({2},2,2,2)(1, θ) + 2L({2},3,3)(1, θ) − L(2,1,{2},3)(1, θ) = 0,

∀θ ∈ R.

4

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

The basic approach to estimating Ls(t, θ) is to map a periodic multiple polylogarithm to a rational
series and then to employ concepts from control theory to produce bilinear state space realization (7)
of the corresponding rational Chen–Fliess series [2, 14, 15]. The periodic nature of the MPL always
ensures that these realizations have a certain built-in recursion/feedback structure. The technique will
ﬁrst be described in general, and then it will be demonstrated by empirically verifying the identities
(5), (8), and (10).

The paper is organized as follows. In the next section, a brief summary of rational Chen–Fliess series
is given to establish the notation and the basic concepts to be employed. Then the general method
for evaluating a generating function of a periodic multiple polylogarithm is given in the subsequent
section, which also contains in Subsection 3.3 a short digression regarding another way of looking at
periodic MPLs in terms of the shuﬄe algebra. This is followed by several examples in Section 4. In
particular, the last example shows that the Hoﬀman conjecture (10) has a high likelihood of being
true. The ﬁnal section gives the paper’s conclusions.

2. Preliminaries

2.1. Chen–Fliess series. A ﬁnite nonempty set of noncommuting symbols X = {x0, x1, . . . , xm} is
called an alphabet. Each element of X is called a letter, and any ﬁnite sequence of letters from X,
η = xi1 ··· xik , is called a word over X. The length of word η, denoted |η|, is the number of letters
in η. The set of all words with ﬁxed length k is denoted by X k. The set of all words including the
empty word, ∅, is designated by X∗. It forms a monoid under catenation. The set ηX∗ξ ⊆ X∗ is the
set of all words with preﬁx η and suﬃx ξ. Any mapping c : X∗ → Rℓ is called a formal power series.
The value of c at η ∈ X∗ is written as (c, η) ∈ Rℓ and called the coeﬃcient of the word η in the series
c. Typically, c is represented as the formal sum c = Pη∈X ∗ (c, η)η. If the constant term (c,∅) = 0
then c is said to be proper. The collection of all formal power series over the alphabet X is denoted
by RℓhhXii. The subset of polynomials is written as RℓhXi. Each set forms an associative R-algebra
under the catenation product.

Deﬁnition 1. Given ξ ∈ X∗, the corresponding left-shift operator ξ−1 : X∗ → X∗ is deﬁned:

η 7→ ξ−1(η) :=( η′

0

: η = ξη′
: otherwise.

It is extended linearly to RℓhhXii.

One can formally associate with any series c ∈ RℓhhXii a causal m-input, ℓ-output operator, Fc,
in the following manner. Let p ≥ 1 and t0 < t1 be given. For a Lebesgue measurable function
u : [t0, t1] → Rm, deﬁne kukp := max{kuikp : 1 ≤ i ≤ m}, where kuikp is the usual Lp-norm for a
measurable real-valued function, ui, deﬁned on the interval [t0, t1]. Let Lm
p [t0, t1] denote the set of all
measurable functions deﬁned on [t0, t1] having a ﬁnite k·kp norm and Bm
p (R)[t0, t1] := {u ∈ Lm
p [t0, t1] :
kukp ≤ R}. Assume C[t0, t1] is the subset of continuous functions in Lm
1 [t0, t1]. Deﬁne inductively for
each word η ∈ X∗ the map Eη : Lm

1 [t0, t1] → C[t0, t1] by setting E∅[u] = 1 and letting

Exi ¯η[u](t, t0) :=Z t

t0

ui(τ )E¯η[u](τ, t0) dτ,

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

5

where xi ∈ X, ¯η ∈ X∗, and u0 = 1. The input-output operator corresponding to the series c ∈ RℓhhXii
is the Fliess operator or Chen–Fliess series

(12)

Fc[u](t) = Xη∈X ∗

(c, η) Eη[u](t, t0).

If there exist real numbers Kc, Mc > 0 and r ∈ [0, 1) such that the coeﬃcients of the generating series

c =Pη∈X ∗ (c, η)η ∈ RℓhhXii satisfying the growth bound
c (|η|!)r,

∀η ∈ X∗,
(13)
then the series (12) deﬁnes an operator from the extended space Lm

|(c, η)| ≤ KcM |η|

p,e(t0) into C[t0,∞), where

p,e(t0) := {u : [t0,∞) → Rm : u[t0,t1] ∈ Lm
Lm

p [t0, t1], ∀t1 ∈ (t0,∞)},

and u[t0,t1] denotes the restriction of u to the intervall [t0, t1]. (Here, |z| := maxi |zi| when z ∈ Rℓ.)
See [20] for details. In this case, the operator is said to be globally convergent, and the set of all series
satisfying (13) is designated by Rℓ
GChhXii. In the following sections, it suﬃces to set ℓ = m = 1,
which corresponds to the single-input, single-output (SISO) case.
2.2. Bilinear realizations of rational Chen–Fliess series. A series c ∈ RhhXii is called invertible
if there exists a series c−1 ∈ RhhXii such that cc−1 = c−1c = 1.2 In the event that c is not proper,
i.e., the coeﬃcient (c,∅) is nonzero, it is always possible to write

In fact, c ∈ RhhXii is invertible if and only if c is not proper. Now let S be a subalgebra of the
R-algebra RhhXii with the catenation product. S is said to be rationally closed when every invertible
c ∈ S has c−1 ∈ S (or equivalently, every proper c′ ∈ S has (c′)∗ ∈ S). The rational closure of any
subset E ⊂ RhhXii is the smallest rationally closed subalgebra of RhhXii containing E.
Deﬁnition 2. A series c ∈ RhhXii is rational if it belongs to the rational closure of RhXi.

It turns out that an entirely diﬀerent characterization of a rational series is possible using the

following concept.
Deﬁnition 3. A linear representation of a series c ∈ RhhXii is any triple (µ, γ, λ), where

is a monoid morphism, and the vectors γ, λT ∈ Rn×1 are such that each coeﬃcient

µ : X∗ → Rn×n

(c, η) = λµ(η)γ,

∀η ∈ X∗.

The integer n is the dimension of the representation.
Deﬁnition 4. A series c ∈ RhhXii is called recognizable if it has a linear representation.

2The polynomial 1∅ is abbreviated throughout as 1.

where c′ ∈ RhhXii is proper. It then follows that

where

c−1 =

c = (c,∅)(1 − c′),

1
(c,∅)

(1 − c′)−1 =
∞Xi=0

(c′)∗ :=

(c′)i.

(c′)∗,

1
(c,∅)

6

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

Theorem 1. (Sch¨utzenberger) A formal power series is rational if and only if it is recognizable.

Returning to (12), Chen–Fliess series Fc is said to be rational when its generating series c ∈ RhhXii
is rational. The state space realization (7) is said to realize Fc on Lp,e(t0) when (7a) has a well deﬁned
solution, z(t), on the interval [t0, t0 + T ] for every T > 0 with input u ∈ Lp,e(t0) and output

y(t) = Fc[u](t) = C(z(t)),

t ∈ [t0, t0 + T ].

Identify with any linear representation (µ, γ, λ) of the series c ∈ RhhXii the bilinear system

(N0, N1, z0, C) := (µ(x0), µ(x1), γ, λ).

The following result is well known [15, 16].
Theorem 2. The statements below are equivalent for a given c ∈ RhhXii:

i: (µ, γ, λ) is a linear representation of c.
ii: The bilinear system (N0, N1, z0, C) realizes Fc on Lp,e(t0) for any p ≥ 1.
3. Evaluating periodic multiple polylogarithms

It is ﬁrst necessary to associate a periodic MPL and its generating function to a rational series.
Elements of this idea have appeared in numerous places. The approach taken here is most closely
related to the one presented in [17]. The next step is then to ﬁnd the bilinear realization of the
rational Chen–Fliess series in terms of its linear representation (see Theorem 4). The case when non-
periodic components are present works similarly but is slightly more complicated (see Theorem 6).
Recall that throughout m = 1, so that the underlying alphabet is X := {x0, x1}.
3.1. Periodic multiple polylogarithms. Given any admissible vector s ∈ Zl, there is an associated
word ηs ∈ x0X∗x1 of length |s|
In which case, cs := (θ|s|ηs)∗ =Pn≥0(cid:0)θ|s|ηs(cid:1)n
The idea is to now relate the generating function of the sequence (Li{s}n (t))n>0 to the Chen–Fliess
series with generating series cs. Recall that for any word xiξ′ ∈ X∗ the iterated integral is deﬁned
inductively by

is a rational series satisfying the identity

1 + (θ|s|ηs)cs = cs.

x1 ··· xsl−1

ηs = xs1−1

x1xs2−1

0

x1.

0

(14)

0

where xi ∈ X, ξ′ ∈ X∗. Assume here that the letters x0 and x1 correspond to the inputs u0(t) := 1/t
and u1(t) := 1/(1 − t), respectively, and E∅ := 1. For the formal power series cs ∈ RhhXii, the
corresponding Chen–Fliess series is then taken to be

Exiξ′[u](t) =Z t

0

ui(τ )Eξ′[u](τ ) dτ,

Fcs[u] = Xξ∈X ∗

(cs, ξ)Eξ[u].

Exiξ′[u](t) =Z t

0

¯ui(τ )Eξ′[u](τ )

dτ
τ

,

Comparing this to the classical deﬁnition (12), the factor 1/t can be extracted from u0 and u1 so that
each integral can be viewed instead as integration with respect to the Haar measure. That is,

where ¯u0(t) := 1 and ¯u1(t) = tu1(t). The following lemma now applies.

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

7

Lemma 3. For any admissible vector s ∈ Zl,

Ls(t, θ) = Fcs[Li0](t),

t ∈ [0, 1], θ ∈ R,

where Li0(t) := t/1 − t.

Proof: First observe that since cs =Pn≥0(cid:0)θ|s|ηs(cid:1)n

Fcs[u](t) =

F(θ|s|ηs)n[u](t) =

∞Xn=0

, it follows directly that

∞Xn=0

Eηn

s [u](t)(cid:16)θ|s|(cid:17)n

.

Comparing this against the deﬁnition

it is evident that one only needs to verify the identity

Ls(t, θ) =

∞Xn=0

Li{s}n(t)(cid:16)θ|s|(cid:17)n

,

(15)
But this is clear from (2), i.e., for any admissible vector s ∈ Zl
ui(τ )Lis′(τ ) dτ,

s [Li0](t) = Li{s}n(t), n ≥ 0.

Eηn

where ηs = xiηs′,

0

Lis(t) =Z t
ui(t) =( 1

t

t

1−t

:

:

i = 0

i = 1,

1
t

and Li∅(t) = 1 [25]. Therefore, it follows directly that Lis(t) = Eηs [Li0](t), from which (15) also
follows.

The key idea now is to apply Theorem 2 and the rational nature of the series cs in order to build
a bilinear realization of the mapping u 7→ y = Fcs[u] so that Ls(t, θ) can be evaluated by numerical
simulation of a dynamical system. In principle, one could attempt to ensure that any such realization
is minimal in dimension or even canonical in some sense [7, 8, 9, 19], but in the present context these
properties are not really essential.
Theorem 4. For any admissible s ∈ Zl, Ls(t, θ) = Fcs[Li0](t) has the bilinear realization

where

(16a)

(N0, N1, z0, C) :=(cid:0)µ(x0), µ(x1), γ, λ(cid:1),
N0 = diag(cid:0)N0(s1), N0(s2), . . . , N0(sl)(cid:1)

1

N1 = I +

|s| − N0 + θ|s|e|s|eT

|s| ∈ R|s|×|s| being matrices of zeros except for a super diagonal of ones, ei

(16b)
with N0(si) ∈ Rsi×si and I +
is an elementary vector with a one in the i-th position, and z0 = C T = e1 ∈ R|s|×1.
Proof: First recall Deﬁnition 1 describing the left-shift operator on X∗, i.e., for any xi ∈ X, x−1
deﬁned by x−1
(xiη) = η with η ∈ X∗ and zero otherwise. In which case, (xiξ)−1(·) = ξ−1x−1
any ξ ∈ X∗. Now assign the ﬁrst state of the realization to be
z1(t) = Fcs[u](t) = 1 + F(θ|s|ηs)cs

i (·) is
(·) for

[u](t).

i

i

8

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

In light of the integral representation (2) of MPLs, diﬀerentiate z1 exactly s1 times so that the input
u1(t) := ¯u1(t)/t appears. Assign a new state at each step along the way. Speciﬁcally,

˙z1(t) =
...

˙zs1−1(t) =

1
t

1
t

Fθ|s|x−1

0 (ηs)cs

[u](t) =: z2(t)

1
t

Fθ|s|(xs1−1

0

)−1(ηs)cs

[u](t) =: zs1(t)

1
t

˙zs1(t) = ¯u1(t)

1
t

Fθ|s|(xs1−1

0

x1)−1(ηs)cs

[u](t) =: zs1+1(t)¯u1(t)

1
t

.

This produces the ﬁrst s1 rows of the matrices in (16) since when l > 1

˙z1(t)

...

˙zs1−1(t)
˙zs1(t)





z1(t)

...

zs1(t)

zs1+1(t)¯u1(t)

= I +

s1×(s1+1)


=(cid:2) N0(s1) 0 (cid:3)

1
t




...

1
t

z1(t)

z1(t)


es1 (cid:3) denote matrices in Rs1×(s1+1). The pattern is exactly repeated

+(cid:2) 0s1

zs1(t)
zs1+1(t)

zs1(t)
zs1+1(t)

es1 (cid:3)





¯u1(t)

1
t

.

...

Both (cid:2) N0(s1) 0 (cid:3) and (cid:2) 0s1

until the ﬁnal state, then the periodicity of cs comes into play. Namely,

˙z|s|(t) = θ|s| ¯u1(t)

F(ηs)−1(ηs)cs[u](t) =: θ|s|z1(t)¯u1(t)

1
t

1
t

,

which gives the ﬁnal rows of N0 and N1 in (16).

It is worth pointing out that the validity of (6) is obvious in the present setting. Namely, (6) follows

from the fact that (14) implies η−1

s (cs) − θ|s|cs = 0, and thus, Lemma 3 gives

(Ps − θ|s|)Ls(t, θ) = (Ps − θ|s|)Fcs [Li0](t) = Fη−1

s

(cs)−θ|s|cs

[Li0](t) = F0·cs[Li0](t) = 0.

3.2. Periodic multiple polylogarithms with non-periodic components. The non-periodic case
requires a generalization of the basic set-up. The following lemma links this class of generating
functions to the corresponding set of rational Fliess operators.

Lemma 5. For any admissible s := (sa,{sb}, sc)

Ls(t, θ) = Fcs[Li0](t),

t ∈ [0, 1], θ ∈ R,

ηsc .

where cs := ηsa(cid:0)θ|sb|ηsb(cid:1)∗
Proof: Similar to the periodic case, cs =Pn≥0 ηsa(cid:0)θ|sb|ηsb(cid:1)n
∞Xn=0

ηsa(cid:16)θ|sb|ηsb(cid:17)n
F

∞Xn=0

Fcs[u](t) =

[u](t) =

ηsc

ηsc, and therefore,

Eηsa ηn

sb

ηsc [u](t)(cid:16)θ|sb|(cid:17)n

.

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

9

The same argument used for proving (15) now shows that Eηsa ηn
case, Fcs[Li0](t) = Ls(t, θ) as claimed.

sb

ηsc [Li0](t) = Lisn(t), n ≥ 0. In which

The required generalization of Theorem 4 is a bit more complicated. A simple example is given ﬁrst

to motivate the general approach.
Example 1. Consider the periodic MPL with non-periodic components speciﬁed by s = (2, 1,{2}, 3)
0x1 + θ2x0x1¯c.
Assign the ﬁrst state of the realization to be

1¯c, where ¯c = x2

1(θ2x0x1)nx2

0x1 = x0x2

as appearing in (11). In this case, cs =Pn≥0 x0x2
The strategy here is to diﬀerentiate z1 exactly |ηsa| =(cid:12)(cid:12)x0x2

z1(t) = Fcs[u](t) = Fx0x2

0x1 + θ2x0x1¯c
way, in order to remove the preﬁx x0x2
is used and the process is continued. This will yield a certain block diagonal structure for N0 and an
upper triangular form for N1. As will be shown shortly, this structure is completely general but possibly
redundant. Speciﬁcally,

1 and isolate ¯c. At which point, the identity ¯c = x2

1(cid:12)(cid:12) = 3 times, assigning new states along the

1¯c[u](t).

˙z1(t) =

˙z2(t) =

˙z3(t) =

˙z4(t) =

˙z5(t) =

1
t
1
t
1
t
1
t
1
t

Fx2

1¯c[u](t) =: z2(t)

1
t

¯u1(t)Fx1¯c[u](t) =: z3(t)¯u1(t)

1
t

¯u1(t)F¯c[u](t) =

1
t

Fx0x1+θ2x1¯c[u](t) =: z5(t)

0x1+θ2x0x1¯c[u](t) =: z4(t)¯u1(t)
¯u1(t)Fx2
1
t

1
t

Fx1[u](t) +

θ2
t

¯u1(t)F¯c[u](t) =: z6(t)

1
t

+ θ2z4(t)¯u1(t)

1
t

˙z6(t) = ¯u1(t)

1
t

.

The corresponding realization at this point has the form

˙z = ˜N0z ¯u0 + ˜N1z ¯u1 + B1 ¯u1, z(0) = ˜z0
y = ˜Cz,

which does not have the form of a bilinear realization as deﬁned in (7) since the state equation for z6
does not depend on z, and thus, the term B1 ¯u1 with B1 = e6 appears. Nevertheless, a permutation of
the canonical embedding of Brockett (see [7, Theorem 1]), namely,

(17)

N0 =(cid:20) ˜N0 0

0

0 (cid:21) , N1 =(cid:20) ˜N1 B1

0 (cid:21) , z0 =(cid:20) ˜z0

1 (cid:21) , C T =(cid:20) ˜C T
0 (cid:21) ,

0

renders an input-output equivalent bilinear realization of the desired form. In this case,



1
0
0
0
0
0
1



1
0
0
0
0
0
0



.



N0 =

, N1 =

, z(0) =

, C T =

0 1 0 0 0 0 0
0 0 0 0 0 0 0
0 0 0 0 0 0 0
0 0 0 0 1 0 0
0 0 0 0 0 1 0
0 0 0 0 0 0 0
0 0 0 0 0 0 0





0
0
1
0

0 0 0
0 0 0
0 0 1
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0 θ2 0 0 0
0 0 1
0 0 0
0 0 0
0 0 0

0
0





10

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

Theorem 6. Consider any admissible s := (sa,{sb}, sc) with ηsa := xi1 ··· xik , k = j|sa|, and |sc| > 0.
Then Ls(t, θ) = Fcs[Li0](t) has the bilinear realization (N0, N1, z0, C), where
E|sa|1

N0 = diag(N0(sa), N0(sb, sc), 0), N1 =(cid:20) N1(sa)

0

N1(sb, sc) (cid:21)

with Ni(sa) ∈ R|sa|×|sa| being a matrix of zeros and ones depending only on sa, E|sa|1 is the elementary
matrix with a one in position (|sa| , 1), and Ni(sb, sc) ∈ Rsbc×sbc is a matrix of zeros, ones, and the entry
θ|sb|. (Its dimension sbc and exact structure depend only on sb and sc.) Finally, z0 = e1 + e|sa|+sbc ∈
R(|sa|+sbc)×1 and C = e1 ∈ R1×(|sa|+sbc).
Proof: Following Example 1, assign the ﬁrst state of the realization to be

where ¯c := ηsc + θ|ηsb|ηsb ¯c, and diﬀerentiate z1 until the series ¯c appears in isolation. Observe

z1(t) = Fcs[u](t) = Fηsa ¯c[u](t),

˙z1(t) =

¯ui(t)

1
t

1Xi=0

Fx−1

i

(ηsa )¯c[u](t) =: eT

2 z(t)¯ui1(t)

1
t

.

So the ﬁrst row of Ni1 is eT
matrix contains all zeroes. Continuing in this way,

2 , where xi1 is the ﬁrst letter of ηsa , and the ﬁrst row of the other realization

˙zk(t) =

¯ui(t)

1
t

1Xi=0

Fη−1

sa (ηsa )¯c[u](t) =: eT

k+1z(t)¯uik (t)

1
t

.

Since in general xik = x1, the k-th row of N1 is eT
So far, this is in agreement with the proposed structure of the realization. Next observe that

k+1, and the k-th row of the N0 contains all zeroes.

˙zk+1(t) =

¯ui(t)

1
t

1Xi=0

Fx−1

i

(¯c)[u](t) =

¯ui(t)

1
t

1Xi=0

Fx−1

i

(ηsc )[u](t)

|

=:zk+2(t)

{z

}

+

1Xj=0

¯uj(t)

1
t

Fx−1

j

(ηsb ¯c)[u](t)

.

|

=:zk+3(t)

{z

}

In this way, new states are created until ﬁnally the term F¯c[u](t) = zk+1(t) reappears as it must. This
produces an entry θ|sb| in N1 and preserves the proposed structures of N0 and N1. But note, as in
Example 1, that the process can continue to create new states, and the state zk+1(t) could reappear
if ηsc is a power of ηsb, a possibility that has not been excluded. In addition, this realization could
produce copies of the the ﬁrst k states if ηsc contains ηsa as a factor. These copies will still preserve
the desired structure, but this possibility points out that in general the ﬁnal realization constructed
by this process may not be minimal. Finally, the canonical embedding (17), which is always needed if
|sc| > 0, yields the ﬁnal elements of the proposed structure.

Clearly, when non-periodic components are present, giving a precise general form of the matrices

N0 and N1 is not as simple as in the purely periodic case.

3.3. The dendriform setting. Recall that MPLs satisfy shuﬄe product identities, which are derived
from integration by parts for the iterated integrals in (2). For instance,

Li(2)(t)Li(2)(t) = 4Li(3,1)(t) + 2Li(2,2)(t).

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

11

In slightly more abstract terms this can be formulated using the notion of a dendriform algebra.
Indeed, for any t0 < t1, the space C[t0, t1] is naturally endowed with such a structure consisting of
two products:

(18a)

(18b)

f ≻ g := I(f )g
f ≺ g := f I(g),

where I is the Riemann integral operator deﬁned by I(f )(t, t0) := R t

seen to satisfy the axioms of a dendriform algebra

t0

f (s) ds, and which are easily

f ≻ (g ≻ h) = (f ∗ g) ≻ h
(f ≻ g) ≺ h = f ≻ (g ≺ h)
(f ≺ g) ≺ h = f ≺ (g ∗ h),

where

is an associative product. The example (18) above moreover veriﬁes the extra commutativity property
f ≻ g = g ≺ f , making it a Zinbiel algebra3

f ∗ g := f ≻ g + f ≺ g

(f ≺ g) ≺ h = f ≺ (g ≺ h + h ≺ g).

This is another way of saying that Chen’s iterated integrals deﬁne a shuﬄe product, which gives rise
to the shuﬄe algebra of MPLs. For more details, including a link between general, i.e., not necessarily
commutative, dendriform algebras and Fliess operators, the reader is referred to [11, 12, 13].

In the following, the focus is on the commutative dendriform algebra (C[t0, t1],≻,≺). The linear

g : C[t0, t1] → C[t0, t1] is deﬁned for g ∈ C[t0, t1] by right multiplication using (18a)

operator R≻

R≻
g (f ) := f ≻ g.

Now add the distribution δ = δt0 to the dendriform algebra C[t0, t1]. In view of the identity I(δ) = 1
on the interval [t0, t1], it follows that R≻
f (δ) = δ ≻ f = f for any f ∈ C[t0, t1]. Consider next the
speciﬁc functions u0(t) = 1/t and u1(t) = 1/(1 − t) which appeared above (with t0 = 0 and t1 = 1
here), and the corresponding linear operators R≻
useful. For any word w = xs1−1
composition of the linear operators associated to its letters, namely,
)sl−1R≻
ex1

u1. The notation u0 = ex0 and u1 = ex1 is

x1 ∈ x0X∗x1, the linear operator R≻

ex1 ··· (R≻
ex0

w = (R≻
ex0

w is deﬁned as the

x1 ··· xsl−1

u0 and R≻

)s1−1R≻

0

0

for w = w1 ··· w|s| = xs1−1
the multiple polylogarithm Lis obviously satisﬁes

0

x1. Using the shorthand notation R≻

w = R≻

s with s = (s1, . . . , sl),

(20)

From (20) it follows immediately that

d
dt

Lis = R≻

s (δ).

d
dtLs(t, θ) =

∞Xk=0

θk|s|(R≻

s )k(δ),

3The space of continuous maps on [t0, t1] with values in the algebra Mn(R) is also a dendriform algebra, with ≺ and

≻ deﬁned the same way. But it is Zinbiel only for n = 1.

R≻
x1 ··· xsl−1

0

12

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

which in turn yields

(21)

s(cid:16) d
dtLs(t, θ)(cid:17).
d
dtLs(t, θ) = δ + θ|s|R≻

Equation (21) is a dendriform equation of degree (|s|, 0) in the sense of [13, Section 7]. The general
form of the latter is

(22)

X = a00 +

θq

|s|Xq=1

qXj=1

(··· (X ≻ aq1) ≻ aq1 ··· ) ≻ aqq

with a00 := δ, aqj = 0 for q < |s| and a|s|j := ewj, matching the notations of equation (46) in reference

[13]. The general solution X of (22) is the ﬁrst coeﬃcient of a vector Y of length |s| whose coeﬃcients
(discarding the ﬁrst one) are given by θjR≻
w1···wj (X) for j = 1, . . . ,|s| − 1. This vector satisﬁes the
following matrix dendriform equation of degree (1, 0):

(23)

where the matrix4 N is given by:

N =

Y = (δ, 0, . . . , 0

) + θY ≻ N,

|s|−1

| {z }
ew1

0

0
0
...
0
0

ew2

0
. . .
0
0

0
0
0
...
0



ew|s|

0
0

ew3

. . .
0
0

···
···
···
...
···
···

.



0
0
0

ew|s|−1

0

d
dtLsa{sb}sc = R≻

sa(cid:18) d
dtL{sb}sc(cid:19) ,

First, observe that the |s|-fold product (··· (N ≻ N ) ≻ ··· ) ≻ N yields a diagonal matrix with the
entry d
dt Lis(t) in the position (1, 1). Second, matrix N splits into N = N0u0 + N1u1 with N0, N1 as in
(16). Equation (23) essentially corresponds to the integral equation deduced from (7) giving the state
z(t).

The case with non-periodic components can also be handled in this setting. Observe

and the term X′ = d

dtL{sb}sc satiﬁes the dendriform equation

X′ = R≻

(24)
Equation (24) is again a dendriform equation of degree (|sb|, 0) with a00 = R≻
sc(δ), aqj = 0 for q < |sb|
and a|sb|j = wj using the notation in [13]. The general solution X′ of (24) is the ﬁrst coeﬃcient of
w1···wj (X′) for
a vector Y ′ of length |sb| whose coeﬃcients (discarding the ﬁrst one) are given by θjR≻
j = 1, . . . ,|sb| − 1. This vector satisﬁes the following matrix dendriform equation of degree (1, 0)

sc (δ) + θ|sb|R≻

sb(X′).

Y ′ = (R≻

sc (δ), 0, . . . , 0
|sb|−1

| {z }

) + θY ′ ≻ M ′,

4The size of the matrix can be reduced from 1 + |s|(|s| − 1)/2 to |s| by eliminating rows and columns of zeroes due to

the particular form of (21) compared to equation (46) in [13].

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

13

where the matrix M ′ is given by:

M ′ =

ew1

0
0
...
0
0

0

ew2

0
. . .
0
0

0
0

ew3

. . .
0
0

···
···
···
...
···
···

0
0
0

ew|sb|−1

0

.



0
0
0
...
0



ew|sb|

One can ask the question whether the term X = d

dtLsa{sb}sc itself is a solution of a dendriform
equation. In fact, a closer look reveals that the theory of linear dendriform equations presented in [13]
has not been suﬃciently developed to embrace this more complex setting. In the light of Theorem 6,
it is clear that the results in [13] should be adapted in order to address this question. Such a step,
however, is beyond the scope of this paper and will thus be postponed to another work. It is worth
mentioning that the matrix N needed in the linear dendriform equation

to match the result from Example 1 has the form

Y ′ = (0, δ, 0, 0, 0, 0, 0) + θY ′ ≻ N

N =

0

0

0 ew1

0
0
0
0

0
0
0
0
0

0
0

ew2

0
0
0
0

0
0
0
0
0
0



ew7 0

0
0
0
0

ew4

0
0

0
0
0

0

ew3
ew6

0

,



0
0
0
0
0

0

ew5

which reﬂects the canonical embedding of Brockett. The ﬁrst component of the vector Y ′ contains the
solution. As indicated earlier, a proper derivation of this result in the context of general dendriform
algebras, i.e., extending the results in [13], lies outside the scope of the present paper.

In this section, three examples of the method described above are given corresponding to the

generating functions behind the identities (5), (8), and (10).

4. Examples

Li
0

 

(cid:82)2

(cid:113)(cid:197)

(cid:168)

z2 

(cid:168)

z1 

y 

Haar integrator

Haar integrator

Figure 1. Unity feedback system realizing L(2)(t, 1)

Example 2. Consider the generating function L(2)(t, θ). This example is simple enough that a bilinear
realization can be identiﬁed directly from (4). For any ﬁxed θ deﬁne the ﬁrst state variable to be

14

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON





































Figure 2. Plot of L(2)(t, 1) versus t

z1(t) = L(2)(t, θ), and the second state variable to be z2(t) = t dL(2)(t, θ)/dt. In which case,

(25a)

(25b)

(25c)

˙z1(t) = z2(t)

1
t
˙z2(t) = θ2 z1(t)

y(t) = z1(t).

, z1(0) = 1

t
1 − t

1
t

, z2(0) = 0

Thereupon, system (25) assumes the form of a bilinear system as given by (16), where the inputs are
set to be ¯u0(t) = 1 and ¯u1(t) = Li0(t) = t/1 − t, i.e.,

N0 = N0(2) =(cid:20) 0 1

0 0 (cid:21) , N1 = N1(2) =(cid:20) 0

θ2 0 (cid:21) , z(0) = C T =(cid:20) 1
0 (cid:21)

0

(recall the 1/t factors in (25) are absorbed into Haar integrators). A simulation diagram for this
realization suitable for Matlab’s Simulink simulation software is shown Figure 1. Setting θ = 1 and
using Simulink’s default integration routine ode45 (Dormand-Prince method [10]) with a variable step
size lower bounded by 10−8, Figure 2 was generated showing L(2)(t, 1) = F(x0x1)∗[Li0](t) as a function
of t. In particular, it was found numerically that L(2)(1, 1) ≈ 3.6695, which compares favorably to the
theoretical value derived from (5):

L(2)(1, 1) =

∞Xn=0

ζ({2}n) =

∞Xn=0

π2n+1
(2n + 1)n =

sinh(π)

π

= 3.6761.

Better estimates can be found by more carefully addressing the singularities at the boundary conditions
t = 0 and t = 1 in the Haar integrators.

Example 3. In order to validate (8), the identity (9) is checked numerically. Since the generating
functions L(4) and L(3,1) are periodic, Theorem 4 applies. For s = (4) the corresponding bilinear

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

15























T 

T 

T 

T 

T 

T 





















Figure 3. Plot of L(4)(t, θ) − L(3,1)(t,√2θ) versus t for diﬀerent values of θ

realization is

For s = (3, 1) the bilinear realization is

N0 = N0(4) =
N0 =

0 1 0 0
0 0 1 0
0 0 0 1
0 0 0 0

0 1 0 0
0 0 1 0
0 0 0 0
0 0 0 0

 , N1 = N1(4) =
 , N1 =

0
0 0 0
0 0 0
0
0 0 1
0
θ4 0 0 0

0 0 0
0
0 0 0
0
0
0 0 0
θ4 0 0 0

 , z(0) = C T =
 .

1
0
0
0

 , z(0) = C T =

1
0
0
0

 .

These two dynamical systems were simulated using Haar integrators in Simulink and the diﬀerence
(9) was computed as a function of t as shown in Figure 3. As expected, this diﬀerence is very close
to zero when t = 1 no matter how the parameter θ is selected. This is pretty convincing numerical
evidence supporting (8), which as discussed in the introduction is known to be true.

Example 4. Now the method is applied to the generating functions behind the Hoﬀman conjecture
(10). In this case, each multiple polylogarithm has non-periodic components, so Theorem 6 has to
be applied three times. The realization for L(2,1,{2},3)(t, θ) was presented in Example 1. Following a
similar approach, the realization for L({2},2,2,2)(t, θ) and L({2},3,3)(t, θ) are, respectively,

N0 =

, N1 =

, z(0) =

, C T =

0 1 0 0 0 0 0
0 0 0 0 0 0 0
0 0 0 1 0 0 0
0 0 0 0 0 0 0
0 0 0 0 0 1 0
0 0 0 0 0 0 0
0 0 0 0 0 0 0





0 0 0 0 0 0
0
θ2 0 1 0 0 0 0
0 0 0 0 0 0
0
0 0 0 1 0 0
0
0 0 0 0 0 0
0
0 0 0 0 0 1
0
0 0 0 0 0 0
0





1
0
0
0
0
0
1





1
0
0
0
0
0
0





16

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

T 

T 

T 

T 

T 

T 







































Figure 4. Plot of L({2},2,2,2)(t, θ)+2L({2},3,3)(t, θ)−L(2,1,{2},3)(t, θ) versus t for diﬀerent
values of θ

and

N0 =



0 1 0 0 0 0 0
0 0 1 0 0 0 0
0 0 0 0 0 0 0
0 0 0 0 1 0 0
0 0 0 0 0 1 0
0 0 0 0 0 0 0
0 0 0 0 0 0 0



.

0 0 0 0 0 0
0
θ2 0 0 0 0 0 0
0 0 1 0 0 0
0
0 0 0 0 0 0
0
0 0 0 0 0 0
0
0 0 0 0 0 1
0
0 0 0 0 0 0
0





, N1 =

, z(0) =

, C T =

.

1
0
0
0
0
0
1





1
0
0
0
0
0
0





These dynamical systems were simulated to estimate numerically the left-hand side of (11) as shown
in Figure 4. As in the previous example, the case where t = 1 is of primary interest. This value is
again very close to zero for every choice of θ tested. It is highly likely therefore that the Hoﬀman
conjecture is true.

5. Conclusions

A systematic way was given to numerically evaluate the generating function of periodic multiple
polylogarithm using Chen–Fliess series with rational generating series. The method involved mapping
the corresponding Chen–Fliess series to a bilinear dynamical system, which could then be simulated
numerically using Haar integration. A standard form for such a realization was given, and the method
was generalized to the case where the multiple polylogarithm could have non-periodic components.
The method was also described in the setting of dendriform algebras. Finally, the technique was used
to numerically validate the Hoﬀman conjecture.

The ﬁrst author is supported by Ram´on y Cajal research grant RYC-2010-06995 from the Spanish
government. The second author was supported by grant SEV-2011-0087 from the Severo Ochoa

Acknowledgements

EVALUATING GENERATING FUNCTIONS FOR PERIODIC MULTIPLE POLYLOGARITHMS

17

Excellence Program at the Instituto de Ciencias Matem´aticas in Madrid, Spain. This research was
also supported by a grant from the BBVA Foundation.

References

[1] T. Aoki, Y. Kombu, and Y. Ohno, A generating function for sums of multiple zeta values and its applications,

Proc. AMS, 136 (2008) 387–395.

[2] J. Berstel and C. Reutenauer, Noncommutative Rational Series with Applications, Cambridge University Press,

Cambridge, UK, 2010.

[3] J. M. Borwein, D. M. Bradley, D. J. Broadhurst, and P. Lisonek, Combinatorial aspects of multiple zeta values,

Electron. J. Combin., 5 (1998) R38 (12 pp).

[4] J. M. Borwein, D. M. Bradley, D. J. Broadhurst, and P. Lisonek, Special values of multidimensional polylogarithms,

Trans. Amer. Math. Soc., 353 (2001) 907–941.

[5] D. Bowman and D. M. Bradley, Multiple polylogarithms: A brief survey, in Q-series with Applications to Com-
binatorics, Number Theory, and Physics: A Conference on Q-series with Applications to Combinatorics, Number
Theory, and Physics, B. C. Berndt and K. Ono, Eds., AMS, Providence, RI, 2001, pp. 71–92.

[6] J. M. Borwein and W. Zudilin, Math honours: Multiple zeta values, available at https://carma.newcastle.

edu.au/MZVs/mzv.pdf.

[7] R. W. Brockett, On the algebraic structure of bilinear systems, in Theory and Applications of Variable Structure

Systems, R. Mohler and R. Ruberti, Eds., Academic Press, New York, 1972, pp. 153–168.

[8] P. D’Alessandro, A. Isidori, and A. Ruberti, Realization and structure theory of bilinear dynamical systems, SIAM

J. Control, 12 (1974) 517–535.

[9] H. T. Dorissen, Canonical forms for bilinear systems, Systems Control Lett., 13 (1989) 153–160.

[10] J. R. Dormand and P. J. Prince, A family of embedded Runge-Kutta formulae, J. Comput. Appl. Math., 6 (1980),

19–26.

[11] L. A. Duﬀaut Espinosa, W. S. Gray, and K. Ebrahimi-Fard, Dendriform-Tree Setting for Fully Non-commutative
Fliess Operators, Proc. 53rd IEEE Conference on Decision and Control, Los Angeles, CA, 2014, pp. 4814–4819.
arXiv:1409.0059v1 [math.CO]

[12] L. A. Duﬀaut Espinosa, W. S. Gray, and K. Ebrahimi-Fard, Dendriform-Tree Setting for Fully Non-commutative

Fliess Operators, IMA J. Math. Control Inform., to appear.

[13] K. Ebrahimi-Fard and D. Manchon, Dendriform equations, J. Algebra, 322 (2009) 4053–4079.
[14] D. L. Elliott, Bilinear Control Systems, Springer, Dordrecht, 2009.
[15] M. Fliess, Fonctionnelles causales non lin´eaires et ind´etermin´ees non commutatives, Bull. Soc. Math. France, 109

(1981) 3–40.

[16] W. S. Gray and Y. Wang, Fliess operators on Lp spaces: Convergence and continuity, Systems Control Lett., 46

(2002) 67–74.

[17] V. Hoseaux, G. Jacob, N. E. Oussous, and M. Petitot, A Complete Maple package for noncommutative rational
power series, in Computer Mathematics: Proceedings of the Sixth Asian Symposium, Beijing, China, Z. Li and
W. Y. Sit, Eds., World Scientiﬁc, 2003, pp. 174–188.

[18] K. Ihara, M. Kaneko, and D. Zagier, Derivation and double shuﬄe relations for multiple zeta values, Compositio

Math., 142 (2006) 307–338.

[19] H. J. Sussmann, Minimal realizations and canonical forms for bilinear systems, J. Franklin Inst., 301 (1976)

593–604.

[20] I. M. Winter-Arboleda, W. S. Gray, and L. A. Duﬀaut Espinosa, Fractional Fliess operators: Two approaches,

Proc. 49th Conf. Information Sciences and Systems, Baltimore, MD, 2015.

[21] M. Zakrzewski and H. ˙Zo ladek, Linear diﬀerential equations and multiple zeta-values. I. Zeta(2), Fund. Math., 210

(2010) 207–242.

[22]

, Linear diﬀerential equations and multiple zeta-values.

II. A generalization of the WKB method,

J. Math. Anal. Appl., 383 (2011) 55–70.

, Linear diﬀerential equations and multiple zeta-values. III. Zeta(3), J. Math. Phys., 53 013507 (2012).

[23]
[24] H. ˙Zo ladek, Note on multiple zeta-values, Bul. Acad. S¸tiint¸e Repub. Mold. Mat., 43 (2003) 78–82.
[25] W. Zudilin, Algebraic relations for multiple zeta values, Russian Math. Surveys, 58 (2003) 1–29.

18

KURUSCH EBRAHIMI-FARD, W. STEVEN GRAY, AND DOMINIQUE MANCHON

ICMAT, C/ Nicol´as Cabrera, no. 13-15, 28049 Madrid, Spain On leave from UHA, Mulhouse, France.
E-mail address: kurusch@icmat.es
URL: http://www.icmat.es/kurusch/personal

Old Dominion University, Norfolk, Virginia, 23454, U.S.A.
E-mail address: sgray@odu.edu

Universit´e Blaise Pascal, C.N.R.S.-UMR 6620, BP 80026, 63171 Aubi`ere, France
E-mail address: manchon@math.univ-bpclermont.fr
URL: http://math.univ-bpclermont.fr/~manchon/

