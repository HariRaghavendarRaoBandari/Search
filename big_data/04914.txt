IEEE TRANSACTIONS ON AUTOMATIC CONTROL

1

Boundary Control of Coupled

Reaction-Advection-Diffusion Systems with

Spatially-Varying Coefﬁcients

Rafael Vazquez and Miroslav Krstic

6
1
0
2

 
r
a

 

M
5
1

 
 
]

.

C
O
h
t
a
m

[
 
 

1
v
4
1
9
4
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—Recently, the problem of boundary stabilization for
unstable linear constant-coefﬁcient coupled reaction-diffusion
systems was solved by means of
the backstepping method.
The extension of this result to systems with advection terms
and spatially-varying coefﬁcients is challenging due to complex
boundary conditions that appear in the equations veriﬁed by the
control kernels. In this paper we address this issue by showing
that these equations are essentially equivalent to those veriﬁed
by the control kernels for ﬁrst-order hyperbolic coupled systems,
which were recently found to be well-posed. The result therefore
applies in this case, allowing us to prove H 1 stability for the
closed-loop system. It also shows an interesting connection be-
tween backstepping kernels for coupled parabolic and hyperbolic
problems.

Index Terms—Boundary control; backstepping; parabolic
equations; advection-reaction-diffusion systems; distributed pa-
rameter systems.

I. INTRODUCTION

for general

I N a recent work [2], the problem of boundary stabilization

linear constant-coefﬁcient coupled reaction-
diffusion systems was resolved by means of the backstepping
method [13]. However, the extension of this result to systems
with advection terms and spatially-varying coefﬁcients—as
usually found in applications—is far from trivial. The main
difﬁculty arises when trying to solve the partial differential
equations veriﬁed by the control kernels (usually known as
the “backstepping kernel equations”). For n states in a system
of coupled parabolic equations, one needs to ﬁnd n2 control
kernel verifying n2 fully coupled second-order hyperbolic
equations in a triangular domain, with complicated boundary
conditions. In the constant-coefﬁcient case, it is possible to
simplify the boundary conditions by assuming a certain kernel
structure, and then the equations can be readily solved [2].
However,
this procedure does not extend to the spatially-
varying case and/or advection terms. In this work, we show
that the kernel equations can be written (using some non-
trivially-deﬁned intermediate kernels) as a coupled system
of 2n2 ﬁrst-order hyperbolic equations. Interestingly, these
kernel equations are very similar to those found when applying
backstepping to ﬁnd boundary controllers for ﬁrst-order hyper-
bolic coupled systems [10]. A result recently obtained for this

R. Vazquez is with the Department of Aerospace Engineering, University

of Seville, Seville, 41092, Spain (e-mail: rvazquez1@us.es)

M. Krstic is with the Department of Mechanical Aerospace Engineer-
ing, University of California, San Diego, CA 92093-0411, USA (e-mail:
krstic@ucsd.edu)

problem showed that the resulting kernel equations were well-
posed and had piecewise differentiable solutions [11]. Apply-
ing this result in our case allows us to ﬁnd a backstepping
controller, and to prove H 1 exponential stability for the origin
of the closed-loop system with arbitrary convergence rate. Our
result shows an interesting and non-trivial connection between
backstepping controllers for coupled parabolic and hyperbolic
systems.

The problem presented in this paper could be addressed
by other methods,
including the semigroup approach (see
for instance [16]), eigenvalue assignment [3], ﬂatness [17] or
LQR [18]. The main advantage of backstepping is that, once
the well-posedness of the kernel equations has been estab-
lished, analytical and numerical results are simple to obtain, in-
cluding the well-posedness of the closed loop system in high-
order Sobolev spaces or even explicit exact controllers [25].
Backstepping has proved itself to be an ubiquitous method
for PDE control, with many other applications including,
among others, ﬂow control [22], [27], nonlinear PDEs [23],
disturbance rejection [1], [8], hyperbolic 1-D systems [5], [6],
[15], adaptive control [21], wave equations [20], Korteweg-
de Vries equations [4], and delays [14]. Other recent results
related to boundary control of parabolic systems include [19],
where backstepping is applied to ﬁnd multi-agent deployments
in 3-D space, output-feedback boundary control for ball-
shaped domains in any dimension [26], and design of output
feedback laws for convection problems on annular domains
(see [24]).

The structure of the paper is as follows. In Section II we
introduce the problem and state our main result. We explain
our design method (backstepping) and show the stability of the
closed-loop system in Section III. Next, we prove that there is
a solution to the backstepping kernel equations in Section IV.
We conclude the paper with some remarks in Section V.

II. COUPLED REACTION-ADVECTION-DIFFUSION SYSTEMS

Consider

the following general
reaction-advection-diffusion system

linear spatially-varying

ut = ∂x (Σ(x)ux) + Φ(x)ux + Λ(x)u,

(1)

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

2

for x ∈ [0, 1], t > 0, with u ∈ Rn deﬁned as

 ,



u1
u2
...
un

u =

and the various coefﬁcients appearing in (1) deﬁned as





Σ(x) =

Λ(x) =

Φ(x) =

 ,

1(x)

0

0

...

0

2(x)
...

0

. . .

. . .
...
. . .

0

0

...

N (x)

λ11(x) λ12(x)
λ21(x) λ22(x)

...

...

λn1(x) λn2(x)
φ11(x) φ12(x)
φ21(x) φ22(x)

...

...

φn1(x) φn2(x)

...

. . . λ1n(x)
. . . λ2n(x)
...
. . . λnn(x)
. . . φ1n(x)
. . . φ2n(x)
...
. . . φnn(x)

...

 ,
 .

and with boundary conditions

u(0, t) = 0,

u(1, t) = U (t),

where U (t) is the actuation, deﬁned as



U1(t)
U2(t)

...

Un(t)

 .

U (t) =

0

(cid:12)(cid:12)(cid:12)(cid:12)2

(cid:90) 1

(cid:90) 1

(cid:12)(cid:12)(cid:12)(cid:12) ∂f (x)

|f (x)|2dx, (cid:107)f(cid:107)H 1 = (cid:107)f(cid:107)L2 +

its norm will be written as (cid:107)f(cid:107)L2 or (cid:107)f(cid:107)H 1, respectively, and
computed with the following expressions
(cid:107)f(cid:107)L2 =

dx,
(9)
where |·| denotes the regular Euclidean norm. In addition we
will use L2 spaces with respect to time, which are analogously
deﬁned. Rather than using a more complex notation, we will
denote the L2 norm with respect to time equally as (cid:107) · (cid:107)L2,
and since it will only be used for functions only depending
on time it should be clear from the context what L2 norm we
are referring to.

∂x

0

Deﬁne C as a diagonal matrix of constant positive coefﬁ-

cients, i.e.,



C =

 ,

c1
0

...

0

0
c2
...

0

. . .

. . .
...
. . .

0

0

...
cn

(10)

(cid:90) 1

with c1, c2, . . . , cn > 0, whose values can be chosen but
should be sufﬁciently large (see Section III-C).

Next, we state our main result that solves the stabilization

problem in H 1.
Theorem 1. Consider system (1), (6)–(7) with initial condition
u0 ∈ H 1 and feedback control law

U (t) =

K(1, ξ)u(ξ, t)dξ + b(t),

(11)

0

where the kernel matrix K(x, ξ) is a solution from the follow-
ing hyperbolic matrix system of PDEs

= K(x, ξ)Λ(ξ) + CK(x, ξ) + K(x, ξ)Φ(cid:48)(ξ),

∂x (Σ(x)Kx) − ∂ξ (KξΣ(ξ)) + Φ(x)Kx + KξΦ(ξ)
(12)
in the domain T = {(x, ξ) : 0 ≤ ξ ≤ x ≤ 1}, with boundary
conditions

(2)

(3)

(4)

(5)

(6)
(7)

(8)

The only assumption on (1),(6)–(7) is that these coefﬁcients
are sufﬁciently regular; in particular, it is required that the
entries of Σ(x) are three times differentiable, those of Φ(x)
twice differentiable and those of Λ(x) differentiable. In addi-
tion, we assume that the states are ordered so that ¯ ≥ 1(x) >
2(x) > . . . > n(x) ≤  > 0. The diffusion coefﬁcients
could also be equal at some (or all) values of x but to avoid
technical complications we conﬁne ourselves to the case of
strict inequality.

Since (1), (6)–(7) is potentially unstable depending on
the values of the coefﬁcients, the problem we consider is
the design of a (full-state) feedback control law for U (t)
that makes the system stable for any possible value of the
coefﬁcients.

We will make use of the L2([0, 1]) and H 1([0, 1]) spaces,
deﬁned, respectively, as the space of square-integrable vector
functions in the [0, 1] interval and the space of vector functions
whose derivative (with respect
to x, deﬁned in the weak
sense [7]) is square-integrable in the [0, 1] interval. For sim-
plicity we will simply write L2 and H 1. If f ∈ L2 or f ∈ H 1

Φ(x)K(x, x) − K(x, x)Φ(x) + Λ(x) + C + Kξ(x, x)Σ(x)
(13)
+Σ(x)Kx(x, x) +
Σ(x)K(x, x) − K(x, x)Σ(x) = 0,
(14)
(15)
Kij(x, 0) = 0,

d
dx
i ≤ j

(Σ(x)K(x, x)) = 0,

(cid:19)

(cid:18)

and b(t) is deﬁned as
u0(1, t) −

b(t) =

(cid:90) 1

e−α1t,

0

K(1, ξ)u0(ξ)dξ

(16)
for any chosen α1 > 0. Then, there is a unique u(·, t) ∈ H 1
solution to (1), (6)–(7), and in addition, there exists a number
c∗ depending only on the coefﬁcients Σ(x) and Φ(x), so that
if the values of the coefﬁcients of C verify ci ≥ c∗ + δ, for all
i = 1, . . . , n, and for some δ > 0, then the origin u ≡ 0 is
exponentially stable in the H 1 norm, i.e.,

(cid:107)u(·, t)(cid:107)H 1 ≤ C1e−C2t(cid:107)u0(cid:107)H 1 ,

(17)

with C1, C2 > 0, where C2 = min{α1, 2δ}.

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

(cid:90) x

In Theorem 1, the main question is if the kernel equations
(12)–(15) do indeed have a solution, as implicitly assumed in
the theorem’s statement. The next result answers this question.
Theorem 2. The kernel equations (12)–(15) possess a piece-
wise differentiable solution in the domain T . In addition, the
transformation deﬁned by

g(x) = f (x) −

K(x, ξ)f (ξ)dξ,

(18)

0

is an invertible transformation. Both the transformation and
its inverse map H 1 functions into H 1 functions, verifying

(cid:107)g(cid:107)H 1 ≤ K1(cid:107)f(cid:107)H 1, (cid:107)f(cid:107)H 1 ≤ K2(cid:107)g(cid:107)H 1.

In the next sections we prove Theorem 1 and 2, respectively

in sections III and IV.

III. CONTROL LAW DESIGN AND CLOSED-LOOP STABILITY

(PROOF OF THEOREM 1)

We stabilize (1), (6)–(7) by applying the backstepping
method. Next we explain the method and show that the origin
of the resulting closed-loop system is stable in the H 1 norm.

A. Backstepping transformation and target system

The main idea of backstepping is to use a transformation
mapping (1), (6)–(7) into an stable target system, which has
to be adequately chosen. We select the following system
wt = ∂x (Σ(x)wx) + Φ(x)wx − Cw − G(x)wx(0, t),
where the target state w is deﬁned as

(19)

 .



w1
w2
...
wn

w =

with boundary conditions

where the kernel matrix K(x, ξ) is given by



K(x, ξ) =

K 11(x, ξ) K 12(x, ξ)
K 21(x, ξ) K 22(x, ξ)

...

...

K n1(x, ξ) K n2(x, ξ)

. . . K 1n(x, ξ)
. . . K 2n(x, ξ)
...
. . . K nn(x, ξ)

...

(24)
Next we explain how to ﬁnd conditions for K(x, ξ) so that in
fact (19) holds.

3

 .

B. Finding the kernel equations

First we establish (12)–(15). To ﬁnd the equations that the
kernel matrix K(x, ξ) must verify, we take time and space
derivatives in (23)

(cid:90) x
(cid:90) x

0

wt = ut −
wx = ux −

∂x (Σ(x)wx) = ∂x (Σ(x)ux) −

0

Kut(ξ, t)dξ,
Kxu(ξ, t)dξ − K(x, x)u,

(25)

(26)

(cid:90) x

∂x (Σ(x)Kx) u(ξ, t)dξ

0

−∂x (Σ(x)K(x, x)u(x, t))
−Σ(x)Kx(x, x)u(x, t).

(27)

(20)

and substituting (1) and (19) inside (25) we ﬁnd

w(0, t) = 0,

w(1, t) = b(t),

(21)

−

whose stability properties will be studied in Section III-C. The
matrix G(x) appearing in (19) is a lower triangular matrix with
zero diagonal, i.e.,

 .



G =

0

g21(x)

...

0

0

...

g(n−1)1(x)

g(n−1)2(x)

. . .

. . .
...
. . .

0

0

...

0

0

0

...

0

gn1(x)

gn2(x)

. . .

gn(n−1)(x)

0

(22)
The values of the non-zero entries of G(x) are not arbitrary
and will be set later in the design.

The backstepping transformation that maps u into w is

deﬁned as

w(x, t) = u(x, t) −

(cid:90) x

0

∂x (Σ(x)wx) + Φ(x)wx − Cw − G(x)wx(0, t)

= ∂x (Σ(x)ux) + Φ(x)ux + Λ(x)u

(cid:90) x

K(x, ξ) [∂ξ (Σ(ξ)uξ(ξ, t)) + Φ(ξ)uξ(ξ, t)

0

+Λ(ξ)u(ξ, t)] dξ.

(28)

∂x (Σ(x)Kx) u(ξ, t)dξ − Σ(x)Kx(x, x)u(x, t)

Using now (26) and (27) we ﬁnd

(cid:90) x

0

−
−∂x (Σ(x)K(x, x)u(x, t)) −
−Φ(x)K(x, x)u − Cu(x, t) +
−G(x)ux(0, t)

(cid:90) x
(cid:90) x

0

0

(cid:90) x

Φ(x)Kxu(ξ, t)dξ

CKu(ξ, t)dξ

K(x, ξ)u(ξ, t)dξ,

(23)

0

+Λ(ξ)u(ξ, t)] dξ,

(29)

= Λ(x)u −

K [∂ξ (Σ(ξ)uξ(ξ, t)) + Φ(ξ)uξ(ξ, t)

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

4

and integrating by parts twice in the right-hand side integral
of (29) we ﬁnd

∂x (Σ(x)Kx) u(ξ, t)dξ − Σ(x)Kx(x, x)u(x, t)

0

−
−∂x (Σ(x)K(x, x)u(x, t)) −
−Φ(x)K(x, x)u − Cu(x, t) +
−G(x)ux(0, t)

(cid:90) x
(cid:90) x

0

0

Φ(x)Kxu(ξ, t)dξ

CKu(ξ, t)dξ

Proof: First we show the well-posedness result, which is
standard, by noticing that the right-hand side of (19) deﬁnes a
parabolic operator, the 0-th order compatibility conditions are
veriﬁed (due to the fact that w0(1) = b(0)), and w0 ∈ H 1.
Thus w ∈ L2(0, T ; H 2([0, 1])) and wt ∈ L2(0, T ; L2([0, 1])),
see any standard PDE textbook such as e.g. [7, p.382].
The trace terms wx(1, t) are not classically considered but
do not complicate the proof as they are as regular as the
differential operator. Now, to show the stability result, consider
the following Lyapunov functionals

(cid:90) x

(cid:90) x

(cid:90) 1
(cid:90) 1
(cid:90) 1

0

0

0

V1(t) =

V2(t) =

V3(t) =

1
2
1
2
1
2

wT Qwdx,

wT

x Qwxdx, ,

wT

xxQwxxdx,

(36)

(37)

(38)

where the space and time dependence of w has been omitted
for simplicity. The matrix Q is a square diagonal matrix, with
diagonal elements denoted as q1, . . . , qn and chosen positive,
so that q ≤ qi ≤ ¯q, so that Q > 0. It is obvious that V1 +
V2, is equivalent to the H 1 norm of u, i.e., K3(V1 + V2) ≤
(cid:107)u(x,·)(cid:107)H 1 ≤ K4(V1 + V2) for K3, K4 > 0.

Taking derivatives we obtain, for ˙V1,

˙V1 =

wT Q (∂x (Σ(x)wx)) dx

wT Q (Φ(x)wx − Cw − G(x)wx(0, t)) dx

wT

x QΣ(x)wxdx + bT (t)QΣ(1)wx(1, t)
wT QΦ(x)wxdx −

wT QCwdx

(cid:90) 1

wT QG(x)dx

0

wx(0, t)

(39)

(cid:19)

0

+

(cid:90) 1
(cid:90) 1
(cid:90) 1
(cid:90) 1
(cid:18)(cid:90) 1

+

0

0

0

−

0

= −

≤ Λ(x)u − K(x, x)Σ(x)ux(x, t) + K(x, 0)Σ(0)ux(0, t)
∂ξ (KξΣ(ξ)) u(ξ, t)dξ

+Kξ(x, x)Σ(x)u(x, t) −

0

+

KξΦ(ξ)u(ξ, t)dξ +
−K(x, x)Φ(x)u(x, t) −

KΦ(cid:48)(ξ)u(ξ, t)dξ

KΛ(ξ)u(ξ, t)dξ,

(30)

(cid:90) x
(cid:90) x
(cid:90) x

0

0

0

where the boundary condition of u at x = 0 has been used. We
separately collect the terms in (30) affecting u(x, t), ux(x, t),
ux(0, t) and in the integrals, reaching four equations that need
to be independently veriﬁed if (30) is to hold for any value of
u. These equations are as follows. First we ﬁnd a hyperbolic
matrix PDE

= KΛ(ξ) + CK − KΦ(cid:48)(ξ),

∂x (Σ(x)Kx) − ∂ξ (KξΣ(ξ)) + Φ(x)Kx + KξΦ(ξ)
(31)
where we have omitted the dependence of K(x, ξ). Next, we
ﬁnd three additional conditions

G(x) = −K(x, 0)Σ(0),
K(x, x)Σ(x) = Σ(x)K(x, x),

(32)
(33)

C + Λ(x) = −Σ(x)Kx(x, x) − ∂x (Σ(x)K(x, x))

−Φ(x)K(x, x) − Kξ(x, x)Σ(x)
+K(x, x)Φ(x).

(34)
Finally, using the structure of G given in (22) in the

boundary condition (33), we ﬁnd that, on the one hand,

Kij(x, 0) = 0,

∀j ≥ i,

which is the boundary condition explicitly named in (15), and
on the other hand,

gij(x) = −Kij(x, 0)j(0),

∀j < i,

which is the deﬁnition of the non-zero coefﬁcients of G(x).

C. Target system stability

The following result holds for the target system.

Proposition 1. The system (19) with boundary conditions (21)
and initial conditions w0 ∈ H 1, verifying w0(1) = b(0) and
with b, ˙b ∈ L2((0,∞]) has an unique solution w(·, t) ∈ H 1.
In addition, there exists a number c∗ depending only on the
coefﬁcients of the system so that if the coefﬁcients of C verify
ci ≥ c∗ + δ, for all i = 1, . . . , n, and for some δ > 0, then
the origin w ≡ 0 is exponentially stable in the H 1 norm, i.e.,

(cid:107)w(·, t)(cid:107)H 1 ≤ D1e−2δt(cid:107)w0(cid:107)H 1 + D3

(cid:16)(cid:107)b(cid:107)L2 + (cid:107)˙b(cid:107)L2

(cid:17)

.
(35)

Now, assuming that, for all x ∈ [0, 1], the coefﬁcients verify
the following bounds: (cid:107)Φ(x)(cid:107) ≤ p, c ≤ ci ≤ ¯c, |gij(x)| ≤ g,
where (cid:107) · (cid:107) is the matrix operator 2-norm. Then

˙V1 ≤ −2V2 + ¯¯q(cid:12)(cid:12)b(t)T wx(1, t)(cid:12)(cid:12) + 2p(V1 + V2)

|(cid:112)QLwx(0, t)|2,

−(2c − 1)V1 +

g2
2

where L is a lower triangular matrix with zero diagonal and
unity coefﬁcients, i.e.,



L =

 .

0

1

...

1

1

0

0

...

1

1

. . .

. . .
...
. . .

. . .

0

0

...

0

1

0

0

...

0

0

(40)

(41)

Similarly, taking derivative in V2 we obtain

Considering now V = V1 + V2, we obtain

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

˙V2 =

x Qwxtdx

wT

xxQwtdx + wT

x Qwt

(cid:12)(cid:12)1

0

= −

= −

= −

0

0

0

wT

(cid:90) 1
(cid:90) 1
(cid:90) 1
(cid:90) 1
(cid:90) 1
(cid:90) 1
(cid:18)(cid:90) 1

−

−

0

0

0

−

0

5

dx

˙V ≤ −V1 [2c − (2p + 1)]

−V2
−V3

+

+

g
2

¯q
2

(cid:19)(cid:19)(cid:21)

0

2

2

+

+

+

α2

α4

+ g

2p +

 −

p
α3

gα4
2

((1 + ¯c) + ¯)

(cid:18) ¯(cid:48)

pα3
2
x LT QLwx + wT
wT

2 + 2c −

(cid:20)
(cid:20)
(cid:18) 1

(cid:18)
(cid:18) α2¯(cid:48)
(cid:19)(cid:21)
(cid:19)(cid:90) 1
(cid:16)|˙b(t)| + |b(t)|(cid:17)(cid:115)
(cid:0)¯(cid:48)2 + p2(cid:1)(cid:17) − 2, K7 = ¯q2
(cid:17)
(cid:16)|˙b(t)|2 + |b(t)|2(cid:17)
(cid:90) 1

. Then:

x LT QLwx + wT

(cid:17)

+K7

wT

Choose now α2 = 

(cid:16) α2¯(cid:48)
(cid:16)

2 + gα4

2

2 + pα3
2p + 
4 + 3
K8 = g2

(cid:16) 1

2


3 + 1

˙V ≤ −V1 [2c − K5] − V2 [2c − K6] − 
4

V3

3 ¯p,α4 = 

3¯(cid:48) ,α3 = 

so that
< /2. Call K5 = 2p + 1, K6 =
2q ((1 + ¯c) + ¯)2,

3g

xxLT QLwxx

2
q

(V2 + V3), (49)

xxLT QLwxx

0

+K8

dx,(50)
4} (which only depends
and deﬁning c∗ = 1
on the bounds of Σ(x) and Φ(x)), we get that if c ≥ c∗ + δ,
we obtain

2 max{K5, K6 + 

2

(cid:16)|˙b(t)|2 + |b(t)|2(cid:17)

˙V ≤ −2δV + K7

(cid:90) 1

−

wT

x Rwx + wT

xxRwxx

(51)
4 Q − K8LT QL and D2 can be set as large as
where R = 
desired. Assume for the moment that R is deﬁnite positive.
Then, applying Gronwall’s inequality, we obtain

dx,

2

0

V ≤ V (0)

≤

e−2δt + K7
V (0)e−2δt + K7

0

(cid:90) t

e−2δ(t−τ )(cid:16)|˙b(τ )|2 + |b(τ )|2(cid:17)
(cid:16)(cid:107)b(cid:107)L2 + (cid:107)˙b(cid:107)L2

(cid:17)

,

dτ

(52)

and then the proposition is proved. It only remains to prove
that R can be made a positive deﬁnite matrix by adequately
choosing the coefﬁcients of Q. To see if this is possible, let us
check what is LT QL. First notice that (QL)ij = qi if j < i
and zero otherwise. Then

n(cid:88)

l=1

n(cid:88)

l=i+1

n(cid:88)

ql,

max{i,j}+1

(LT QL)ij =

Lli(QL)lj =

(QL)lj =

(53)
where the sum is considered to be zero if i = n and/or j =
n. Let us now prove by induction on the dimension n that
4 Q−K8LT QL can always be made positive deﬁnite.
R(Q) = 
Call Qn the matrix that we will ﬁnd for each dimension, and
n QnLn. For n = 1, since Q1 = q1 > 0 and M1 = 0,
Mn = LT
the result is obvious and q1 can be chosen arbitrarily. For
n > 1, we can construct both Qn and Mn from the previous

(cid:90) 1

xxQ (∂x (Σ(x)wx)) dx + wx(1, t)T Q˙b(t)
wT
xxQ (Φ(x)wx − Cw − G(x)wx(0, t)) dx
wT
(cid:90) 1
xxQΣ(x)wxxdx −
xxQΣ(cid:48)(x)wxdx
wT
wT
(cid:19)

x QCwxdx + wx(1, t)T QCb(t)

xxQΦ(x)wxdx

wT

wT

0

0

wT

xxQG(x)dx

wx(0, t).

(42)

+wx(1, t)T Q˙b(t) +

Therefore, deﬁning (cid:48)
bounds,

i(x) ≤ ¯(cid:48) and using the previously deﬁned

 −

(cid:18) α2¯(cid:48)
(cid:20)
(cid:19)
(cid:18) ¯(cid:48)
|(cid:112)QLwx(0, t)|2),

2
p
α3

pα3
2

V2 + ¯q

+

+

+

α2
g
2α4

(cid:19)(cid:21)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:16)˙b(t) + Cb(t)
(cid:17)T

gα4
2

V3 − 2cV2

(cid:12)(cid:12)(cid:12)(cid:12)

(43)

wx(1, t)

˙V2 ≤ −

+

+

for α2, α3, α4 > 0. Now we have the following inequality

|wx(1, t)|2 ≤ 2
q

(V2 + V3)

(44)

which is proven by considering that

[(x − 1)wx(x, t)]x dx,

(45)

(cid:90) 1

0

wx(1, t) =

therefore

|wx(1, t)| ≤

(cid:90) 1

0

[|wx(x, t)| + |wxx(x, t)|] dx,

(46)

which squared, gives the inequality. In a similar fashion, we
can prove that

(cid:12)(cid:12)(cid:12) ≤
(cid:12)(cid:12)(cid:12)(cid:112)QLwx(0, t)
thus(cid:12)(cid:12)(cid:12)(cid:112)QLwx(0, t)
(cid:12)(cid:12)(cid:12)2 ≤

(cid:90) 1

(cid:104)|(cid:112)QLwx| + |(cid:112)QLwxx|(cid:105)

dx, (47)

0

(cid:90) 1

0

wT

x LT QLwx + wT

xxLT QLwxx

2

dx,
(48)

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

6

(cid:34)

Qn−1 and Mn−1 as follows

Qn =

Qn−1

0

0
qn

, Mn =

(cid:35)

(cid:34)

Mn−1 + qnJn−1

0

(cid:35)

,

0

0

(54)
where Jn−1 is a square matrix of dimension n − 1 full
of ones. Assume now that R(Qn−1) is positive deﬁnite. In
particular this means that all the eigenvalues of R(Qn−1)
are positive, and since R is symmetric, they are also real.
Call λmin the smallest eigenvalue of a square matrix. Denote
µn−1 = λmin(R(Qn−1)) > 0. Choosing qn = µn−1
2K8(n−1), we
obtain

(cid:34) R(Qn−1) − µn−1

(cid:35)

,

2(n−1) Jn−1
0

0

µn−1

8K8(n−1)

(55)
and computing the eigenvalues of R(Qn), we obtain one
µn−1
8K8(n−1) > 0, plus the eigenvalues of
eigenvalue equal to
R(Qn−1) − µn−1
2(n−1) Jn−1. Now, from Weyl’s inequality [9, p.
239] we then have that

(cid:18)
R(Qn−1) − µn−1
2(n − 1)

λmin

(cid:19)

R(Qn) =

Jn−1

(cid:18) µn−1

2(n − 1)

(cid:19)

Jn−1

(56)

≤ λmin (R(Qn−1)) − λmin

=

µn−1

2

> 0,

where we have used that
the eigenvalues of Jn−1 are 0
(repeated n − 2 times) and n − 1 [9, p. 65]. Therefore the
newly formed R(Qn) > 0, and the proposition is proved.

D. Proof of Theorem 1

Assume for the moment that Theorem 2 holds and there is
a solution to the kernel equations such that the transformation
(23) is invertible and both the transformation and its inverse
map H 1 functions into H 1 functions. Consider now the
target system equation (19) with boundary conditions (21) and
initial conditions w0(x) given by applying the backstepping
transformation (23) to the initial conditions of u, u0(x), i.e.,

w0(x) = u0(x) −

K(x, ξ)u0(ξ)dξ.

(57)

(cid:90) x

0

Then, since u0 ∈ H 2, we have w0 in H 2. In addition, given
the deﬁnition of b(t) (see Equation 16), we have w0(1) = b(0),
and b, ˙b ∈ L2([0,∞)]. Thus the conditions for well-posedness
of Proposition 1 are fulﬁlled and we obtain well-posedness for
u in H 1 given the properties of the transformation. In addition
it is obvious that (cid:107)b(cid:107)L2 + (cid:107)˙b(cid:107)L2 ≤ D4e−α1t(cid:107)u0(cid:107)H 1. We then
obtain, if ci ≥ c∗ + δ,
(cid:107)u(·, t)(cid:107)H 1 ≤ K2(cid:107)w(·, t)(cid:107)H 1

(cid:16)(cid:107)b(cid:107)L2 + (cid:107)˙b(cid:107)L2

(cid:17)(cid:17)

D1e−2δt(cid:107)w0(cid:107)H 1 + D3

≤ K2
≤ K2(K1D1 + D4)e−D5t(cid:107)u0(cid:107)H 1 ,

(cid:16)

(58)

where D5 = min{α1, 2δ}. Thus Theorem 1 is proved.

IV. WELL-POSEDNESS OF THE KERNEL EQUATIONS

(PROOF OF THEOREM 2)

To prove Theorem 2, we are going to write the kernel
equations (12)–(15) in a different form. Then, we can use
Theorem A.1 of [11].
√

√
Σ(x)Kx(x, ξ) + Kξ(x, ξ)

Deﬁne ﬁrst

L(x, ξ) =

Σ(ξ)

+F1(x, ξ)K(x, ξ) + K(x, ξ)F2(x, ξ) (59)

√

where the functions F1 and F2 are to be found.

Σ(x)Lx − Lξ

Now, we compute

Σ(ξ) using (59). It is
worth noticing that the cross-derivatives of K cancel out and
the differential operator of (12) appear. Replacing its value
from (12), we obtain

√

√

√

Σ(x)Lx − Lξ

√

√

Σ(ξ)
= K(Λ(ξ) − Φ(cid:48)(ξ) − F2ξ
Σ(ξ) − F 2
2 )
Σ(x)F1x + F 2
1 )K
√
√
Σ(x)F1 − F1
+ Φ(x) −
√
Σ(ξ) −

(cid:18) Σ(cid:48)(x)
(cid:18) Σ(cid:48)(ξ)

+(C +
−

√

2

− Φ(ξ) − F2
√

Σ(x)KF2x − F1ξK

Σ(ξ)

2

+Kξ
√
+
−F1L + LF2

(cid:19)

Σ(x)

Kx

(cid:19)

Σ(ξ)F2

(60)

Now, F1 and F2 are chosen so that the second and third lines
of (60) cancel out. This is always possible [12], by deﬁning

(F1)ij =

(F2)ij =

δij
√

δij
√

,

√

(cid:48)
i(x)
2 + φij(x)
j(x)
2 − φij(ξ)
j(ξ)

i(x) +
(cid:48)
i(ξ)

i(ξ) +

√

,

(61)

(62)

√
√

and noticing that F1 only depends on x and F2 only depends
on ξ, the fourth line of (60) is also zero. Thus our original
n × n system (12) is replaced by a n2 × n2 system of ﬁrst-
order hyperbolic equation on the same domain T , namely
√
√
Σ(x)Kx + Kξ
Σ(x)Lx − Lξ

Σ(ξ) = L − F1(x)K − KF2(ξ), (63)
Σ(ξ) = KF3(ξ) + F4(x)K
−F1(x)L + LF2(ξ),
Σ(ξ) − F 2

where F3(ξ) = Λ(ξ) − Φ(cid:48)(ξ) − F2ξ
2 , F4(x) =
1 , which are virtually identical to the
C +
kernel equations appearing in [11] and [10] (there are some
differences in the right-hand side coefﬁcients, but they do
not affect the proofs). It remains to be seen if the boundary
conditions are the same.

Σ(x)F1x + F 2

(64)

√

√

To ﬁnd the boundary conditions for L, we need to analyze
separate cases depending on the position of each coefﬁcient
Lij and Kij in the kernel matrices L and K. First, (34),
namely K(x, x)Σ(x) = Σ(x)K(x, x) can be written as
Kij(x, x)(i(x) − j(x)) = 0. This condition is automatically
veriﬁed if i = j, otherwise Kij(x, x) = 0. This allows us to

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

write (33) as
0 = φij(x)Kjj(x, x) − φij(x)Kii(x, x) + λij(x) + δijci

+Kijξ(x, x)j(x) + i(x)Kijx(x, x)

+

d
dx

(i(x)Kij(x, x)) ,

(65)

and similarly, we can solve for Lij(x, x) in (63), ﬁnding

√

√

Lij(x, x) =

i(x)Kijx(x, x) +

j(ξ)Kijξ(x, x)

+Fij1(x)Kjj(x, x) + Fij2(x)Kii(x, x),(66)

If i = j, then (65) reduces to

0 = λii(x) + ci

+(cid:48)

d
dx
which integrates (combined with (15)) to

i(x)Kii(x, x) + 2i(x)

(cid:90) x

0

−1(cid:112)(x)

2(cid:112)(ξ)

λii(ξ) + ci

Kii =

In addition, (66) reduces to

(Kii(x, x)) ,

(67)

dξ

(68)

Lii(x, x) =

=

√

i(x)

d
dx

Kii(x, x)

+(Fii1(x) + Fii2(x))Kii(x, x)
√

Kii(x, x)

d
i(x)
dx
(cid:48)
√
i(x)
i(x)
√

2

+

Kii(x, x)

= − λii(x) + ci
i(x)

(69)
If i (cid:54)= j, then since Kij(x, x) = 0, we get Kijx(x, x) =
−Kijξ(x, x). Therefore we obtain, from (65),

2

,

0 = λij(x) + φij(x) (Kjj(x, x) − Kii(x, x))

and from (66),

+Kijx(x, x)(i(x) − j(x))

Lij(x, x) = Kijx(x, x)((cid:112)i(x) −(cid:113)
(cid:112)i(x) +(cid:112)j(x)

Kijx(x, x)(i(x) − j(x))

Lij(x, x) =

which combined gives us

+Fij1(x)Kjj(x, x) + Fij2(x)Kii,

j(x))

(70)

(71)

+Fij1(x)Kjj(x, x) + Fij2(x)Kii

= − λij + φij(x) (Kjj(x, x) − Kii(x, x))

(cid:112)i(x) +(cid:112)j(x)

+Fij1(x)Kjj(x, x) + Fij2(x)Kii

= −

(cid:112)i(x) +(cid:112)j(x)

λij

,

(72)

when introducing the deﬁnitions of F1 and F2. Thus we
are ﬁnally led to the following combination of boundary
conditions

• If i = j, then simply

Lii(x, x) = − λii(x) + ci

2(cid:112)i(x)

Kii(x, 0) = 0,

,

(73)

(74)

7

(75)

(76)

(77)

(78)
(79)

• If i < j then

Kij(x, x) = Kij(x, 0) = 0,
Lij(x, x) = −
λij(x)

(cid:112)i(x) +(cid:112)j(x)

,

• Finally if i > j and i (cid:54)= j then

Kij(x, x) = 0,
Kij(1, ξ) = lij(ξ),
Lij(x, x) = −

(cid:112)i(x) +(cid:112)j(x)

λij(x)

,

(80)
and the additional condition gij(x) = −Kij(x, 0)j(0).
It must be noticed that (79) are additional arbitrary conditions
that are introduced for the kernel equations to be well-posed.
These functions lij(ξ) cannot be arbitrary, but need to verify
certain compatibility conditions in the corner ξ = 1 for the
kernels to be piecewise differentiable (see [11] for details).

Comparing these boundary conditions with those veriﬁed by
the kernels in [11] and [10], we can see that they are exactly
the same (it must be noted than in the second of these papers
the nomenclature for K and L is the opposite). Thus the results
in these papers apply, and we obtain a piecewise differentiable
and invertible kernel which can be readily veriﬁed to transform
H 1 functions into H 1 functions.

V. CONCLUSION

This paper presents an extension of

the backstepping
method to coupled parabolic systems with advection terms and
spatially-varying coefﬁcients. The result is more general than
a recently published extension that only considered constant-
coefﬁcient coupled reaction-diffusion systems.

Interestingly, the basis of the result is ﬁnding an equivalence
between the kernel equations for this case and the kernel
equations for general hyperbolic 1-D coupled systems, which
have recently been established to be well-posed and piecewise
differentiable. Thus, this paper unveils a direct connection
between backstepping controllers for parabolic and hyperbolic
systems.

Future work includes considering Neumann or Robin
boundary conditions, which leads to slightly different kernel
equations, and observer design, which will allow to consider
output-feedback controllers.

REFERENCES

[1] H. Anﬁnsen and O.M. Aamo, “Disturbance Rejection in the Interior
Domain of Linear 2 2 Hyperbolic Systems,” IEEE Transactions on
Automatic Control, vol. 60, pp.186–191, 2015.

[2] A. Baccoli, A. Pisano, Y. Orlov, “Boundary control of coupled reaction-
diffusion processes with constant parameters,” Automatica, vol. 54, pp.
80–90, 2015.

[3] V. Barbu, “Boundary Stabilization of Equilibrium Solutions to Parabolic
Equations,” IEEE Transactions on Automatic Control, vol. 58, pp. 2416–
2420, 2013.

[4] E. Cerpa and J.-M. Coron, “Rapid stabilization for a Korteweg-de
Vries equation from the left Dirichlet boundary condition,” IEEE Trans.
Automat. Control, Vol. 58, pp. 1688–1695, 2013.
[5] J.-M. Coron, R. Vazquez, M. Krstic, and G. Bastin, “Local Exponential
H 2 Stabilization of a 2 × 2 Quasilinear Hyperbolic System using
Backstepping,” SIAM J. Control Optim., vol. 51, pp. 2005–2035, 2013.

IEEE TRANSACTIONS ON AUTOMATIC CONTROL

8

Miroslav Krstic (S’92-M’95-SM’99-F’02) holds
the Alspach endowed chair and is the founding
director of the Cymer Center for Control Systems
and Dynamics at UC San Diego. He also serves as
Associate Vice Chancellor for Research at UCSD.
As a graduate student, Krstic won the UC Santa
Barbara best dissertation award and student best
paper awards at CDC and ACC. Krstic is Fellow
of IEEE, IFAC, ASME, SIAM, and IET (UK),
Associate Fellow of AIAA, and foreign member
of the Academy of Engineering of Serbia. He has
received the PECASE, NSF Career, and ONR Young Investigator awards, the
Axelby and Schuck paper prizes, the Chestnut textbook prize, the ASME
Nyquist Lecture Prize, and the ﬁrst UCSD Research Award given to an
engineer. Krstic has also been awarded the Springer Visiting Professorship at
UC Berkeley, the Distinguished Visiting Fellowship of the Royal Academy of
Engineering, the Invitation Fellowship of the Japan Society for the Promotion
of Science, and the Honorary Professorships from the Northeastern University
(Shenyang) and the Chongqing University, China. He serves as Senior Editor
in IEEE Transactions on Automatic Control and Automatica, as editor of
two Springer book series, and has served as Vice President for Technical
Activities of the IEEE Control Systems Society and as chair of the IEEE CSS
Fellow Committee. Krstic has coauthored eleven books on adaptive, nonlinear,
and stochastic control, extremum seeking, control of PDE systems including
turbulent ﬂows, and control of delay systems.

[6] F. Di Meglio, R. Vazquez, and M. Krstic, “Stabilization of a system of
n+1 coupled ﬁrst-order hyperbolic linear PDEs with a single boundary
input,” IEEE Transactions on Automatic Control, PP, 2013.

[7] L.C. Evans, Partial Differential Equations, AMS, Providence, Rhode

Island, 1998.

[8] A. Hasan, “Disturbance Attenuation of n+1 Coupled Hyperbolic PDEs,”
Systems & Control Letters, 2014 IEEE Conference on Decision and
Control, 2014.

[9] R.A. Horn and C.R. Johnson, Matrix Analysis, 2nd Edition, Cambridge

University Press, New York, 2013.

[10] L. Hu, F. Di Meglio, R. Vazquez, and M. Krstic,“Control of Homodirec-
tional and General Heterodirectional Linear Coupled Hyperbolic PDEs,”
Preprint, available at http://arxiv.org/abs/1504.07491,2015.

[11] L. Hu, R. Vazquez, F. Di Meglio, and M. Krstic,“Boundary exponential
stabilization of 1-D inhomogeneous quasilinear hyperbolic systems,”
Preprint, available at http://arxiv.org/abs/1512.03539,2015.
[12] A. Jameson, SIAM J. Appl. Math., “Solution of equation AX+XB = C
by inversion of an M ×M or N ×N matrix,” Vol. 16, No. 5, pp. 1020–
1023, 1968.

[13] M. Krstic and A. Smyshlyaev, Boundary Control of PDEs, SIAM, 2008
[14] M. Krstic, Delay Compensation for nonlinear, Adaptive, and PDE

Systems, Birkhauser, 2009.

[15] M. Krstic and A. Smyshlyaev, “Backstepping boundary control for ﬁrst
order hyperbolic PDEs and application to systems with actuator and
sensor delays,” Syst. Contr. Lett., vol. 57, pp. 750–758, 2008.

[16] W. Liu, Elementary feedback stabilization of

the linear reaction-

convection-diffusion equation and the wave equation, Springer, 2009.

[17] T. Meurer and A. Kugi, “Tracking control for boundary controlled
parabolic PDEs with varying parameters: Combining backstepping and
differential ﬂatness,” Automatica, vol. 45, pp. 1182–1194, 2009.

[18] S.J. Moura and H.K. Fathy, “Optimal Boundary Control of Reaction-
Diffusion Partial Differential Equations via Weak Variations,” Journal of
Dynamic Systems, Measurement, and Control, vol 135, 034501, 2013.
[19] J. Qi, R. Vazquez and M. Krstic, “Multi-Agent Deployment in 3-D via
PDE Control,” IEEE Transactions on Automatic Control, in Press, 2015.
[20] A. Smyshlyaev, E. Cerpa, and M. Krstic, “Boundary stabilization of a 1-
D wave equation with in-domain antidamping,” SIAM J. Control Optim.,
vol. 48, pp. 4014–4031, 2010.

[21] A. Smyshlyaev and M. Krstic, Adaptive Control of Parabolic PDEs,

Princeton University Press, 2010.

[22] R. Vazquez and M. Krstic, Control of Turbulent and Magnetohydrody-

namic Channel Flow. Birkhauser, 2008.

[23] R. Vazquez and M. Krstic, “Control of 1-D parabolic PDEs with Volterra
nonlinearities — Part I: Design,” Automatica, vol. 44, pp. 2778–2790,
2008.

[24] R. Vazquez and M. Krstic, “Boundary observer for output-feedback
stabilization of thermal convection loop,” IEEE Trans. Control Syst.
Technol., vol.18, pp. 789–797, 2010.

[25] R. Vazquez and M. Krstic. Marcum Q-functions and explicit kernels
for stabilization of linear hyperbolic systems with constant coefﬁcients.
Systems & Control Letters , 68:33–42, 2014

[26] R. Vazquez and M. Krstic, “Boundary Control of Reaction-Diffusion
PDEs on Balls in Spaces of Arbitrary Dimensions,” Preprint, available
online at http://arxiv.org/abs/1511.06641, 2015.

[27] R. Vazquez, E. Trelat and J.-M. Coron, “Control for fast and stable
laminar-to-high-Reynolds-numbers transfer in a 2D navier-Stokes chan-
nel ﬂow,” Disc. Cont. Dyn. Syst. Ser. B, vol. 10, pp. 925–956, 2008.

Rafael Vazquez (S’05-M’08-SM’15) received the
M.S. and Ph.D. degrees in aerospace engineering
from the University of California, San Diego (USA),
and degrees in electrical engineering and mathemat-
ics from the University of Seville (Spain). He is an
Associate Professor in the Aerospace Engineering
and Fluid Mechanics Department at the University
of Seville, where he is currently Chair of the De-
partment. His research interests include control the-
ory, distributed parameter systems, and optimization,
with applications to ﬂow control, ATM, UAVs, and
orbital mechanics. He is coauthor of the book Control of Turbulent and
Magnetohydrodynamic Channel Flows (Birkhauser, 2007). He currently serves
as Associate Editor for Automatica.

