6
1
0
2

 
r
a

 

M
6
1

 
 
]

Y
S
.
s
c
[
 
 

1
v
0
0
2
5
0

.

3
0
6
1
:
v
i
X
r
a

Multi-Vehicle Collision Avoidance via Hamilton-Jacobi Reachability and

Mixed Integer Programming

Mo Chen*, Chia-Yin Shih*, and Claire J. Tomlin

Abstract— Multi-agent differential games are important and
useful tools for analyzing many practical problems, such as air
trafﬁc management and multi-vehicle collision avoidance. With
the recent surge of interest in using UAVs for civil purposes,
the importance and urgency of developing tractable multi-
agent analysis techniques that provide safety and performance
guarantees is at an all-time high. Hamilton-Jacobi (HJ) reach-
ability has successfully provided safety guarantees to small-
scale systems and is ﬂexible in terms of system dynamics.
However, the exponential complexity scaling of HJ reachability
prevents its direct application to large scale problems when
the number of vehicles is greater than two. In this paper, we
overcome the scalability limitations of HJ reachability by using
a mixed integer program that exploits the properties of HJ
solutions to provide higher-level control logic. Our proposed
method provides safety guarantee for three-vehicle systems –
a previously intractable task for HJ reachability – without
incurring signiﬁcant additional computation cost. Furthermore,
our method is scalable beyond three vehicles and performs
signiﬁcantly better by several metrics than an extension of
pairwise collision avoidance to multi-vehicle collision avoidance.
We demonstrate our proposed method in simulations.

I. INTRODUCTION

From projects such as Amazon Prime Air and Google
Project Wing to other recent uses of unmanned aerial vehicles
(UAVs), there is without a doubt an immense interest in
using UAVs for civil purposes [1], [2], [3], [4]. Potential uses
of UAVs include package delivery, aerial surveillance, and
disaster response [5]; future applications of UAVs are only
limited by imagination. As a result, government agencies
such as the Federal Aviation Administration (FAA) and the
National Aeronautics and Space Administration (NASA) are
urgently trying to determine UAV-related regulations [6], [7].
Multi-agent systems involve aspects of cooperation and
asymmetric goals among the agents, and has been extensively
studied. In [8], [9], the authors assume that the vehicles
will employ certain simple control strategies which induce
velocity obstacles that must be avoided in order to maintain
safety. Other approaches involved using potential functions
to ensure collision avoidance while multiple agents maintain
formation to travel along pre-speciﬁed trajectories [10], [11].
Although these and other approaches provide valuable insight
to multi-agent systems, they do not ﬂexibly offer the safety
guarantees that are highly desirable in safety-critical systems.

This work has been supported in part by NSF under CPS:ActionWebs
(CNS-931843), by ONR under the HUNT (N0014-08-0696) and SMARTS
(N00014-09-1-1051) MURIs and by grant N00014-12-1-0609, by AFOSR
under the CHASE MURI (FA9550-10-1-0567). The research of M. Chen
has received funding from the “NSERC PGS-D” Program.

* Both authors contributed equally to this work. All authors are with the
Department of Electrical Engineering and Computer Sciences, University of
California, Berkeley. {mochen72,cshih,tomlin}@berkeley.edu

Multi-agent systems have been extensively studied in the
context of differential games, which are ideal for addressing
safety-critical problems such as the ones involving UAVs we
now urgently face, because of the safety and performance
guarantees that differential game approaches can provide.
The HJ formulation of differential games has been studied
extensively and successfully applied to small-scale problems
involving one or two vehicles [12], [13], [14], [15]. Besides
providing safety guarantees, perhaps the most appealing
feature of HJ-based methods is its ﬂexibility in terms of the
system dynamics. Unfortunately, the computation complexity
of HJ-based methods scales exponentially with the number
of vehicles in the system, making their direct application to
multi-vehicle problems intractable.

Many attempts have also been made to use differential
games to analyze larger-scale problems. For example, in
works such as [16], [17], [18], the authors discuss vari-
ous classes of three-player differential game with different
assumptions on the role of each agent in non-cooperative
settings. For even larger systems, [19], [20], [21], [22]
provide promising results when varying degrees of structural
assumptions can be made about
the multi-agent system.
However, none of these attempts at providing guarantees
address the problem of unstructured ﬂight, which may be
important in some situations. In addition, having stronger
safety guarantees in unstructured environments has the po-
tential to make structured ﬂight of UAVs more resilient to
unforeseen circumstances.

In this paper, we build on the HJ-based method for guar-
anteeing safety when no more than two vehicles are present.
We augment the HJ-based method with a higher-level joint
cooperative control strategy using a mixed integer program
(MIP) inspired by the properties of the pairwise safety
guarantee. Our proposed MIP scales well with the number
of vehicles, provides safety guarantees for three vehicles,
and results in signiﬁcantly better performance for multi-
vehicle systems in general. We provide a proof for the safety
guarantee in a three-vehicle system, and illustrate the safety
guarantee and performance beneﬁts through simulations of
multi-vehicle systems in various conﬁgurations.

II. PROBLEM FORMULATION

Consider N vehicles, denoted Qi, i = 1, 2, . . . , N, de-
scribed by the following ordinary differential equation (ODE)

˙xi = fi(xi, ui),
ui ∈ Ui

i = 1, . . . , N

(1)

where xi ∈ Rni is the state of the ith vehicle Qi, and ui is
the control of Qi. Each of the N vehicles may have some
objective, such as getting to a set of goal states. Whatever the
objective may be, each vehicle Qi must at all times avoid the
danger zone Zij with respect to each of the other vehicles
Qj, j = 1, . . . , N, j (cid:54)= i. In general, the danger zones Zij
may represent any relative conﬁguration between Qi and Qj
that are considered undesirable, such as collision.

If possible and desired, each vehicle would use a “liveness
controller” that helps them complete its objective. However,
sometimes a “safety controller” must be used in order to
ensure no relative conﬁgurations enter the danger zones.
Since the danger zones Zij are sets of joint conﬁgurations, it
is convenient to derive the set of relative dynamics between
every vehicle pair from the dynamics of each vehicle speci-
ﬁed in (1). Let the relative dynamics between Qi and Qj be
speciﬁed by the following ODE:

˙xij = gij(xij, ui, uj),
ui ∈ Ui, uj ∈ Uj

i, j = 1, . . . , N, i (cid:54)= j

(2)

We assume the functions fi and gij are uniformly con-
tinuous, bounded, and Lipschitz continuous in arguments xi
and xij respectively for ﬁxed ui and (ui, uj) respectively.
In addition, the control functions ui(·) ∈ Ui are drawn from
the set of measurable functions1.

Given the vehicle dynamics in (1), some joint objective,
the derived relative dynamics in (2), and the danger zones
Zij, i, j = 1, . . . , N, i (cid:54)= j, we propose a cooperative safety
control strategy that performs the following:

1) detect potential conﬂict based on the joint conﬁgura-

tion of all N vehicles;

2) allow vehicles that are not

in potential conﬂict
complete their objective using a liveness controller;

to

3) among the vehicles in potential conﬂict, attempt to
minimize the number of instances in which a vehicle
gets into another vehicle’s danger zone.

For the case of N = 3, we prove that our proposed control
strategy guarantees that all vehicles will be able to stay out
of all the danger zones with respect to the other vehicles,
and thus guaranteeing safety. For all initial conﬁgurations in
our simulations, all vehicles also complete their objectives.

III. METHODOLOGY

Our proposed method builds on HJ reachability theory,
which in the case of N = 2 guarantees no vehicle will
enter another vehicle’s danger zone and that the vehicles will
eventually complete their joint objective [13]. Although HJ
reachability generalizes to multi-vehicle systems in theory,
it becomes computationally intractable for N > 2. To
provide the same guarantees for N = 3, we propose an
MIP motivated by the properties of the HJ pairwise solution
to specify a higher level control
logic. While unable to
1A function f : X → Y between two measurable spaces (X, ΣX ) and
(Y, ΣY ) is said to be measurable if the preimage of a measurable set in
Y is a measurable set in X, that is: ∀V ∈ ΣY , f−1(V ) ∈ ΣX, with
ΣX , ΣY σ-algebras on X,Y .

provide hard guarantees for N > 3, our proposed method is
computationally tractable for much larger N, and performs
signiﬁcantly better than applying an extension of the pairwise
HJ reachability solution when N > 3.

A. Hamilton-Jacobi Reachability

HJ reachability has been studied extensively [13], [14],
[23], [24], [25] and found many successful applications [13],
[15], [20], [26]. We will give a brief overview here. Consider
a system with state z ∈ Rn that evolves according to the
ODE involving the control u and disturbance d

˙z = f (z, u, d)
u ∈ U, d ∈ D

(3)

In the reachability problem, we are interested in deter-
mining the backwards reachable set (BRS) V(T ), the set of
states from which there exists no control, in the worst case
disturbance (non-anticipative, see [13]), that can keep the
system from entering some ﬁnal set L within a time horizon
T . If we deﬁne the ﬁnal set L as the sub-zero level set of
an implicit surface function l(z), L = {z ∈ Rn : l(z) ≤ 0},
the BRS V(T ) can be obtained as the sub-zero level set of
the viscosity solution V (t, z) [27] of the following terminal
value HJ PDE:

DtV (t, z) + min{0, max

d∈D DzV (t, z) · f (z, u, d)} = 0

u∈U min

t ∈ [−T, 0]
V (0, z) = l(z)

(4)
Reachability theory, as well as our proposed application
of it, is valid for any time horizon T ; however, for clarity,
we will let T → ∞ in this paper, and denote the BRS as
V = {z ∈ Rn : limt→∞ V (t, z) ≤ 0}. We will also use a
slight abuse of notation and write V (z) = limt→∞ V (t, z).
In this case, the complement of the BRS is a control-
invariant set: starting from any state outside of the BRS, there
exists a control to forever keep the system from entering the
BRS, and hence the ﬁnal set. The optimal control that keeps
the system out of the BRS is given by

u∗ = arg max

d∈D DzV (z) · f (z, u, d)

u∈U min

(5)

Applying the above theory to the relative dynamics given
in (2), we deﬁne the ﬁnal set lij(xij) to correspond to
the danger zone Zij = {xij
: lij(xij) ≤ 0}. From the
perspective of the ith vehicle Qi, the region of imminent
danger with respect to Qj would be Vij, represented by the
sub-zero level set of Vij(xij) = limt→∞ Vij(t, xij), where
Vij(t, xij) satisﬁes

DtVij(t, xij)+
min{0, max
ui∈Ui

min
uj∈Uj

Dxij Vij(t, xij) · fij(xij, ui, uj)} = 0

Vij(0, xij) = lij(xij)

(6)

If Qi

is far from all imminent danger zones Vij, j =
1, . . . , N, j (cid:54)= i, Qi is free to use a liveness controller to
make progress towards its objective. If Qi is near but outside
Vij for a single j, then danger can be averted, regardless of
the action of Qj, by using the control

min
uj∈Uj

Dxij Vij(xij) · fij(xij, ui, uj)

u∗
(7)
ij = arg max
ui∈Ui
If Qi is near Vij for more than one j, then the pairwise
solution presented so far cannot guarantee safety. However,
in this case, our proposed cooperative control strategy, which
uses a MIP to provide a higher level control logic, can
provide safety guarantees for the N = 3 case.

B. The Mixed Integer Program

For the N > 2 case, we use an MIP to provide higher level
control logic to synthesize a cooperative safety controller. We
ﬁrst note two properties of the pairwise solution:

1) If every vehicle pair can stay out of each other’s
imminent danger zones,
then the entire set of N
vehicles would be out of each other’s imminent danger
zones.

2) Since the solution is pairwise, the safety controller
derived from HJ reachability can only guarantee that
some vehicle i can avoid the imminent danger zone
with respect to a single other vehicle j.

Intuitively, a higher level control logic is needed to provide
a far-sighted avoidance maneuver; without this high level
logic, pairwise avoidance maneuvers between two vehicles
Qi and Qj may lead to unavoidable dangerous conﬁgurations
with respect to a third vehicle Qk.
Deﬁnition 1: Control logic matrix: Let ˆU ∈ {0, 1}N×N
be the control logic matrix specifying the joint cooperative
control of the N vehicles. Denote the element of ˆU in
position (i, j) to be ˆuij. If ˆuij = 1, then the control logic
stipulates that vehicle Qi must execute the pairwise optimal
control to avoid vehicle Qj.
Deﬁnition 2: Reward coefﬁcient matrix: Let C ∈
RN×N be the reward coefﬁcient matrix with elements cij.
Each cij speciﬁes the “reward” for choosing to have vehicle
i avoiding vehicle j, or in other words, choosing ˆuij = 1.

Motivated by the above two properties, and using the

above deﬁnitions, we arrive at the following MIP:

max
ˆuij

cij ˆuij

(cid:88)
(cid:88)

i,j

subject to ˆuij + ˆuji ≤ 1 ∀i, j, i (cid:54)= j
∀i
∀i, j, i (cid:54)= j

ˆuij ≤ 1
ˆuij ∈ {0, 1}

j

(8)

(8a)

(8b)

(8c)

At a given time, the vehicles’ joint state determines C,
which forms the objective of (8). Thus, the interpretation
of the objective of (8) depends on the choice of the reward
coefﬁcient matrix C. A large cij encourages ˆuij to be 1,
causing vehicle Qi
to avoid Qj. The decision variables

consist of the elements of ˆU, which provides the high level
control logic. This is captured by constraint (8c).

The pairwise HJ optimal control guarantees that a vehicle
to another vehicle Qj
Qi can remain safe with respect
regardless of the action of Qj. Therefore,
in every pair
(Qi, Qj), if either Qi or Qj is avoiding the other, there is
no need for the other vehicle to also be avoiding the ﬁrst.
The constraint (8a) states that out of every vehicle pair, at
most one vehicle should avoid the other so that no control
authority is wasted by having both vehicles avoid each other.
The other vehicle then could use its control authority to avoid
a third vehicle with whom it may come into conﬂict.

Finally, since the control logic ultimately results in ve-
hicles performing pairwise optimal controls, each vehicle is
only guaranteed to be able to avoid at most one other vehicle.
The constraint (8b) encodes this limitation.

C. Design of the Objective Function

The objective function in (8) can be designed by choosing
the reward coefﬁcient matrix C. In general, there may be
many choices for C, and the general guiding principle in
choosing C is that it should depend on the vehicles’ safety
levels and avoidance priority; both concepts are deﬁned
below. In this paper, we propose one particular choice of C
that allows us to prove safety guarantees for three vehicles.
Given the form of the objective function, the ﬁrst obvious
choice for some of the elements of C would be cii =
−∞,∀i. This forces ˆuii = 0 ∀i, which states that a vehicle
Qi does not need to avoid itself. Before designing the rest
of C, we need to deﬁne the notion of a safety level.

Deﬁnition 3: Safety level: Given xij, the state of vehicle
Qi with respect to vehicle Qj, deﬁne the safety level to be
Vij(xij), the viscosity solution of (6) evaluated at the relative
state xij. For convenience, let sij = Vij(xij).
Qi chooses the control u∗

Proposition 1: Suppose sij > 0 at some time t = t0. If
i given in (7), then sij > 0 ∀t > t0.
Proof: Based on the deﬁnition of safety level and the
deﬁnition of Vij(t, xij), we have that if sij > 0 at t = t0,
then the control u∗
i given in (7) guarantees that sij > 0 for
some ﬁnite duration. In this paper, we assumed an inﬁnite
time horizon for (6); thus, applying u∗
i would imply sij > 0
for all time.

Corollary 1: Between the pair (Qi, Qj), if either sij > 0
or sji > 0 (or both), then there exists a joint control strategy
(ui, uj) to ensure neither vehicle enters the danger zone of
the other. In other words, safety can be guaranteed.
If sij > 0, then safety is guaranteed if Qi
i , given in (7), to avoid Qj. If sij ≤ 0,
chooses ui = u∗
then sji > 0. In this case, simply swap the indices i and j
and apply the control in (7) to guarantee safety.

Proof:

Let K be a safety level threshold. We say Qi is in potential
conﬂict with Qj if sij < K. Based on this safety level
threshold, we set cij = −1 whenever sij > K. So far, we
have cij = −∞ whenever i = j and cij = −1 whenever
sij > K. The rest of the values of C are derived from the
priority matrix, deﬁned below.

Deﬁnition 4: Priority matrix: Let P ∈ {1, 2, . . . , N 2 −
N}N×N be a priority matrix with elements pij. The priority
matrix establishes an avoidance order for the vehicles.
The diagonal elements of P can be arbitrarily set (denoted
∗). The rest of the elements are assigned in descending
order according to Sarrus’ rule [28] (for determining cross
products). For example, in the cases of N = 3 and N = 4,

∗

6
∗
2
4 1



3
5
∗

(for N = 3)

P =

P =

∗

3
6
9



4
7
10
∗

8
11
∗
1

12
∗
2
5
(for N = 4)

A large value of pij indicates that Qi should avoid Qj
with a high priority. In order to impose such a priority when
constructing a joint cooperative safety control strategy, we
ij whenever sij ≤ K. For example, if N = 3 and
set cij = p2
sij ≤ K ∀i, j, then we would have

As another example, if N = 3, sij ≤ K ∀i, j except

s13, s32 > K, then we would have

4
16

−∞ 36
−∞ 36

4
16

C =

C =

9
−∞ 25
−∞
1

−1
−∞ 25
−1 −∞




Remark 1: Avoidance priority is an important notion for
guaranteeing safety even when N = 2. Consider the scenario
where vehicle Qi applies the control u∗
i to avoid Qj, but Qj
does not try to avoid Qi. As long as Qi continues to avoid
Qj, the two vehicles can avoid each other’s danger zones.
While Qi is avoiding Qj, sij is guaranteed to remain
positive; however, since Qj is not avoiding Qi, sji could
become negative. If sji < 0, safety can only be guaranteed
if Qi keeps avoiding Qj. The avoidance priority ensures that
some Qj never tries to avoid Qi when sji < 0. Instead, the
responsibility of avoidance would remain with Qi, which
continues to avoid Qj to ensure sij > 0.

IV. SAFETY GUARANTEE FOR THREE VEHICLES

The method for constructing a joint safety controller
described in Section III guarantees safety when N = 3. We
now formally states this guarantee and prove the result.
Theorem 1: Suppose N = 3. If s12, s23, s31 ≥ 0 at some
time t = t0, then the joint control strategy from the MIP
(8) with the reward coefﬁcient matrix elements cij chosen in
Section III-C guarantees that s12, s23, s31 ≥ 0 ∀t > t0.
It sufﬁces to show that 0 ≤ s12, s23, s31 ≤ K
at t = t0 implies s12, s23, s31 ≥ 0 ∀t > t0.
Suppose 0 ≤ s12 ≤ K. Then c12 = 36. From the objective
of (8), ˆu12 would be chosen to be 1 unless another feasible
solution in which ˆu12 = 0 results in a higher objective value.
Due to (8a) and (8b), the only way for the optimal solution
to have ˆu12 = 0 is to have ˆu13 = 1 or ˆu21 = 1.

Proof:

(9)

(10)

(11)

There are several cases of C to go through, with each case
having different elements of C being equal to −1. We show
one case here; the rest of the cases follow a similar logic.
Assume C is given in (10). Then, since cij > 0 ∀i, j, i (cid:54)=
j, the optimal solution would have as many elements of ˆU
being 1 as possible (except for diagonal elements).

Suppose ˆu21 = 1,

then by (8a), ˆu12 = 0 and by
(8b), ˆu23 = 0. This leaves us with the freedom to choose
ˆu13, ˆu31, ˆu32. Since C31 = 16 > 9+1 = C13+C32, choosing
ˆu31 = 1, ˆu13 = ˆu32 = 0 would maximize the objective. This
gives us the candidate solution ˆu21 = 1, ˆu31 = 1 and the rest
of the ˆuij being 0, with an objective value of 4 + 16 = 20.
However, choosing ˆu12 = 1 alone would already result in an
objective value of at least C12 = 36; therefore, ˆu21 (cid:54)= 1.

Next, suppose ˆu13 = 1, then by (8a), ˆu12 = 0 and by
(8b), ˆu31 = 0. This leaves us with the freedom to choose
ˆu21, ˆu23, ˆu32. Since C23 = 25 > 4+1 = C21+C32, choosing
ˆu23 = 1, ˆu21 = ˆu32 = 0 would maximize the objective. This
gives us the candidate solution ˆu13 = 1, ˆu23 = 1 and the rest
of the ˆuij being 0, with an objective value of 9 + 25 = 34.
However, choosing ˆu12 = 1 alone would already result in an
objective value of at least C12 = 36; therefore, ˆu13 (cid:54)= 1.
This leaves us with ˆu12 = 1 whenever 0 ≤ s12 ≤ K. By
a similar argument, one can show that ˆu23 = 1 whenever
0 ≤ s23 ≤ K, and ˆu31 = 1 whenever 0 ≤ s31 ≤ K.

Remark 2: Alternatively, one could enumerate all feasible
solutions for every possible choice of C, and discover the
same result stated in Theorem 1. We have also taken this
brute force approach to verify the above proof.

Corollary 2: By Theorem 1 and Corollary 1, if N = 3 and
each vehicle Qi uses the optimal pairwise safety controller
given in (7) with respect to Qj whenever ˆuij = 1, then no
vehicle will ever get into another vehicle’s danger zone.

V. PERFORMANCE CONSIDERATIONS

The MIP given in (8) and the reward coefﬁcient matrix C
designed in Section III-C provides higher level control logic
over the pairwise avoidance controller in order to guarantee
safety for three vehicles. When N > 3, heuristics can be used
to improve the joint controller’s safety and performance. We
present one heuristic in Section V-A and prove that it still
guarantees safety when N = 3 in Section V-B.

A. Simultaneous Avoidance of Multiple Vehicles (SAMV)

ij = u∗

This heuristic takes advantage of the situation in which
the optimal control of a vehicle Qi for avoiding Qj is the
same as the optimal control for avoiding a different vehicle
Qk: u∗
ik. In this case, it may be preferable that vehicle
Qi avoids both Qj and Qk at once, rather than avoiding
a single other vehicle, say Ql. To capture this, we need to
modify the reward coefﬁcient matrix C. First, we need to
deﬁne the potential conﬂict set and the common control set:
Deﬁnition 5: Potential conﬂict set: Deﬁne the potential
conﬂict set Ji for Qi as the set of indices j such that the
safety level of Qi with respect to Qj is below K:

Ji =

j ∈ {1, 2, . . . , N} : sij ≤ K

(12)

(cid:110)

(cid:111)

Deﬁnition 6: Common control set: Given a control u for
vehicle Qi, let the common control set Ai(u) denote the set
of vehicle indices j such that u is the optimal control for
vehicle Qi to avoid Qj according to (7):

Ai(u) =

a ∈ Ji :

u = arg max
ui∈Ui

min
ua∈Uj

(cid:111)
Dxia Via(xia) · fia(xia, ui, ua)

(cid:110)

(13)
Given Ji and Ai(u), we modify the reward coefﬁcient

matrix C by replacing cij as follows:

cij ← (cid:88)

cia,∀i,∀u

a∈Ai(u)

(14)
As an example, suppose N = 3 and J1 = {2, 3}. This
means that vehicle Q1 is in potential conﬂict with both
of the other two vehicles in the sense that s12, s13 ≤ K.
Further, suppose that A1(¯u) = {2, 3}, which indicates ¯u is
the optimal control for Q1 to avoid Q2 and Q3. Then, the
replacements c12 ← c12 + c13 and c13 ← c12 + c13 would be
made in the matrix C. If C is given in (10) before considering
the sets A1(¯u), then the resulting modiﬁed reward coefﬁcient
matrix ˆC after making the above replacements would be

−∞ 45

4
16

45
−∞ 25
−∞
1



ˆC =

(15)

Intuitively, such a modiﬁcation to C encourages vehicles
to avoid multiple vehicles at once whenever the joint con-
ﬁguration of the vehicles makes it possible. In doing so, the
vehicles being avoided are then free to perform other actions
such as avoiding other vehicles. In the example above, both
c12 and c13 became higher in value as well as equal to each
other, so that the solution of (8) favors choosing ˆu12 = 1 or
ˆu13 = 1, with both solutions being equivalent to Q1 avoiding
both Q2 and Q3 at the same time.

With the modiﬁcations to C, we also need to modify the
optimization problem so that other vehicles are aware of the
situation when multiple vehicles are being avoided by some
vehicle Qi, and in turn do not avoid Qi, freeing up control
authority to avoid other vehicles. To achieve this, we modify
the MIP in (8) by adding the constraints (16). To preserve
the avoidance priority given by the priority matrix P , we
only add the constraints when cij > cji.

ˆuji + ˆuia ≤ 1 ∀j ∈ Ai(u), j (cid:54)= a

∀a ∈ Ai(u)

(16)

B. Safety Guarantee for Three Vehicles Under SAMV Scheme
Theorem 2: Suppose N = 3. If s12, s23, s31 ≥ 0 at some
time t = t0, then the joint control strategy from the MIP (8)
with the reward coefﬁcient matrix chosen in Section III-C
and modiﬁed according to the SAMV scheme described in
Section V-A guarantees that s12, s23, s31 ≥ 0 ∀t > t0.

Proof:

It sufﬁces to show that whenever c12 > 0, i.e.
s12 < K, the solution to the MIP either consists of ˆu12 = 1

or the equivalent ˆu13 = 1, when the optimal control for
vehicle Q1 to avoid Q2 is identical to the optimal control
for Q1 to avoid Q3. Identical results should follow whenever
c23 > 0 and c31 > 0. We break our proof into three cases:
Case (i): All rows of ˆC consist of identical positive values,

−∞ 45

45
29 −∞ 29
17 −∞
17



ˆC =

(17)

In this case, the three constraints ˆu13 + ˆu21 ≤ 1, ˆu21 +
ˆu32 ≤ 1, ˆu32 + ˆu13 ≤ 1, are added. We show that ˆu12 =
1, ˆu23 = 1, ˆu31 = 1 and ˆuij = 0 for all other (i, j) is an
optimizer. First, notice that just based on constraint (8b), the
maximum possible objective that can be achieved is the sum
of the largest value in each row, 45 + 29 + 17 = 91. The
claimed solution satisﬁes all the constraints while giving an
objective value of 91. In addition, we show that for any other
possible optimizers, for each row i, there must be exactly
one j such that ˆuij = 1. Suppose not. Then there exists
some row i such that ˆuij = 0 for all j. We see that the
maximum possible objective value obtained by taking the
sum of the largest value in the rest of the two rows is one of
{45 + 29, 45 + 17, 29 + 17}, which is strictly less than 91.
Case (ii): Two rows of ˆC have identical positive values.

Suppose the ﬁrst two rows consist of identical positive val-
ues. The modiﬁed reward coefﬁcient matrix ˆC then becomes

−∞ 45

45
29 −∞ 29
c32 −∞
c31

 .

ˆC =

(18)

The two constraints ˆu13 + ˆu21 ≤ 1, ˆu21 + ˆu32 ≤ 1 are
added. The four possible combinations of (c31, c32) are
(−1,−1), (−1, 1), (16,−1), (16, 1). In the case where c31 =
16, we know that having ˆu31 = 1, ˆu12 = 1, ˆu23 = 1 and
ˆuij = 0 for all other (i, j) maximizes the objective since
it reaches the maximum possible sum 45 + 29 + 16 = 90
based on (8b) while satisfying the constraints. The only
possible other solutions that can reach this sum is ˆu31 =
1, ˆu13 = 1, ˆu21 = 1 with all other ˆuij’s equal to zero,
ˆu31 = 1, ˆu12 = 1, ˆu21 = 1 with all other ˆuij’s equal to
zero, and ˆu31 = 1, ˆu13 = 1, ˆu23 = 1 with all other ˆuij’s
equal to zero. However, none of them satisfy the constraints.
In the case where c31 = −1, the maximum possible sum
45 + 29 + 1 is not attainable because if ˆu32 = 1, then ˆu21 =
ˆu23 = 0. Now checking that ˆu12 = 1, ˆu23 = 1, ˆuij = 0
for all other (i, j) and ˆu13 = 1, ˆu23 = 1, ˆuij = 0 for all
other (i, j) both satisfy the constraints and result in sum
45 + 29 = 74, which is clearly the optimum. By a similar
argument, we can show that the desired results hold when
exactly the last two rows have identical positive values and
exactly rows 1 and 3 have identical positive values.
Case (iii): One row of ˆC consists of identical positive value.
Suppose the ﬁrst row consists of identical positive values:

−∞ 45

45
c21 −∞ c23
c32 −∞
c31

 .

ˆC =

(19)

The constraint ˆu13 + ˆu21 ≤ 1 is added. Among the many
possibilities for ˆC in this scenario, we consider one of them
as an example:

−∞ 45

45
c21 −∞ 25
−1
c32 −∞

 .

ˆC =

(20)

We will show that in this case the optimum is equal to 45 +
25 = 70 no matter what c21 and c32 are. First, we know that
the objective value is equal to 70 only when ˆu12 = 1, ˆu23 = 1
and ˆuij = 0 for all other (i, j) or ˆu13 = 1, ˆu23 = 1 and
ˆuij = 0 for all other (i, j). Note that they both satisfy the
constraints. Since c21 + c32 < 25 no matter what and one
can only choose between ˆu23 = 1 or ˆu32 = 1 due to the
constraint ˆu23 + ˆu32 ≤ 1, we know that 45 + 25 = 70 is
the maximum possible sum and thus is the optimum. We
can prove all remaining possibilities of ˆC where exactly one
row has identical positive values similarly.

Remark 3: Theorem 2 can also be proven by enumerating
every possible solution for all possible matrices ˆC. We have
also veriﬁed Theorem 2 by exhaustive enumeration.

VI. NUMERICAL SIMULATIONS

In this section, we illustrate our proposed joint multi-
vehicle collision avoidance method through simulations and
compare our method with a baseline pairwise method that
uses solely the HJ pairwise optimal control solution in which
each agent Qi avoids the agent Qj in the potential conﬂict
set Ji with the smallest pairwise safety value sij. Compared
with our MIP formulation (8), the baseline can be thought
of as a different MIP that

• omits constraint (8a), making the vehicles unable to
coordinate among each other.
• assumes ∀i, cij = 1 if j ∈ Ji and Qj has the
lowest safety value with respect to Qi, and cij = −∞
otherwise, making the vehicles lack a notion of global
avoidance priority.

• does not account for scenarios where a vehicle can avoid

multiple vehicles.

Such a baseline is chosen to illustrate the beneﬁts of the
above design considerations, which are important features of
our proposed method. For illustration purposes, we assumed
that the dynamics of each vehicle is given by

˙px,i = v cos θi
˙py,i = v sin θi

˙θi = ωi,

|ωi| ≤ ¯ω

(21)

where the state variables px,i, py,i, θi represent the x posi-
tion, y position, and heading of vehicle Qi. Each vehicle
travels at a constant speed of v = 5, and chooses its turn
rate ωi, constrained by some maximum ¯ω = 1. The danger
zone for HJ computation between Qi and Qj is deﬁned as

Lij = {xij : (px,i − px,j)2 + (py,i − py,j)2 ≤ R2
c},

(22)

whose interpretation is that Qi and Qj are considered to be
in each other’s danger zone if their positions are within Rc

of each other. In our examples, we chose Rc = 5. Here, xij
represents their joint state, xij = (px,i−px,j, py,i−py,j, θi−
θj) For notational convenience, we deﬁne px,ij ≡ px,i−px,j,
py,ij ≡ py,i − py,j, and θij ≡ θi − θj.

In order to obtain safety levels and the optimal pairwise

safety controller, we solve (6) using the relative dynamics

˙px,ij = −v + v cos θij + ωipy,ij
˙py,ij = v sin θij − ωipx,ij
˙θij = ωj − ωi,

|ωi|,|ωj| ≤ ¯ω

(23)

In our examples, we chose the safety level threshold K =
1.5. Whenever the safety level of Qi with respect to all other
vehicles Qj is above K, Qi applies the optimal control to
reach its destination in minimum time2. Otherwise, Qi uses
the control speciﬁed by the joint cooperative safety controller
that we propose in this paper.

Simulations for N = 3 and N = 8 are presented in detail
for our method and the baseline method. Each vehicle aims
to reach the circular target of matching color while avoiding
other vehicles’ danger zones. The vehicles keep travelling at
constant speed even if they enter the danger zones of other
vehicles until they reach their targets. The sij = 0, K safety
level sets are plotted for some pairs of vehicles. When a
vehicle is inside the K safety level set (outer boundary),
plotted in the same color as the vehicle, it is in potential
conﬂict with the vehicle around which the level set is plotted.
However, as long as the vehicle stays outside of the 0 safety
level set (inner boundary), the pair of vehicles will be able
to avoid entering each other’s danger zones.

Fig. 1 illustrates how our joint collision avoidance method
cooperatively resolves conﬂicts for three vehicles. The vehi-
cles start outside of each others’ K safety level sets. Each
of them performs optimal control to reach their respective
targets. On the way, Q2 (green) and Q3 (blue) come in
conﬂict with each other. Cooperatively, Q2 avoids Q3 while
Q3 heads to the target since Q2 is already resolving the
pairwise conﬂict. At time t = 0.8, all vehicles come in
conﬂict with each other, and our proposed algorithm advises
that Q1 (red) avoids Q2, Q2 avoids Q3, and Q3 avoids Q1,
efﬁciently utilizing their control authorities for avoidance. At
time t = 1.5, the conﬂicts are resolved as each vehicle’s
safety level rises to above K = 1.5 with respect to the
others. Eventually, all vehicles reach their targets without
any entering each other’s danger zones.

Fig. 2 illustrates the pitfall of using the baseline method.
Here, each vehicle avoids the vehicle with the smallest
pairwise safety value. At t = 0.6, all vehicles come in
conﬂict with each other, and without higher level
logic,
Q1 (red) avoids Q3 (blue), Q2 (green) avoids Q1, and
Q3 avoids Q1. By avoiding each other, Q1 and Q3 waste
control authority that can be used to prevent Q2 and Q3
from going closer to each other. When Q2 and Q3 come
closer to each other, they begin avoiding each other, leading
to Q1 and Q3 coming closer to each other. The lack of

2This optimal control can be computed by solving (4) using the dynamics

(21), but for brevity we will not go into the details here.

Fig. 1: Three vehicles cooperatively resolve conﬂicts in a
cyclic order, Q1 (red) avoids Q2 (green), Q2 (green) avoids
Q3 (blue), and Q3 (blue) avoids Q1 (red).

Fig. 2: Without higher level control logic, the three vehicles
are unable to resolve conﬂicts successfully.

coordination causes this behavior to repeat, bringing them
closer and closer together (t = 0.9), and eventually leading
them into each other’s danger zones at t = 1.6. This
alternating avoidance behavior also highlights the importance
of imposing avoidance priority.

Fig. 3 illustrates a difﬁcult eight-vehicle scenario that
our cooperative algorithm successfully resolves. The safety
level sets are plotted for each avoidance pair. At t = 2.7,
multiple vehicles are in conﬂict with each other. Notice that
no redundant control is used (a pair of vehicles avoiding each
other). Instead one vehicle in a given conﬂict pair can free up
its control to avoid another agent. Fig. 4 shows the result of
applying the baseline approach, which is unable to resolve
the multiple conﬂicts. In particular, at t = 1.7 (top right),
multiple vehicle pairs avoid each other during the conﬂicts.
In addition, at t = 11.5 (bottom right), two vehicles end
up in a “limbo” state where they alternate between avoiding
each other and trying to get closer to their targets, continually
going in a direction that is further from their targets.

Additionally, we compare our method with the baseline
method for N = 3, 4, 5, 6, 7, 8 vehicles by performing 200
simulations with randomized initial conditions for each case,
and show that our algorithm performs signiﬁcantly better
than the baseline pairwise approach. We initialized each
vehicle by placing each of them symmetrically on a circle
of radius 10 + 2 × (N − 3) facing the center of the circle,
and then adding random perturbations to its initial state. We
deﬁne the two performance metrics below. The average over
the 200 trials for each case are presented in Fig. 5.

• Success ratio = fraction of vehicles that reach their

targets without ever entering others’ danger zones
• Aggregate conﬂict ratio = total # of danger zone violations

# of time steps×CN

. The

2

Fig. 3: Eight vehicles successfully coordinated to resolve
conﬂicts with our algorithm in this challenging scenario.

denominator is the maximum possible number of danger
zone violations that could occur throughout the simu-
lation, which is the number of time steps times C N
2
(N choose 2), the maximum number of danger zone
violations in a given time step.

With our proposed method, the average computation time
per simulation is 4.1 seconds for N = 3 and 25.5 seconds
for N = 8; this time includes the time needed to solve the
MIP (8). With the baseline method, the average computation
time for the same simulations is 5.9 seconds for N = 3 and
22.9 seconds for N = 8. Both methods require the same
BRS, which takes approximately 1 minute to compute. All
computations were done on a MacBookPro 11.2 laptop with
an Intel Core i7-4750 processor.

-100102030-10-5051015202530t = 0.2-100102030-10-5051015202530t = 0.8-100102030-10-5051015202530t = 1.5-100102030-10-5051015202530t = 4.5TrajectoryVehicleTargetSafety reachable set-100102030-10-5051015202530t = 0.2-100102030-10-5051015202530t = 0.6-100102030-10-5051015202530t = 0.9-100102030-10-5051015202530t = 1.6-200204060-20-100102030405060t = 1.3-200204060-20-100102030405060t = 2.7-200204060-20-100102030405060t = 4.1-200204060-20-100102030405060t = 8[4] BBC

Technology.
service for 2017.
technology-34704868

(2016) Google

delivery
[Online]. Available: http://www.bbc.com/news/

drone

plans

[5] B. P. Tice, “Unmanned aerial vehicles – the force multiplier of the

1990s,” Airpower Journal, 1991.

[6] Jointed Planning and Development Ofﬁce (JPDO), “Unmanned aircraft
systems (UAS) comprehensive plan – a report on the nation’s UAS
path forward,” Federal Aviation Administration, Tech. Rep., 2013.

[7] National Aeronautics and Space Administration. (2016) Challenge is
on to design sky for all. [Online]. Available: http://www.nasa.gov/
feature/challenge-is-on-to-design-sky-for-all

[8] P. Fiorini and Z. Shillert, “Motion planning in dynamic environments
using velocity obstacles,” International Journal of Robotics Research,
vol. 17, pp. 760–772, 1998.

[9] J. van den Berg, M. C. Lin, and D. Manocha, “Reciprocal velocity
obstacles for real-time multi-agent navigation,” in IEEE International
Conference on Robotics and Automation, May 2008, pp. 1928–1935.
[10] R. Olfati-Saber and R. M. Murray, “Distributed cooperative control
of multiple vehicle formations using structural potential functions,” in
IFAC World Congress, 2002.

[11] Y.-L. Chuang, Y. Huang, M. R. D’Orsogna, and A. L. Bertozzi, “Multi-
vehicle ﬂocking: Scalability of cooperative control algorithms using
pairwise potentials,” in IEEE International Conference onRobotics and
Automation, April 2007, pp. 2292–2299.

[12] E. M. Vaisbord and V. I. Zhukovskii, Introduction to Multi-player

Differential Games and Their Applications. Routledge, 1988.

[13] I. Mitchell, A. Bayen, and C. Tomlin, “A time-dependent Hamilton-
Jacobi formulation of reachable sets for continuous dynamic games,”
IEEE Transactions on Automatic Control, vol. 50, no. 7, pp. 947–957,
2005.

[14] J. F. Fisac, M. Chen, C. J. Tomlin, and S. S. Shankar, “Reach-avoid
problems with time-varying dynamics, targets and constraints,” in
18th International Conference on Hybrid Systems: Computation and
Controls, 2015.

[15] J. Ding, J. Sprinkle, S. S. Sastry, and C. J. Tomlin, “Reachability
calculations for automated aerial refueling,” in IEEE Conference on
Decision and Control, Cancun, Mexico, 2008.

[16] S. Tanimoto, “On a class of three-player differential games,” Journal
of Optimization Theory and Applications, vol. 25, no. 3, p. 469?473,
1978.

[17] M. Su, Y. ji Wang, and L. Liu, “Bounded guidance law based on
differential game for three-player conﬂict,” in IEEE Conference on
Modeling, Identiﬁcation, and Control, 2014.

[18] J. F. Fisac and S. S. Sastry, “The pursuit-evasion-defense differential
game in dynamic constrained environments,” in IEEE Conference on
Decision and Control, 2015.

[19] W. Lin, “Differential games for multi-agent systems under distributed
information,” Ph.D. dissertation, University of Central Florida, 2013.
[20] M. Chen, Z. Zhou, and C. J. Tomlin, “Multiplayer reach-avoid
games via low dimensional solutions and maximum matching,” in
Proceedings of the American Control Conference, 2014.

[21] M. Chen, J. Fisac, C. J. Tomlin, and S. Sastry, “Safe sequential path
planning of multi-vehicle systems via double-obstacle hamilton-jacobi-
isaacs variational inequality,” in European Control Conference, 2015.
[22] M. Chen, Q. Hu, C. Mackin, J. Fisac, and C. J. Tomlin, “Safe
platooning of unmanned aerial vehicles via reachability,” in IEEE
Conference on Decision and Control, 2015.

[23] E. N. Barron, “Differential Games with Maximum Cost,” Nonlinear

analysis: Theory, methods & applications, pp. 971–989, 1990.

[24] O. Bokanowski, N. Forcadel, and H. Zidani, “Reachability and mini-
mal times for state constrained nonlinear problems without any con-
trollability assumption,” SIAM Journal on Control and Optimization,
pp. 1–24, 2010.

[25] K. Margellos and J. Lygeros, “Hamilton-Jacobi Formulation for
Reach-Avoid Differential Games,” IEEE Transactions on Automatic
Control, vol. 56, no. 8, Aug 2011.

[26] K. Margellos and J. Lygeros, “Toward 4-D Trajectory Management
in Air Trafﬁc Control: A Study Based on Monte Carlo Simulation
and Reachability Analysis,” IEEE Transactions on Control Systems
Technology, vol. 21, no. 5, Sept 2013.

[27] M. G. Crandall and P.-L. Lions, “Viscosity solutions of Hamilton-
Jacobi equations,” Transactions of the American Mathematical Society,
vol. 277, no. 1, pp. 1–42, 1983.

[28] D. Khattar, The Pearson Guide to Complete Mathematics for AIEEE,

3rd ed. Pearson Education India, 2010.

Fig. 4: The lack of coordination using the baseline method
results in failure in this challenging eight-vehicle scenario.

Fig. 5: Our SAMV scheme outperforms the baseline method
signiﬁcantly in terms of success ratio and aggregate conﬂict
ratio. In particular, we conﬁrmed that for N = 3, our method
has a success ratio of 1.0 and aggregate conﬂict ratio of 0.0.

VII. CONCLUSIONS AND FUTURE WORK

Our proposed mixed integer program provides higher
level control logic to pairwise optimal collision avoidance
control. By exploiting the properties of pairwise optimal col-
lision avoidance, our proposed method guarantees collision
avoidance of three vehicle systems and performs well for
larger multi-vehicle systems. Future work includes exploring
possibilities for guaranteeing safety for a larger number of
vehicles, combining the proposed method with other path
planning techniques, and improving the performance for
large numbers of vehicles.

REFERENCES

[1] W. M. Debusk, “Unmanned aerial vehicle systems for disaster relief:

Tornado alley,” in Infotech@Aerospace Conferences, 2010.

[2] AUVSI News. (2016) Uas aid in south carolina tornado investigation.
[Online]. Available: http://www.auvsi.org/blogs/auvsi-news/2016/01/
29/tornado

[3] Amazon.com, Inc. (2016) Amazon prime air. [Online]. Available:

http://www.amazon.com/b?node=8037720011

-200204060-20-100102030405060t = 0.8-200204060-20-100102030405060t = 1.7-200204060-20-100102030405060t = 4.3-200204060-20-100102030405060t = 11.5Number of vehicles345678Success ratio00.20.40.60.81SAMVBaselineNumber of vehicles345678Aggregate conflict ratio00.020.040.060.080.1SAMVBaseline