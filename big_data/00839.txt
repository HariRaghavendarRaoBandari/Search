DAMTP-2016-21
2016 March 2

Identities between Modular Graphs Forms1

Eric D’Hoker(a) and Michael B. Green(b)

(a) Department of Physics and Astronomy

University of California, Los Angeles, CA 90095, USA

(b) Department of Applied Mathematics and Theoretical Physics

Wilberforce Road, Cambridge CB3 0WA, UK

dhoker@physics.ucla.edu; M.B.Green@damtp.cam.ac.uk

Abstract

This paper investigates the relations between modular graph forms, which are
generalizations of the modular graph functions that were introduced in earlier pa-
pers motivated by the structure of the low energy expansion of genus-one Type II
superstring amplitudes. These modular graph forms are multiple sums associated
with decorated Feynman graphs on the world-sheet torus. The action of standard
diﬀerential operators on these modular graph forms admits an algebraic representa-
tion on the decorations. First order diﬀerential operators are used to map general
non-holomorphic modular graph functions to holomorphic modular forms. This map
is used to provide proofs of the identities between modular graph functions for weight
less than six conjectured in earlier work, by mapping these identities to relations be-
tween holomorphic modular forms which are proven by holomorphic methods. The
map is further used to exhibit the structure of identities at arbitrary weight.

6
1
0
2

 
r
a

M
2

 

 
 
]
h
t
-
p
e
h
[
 
 

1
v
9
3
8
0
0

.

3
0
6
1
:
v
i
X
r
a

1Research supported in part by the National Science Foundation under grant PHY-13-13986.

1

Introduction

{sec:1}

The structure of the low energy expansion of genus-one Type II superstring amplitudes
leads one to associate modular functions with Feynman graphs for a conformal scalar ﬁeld
on a torus. The resulting modular graph functions exhibit a rich mathematical structure,
which may be related to single-valued elliptic multiple polylogarithms, and single-valued
multiple zeta values [1]. Although some properties of the space of modular graph functions
have been investigated, a deeper understanding of their general mathematical structure is
lacking.

The weight w of any graph is the number of scalar Green functions in the graph while
the number of closed loops is denoted by L. We need only consider connected graphs since
a disconnected graph is associated with a modular graph function that factors into the
product of two lower weight modular graph functions. Furthermore connected graphs that
are one edge reducible (that become disconnected when one edge is removed) vanish so we
need to consider only connected one edge irreducible graphs.

There is a unique one-loop modular graph function with a given value of w. This is
the non-holomorphic Eisenstein series Ew which satisﬁes the Laplace-eigenvalue equation
∆Ew = w(w − 1)Ew, where ∆ is the Laplace-Beltrami operator on the Poincar´e upper half
plane. Non-holomorphic Eisenstein series are very familiar objects in number theory (for
a historical account see [2]; for general overviews see for example [3, 4, 5]).

Two-loop modular functions were studied extensively in [6], building on earlier work
in [7, 8]. They were found to obey systems of inhomogeneous Laplace-eigenvalue equa-
tions whose inhomogeneous parts contain terms linear and quadratic in non-holomorphic
Eisenstein series. With the help of group theoretic methods these systems were decoupled
onto eigen-spaces with ﬁxed weight and ﬁxed eigenvalue of the Laplacian, and an inﬁnite
sequence of linear relations between modular graph functions of one- and two-loop order
was shown to emerge [6].

Modular graph functions for three-loops and higher no longer systematically satisfy
the type of Laplace-eigenvalue equations exhibited at one- and two-loops and, as a result,
our understanding of the corresponding spaces of modular functions is much more limited.
Nonetheless, a few isolated relations between the simplest modular graph functions with
three and four loops were conjectured, based on the evidence of their matching Laurent
expansion near the cusp [6]. The simplest of these conjectured relations, namely relating
a three-loop modular graph function to one- and two-loop modular graph functions, and
referred to as the D4 conjecture, was recently proven in [9] by direct summation of the
lattice sums, thereby generalizing a procedure used by Zagier at two-loops [10]. The origin
of these conjectured relations and their underlying nature remained, however, unexplained.

The goal of the present paper is to make progress on various fronts by enlarging the

2

space of non-holomorphic modular graph functions to a space of modular forms of general
holomorphic and anti-holomorphic modular weights. This enlarged space will be associated
with decorated graphs that are described as follows. Each decorated graph consist of a set of
vertices, whose number will be denoted by V , joined to each other by decorated edges. The
decoration of each edge consists of a pair of integers that label respectively the exponents
of the holomorphic and anti-holomorphic momenta on the torus, while the vertices in the
decorated graph have valence three or higher, as will be explained more explicitly later.
When the integers within each pair are equal to one another on every edge the graph
evaluates to a modular graph function of the type considered in earlier papers [6, 1]. More
generally, however, the integers within each pair labeling the edges will be unequal.
In
that case the sum over all the edges of the holomorphic exponents may equal the sum of
the anti-holomorphic exponents, in which case the graph evaluates to a SL(2, Z) modular
function that lies outside the class of those considered in earlier papers. If the sum of the
holomorphic exponents is not equal to the sum of anti-holomorphic exponents the graph
evaluates to a SL(2, Z) modular form that has unequal holomorphic and anti-holomorphic
modular weights.1

We shall refer to this enlarged space as the space of modular graph forms. This space
includes the entire space of non-holomorphic modular graph functions as well as the space
of holomorphic modular forms, and all variations in between these two. The modular
covariant Cauchy-Riemann operators and the Laplace-Beltrami operator on the Poincar´e
upper half plane map the space of modular graph forms into itself, and admit simple
algebraic representations on the array of pairs of integers which decorate the graphs. In
addition to the mathematical advantages of this enlargement, it is also motivated by string
theory, since the construction of amplitudes with more than four external massless states
involves such generalized modular forms (see for example [11]).

We will consider the action of modular covariant diﬀerential operators on modular
graph forms in order to relate the existence of identities between modular graph functions
(and more generally identities between modular graph forms) to the existence of identities
between holomorphic modular forms. We shall show that any one-loop subgraph which
involves only holomorphic momenta, while being modular by construction, evaluates to
a holomorphic dependence on the remaining momenta of the graph, thereby eﬀectively
reducing the number of loops in the graph. We shall refer to this process as holomorphic
subgraph reduction.

1Whereas it makes sense to deﬁne the weight of a modular graph function as the number of modular
invariant Green functions in a graph, this terminology is not useful when considering the more general
graphs with edges that carry unequal values for the holomorphic and anti-holomorphic exponents. These
graphs generally evaluate to modular forms. As we will see later, for these more general graphs the concept
of the weight of the graph is replaced by the total values of these exponents when summed over all the
edges of the graph.

3

As an application of this formalism and the holomorphic subgraph reduction procedure,
we shall provide a simple and short proof of the D4 conjecture that was proven laboriously
in [9], as well as of all the remaining outstanding conjectures of [6]. These conjectures claim
the vanishing of a modular invariant function F which is a polynomial in modular graph
functions, with rational coeﬃcients, homogeneous weight w, but diﬀerent numbers of loops.
For high enough weight w, several diﬀerent identities will exist. Using a sieve algorithm
which will be deﬁned and developed in this paper, and which is based on the holomorphic
subgraph reduction procedure, we will demonstrate that each of the conjectured identities
satisﬁes the very striking covariant derivative condition,

where the modular covariant Cauchy-Riemann operator ∇ is deﬁned by,

(∇)w−1F = 0

∇ = 2iτ 2
2

∂
∂τ

(1.1)

{1a2}

(1.2)

{1a3}

and the upper half plane has been parametrized by the complex parameter τ with τ2 =
Im (τ ) > 0. The identity F = 0 will follow very simply by solving this equation with the
boundary condition that limτ2→∞ F = 0.

Finally, we shall show that the sieve algorithm, in conjunction with the holomorphic
subgraph reduction procedure, not only provides a method for proving known conjectured
relations, but more generally may be used to systematically construct further identities
between modular graph forms.

The remainder of this paper is organized as follows. In section 2, we introduce modular
graph forms, discuss their symmetry properties, and exhibit the action of the covariant
Cauchy-Riemann operators and the Laplace-Beltrami operator. In section 3, we illustrate
these general concepts for dihedral graphs (graphs with V = 2). In section 4, we develop the
strategy for proving modular graph function identities, and for relating these identities to
the existence of identities between holomorphic modular forms and prove the D4 conjecture
by way of example. In section 5, we discuss and concretely evaluate holomorphic subgraph
reduction. In section 6, the formalism is used to prove the conjectures proposed in [6] for
the dihedral modular graph functions D3,1,1 and D5. In section 7, the formalism is applied
to trihedral graphs (graphs with V = 3), and is used to prove the D2,2,1 conjecture of [6]
in section 8. A discussion of future avenues of investigation is given in 9, while various
technical aspects are relegated to two appendices.

2 Modular Graph Forms

We begin this section with a brief review of modular graph functions, and then motivate
and deﬁne their generalization to modular graph forms.

{sec:2}

4

2.1 Review of modular graph functions

An oriented torus Σ with complex structure modulus τ may be represented in the complex
plane by the quotient C/Λ where Λ is the lattice given by Λ = Z ⊕ τ Z. The torus may be
parametrized by a complex coordinate z or equivalently by two real coordinates α, β ∈ R/Z
related by z = α+βτ , and the volume form on Σ is normalized to d2z = i
2dz ∧d¯z = dα∧dβ.
The moduli space M1 of orientable tori, or equivalently of genus-one Riemann surfaces,
may be represented by a fundamental domain for the action of P SL(2, Z) on the Poincar´e
upper half plane, and may be parametrized by τ = τ1, +iτ2 with τ1, τ2 ∈ R. When a choice
is required, we shall choose M1 = {τ, 0 < τ2, 1 ≤ |τ |, |τ1| ≤ 1

2}.

The fundamental ingredient in the construction of modular graph functions is the scalar

{sec:21}

Green function on Σ, deﬁned to obey,

∂¯z∂z G(z|τ ) = −πδ(2)(z) +

π
τ2

d2z G(z|τ ) = 0

(2.1)

{3a1}

ZΣ

For our purpose, it is convenient to express the Green function G(z|τ ) as a Fourier sum,

G(z|τ ) =

τ2
π|p|2 e2πi(nα−mβ)

′

Xp∈Λ

(2.2)

{3a2}

The integers m, n parametrize the discrete momenta p = m + nτ ∈ Λ of the Fourier modes
on the torus, while the prime on the summation symbol indicates that the contribution
from p = 0 is not to be included in the sum.

The generating function of modular graph functions with N vertices is given by,

BN (sij|τ ) =

N

Yk=1ZΣ

d2zk
τ2

exp  X1≤i<j≤N

sijG(zi − zj|τ )!

(2.3)

{3a3}

This expression is inspired by string theory, where it governs the amplitude for the scat-
tering of four gravitons when N = 4. For higher N, the formula generates only a subset
of the graphs that contribute to the low energy expansion of the N-graviton superstring
amplitude.

In string theory, the parameters sij are related to the momenta of the incoming and
outgoing string states and obey certain interrelations. Momentum conservation in the
string amplitude requires the relations,

sij = 0

X1≤i<j≤N

(2.4)

As a result of these relations, the zero mode of the Green function in (2.3) cancels out of
the expression (2.3) and the string amplitude is conformal invariant, and independent of

5

the choice of metric for given modulus τ . The expression for an individual graph function,
obtained by expanding BN (sij|τ ) in powers of sij, does depend on the zero mode, but
choosing to set it to zero by imposing the normalization condition (2.1) will considerably
simplify the structure of the modular graph functions and the relations between them.

To generate all modular graph functions we shall drop all such interrelations between
the sij and view them as independent complex parameters, but retain the normalization of
(2.1). With this set-up, modular graph functions BN (sij|τ ) form a subspace of the modular
functions BN +1(sij|τ ), obtained by setting si N +1 = 0 for all i = 1, · · · , N. For any ﬁxed
value of τ with τ2 > 0, the integrals over zk are absolutely convergent for |sij| < 1 and
may be analytically continued throughout C. The resulting BN (sij|τ ) is invariant under
the action of the modular group P SL(2, Z) on τ provided the variables sij are invariant
under P SL(2, Z).

2.1.1 Graphical expansion

The series expansion of BN (sij|τ ) in a multiple power series in the variables sij may be or-
ganized graphically in terms of Feynman graphs, for a scalar quantum ﬁeld on the torus Σ,
with at most N interaction vertices. Each term in this expansion corresponds to a spe-
ciﬁc graph, and will evaluate to a speciﬁc non-holomorphic modular function, whence the
terminology modular graph function. The building block of the modular graph functions
is the scalar Green function G(zi − zj|τ ), which we associate with an edge in the graph
between vertices zi and zj. We shall use the following graphical representation,

zi

zj

= G(zi − zj|τ )

(2.5)

{fig1}

The integration over the position of the vertex z on which r Green functions end will be
denoted by an unmarked ﬁlled black dot, in contrast with an unintegrated vertex zi which
will be represented by a marked unﬁlled white dot. The basic ingredient in the graphical
notation is depicted in the graph below,

· · ·

z1

z2

zr−1 zr

= ZΣ

d2z
τ2

r

Yi=1

G(z − zi|τ )

(2.6)

{fig2}

The coeﬃcient of the monomial obtained as the product over all i < j of sνij
ij
series expansion of BN (sij|τ ) is given as follows,

in the power

CΓ(τ ) =

N

Yk=1ZΣ

d2zk

τ2 Y1≤i<j≤N

6

G(zi − zj|τ )νij

(2.7)

The graph Γ has N vertices labelled i = 1, · · · , N and νij edges between vertices i and j.
The total number of edges in the graph, also referred to as the weight w of Γ, is given by,

w = X1≤i<j≤N

νij

(2.8)

By construction, the integral CΓ(τ ) is modular invariant, as it arises from the expansion
in powers of sij of the modular invariant generating function BN (sij|τ ), and therefore
associates with a graph Γ a non-holomorphic modular function CΓ(τ ).

2.1.2 Fourier representation

The integration over the position zi of the vertex i enforces momentum conservation on all
the Green functions that emanate from this vertex. Carrying out the integrations over the
vertex positions zi for i = 1, . . . , N gives a constrained multiple sum representation for the
graphs, studied for the case N = 4 in [7, 8, 6], and given explicitly as follows,

CΓ(τ ) =

′

Xp1,...,pw∈Λ

w

Yα=1

τ2

π|pα|2

N

Yi=1

δ  w
Xα=1

Γiα pα!

(2.9)

{gengraph}

The Kronecker δ symbol takes the value 1 when its argument vanishes and zero otherwise,
and the coeﬃcients Γiα are given as follows,

if edge α ends on vertex i

0

otherwise

(2.10)

±1

Γiα =

Γiα pα! = δ  w
Xα=1

δ  w
Xα=1

the sign being determined by the orientation of the momenta. Throughout, the Kronecker
δ-function on the momenta pα will be shorthand for the following product,

Γiα mα! δ  w
Xβ=1

Γiβ nβ!

(2.11)

{3a9a}

where pα = mα + nατ and mα, nα ∈ Z. In particular, the Kronecker δ-functions do not
depend on the modulus τ . By translation invariance on the torus, one of the momentum
conservation Kronecker δ-functions is redundant, but we shall leave it in place in order to
make the symmetry of the graph more manifest.

The following additional points should be noted. For given weight w, all the information
on the graph Γ is encoded in the coeﬃcients Γiα, the other parts of the sum in (2.9) being
the same for all modular graph functions of weight w. The momentum sum representation
of the modular graph function CΓ(τ ) makes its modular invariance manifest. The modular
graph function is invariant under an arbitrary relabeling of the vertices of its graph.

7

2.1.3

Irreducible graphs

{irred}

Without loss of generality, we may focus on irreducible graphs. Any disconnected graph is
reducible, and its modular graph function factorizes into the product of the modular graph
functions of its connected components. Any graph which becomes disconnected upon cut-
ting any one of its edges (also referred to as one-edge reducible graphs), including when a
single edge ends on any one of its vertices, is also reducible and, with our normalization of G,
its associated modular graph function vanishes. Finally, any graph which becomes discon-
nected upon removing any one of its vertices is also reducible, and its associated modular
graph function factorizes into the modular graph functions of the corresponding connected
components. Any graph which is not reducible by the above criteria is irreducible.

2.2 Motivating modular graph forms

As described in the Introduction, we shall enlarge the space of non-holomorphic modular
graph functions, considered in earlier papers, to the space of modular graph forms. The
enlarged class of graphs are decorated by assigning a pair of integers (ar, br) to each edge.
We shall denote the total number of decorated edges by R, where r = 1, · · · , R labels the
decorated edges. The integers ar and br are, respectively, the exponents of the holomorphic
momentum pr and the anti-holomorphic momentum ¯pr associated with the edge r. For a
general modular graph form, the integers ar and br need not be equal to one another.

We shall deﬁne the integers a and b by the sum of the exponents ar and br,

a =

ar

R

Xr=1

b =

br

R

Xr=1

(2.12)

{ab}

and refer to the pair (a, b) as the weight of the modular graph form, which generalizes the
deﬁnition of the weight w associated with modular graph functions. For the special case of
modular graph functions we have ar = br for all r, so that a = b, and this number coincides
with the weight w which has been introduced earlier.

The weight (a, b) encompasses also the assignment of the modular weight. Since modular
graph forms are generally non-holomorphic, there is no natural assignment of a modular
weight, as one may always multiply by a power of τ2, which is a modular form of modular
weight (−1, −1). But the diﬀerence of the holomorphic and the anti-holomorphic modular
weights has a canonical meaning and, for a modular graph form of weight (a, b), is given
by the diﬀerence a − b, as will be explained in detail in the sections below.

Within the enlarged class of modular graph forms three distinct types are notable:

8

(i) If a = b the modular graph form has modular weight (0, 0).2 While a modular function,
it belongs to the class of modular graph functions considered in earlier papers only
when ar = br for all r.

(ii) If a 6= 0 and br = 0 for all r the graph evaluates to a holomorphic modular form
multiplied by a power of τ2 (and if ar = 0 for all r and b 6= 0 the graph evaluates to
an anti-holomorphic modular form multiplied by a power of τ2).

(iii) If a 6= b the graph evaluates to a non-holomorphic modular form rather than a non-

holomorphic modular function.

The deﬁnitions of reducible and irreducible graphs, given in section 2.1.3 for modular
graph functions, readily carries over to modular graph forms. Next, we shall elaborate on
the physical and mathematical motivations for this enlargement.

One reason for including graphs of type (i) is that they necessarily arise in closed Type II
superstring theory when considering one loop scattering amplitudes with N > 4 gravitons.
In such amplitudes there are N − 4 factors of the holomorphic derivative of the Green
function ∂zG, as well as N − 4 factors of the anti-holomorphic derivative ∂¯zG in the graphs
that enter the low energy expansion. The Fourier representation of ∂zG is given by,

∂zG(z|τ ) = −

e2πi(nα−mβ)

1
p

′

Xp∈Λ

(2.13)

{pG}

using the earlier notation where z = α + βτ and α, β ∈ R/Z. Allowing for arbitrary num-
bers of such derivatives and their complex conjugates alters the exponents of the momenta
in (2.9), and renders the exponent of a holomorphic factor pr generally diﬀerent from the
exponent of its complex conjugate ¯pr. Including derivatives on G only adds positive powers
of pr and ¯pr to the summand. However, any decorated edge includes the eﬀect of a chain
of bivalent vertices, The net exponents of pr and ¯pr in such a chain may be arbitrary, mu-
tually independent, positive or negative integers. Indeed, the eﬀect of including a bivalent
vertex connecting two derivative Green functions may be illustrated using the Fourier sum
representation for two factors of ∂zG, and we ﬁnd,

ZΣ

d2z
τ2

∂zG(z − zi|τ ) ∂zG(z − zj|τ ) =

1
p2 e2πin(αi−αj)−2πim(βi−βj)

(2.14)

′

Xp∈Λ

for zi = mi + niτ , zj = mj + njτ , zi = αi + βiτ , and zj = αj + βjτ . We see that the inclusion
of bivalent vertices can render the exponents of pr and ¯pr more negative. Therefore, an
edge labeled r in a generalized graph is speciﬁed by its momenta pr, ¯pr, and by two integers

2Here the notation (u, u′) denotes the holomorphic and anti-holomorphic modular weights of a modular

form, as reviewed in Appendix A.

9

(ar, br) which specify the exponents of the holomorphic and anti-holomorphic momenta.
We shall graphically represent these exponents by a decorated edge as follows,

ar, br

≈ (pr)−ar (¯pr)−br

(2.15)

{fig3}

The precise normalization will be given shortly. The use of the decoration labels allows
us to include all the eﬀects of bivalent vertices in these labels. Our graphs, which have
decorated edges, therefore do not have any further bivalent vertices.

String theory has a further source of contributions in which holomorphic and anti-
holomorphic momenta arise with independent exponents. Worldsheet Weyl fermion ﬁelds
have inherently holomorphic (or anti-holomorphic) dependence on τ , tied directly to their
worldsheet chirality. An edge associated with a Weyl fermion carries a Szego kernel instead
of a scalar Green function. For odd spin structure, the Szeg¨o kernel precisely coincides
with the derivative ∂zG of the scalar Green function, so that its inclusion will be taken
into account by the same arguments given above for ∂zG. For even spin structure the
Szeg¨o kernel is obtained by shifting the lattice sum in (2.13) by one of the three even half
characteristics, and the inclusion of spin ﬁelds and fermion vertex operators will introduce
further modiﬁcations to the lattice sums which may be reduced to the modular graph forms
introduced here upon using Fay’s trisecant formula and bosonization.

The mathematical motivation for introducing modular graph forms is readily seen from
their structure. The space of modular graph forms includes all non-holomorphic modular
functions as they were deﬁned in [1] by setting ar = br for all edges r, as well as all purely
holomorphic modular forms by setting br = 0 for all r, and all variations in between. In
addition, we shall show below that the ﬁrst order Cauchy-Riemann operators map the space
of modular graph forms into itself, as does the Laplacian.

2.3 Labeling decorated graphs and modular graph forms

The easiest way to represent a graph is often ... by the graph itself. Still, we shall need
to exhibit the labels on the decorated graph in a manner that can be conveniently used to
evaluate the derivatives and utilize the symmetries of the associated modular graph form.
In any decorated graph every decorated edge must begin and end on distinct vertices.
Furthermore, in a decorated graph, only vertices with valence three or higher occur, as all
bivalent vertices will be represented by the labels of the decorated graph. We denote the
total number of vertices by V , and the total number of decorated edges by R.

{sec:23}

2.3.1 The case of arbitrary V ≥ 2

For general V ≥ 2, each vertex is labeled by an integer i = 1, · · · , V . The edges are ordered
lexicographically starting with the edges leaving at vertex i = 1 to vertex j = 2, then to

10

vertex j = 3 and so on, followed by edges leaving at vertex i = 2 to vertex j = 3 and
then to vertex j = 4 and so on. In the explicit calculations later in this paper we will
only consider families of graphs for which the number of vertices V is 2 or 3, but general
features of arbitrary graphs and their associated modular graph forms will be considered.
In order to illustrate this labeling for a general graph, we may ﬁrst consider a sub-graph

with edges joining two vertices, labelled i < j as illustrated by the following ﬁgure.

i

Aij, Bij

j

=

i

aij 1, bij 1

aij 2, bij 2

aij µij , bij µij

j

(2.16)

{fig5}

This subgraph has µij decorated edges joining vertices labeled i, j. The set of exponents
{aij α} of homomorphic momenta pij α (α = 1, . . . , µij) will be collected in a row matrix Aij
and the set of exponents {bij r} of anti-holomorphic momenta ¯pij α in a row matrix Bij,

Aij = [ aij 1 aij 2
bij 2
Bij = [ bij 1

· · · aij µij ]
bij µij ]
· · ·

(2.17)

This labeling generalizes so that for a general graph consisting of V vertices and R decorated
edges there are V (V − 1)/2 sets of row matrices of the form Aij and the same number of
the form Bij. The labels are assembled into a 2 × R matrix, in lexicographical order, for
which we shall use the following notation,

B12(cid:12)(cid:12)(cid:12)(cid:12)
(cid:20) A
B(cid:21) =(cid:20) A12

· · ·(cid:12)(cid:12)(cid:12)(cid:12)

A1V

B1V (cid:12)(cid:12)(cid:12)(cid:12)

A23

B23(cid:12)(cid:12)(cid:12)(cid:12)

· · ·(cid:12)(cid:12)(cid:12)(cid:12)

A2V

B2V (cid:12)(cid:12)(cid:12)(cid:12)

· · ·(cid:12)(cid:12)(cid:12)(cid:12)

AV −1 V

BV −1 V (cid:21)

(2.18)

{3d1}

The vertical bars indicate the separation between the subsets of edges stretched between a
given pair of vertices. We shall often replace the composite labels (ij µij) on the exponents
a and b by a single enumeration label r = 1, · · · , R.

Once the full graph Γ has been assembled in terms of subgraphs between pairs of
vertices, all vertices are then integrated over Σ. To a decorated graph Γ with connectivity
matrix Γi r and with exponents given in (2.18), we associate a modular graph form, given
by the following expression,

Under complex conjugation, the modular graph forms behave as follows,

C(cid:20) A
B(cid:21) (τ ) =

V

R

′

1

2 ar+ 1
2 br
(τ2/π)
(pr)ar (¯pr)br

Xp1,...,pR∈Λ
Yr=1
C(cid:20) A
B(cid:21) (τ )∗ = C(cid:20) B

Yi=1
A(cid:21) (τ )

11

δ  R
Xs=1

Γi s ps!

(2.19)

{3b5}

(2.20)

{3d2}

thereby amounting to a permutation of the upper and lowers rows of the matrix of expo-
nents.

2.3.2 The cases V = 0, 1

Every irreducible graph with V = 0 is necessarily a one-loop graph, and is completely
speciﬁed by a single pair of exponents (a, b).
It will be convenient to use the general
notation already introduced above to represent the modular graph forms for V = 0 as
follows,

C(cid:20) a 0

0(cid:21) (τ ) =

b

′

Xp1,p2∈Λ

1

2 a+ 1
2 b

(τ2/π)
(p1)a (¯p1)b δ (p1 + p2) =

(τ2/π)

1

2 a+ 1
2 b

pa ¯pb

′

Xp∈Λ

(2.21)

For a = b we recover the Eisenstein series, while for a 6= b the graphs correspond to
derivatives of Eisenstein series, as we shall see shortly below.

Every graph with V = 1 is reducible. If the valence of the vertex is odd the correspond-
ing modular graph function vanishes. If the valence is even the modular graph function
factorizes into modular graph functions with V = 0.

2.4 Modular properties

Under a modular transformation in P SL(2, Z),

τ → τ ′ =

ατ + β
γτ + δ

(2.22)

where α, β, γ, δ ∈ Z and αδ − βγ = 1, the exponents A, B are unchanged and a general
modular graph form of (2.19) transforms as follows,

γ ¯τ + δ(cid:19) 1
B(cid:21) (τ ′) =(cid:18)γτ + δ
C(cid:20) A

2 a− 1
2 b

C(cid:20) A
B(cid:21) (τ )

(2.23)

The weight (a, b) of the modular graph form was deﬁned earlier in (2.12). When a = b the
modular graph form is a modular function with vanishing modular weight; for A = B this
function is real and corresponds to a modular graph function reviewed in section 2.1, while
for A 6= B it will generally be complex. For B = 0, the modular graph form is proportional
to a holomorphic modular form of weight a.

The modular graph form corresponding to a general graph with arbitrary exponents
A, B for which a 6= b will be neither a modular function, nor will it be holomorphic. In these
cases, there exists no unique natural normalization for the overall τ2 factor. The convention

12

adopted in (2.19) to deﬁne C is natural for its symmetry under complex conjugation. But
there are two other natural normalizations that will come in useful, deﬁned as follows,

C+(cid:20) A
C−(cid:20) A

B(cid:21) (τ ) =
B(cid:21) (τ ) =

′

R

′

R

Yr=1
Xp1,...,pR∈Λ
Yr=1
Xp1,...,pR∈Λ
B(cid:21) (τ ) = (τ2)± 1

C±(cid:20) A

(τ2)ar π− 1

2 ar− 1
(pr)ar (¯pr)br

(τ2)br π− 1

2 ar− 1
(pr)ar (¯pr)br

2 (a−b) C(cid:20) A

V

2 br

V

2 br

Yi=1
Yi=1
B(cid:21) (τ )

δ  R
Xs=1
δ  R
Xs=1

Γi s ps!
Γi s ps!

(2.24)

{3b6}

(2.25)

They are related to C by a suitable power of τ2, given as follows,

By construction, C+ and C− are modular forms with respective modular weights (0, b − a)
and (a − b, 0) and the following associated transformation properties,

C+(cid:20) A
C−(cid:20) A

B(cid:21) (τ ′) = (γ ¯τ + δ)b−a C+(cid:20) A
B(cid:21) (τ ′) = (γτ + δ)a−b C−(cid:20) A

B(cid:21) (τ )
B(cid:21) (τ )

(2.26)

When B = 0 all dependence on the momenta pr is holomorphic in τ and the normal-
ization C− is manifestly holomorphic, while when A = 0 it is C+ which is manifestly
anti-holomorphic. Note that the complex conjugation properties of C± coincide with those
of C in (2.20).

2.5 Cauchy-Riemann operators

We shall now introduce holomorphic and anti-holomorphic derivatives on the functions
and forms C, which are covariant under modular transformations. There are several closely
related and commonly used deﬁnitions of covariant derivatives acting on modular forms
that are useful in diﬀerent contexts. A brief review is given in appendix A of three such
derivatives that map modular forms of weight (u, u′) into forms of weight (u − 2, u′), (u +
1, u′ − 1) and (u, u′ − 2), respectively. The complex conjugate derivatives interchange the
action on u and u′. The last case is particularly useful since when u = 0 the covariant
derivative reduces to the Cauchy-Riemann operator, ∇ = 2iτ 2
2 ∂τ , which maps a weight
(0, u′) form into a weight (0, u′ − 2) form without the need for a connection. In particular,
on the forms C+ of weight (0, b − a) the derivative ∇ acts as follows,

∇ = +2iτ 2
¯∇ = −2iτ 2

2 ∂τ
2 ∂¯τ

: (0, b − a) → (0, b − a − 2)
: (a − b, 0) → (a − b − 2, 0)

(2.27)

{CR}

13

Explicit formulas for the action of the ﬁrst order derivatives on modular graph forms may
be obtained easily by noting that the Kronecker δ-function factors in (2.19) and (2.24) are
independent of τ and ¯τ in view of their deﬁnition in (2.11). The derivative ∇ then only
acts on the momenta pr with holomorphic dependence in the denominators, and on the
overall multiplicative factors of τ2. To evaluate these, we use the derivative of each factor,

(pr)2

′

2

¯pr

pr(cid:19) = τ 2
∇(cid:18) τ2
Xp1,...,pR∈Λ  R
Xt=1
Xp1,...,pR∈Λ  R
Xt=1

′

As a result, we have,

∇ C+(cid:20) A
¯∇ C−(cid:20) A

B(cid:21) (τ ) =
B(cid:21) (τ ) =

¯∇(cid:18) τ2

¯pr(cid:19) = τ 2

2

pr

(¯pr)2

(2.28)

at τ2

bt τ2

¯pt

pt! R
Yr=1
¯pt! R
Yr=1

pt

(τ2)ar π− 1

2 ar− 1
(pr)ar (¯pr)br

2 br

(τ2)brπ− 1

2 ar− 1

2 br

(pr)ar (¯pr)br

V

δ  R
Γi s ps!
Yi=1
Xs=1
δ  R
Γi s ps! (2.29)
Yi=1
Xs=1

V

{3b7}

The presence of the extra τ2-factor inside the ﬁrst parenthesis on the right side of (2.29)
precisely compensates for the change in modular weight due to the presence of the extra
denominator momenta. As a result, the action of the derivatives may be expressed in terms
of an algebraic action on the exponents of the C-functions, and we ﬁnd,

∇ C+(cid:20) A
¯∇ C−(cid:20) A

B(cid:21) =
B(cid:21) =

R

R

Xr=1
Xr=1

ar C+(cid:20) A + Sr
B − Sr(cid:21)
br C−(cid:20) A − Sr
B + Sr(cid:21)

(2.30)

{3b8}

In the above formulas, the R-dimensional row-vector Sr is deﬁned to have zero entry in
each slot, except for slot r where the value of the entry is 1,

Sr =h 0, · · · , 0
| {z }

r−1

, 1, 0, · · · , 0

R−r

| {z }

i

(2.31)

{3b9}

The action of Sr on the exponents is by a shift which implements the diﬀerentiation rule
of (2.24), and A ± Sr is understood in the sense of addition of the row vectors A and Sr.

2.6 Laplacian on modular graph functions

A modular covariant Laplace-Beltrami operator may be deﬁned on modular forms of any
weight. In the sequel it will suﬃce, however, to consider the Laplacian ∆ acting on modular
functions, namely of vanishing modular weight, on which the Laplacian is given by,

∆ = 4τ 2

2 ∂τ ∂¯τ = τ 2

2 (∂2

τ1 + ∂2
τ2)

(2.32)

14

for τ = τ1 + iτ2 and τ1, τ2 ∈ R, and τ2 > 0. The Laplacian acting on modular functions C,
namely with a = b, may be expressed in terms of the Cauchy-Riemann operators ∇ and ¯∇
acting on modular forms as in (2.27) by the relation,

∆ = ¯∇(τ2)−2∇

(2.33)

{3g1}

Acting on modular functions C, the modular weights work out as follows. When C has
modular weight (0, 0), then (τ2)−2∇C has modular weight (2, 0), which is mapped back to
modular weight (0, 0) by ¯∇. This relation allows us to express the action of the Laplacian
algebraically, using the relations (2.30), and we ﬁnd,

(∆ + a) C(cid:20) A

B(cid:21) =

R

Xr,r′=1

arbr′ C(cid:20) A + Sr − Sr′
B − Sr + Sr′(cid:21)

(2.34)

{1c4}

Since a = b here, we have C± = C, for which the same relations above hold.

2.7 Momentum conservation identities

The presence of a product of momentum conservation Kronecker δ-functions in the Eisen-
stein summation representing the modular graph forms C in (2.19) and (2.24) implies a set
of linear relations between modular graph forms for diﬀerent exponents. To exhibit these
relations, it suﬃces to state the following obvious relations,

  R
Xr=1

Γk r pr! V
Yi=1

δ  R
Xs=1

Γi s ps! = 0

(2.35)

valid for each k = 1, · · · , V , along with their complex conjugate. Inserting the ﬁrst fac-
tor into any Eisenstein summation may be represented conveniently in terms of the shift
operators Sr of (2.31). The resulting V relations, and their complex conjugates, may be
conveniently formulated as the following identities on the exponents,

R

Xr=1

Γk r C(cid:20) A − Sr

B (cid:21) =

R

Xr=1

Γk r C(cid:20) A

B − Sr(cid:21) = 0

(2.36)

{2g1}

valid for each k = 1, · · · , V . Multiplication by suitable factors of powers of τ2 shows
that the identities of (2.36) hold equally well when replacing C by either C+ or C−. Finally,
recalling that translation invariance on the torus renders one of the momentum conservation
Kronecker δ-functions redundant, it is clear that only V −1 of the above V pairs of relations
will be linearly independent.

15

3 Dihedral modular graph forms

The labeling of general graphs and their associated modular graph forms, as described in
section 2, is rather cumbersome. Fortunately, we shall need here only families of graphs for
which the number of vertices V is 2 or 3. For low value of V , more concrete parametrizations
are available, and the symmetry properties under permutations of the vertices and edges,
which are manifest from looking at the graphs, may be spelled out in more detail.

{sec:3}

3.1 Labeling dihedral graphs

In this section, we shall discuss the simplest general class of decorated graphs, namely
dihedral graphs for which V = 2. The exponents for a general graph with R decorated
edges may be labeled as follows,

(cid:20) A
B(cid:21) =(cid:20) a1 a2

b1

b2

· · · aR
· · ·

bR(cid:21)

and we have the following graphical representation,

A, B

=

•
•
•

a1, b1

a2, b2
· · ·

aR, bR

•
•
•

The associated modular graph form may be read oﬀ from (2.19), and is given by,

C(cid:20) A
B(cid:21) (τ ) =

′

Xp1,...,pR∈Λ

R

Yr=1

2 br

1

2 ar+ 1

(τ2/π)
(pr)ar (¯pr)br

δ  R
Xs=1

ps!

By translation invariance on the torus only a single momentum conservation Kronecker δ-
function is required on the sum. The modular graph form C is invariant under permutations
σ ∈ SR of the edges, where SR is the group of permutations of R objects. A permutation
σ acts upon momenta by σ(pr) = pσ(r) and σ(¯pr) = ¯pσ(r) and upon exponents by,

(3.1)

{3e1}

(3.2)

{fig4}

(3.3)

{3e2}

(3.4)

{1b4}

σ(cid:20) A
B(cid:21) =(cid:20) aσ(1)

bσ(1)

aσ(2)
bσ(2)

· · · aσ(R)
· · ·

bσ(R)(cid:21)

For dihedral graphs there is only a single momentum conservation relation, along with its
complex conjugate, and as a result, we have the following linear relations between their
associated modular graph forms,

R

Xr=1

C(cid:20) A − Sr

B (cid:21) (τ ) =

R

Xr=1

C(cid:20) A
B − Sr(cid:21) (τ ) = 0

16

(3.5)

{rels}

3.2 Graphs for R = 1, 2 and Eisenstein series

The class of dihedral graphs contains many of the modular graph functions that were
deﬁned and studied earlier, in particular in [6]. It will be useful to discuss these special
cases by increasing value of the number of decorated edges R. Graphs for which R = 1
vanish by momentum conservation,

for all a1, b1. Moving on to higher values of R, we proceed as follows.

C(cid:20) a1
b1(cid:21) (τ ) = 0

(3.6)

{3a9}

Graphs for which R = 2 actually contain only bivalent vertices. Therefore they might
have been discussed as graphs with V = 0, and are not strictly speaking dihedral. Nonethe-
less, it will be convenient to discuss them together with dihedral graphs, as we shall do
here. By inspection of (3.3), we readily identify the general modular function for R = 2
with the non-holomorphic Eisenstein series,

where a1, a2 ∈ Z, a = a1 + a2, and the non-holomorphic Eisenstein series Ea is deﬁned by,

C(cid:20) a 0
a 0(cid:21) (τ ) = C(cid:20) a1 a2
π p ¯p(cid:19)a
Xp∈Λ(cid:18) τ2

a1 a2(cid:21) (τ ) = Ea(τ )
= X(m,n)6=(0,0)(cid:18)

τ2

′

π|m + nτ |2(cid:19)a

Ea(τ ) =

Cauchy-Riemann derivatives of the Eisenstein series may be calculated with the help of
(2.30), and yield the following modular forms,

(3.7)

(3.8)

{Es}

(3.9)

(3.10)

{Gk}

(3.11)

{Gs}

(3.12)

For a = k the multiple derivative evaluates as follows,

∇k C(cid:20) a 0

0

Γ(a)

Γ(a + k)

a 0(cid:21) (τ ) =
0(cid:21) (τ ) = (τ2)2k C−(cid:20) 2k 0

C+(cid:20) a + k
a − k 0(cid:21) (τ )
0(cid:21) (τ ) = (τ2)2kG2k(τ )

0

C+(cid:20) 2k 0

0

where G2k is the holomorphic Eisenstein series deﬁned by,

More generally, we have,

G2k(τ ) =

1

πk p2k

′

Xp∈Λ

C(cid:20) a1 a2

b2(cid:21) (τ ) = (−)a2+b2C(cid:20) a1 + a2

b1 + b2

b1

0

0(cid:21) (τ )

These forms vanish whenever the sum of all exponents is an odd integer, and are given by
derivatives of Eisenstein series Ek when the sum of all exponents is even.

17

3.3 Graphs for general R ≥ 3

A general class of modular graph functions was deﬁned in [6] by,

Ca1,···,aR(τ ) = Xp1,···,pR∈Λ

δp,0

R

Yr=1(cid:18) τ2

π|pr|2(cid:19)ar

(3.13)

where p = p1 + · · · + pR. The function is invariant under permutations of the exponents
ar for r = 1, · · · , R. This class of modular graph functions corresponds to dihedral graphs,
and may be identiﬁed as follows,

Ca1,···,aR = C(cid:20) a1

a1

a2
a2

· · · aR

· · · aR(cid:21)

where w = a1 + · · · + aR equals the weight of the graph.

(3.14)

{3c2}

The two-loop modular graph functions Ca,b,c with R = 3 were investigated in great
detail in [6]. In particular, it was shown that the action of the Laplace operator ∆ admits
an algebraic representation of the exponents a, b, c, given by,

(cid:16)∆ − a(a − 1) − b(b − 1) − c(c − 1)(cid:17)Ca,b,c

= ab(cid:18)Ca+1,b−1,c +

1
2

Ca+1,b+1,c−2 − 2Ca+1,b,c−1(cid:19)

+ 5 permutations of a, b, c

along with the boundary relations

Ca,c,0 = EaEb − Ea+b

Ca,b,−1 = Ea−1Eb + EaEb−1

(3.15)

(3.16)

These relations, along with S3 permutation symmetry and methods of generating functions,
were used in [6] to gain a thorough understanding of the space of all such two-loop modular
graph functions. In particular, it was found that for every odd weight w, there exists a
linear relation between the functions Ca,b,c with w = a + b + c, the Eisenstein series Ew,
and the zeta value ζ(w), with integer coeﬃcients.

For R ≥ 4, the Laplace operator no longer maps the space of modular graph functions
Ca1,···,aR into itself, and the powerful methods available for R = 3 no longer directly. It is
for this reason that the results for R ≥ 4 obtained in [6] were all at the conjectural level,
and applied only to a few isolated cases, speciﬁcally for the following dihedral graphs,

D4 = C(cid:20) 1 1 1 1
1 1 1 1(cid:21)

D5 = C(cid:20) 1 1 1 1 1
1 1 1 1 1(cid:21)

D3,1,1 = C(cid:20) 2 1 1 1
2 1 1 1(cid:21)

(3.17)

{3c4}

These functions were conjectured in [6] to satisfy polynomial relations with modular func-
tions with lower numbers of loops. It will be the object of the next section to outline a
strategy for proving these conjectures, a task we shall accomplish in subsequent sections.

18

4 Strategy

The primary goals that we will achieve in this paper are as follows:

{sec:4}

1. to prove the four identities between modular graph functions conjectured in [6];

2. to understand the origin of these identities better by relating them to identities be-

tween holomorphic modular graph forms;

3. to develop an eﬃcient method for ﬁnding and establishing identities between modular

graph forms, in general, beyond those proposed in [6].

In this section, we begin by giving the precise statement of point 1. above, and then proceed
to developing a strategy for proving not only the identities conjectured in [6], but more
generally for ﬁnding and proving identities at any weight and any modular weight, and
understanding their relation with certain identities between holomorphic modular forms.

Theorem 1

The non-holomorphic modular functions F4, F5, F3,1,1 and F2,2,1 deﬁned by,

F4 = D4 − 24C2,1,1 − 3E2
F5 = D5 − 60C3,1,1 − 10E2C1,1,1 + 48E5 − 16ζ(5)

2 + 18E4

40F3,1,1 = 40D3,1,1 − 300C3,1,1 − 120E2E3 + 276E5 − 7ζ(5)
10F2,2,1 = 10D2,2,1 − 20C3,1,1 + 4E5 − 3ζ(5)

(4.1)

{4a1}

vanish identically, proving the conjectures of [6].

The dihedral modular graph functions C2,1,1, C3,1,1, D4, D5, D3,1,1 were deﬁned in (3.14)
and (3.17), while the trihedral modular graph function D2,2,1 will be deﬁned in section 8.
Assigning weight w to the non-holomorphic Eisenstein series Ew as well as to the zeta-value
ζ(w), the ﬁrst identity is homogeneous of weight 4, while the last three are homogeneous
of weight 5.

The identities between modular graph functions of Theorem 1 were conjectured in [6]
on the basis of their matching Laurent series near the cusp. Further evidence was provided
there by showing that their lowest order exponential corrections also vanish. A proof of the
weight four conjecture was given recently in [9] by direct summation of the lattice sums
generalizing a procedure used earlier in [10] for the modular graph function C1,1,1.

19

4.1 Strategy for proving modular graph function identities

It was shown in [1] that a modular graph function F for an irreducible graph of weight
w ≥ 2 has polynomial growth at the cusp τ2 → ∞, governed by a Laurent polynomial,

{sec:41}

F (τ ) =

w

Xk=1−w

fk τ k

2 + O(e−2πτ2)

(4.2)

{4b1}

where the coeﬃcients fk are constants.3 The space of modular graph functions for weight
w is closed under addition. The product of two modular graph functions F1 and F2 of
respective weights w1 and w2 is a modular function of weight w = w1 + w2 for which
the Laurent polynomial is of the general form (4.2). The identities we seek are given by
the vanishing of a modular function F which is a homogeneous polynomial of weight w
in modular graph functions, and admits a Laurent polynomial of the form (4.2). The
conjectures of (4.1) were made in [6] on the basis that the Laurent polynomial for their
respective F -function vanishes.

The strategy in this paper for proving identities of the form F = 0 will not rely on
matching Laurent series. Instead, it will be closer in spirit to the methods used in [6] to
study the functions Ca,b,c using the Laplace operator. Since, for R ≥ 4, the Laplacian no
longer maps to functions in the same space we are led to working with the enlarged space
of modular graph forms.

In the sequel, we shall develop and illustrate a sieve algorithm, based on holomorphic
subgraph reduction, for modular graph functions F of any given weight w whose funda-
mental criterion is the relation,

(∇)w−1F = 0

(4.3)

{FF}

In particular, to prove the four identities of Theorem 1, the sieve algorithm and holomorphic
subgraph reduction will be used to produce the following relations,

(∇)3F4 = (∇)4F5 = (∇)4F3,1,1 = (∇)4F2,2,1 = 0

(4.4)

{FFF}

The strategy for obtaining these results will be outlined in Section 4.3, illustrated for the
case of F4 in Section 4.4, and formulated generally in terms of the sieve algorithm and
holomorphic subgraph reduction in Section 4.6.

The key result we shall then use to prove the Theorem is the following lemma.

3More precisely, π−kfk are rational multiples of single-valued-multiple-zeta-values for 1−w ≤ k ≤ w −1,

while π−wfw is a rational number, but these features will not be of direct relevance here.

20

Lemma 1

Let F be a non-holomorphic modular function with polynomial growth near the cusp
τ2 → ∞. If F satisﬁes the diﬀerential equation,

(∇)nF = 0

(4.5)

{4b2}

for some arbitrary integer n ≥ 1, then F is constant as a function of τ .

Having established the relations (4.4), the assumptions of the Lemma will be satisﬁed
with n = w − 1 and, as a result of the Lemma, the functions F4, F5, F3,1,1 and F2,2,1 must
be constant. Knowing that their value at the cusp τ2 → ∞ vanishes from the results of [6]
then completes the proof of the Theorem.

4.2 Proof of Lemma 1

We begin by proving the Lemma, in two diﬀerent ways: the ﬁrst by relating the problem
to the Laplacian and its spectral properties, the second by more explicit calculation and
solution of the diﬀerential equation (4.5) subject to modular invariance as well as slightly
stronger assumptions on F , which hold true for modular graph functions.

4.2.1 Proof of the Lemma by Laplacian methods

The key ingredient is a factorization identity between the Laplacian ∆ = 4τ 2
on modular functions and the Cauchy-Riemann operators ∇ = 2iτ 2

2 ∂τ and ¯∇ = −2iτ 2

2 ∂¯τ ∂τ acting
2 ∂¯τ ,4

n

Ys=1(cid:16)∆ − s(s − 1)(cid:17) = ¯∇n (τ2)−2n ∇n

(4.6)

{factor}

Combining the assumption of the Lemma, ∇nF = 0, with the factorization formula (4.6),
we conclude that F must satisfy the following relation,

n

Ys=1(cid:16)∆ − s(s − 1)(cid:17)F = 0

(4.7)

{B2}

Equation (4.7) provides a weaker condition on F than the original condition ∇nF = 0 did,
so that the space of solutions of (4.7) will contain the space of solutions of (4.5), and a
solution to (4.7) need not be, in general, a solution to ∇nF = 0.

a simple check on the identity (4.6), one may verify that, upon acting on τ α

4Consideration of the operator on the left of (4.6) was suggested by Deligne [12] for use in [9]. As
2 , both sides evaluate to τ α
s=1(α2 − α − s2 + s). A full proof of the identity (4.6) may be provided by induction on n.

2

multiplied byQn

21

Next, we use the assumption that F has polynomial growth at the cusp to solve (4.7).
Indeed, it is well-known [4, 5] that the general solution with polynomial growth to the
eigenvalue equation ∆Es = s(s − 1)Es for real s is given by the non-holomorphic Eisenstein
series Es, uniquely up to a multiplicative constant. Iterating the solution process for the n
factors in (4.7), we deduce that F is given by,

F (τ ) = c0 +

csEs(τ )

n

Xs=2

(4.8)

{B3}

for a set of as yet undetermined constants cs with s = 0, 2, · · · , n.

To enforce the original condition ∇nF = 0 on the expression for F in (4.8), we enforce
the vanishing of the Laurent polynomial of ∇nF on (4.8). The Laurent polynomial of Es
has only two non-vanishing terms, one proportional to τ s
2 and the other proportional to
τ 1−s
. Thus, the contribution to the Laurent polynomial of ∇nF with the highest power
2
of τ2 arises from the s = n term in (4.8). Its vanishing requires cn = 0. Repeating the
argument for successive values of s similarly shows that cs = 0 for all s = 2, · · · , n, so that
F = c0 is constant, which completes the proof of the lemma.

4.2.2 Proof by direct calculation

A special case of Lemma 1, based on assumptions that are suﬃcient for the considerations
of this paper, may be proven by direct resolution of (4.5), subject to the conditions of
modular invariance. We shall consider modular functions F of weight w which satisfy the
equation (∇)w−1F = 0 of (4.3) and admit the following expansion near the cusp τ → ∞,
(derived in [1] for any modular graph function of weight w),

F (τ, ¯τ ) =

w

Xk=1−w

τ k
2 ϕk(q, ¯q)

(4.9)

{B5}

where ϕk(q, ¯q) is an entire function of q = e2πiτ and ¯q. By inspection, its derivative of
arbitrary order n has the following expansion,

∇nF (τ, ¯τ ) =

w+2n

Xk=1−w+n

2 ϕ(n)
τ k

k (q, ¯q)

(4.10)

{B6}

where ϕ(0)

then obey a recursion relations in n,

(4.11)

{B7}

k (q, ¯q) = ϕk(q, ¯q). The coeﬃcients ϕ(n)
ϕ(n)
w+2n = 2i∂τ ϕ(n−1)
w+n−2
ϕ(n)
= 2i∂τ ϕ(n−1)
k
ϕ(n)
1−w+n = (n − w)ϕ(n−1)

n−w

k

k−2 + (k − 1)ϕ(n−1)

k−1

22

where the middle line holds for 2 − w + n ≤ k ≤ w + 2n − 1.

Enforcing the condition ∇w−1F = 0 amounts to requiring ϕ(w−1)

k

= 0 for 0 ≤ k ≤ 3w−2.

The third recursion relation in (4.11) may then be solved algebraically, and we have,

ϕ(w−1−k)

−k

= 0

0 ≤ k ≤ w − 1

(4.12)

{B8}

so that ϕ1−w = 0. The ﬁrst two recursion relations of (4.11) may be analyzed by induction
on n, and impose the conditions ∂3w−3−k
= 0 for 0 ≤ k ≤ 3w − 4. Proceeding
by induction to all remaining values of n = w − 1, w − 2, · · · , 1, and taking into account
the truncation at k = 1 in the second recursion relation of (4.11), we ﬁnd the following
conditions,

ϕ(w−2)

τ

k

τ ϕ(w−1−m)
∂ℓ+m

3w−2−2m−ℓ = 0

1 ≤ m ≤ w − 1

0 ≤ ℓ ≤ 3w − 2 − m

(4.13)

Setting m = w − 1 produces the following relations,

∂2w−1−k
τ

ϕk = 0

1 − w ≤ k ≤ w

(4.14)

We conclude that ϕk must be a polynomial in τ of degree 2w − k − 2 with coeﬃcients which
are functions of ¯τ . Since ϕk is real and polynomial of degree 2w − k − 2 in τ it must also
be polynomial in ¯τ of degree 2w − k − 2. Modular invariance requires F to be constant.

4.3 Strategy for relating to holomorphic modular forms

While the preceding subsection provides a strategy for proving identities between modular
graph functions, it does not give much insight as to the deeper origin of these identities,
and the key relation (∇)w−1F = 0. In the present subsection, we shall bridge this gap by
relating the existence of identities between non-holomorphic modular graph functions to the
existence of identities involving only holomorphic modular graph forms. Since the ring of
holomorphic modular forms for the torus is polynomial and generated by the holomorphic
Eisenstein series G4 and G6, its structure is very tight, and results in a wealth of identities.
The basic strategy for relating identities between non-holomorphic modular functions
and holomorphic modular forms is very simple, but the detailed execution of the idea is
more involved. As may be seen from the action of the diﬀerential operator ∇ on an arbitrary
modular graph form in (2.30),

{sec:43}

∇ C+(cid:20) A

B(cid:21) =

R

Xr=1

ar C+(cid:20) A + Sr
B − Sr(cid:21)

23

(4.15)

{4c1}

∇ raises the total exponent a by one, and lowers the total exponent b by one. Here, the
total exponents a and b were deﬁned in (2.12) and respectively correspond to the sum of
the exponents of momenta holomorphic in τ and anti-holomorphic in τ . Therefore, the
action of ∇b on C+ will reduce the b-exponent to zero. Naively, one may be tempted to
conclude that such a form will be holomorphic but this is, of course, generally false since
the vanishing b-sum may be achieved when some br are positive while other br are negative.
If, however, all modular graph functions with negative exponents could be eliminated, then
the result of the descent by b operators ∇ will indeed be a holomorphic form.

Therefore, the basic criterion for reduction to holomorphic modular graph forms is the
requirement that, upon the iterative action by b copies of ∇, all modular graph forms with
negative exponents are cancelled. As will be explained in the illustration below, and in the
next section, the basic tool for the elimination of negative exponents will be by holomorphic
subgraph reduction, namely the fact that the modular subgraphs with only holomorphic
exponents may be evaluated and simpliﬁed by the methods of holomorphic modular forms.

4.4

Illustration by proving the D4 conjecture

Proving the D4 conjecture with the help of the above methods will help illustrating theses
tools and make the principle of holomorphic subgraph reduction more concrete. These
tools will be key to all other proofs in this paper.5 We begin by recalling the form of the
three-loop graph D4, and evaluating its ﬁrst derivative using (4.15),

{sec:44}

D4 = C(cid:20) 1 1 1 1
1 1 1 1(cid:21)

Applying the operator ∇ once again, we ﬁnd,

∇ D4 = 4 C+(cid:20) 2 1 1 1
0 1 1 1(cid:21)
−1 1 1 1(cid:21)

1 1 1

∇2D4 = 12 C+(cid:20) 2 2 1 1

0 0 1 1(cid:21) + 8 C+(cid:20) 3

The momentum conservation identities of (3.5), applied to the lower exponents of the second
term on the right side of the above equation, allow us to eliminate its negative exponent
entry, which results in the following expression for the second derivative,

(4.16)

{4d1}

(4.17)

{4d2}

(4.18)

{4d4}

∇2D4 = 12 C+(cid:20) 2 2 1 1

0 0 1 1(cid:21) − 24 C+(cid:20) 3 1 1 1
0 0 1 1(cid:21)

It is easy to see that the action of one further ∇ derivative on either term on the right
side will produce negative lower exponents which cannot all be eliminated with the help
of the momentum conservation relations of (3.5). It is at this point that we appeal to the
reduction of holomorphic subgraphs before proceeding to acting with further derivatives.

5We could have used an even simpler case of C1,1,1 for the purpose of illustration, but since we already

know that C1,1,1 = E(3) + ζ(3) from [9, 10], this example is really too simple.

24

4.4.1 A simple holomorphic subgraph reduction

Since the exponents in the ﬁrst two lower slots in both terms on the right side of (4.18)
vanish, there exists a one-loop subgraph for each modular graph form above, which involves
only momenta holomorphic in τ . To see this explicitly, we evaluate both modular graph
forms using (2.24), and combine the results under a single summation,

C+(cid:20) 2 2 1 1

0 0 1 1(cid:21) − 2 C+(cid:20) 3 1 1 1

0 0 1 1(cid:21) =

′

Xp1,···,p4∈Λ(cid:18) 1

p2
1 p2
2

−

1
p3
1 p2

−

2 δp,0

p1 p3

π4|p3|2 |p4|2

1

2(cid:19) τ 6

(4.19)

{4d5}

where p = p1 + p2 + p3 + p4 and we have used the symmetry under the interchange of labels
1 and 2 to symmetrize the summand. We partition the sum into the contributions from
p1 + p2 = 0 and from p1 + p2 6= 0. The contribution from p1 + p2 = 0 readily evaluates
to 3τ 4
2 G4E2, where E2 is the non-holomorphic Eisenstein series, deﬁned in (3.8), while G4
is the homomorphic modular form deﬁned in (3.11). The contribution from p1 + p2 6= 0 is
evaluated using the following identity between fractions,

1
p2
1 p2
2

−

1
p3
1 p2

−

1

p1 p3
2

= −

1

p3
1(p1 + p2)

−

1

p3
2(p1 + p2)

(4.20)

{4d6}

Collecting the contributions from both parts of the summation, we have,

C+(cid:20) 2 2 1 1

0 0 1 1(cid:21) − 2 C+(cid:20) 3 1 1 1

0 0 1 1(cid:21) = 3τ 4

2 G4E2 −

′

Xp1,···,p4

2 (1 − δp1+p2,0)

τ 6
2 δp,0

p3
1(p1 + p2)

π4|p3|2 |p4|2

(4.21)

{4d7}

Next, we change variables from p2 to p′
2, p3
and p4. Excluding p2 = 0 from the summation, as we are instructed to do, now requires
p1 6= p′
2 6= 0 by the insertion of the factor (1 − δp1+p2,0). The second term on the
right side of (4.21) thus reduces to the sum,

2 = p1 +p2, and use the summation variables p1, p′

2, and p′

−

′

Xp′

2,p3,p4∈Λ

′

Xp16=p′

2∈Λ

2
p3
1 p′
2

τ 6
2 δp′
2+p3+p4,0
π4|p3|2 |p4|2

(4.22)

The summation over p1 may be preformed with the help of the fact that the unconstrained
sum (namely ignoring the restriction p1 6= p′

2) vanishes by parity, so that we have,

′

Xp16=p′

2∈Λ

1
p3
1

= −

1
(p′
2)3

(4.23)

Our ability to perform this basic holomorphic sum provides the simplest illustration of the
general tool of holomorphic subgraph reduction which will be discussed more generally in
section 5 for dihedral graphs, and in section 7 for trihedral graphs.

25

The resulting sum is reduced to a modular graph function of the same holomorphic

weight, namely six, but with only two loops. It may be identiﬁed as follows,

′

Xp′

2,p3,p4∈Λ

2 τ 6
π4(p′

2 δp′

2+p3+p4,0

2)4|p3|2 |p4|2 = 2 C+(cid:20) 4 1 1
0 1 1(cid:21)

so that we have the following holomorphic subgraph reduction formula,

C+(cid:20) 2 2 1 1

0 0 1 1(cid:21) − 2 C+(cid:20) 3 1 1 1

0 0 1 1(cid:21) = 2 C+(cid:20) 4 1 1

0 1 1(cid:21) + 3 C+(cid:20) 4 0

2 0(cid:21)
0 0(cid:21) C+(cid:20) 2 0

(4.24)

(4.25)

{4d8}

This identity may be represented graphically by depicting an edge r with a purely holo-
morphic momentum dependence, namely with br = 0, by a dashed line, and the exponent
ar on the edge by ar − 1 square decorations on the edge, as shown in the ﬁgure below.

•
•
•
•

• − 2 •
•
•
•
•
•
•

• = 2 •
•
•
•
•
•

•
•
• + 3

× •

•

As a result, we have the following simpliﬁed expression for the second derivative of (4.18),

∇2D4 = 24 C+(cid:20) 4 1 1

0 1 1(cid:21) + 36 C+(cid:20) 4 0

0 0(cid:21) C+(cid:20) 2 0
2 0(cid:21)

(4.26)

{4d9}

This formula will be the starting point of the remaining application of the holomorphic
subgraph reduction identities.

4.4.2 A simple sieve algorithm

The other polynomials in modular graph functions of weight four are E2
2 , C2,1,1, and E4 and
they indeed enter into the D4 conjecture. The second order derivatives of these functions
may be computed in analogous fashion, and we ﬁnd,

∇2E2

2 = 8 C+(cid:20) 3 0
1 0(cid:21)2
+ 12 C+(cid:20) 4 0
0 1 1(cid:21) + 6 C+(cid:20) 3 2 1
∇2C2,1,1 = 6 C+(cid:20) 4 1 1
∇2E4 = 20 C+(cid:20) 6 0
2 0(cid:21)

0 0(cid:21) C+(cid:20) 2 0
2 0(cid:21)
1 0 1(cid:21) + 4 C+(cid:20) 6 0
2 0(cid:21)

(4.27)

We can form three linear homogeneous combinations of weight 4 from these four modular
graph functions, in which the holomorphic subgraph obstruction, proportional to G4, has

26

been removed, and they are D4 −3E2
we now apply one further derivative, to obtain,

2 as well as C2,1,1 and E4. To these three combinations,

∇3(cid:0)D4 − 3E2

1 0(cid:21) − 288 C+(cid:20) 4 0
2(cid:1) = 432 C+(cid:20) 7 0
1 0(cid:21) − 12 C+(cid:20) 4 0
∇3C2,1,1 = 108 C+(cid:20) 7 0
1 0(cid:21)
∇3E4 = 120 C+(cid:20) 7 0

0 0(cid:21) C+(cid:20) 3 0
1 0(cid:21)
0 0(cid:21) C+(cid:20) 3 0
1 0(cid:21)

(4.28)

From these three combinations, we can form two linear combinations in which the holo-
morphic subgraph obstruction, proportional to G4, has been removed, and they are E4 as
well as D4 − 3E2

2 − 24C2,1,1. The ∇3 derivative of this combination is given by,

∇3(cid:0)D4 − 3E2

2 − 24C2,1,1(cid:1) = −2160 C+(cid:20) 7 0
1 0(cid:21)

Finally, including the term 18 ∇3E4 to form ∇3F4, we ﬁnd,

∇3F4 = 0

(4.29)

(4.30)

Using Lemma 1 we conclude that F4 must be constant. Invoking the results of [6] that
F4 → 0 as τ2 → ∞, we conclude that F4 = 0.

To summarize, the method used here is based on the application of the holomorphic
subgraph reduction identities, as well as on the principle of a sieve algorithm to system-
atically eliminate the holomorphic subgraph obstructions as one takes higher and higher
∇-derivatives. We started out with four monomials of weight four, namely D4, E2
2, C2,1,1
and E4, eliminated one obstructing combination upon taking two derivatives, and one
more upon taking three derivatives. The sieve algorithm will be extended in the sequel to
identities between modular graph functions of higher weight.

4.5 Algebraic reduction identities

In addition to the holomorphic subgraph reduction identities, illustrated in the preceding
section, and to be discussed generally in section 5 for dihedral graphs, and in section 7 for
trihedral graphs, there is also a set of algebraic reduction identities. We shall here discuss
these identities for dihedral graphs, relegating the case of trihedral graphs to section 7.

The reduction applies when two zero exponents occur in the same pair of indices, in

which case the sum can be reduced as follows. When R ≥ 3, we have,

{sec:45}

C+(cid:20) a1 · · · aR−1 0

b1 · · · bR−1 0(cid:21) =

R−1

Yr=1

C+(cid:20) ar 0

br 0(cid:21) − C+(cid:20) a1 · · · aR−1
b1 · · · bR−1(cid:21)

27

(4.31)

{4e1}

This relation is the generalization of the relation Ca,b,0 = EaEb−Ea+b for the Ca,b,c-functions
of (3.14), which were established and used extensively in [6]. To prove (4.31), we write,

C+(cid:20) a1 · · · aR−1 0

b1 · · · bR−1 0(cid:21) =

′

Xp1,···,pR∈Λ

δp,0

R−1

Yr=1

(τ2)ar π− 1

2 ar− 1

2 br

(pr)ar (¯pr)br

(4.32)

where p = p1 + · · · + pR. The sum over the single momentum pR may be carried out
explicitly and, since pR 6= 0, the sum over pR has the only eﬀect of requiring that the sum
over the remaining pr for r = 1, · · · , R − 1 cannot vanish. Hence we get,

C+(cid:20) a1 · · · aR−1 0

b1 · · · bR−1 0(cid:21) =

′

Xp1,···,pR−1∈Λ

(1 − δp′,0)

R−1

Yr=1

(τ2)ar π− 1

2 ar− 1

2 br

(pr)ar (¯pr)br

(4.33)

where p′ = p1 + · · · + pR−1. Decomposing the sum into the two contributions arising from
the terms in the parentheses on the right side, we get (4.31) using (3.10).

4.6 Sieve algorithm for constructing modular identities

In this subsection, the sieve algorithm by which polynomial identities between modular
graph functions are produced for arbitrary weight will be made explicit. We shall explain
how the fundamental condition (∇)w−1F = 0 of (4.3) may once again be obtained by a
sieve algorithm based on holomorphic subgraph reduction.

The space of polynomials in modular graph functions that are homogeneous of weight w
is generated by the modular graph functions associated with irreducible graphs, and will be
denoted Vw. For high enough w, the space Vw will include contributions from dihedral and
trihedral graphs, as well as from graphs with larger numbers of vertices. The operator ∇
maps Vw to modular graph forms outside of Vw. Following the nomenclature of section 2.3,
a general modular graph form may be represented with the help of an array of exponents,

{sec:46}

B12(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) A12

· · ·(cid:12)(cid:12)(cid:12)(cid:12)

A1V

B1V (cid:12)(cid:12)(cid:12)(cid:12)

A23

B23(cid:12)(cid:12)(cid:12)(cid:12)

· · ·(cid:12)(cid:12)(cid:12)(cid:12)

A2V

B2V (cid:12)(cid:12)(cid:12)(cid:12)

· · ·(cid:12)(cid:12)(cid:12)(cid:12)

AV −1 V

BV −1 V (cid:21)

(4.34)

{4f1}

Here V is the number of vertices of the graph with valence at least equal to three, which are
labeled by i = 1, · · · , V and the ordered pairs of vertices i < j label the decorated edges.
The exponent matrices Aij, Bij, and the total exponents a, b are given by,

Aij = [aij 1 aij 2

· · · aij µij ]

Bij = [bij 1

bij 2

· · · bij µij ]

a =

b =

28

aij µij

V

µij

Xi<j
Xr=1
Xi<j
Xr=1

µij

V

bij µij

(4.35)

{4f2}

where µij is the number of decorated edges spanned between vertices i and j. We shall
refer to the pair (a, b) as the weight of the modular graph form of (4.34), and extend the
notion of weight to products of modular graph forms by adding their weights. Modular
graph functions in Vw have weight (w, w), and all the exponents satisfy aij r = bij r ≥ 1.

4.6.1 Holomorphic subgraph reduction

Applying the operator ∇n to a function in Vw with the help of (4.15) gives a modular graph
form of weight (a + n, a − n) with a = w. When n = mini,j,r(bij r) at least one of the terms
in this linear combination has one vanishing lower exponent. This phenomenon is nicely
illustrated in the example of the D4 graph where the ﬁrst derivative in the second equation
in (4.16) produces one vanishing lower exponent.

Applying one further derivative will produce one term where a lower exponent becomes
−1, while all other exponents remain strictly positive (the second term on the right side
of (4.17) in the D4 example), along with a number of other terms for which one or two
lower exponents vanish (the ﬁrst term on the right side of (4.17) in the D4 example). The
−1 entry may be removed from the lower exponents by using the momentum conservation
identities, and produces terms with either one or two vanishing lower exponents (as in (4.18)
for the D4 example). If the vanishing lower exponents occur in the same block Bij then
applying yet one further derivative will produce negative lower exponents which cannot be
removed by the momentum conservation identities.

More generally, if all the edges on which the lower exponents vanish form a subgraph
which contains a closed loop, then further application of a derivative will produce negative
exponents which cannot be removed by the momentum conservation identities. However,
when all the edges on which the lower exponents vanish form a subgraph without any closed
loops, then momentum conservation identities always allow one to remove all negative
exponents. Therefore, holomorphic one-loop subgraphs pose an obstruction to removing
all negative lower exponents at the subsequent order of diﬀerentiation in ∇. Holomorphic
subgraphs present the only such obstruction.

To make the above discussion more concrete, we introduce the following spaces.

1. V(a,b) is the vector space of polynomials of weight (a, b) generated by irreducible
modular graph functions for which aij r ≥ 1 and bij r ≥ 0 for all i, j, r, such that the
edges on which bij r = 0 form a subgraph which contains no closed loops.

2. V 0

(a,b) is the vector space of polynomials of weight (a, b) generated by irreducible
modular graph functions for which aij r ≥ 1 and bij r ≥ 0 for all i, j, r, such that the
edges on which bij r = 0 form a subgraph which contains precisely one closed loop.

29

From these deﬁnitions, it is clear that,

V(a,b) ∩ V 0

(a,b) = 0

Va ⊂ V(a,a)

Va ∩ V 0

(a,a) = 0

(4.36)

Implementing the arguments of the preceding paragraph, the diﬀerential operator ∇ is
found to act as follows,

∇ : V(a,b) → V(a+1,b−1) ⊕ V 0

(a+1,b−1)

(4.37)

{map}

The component of the range of ∇ along the subspace V 0
(a+1,b−1) may or may not vanish. This
is nicely illustrated by the action of ∇ on the space of weight 4 modular graph functions,
calculated in Section 4.4, for which we have for example,

∇D4 ∈ V(5,3)
∇2D4 ∈ V(6,2) ⊕ V 0

(6,2)

(4.38)

In this case, the space V 0
(4.18), each of which contains a holomorphic one-loop subgraph.

(6,2) contains the combination of two terms on the right side of

Holomorphic one-loop subgraphs may be reduced to a linear combination of subgraphs
without closed loops, whose coeﬃcients are holomorphic modular forms G2k. The phe-
nomenon of holomorphic subgraph reduction was already observed in the D4 example of
(4.25) where the holomorphic two-point subgraphs produce a term proportional to G4, and
will be presented in detail for three-point subgraphs in section 7. The procedure applies
to holomorphic one-loop subgraphs with an arbitrary number of points, and leads to the
following decomposition of an arbitrary element v0 ∈ V 0

(a,b),

v0 = v +Xk=2

τ k
2 G2k v(k)

(4.39)

where v ∈ V(a,b) and v(k) ∈ V(a−2k,b). The modular graph forms v(k) correspond to graphs
which have one fewer loop than v0 does, as each holomorphic form G2k accounts for one
loop. The modular graph form v will also correspond to a graph with fewer loops than v0.

4.6.2 The sieve algorithm

The sieve algorithm proceeds as follows. We deﬁne a sieve of subspaces of V(a,b),

V(a,b) ⊃ V (1)

(a,b) ⊃ V (2)

(a,b) ⊃ · · · ⊃ V (b−1)

(a,b)

(4.40)

by the following iterative procedure. Starting with n = 1, we deﬁne V (1)
subspace of V(a,b) whose range under ∇ has vanishing component along V 0
excludes contributions with holomorphic closed loop subgraphs,

(a,b) to be the maximal
(a,b), and therefore

∇ : V (1)

(a,b) → V(a+1,b−1)

(4.41)

30

The process may be iterated to deﬁne the maximal subspace V (1)
maximal subspace V (2)
contributions from the respective ranges of ∇,

(a+1,b−1) of V(a+1,b−1), and the
(a,b) which similarly exclude holomorphic closed loop subgraph

(a,b) of V (1)

(a+1,b−1) → V(a+2,b−2)

∇ : V (1)
∇ : V (2)
(a,b)
∇2 : V (2)
(a,b)

→ V (1)

(a+1,b−1)

→ V(a+2,b−2)

(4.42)

More generally, we deﬁne recursively the space V (n)
which excludes holomorphic closed loop subgraph contributions from the range of ∇,

(a,b) as the maximal subspace of V (n−1)

(a,b)

∇ : V (n)

(a,b) → V (n−1)

(a+1,b−1)

and therefore,

∇n : V (n)

(a,b) → V(a+n,b−n)

(4.43)

(4.44)

The subspaces V (n)
subspace of Vw such that,

w may then be deﬁned by the inclusion Vw ⊂ V(w,w), namely, V (1)

w is the

and so on. These spaces produce the associated sieve,

∇ : V (1)

w → V(w+1,w−1)

Vw ⊃ V (1)

w ⊃ V (2)

w ⊃ · · · ⊃ V (w−1)

w

(4.45)

(4.46)

The Eisenstein series Ew belongs to each space in the sieve Ew ∈ V (n)
w for all 0 ≤ n ≤ w − 1.
The number of linearly independent identities between modular graph functions at weight
w is then given by,

dim V (w−1)

w

− 1

(4.47)

since a further action of ∇ on V (w−1)
forms, which must all be proportional to G2w.

w

will contain only one-loop holomorphic modular graph

Illustrating this iterative construction with the example of weight 4, we have,

2 , C2,1,1, E4}
2 , C2,1,1, E4}

V4 = {D4, E2
V (1)
4 = {D4, E2
V (2)
4 = {D4 − 3E2
V (3)
4 = {D4 − 3E2

2, C2,1,1, E4}
2 − 24C2,1,1, E4}

(4.48)

Acting once again with ∇ on ∇3V (3)
4 produces only holomorphic modular graph functions
which are one-loop, and thus must be proportional to G8. Thus, there must exist a single
linear combination in ∇3V (3)
4 which is mapped to 0 by ∇. Since this combination is a form
of modular weight (0, −6) it must vanish, which leads to the relation ∇3F4 = 0.

31

5 Holomorphic subgraph reduction in dihedral graphs

In this section, we shall derive general holomorphic subgraph reduction identities for dihe-
dral graphs, leaving the discussion for dihedral graphs to section 7. Holomorhic subgraph
reduction for dihedral graphs will apply to modular graph functions of the following type,

{sec:5}

C+(cid:20) a+ a− A
0 B(cid:21)

0

A = [ a1 a2 · · · ar ]
B = [ b1 b2 · · · br ]

(5.1)

where we shall assume that a+, a− ≥ 1, and aρ, bρ ≥ 1 for all ρ = 1, · · · , r. To guarantee
convergence of all subgraphs, we shall also assume that a+ + a− ≥ 3. The corresponding
lattice sum may be arranged as follows,

C+(cid:20) a+ a− A

0 B(cid:21) =

0

′

Xp1,···,pr∈Λ Xp0∈Λ

δp0+p,0 (τ2)a0 Ga+,a−(p0)

(τ2)aρπ− 1

2 aρ− 1

2 bρ

(pρ)aρ (¯pρ)bρ

(5.2)

{5a2}

r

Yρ=1

Here, we use the notation p0 = p++p− for the external momentum through the holomorphic
subgraph, a0 = a+ + a− for the partial weight of the subgraph, and p = p1 + · · · + pr. Note
that the summation range of p0 is over the full lattice Λ, including p0 = 0. We have factored
the part of the sum that corresponds to the subgraph with only holomorphic momenta p±
and corresponding exponents a±, since this is the holomorphic subgraph which we wish to
reduce. The summation corresponding to the holomorphic subgraph is given by,

Ga+,a−(p0) =

′

Xp+, p−∈Λ

p++p−=p0

1

2 a0 (cid:18)

1

2π

1

(p+)a+ (p−)a−

+

1

(p−)a+ (p+)a−(cid:19)

(5.3)

{5a3}

where we have symmetrized in the momenta p±. We have the following parity relation,

Ga+,a−(−p0) = (−)a0 Ga+, a−(p0)

(5.4)

5.1 Evaluating holomorphic subgraphs

In this subsection, we evaluate the holomorphic sums Ga+,a−(p). For p0 = 0, the sum
Ga+, a−(0) vanishes identically when a0 is odd, by parity , while when a0 is even we have,

Ga+, a−(0) = (−)a+Ga0

(5.5)

{5b4}

where Ga0 is the holomorphic Eisenstein series of modular weight (a0, 0) deﬁned in (3.11).

To evaluate Ga+,a−(p0) for p0 6= 0, we use the following standard algebraic identity,

1

(p+)a+ (p−)a−

= +

+

a+

Xk=1(cid:18) a0 − 1 − k
a+ − k (cid:19)
Xk=1(cid:18) a0 − 1 − k
a− − k (cid:19)

a−

32

1

(p+)k (p0)a0−k

1

(p−)k (p0)a0−k

(5.6)

To evaluate Ga+, a−(p0), we need to interchange the sums over k with the sums over p±. The
sums over p± are absolutely convergent for k ≥ 3, but are only conditionally convergent
for k = 1, 2. To be allowed to interchange the summations, we introduce the Eisenstein
regulator on the summation integers m, n which label the lattice momenta by p = m + nτ .
We deﬁne the following Eisenstein-regularized sums,

Qk(p0) = lim
P →∞

′

X−P ≤m,n≤P

δp++p−,p0(cid:18) 1

2(p+)k +

1

2(p−)k(cid:19)

(5.7)

where the cut-oﬀ P is required in order to deﬁne the conditionally convergent multiple
sums when k = 1, 2. In terms of Qk(p0), the modular form Ga+,a−(p0) evaluates to,

π

1

2 a0 Ga+, a−(p0) =

a+

Xk=1(cid:18) a0 − 1 − k

a+ − k (cid:19) Qk(p0)
(p0)a0−k +

a−

Xk=1(cid:18) a0 − 1 − k

a− − k (cid:19) Qk(p0)

(p0)a0−k

(5.8)

{5b9}

It remains to evaluate the holomorphic sums Qk(p0), which we shall do next.

For k ≥ 3, the sum over p+ in Qk(p) is absolutely convergent, and the Eisenstein
regularization is not required for its evaluation. The two terms in the summand contribute
equally. When p0 = 0, we ﬁnd the modular form Gk,

Qk(0) = Xp+6=0

1
(p+)k = πk/2Gk

(5.9)

When p0 6= 0, we solve for p− in terms of p0 and p+ by enforcing the constraint, and we
have p− = p0 − p+. This requires that in the remaining sum over p+, we set p+ 6= 0 as well
as p− 6= p0. As a result, we ﬁnd,

Qk(p0) = Xp+6=0,p0

1
(p+)k = πk/2Gk −

1

(p0)k

(5.10)

{5f1}

Note that Gk is independent of p0, so that all p0-dependence is in the second term.

For k = 1, 2, the sum is no longer absolutely convergent, and we need to use the
Eisenstein regularization. The two terms in the summand still contribute equally. The
calculation is standard, and will be reviewed in appendix B. The results are as follows,

Q2(p0) = πG2 −

1

Q1(p0) = −iπ

(p0)2
p0 − ¯p0
τ − ¯τ

Q2(0) = −4πi∂τ ln η(τ )

−

1
p0

(5.11)

{5f2}

where η(τ ) is the Dedekind η-function, and G2 the regularized Eisenstein series.

33

5.2 Eliminating holomorphic subgraphs

Using the results of the preceding subsection, we are now in a position to provide a general
formula for the value of the holomorphic subgraphs, and use this evaluation to eliminate
the contribution of the holomorphic subgraph from (5.2). For p0 = 0, the result was already
given in (5.5). For p0 6= 0, the result of (5.8) may be recast in the following form,

π

1

2 a0Ga+, a−(p0) = +

−

a+

a−

Xk=3(cid:18) a0 − 1 − k
(p0)a0 (cid:18) a0

a+ − k (cid:19) πk/2Gk
(p0)a0−k +
a+(cid:19) +(cid:18) a0 − 2
a+ − 1(cid:19)(cid:18) πG2

Xk=3(cid:18) a0 − 1 − k

a− − k (cid:19) πk/2Gk
τ2 (p0)a0−1(cid:19)

(p0)a0−2 +

(p0)a0−k

π ¯p

1

(5.12)

{5b5}

Here, we have used the following relation between binomial coeﬃcients to evaluate the
coeﬃcient in the ﬁrst term on the the second line,

a+

Xk=1(cid:18) a0 − 1 − k

a+ − k (cid:19) +

a−

Xk=1(cid:18) a0 − 1 − k

a− − k (cid:19) =(cid:18) a0
a+(cid:19)

(5.13)

Assembling all the contributions to the elimination of an arbitrary one-loop holomorphic
subgraph, we obtain,

(5.14)

{redux}

C+(cid:20) a+ a− A

0 0 B(cid:21) = C+(cid:20) a+ a−

a+

+

B(cid:21) −(cid:18) a0
a+ − k (cid:19) C+(cid:20) k 0
a− − k (cid:19) C+(cid:20) k 0

0 0 (cid:21) C+(cid:20) A
Xk=4(cid:18) a0 − 1 − k
Xk=4(cid:18) a0 − 1 − k
+(cid:18) a0 − 2
a+ − 1(cid:19)(cid:26)τ 2

+

a−

0

a+(cid:19) C+(cid:20) a0 A
0 B(cid:21)
0 0(cid:21) C+(cid:20) a0 − k A
B(cid:21)
0 0(cid:21) C+(cid:20) a0 − k A
B(cid:21)

0

0

2 G2 C+(cid:20) a0 − 2 A

B(cid:21) + πτ2 C+(cid:20) a0 − 1 A
B(cid:21)(cid:27)

−1

The ﬁrst term on the right side arises from the contribution of p0 = 0, while the remaining
terms arise from p0 6= 0 with the help of (5.12). The terms for k = 3 on the second and third
lines, which were present in (5.12), have been omitted as they vanish in view of G3 = 0.
Similarly, the contributions to the sum for any odd value of k will also vanish.

5.3

Iterative structure of the reduction

The starting point of any iterative procedure will be a modular graph form with positive
exponents. The recursive procedure that will be used throughout consists in applying

34

the operator ∇ repeatedly until one of the exponents in the lower (anti-holomorphic) row
vanishes, while all other exponents in the lower row are strictly positive. Thus, the next
application of ∇ is then to a modular graph form of the following type,

C+

Γ = C+(cid:20) a1 a2 · · · aℓ aℓ+1 · · · ar
bℓ+1 · · · br(cid:21)

0 1 · · · 1

1 ≤ ℓ ≤ r

(5.15)

Here, we have used the permutation symmetry of dihedral graphs on pairs to order the
lower exponents so that 2 ≤ bℓ+1, · · · , br, with the understanding that for ℓ = 1 there are
no entries in the lower row which equal 1. Working out the derivative gives,

∇ C+

Γ = a1 C+(cid:20) a1 + 1 a2 · · · aℓ aℓ+1 · · · ar
bℓ+1 · · · br (cid:21)

1 · · · 1

−1

+

+

ℓ

0 1 · · ·

aj C+(cid:20) a1 a2 · · · aj + 1 · · · aℓ aℓ+1 · · · ar
bℓ+1 · · · br (cid:21)
Xj=2
aj C+(cid:20) a1 a2 · · · aℓ aℓ+1 · · · aj + 1 · · · ar
· · · br(cid:21)
Xj=ℓ+1

0 1 · · · 1

bℓ+1 · · ·

bj − 1

· · · 1

0

r

(5.16)

The terms on the third line above have only one zero on the bottom row, so they are
ready to proceed to the next iterative step. To the term on the ﬁrst line we may apply the
momentum conservation identity. This will produce r − ℓ terms that have only one zero
on the bottom row, and are ready for the next iterative step. It will also produce ℓ − 1
terms with two zeros on the bottom row of exponents, which together with the terms on
the second line give,

∇ C+

Γ = +

−

ℓ

Xj=2
Xj=2

ℓ

0 1 · · ·

aj C+(cid:20) a1 a2 · · · aj + 1 · · · aℓ aℓ+1 · · · ar
bℓ+1 · · · br(cid:21)
bℓ+1 · · · br (cid:21) + · · ·
a1 C+(cid:20) a1 + 1 a2 · · · aj

· · · aℓ aℓ+1 · · · ar
· · · 1

1 · · ·

· · · 1

0

0

0

(5.17)

where the ellipses indicate terms with only a single zero on the bottom row of exponents.
We shall now show that the Eisenstein-regularized terms in the holomorphic reduction
identities cancel. In the general expression given in (5.14), these terms are on the last line
on the right side. We specialize to the two terms with label j, for which a0 = a1 + aj + 1.
Using the results of (5.14), we ﬁnd a common factor which only depends on j, and from the
terms on the second and third lines above, we ﬁnd the following contribution for given j,

aj(cid:18) a1 + aj − 1

aj

(cid:19) − a1(cid:18) a1 + aj − 1

a1

(cid:19) = 0

(5.18)

which cancels for all j. The remaining terms in the holomorphic reduction formula corre-
spond to the ﬁrst three lines of (5.14).

35

5.4 Holomorphic subgraph reduction for low weight a0

We shall now list the combinations of holomorphic subgraphs, discussed in the previous
section, up to weight a0 ≤ 8, and for any value r ≥ 1. For r = 1 and even weight a0, the
formulas below hold provided their last term on the right side, proportional to C+[A B]t,
is set to zero, in accord with (3.6).
• For a0 = 4 we have the combination,

{sec:54}

• For a0 = 5 we have the combination,

0 0 B(cid:21) − 2 C+(cid:20) 3 1 A
C+(cid:20) 2 2 A
0 0 B(cid:21) − 3 C+(cid:20) 4 1 A
C+(cid:20) 3 2 A

• For a0 = 6 we have the combinations,

• For a0 = 7 we have the combinations,

0 0 B(cid:21) − 6 C+(cid:20) 5 1 A
C+(cid:20) 3 3 A
C+(cid:20) 4 2 A
0 0 B(cid:21) − 4 C+(cid:20) 5 1 A
0 0 B(cid:21) − 2 C+(cid:20) 5 2 A
C+(cid:20) 4 3 A
0 0 B(cid:21) − 5 C+(cid:20) 6 1 A
C+(cid:20) 5 2 A
0 0 B(cid:21) − 4 C+(cid:20) 5 3 A
3C+(cid:20) 4 4 A
0 0 B(cid:21) − 5 C+(cid:20) 6 2 A
2C+(cid:20) 5 3 A

0 0 B(cid:21) = 16 C+(cid:20) 6 A
0 0 B(cid:21) = 9 C+(cid:20) 6 A
0 0 B(cid:21) = 7 C+(cid:20) 7 A
0 0 B(cid:21) = 14 C+(cid:20) 6 A
0 0 B(cid:21) = 14 C+(cid:20) 8 A
0 0 B(cid:21) = 28 C+(cid:20) 8 A

• For a0 = 8 we have the combinations,

0 B(cid:21) + 3τ 4
0 B(cid:21) − 3τ 4

0 0 B(cid:21) = 2 C+(cid:20) 4 A
0 0 B(cid:21) = 5 C+(cid:20) 5 A
0 B(cid:21) − 6τ 4
0 B(cid:21) − 3τ 4
0 B(cid:21) − 3τ 4
0 B(cid:21) − 3τ 4
0 B(cid:21) − 6τ 4
0 B(cid:21) − 9τ 4
2 G6 C+(cid:20) 2 A
0 B(cid:21) − 3τ 4
2 G6 C+(cid:20) 2 A

2 G4 C+(cid:20) A
B(cid:21)
2 G4 C+(cid:20) 1 A
0 B(cid:21)
2 G4 C+(cid:20) 2 A
0 B(cid:21) + 5τ 6
2 G4 C+(cid:20) 2 A
0 B(cid:21) + 5τ 6
2 G4 C+(cid:20) 3 A
0 B(cid:21)
2 G4 C+(cid:20) 3 A
0 B(cid:21) − 5τ 6
2 G4 C+(cid:20) 4 A
0 B(cid:21) + 7τ 8
2 G4 C+(cid:20) 4 A
0 B(cid:21)
2 G8 C+(cid:20) A
B(cid:21)
2 G4 C+(cid:20) 4 A
0 B(cid:21)
2 G8 C+(cid:20) A
B(cid:21)

0 B(cid:21) − 7τ 8

0 B(cid:21) + 7τ 8

−5τ 6

−5τ 6

C+(cid:20) 6 2 A

0 0 B(cid:21) − 6 C+(cid:20) 7 1 A

0 0 B(cid:21) = 20 C+(cid:20) 8 A

(5.19)

(5.20)

2 G6 C+(cid:20) A
B(cid:21)
2 G6 C+(cid:20) A
B(cid:21) (5.21)

(5.22)

2 G6 C+(cid:20) 1 A
0 B(cid:21)
2 G8 C+(cid:20) A
B(cid:21)

(5.23)

The holomorphic subgraph reduction formula obtained more informally in (4.25) is seen to
be a special case of the identity given above for a0 = 4 and A = B = [1 1].

36

6 Proving dihedral graph D5 and D3,1,1 conjectures

In this section, we shall prove the D5 and D3,1,1 parts of Theorem 1 in (4.1). They are
given by the vanishing of the modular functions F5 and F3,1,1 deﬁned as follows,

{sec:6}

F5 = D5 − 60C3,1,1 − 10E2C1,1,1 + 48E5 − 16ζ(5)

40F3,1,1 = 40D3,1,1 − 300C3,1,1 − 120E2E3 + 276E5 − 7ζ(5)

(6.1)

{6a0}

6.1 Preliminary derivative formulas

Given the identiﬁcations D5 = C1,1,1,1,1, D3,1,1 = C2,1,1,1, and C3,1,1, it is clear that these
modular graph functions are of the type Ca1,···,aR, and are special cases of the following
general classes of dihedral modular graph functions,

Dℓ = C1ℓ = C(cid:20) 1ℓ
1ℓ(cid:21)

Ck,1ℓ = C(cid:20) k 1ℓ
k 1ℓ(cid:21)

(6.2)

where k ≥ 2 and we use the abbreviation 1ℓ = [1 1 · · · 1] for a row vector of length ℓ whose
entries are all equal to one. Their ﬁrst derivatives may be evaluated with the help of the
algebraic representation of (2.24), and we have,

1ℓ−1

∇ C(cid:20) 1ℓ
1ℓ(cid:21) = ℓ C+(cid:20) 2
1ℓ−1(cid:21)
k 1ℓ(cid:21) = k C+(cid:20) k + 1
∇ C(cid:20) k 1ℓ

k − 1

0

1ℓ

1ℓ(cid:21) + ℓ C+(cid:20) k 2 1ℓ−1
k 0 1ℓ−1(cid:21)

(6.3)

Their second derivatives may be evaluated using (2.24), and simpliﬁed with the help of the
holomorphic subgraph reduction identities, and we ﬁnd,

1ℓ(cid:21) = 2ℓ(ℓ − 1) C+(cid:20) 4
∇2 C(cid:20) 1ℓ
k 1ℓ(cid:21) = k(k + 1) C+(cid:20) k + 2
∇2 C(cid:20) k 1ℓ

0

1ℓ−2

1ℓ−2(cid:21) + 3ℓ(ℓ − 1)τ 4

2 G4 C+(cid:20) 1ℓ−2
1ℓ−2(cid:21)
k − 1 0 1ℓ−1(cid:21)

2 1ℓ−1

1ℓ

k − 2 1ℓ(cid:21) + 2kℓ C+(cid:20) k + 1
k 0 1ℓ−2(cid:21) + 3ℓ(ℓ − 1)τ 4

+2ℓ(ℓ − 1) C+(cid:20) k 4 1ℓ−2

2 G4 C+(cid:20) k 1ℓ−2
k 1ℓ−2(cid:21)

(6.4)

{secder}

These relations will suﬃce to evaluate all the second order derivatives needed to prove the
conjectured identities for dihedral modular graph functions. To evaluate higher derivatives,
it will be convenient to do so graph by graph, which we shall do next.

37

6.2 Proof of the D5 conjecture

The proof of the D5 conjecture proceeds parallel to the proof for D4. It will be helpful to
use the following relation in equation in (6.1), C1,1,1 = E3 + ζ(3), established in [10, 6]. We
begin by computing the second derivatives of D5 and C3,1,1 using the formulas of (6.4),

∇2D5 = 40 C+(cid:20) 4 1 1 1
∇2C3,1,1 = 12 C+(cid:20) 5 1 1

0 1 1 1(cid:21) + 60τ 4
1 1 1(cid:21) + 12 C+(cid:20) 4 2 1

2 G4 C1,1,1

2 0 1(cid:21) − 4 C+(cid:20) 3 3 1

2 0 1(cid:21) + 4 C+(cid:20) 7 0
3 0(cid:21)

(6.5)

{6c1}

Since the holomorphic form G4 cannot be diﬀerentiated further without producing non-
holomorphic terms, we shall re-express it in terms of E2 by the relation ∇2E2 = 6τ 4
2 G4
which is already familiar from the case of the proof for D4. The holomorphic factor may then
be eliminated from the right side the ﬁrst line in (6.5) by subtracting the term ∇2(E2C1,1,1)
from both sides of the ﬁrst line in (6.5), so that we obtain,

Taking one further derivative of this combination, as well as of ∇2C3,1,1 gives,

∇2(cid:16)D5 − 10E2C1,1,1(cid:17) = 40 C+(cid:20) 4 1 1 1
∇3(cid:16)D5 − 10E2C1,1,1(cid:17) = 1080 C+(cid:20) 6 1 1
∇3 C3,1,1 = 60 C+(cid:20) 6 1 1
+12 C+(cid:20) 3 4 1

0 1 1 1(cid:21) − 20(∇E2) (∇E3) − 10E2(∇2E3)
0 1 1(cid:21) − 30(∇E2)(∇2E3) − 240τ 4
0 1 1(cid:21) + 72 C+(cid:20) 5 2 1
1 0 1(cid:21) − 36 C+(cid:20) 4 3 1
1 0 1(cid:21)
2 0(cid:21) − 4τ 4
1 0 1(cid:21) + 72 C+(cid:20) 8 0

2 G4 (∇E3)

2 G4 (∇E3)

(6.6)

(6.7)

{6c6}

Combining the two lines of (6.7) into F5, the pre-factor −60 of C3,1,1 which occurs in the
combination F5 is seen to be responsible for precisely canceling against one another the
terms proportional to the holomorphic form G4. Collecting all contributions, the third
derivative of F5 is found to be given by,

∇3F5 = −2520 C+(cid:20) 6 1 1
−720 C+(cid:20) 3 4 1

0 1 1(cid:21) − 4320 C+(cid:20) 5 2 1
1 0 1(cid:21) + 5760 C+(cid:20) 8 0

1 0 1(cid:21) + 2160 C+(cid:20) 4 3 1
1 0 1(cid:21)
2 0(cid:21) − 30(∇E2)(∇2E3)

(6.8)

Applying a further derivative, and using the auxiliary formulas of appendix C, we ﬁnd,

∇4F5 = 0

(6.9)

Therefore, the conditions of Lemma 1 are satisﬁed, and we conclude that F5 is constant. The
proof is completed using the fact that the Laurent polynomial of the asymptotic expansion
of F5 near the cusp was already shown to vanish in [6], so that F5 = 0.

38

6.3 Proof of the D3,1,1 conjecture

The derivatives of C3,1,1 have already been computed in (6.5) and (6.7). In addition, we
need the derivatives of D3,1,1 = C2,1,1,1, which are given as follows,

∇2 D3,1,1 = 6 C+(cid:20) 4 1 1 1
+12 C+(cid:20) 4 2 1

0 1 1 1(cid:21) + 12 C+(cid:20) 3 2 1 1
0 2 1(cid:21) + 18τ 4

2 G4E3

1 0 1 1(cid:21) − 6 C+(cid:20) 2 3 1 1
1 0 1 1(cid:21)

(6.10)

{6d1}

The dependence on the holomorphic form G4 may be eliminated from the right side by
subtracting the combination ∇2(3E2E3) from both sides, and doing so we ﬁnd,

∇2(D3,1,1 − 3E2E3) = 6 C+(cid:20) 4 1 1 1
+12 C+(cid:20) 4 2 1

1 0 1 1(cid:21) − 6 C+(cid:20) 2 3 1 1
1 0 1 1(cid:21)
0 1 1 1(cid:21) + 12 C+(cid:20) 3 2 1 1
0 2 1(cid:21) − 6(∇E2)(∇E3) − 3E2(∇2E3)

(6.11)

Applying one further derivative, and using the auxiliary formulas of appendix C, we ﬁnd,

∇3(D3,1,1 − 3E2E3) = 72 C+(cid:20) 6 1 1
+108 C+(cid:20) 8 0

0 1 1(cid:21) + 72 C+(cid:20) 4 3 1
0 1 1(cid:21)

0 1 1(cid:21) − 108 C+(cid:20) 5 2 1
2 0(cid:21) − 9(∇E2)(∇2E3) − 5(∇2E2)(∇E3)

(6.12)

{6d2}

Combining the expression for the third order derivative of C3,1,1 from the second line of
(6.7), with the result from (6.12), we obtain the third derivative of F3,1,1,

∇3 F3,1,1 = −378 C+(cid:20) 6 1 1
+270 C+(cid:20) 4 3 1

0 1 1(cid:21) − 108 C+(cid:20) 5 2 1
1 0 1(cid:21) + 1017 C+(cid:20) 8 0

0 1 1(cid:21) − 540 C+(cid:20) 5 2 1
2 0(cid:21) − 9(∇E2)(∇2E3)

1 0 1(cid:21) − 18 C+(cid:20) 4 3 1
0 1 1(cid:21)

(6.13)

Applying one further derivative, and using the auxiliary formulas of appendix C, one ﬁnds,

∇4 F3,1,1 = 0

(6.14)

Therefore, the conditions of Lemma 1 are satisﬁed and F3,1,1 must be constant. Since the
Laurent polynomial of its asymptotic expansion near the cusp was already shown to vanish
in [6], we conclude that of F3,1,1 = 0.

39

7 Trihedral graphs

Trihedral graphs have three vertices, so V = 3. The total number of edges R is partitioned
into three sets, R = R1 + R2 + R3, where Ri for i = 1, 2, 3 denote the numbers of edges
connecting pairs of vertices. The labeling of the exponents is shown in the following diagram
using the general notation of section 2.3.

{sec:10}

2

A2,B

A

1

,

B

1

A3, B3

(7.1)

Each line represents a collection of labels, and the labeling of the exponents is shorthand
for the following sets of labels

The graphical representation is based on the double edge notation of section 2.3. The
associated modular graph form is given by,

Ai = [ ai
Bi = [ bi

1 ai
2 bi

2 · · · ai
2 · · · bi

Ri ]
Ri ]

(7.2)

{7a1}

A3

B3(cid:21)

A2

B2(cid:12)(cid:12)(cid:12)(cid:12)
B1(cid:12)(cid:12)(cid:12)(cid:12)
(cid:20) A
B(cid:21) =(cid:20) A1
C(cid:20) A
B(cid:21) (τ ) = Xpi

ki

∈Λ

δp1,p2δp2,p3δp3,p1

3

Yi=1

RiYki=1

(τ2/π)
ki)ai
(pi

1
2 ai
ki

ki (¯pi

+ 1

2 bi
ki
ki)bi

ki

(7.3)

{7a2}

Corresponding modular forms C± may be deﬁned by (2.24). The total momentum pi passing
through the double line of the trihedral graph labeled i is given by,

pi =

pi
ki

RiXki=1

(7.4)

{7a3}

The Kronecker δ-functions require all pi to be equal to one another. By overall momentum
conservation, one of the Kronecker δ-functions is redundant, and may be omitted.

7.1 Symmetries of trihedral modular graph forms

Trihedral modular graph forms are manifestly invariant under the following permutations,

(σ0, σ1, σ2, σ3) ∈ S3 × SR1 × SR2 × SR3

(7.5)

40

which act upon the momenta by σ0(pi

ki) = pσ0(i)
kσ0(i)

, σi(pi

ki) = pi

σ(ki) and on the exponents by,

σ0(cid:20) A

Bσ0(1)(cid:12)(cid:12)(cid:12)(cid:12)
B(cid:21) =(cid:20) Aσ0(1)

Aσ0(2)

Bσ0(2)(cid:12)(cid:12)(cid:12)(cid:12)

Aσ0(3)

Bσ0(3)(cid:21)

σi(cid:20) Ai

Bi(cid:21) =(cid:20) ai

σi(1)
bi
σi(1)

ai
σi(2)
bi
σi(2)

· · · ai
σi(Ri)
bi
· · ·

σi(Ri)(cid:21) (7.6)

{7b1}

while the action of the permutations σi on Aj, Bj is trivial for j 6= i.

7.2 Momentum conservation identities

Momentum conservation relations on trihedral modular graph forms follow from inserting
p1 − p2 and p2 − p3 into the summands of (7.3). The resulting relations may be written out
explicitly as follows,

R1

Xk1=1
Xk2=1

R2

k1

B1

C(cid:20) A1 − S(1)
B1(cid:12)(cid:12)(cid:12)(cid:12)
C(cid:20) A1

(cid:12)(cid:12)(cid:12)(cid:12)

A2

B2(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)

A2 − S(2)
k2

B2

A3

B3(cid:21) −
B3(cid:21) −

A3

R2

Xk2=1
Xk3=1

R3

A2 − S(2)
k2

B2

(cid:12)(cid:12)(cid:12)(cid:12)

A3

B3(cid:21) = 0
(cid:21) = 0

A3 − S(3)
k3

B3

B1(cid:12)(cid:12)(cid:12)(cid:12)
C(cid:20) A1
B1(cid:12)(cid:12)(cid:12)(cid:12)
C(cid:20) A1

A2

B2(cid:12)(cid:12)(cid:12)(cid:12)

(7.7)

ki is a row vector of length Ri, where the index runs over the range ki = 1, · · · Ri,
In addition, one has two complex conjugate

Here, Si
and is deﬁned as in (2.31) with R = Ri.
relations in which the S(i)

ki subtractions are being performed on the lower rows.

7.3 Specializing to graphs with R1 = R2 = 2 and R3 = 1

The simplest non-trivial trihedral graph has two trivalent and one quadrivalent vertex,
R1 = R2 = 2R3 = 2.
In the following we shall spell out momentum conservation and
permutation symmetry properties, and the algebraic and holomorphic subgraph reduction
identities needed for this speciﬁc case.

A ﬁrst issue concerns the momentum labeling. Given the reduced symmetry of this
graph, it will be convenient to ﬂip the sign of the last momentum when deriving the
reduction identities, so that these trihedral modular graph forms are deﬁned by,

b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) a1 a2

a3 a4

b3 b4(cid:12)(cid:12)(cid:12)(cid:12)

a5

b5(cid:21) =

′

Xp1,···,p5∈Λ

δp1+p2+p5,0 δp3+p4+p5,0

5

Yk=1

2 bk

2 ak− 1

2 π− 1
τ ak
(pk)ak (¯pk)bk

(7.8)

{7d1}

To economize on notation, we have labeled the exponents ar and br sequentially with a
single index r. The above momentum conservation identities, with the reversed sign of p5,

41

may then be expressed in the following form,

b1

b2(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) a1 − 1 a2
b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) a1 a2

b3

a3 a4

b3 b4(cid:12)(cid:12)(cid:12)(cid:12)
b4(cid:12)(cid:12)(cid:12)(cid:12)

a5

b2

b1

b5(cid:21) + C+(cid:20) a1 a2 − 1
b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
b5(cid:21) + C+(cid:20) a1 a2

a3 − 1 a4

a5

(cid:12)(cid:12)(cid:12)(cid:12)

a3 a4

b3 b4(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)

a5

b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
b5(cid:21) + C+(cid:20) a1 a2
b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
b5(cid:21) + C+(cid:20) a1 a2

a5

a3 a4

b3 b4(cid:12)(cid:12)(cid:12)(cid:12)
b3 b4(cid:12)(cid:12)(cid:12)(cid:12)

a3 a4

a3 a4 − 1
b3

b4

a5 − 1

b5

a5 − 1

b5

(cid:21) = 0
(cid:21) = 0

(7.9)

Next, we shall derive algebraic and holomorphic subgraph reduction identities which extend
to trihedral graphs the identities of sections 4.4 and 5 derived for dihedral graphs.

7.4 Algebraic reduction

• The ﬁrst algebraic reduction formula is given by,

b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) a1 a2

a3 a4

b3 b4(cid:12)(cid:12)(cid:12)(cid:12)

0

0(cid:21) = (−)a3+b3+a4+b4 C+(cid:20) a1 a2 a3 a4
b1 b2 b3 b4(cid:21)
b1 + b2 0(cid:21) C+(cid:20) a3 + a4 0
−(−)a2+b2+a3+b3 C+(cid:20) a1 + a2 0

b3 + b4 0(cid:21) (7.10)

{7d3}

To prove this formula, we set a5 = b5 = 0 in (7.8), so that the summand depends on p5 only
through the two Kronecker δ-functions. This summation may be carried out and results
in,

δp1+p2+p5,0 δp3+p4+p5,0 = δp1+p2,p3+p4 (1 − δp1+p2,0)

(7.11)

{7d4}

′

Xp5∈Λ

We now evaluate the contribution to the sum of each term in turn. The ﬁrst term on the
right side of (7.11) produces the ﬁrst term on the right side of (7.10), the sign factor arising
from the reversal of the signs of p3 and p4 needed to match the deﬁnition of the C-function
with four indices. The second term on the right side of (7.11) produces the second term on
the right side of (7.10), the sign factor again arising from the reversal of the signs of p2, p3.
• The second algebraic reduction formula is given by,

a5

b5(cid:21) = C+(cid:20) a3 0

b3 0(cid:21) C+(cid:20) a1 a2 a5

b1 b2 b5 (cid:21) − (−)a3+b3C+(cid:20) a1 a2 a3 + a5

b3 + b5(cid:21) (7.12)

b1 b2

{7d5}

An analogous formula arises upon interchange of the indices (1, 2) ↔ (3, 4). To prove this
formula, we set a4 = b4 = 0 in (7.8), so that the summand depends on p4 only through the
single Kronecker δ-function δp3+p4+p5. This summation may be carried out and results in,

b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) a1 a2

a3 0

b3 0(cid:12)(cid:12)(cid:12)(cid:12)

δp3+p4+p5,0 = 1 − δp3+p5,0

(7.13)

{7d6}

′

Xp4∈Λ

42

The ﬁrst term on the right side of (7.13) produces the ﬁrst term on the right side of (7.12),
since the summation over p3 is decoupled from the summations over p1, p2, p5. The second
term on the right side of (7.13) produces the second term on the right side of (7.12), the
sign factor again arising from the reversal of the sign of p3.

7.5 Holomorphic reduction for 2-point subgraphs

In a dihedral graph, the only one-loop subgraph with vanishing lower exponents contains
the two vertices of valence at least equal to three. For a trihedral graph, there are actually
two possibilities: the subgraph can contain either two or three vertices with valence at least
equal to three. With two higher valence vertices, we again have a two-point subgraph, while
with three higher valence vertices, the holomorphic subgraph is a three-point subgraph. In
this section, we give the simplest holomorphic subgraph reduction for two-point subgraphs,
leaving the three-point subgraph case for the next subsection.

The ﬁrst holomorphic subgraph reduction identity, which corresponds to a two-point

function of holomorphic weight 4, is given by,

a5

3 1

a5

2 2

0 0(cid:12)(cid:12)(cid:12)(cid:12)
b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) a1 a2
δp3+p4+p5,0 (cid:18) 1
Xp3,p4∈Λ

b5(cid:21) = 2 C+(cid:20) a1 a2

0 0(cid:12)(cid:12)(cid:12)(cid:12)
b1 b2(cid:12)(cid:12)(cid:12)(cid:12)
b5(cid:21) − 2 C+(cid:20) a1 a2
3 p4(cid:19) = π2G2,2(−p5) − 2π2G3,1(−p5)

2
p3

4 + a5

b1 b2

b5

To prove this formula, we carry out the sum in (7.8) over p3 and p4 ﬁrst,

′

−

p2
3 p2
4

(cid:21)

(7.14)

{11b3}

(7.15)

using the general expression for G introduced in (5.3). Here G is evaluated on a non-
vanishing argument, −p5, and we ﬁnd,

G2,2(−p5) − 2G3,1(−p5) =

2

π2p4
5

(7.16)

which immediately results in formula (7.14). This completes the proof of the basic reduc-
tion identities for two-point holomorphic subgraphs that we shall need to prove the D2,2,1
conjecture in section 8.

7.6 Holomorphic reduction for 3-point subgraphs

The second holomorphic subgraph identity we shall need is a three-point function of holo-
morphic weight 6,

{sec:76}

0 b2(cid:12)(cid:12)(cid:12)(cid:12)
L = C+(cid:20) 2 a2

2 a4

0 b4(cid:12)(cid:12)(cid:12)(cid:12)

2

0 b2(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) − 2 C+(cid:20) 3 a2

43

2 a4

0 b4(cid:12)(cid:12)(cid:12)(cid:12)

1

0 b2(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) − 2 C+(cid:20) 2 a2

3 a4

0 b4(cid:12)(cid:12)(cid:12)(cid:12)

1

0(cid:21)

(7.17)

{7f1}

We shall prove below that the expression reduces to,

L = 9 C+(cid:20) a2 + a4 + 6

b2 + b4

where L′ is given by,

0

0(cid:21) − 3τ 4

2 G4 C+(cid:20) a2 + a4 + 2 0

b2 + b4

0(cid:21) + (−)a4+b4L′

L′ = 2 C+(cid:20) a2 + 4 a4

b2

b4

2

0(cid:21) + 2 C+(cid:20) a2 a4 + 4

b2

b4

2

0(cid:21)

−3 C+(cid:20) a2 + 2 a4 + 2

b2

b4

2

0(cid:21) + 2 C+(cid:20) a2 + 1 a4 + 1 4
0(cid:21)

b2

b4

(7.18)

{7f2}

(7.19)

To prove this identity, we write out L as a sum,

L =

′

Xp1,···,p5∈Λ

δp1+p2+p5,0 δp3+p4+p5,0

(τ2)6+a2+a4
2 pa4
2 ¯pb2

4 ¯pb4

πc pa2

4 (cid:18) 1

p2
1p2

3p2
5

−

2
p3
1p2
3p5

−

2
p2
1p3

3p5(cid:19) (7.20)

{7f3}

and we have used the abbreviation c = 3+ 1
2(a2 +a4 +b2 +b4). Next, we solve the Kronecker
δ-function constraints for p1 and p3 in terms of p2, p4, p5, which we retain as independent
summation variables, subject to the following constraints,

p1 = −p2 − p5
p3 = −p4 − p5

p5 6= −p2
p5 6= −p4

(7.21)

The loop momentum through the holomorphic three-point subgraph is then p5, so that we
split up the summation as follows,

L =

′

Xp2,p4∈Λ

(τ2)6+a2+a4
2 pa4
2 ¯pb2

4 ¯pb4

4

πc pa2

H(p2, p4)

(7.22)

{7f5}

where the three-point holomorphic subgraph sum is given as follows,

H(p2, p4) =

′

Xp56=−p2,−p4∈Λ

1

(p4 + p5)2(cid:18)

1
2

(p2 + p5)2p2
5

+

2

(p2 + p5)3p5(cid:19) + (p2 ↔ p4)

(7.23)

{7f6}

We partition the summation over p2 and p4 into the contributions from p2 = p4 and from
p2 6= p4. The ﬁrst reduces to a sum of two-point holomorphic subgraph contributions, and
may be evaluated using the methods of section 5. Although an Eisenstein regularization is
required at intermediate stages of the calculation, all contributions in G2 and Q1(p) cancel,
and we are left with,

H(p2, p2) =

9
p6
2

−

3π2G4

p2
2

44

(7.24)

Substituting this result into the part of (7.22) with p2 = p4, we ﬁnd the contributions of
the ﬁrst two terms on the right side of (7.18). To compute the contribution from p2 6= p4,
we decompose the summand in (7.23) into partial fractions with respect to the momentum
summation variable p5. All summations over p5 may be performed with the help of the
formulas (5.10) and (5.11). All terms in G2 and Q1 cancel, and we are left with,

H(p2, p4) =

2

2(p2 − p4)2 +
p4

2

4(p2 − p4)2 −
p4

3

4(p2 − p4)2 −
2p2
p2

2

p2p4(p2 − p4)4

(7.25)

for p2 6= p4. Substituting this result into the part of (7.22) with p2 6= p4, we ﬁnd the terms
in L′, where the sign factor in front of L′ in (7.18) arises from reversing the sign of p4.

8 Proving the trihedral D2,2,1 conjecture

The trihedral modular graph function D2,2,1 was investigated in [6]. It may be represented
using the notation developed in the preceding section by,

{sec:11}

1 1(cid:12)(cid:12)(cid:12)(cid:12)
D2,2,1 = C(cid:20) 1 1

1 1

1 1(cid:12)(cid:12)(cid:12)(cid:12)

1

1(cid:21)

(8.1)

In this section, we shall use the formalism of this paper to prove the D2,2,1 conjecture,
which states the vanishing of the following modular function,

F2,2,1 = D2,2,1 − 2C3,1,1 +

2
5

E5 −

3
10

ζ(5)

(8.2)

{11a1}

The ∇ derivatives of C3,1,1 have already been obtained in (6.5) and (6.7) up to third order.
It remains to compute the ∇ derivatives of D2,2,1, which we do in the next subsection.

8.1 Second order derivative of D2,2,1

We begin by computing the ﬁrst and second order derivatives of D2,2,1,

1

1

2

0(cid:21)

1 1

1 1(cid:12)(cid:12)(cid:12)(cid:12)

2 1

1 1

1 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1(cid:21) + C+(cid:20) 1 1
∇D2,2,1 = 4C+(cid:20) 2 1
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1(cid:21) + L2
∇2D2,2,1 = 8 C+(cid:20) 2 1
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) + 8 C+(cid:20) 2 1

0 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1 1(cid:21) − 8 C+(cid:20) 3 1

1 1

1 1

1

45

L2 = 8 C+(cid:20) 5 1 1

where we have collected in L2 the following sum of terms,

(8.3)

{11a2}

(8.4)

{11a3}

3

0(cid:21)

1 1

1 1(cid:12)(cid:12)(cid:12)(cid:12)

2

0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) − 4 C+(cid:20) 1 1

Proceeding analogously for the last two terms on the right side of (8.4), and collecting all
contributions, we obtain,

1 1

1

1 1

1

1 1

0

1 1

1

1 1

0

1 1

0

0(cid:21)

1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
C+(cid:20) 3 1
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) = −C+(cid:20) 2 3

1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) − C+(cid:20) 2 2
0(cid:21) = −C+(cid:20) 3 2
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) + C+(cid:20) 0 4
0(cid:21) + C+(cid:20) 1 4
C+(cid:20) 2 2
1 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) + 4 C+(cid:20) 0 3
L2 = 8 C+(cid:20) 5 1 1
0 1 1(cid:21) + 4 C+(cid:20) 0 2
0(cid:21)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 1(cid:12)(cid:12)(cid:12)(cid:12)
0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) + 8 C+(cid:20) 3 2
0(cid:21) − 4 C+(cid:20) 1 4
−4 C+(cid:20) 0 4
1 0 1 1(cid:21) + 8 C+(cid:20) 3 2 1 1
0 1 1 1(cid:21)
1 1 1(cid:21) − 4 C+(cid:20) 4 1 1 1
L2 = 4 C+(cid:20) 5 1 1
+4 C+(cid:20) 5 0
1 0(cid:21) C+(cid:20) 2 0
1 0(cid:21) C+(cid:20) 2 1 1
0 1 1(cid:21)

2 0(cid:21) + 4 C+(cid:20) 3 0

1 1(cid:12)(cid:12)(cid:12)(cid:12)

1 1

1 1

1 1

2

1 1

1

1 1

3

0

0

0(cid:21)

(8.7)

(8.8)

Finally, each term on the right side, except the ﬁrst one, may be simpliﬁed with the help
of one of the algebraic reductions identities, to obtain,

To obtain the ﬁrst term on the right side above, we have made use of the holomorphic
subgraph reduction identity derived from (7.14) for a1 = a2 = a5 = b1 = b2 = b5 = 1.

The remaining three terms on the right side of (8.4) may be further simpliﬁed with
the help of the momentum conservation identities of (7.10) combined with the algebraic
reduction identities of (7.10) and (7.12). We shall illustrate how this works on the ﬁrst term,
to which we ﬁrst apply the momentum conservation identity on the ﬁrst line of (7.10), and
we obtain,

To the ﬁrst term on the right side of (8.5) is now ready for the application of the algebraic
reduction formula (7.10), but the second is not. To the second term, we again apply the
momentum conservation identities of (7.10), and we ﬁnd,

(8.5)

{11b1}

1 1

1

0(cid:21)

(8.6)

Thus, the entire contribution of L2 has now been reduced to modular graph forms associated
with dihedral graphs.

8.2 Third order derivatives of D2,2,1 and F2,2,1

Next, we evaluate the third order derivative of D2,2,1, by applying ∇ to the second line
in (8.3). The calculation of ∇L2 is uneventful, and may be simpliﬁed with the help of
algebraic and holomorphic subgraph reduction identities for dihedral graphs, and we ﬁnd,

∇L2 = 96 C+(cid:20) 6 1 1

0 1 1(cid:21) + 80 C+(cid:20) 5 2 1

0 1 1(cid:21) + 8 C+(cid:20) 5 2 1

1 0 1(cid:21) + 24 C+(cid:20) 5 0

1 0(cid:21) C+(cid:20) 3 0
1 0(cid:21)

(8.9)

{derL2}

46

The calculation of the remaining derivative will involve the holomorphic subgraph reduction
formula of (7.17) and (7.18). The starting point is,

0 1(cid:12)(cid:12)(cid:12)(cid:12)
∇ C+(cid:20) 2 1

2 1

0 1(cid:12)(cid:12)(cid:12)(cid:12)

1

1(cid:21) = 4 C+(cid:20) 5 2 1

0 1(cid:12)(cid:12)(cid:12)(cid:12)
1 0 1(cid:21) + C+(cid:20) 2 1

2 1

0 1(cid:12)(cid:12)(cid:12)(cid:12)

2

0 1(cid:12)(cid:12)(cid:12)(cid:12)
0(cid:21) − 4 C+(cid:20) 3 1

2 1

0 1(cid:12)(cid:12)(cid:12)(cid:12)

1

0(cid:21)

(8.10)

{8f1}

where the ﬁrst term is the result of a simpliﬁcation obtained using the holomorphic subgraph
reduction formula of (7.14). The sum of the second and third terms on the right of (8.10)
may be reduced using (7.17) and (7.18) with a2 = a4 = b2 = b4 = 1, and we ﬁnd,

0 1(cid:12)(cid:12)(cid:12)(cid:12)
∇ C+(cid:20) 2 1

2 1

0 1(cid:12)(cid:12)(cid:12)(cid:12)

1

1(cid:21) = 8 C+(cid:20) 5 2 1
+9 C+(cid:20) 8 0

1 0 1(cid:21) − 3 C+(cid:20) 3 3 2
2 0(cid:21) − 3 C+(cid:20) 4 0

1 1 0(cid:21) + 2 C+(cid:20) 4 2 2
0 1 1(cid:21)
0 0(cid:21) C+(cid:20) 4 0
2 0(cid:21)

(8.11)

{8f1a}

Assembling the third order derivatives of F2,2,1 by using the third order derivative ∇3C3,1,1
already obtained in (6.7), we ﬁnd after some mild simpliﬁcations,

∇3F2,2,1 = −24 C+(cid:20) 6 1 1
+48 C+(cid:20) 4 3 1

0 1 1(cid:21) + 72 C+(cid:20) 5 2 1
1 0 1(cid:21) + 24 C+(cid:20) 5 0

0 1 1(cid:21) − 72 C+(cid:20) 5 2 1
1 0(cid:21) C+(cid:20) 3 0

1 0(cid:21) + 12 C+(cid:20) 8 0
2 0(cid:21)

0 1 1(cid:21)
1 0 1(cid:21) − 48 C+(cid:20) 4 3 1

(8.12)

Applying one more derivative, and extensive use of the holomorphic subgraph reduction
identities of section 5.4 produces, in identities summarized in appendix C, we ﬁnd,

∇4F2,2,1 = 0

(8.13)

This result, along with the matching asymptotic Laurent series, proves the D2,2,1 conjecture.

9 Discussion

{sec:12}

Modular graph forms considered in this paper generalize the modular graph functions that
were originally motivated by the expansion of genus-one superstring graviton scattering
amplitudes, and are the subject of earlier papers [9, 6, 1]. We have found this to be a useful
generalization for formulating streamlined proofs of the relationships between modular
graph functions conjectured in [9]. It is also clear that this enlarged space is essential for
developing a more complete understanding of the basis of these functions. As stressed in [1]
modular graph functions may be viewed as special values of single-valued elliptic multiple
polylogarithms and are elliptic generalisations of the single-valued elliptic polylogarithms
introduced by Zagier [13], and denoted Da,b(q; e2iπz), in the special cases for which a = b.

47

The modular graph forms discussed in this paper are similarly related to generalizations in
which a 6= b.

The polynomial relations between modular graph functions conjectured in [9], which
have now been proved, are simple low-weight examples of what must surely be a web
of similar relations at arbitrary weight. The relations that have been considered so far
at a given weight w (such as those with w = 4 and 5 in (6.1)) imply the vanishing of
certain polynomials in modular graph functions where the terms in each polynomial have
weight w and rational coeﬃcients. Recently, an interesting identity was obtained for the
simplest tetrahedral modular graph function of weight six in [14] using the methods of [9].
The functions that enter in these relations are all of the form (2.19) with the array A of
holomorphic exponents equal to the array B of anti-holomorphic exponents.

However, we expect that more general relations apply at higher weight. The general-

izations involved should be of two kinds:

(i) Modular graph functions, i.e. modular forms of weight (0, 0), should be included for
which the arrays of exponents A and B that enter the deﬁnition in (2.19) are diﬀer-
ent, even though their net holomorphic and anti-holomorphic weights vanish. Such
functions enter, for example, in the low energy expansion of superstring N-graviton
one-loop scattering amplitudes when N > 4, as was shown in [11].

(ii) We also expect that modular forms with non-zero modular weights will enter into
more general polynomial relations. In other words, the general relations should be
polynomial in modular graph forms and all the terms in the polynomial not only
have the same weight w, but also the same modular weight, which may be non-zero.
Rather trivial examples of this kind can be obtained simply by applying modular
covariant derivatives to any of the relations conjectured in [9]. Less trivial examples
are provided by the holomorphic subgraph reduction identities of Section 5, and in
particular the formulas of subsection 5.4. More generally we would expect less obvious
polynomial relations of non-zero modular weight to appear.

The results of this paper may be expected to have important relations with the single-
valued multiple zeta values, which arise as coeﬃcients in the expansion of tree-level closed-
string amplitudes [15, 16] and are special values of single-valued multiple polylogarithms
[17, 18, 19]. Indeed, it was as argued in [1], and demonstrated explicitly in [20], that the
Laurent series of a modular graph form of high enough weight has coeﬃcients that are
irreducible svMZVs. Therefore the condition that the Laurent series for a polynomial of
modular graph forms be zero must involve the subtle algebraic relations between svMZVs.
These relations may be viewed as an elliptic extension of the polynomial relations between
svMZVs.

48

A possibly related and very interesting question is how modular graph forms may be
connected to the elliptic multiple polylogarithms of Brown and Levin [21]. These arise
in the expansion of one-loop amplitudes in open string theory as iterated integrals on an
elliptic curve [22, 23].

Finally, the existence of polynomial identities between modular graph functions may
now be approached from two diﬀerent angles. The ﬁrst is by matching their Laurent
polynomial at the cusp τ2 → ∞, while the second is by the use of Lemma 1 along with
algebraic and holomorphic subgraph identities developed in this paper. The method of
matching Laurent polynomials was used in [9] to conjecture the identities which are ul-
timately proven in this paper. In the absence of a general theorem which allows one to
conclude the vanishing of a modular graph function whose Laurent polynomial vanishes,
the method based on matching Laurent polynomials cannot produce results beyond the
conjectural level. At a practical level, the calculation of the Laurent polynomial for a given
modular graph function becomes quite diﬃcult to carry out beyond the simplest cases, al-
though in the very special case of Dℓ dihedral modular graph functions a general formula is
available [7]. The method based on the sieve algorithm, holomorphic subgraph reduction,
and Lemma 1, however, allows for a relatively simple and completely systematic derivation
of polynomial identities at any given weight w, and automatically provides proofs of the
identities. The search for such identities could be rather easily automatized with the help
of a computer program.

It would therefore be very interesting to discover if it is a general property that the
Laurent series of a modular graph form determines the complete function. Elucidating
the relation between the holomorphic approach of the present paper and the approach of
matching the Laurent series at the cusp is a goal that will be reserved for future work.

Acknowledgments

We are happy to acknowledge the long-time collaboration with Pierre Vanhove on the work
that led to the present results. We have also beneﬁted from conversations and correspon-
dence with Pierre Deligne, William Duke, Stephen Miller, and Don Zagier over the course
of this work. This research was supported in part by National Science Foundation grant
PHY-13-13986 and by the European Research Council under the European Community’s
Seventh Framework Programme (FP7/2007-2013)/ERC grant agreement no. [247252].

A Modular covariant derivatives

In this appendix, we shall compare various customary normalizations for the modular
covariant derivatives on the Poincar´e upper half plane H. We parametrize H by a complex

{app:AA}

49

parameter τ = τ1 + iτ2 for τ1, τ2 ∈ R and τ2 > 0, and endow H with the Poincar´e metric of
unit negative constant curvature,

ds2 =

dτ d¯τ

τ 2
2

The group SL(2, R) on τ by M¨obius transformations,

τ → τ ′ =

ατ + β
γτ + δ

(cid:18) α β

δ(cid:19) ∈ SL(2, R)

γ

(A.1)

{A1}

(A.2)

{A2}

and maps H into itself while leaving the Poincar´e metric invariant. The modular group
SL(2, Z) is the discrete subgroup of SL(2, R) which acts on τ by the transformations given
in (A.2) with α, β, γ, δ ∈ Z. The element −I ∈ SL(2, Z) does not transform τ , and we
deﬁne P SL(2, Z) = SL(2, Z)/{±1}. Since P SL(2, Z) leaves the Poincar´e metric invariant,
it descends to a metric on the quotient M1 = H/P SL(2, Z), which is the moduli space of
complex structures of oriented genus-one Riemann surfaces, i.e. tori.

A form f (u,u′) has modular weight (u, u′) if the combination f (u,u′)(τ, ¯τ )dτ

u

2 d¯τ

u′
2

is in-

variant under SL(2, Z). Equivalently, its components transform as follows,

f (u,u′)(τ ′, ¯τ ′) = (γτ + δ)u(γ ¯τ + δ)u′

f (u,u′)(τ, ¯τ )

(A.3)

{A3}

We shall denote the space of all such forms by F (u,u′). Note that complex conjugation
interchanges u and u′, so that a reality condition may be imposed on forms with u′ = u.

One may regard H as a Riemann surface, speciﬁcally a non-compact sphere with one
puncture and two orbifold points where the action of P SL(2, Z) on H is not transitive.
The transformation property of a form of modular weight (u, u′) of (A.3) then simply
corresponds to the transformation property of a conformal tensor of conformal weight
2 , u′

There are three natural customary choices for covariant derivatives (see for example

(cid:0) u

2(cid:1).

[24]) acting on the space F (u,u′) of forms of modular weight (u, u′),

∇τ : F (u,u′) → F (u+2,u′)
Dˆτ : F (u,u′) → F (u+1,u′−1)
∇¯τ : F (u,u′) → F (u,u′−2)

(A.4)

along with their complex conjugates. In diﬀerential geometry, the ﬁrst and the last cor-
respond to covariant derivatives with respect to an aﬃne connection acting on conformal
tensors, expressed with Einstein indices τ and ¯τ , while the middle case corresponds to the
covariant derivative with respect to a U(1) spin connection, expressed with orthonormal

50

frame indices ˆτ and ˆ¯τ . The Poincar´e metric of (A.1) is expressed in conformal coordinates
τ and ¯τ with metric components gτ ¯τ = 1/(2τ 2
2 ) and gτ τ = g¯τ ¯τ = 0, and frame components
ˆτ = 0. The aﬃne and U(1) connections may then be
eτ
evaluated with the help of standard diﬀerential geometry formulas, and we ﬁnd,

ˆ¯τ = 1/τ2 and eτ

ˆ¯τ = e¯τ

ˆτ = e¯τ

iu

∇τ f (u,u′) = (cid:18)∂τ +
Dˆτ f (u,u′) = (cid:18)τ2∂τ +
∇¯τ f (u,u′) = (cid:0)2τ 2

2τ2(cid:19) f (u,u′)(τ, ¯τ )
2(cid:19) f (u,u′)(τ, ¯τ )
2 ∂τ + iuτ2(cid:1) f (u,u′)(τ, ¯τ )

iu

For the purpose of this paper, it is the last derivative, and its complex conjugate, that will
be particularly useful. It will be convenient to introduce the following notation,

(A.5)

∇ = i ∇¯τ

∇f (0,u′) = 2iτ 2

2 ∂τ f (0,u′)

(A.6)

{nabla}

More generally, upon multiplying a form f (u,u′) of arbitrary modular weight (u, u′) by a
factor of τ u
2 will reduce its holomorphic weight to zero, in which case no connection is
required in the covariant derivative ∇, as shown in the second formula of (A.6).

The “U(1) covariant derivative” Dˆτ that maps modular weight (u, u′) into (u + 1, u′ − 1)
is particularly useful when considering forms in which u′ = −u, since the derivative maps
In that case f (u,−u) has U(1) charge qu = 2u
those forms into forms of the same type.
and the modular transformation is a phase transformation U(1). The derivative Dˆτ maps
charge qu to qu + 2 (and the complex conjugate derivative maps qu to qu − 2).

This derivative U(1)-covariant Dˆτ has proved useful in considering the S-duality of
Type IIB superstring theory, where the duality group is SL(2, Z) and the massless ﬁelds
are charged under the U(1) R-symmetry group. The higher derivative interactions in the
low energy expansion of scattering amplitudes violate conservation of qu by even integers.
The coeﬃcients of these interactions are modular forms that are related to each other by
covariant diﬀerentiation. For example, the coeﬃcient of the U(1)-conserving R4 interaction,
(τ )
where R stands for the Riemann tensor, is the non-holomorphic Eisenstein series E 3
(where τ is the complex scalar of the Type IIB superstring theory). The interaction λ16,
where λ is the spin-1/2 dilatino that has qu = −3/2, violates the U(1) charge by ∆qU = −24.
The coeﬃcient of λ16 is a (12, −12) modular form given by (Dˆτ )12 E 3
. More generally, the
coeﬃcients of other processes that have 0 < −∆q ≤ 24 are given by (Dˆτ )−∆qu/2 E 3

.

2

2

2

B Review of Eisenstein regularized sums

In this appendix, we shall evaluate the Eisenstein regularized sums for some of the ingredi-
ents needed in the evaluation of holomorphic subgraph reduction in section 5. In particular,

{app:B}

51

we need to evaluate Q2(0) and Q1(p0), which we do in turn.

B.1 Evaluating Q2(0)

By deﬁnition of the Eisenstein regularized deﬁnition of the sums, the value of Q2(0) is given
by the following expression,

Q2(0) = lim

P →∞ 

′

X−P ≤m≤P

1
m2 +

′

X−P ≤n≤P X−P ≤m≤P

1

(m + nτ )2!

(B.1)

Note that there is no prime on top of the second m-sum, so that the term with m = 0 must
be included in the sum. The sum in the ﬁrst term gives 2ζ(2) = π2/3, while the m-sum in
the second term is performed using the summation formula,

1

(z + m)2 = −4π2

e2πiz

(1 − e2πiz)2

(B.2)

Xm

The remaining summation over m is absolutely convergent, so that the limit P → ∞ may
be taken directly, and we ﬁnd,

Q2(0) =

π2
3

− 8π2

∞

Xn=1

qn

(1 − qn)2 =

π2
3

− 8π2

nqn

1 − qn

(B.3)

∞

Xn=1

It is possible to identify this quantity with a derivative involving the Dedekind η-function,

Q2(0) = −4πi∂τ ln η(τ )

η(τ ) = q1/24

(1 − qn)

∞

Yn=1

(B.4)

B.2 Evaluating Q1(p0)

Given that the Eisenstein regulator is symmetric under p+ → −p+, we readily have
Q1(−p0) = −Q1(p0). Next, we decompose p0 and p+ as follows,

p0 = m0 + n0 τ
p+ = m+ + n+ τ

(m0, n0) 6= (0, 0)
(m+, n+) 6= (0, 0)

m0 > 0

The regularized sums are given by the limit P → ∞ of the following expression,

(B.5)

(B.6)

2Q1(p0) = Xn+6=0
+ Xm+6=0

−P ≤n+≤P

−P ≤m+≤P

P

Xm+=−P(cid:18)
(cid:18) 1

m+

1

m+ + n+τ

−

1

m+ − m0 + (n+ − n0)τ(cid:19)

−

1

m+ − m0 − n0τ(cid:19) + Xm+6=m0

−P ≤m+≤P

(cid:18)

1

m+ + n0τ

−

1

m+ − m0(cid:19)

52

The sums over 1/m+ and 1/(m+ − m0) cancel in the limit P → ∞. To perform the sums
in m+, we use the summation formula,

1

z + m0

Xm0

= −iπ

1 + e2πiz
1 − e2πiz

(B.7)

The resulting terms may be arranged as follows,

Q1(p0) = −

1
p0

−

iπ
2

lim
P →∞

P

Xn+=−P(cid:18) 1 + qn+

1 − qn+

(1 − δn+,0) −

1 + qn+−n0
1 − qn+−n0

(1 − δn+,n0)(cid:19) (B.8)

Shifting the summation variable in the second term n+ → n+ + n0, we have

1 + qn+
1 − qn+

(1 − δn+,0)

(B.9)

Q1(p0) = −

1
p0

−

iπ
2

lim

P →∞
Xn+=−P


P

−

P −n0

Xn+=−P −m0




Using the fact that the limit of the q-dependent factor is +1 for large positive n+, and −1
for large negative n+, we ﬁnd,

Q1(p0) = −

1
p0

− iπn0

(B.10)

While this formula was derived for n0 > 0, it is actually valid for all n0 in view of the odd
parity of Q1(p0). It may be recast as follows,

Q1(p0) = −

1
p0

− iπ

p0 − ¯p0
τ − ¯τ

(B.11)

B.3 Modular transformations

The functions Qk(p0) are modular forms for k ≥ 3, but neither Q2(p0), nor Q1(p0) are
separately modular forms. Modular transformations act on τ as given in (A.2), The basic
rule for the transformation of the momenta p0, and their components m0, n0, is as follows,

p0 → p′

0 =

p0

γτ + δ

m0 → m′

0 = +α m0 − β n0

n0 → n′

0 = −γ m0 + δ n0

(B.12)

The Dedekind η-function transforms as follows,

η(τ ′) = ε (γτ + δ)

1

2 η(τ )

ε24 = 1

(B.13)

53

As a result, the modular transformation laws of Q1 and Q2 are given by,

Q′
Q′

2(p′
1(p′

0) = (γτ + δ)2Q2(p0) − 2πiγ(γτ + δ)
0) = (γτ + δ)Q1(p0) + πiγp0

(B.14)

The combination entering Ga+, a−(p0) is given by, 2Q1(p0) + p0Q2(p0), and it manifestly
transforms as a modular form of weight 1,

2Q′

1(p′

0) + p′

0Q′

2(p′

0) = (γτ + δ)(cid:16)2Q1(p0) + p0Q2(p0)(cid:17)

(B.15)

In view of this, we may introduce a combination of Q2(0) which is modular invariant, but
which is not holomorphic,

G2 = Q2(0) −

π
τ2

We then have,

2p0Q1(p0) + p2

0Q2(p0) = −3 + p2

0G2 +

(B.16)

(B.17)

π
τ2

p0 ¯p0

C Auxiliary identities

The following identities, which have been derived with the help of the holomorphic subgraph
reduction identities of section 5.4, are used in the proof the weight 5 conjectures,

{app:D}

∇C+(cid:20) 6 1 1
∇C+(cid:20) 5 2 1
∇C+(cid:20) 5 2 1
∇C+(cid:20) 4 3 1
∇C+(cid:20) 4 3 1

0 1 1(cid:21) = +40 C+(cid:20) 9 0
1 0 1(cid:21) = −26 C+(cid:20) 9 0
0 1 1(cid:21) = +14 C+(cid:20) 9 0
1 0 1(cid:21) = −19 C+(cid:20) 9 0
0 1 1(cid:21) = +23 C+(cid:20) 9 0

1 0(cid:21) − 6 C+(cid:20) 4 0
1 0(cid:21) + 9 C+(cid:20) 4 0
1 0(cid:21) − 6 C+(cid:20) 4 0
1 0(cid:21) + 9 C+(cid:20) 4 0
1 0(cid:21) − 9 C+(cid:20) 4 0

1 0(cid:21) − 10 C+(cid:20) 6 0
0 0(cid:21) C+(cid:20) 5 0
1 0(cid:21) + 5 C+(cid:20) 6 0
0 0(cid:21) C+(cid:20) 5 0
0 0(cid:21) C+(cid:20) 5 0
1 0(cid:21)
0 0(cid:21) C+(cid:20) 5 0
1 0(cid:21)
1 0(cid:21)
0 0(cid:21) C+(cid:20) 5 0

0 0(cid:21) C+(cid:20) 3 0
1 0(cid:21)
0 0(cid:21) C+(cid:20) 3 0
1 0(cid:21)

(C.1)

54

References

[1] E. D’Hoker, M. B. Green, O. Gurdogan and P. Vanhove, “Modular Graph Functions,”

arXiv:1512.06779 [hep-th].

[2] A. Weil “Elliptic functions according to Eisenstein and Kronecker.” Ergebnisse der

Mathematik, 88, Springer 1977.

[3] C.L. Siegel, “On Advanced Analytic Number Theory”, Tata Institute of Fundamental

Research Lecture Notes series (1961).

[4] A. Terras, “Harmonic analysis on symmetric spaces and applications I”, Springer,

New York-Berlin, 1985.

[5] D. Zagier, ”The 1-2-3 of Modular Forms: Lectures at a Summer School

in
Nordfjordeid, Norway ” (ed. K. Ranestad) Universitext, Springer-Verlag, Berlin-
Heidelberg-New York (2008).

[6] E. D’Hoker, M. B. Green and P. Vanhove, ‘On the modular structure of the genus-one

Type II superstring low energy expansion,” arXiv:1502.06698 [hep-th].

[7] M. B. Green, J. G. Russo and P. Vanhove, “Low energy expansion of the four-
particle genus-one amplitude in type II superstring theory,” JHEP 0802 (2008) 020
[arXiv:0801.0322 [hep-th]].

[8] M. B. Green and P. Vanhove, “The Low-energy expansion of the one loop type II

superstring amplitude,” Phys. Rev. D 61 (2000) 104011 [hep-th/9910056].

[9] E. D’Hoker, M. B. Green and P. Vanhove, “Proof of a modular relation between 1-,

2- and 3-loop Feynman diagrams on a torus,” arXiv:1509.00363 [hep-th].

[10] D. Zagier, “Notes on Lattice Sums” (Unpublished).

[11] M. B. Green, C. R. Mafra and O. Schlotterer, “Multiparticle one-loop am-
plitudes and S-duality in closed superstring theory,” JHEP 1310 (2013) 188
doi:10.1007/JHEP10(2013)188 [arXiv:1307.3534 [hep-th]].

[12] P. Deligne, Letter to E. D’Hoker (14 September 2015).

[13] D. Zagier, “The Bloch-Wigner-Ramakrishnan polylogarithm function”, Math. Ann.

286 (1990), no. 1-3, 613?624.

[14] A. Basu, “Poisson equation for the Mercedes diagram in string theory at genus one,”
Class. Quant. Grav. 33, no. 5, 055005 (2016) doi:10.1088/0264-9381/33/5/055005
[arXiv:1511.07455 [hep-th]].

[15] S. Stieberger, “Closed superstring amplitudes, single-valued multiple zeta values and

the Deligne associator,” J. Phys. A 47 (2014) 155401 [arXiv:1310.3259 [hep-th]].

55

[16] S. Stieberger and T. R. Taylor, “Closed String Amplitudes as Single-Valued Open

String Amplitudes,” Nucl. Phys. B 881 (2014) 269 [arXiv:1401.1218 [hep-th]].

[17] F. Brown, “Polylogarithmes multiples uniformes en une variable”, C. R. Acad. Sci.

Paris, Ser. I 338 (2004) 527-532.

[18] O. Schnetz, “Graphical Functions and Single-Valued Multiple Polylogarithms,” Com-

mun. Num. Theor. Phys. 08 (2014) 589 [arXiv:1302.6445 [math.NT]].

[19] F. Brown, “Single-valued Motivic Periods and Multiple Zeta Values,” SIGMA 2

(2014) e25 doi:10.1017/fms.2014.18 [arXiv:1309.5309 [math.NT]].

[20] F. Zerbini, “Single-Valued Multiple Zeta Values in Genus 1 Superstring Amplitudes,”

arXiv:1512.05689 [hep-th].

[21] F. Brown and A. Levin, “Multiple elliptic poly-logarithms”, arXiv:1110.6917 [Math-

ematics]

[22] J. Broedel, C. R. Mafra, N. Matthes and O. Schlotterer, “Elliptic multiple zeta values

and one-loop superstring amplitudes,” arXiv:1412.5535 [hep-th].

[23] J. Broedel, N. Matthes and O. Schlotterer, “Relations Between Elliptic Multiple Zeta

Values and a Special Derivation Algebra,” arXiv:1507.02254 [hep-th].

[24] E. D’Hoker and D. H. Phong, “The Geometry of String Perturbation Theory,” Rev.

Mod. Phys. 60, 917 (1988). doi:10.1103/RevModPhys.60.917

56

