6
1
0
2

 
r
a

 

M
5
1

 
 
]

M
D
.
s
c
[
 
 

1
v
7
1
9
4
0

.

3
0
6
1
:
v
i
X
r
a

Splines and Wavelets on Circulant Graphs

M. S. Kotzagiannidis∗, P. L. Dragotti

Department of Electrical and Electronic Engineering, Imperial College London, London SW7 2AZ, UK

Abstract

We present novel families of wavelets and associated ﬁlterbanks for the analysis and repre-
sentation of functions deﬁned on circulant graphs. In this work, we leverage the inherent
vanishing moment property of the circulant graph Laplacian operator, and by extension,
the e-graph Laplacian, which is established as a parameterization of the former with
respect to the degree per node, for the design of vertex-localized and critically-sampled
higher-order graph (e-)spline wavelet ﬁlterbanks, which can reproduce and annihilate
classes of (exponential) polynomial signals on circulant graphs. In addition, we discuss
similarities and analogies of the detected properties and resulting constructions with
splines and spline wavelets in the Euclidean domain. Ultimately, we consider general-
izations to arbitrary graphs in the form of graph approximations, with focus on graph
product decompositions. In particular, we proceed to show how the use of graph products
facilitates a multi-dimensional extension of the proposed constructions and properties.

Keywords: graph signal processing, graph wavelet, sparse representation, circulant
graphs, splines

1. Introduction

There exists a certain fascination with the idea of transferring fundamental signal
processing insights to the higher-dimensional domain of graphs and implications thereof.
Concurrently, the breadth of emerging applications, in light of the availability of large
complex data, arising from i.a. social or biological information structures, has created a
need for advanced representation and processing techniques.
Notably, the appeal of operating with respect to data encapsulated within the higher-
dimensional dependency structures of a graph lies not only in the potential for superior
data processing for real-world applications, but also becomes apparent in the develop-
ment of a corresponding mathematical framework, which seeks to extend conventional
signal processing properties to the graph domain, thus naturally challenging the struc-
tural conﬁnement of existing frameworks and posing intriguing new questions.
The breadth of contributions towards the aforementioned problem statement encompass
the novel ﬁeld of graph signal processing (GSP), having predominantly evolved from two

∗Corresponding author
Email address: m.kotzagiannidis13@ic.ac.uk (M. S. Kotzagiannidis)

1

diﬀerent model assumptions: the collective of works originating from spectral graph the-
ory ([1], [2]), with the graph Laplacian matrix as the central operator on the one hand,
and the more generalized setting with focus on the graph adjacency matrix, expanding
on concepts from i.a. algebraic signal processing [3], on the other hand.
The notion of wavelets on graphs, in particular, presents a promising avenue to facili-
tate sophisticated processing of complex data, which is captured in the graph signal and
underlying graph, beyond classical wavelet theory, due to the potential to operate with
respect to the inherent geometry of the data in a more localised manner. A range of
designs have been proposed, including the diﬀusion wavelet [4], the biorthogonal and
perfect reconstruction ﬁlterbank on bipartite graphs ([5], [6]), and the spectral graph
wavelet [7], tailored to satisfy a set (or subset) of properties, which evolved from the
traditional domain, such as localization in the vertex or spectral graph domain, criti-
cal sampling and invertibility, along with notions of graph-speciﬁc downsampling and
graph-coarsening for a multiscale representation, as well as to facilitate generalizations
to arbitrary graphs, for applications such as image processing [1]. In particular, sparsity
on graphs via wavelet analysis would appear as a natural extension to its foundation
in the discrete-time domain, and some works have opened its discussion through topics
such as the wavelet coeﬃcient decay at small scales of graph-regular signals [8] via the
spectral graph wavelet transform, the tight wavelet frame transform on graphs [9], as well
as the overcomplete Laplacian pyramid transform with a spline-like interpolation step
[10]. These approaches so far lacked a concrete graph wavelet design methodology which
targets the annihilation of graph signals, or, alternatively, the identiﬁcation of classes of
graph signals which can be annihilated by existing constructions.

With the overall agenda to explore sparsity and sparse representations on circulant
graphs, we seek to build a bridge from the Euclidean to the graph domain traversing
the topics of graph spline wavelet theory and multi-dimensional signal processing on
graphs, while providing an intuition behind the emerging spline-like graph functions as
an underlying theme. The appeal of circulant graphs pertains to their convenient set
of properties such as Linear Shift Invariance (LSI)[11], which facilitate intuitive down-
sampling and shifting operations, as well as to their link with the traditional domain of
signal processing, whereby the Graph Fourier Transform (GFT) of a circulant graph is
a simple permutation of the DFT. Further, circulant matrices (and hence graphs) can
be eﬃciently stored as they are entirely characterized by only one row. Our main focus
lies on undirected circulant graphs, as the associated symmetry yields real-valued ﬁlters,
however, as will be revealed in Sect. 3, most properties can be generalized to directed
circulant graphs, reaﬃrming the established similarities with classical splines.

In this work, we present novel families of higher-order graph (e-)spline wavelets and asso-
ciated ﬁlterbanks on circulant graphs, inspired by the critically sampled spline-like graph
wavelet ﬁlterbank by Ekambaram et al. [12] and classical (e-)spline wavelets ([13],[14]),
which can reproduce and annihilate certain classes of graph signals. By leveraging the
vanishing moment property of the e-graph Laplacian matrix, as a generalization of the
classical graph Laplacian, we discover (e-)spline-like functions, which bear similar proper-
ties to the traditional cases ([15], [14]), and give rise to associated wavelet and ﬁlterbank
constructions, a subset of which we previously introduced in ([16], [17]). In particular,
we identify the classes of compressible graph signals, which can be annihilated on the

2

vertices of circulant graphs up to a graph-dependent border eﬀect, as (exponential) poly-
nomials.
We eventually provide generalizations to our theory by proposing to approximate arbi-
trary graphs as either communities of partitioned circulant sub-graphs or graph (Kro-
necker) products of circulant graphs, the latter of which serve as the building blocks
of a multi-dimensional extension. Hereby, we resort to employing graph products to
both generalize our wavelet analysis to arbitrary graphs and facilitate lower-dimensional
processing, while inducing and/or preserving sparsity where applicable, and proceed to
introduce multi-dimensional separable and non-separable graph wavelet transforms.

Contributions. We list the main original contributions in this paper as follows:

1. Novel families of higher-order circulant graph spline wavelets, which extend tradi-
tional vanishing moment properties to the graph domain, and associated ﬁlterbanks
2. Novel families of higher-order circulant graph e-spline wavelets, which extend van-
ishing exponential moment properties to the graph domain, and associated ﬁlter-
banks

3. Multi-dimensional separable and non-separable graph spline wavelet transforms,
which generalize properties and operations to arbitrary graphs through graph prod-
ucts

Related Work. To the best of our knowledge, there do not exist comparable graph
wavelet constructions on circulant graphs with the aforementioned reproduction and
annihilation properties. While established graph wavelet constructions, such as the spec-
tral or tight graph wavelet ([7], [9]) may achieve suﬃciently sparse representations in
the graph wavelet domain, i.a. for appropriate design choices of the associated wavelet
kernel, there is no concrete (or intuitive) theory on what types of graph signals can
be annihilated, beyond the class of piecewise-constant signals, in particular, using the
properties and connectivity of the graph at hand. Sparsity on graphs has been more
speciﬁcally addressed in dictionary learning on graphs [18], which is concerned with the
problem of identifying an (overcomplete) basis D under which a given graph signal y can
be sparsely represented as y = Dx. Furthermore, multi-dimensional wavelet analysis has
been considered for bipartite graphs as the operation with respect to separate edge sets
on the same vertex set within a bipartite subgraph decomposition [5]. In our proposed
framework for graph approximation and wavelet analysis via graph product decomposi-
tion, the notion of multiple dimensions arises from the graph product operation itself,
with each factor constituting a separate dimension.

This paper is organised as follows: we introduce the notation and background theory
in Section 2, and proceed to discuss the collective of derived graph wavelet families as
well as set them into the context of classical spline theory in Section 3. Subsequently, in
Section 4, we expand our framework through the introduction of graph products, before
concluding with an outlook on future work in Section 5. The appendix contains all proofs
not included in the main text.

3

2. Preliminaries

2.1. Notation
We denote vectors with boldfaced lower case letters x and matrices with boldfaced up-
percase letters A. Let 1N and 0N deﬁne the constant column vectors of length N with

entries of 1’s and 0’s respectively, and

be the vector with samples of x at positions

(cid:21)
(cid:20) xB
i=0 |xi|2(cid:17)1/2
(cid:16)(cid:80)N

yBC

(cid:113)(cid:80)m

in set B and y at positions in complement BC. The vector and matrix norms, we will
most frequently make use of, are the l0-pseudo-norm, denoted with ||x||0 = #{i : xi (cid:54)= 0},
(cid:80)n
the l2-norm, given by ||x||2 =
and the Frobenius-norm of a matrix A,
given by ||A||F =
j=1 |ai,j|2. In addition, we deﬁne the Frobenius inner prod-
uct between matrices A and B as (cid:104)A, B(cid:105)F = tr(AT B). Given a matrix L and the sets
of indices A and B, the notation L(A, B) indicates that the corresponding rows and
columns in L are chosen. At last, we note that, contrary to classical wavelet theory, we
reverse the notation of dual pairs, by denoting the synthesis ﬁlters with ( ˜G, ˜H) and the
analysis ﬁlters with (G, H).

i=1

2.2. GSP Theory: Circulant Graphs

nal with entries Di,i =(cid:80)

For the ensuing discussion, we consider graphs, which are undirected, connected, (un-
)weighted, and do not contain any self-loops. Let a graph G = (V, E) be deﬁned by a
set V = {0, ..., N − 1} of vertices, with cardinality |V | = N , and a set E of edges. The
connectivity of G is given via its adjacency matrix A, with Ai,j > 0 if there is an edge
between nodes i and j, and Ai,j = 0 otherwise, and its degree matrix D, which is diago-
j Ai,j. The non-normalized graph Laplacian matrix L = D− A
of G has a complete set of orthonormal eigenvectors {ul}N−1
l=0 , with corresponding non-
negative eigenvalues 0 = λ0 < λ1 ≤ ··· ≤ λN−1.
Circulant graphs represent a special class of graphs as they reveal a set of convenient
properties, which can be used for the preservation of traditional signal processing con-
cepts and operations (see Fig. 1 for examples). In particular, a circulant graph G is
deﬁned via a generating set S = {s1, . . . , sM}, with 0 < sk ≤ N/2, whose elements indi-
cate the existence of an edge between node pairs (i, (i± sk)N ),∀sk ∈ S, where ()N is the
mod N operation; more intuitively, a graph is circulant if its associated graph Laplacian
is a circulant matrix under a particular node labelling [11]. Furthermore, we can deﬁne
lN−1], via
the symmetric, circulant graph Laplacian matrix L, with ﬁrst row [l0
i=0 lizi with zj = zN−j. Let the M -connected ring
graph G, as part of a sub-class of circulant graphs, be deﬁned via the generating set
S = {1, ..., M}, such that there exists an edge between nodes i and j, if (i − j)N ≤ M is
satisﬁed. The associated circulant graph Laplacian matrix is banded of bandwidth M .
Another relevant class is that of bipartite graphs, which are characterized by a vertex
set V = X ∪ Y consisting of two disjoint sets X and Y , such that no two vertices within
the same set are adjacent.
In GSP theory, a graph signal x is traditionally a real-valued scalar function deﬁned
on the vertices of a graph G, with sample value x(i) at node i, and can be represented
as the vector x ∈ RN [1]; in this work, we extend this deﬁnition to include complex-
valued graph signals x ∈ CN , for illustration purposes, while maintaining real weights

its representer polynomial l(z) =(cid:80)N−1

...

4

Figure 1: Circulant Graphs with generating sets S = {1}, S = {1, 2}, and S = {1, 3} (f.
left).

between connections on G. The Graph Fourier Transform (GFT) ˆx of x deﬁned on G,
is the representation in terms of the graph Laplacian eigenbasis U = [u0|···|uN−1] such
that ˆx = UH x, where H denotes the Hermitian transpose, extending the concept of the
Fourier transform to the graph domain [1]. We note that in case of a circulant graph,
the GFT can be represented by the traditional DFT, up to a permutation, as circulant
matrices are diagonalisable by the DFT-matrix.
Due to their regularity, circulant graphs lend themselves for deﬁning meaningful down-
sampling operations. As established in [11], one can downsample a given graph signal
by 2 on the vertices of G with respect to any element sk ∈ S. For simplicity, we resort
to the simple downsampling operation with respect to the outmost cycle (s1 = 1) of a
given circulant G, i.e. skipping every other labelled node, assuming that the graph at
hand is connected such that s1 ∈ S, and N = 2n for n ∈ N.
In addition, the same
authors introduced a set of vertex-domain localized ﬁlters constituting the spline-like
graph wavelet ﬁlterbank on circulant graphs ([12],[19]), which satisﬁes critical sampling
and perfect reconstruction properties:

Theorem ([12]). The set of low-and high-pass ﬁlters, deﬁned on an undirected connected
circulant graph with adjacency matrix A and degree d per node, take (weighted) averages
and diﬀerences with respect to neighboring nodes at 1-hop distances of a given graph
signal, and can be expressed as:

(cid:18)
(cid:18)

HLP =

HHP =

1
2

1
2

(cid:19)
(cid:19)

IN +

A
d
IN − A
d

.

(1)

(2)

The ﬁlterbank is critically sampled and invertible as long as at least one node retains the
low-pass component, while the complementary set of nodes retain the high-pass compo-
nent.

Multiscale analysis can be conducted by iterating the result on the respective down-
sampled low-pass branches, whereby the corresponding coarsened graphs are obtained
through suitable reconnection strategies [19].

2.2.1. Downsampling and Reconnection on Circulant Graphs

Succeeding the deﬁnition of a wavelet transform on a circulant graph, we examine
the problem of identifying suitable coarsened graph(s) on the vertices of which the down-

5

sampled low-and high-pass-representations of the original graph signal can be deﬁned, so
as to facilitate a multiresolution decomposition in the graph domain. While a downsam-
pling pattern can be easily identiﬁed, it is not straight-forward to determine if or how
to reconnect the reduced set of vertices. In general, the set of desired properties of a
coarsened graph, comprising closure, preservation of the initial connectivity and spectral
characterisation of the graph and/or graph type, among others, (see [10] for a more de-
tailed review), is rather diﬃcult to satisfy entirely, and priorities need to be set in keeping
with the overall goal to be achieved. Since we are interested in a sparse graph wavelet
representation, and the obtained sparsity K may increase with the bandwidth M of the
adjacency matrix, as will be clariﬁed later on, we favor a graph reconnection which re-
duces or maintains M when conducting multiresolution analysis. Kron-reduction [20] is a
commonly used method, which employs a sub-matrix approximation scheme, thus taking
into account the entire given graph Laplacian matrix for a more accurate dimensionality-
reduced graph-representation, yet it often leads to denser graphs (and thus an increased
matrix bandwidth) due to its maximum reconnection.
In particular, given the graph
Laplacian matrix L and a set Vα of retained nodes, Kron-reduction evaluates the graph-
Laplacian matrix ˜L of the coarsened graph as

˜L = L(Vα, Vα) − L(Vα, V C

α )L(V C

α , V C

α )−1L(Vα, V C

α )T .

In the traditional domain, the downsampled signal samples are ‘reconnected’ through
a simple stacking operation, whose graph-analogy on a simple cycle would correspond
to the reconnection of 2-hop neighbours, yet a straight-forward graph generalization is
hindered by the overall complex connectivity of a graph, making it unclear to which ex-
tent one generally needs to reconnect downsampled nodes. For a multilevel sparse graph
wavelet representation, we therefore resort to two variations, both of which preserve cir-
cularity with little or no reconnection, to determine the coarse graph ˜G: (1) we do not
reconnect nodes, and only keep existing edges (with exception of maintaining s = 1 ∈ S
to ensure that ˜G is connected), (2) we (re-)connect a subset of nodes, such that ˜G is
identical in structure to the initial G, i.e. it has the same generating set S.
We note that while the former approach leads to the sparsest possible solution, as given
an M -connected (banded) circulant graph, we continuously remove edges resulting from
odd elements in the generating set, reducing its band, it fails to preserve the global
connectivity of the initial graph, which for the objective at hand, we deem of secondary
importance. In addition, it produces the trivial simple cycle for bipartite circulant graphs.
The latter approach, while leading to a slightly less sparse representation due to the con-
stant bandwidth, reconnects a subset of nodes, which were initially connected via a path,
and preserves connectivity through an exact replication in lower dimension.

3. Families of Spline Wavelets on Circulant Graphs

The concept of graph-speciﬁc smoothness of a signal x on a graph G with graph
Laplacian matrix L has been introduced via the graph Laplacian quadratic form S2(x) =
xT Lx, and successfully leveraged in i.a. denoising schemes [1], however, it provides little
information on the sparsity of graph signals. Therefore, in this work, we choose to adhere
to the standard, graph-independent, notion of annihilation of polynomial or exponential

6

signals (for a given labelling), when considering compressibility of graph signals.
In classical signal processing, a high-pass ﬁlter h with taps hk is known to have N
vanishing moments when it is orthogonal with respect to the subspace of polynomials of
up to degree N − 1, that is when

(cid:88)

k∈Z

mn =

hkkn = 0,

for n = 0, ..., N − 1,

where mn is the n-th order moment of h. Coincidentally, a ﬁlter H(z) with N vanishing
moments is characterized by N zeros at z = 1. In [4], this property is extended to graphs
and manifolds by deﬁning the number of vanishing moments of a scaling function as the
number of eigenfunctions of the given diﬀusion operator T to which the former is orthog-
onal, up to a precision measure. Further, in [21] the eigenvectors of the graph Laplacian
are selected as the basis for ‘generalized vanishing moments’ on graphs. However, this
deﬁnition of vanishing moments on graphs does not accommodate equivalencies between
the graph and traditional domain, when considering for instance discrete periodic (time)
signals on a simple cycle.
Contrary to the above, we therefore choose to maintain the traditional deﬁnition through-
out this work for purposes of illustrating analogies to our developed spline wavelet theory
on circulant graphs, yet will brieﬂy revisit this interpretation when discussing the prop-
erties and implications of the e-graph Laplacian operator.
Deﬁnition 3.1. A graph signal p ∈ RN deﬁned on the vertices of a graph G is (piece-
wise) polynomial if its labelled sequence of sample values, with value p(i) at node i,
is the discrete, vectorized version of a standard (piecewise) polynomial, such that p =
d=0 ad,jtd, j =
1, ..., K, for t ∈ Z≥0, coeﬃcients ad,j ∈ R, and maximum degree D = deg(pj(t)).
In the following discussion, we develop a set of novel graph wavelet transform (GWT)
designs, which are localised in the vertex domain, critically sampled, invertible, and
ﬁnally, tailored to the annihilation of polynomial graph signals, the foundation of which
is laid by the ensuing result:

(cid:80)K
j=1 pj1[tj ,tj+1[, whereby t1 = 0 and tK+1 = N , with pieces pj(t) =(cid:80)D

Lemma 3.1. For an undirected, circulant graph G = (V, E) of dimension N , the asso-
i=1 li(zi + z−i) of graph Laplacian matrix L,
with ﬁrst row [l0 l1 l2
l2 l1], has two vanishing moments. Therefore, the operator
L annihilates polynomial graph signals of up to degree D = 1, subject to a border eﬀect
determined by the bandwidth M of L, whereby 2M << N .

ciated representer polynomial l(z) = l0 +(cid:80)M
Proof. The representer polynomial of L with degree d = (cid:80)M
M(cid:88)

metric weights di, can be expressed as:

l(z) = (−dM z−M − ... − d1z−1 + d − d1z − ... − dM zM ) =

di(zi − 1)(z−i − 1),

i=1 2di per node and sym-

...

whereby factors are divisible by (z±1 − 1) respectively using the equality zn − 1 =
(z − 1)(1 + z + ... + zn−1), thus proving that the matrix L has two vanishing moments.
Therefore, for a suﬃciently small M with respect to the dimension N of the graph G, or

i=1

7

in other words, if the adjacency matrix of G is a symmetric, banded circulant matrix of
bandwidth M , the corresponding L annihilates linear polynomial graph signals on G up
to a boundary eﬀect.

Given that L is circulant, we can generalize this property by considering Lk, k ∈ N,
which has 2k vanishing moments due to the equivalency between polynomial and circulant
matrix multiplication. In general, we observe that for an arbitrary graph G, whose graph
Laplacian matrix L has rows of the above form, we may achieve similar annihilation, yet
this property is not carried over to higher order k. Following the interpretation of the
graph Laplacian matrix as a high-pass ﬁlter, this insight gives rise to a new range of
graph wavelet ﬁlterbanks, whose high-pass ﬁlters can annihilate higher-order polynomial
graph signals for a sparse graph wavelet domain representation, as we will demonstrate
in the next sections.

3.1. Graph Spline Wavelets

We begin by showing that the spline-like graph wavelet transform (see eqs.

(1)-
(2)) can be generalized to higher order by raising its ﬁlters to the k-th power, thereby
incorporating the previously detected vanishing moment property:

Theorem 3.1. Given the undirected, and connected circulant graph G = (V, E) of di-
mension N , with adjacency matrix A and degree d per node, we deﬁne the higher-order
graph-spline wavelet transform (HGSWT), composed of the low-and high-pass ﬁlters

whose associated high-pass representer polynomial HHP (z) has 2k vanishing moments.
This ﬁlterbank is invertible for any downsampling pattern, as long as at least one node
retains the low-pass component, while the complementary set of nodes retains the high-
pass component.

(3)

(4)

(cid:19)k
(cid:19)k

HLP =

HHP =

1
2k

1
2k

IN +

A
d

IN − A
d

(cid:18)
(cid:18)

(cid:19)

(cid:18) 1

Proof. See Appendix A.1.
In particular, given a graph signal p ∈ RN deﬁned on G, the HGSWT yields

˜p =

(IN + K)HLP +

(IN − K)HHP

1
2

2

p =

1
2

(IN + K)˜pLP +

(IN − K)˜pHP

1
2

whereby K is a diagonal sampling matrix, with Ki,i = 1 at i = 0, 2, ..., N − 2 and
Ki,i = −1 otherwise, i.e. we downsample w.r.t. s = 1 ∈ S and retain even-numbered
nodes. The resulting signals ˜pLP , ˜pHP ∈ RN represent coarsened low-and high-pass
versions of p on G within a k-hop local neighborhood N (i, k),∀i ∈ V . The higher
the degree of the ﬁlterbank, the higher the number of vanishing moments, and the less
localized it becomes in the vertex domain. Figure 2 plots the low-and high-pass graph
ﬁlter functions of the HGSWT for k = 2 and illustrates the spread in the vertex domain
for a sample circulant graph.

8

Figure 2: Localization of the HGSWT ﬁlters for k = 2 in the graph vertex domain for
graph G with S = {1, 2}: shown at vertex v = 5 ∈ V on G (left), and the corresponding
graph ﬁlter functions at alternate vertices.

A bipartite circulant graph G is characterized by a generating set S which contains only
odd elements sk ∈ S for even dimension N , with the simple cycle S = {1} as a natural
example; we note the following interesting property of the HGSWT, when G is such:

Corollary 3.1. When G is an undirected, circulant, bipartite graph, with adjacency
matrix A of bandwidth M , the polynomial representation HLP (z) of the low-pass ﬁlter
HLP in Eq. (3) can reproduce polynomial graph signals up to order 2k − 1, subject to a
border eﬀect determined by the bandwidth M k of HLP , provided 2M k << N .

Proof. Similarly, as in Lemma 3.1, we can express the representer polynomial as

 1

2d

(cid:88)

i∈2Z++1

k

HLP (z) =

1

(2d)k (dM z−M +...+d1z−1+d+d1z+...+dM zM )k =

di(zi + 1)(z−i + 1)

and note that the RHS factors (z + 1)k(z−1 + 1)k, since (zi + 1) has a root at z = −1
only for i ∈ 2Z + 1. According to the Strang-Fix condition [22], this is necessary and
suﬃcient for ensuring the reproduction of polynomials.

It becomes evident that our use of the spline-wavelet terminology is well-founded, since
in the case of bipartite circulant graphs the polynomial reproduction property can be
generalised to higher order k, and graph ﬁlters (3)-(4) respectively reproduce and anni-
hilate polynomial graph signals up to degree n = 2k-1, bridging the gap to the traditional
domain. We will elaborate more thoroughly on similarities with the classical spline and
spline wavelets in Sect. 3.3.

3.2. Graph E-Spline Wavelets

Inspired by the generalized framework of cardinal exponential splines [14] in the
classical domain, we proceed to identify a new class of graph signals and graph wavelets
which maintain and extend these properties to the graph domain.

9

051015−0.2−0.100.10.20.30.40.5NodeGraph Signal  LPHPDeﬁnition 3.2. A complex exponential polynomial graph signal y ∈ CN with parameter
α ∈ R, is deﬁned such that node j has sample value y(j) = p(j)eiαj, for polynomial
p ∈ RN of degree deg(p(t)).

In accordance with the deﬁnition of e-splines in the classical domain via a diﬀerential
operator, and our previous result on the graph Laplacian, we introduce the e-graph
Laplacian:

Deﬁnition 3.3. Let G = (V, E) be an undirected, circulant graph with adjacency matrix
j=1 2dj per node with symmetric weights dj = Ai,(j+i)N . Then the
parameterised e-graph Laplacian of G is given by ˜Lα = ˜Dα − A, with exponential degree

A and degree d =(cid:80)M
˜dα =(cid:80)M

j=1 2dj cos(αj).

The standard graph Laplacian L can be therefore regarded as a special case of the e-
graph Laplacian ˜Lα for α = 0, however, with ˜dα ≤ d the matrix ceases to be positive
semi-deﬁnite.

ated representer polynomial ˜l(z) = ˜l0 +(cid:80)M

Lemma 3.2. For an undirected, circulant graph G = (V, E) of dimension N , the associ-
˜li(zi + z−i) of the e-graph Laplacian matrix
˜Lα, with ﬁrst row [˜l0
˜l2
˜l1], has two vanishing exponential moments, i.e. the
operator ˜Lα annihilates complex exponential polynomial graph signals with exponent ±iα
N for k ∈ [0, N − 1], this is subject to a border eﬀect
and deg(p(t)) = 0. Unless α = 2πk
determined by the bandwidth M of ˜Lα, whereby 2M << N .
Proof. Consider the representer polynomial ˜l(z) of ˜Lα:

˜l2

˜l1

i=1

...

M(cid:88)

M(cid:88)

˜l(z) =

2dj cos(αj) − dj(zj + z−j) =

dj(1 − eiαjzj)(1 − e−iαjzj)(−z−j)

j=1

j=1

whereby we note that (1 − e∓iαz−1) is a factor of (1 − e±iαjzj), which corresponds to
two exponential vanishing moments [14].

As we require the weights of a graph wavelet ﬁlter H to be symmetric and real-valued,
the construction of ˜Lα with polynomial factors (1 − eiαz−1)(1 − e−iαz−1) ensures this1.
To provide an intuition behind the structure of the e-graph Laplacian, we make the
following remark:
Remark 3.1. The eigenvalues {λj}N−1

j=0 of a circulant matrix, and in particular of A
j = 0, ..., N − 1. We
note that all circulant matrices have the same eigenbasis U. Hence, when we restrict
N and j ∈ [0, N − 1], the nullspace of the corresponding e-graph Laplacian ˜Lα
α = 2πj

in Lemma 3.2, can be expressed as λj = (cid:80)M

(cid:16) 2πkj

k=1 2dk cos

(cid:17)

N

,

1Our focus in this work is restricted to the class of complex exponential polynomial graph signals of
the form y(t) = p(t)eiαt, α ∈ R, which can be represented by trigonometric splines in the traditional
domain, however, one can generalize the framework by letting α = −iβ, β ∈ R.
In particular, this
results in real exponential polynomials, which can be represented in terms of hyperbolic functions of
the form (cosh(βt), sinh(βt)), inducing the class of hyperbolic splines [14], with redeﬁned e-degree ˜d =

k=1 2dk cos(−iβ) =(cid:80)M
(cid:80)M

k=1 2dk cosh(β).

10

consists of its j-th eigenvector uj, where uj represents a complex exponential graph
N and deg(p(t)) = 0. In particular, we have ˜dα = λj, and for α = 0
signal with α = 2πj
this becomes the maximum eigenvalue ˜d0 = d = λmax, whose associated eigenvector is
the all-constant umax = 1N , i.e. the nullspace of standard graph Laplacian L. This
facilitates the reinterpretation of the e-graph Laplacian as ˜Lα = λjIN − A, for α = 2πj
and j ∈ [0, N − 1], or more generally, (λjIN − A)uj = 0N , with ˜Lα representing the shift
of L by λj − d = −˜λj toward annihilation of uj, where {˜λj}N−1
j=0 denotes the spectrum of
L. Depending on eigenvalue multiplicities, the nullspace of ˜Lα is accordingly extended.

N

Revisiting our initial discussion on vanishing moments, it becomes evident that the an-
nihilation property of the e-graph Laplacian is related to the deﬁnition of vanishing
moments on graphs in [4], as the nullspace of the former consists of (a subset of) its
eigenvectors; however, we do not extend this deﬁnition up to a precision metric, and
note that our chosen operator is parametric. Hereby, the signiﬁcance of our approach
lies in the fact that annihilation is also local, and not restricted to the nullspace of ˜Lα.
Even though we are mainly interested in properties pertaining to circulant graphs, one
may consider extending the idea of a ‘nullspace-shifted’ graph Laplacian operator to all
regular graphs, for which it is known that L and A share the same eigenbasis [2], as well
as arbitrary graphs, extending the classes of graph signals which can be annihilated on
their nodes.
In addition, while the ordered eigenvalues of ˜Lα are no longer nonnegative, their inter-
pretation as graph frequencies which order the corresponding eigenvectors in terms of
the number of their oscillations (zero crossings) [1] remains valid, with the only diﬀer-
ence that the graph frequency d − λj of L becomes the new zero or DC-frequency in
˜Lα = (λjIN − A). Further, the e-graph Laplacian quadratic form can be expressed as
˜Sα2(x) = xT ˜Lαx = ( ˜dα − d)||x||2

2 + xT Lx = ( ˜dα − d)||x||2

2 + S2(x).

Based on these insights, we proceed to design a graph e-spline wavelet ﬁlterbank, fol-
lowing a similar line as the (higher-order) graph-spline wavelet ﬁlterbank. Hereby, in
order to generalize the types of graph signals which can be reproduced and/or annihi-
lated by a GWT, we incorporate multiple parameters (cid:126)α = (α1, ..., αT ) ∈ RT via a simple
convolution of the graph ﬁlter functions, resulting in an invertible transform:

Theorem 3.2. The higher-order graph e-spline wavelet transform (HGESWT) on a
connected, undirected circulant graph G, is composed of the low-and high-pass ﬁlters

d with ˜dαn =(cid:80)M

˜dαn

whereby A is the adjacency matrix, d the degree per node and parameter βn is given by
j=1 2dj cos(αnj) and (cid:126)α = (α1, ..., αT ). Then the high-pass ﬁlter
βn =
annihilates complex exponential polynomials (of deg(p(t)) ≤ k − 1) with exponent ±iαn
for n = 1, ..., T . The transform is invertible for any downsampling pattern as long as the

11

(cid:18)
(cid:18)

1
2k

1
2k

T(cid:89)
T(cid:89)

n=1

n=1

HLP(cid:126)α =

HHP(cid:126)α =

(cid:19)k
(cid:19)k

βnIN +

A
d

βnIN − A
d

(5)

(6)

eigenvalues γi of A
conditions
(i) k ∈ 2N, or

d satisfy |βn| (cid:54)= |γi|, i = 0, ..., N − 1, under either of the suﬃcient

(ii) k ∈ N and βn, T such that ∀γi, f (γi) =(cid:81)T
continues to be invertible under the above as long as βn (cid:54)= 0 and at least (cid:80)T

If parameters βn, are such that βn = γi, for up to T distinct values, the ﬁlterbank
i=1 mi low-
pass components are retained at nodes in set Vα such that {v+i,k(Vα)}i=T,k=mi
(and, if
−γi exists, complement {v−i,k(V C
i=1,k=1 ) form linearly independent sets, where mi
is the multiplicity of γi and {v±i,k}mi
k=1 are the eigenvectors respectively associated with
±γi.
Proof. See Appendix A.2.

i )k > 0 or f (γi) < 0.

α )}i=T,k=mi

n=1(β2

n − γ2

i=1,k=1

The essential property of the above transform, which is captured in the proof, is that
invertibility is governed by the parameters βn. In particular, in the case where the chosen
βn coincide with the magnitude(s) of certain eigenvalues {γi}i of normalized adjacency
matrix A
d , a suitable downsampling pattern needs to be selected such that the eigenvec-
tors {vi,k}i,k associated with {γi}i remain linearly independent after downsampling. It
is easily inferred that this can become challenging for certain graph topologies as well
as when the number T of such βn is large. In particular, circulant adjacency matrices
may exhibit large eigenvalue multiplicities as a result of increased graph connectivity.
For instance, the normalized adjacency matrix of an unweighted complete (and hence
circulant) graph of dimension N has γi = − 1
d of multiplicity N − 1 and γmax = 1, which
is simple. In this case, the transform is invertible for β = 1, but not for β = − 1
d , when
downsampling is conducted w.r.t. s = 1. This can be remedied by introducing distinct
weights.

Further, one easily deduces that the HGESWT of Thm. 3.2 converges to the HGSWT

of Thm. 3.12 for α → 0 and β =
are relaxed, and, as a consequence of this structural similarity, one can detect similar
reproduction properties for circulant bipartite graphs:

d → 1, in which case the conditions on invertibility

˜dα

Corollary 3.2. Let G = (V, E) be an undirected, bipartite circulant graph with adjacency
matrix A of bandwidth M , and e-degree ˜dα. Then the low-pass ﬁlter HLPα (5) reproduces
complex exponential polynomial graph signals y with exponent ±iα, up to a border eﬀect
determined by the bandwidth M k of HLPα, provided 2M k << N .

Proof. The representer polynomial HLPα (z) is of the form

HLPα (z) =

1

(2d)k (dM z−M + ... + d1z−1 +

2dj cos(αj) + d1z1 + ... + dM zM )k

M(cid:88)

j=1

2It should be noted that invertibility of the wavelet transforms in Thms 3.1 and 3.2 does not require A
to be a circulant matrix. In particular, for the former, it is suﬃcient that A
d be replaced by the normalized
adjacency matrix ˆA = D−1/2AD−1/2 of an undirected connected graph [2], and for the latter, its
eigenbasis V is subject to similar constraints, if chosen parameters βn coincide with the eigenvalues of
ˆA (see Appendix A.2). However, (higher-order) vanishing moments are lost and downsampling becomes
less intuitive and/or accurate when applying these transforms to non-circulant graphs.

12

 1

2d

M(cid:88)

j=1

=

dj(1 + eiαjzj)(1 + e−iαjzj)(z−j)

k

whereby (1 + e∓iαz−1) is a factor of (1 + e±iαjzj) if j is odd, i.e. the elements in the
generating set of G are odd. This ﬁlter therefore satisﬁes the generalized Strang-Fix
conditions for the reproduction of exponentials [23].

At last, we deduce the following property pertaining to the low-pass ﬁlter, which we will
make use of in further graph wavelet constructions:

A and degree d =(cid:80)M

Corollary 3.3. Let G = (V, E) be an undirected, circulant graph with adjacency matrix
j=1 2dj per node with symmetric weights dj = Ai,(j+i)N . Then the
low-pass ﬁlter HLP(cid:126)α (5) is invertible unless (i) G is bipartite while βn satisﬁes |βn| = |γi|
or (ii) βn = −γi, i ∈ [0 N − 1].
Proof. See Appendix A.3.

Prior to broadening the range of graph wavelet constructions on the basis of the afore-
mentioned families, we conduct further analysis of the characteristic structure of the
latter. Hereby, we focus on a bipartite circulant graph scenario, as this case is more
relevant due to its dual vanishing moment property. Contrary to standard biorthogonal
wavelet ﬁlterbanks, our graph spline wavelet constructions exhibit well-deﬁned analysis
ﬁlters, while their corresponding synthesis ﬁlters lack a concrete characterization. Let
the general analysis matrix of a graph wavelet transform be denoted by

(cid:20)Ψ↓2HLP

Φ↓2HHP

(cid:21)

,

W =

for downsampling matrices Ψ↓2, Φ↓2 ∈ RN/2×N , which respectively retain even and odd
numbered nodes, and graph-based low-and high-pass ﬁlters HLP , HHP , whose respective
representer polynomials are expressed by HLP (z), HHP (z). Given that W is invertible,
and contains two sets of basis functions, their corresponding duals, which we denote
biorthogonal system [24]. In general, the following relations hold for i, j ∈ {LP, HP}

by ˜HLP (z), ˜HHP (z) exist in W−1 = (cid:2)(Ψ↓2 ˜HLP )T

(Φ↓2 ˜HHP )T(cid:3), by deﬁnition of a

Hi(z) ˜Hi(z) + Hi(−z) ˜Hi(−z) = 2

Hi(z) ˜Hj(z) + Hi(−z) ˜Hj(−z) = 0, i (cid:54)= j

whereby HLP (z) = h0+(cid:80)

k∈2Z++1 hk(zk+z−k) and HHP (z) = zHLP (−z) are established
in the current constructions. By substitution into the above, we observe that ˜HHP (z) =
z−1 ˜HLP (−z) must equivalently hold for the dual pair.

3.3. Splines on Graphs

In the classical domain, the B-spline of degree zero β0

+, representing the box-function,

(cid:26) 1, x ∈ [0, 1)

0, otherwise
13

β0
+(x) =

= βn

+(x) = ∆+x0

+; hereby x0

+ ∗ β0

+ ∗ ... ∗ β0

+ such that β0

is deﬁned through the action of discrete (ﬁnite diﬀerence) operator ∆+{·}, with z-
transform (1 − z−1), on the step function x0
+ =
D−1{δ(x)} is the Green’s function of continuous ﬁrst-order diﬀerential operator D{·} [15].
A spline of order n is then obtained through (n + 1)-fold convolution of the box function
β(0,...,0)
+(x) = β0
+(x), and similarly constructed through the higher-
+
∆n+1
+ xn
order operator ∆n+1
,
n!
where xn
The connection between the continuous and discrete time domain is established via
the identity3: ∀f ∈ S(cid:48), ∆m
+{f} =
+ ∗ (D − αI){f} for operator ∆α
βα
+, with
+{·} can be regarded as a discrete approximation of (D − αI){·}
α ∈ C. In particular, ∆α
([25], [15], [14]). Such (exponential) polynomial splines, as solutions of certain variational
problems, form a subset of the more generalized variational splines ([26], [27]).

∗ Dm{f}, and more generally via ∆α
+(z) = (1 − eαz−1) and exponential spline βα

+ {·}, with z-transform (1 − z−1)n+1, such that βn

+ is the one-sided power function [15].

+{f} = βm−1

+(x) =

+

+

The graph Laplacian matrix can be viewed as an approximation of the continuous Lapla-
cian operator −∇2 via the discrete Laplacian, which motivates the consideration of
splines on graphs, nevertheless, a brute-force generalization of standard deﬁnitions is
primarily hindered by the fact that the former is singular. In [28], variational splines
on graphs are determined as the Green’s functions of the approximate graph diﬀerential
operator (L + IN )t for small  > 0, t > 0, and minimizers of the Sobolev norm, of
the form (L + IN )−tei for normalized graph Laplacian L and elementary basis vector
ei ∈ RN with ei(i) = 1 and ei(k) = 0 otherwise. Furthermore, Chung et al.
[29] de-
ﬁne the Green’s function of a connected graph, without a direct reference to splines, as
j , with normalized graph Laplacian eigenvectors uj and associated
eigenvalues λj, and propose closed-form expressions for elementary cases, including the
simple cycle graph, which are further extended to Cartesian graph products [30].

G = (cid:80)

ujuH

λj >0

1
λj

Spline wavelet transforms in the Euclidean domain are commonly characterized by (dual)
scaling functions which are (combinations of) polynomial splines, with the Cohen-Daubechies-
Feauveau wavelet as a prominent example [15]. In order to provide a more intuitive link
between the spline-like properties of our graph wavelet functions and the traditional B-
spline, we consider the case of a graph signal residing on the vertices of a simple cycle
graph, which we denote with GS1=(1), as the least connected example of a circulant
graph. This graph-representation can be regarded as an analogy to a periodic signal in
the discrete domain, whereby existing edges indicate the sequence of sample values [1].
The rows and columns of the low-pass ﬁlter matrix (3) in the HGSWT, given by



HLP :=



,

0.5
0.25

0.25
0.5

0

0.25
. . .

···
0
. . .

0
···

0.25

0

k

. . .

. . .

···

0

0.25

0.5

0.25

0

3Hereby, S(cid:48) denotes Schwartz’s class of tempered distributions.

14

Figure 3: The HGSWT ﬁlter functions at k = 1 for diﬀerent bipartite circulant graphs,
N = 16.

produce the traditional higher-order spline via convolution of the discrete linear spline
˜β(0,0)
+ (t) (at k = 1) with itself, thus creating the notion of a spline-wavelet ﬁlterbank. The
corresponding (high-pass) graph Laplacian (4), not only provides the stencil approxima-
tion of the second order diﬀerential operator for certain types of graphs such as lattices
[19], but in the case of a simple cycle, and symmetric circulant graphs by extension, gains
the actual vanishing moment property. It therefore appears that this spline-like property
can be directly extended to bipartite circulant graphs, whose associated HGSWT ﬁlters
retain both the reproduction and annihilation property of traditional spline-wavelets, as
noted in Cor. 3.1. Similarly, the rows and columns of the low-pass ﬁlter matrix HLPα
(5) in the HGESWT (at k = 1) describe a second-order e-spline

0.5 cos(α)

0.25

0.25

0.5 cos(α)



HLPα :=

0

0.25
. . .

···
0
. . .

0
···

0.25

0

. . .

. . .



.

0.25

0

···

0

0.25

0.5 cos(α)

By considering powers of HLPα , we obtain the polynomial e-spline basis functions, while
the multiplication by low-pass ﬁlters of diﬀerent parameters αn, as in Thm 3.2, results in
convolved e-spline basis functions. From Cor. 3.2, we gather that the exponential poly-
nomial reproductive properties can be similarly extended to bipartite circulant graphs.

Continuous Operator

Order

e-Spline
β(0,0)(t)
β(0,..,0)(t)
β(iα,−iα)(t)
β(iα,−iα,...,iα,−iα)(t)

β(iα1,−iα1,...,iαm,−iαm)(t) (cid:81)m

D2{} = d2
D2n{} = d2n

dt2

dt2n

(D − iαI) ∗ (D + iαI){}
(D − iαI)n ∗ (D + iαI)n{}
t=1(D − iαtI)n ∗ (D + iαtI)n{}

2
2n
2
2n

2mn (cid:81)m

Graph (e-)Spline
(2dIN − ˜L0)ei
(2dIN − ˜L0)nei
(2 ˜dαIN − ˜Lα)ei
(2 ˜dαIN − ˜Lα)nei
t=1(2 ˜dαtIN − ˜Lαt)nei

Matrix Operator Order
2
2n
2
2n
2mn

˜L0
˜Ln
0
˜Lα
˜Ln
α
˜Ln
αt

(cid:81)m

t=1

Table 1: Comparison between the continuous e-Spline and Graph e-Spline Deﬁnitions

15

05101500.10.20.30.40.5NodeLow−Pass Graph Functions  S=(1)S=(1,3)S=(1,3,5)051015−0.3−0.2−0.100.10.20.30.40.5NodeHigh−Pass Graph Functions  S=(1)S=(1,3)S=(1,3,5)Figure 4: The HGESWT ﬁlter functions (k = 1) for diﬀerent bipartite circulant graphs
at α = 2π

N , N = 16.

+

( ˜dαIN + A)ei = (2 ˜dαIN − ˜Lα)ei for e-degree ˜dα =(cid:80)M

In particular, for a bipartite circulant graph, we may interpret the resulting graph
spline-like function, which we denote as column i of the generalized low-pass operator
k=1 2dk cos(αk), as a convolution
of the discrete (e-)spline ˜β(iα,−iα)
(t) of order 2 with a function φG(t), which depends
on the connectivity of the graph at hand. Thereby, we introduce a link to graphs and
make the notion of a ‘graph-spline’ which converges to the ‘classical’ discrete spline as
GS → GS1=(1) for an arbitrary circulant bipartite graph GS with generating set S, more
concrete. Figures 3 and 4 compare the low-and high-pass functions of the HGSWT
and HGESWT respectively for diﬀerent bipartite graph examples which correspond to
second-order graph (e-)splines, with the simple cycle representing the traditional (e-
)spline.
Our motivation for the use of the spline-terminology for functions (2 ˜dαIN − ˜Lα)ei origi-
nates from its reproductive properties of (exponential) polynomials and hence structural
similarity with its classical counterparts, as well as its deﬁnition through a suitable diﬀer-
ential operator, i.e. the parameterised graph Laplacian ˜Lα; however, it should be clariﬁed
that these do not constitute Green’s functions of ˜Lα. While the variational graph splines
in [28] of the form (L + IN )−tei, t > 0 inherit similar properties for (exponential) poly-
nomial reproduction when L is circulant, contrary to our spline-like constructions, they
are not well-characterized on the graph nor compactly supported, and therefore of lesser
interest as basis functions for graph wavelets.

We summarize and compare the classes of spline-like functions on bipartite circulant
graphs and their classical continuous counterparts in Table 1 in relation to order, with
the symmetrization βn(x) = βn
+

2

(cid:0)x + n+1

(cid:1).

3.3.1. The directed graph spline

The collective of results pertaining to vanishing moments of graph operators can be
extended to the case when A is the adjacency matrix of a directed circulant graph (cid:126)GS,
and the corresponding graph Laplacian is replaced by a ﬁrst order (normalized) diﬀer-
ence operator of the form S = IN − A
d , similarly deﬁned as in [3]. Hereby, let edge
(i, (i + sk)N ) in (cid:126)GS be directed from node i to (i + sk)N , for sk ∈ S. The representer
polynomial of operator S then possesses one vanishing moment, which can be generalized

16

05101500.10.20.30.40.5NodeLow−Pass Graph Functions  S=(1)S=(1,3)S=(1,3,5)051015−0.3−0.2−0.100.10.20.30.40.5NodeHigh−Pass Graph Functions  S=(1)S=(1,3)S=(1,3,5)d

˜d±α

d IN + A

d IN − A

(cid:16) ˜d±α

to higher order k, while the degree-parameterised ˜S±α =

complex, e-degree ˜d±α =(cid:80)M
(cid:17)k

d , featuring the, now
k=1 dke±iαk, per node, possesses one vanishing exponential
moment, i.e. ˜S±α respectively annihilate exponential graph signals with exponent ±iα.
Generalizations also apply to the reproduction properties of low-pass ﬁlters of the form
HLP±α = 1
in the bipartite case, whereby (linear combinations of) the
2k
rows of HLP±α (at k = 1) reproduce exponentials with reversed exponent ∓iα (and vice
versa for the columns).
The invertibility of the graph spline wavelet ﬁlterbank construction in Thm 3.1 remains
intact for directed graphs at k = 1, as by the Perron Frobenius Thm. [31] for nonnegative
d maintains an (albeit complex) spectrum with |γi| < γmax and γmax = 1 of
matrices, A
multiplicity 1 with eigenvector 1N ; hereby A is required to be primitive, i.e. Ak > 0
for some k ∈ N to ensure |γi| < γmax [31]. Otherwise, invertibility of the transform for
all remaining graph cases depends on the downsampling pattern and requires that the
‘downsampled’ eigenvectors associated with γi and −γi (for |γi| = 1) form linearly in-
dependent sets respectively. Similarly, the proof of the graph e-spline wavelet transform
(see Thm 3.2) with (α,−α) in (cid:126)α, including the special cases |βn| = |γi| can be extended
to accommodate directed graphs under further restrictions, as due to degree-regularity
(i.e. the in-and out-degrees of each node are the same) and circularity, A maintains the
DFT-matrix as its basis.

2d

˜dα

2d IN − A+AH

The study of the directed graph case is covered to a lesser extent in spectral graph theory,
however, [32] deﬁnes the combinatorial graph Laplacian of a directed graph as a sym-
metrization via the probability transition matrix P. When the graph is directed, strongly
connected and circulant, this would correspond to (cid:126)L = IN − A+AH
, which is equivalent
to the normalized graph Laplacian of its undirected counterpart. This deﬁnition gives
rise to interesting generalizations, whereby the undirected normalized e-graph Laplacian
can be expressed via the decomposition ˜Lα =
, with
˜dα = ˜d+α + ˜d−α. In other words, the annihilation property of the e-graph Laplacian
is preserved in the case of a directed circulant graph through the Hermitian transpose,
where ˜d+α can be simultaneously interpreted as the degree which annihilates complex
exponentials with exponent +iα on the graph of A and −iα on the graph of AH (and
vice versa for ˜d−α). This ties in with our previous discussion on graph spline similar-
ities and analogies, as in the undirected case, the graph Laplacian operator is a graph
extension of a traditional second order derivative operator, thereby giving rise to graph
spline-like functions and associated wavelets in degree steps of 2, suggesting that the
directed ﬁrst-order graph diﬀerence operator ˜Sα provides an extension to the traditional
ﬁrst-order diﬀerential operator. For the directed cycle, we therefore ascertain a compre-
hensive analogy with the traditional spline and e-spline deﬁnitions.
As we are primarily interested in real valued node degrees and (symmetric) graph ﬁlters,
we will continue to focus on the undirected case.

˜S−α+˜SH−α

2d =

˜Sα+˜SH
α

=

2

2

3.4. Complementary Graph (E-)Spline Wavelets

The introduced transforms can annihilate (complex exponential) polynomial graph
signals in the high-pass branch, yet do not reproduce such in the low-pass branch, unless
the graph at hand is also bipartite, as shown in Cors. 3.1 and 3.2. In addition, it becomes

17

apparent that while the proposed ﬁlterbanks are well-deﬁned in the analysis domain, they
lack a straightforward synthesis representation. At last, we point to the fact that both
low-and high-pass ﬁlters have compact support of the same length 2M k + 1, based on
the given A, while the support of their corresponding synthesis ﬁlters is comparatively
larger.
In light of this, we develop a new class of graph wavelet ﬁlterbanks on circulant graphs,
by making use of traditional spectral factorization techniques ordinarily employed for
the creation of biorthogonal perfect reconstruction ﬁlterbanks (also used in [6] to create
bipartite spectral graph ﬁlters), in order to satisfy the additional desired properties.
Since the ﬁltering operation of a discrete-time signal in traditional signal processing can
be deﬁned as the matrix-vector product between a circulant matrix and the given signal-
vector, spectral factorisation is directly applicable to circulant graphs, establishing a
convenient analogy to the graph domain. Thus, we can achieve that the ﬁlter matrices in
the analysis and synthesis branch are of ﬁnite and ‘balanced’ bandwidth for 2M k < N .
We further note that this type of ﬁlterbank, contrary to the preceding, facilitates only
the standard alternating downsampling pattern on circulant graphs, whereby every other
node is skipped.

Let us consider the simple spline case ﬁrst. Given analysis high-pass ﬁlter HHP (z) = l(z)k
(2d)k
with 2k vanishing moments, we can determine the synthesis lowpass ﬁlter as ˜HLP (z) =
HHP (−z) and thus, the analysis lowpass ﬁlter HLP (z) via the biorthogonality relations
HLP (z) =(cid:80)T
of a traditional ﬁlterbank [24], with P (z) = HLP (z) ˜HLP (z) subject to the constraint
of the half-band condition4 P (z) + P (−z) = 2. By requiring that the resulting ﬁlter
i=0 ri(zi + z−i) is symmetric (on an undirected graph), we obtain the equal-
L(cid:88)

(cid:33)k(cid:32) T(cid:88)

ity

(cid:32)
d − M(cid:88)

(−1)idi(zi + z−i)

P (z) = 1+

p2i+1(z2i+1+z−(2i+1)) =

1

(2d)k

ri(zi + z−i)

(cid:33)

i=0

i=1

i=0

(7)
where P (z) is a polynomial of odd powers.
In addition, we may further impose the
restriction that the analysis and synthesis ﬁlters have an equal number of vanishing
moments 2k, by setting HLP (z) = (z + 1)k(z−1 + 1)kR(z), where R(z) is the polynomial
to be determined.
For k = 1, we require the highest degree of each side of eq. (7) to be 2L + 1 = M + T ,
and consider the L + 1 constraints p2n = 0, n = 1, ..., L, and p0 = 1, and T + 1 unknowns
ri, i = 0, ..., T . Thus, to obtain a unique solution to the resulting linear system, we
, or T = M − 1. For a higher-order ﬁlterbank with k > 1, the
require L = T = M +T−1
, or T = M k − 1. If we further impose
constraints change as follows: T = L = M k+T−1
that both synthesis and analysis ﬁlters have an equal number of vanishing moments, we
need to include the additional factor (z + 1)k(z−1 + 1)k for HHP (z) = 1
(2d)k l(z)k, and
require T = M k + k − 1.
The necessary existence of a complementary analysis low-pass ﬁlter for a given high-pass

2

2

4Since the set up of our ﬁlterbank is such that even-numbered nodes retain the low-pass and odd-
numbered nodes the high-pass component, we are technically considering orthogonality between the
shifted zHHP (z) and its dual ˜HLP (z) = −z−1((−z)HHP (−z)), but omit this notation for simplicity.

18

ﬁlter of graph G, follows from the B´ezout theorem:
Theorem (B´ezout [23]). Given C(z) ∈ R[z], there exists a polynomial D(z) ∈ R[z] such
that

C(z)D(z) + C(−z)D(−z) = 2

if and only if C(z) has neither zero as a root, nor a pair of opposite roots.
In this
case, there exists a unique polynomial D0(z) ∈ R[z] satisfying the above and such that
degD0(z) ≤ C(z) − 1. The set of all polynomials D(z) ∈ R[z] that satisfy the above is

{D0(z) + zλ(z2)C(−z),

λ(z) ∈ R[z]}

(cid:80)M
In our case, we observe that C(z) = HHP (−z) cannot have a zero root since d =
i=1 2di > 0 (as we only consider nonnegative weights di ≥ 0). Furthermore, C(z)
contains pairs of opposing roots such that HHP (−z) = HHP (z) if the generating set S
of the graph at hand contains only even elements; however, as we assume that G is con-
nected with s = 1 ∈ S, this cannot occur in our framework. We can equivalently resort
to spectral factorization for bipartite graphs, however, since both P (z) and HHP (z) are
odd degree polynomials, R(z) is required to be of higher degree T than the remaining
factor in P (z) in order to produce a non-trivial solution. This gives rise to an underdeter-
mined linear system, which can be uniquely solved by imposing additional constraints on
the coeﬃcients ri (such as roots at z = −1). The proposed biorthogonal graph wavelet
constructions for circulant graphs are captured in the following theorem:

Theorem 3.3. Given the undirected, and connected circulant graph G = (V, E) of di-
mension N , with adjacency matrix A and degree d per node, we deﬁne the higher-order
‘complementary’ graph-spline wavelet transform (HCGSWT) via the set of analysis ﬁl-
ters:

(cid:18)

(cid:19)k

(8)

(9)

(10)

(11)

HLP,an

(∗)
= C ¯HLP =

A
d

IN +

(cid:19)k

(cid:18)

1
2k C
IN − A
d

HHP,an =

1
2k

and the set of synthesis ﬁlters:

HLP,syn = c1HHP,an ◦ IHP
HHP,syn = c2HLP,an ◦ ILP

where HLP,an is the solution to the system from eq. (7) under speciﬁed constraints, with
coeﬃcient matrix C arising from the relation HLP,an ¯H−1
LP where applicable (see Cor.
3.3). Hereby, ◦ is the Hadamard product, ci, i ∈ {1, 2} are normalization coeﬃcients,
and ILP/HP circulant indicator matrices with ﬁrst row of the form [1 − 1 1 − 1 ...].
Proof. Follows from above discussion.

As a result of spectral factorization, the shape and vertex spread of HLP,an does not
coincide exactly with the adjacency matrix of the graph (and its powers), but rather
encompasses a subset Si ⊆ N(i, ˜k) of vertices, per node i within its ˜k-hop local neighbor-
hood, whereby ˜k depends on the initial constraints we impose on HLP,an(z).

19

We therefore establish a structural link to the analysis branch of the HGSWT in Thm
3.1, in particular, to the higher-order low-pass graph ﬁlter ¯HLP of eq.
(3), which is
based on the adjacency matrix, via the graph ﬁlter given by symmetric circulant coeﬃ-
cient matrix C in (∗); hereby, C can be determined via matrix inversion of ¯HLP (when
G is non-bipartite, see Cor. 3.3 for α = 0).
Moreover, we note that given initial graph signal p ∈ RN and letting ˜p ∈ RN denote the
graph signal in the GWT domain, as in Sect. 3.1, the synthesis stage can be expressed
as follows:

(cid:19)

((IN − K)HHP,syn)T
for Ki,i = 1 at even-numbered positions and Ki,i = −1 otherwise.

((IN + K)HLP,syn)T +

1
2

2

˜p = p,

(cid:18) 1

the former be divisible by the term R2j(cid:126)γ(z) =(cid:81)M

We proceed analogously for the graph e-spline case. According to ([23], Thm. 1), for
a scaling ﬁlter Hj(z) at level j to reproduce a function of the form P (t)eγmt, where
degP (t) ≤ (Lm − 1) and Lm is the multiplicity of γm, it is necessary and suﬃcient that
m=1(1 + e2j γmz−1), ∀j ≤ j0 − 1, with
(cid:126)γ = (γ1, ..., γM )T ∈ CM , i.e. satisfying the generalized Strang-Fix conditions for suitable
(cid:126)γ. Hereby, Hj(z) must not contain roots of opposite sign.

L(cid:88)

i=0

(cid:32)
˜dα − M(cid:88)

(cid:33)(cid:32) T(cid:88)

(cid:33)

Mirroring the constructions in Thm. 3.3 and given analysis high-pass ﬁlter HHPα (z) =
˜lα(z)
2d with 2 vanishing exponential moments, we determine the analysis lowpass ﬁlter
HLPα(z), which can be expressed as an extension of (5) via a coeﬃcient matrix C (sub-
ject to constraints, see Cor. 3.3). By imposing the constraints of B´ezout’s Thm.
[23],
and setting P (z) = HLPα (z)HHPα (−z), we arrive at an equality of the form

P (z) = 1+

p2i+1(z2i+1+z−(2i+1)) =

1
2d

(−1)idi(zi + z−i)

ri(zi + z−i)

i=1

i=0

1

(2d)

n=1

such that HHP(cid:126)α (z) =(cid:81)T

˜lαn (z), and HLP(cid:126)α(z) =(cid:81)T

(12)
and solve the emerging linear system in a similar fashion as discussed for eq. (7) for
unknown symmetric coeﬃcients ri of HLPα (z).
Moreover, for the analysis and synthesis ﬁlters to have (an equal number of) vanishing
moments, we require HLPα(z) = (z+eiα)(1+e−iαz−1)R(z), where R(z) is the polynomial
to be determined. This scheme can be generalised to higher order for (cid:126)α = (α1, ..., αT )
n=1(z + 2 cos(αn) + z−1)kR(z),
however, a solution R(z) exists only if the remainder term in P (z) does not contain zero
and/or opposing roots [23].
The possibility of a multiresolution representation of the ﬁlterbank, is conditional upon
the existence of real-valued ﬁlters, which maintain their reproduction/annihilation prop-
erties up to a certain level j ≤ J−1. In the classical domain, the ﬁlters of a non-stationary
biorthogonal exponential wavelet ﬁlterbank with exponent (cid:126)α = (α1, ..., αT ) (as described
in [23]) do not contain roots of opposite sign nor the zero root at level j, as long as there
are no distinct α, α(cid:48) in (cid:126)α that satisfy 2j(α − α(cid:48)) = i(2k + 1)π, for some j ≤ J − 1 and
k ∈ Z. Otherwise, a multilevel representation is only possible up to a ﬁnite level J − 1,
when this condition ceases to be fulﬁlled. This result becomes particularly relevant when
considering e-spline graph wavelet ﬁlterbanks of higher order. For instance, opposing

20

roots occur at j = 0 for the case e−iα = −eiα, at α = π/2, 3π/2, and we cannot cre-
ate ﬁlterbanks for these parameters. The discussed approach gives rise to the following
ﬁlterbank:

Theorem 3.4. Given the undirected, and connected circulant graph G = (V, E) of dimen-
sion N , with adjacency matrix A and degree d per node, we deﬁne the ‘complementary’
graph e-spline wavelet transform (CGESWT) via the set of analysis ﬁlters:

(cid:19)k

(cid:18)

1
2k

T(cid:89)
(cid:18)

n=1

βnIN +

A
d

(cid:19)k

HLP(cid:126)α,an

(∗)
= C ¯HLP(cid:126)α = C

T(cid:89)

HHP(cid:126)α,an =

1
2k

βnIN − A
d

(13)

(14)

(15)

(16)

and the set of synthesis ﬁlters:

n=1

HLP(cid:126)α,syn = c1HHP(cid:126)α,an ◦ IHP
HHP(cid:126)α,syn = c2HLP(cid:126)α,an ◦ ILP

where HLP(cid:126)α,an is the solution to the system from eq. (12) for (cid:126)α under speciﬁed con-
straints, with coeﬃcient matrix C arising from the relation HLP(cid:126)α,an ¯H−1
where appli-
cable (see Cor. 3.3). Hereby, ci, i ∈ {1, 2} are normalization coeﬃcients, and ILP/HP
are circulant indicator matrices with ﬁrst row of the form [1 − 1 1 − 1 ...].

LP(cid:126)α

4. Graph Products and Approximations: A Multidimensional Extension

In order to facilitate a generalization of our developed framework to arbitrary graphs,
we require a means to compute circulant graph approximations to existing structures in
a given network.
We have previously resorted to employing an adjacency matrix approximation scheme
([33],[16]), which determines the nearest circulant graph approximation ˜G to the given
||AP−
graph G with adjacency matrix A ∈ RN×N by minimizing the error norm min ˜A∈CN
˜A||F over the space CN of all N × N circulant matrices. If G is sparse or a posteriori
sparsiﬁed by removing edges of small weight, the approximation can be subjected to
a prior node relabelling P based on the RCM-algorithm [34] in order to minimize the
bandwidth of A. This facilitates a restructuring such that AP is (locally) closer to circu-
lant (sub-)structures and hence reduces the number of complementary edges in ˜A. The
closed-form solution is therefore obtained as

N−1(cid:88)

i=0

˜A =

(cid:104)AP , Πi(cid:105)F Πi,

1
N

for circulant permutation matrix Π with ﬁrst row [0 1 0...], and the graph signals residing
on G can then be analyzed with respect to ˜G. For an arbitrary graph G featuring
communities, we propose to perform graph partitioning (e.g. the normalized graph cut
[35]) and compute the nearest circulant structures to the arising subgraphs {Gi}i, so

21

as to ultimately conduct wavelet analysis on the latter with respect to the partitioned
subgraph signals {xi}i. Fig. 5 shows the resulting graph approximations and multiscale
representation via the HGSWT (at k = 1, no reconnection) for a data-driven graph with
weights

wi,j = e

− d(xi,xj )2

σ2

,

d(x, y) = |x − y|, i, j = 0, ..., N − 1

with σ as 10% of the total range of d(x, y), and random graph signal x, prepared using
[36]. The obtained representation is highly sparse as a consequence of the breadth-ﬁrst
traversal of the RCM algorithm, whereby xP has reduced total variation ||xP||T V [16],
and simultaneously AP (and by extension ˜A) is of minimum bandwidth.

Figure 5: Original G (N = 64) after thresholding of weights (top left), after RCM rela-
belling (top middle), multiscale HGSWT representation (at k = 1) of x (in magnitude)
on ˜G for 3 levels (right), signal x before/after relabelling (bottom).

As part of a more generalized motivation which facilitates the multi-(and lower-)dimensional
processing and representation of signals on graphs, we wish to explore alternative ap-
proximation schemes for circulant graphs, and identify graph product approximations as
a promising venue. In particular, given an arbitrary undirected graph, we consider its
approximation as the graph product of circulant graphs.
Graph products [37] have been studied and applied in a variety of contexts for purposes
of i.a. modelling realistic networks, and/or rendering matrix operations computionally
eﬃcient ([38], [39], [40]). Their relevance for GSP was ﬁrst discussed in [41] as a means
of modelling and representation of complex data as graph signals deﬁned on product
graphs, with the potential of promoting a more eﬃcient implementation of graph opera-
tions, such as graph ﬁltering. Our motivation for considering graph products is twofold:
(1) we require a scheme which can decompose arbitrary graphs into circulant graphs, so
as to facilitate the processing of graph signals with respect to the circulant approxima-
tions, and (2) we wish to conduct operations in lower dimensional settings to increase
eﬃciency.

22

01020304050607000.10.20.30.40.50.60.70.80.91Graph Signal before Relabelling01020304050607000.51Graph Signal after RelabellingNode Label  0.10.20.30.40.50.60.70.84.1. Graph Products of Circulants

The product (cid:5) of two graphs G1 = (V (G1), E(G1)) and G2(V (G2), E(G2)), also re-
ferred to as factors, with respective adjacency matrices A1 ∈ RN1×N1 and A2 ∈ RN2×N2,
is formed by letting the Cartesian product V (G) = V (G1)×V (G2) denote the new vertex
set of the resulting graph G, and deﬁning the new edge relations E(G) according to the
characteristic adjacency rules of the product operation, resulting in adjacency matrix
A(cid:5) ∈ RN1N2×N1N2. We identify four main graph products of interest:

• the Kronecker product G1 ⊗ G2: A⊗ = A1 ⊗ A2
• the Cartesian product G1 × G2: A× = A1 × A2 = A1 ⊗ IN2 + IN1 ⊗ A2
• the Strong product G1 (cid:2) G2: A(cid:2) = A1 (cid:2) A2 = A1 ⊗ A2 + A1 ⊗ IN2 + IN1 ⊗ A2
• the Lexicographic product G1[G2]: A[

] = A1[A2] = A1 ⊗ JN2 + IN1 ⊗ A2

.

where JN2 = 1N2 1T
In particular, we note that the lexicographic product can be
N2
regarded as a special case of the Cartesian product, yet contrary to the others, it is
not commutative for unlabelled graphs [37]. In addition, the adjacency matrices A(cid:5) for
the ﬁrst three products possess the same eigenbasis V = V1 ⊗ V2, for decompositions
2 , and eigenvalues of the form Γ(cid:5) = Γ1 (cid:5) Γ2 ([37]).
A1 = V1Γ1V−1

and A2 = V2Γ2V−1

1

Graph products have been employed to model realistic networks, due to their ability
to capture present regularities such as patterns and recursive community growth [39],
and can thus provide suitable approximations to networks with inherent substructures,
such as social networks consisting of similarly structured communities or time-evolving
sensor networks [41]. For our ensuing analysis, we consider a scheme for arbitrary graphs
which imposes the desired constraint of circularity on the individual factors 5.

4.1.1. The Kronecker product approximation

Given an arbitrary graph G with adjacency matrix ˜A, we resort to a result from
matrix theory [42] which facilitates the approximate Kronecker product decomposition
˜A− A1 ⊗ A2 into circulant (adjacency) matrices Ai of suitably chosen dimension Ni, by
solving the convex optimization problem

min
1 vec(A1)=0,CT

CT

2 vec(A2)=0

||A − A1 ⊗ A2||F

subject to linear constraints in the form of structured, rectangular matrices Ci with en-
tries {0, 1,−1}, which impose circularity on Ai via column-stacking operator vec. It can
be shown that closed-form solutions vec(Ai), i = 1, 2 are obtained by solving a reduced
unconstrained problem, after expressing the above as a rank-1 approximation problem
(see [42] for details). In addition, we may also impose symmetry and bandedness ([42],
[40]).

5On a related note, [38] identiﬁes Kronecker product approximation as a means to facilitate eﬃciency
for large structured least-squares problems in image restoration, which coincidentally marks an area
where circulant approximations are used extensively.
23

4.1.2. Exact graph products

The general graph product of circulants gives rise to block-circulant structures (or

sums thereof), and an example can be seen in Fig. 6.

×

=

Figure 6: Graph Cartesian Product of two unweighted circulant graphs

(cid:19)

(cid:18)

(cid:19)

(cid:18)
∪(cid:98) N2−1

There exist a subset of circulant graphs which can be represented as the graph products
of circulant factors; while these cases are marginal, they similarly motivate decomposi-
tions for lower-dimensional processing.
Circulant graphs are not generally closed under graph products, with the exception of
the lexicographic product [43]. In particular, for two circulant graphs G1 = CN1,S1 and
G2 = CN2,S2 of respective dimensions N1 and N2 and with generating sets S1 and S2,
the product G1[G2] is isomorphic to the circulant graph CN1N2,S with generating set
∪ N1S2 [43]. Hereby, CN1N2,S is connected
S =
with 1 ∈ S only if G1 is connected with 1 ∈ S1. The adjacency matrix A[
] is not circu-
lant, but its isomorphism ˜A[
]PT is, whereby permutation matrix P performs
the relabelling {0, ..., N1N2 − 1} → {0 : N2 : N1N2 − 1, 1 : N2 : N1N2 − 1, ..., N2 − 1 : N2 :
N1N2 − 1} such that each product node (g1,j, g2,k) ∈ V (G) is labelled as g1,j + N1g2,k,
for gi,j ∈ V (Gi).
Special cases of other graph products that are circulant with circulant factors are dis-
cussed in [44].

tN1 + S1

∪

2 (cid:99)
∪(cid:98) N2
t=1 tN1 − S1

(cid:99)

2
t=0

] = PA[

4.2. Multi-dimensional Wavelet Analysis on Product Graphs

In the following, we explore how the theory on circulant graph wavelet analysis can be
extended to product graphs. Hereby, we operate under the assumption that the decom-
position (and decomposition type) of an arbitrary graph into circulants is either known
(exact or approximate), or unknown, in which case we can always resort to a Kronecker
product approximation. Before we can proceed, we need to deﬁne the graph Laplacian of
product graphs L(cid:5) as a relevant high-pass ﬁlter; its interpretation as an extension of the
circulant graph Laplacian high-pass ﬁlter to higher dimensions, with associated property
preservations, will be revisited in Sect 4.3. We note that the formation of L(cid:5) is not a

24

reﬂection of the adjacency matrix relations, except in the case of the Cartesian product
([45], [46]):

• the Kronecker product: L⊗ = D1 ⊗ D2 − A1 ⊗ A2 = L1 ⊗ D2 + D1 ⊗ L2 − L1 ⊗ L2
• the Cartesian product: L× = D1 × D2 − A1 × A2 = L1 ⊗ IN2 + IN1 ⊗ L2
• the Strong product: L(cid:2) = D1 (cid:2) D2 − A1 (cid:2) A2 = L1 ⊗ D2 + D1 ⊗ L2 − L1 ⊗ L2 +

L1 ⊗ IN2 + IN1 ⊗ L2

• the Lexicographic product: L[

(N2IN2 − JN2)

] = D1[D2]− A1[A2] = IN1 ⊗ L2 + L1 ⊗ JN2 + D1 ⊗

i

i=1|{ei ⊗ u2,j}i=N1,j=N2

i=1,j=2

For connected, regular graph factors Gi, equivalent relations between eigenbases U of
L(cid:5) = UΛ(cid:5)UH and Ui of Li = UiΛiU−1
as for the adjacency matrices hold, with U =
U1 ⊗ U2 and Λ(cid:5) = D(cid:5) − Γ(cid:5) [45]. These relations are further preserved for the Cartesian
product when the Gi are generic, while a nearer characterization for the remaining cases
is still subject to investigation ([46], [45]). The eigenvectors of L[
] =
[{u1,i ⊗ 1N2}N1
], when G1 is connected [46].
Therefore, under the ﬁrst three products, the special case of a circulant graph, for which
U = V can be represented as the 2D DFT matrix, reveals that each graph Laplacian
eigenvector uj of L(cid:5) is the Kronecker product of the graph Laplacian eigenvectors of its
factor graphs. This insight motivates the following deﬁnition for GSP:
Deﬁnition 4.1. Any graph signal x ∈ RN , with N = N1N2, can be decomposed as
s,2}, whereby vecr{} indicates the row-stacking
s,2 has rank k with xs,i ∈ RNi. For x residing
on the vertices of an arbitrary undirected graph G, which admits the graph product
decomposition of type (cid:5), such that G(cid:5) = G1 (cid:5) G2 and |V (Gi)| = Ni, we can redeﬁne and
process x as the graph signal tensors xs,i on Gi.

x =(cid:80)k
s=1 xs,1 ⊗ xs,2 = vecr{(cid:80)k
operation, or, equivalently, (cid:80)k

s=1 xs,1xT
s=1 xs,1xT

] are given by U[

While x does not generally lie in the graph Laplacian eigenspace of the underlying graph,
and alternative decompositions are possible, we adopt the above perspective as a promis-
ing interpretation of component-wise processing of graph signals deﬁned on product
graphs. We inspect the case x = x1 ⊗ x2 (for rank k = 1) more closely in Sect. 4.3, as
it facilitates concrete claims on the smoothness and sparsity relations between a signal
and its tensor components on a graph.

4.2.1. Separable vs Non-separable Wavelet Analysis
Let a graph signal x reside on the vertices of an arbitrary, undirected graph G with
graph product decomposition G(cid:5) = G1 (cid:5) G2, which can be exact or approximate, such
that the factors Gi are circulant with adjacency matrices Ai ∈ RNi×Ni, i = 1, 2 and con-
nected with s = 1 ∈ Si, i = 1, 2. We propose a non-separable and a separable wavelet
transform on G(cid:5): the former operates on the product graph directly, while the latter
operates on each factor graph independently, thereby omitting the inter-connections be-
tween the two factors arising through the graph product operation.

25

We deﬁne the non-separable graph wavelet transform on G(cid:5) with adjacency matrix A(cid:5)
as

(cid:18)

(cid:19)k

(cid:18)

(cid:19)k

H(cid:5) = (IN + K)

1

2k+1

IN +

A(cid:5)
d

+ (IN − K)

1

2k+1

IN − A(cid:5)
d

, k ∈ N.

This is veriﬁably invertible for any downsampling pattern K as long as at least one low-
pass component is retained, as a generalization of the circulant HGSWT construction in
Thm 3.1. Hereby, the fundamental properties which ensure this extension are that G(cid:5)
d is such that |γ(cid:5),i| ≤ γ(cid:5),max = 1,
is regular and connected [47], i.e. the spectrum of A(cid:5)
with A(cid:5)
d 1N1N2 = 1N1N2 and γ(cid:5),max of multiplicity 1. It is known that G(cid:5) is connected
under the Cartesian product for connected Gi and under the Kronecker product, if in
addition at least one Gi is non-bipartite [48]. Wavelet constructions with exponential
degree parameters `a la Thm 3.2 can be similarly extended to product graphs under
equivalent restrictions for parameters |β(cid:5),n| = |γ(cid:5),i|. While the graph product G(cid:5) of
circulants is not LSI per se, it is invariant with respect to shifts on its factors, i.e. matrix
P⊗ = PN1 ⊗ PN2, for circulant permutation matrices PNi, commutes with ﬁlters on
A(cid:5). Therefore, we can conduct multiresolution analysis with respect to product graphs
by performing downsampling and graph coarsening operations on the individual factors,
with one level corresponding to operating on either Gi. For instance, given downsampling
matrix K2 for G2 with respect to s = 1 ∈ S2 in Fig. 6, we may apply the downsampling
pattern K = IN1 ⊗ K2 on G(cid:5) and redeﬁne the sampled low-pass output on G1 (cid:5) ˜G2,
where ˜G2 corresponds to the coarsened version of G2 (see Fig. 7).

→

=

×

Figure 7: Graph Downsampling and Coarsening of G(cid:5) in Fig 6 on G2 w.r.t. s = 1 ∈ S2
with coarsened ˜G2.

Furthermore, we propose the separable graph wavelet transform on G(cid:5) as an alternative
construction, which is applied with respect to the individual graph factors. We denote by
Wi the graph (e-)spline wavelet transform constructed in the vertex domain of circulant
graph factor Gi

with downsampling matrices Ψ↓2, Φ↓2 and HLP(cid:126)α/HP(cid:126)α as deﬁned in Sect. 3. Then (W1⊗
W2) represents the separable transform to process x with respect to G1 and G2, which

(cid:20)Ψ↓2HLP(cid:126)α

Φ↓2HHP(cid:126)α

(cid:21)

,

Wi =

26

entails the analysis of N1 graph signal partitions {x((0 : N2 − 1) + (t − 1) ∗ N2)}N1
on G2, and subsequent N2 partitions {w(t : N2 : N1N2 − 1)}N2−1
t=1
on G1, with w =
(IN1 ⊗ W2)x. For partition ¯xi ∈ RNi on Gi, let ¯wi = PNiWi ¯xi be the graph wavelet
domain representation on the same graph, subject to the (node relabelling) permutation
PNi; hereby, the respective low-and high-pass values of ¯wi can be subsequently assigned
to suitable coarsened versions of Gi. Further, the recombination ¯w = ¯w1 ⊗ ¯w2 gives rise
to the graph signal ¯w on G. For a multiscale representation, the proposed scheme can be
generalized to accommodate iterations on the low-pass branch, by deﬁning the multilevel
transform

t=0

(cid:35)

(cid:34)

Wj
i

W(j)

i =

and iterative permutation matrix

. . . W0
i

(cid:35)

INi− Ni

2j

(cid:34)

Pj
i

INi− Ni

2j

P(j)
Ni

= P0

i . . .

2

(W(J−1)

⊗ W(J−1)

)x,

1

2

1

N2

N1

⊗ W(J−1)

)x = P(J−1)

N1N2

1 ⊗ ˜W−1

w = (P(J−1)

)(W(J−1)
1 ⊗W(j)

2 ) represents the introduced graph product transform
2 ), depending on the

at levels j ≤ J − 1, giving
⊗ P(J−1)
whereby ( ˜W1⊗ ˜W2) = (W(j)
at level j. The transform is invertible with inverse ( ˜W−1
invertibility of its circulant sub-wavelet transforms Wj
i .
Traditionally, the application of a 2D discrete wavelet transform on an (image) matrix
2 , whose row-vectorized form is given by (W1 ⊗
X can be expressed as w2D = W1XWT
W2)x. It becomes evident that this constitutes an analogy to our proposed transform,
whereby in the traditional domain we have W2 = W1, while in the graph domain the
Wi’s generally diﬀer, as they are not deﬁned on the same graph. This elucidates that
our derived scheme can be regarded as the equivalent of operating on a graph signal (or
vectorized image) with respect to conﬁned direction (rows and columns), which are in
this case dictated by the factors in the chosen graph decomposition. In contrast to a
graph wavelet analysis of x on G(cid:5) via a suitable transform, we can therefore regard the
analysis of partitions ¯xi on Gi and subsequent reassignment to the vertices of G(cid:5) as a
two-dimensional extension of the former.

4.3. Smoothness and Sparsity on Product Graphs
For the remainder of this discussion, following Def. 4.1 we are primarily interested
in the analysis of graph signals which admit the rank-1 decomposition x = x1 ⊗ x2 into
compressible signal tensors xi for a maximally sparse representation.
We begin by investigating how the smoothness of graph signal x with respect to G(cid:5)
is related to the smoothness of the subgraph signals xi with respect to Gi; hereby,
we resort to the graph Laplacian quadratic form S2(x) = xT Lx [1]. We denote the
individual smoothness measures as S(cid:5) = xT Lx for G(cid:5), and Si = xT
i Lixi for factors Gi,
and assuming degree regularity, simplify Di = diINi, which gives rise to the following
relations:

• S⊗ = d2S1||x2||2

2 + d1S2||x1||2

2 − S1S2
27

2 + S2||x1||2

2

• S× = S1||x2||2
• S(cid:2) = (1 + d2)S1||x2||2
• S[
2S2 + S1c2

with constant c2 =(cid:80)N2−1

] = ||x1||2

2 + (1 + d1)S2||x1||2
2(N2||x2||2
2 + d1||x1||2

2 − S1S2
2 − c2
2),

i=0 x2(i). The total smoothness S(cid:5) is composed of the weighted
sub-measures Si, whose individual contribution is scaled by parameters pertaining to
the corresponding subgraph signal energy and node degree of the opposing factor graph.
One easily deduces that if for a chosen decomposition G(cid:5) = G1 (cid:5) G2 with factors Gi, the
measures Si are small, i.e. the sub-signal tensors xi are smooth with respect to factors
Gi, then x is also relatively smooth on G(cid:5) with small S(cid:5), subject to a scaling.
Furthermore, we consider component Lx and analyze its sparsity ||Lx||0, following the
interpretation of L as a high-pass ﬁlter:

• L⊗x = (L1x1) ⊗ d2x2 + d1x1 ⊗ (L2x2) − (L1x1) ⊗ (L2x2)
• L×x = (L1x1) ⊗ x2 + x1 ⊗ (L2x2)
• L(cid:2)x = (L1x1)⊗d2x2 +d1x1⊗(L2x2)−(L1x1)⊗(L2x2)+(L1x1)⊗x2 +x1⊗(L2x2)
• L[

]x = x1 ⊗ (L2x2) + (L1x1) ⊗ c21N2 + d1x1 ⊗ (N2x2 − c21N2)

It becomes evident that for constant xi (and hence x) such that Lixi = 0Ni, we have
Lx = 0, preserving the nullspace. When xi are linear polynomials and Gi banded cir-
culant graphs, Lixi are sparse, which is not necessarily true for L(cid:5)x under any product
operation.
Replacing Di by e-degree matrix ˜Di,αk for exponential parameter αk, gives rise to equiv-
alent relations for ˜Li,αk . Hence, for periodic complex exponential graph signals xi pa-
, k ∈ [0 Ni − 1], we obtain Lα1(cid:5)α2 x = 0, with exception of
rameterised by αk = 2πk
Ni
the lexicographic product, for which this holds only if x2 is an all-constant vector, as
previously evidenced by its eigenspace property.
Overall, this demonstrates that the vanishing moment properties of circulant (e-)graph
Laplacians are to some extent preserved within the graph product, yet sparsity is re-
duced as a result of the newly arising interconnections between the factors. Due to the
fact that the above relations cannot be generalized to powers of the graph Laplacian
matrix, comparable property preservations are not extended to higher order (exponen-
tial) polynomial graph signals, which have a sparse representation with respect to Lk
i .
This suggests that by performing a separable signal (wavelet) analysis with respect to
inherent circulant substructures, we gain a sparser representation as measured via the
graph Laplacian and its powers.

In light of this, we compare the sparsity of representation attained via the proposed
graph wavelet transforms, and discover that the separable approach, apart from preserv-
ing higher-order annihilation properties, can induce more sparsity. Hereby, it should
be noted that we consider two levels of the 1-D graph wavelet transform (or alter-
natively, downsampling on both factors, with respect to K = IN1 ⊗ K2 followed by
K = K1 ⊗ IN2/2), as comparable to one level of the 2-D transform, yet similarly as in
the traditional domain, there is no direct equivalence between the two.

28

Example 1: Given graph signal x = x1 ⊗ x2 on G = G1 ⊗ G2, where Gi are circu-
lant and banded of bandwidth Mi and xi ∈ RNi are linear polynomial, let Wi ∈ RNi×Ni
and W⊗ ∈ RN1N2×N1N2 represent ﬁrst-order graph-spline wavelet transforms on fac-
tors Gi and G respectively. Hereby, we downsample w.r.t. s = 1 ∈ Si on each Gi
and reconnect nodes such that generating sets Si are preserved. Hence, separable rep-
4 N1N2 − 1
resentation w = w1 ⊗ w2 has K = 3
2 (2M1M2 + M1N2 + M2N1) zero entries,
whereas non-separable w⊗ = W⊗x has a total of K⊗ = K⊗,1 + K⊗,2 zeros, with K⊗,1 =
2 N1N2−(M1N2 +M2N1−2M2M1) and K⊗,2 = 1
2 N1M2 +M1N2−6M1M2) ze-
4 N1N2−( 3
1
ros at levels 1 and 2 respectively. We have K > K⊗ for 4Mi < Ni, and K > K⊗ = K⊗,1
with K⊗,2 = 0 for Ni/4 ≤ Mi < Ni/2, which implies that the separable approach induces
a sparser representation at any bandwidth Mi < Ni/2. Note that the sparsity of w(cid:5) is
the same under any of the ﬁrst three graph products.

Example 2: For circulant lexicographic product graph G = CN1N2,S and decompo-
sition G = G1[G2], it can be deduced from the above relations, that we can gain sparsity
by conducting the 2-D graph wavelet analysis of xi on Gi as opposed to the 1-D analysis
of x on G, for any choice of compressible xi as long as they do not lie in the eigenspace
of the graph Laplacian. Hereby, the product-related relabelling Px = x2 ⊗ x1, which
renders a circulant matrix ˜A[
]PT , corresponds to a simple stacking of columns
instead of rows, thus preserving the tensor product, and associated smoothness proper-
ties with respect to the subgraphs.

] = PA[

5. Conclusion

In this paper, we have introduced novel families of wavelets and associated ﬁlter-
banks on circulant graphs with vanishing moment properties, which reveal (e-)spline-like
functions on graphs, and promote sparse multiscale representations. Moreover, we have
discussed generalizations to arbitrary graphs in the form of a multidimensional wavelet
analysis scheme based on graph product decomposition, facilitating a sparsity-promoting
generalization with the advantage of lower-dimensional processing. In our future work,
we wish to further explore the sets of graph signals which can be annihilated with existing
and/or evolved graph wavelets as well as reﬁne its extensions and relevance for arbitrary
graphs.

Appendix A.

Appendix A.1.

Proof of Theorem 3.1. It is self-evident that since the high-pass ﬁlter of eq.
(4) is a
power k of the graph Laplacian matrix, whose associated polynomial representation has
2 vanishing moments, the annihilation property is generalized to higher order of 2k
vanishing moments; thus we proceed to demonstrate invertibility of the ﬁlterbank. The
core of the proof follows a similar line of argumentation as the one provided in [19] for
k = 1 with generalizations pertaining to the parameter k. For completeness we present

29

the entire proof here.
Applying the binomial theorem, we observe that

(cid:18)

(cid:19)k

1
2k

IN ± A
d

=

1
2k

(cid:88)

j∈Z

1
2k

(cid:18) k

(cid:19)(cid:18) A

(cid:19)2j

2j

d

+ K

(±1)j

(cid:18)k
(cid:18) k

j

(cid:19)(cid:18) A
(cid:19)(cid:18) A

d

k(cid:88)

j=0

(cid:88)

j∈Z

2j + 1

d

(cid:19)j
(cid:19)2j+1

and so we need to show that the nullspace of

is empty, where K is the diagonal matrix with entries K(i, i) = 1 if node i retains the
low- and K(i, i) = −1 if it retains the high-pass component. Assume the contrary and
deﬁne the vector z = Vr to lie in the nullspace, given eigendecomposition A
d = VΓVH ,
which yields the following simpliﬁcations:

(cid:88)

j∈Z

1
2k

(cid:19)2j

(cid:18) k
(cid:19)(cid:18) A
(cid:18) k
(cid:19)
(cid:88)

2j

d

j∈Z

2j

+ K

(cid:88)

j∈Z

(cid:18) k
(cid:88)

(cid:19)(cid:18) A
(cid:18) k

d

2j + 1

j∈Z

2j + 1

(cid:19)2j+1 Vr = 0N
(cid:19)

Γ2j+1r||2

2

||V

Γ2jr||2

2 = ||KV

(A.1)

(A.2)

where eq. (A.2) is the result of a rearrangement of terms in eq. (A.1) and subsequent ap-
plication of the l2-vector norm on both sides of the equality. After further simpliﬁcation,
we obtain

N−1(cid:88)

i=0

r(i)2



(cid:88)

j∈Z

(cid:18) k

(cid:19)

2j

2

γ2j
i

−

(cid:88)

j∈Z

(cid:18) k

(cid:19)

2j + 1

γ2j+1
i

2 (a)

=

N−1(cid:88)

i=0

r(i)2(A2

i − B2

i ) = 0,

(A.3)
whereby in (a), we let Ai and Bi represent the sum of even and odd terms in the binomial
series respectively. For the nullspace to be empty, we need to show that r = 0N , which
i − B2
i ) (cid:54)= 0 and is strictly positive or negative ∀i. By utilizing the fact
follows if (A2
that for a general binomial series (x + a)n, with terms Ai and Bi, the following holds:
i − B2
(x2 − a2)n = A2
N−1(cid:88)

N−1(cid:88)

i , we obtain

r(i)2(A2

i − B2

i ) =

r(i)2(1 − γ2

i )k = 0.

i=0

i=0

The eigenvalues are given by |γi| ≤ 1, via the Gershgorin circle theorem, where γi > −1
unless the graph is bipartite [2]; thus we have that |r(i)| > 0 only if |γi| = 1 and r(i) = 0
otherwise. To examine these special cases, let the corresponding eigenvectors for γ1 = −1
and γ2 = 1 be given by ˜V and r(0)√
1N + ˜V˜r, and sub-
stitute into eq. (A.1). We consider the case of a non-bipartite graph ﬁrst:

1N respectively, such that z = r(0)√

N

N

(cid:88)

j∈Z

(cid:18) k

(cid:19)

2j

r(0)√
N

(cid:18) k

(cid:88)

(cid:19)

1N

2j + 1

 = 0N

1N + K

j∈Z
30

j∈Z(cid:0) k

2j

(cid:1) =(cid:80)

Noting that(cid:80)
(cid:20) vB

(cid:21)

r(0) = 0.
In the bipartite case, due to spectral folding, if γ is an eigenvalue of A with eigenvector

, so is −γ with eigenvector

, where B is the set of the node indices in one
vBC
bipartite set [2]. Then γ1 = 1 and γ2 = −1 each have multiplicity one with respective
eigenvectors 1N and

, where |B| = |BC| = N/2, giving

2j+1

(cid:1), we need at least one entry K(i, i) = 1, such that
j∈Z(cid:0) k
(cid:21)
(cid:20) vB−vBC
(cid:18) k
(cid:88)
(cid:123)(cid:122)
(cid:18) k
(cid:88)
(cid:123)(cid:122)
d v = γv, in(cid:0) A


(cid:19)
(cid:20) 1B−1BC
(cid:125)
(cid:21)
(cid:1)j(cid:20) 1B−1BC

(cid:20) 1B−1BC


(cid:125)

IN − K

= (−1)j

, leading

IN + K

= 0N .

(cid:19)

(cid:19)

2j + 1

2j + 1

(A.4)

(cid:21)

IN

1N

(cid:21)

j∈Z

j∈Z

IN

T2

T1

d

(cid:21)
(cid:20) 1B−1BC
(cid:88)
(cid:19)
(cid:18) k
(cid:124)
(cid:88)
(cid:18) k
(cid:124)

j∈Z

j∈Z

2j

2j

r(0)√
N

+ r(1)

Hereby we have used the property A

to an alternating pattern on the RHS when j is odd.
In particular, for any choice of downsampling pattern K, the terms T1 and T2 in the ﬁrst
and second summands in eq. (A.4), will respectively have zero entries along the main
diagonal, which lie in complementary index sets. Therefore, as long as at least one node
retains the low-pass component K(i, i) = 1, it follows that r(0) = 0 and r(1) = 0, which
again implies z = 0, completing the proof.

Appendix A.2.
Proof of Theorem 3.2. We can rewrite the simpliﬁed ﬁlters

noting that the new indices incorporate multiplicities, as follows

HHP(cid:126)α = (−1)T k

HLP(cid:126)α =

i=0

(−1)i+T ksi

T k(cid:88)

i=0

T k(cid:88)

(−1)isi

i=0

(cid:18) A

(cid:19)i

d

whereby the coeﬃcients si are the elementary symmetric polynomials en(β1, . . . , βT k) in
βn:

s0 = eT k(β1, . . . , βT k) = β1β2 . . . βT k

31

HLP(cid:126)α =

HHP(cid:126)α =

n=1

(cid:18)
(cid:18)

T k(cid:89)
T k(cid:89)
T k(cid:88)

n=1

(cid:19)
(cid:19)

βnIN +

A
d

βnIN − A
d

(cid:19)i
(cid:18) A
(cid:19)i
(cid:18) A

d

si

=

d

(A.5)

(A.6)

, such that

(cid:88)

d

j∈Z

s2j

j∈Z

||V

(cid:18) A
(cid:88)

(cid:88)
T k(cid:89)

j∈Z

N−1(cid:88)
N−1(cid:88)

i=0

(cid:18) A
(cid:88)

d

j∈Z

N−1(cid:88)

sT k−1 = e1(β1, . . . , βT k) = β1 + β2 + ··· + βT k

sk = ...

We need to prove that the ﬁlterbank

sT k = e0(β1, . . . , βT k) = 1.

(cid:18) A

(cid:19)2j

s2j

d

(cid:88)

j∈Z

(cid:88)

j∈Z

+ K

s2j+1

(cid:18) A

(cid:19)2j+1

d

with diagonal downsampling matrix K is invertible by showing that its nullspace is empty.
Similarly, as in A.1, we assume the contrary and let z = Vr lie in its nullspace, whereby

VΓjVH =(cid:0) A

(cid:1)j

d

(cid:19)2j

(cid:88)

+ K

s2j+1

j∈Z
2 = ||KV

s2jΓ2jr||2

(cid:19)2j+1 Vr = 0N

s2j+1Γ2j+1r||2

2

(A.7)

(A.8)

where (A.8) results from rearranging (A.7) and taking norms of both sides, and gives
rise to

r(i)2

s2jγ2j
i

−

s2j+1γ2j+1

i

(cid:88)

j∈Z

2
T k(cid:89)

2 = 0, and hence
T(cid:89)

n − γ2
(β2

i )k = 0.

r(i)2

(βn − γi)

(βn + γi) =

r(i)2

(A.9)

i=0

n=1

n=1

i=0

n=1

n=1(β2

n − γ2

i )k, for spectrum γ = {γi}N−1

function f (γi) =(cid:81)T

Given parameters βn such that |βn| ≤ 1, n = 1, ..., T , and with eigenvalues satisfying
|γi| ≤ 1, i = 0, ..., N − 1 by the Perron-Frobenius Theorem [31], we assume |βn| (cid:54)= |γi|.
Thus, all summands in (A.9) need to be of the same sign to guarantee r = 0N . As the
i=0 , does not have exclusively
positive or negative range for odd k, we require k ∈ 2N. Furthermore, all terms remain
of the same sign at any k as long as parameters βn and T are suitably chosen. This is a
suﬃcient condition for guaranteeing invertibility at any downsampling pattern.
If, for some n, we have |βn| = |γi| with i ∈ [0 N − 1], giving |r(i)| ≥ 0, we can show
that for certain downsampling patterns, the transform continues to be invertible.
In
particular, this is the case when parameter α in βn =
N for some
k ∈ [0 N − 1], i.e. HHPα annihilates the k-th (eigen-)vector in the DFT matrix. For
of the non-normalized symmetric and circulant
d1], we thus have ˜dα = λk for some
adjacency matrix A with ﬁrst row [0 d1
k ∈ [0 N − 1]. We proceed to show that the ﬁlterbank at hand is invertible for such
α as long as downsampling is conducted with respect to s = 1 ∈ S, and more generally,

eigenvalues λk = (cid:80)M

˜dα
d is such that α = 2πk

(cid:16) 2πjk

j=1 2dj cos

d2 . . . d2

(cid:17)

N

32

of γi), and by extension,(cid:80)P

when at least mi suitably chosen low-pass components are retained (for multiplicity mi
i=1 mi components for P distinct βn that satisfy |βn| = |γi|.
Assuming wlog βn = γi, for P distinct eigenvalues (1 ≤ P < N ), each of multiplicity mi
with corresponding eigenvector(s) {vi,l}mi−1
, we consider, for the case of a non-bipartite
graph, the following nullspace representation

l=0

P(cid:88)

mn−1(cid:88)

n=1

l=0

z =

rn,lvn,l,

∀n, mn ≥ 1,

(cid:88)

j∈Z

P(cid:88)

mn−1(cid:88)

n=1

l=0

With(cid:0) A

d

(cid:1)k
(cid:88)

j∈Z

P(cid:88)

mn−1(cid:88)

n=1

l=0

whereby index n signiﬁes distinct eigenvalues (or βn) and rn,l are scalar coeﬃcients.

vi = γk

i vi, we obtain via substitution into (A.7)

s2j

rn,lβ2j

n vn,l + K

s2j+1

rn,lβ2j+1

n

vn,l = 0N .

If Ki,i = 1, i = 0, ..., N − 1, then

P(cid:88)

mn−1(cid:88)

T(cid:89)

(βq + βn)krn,lvn,l = 0N

n=1

l=0

q=1

and if ∀i, Ki,i = −1, i = 0, ..., N − 1, then

P(cid:88)

mn−1(cid:88)

T(cid:89)

(βq − βn)krn,lvn,l = 0N

l=0

whereby in the case of the latter we observe that (cid:81)T

n=1

q=1

site is the case, i.e. we need at least (cid:80)P

q=1(βq − βn)k is always zero since
βq = βn for q = n. Therefore, we need the number of low-pass components to be greater
than or equal to the sum of multiplicities mn for all P distinct eigenvalues and, in addi-
tion, their (node) locations D need to be suitably chosen to facilitate linearly independent
partitions vn,l(D) such that rn,l = 0. Note that for βn = −γi and −γi /∈ γ, the oppo-
n=1 mn suitably chosen high-pass components
to facilitate linear independence of partitions {vn,l(DC)}n,l. If both ±γi exist, similar
reasoning as for the following bipartite case applies.
For bipartite graphs, let mi denote the multiplicity of eigenvalue γi and −γi respectively
(due to symmetry of the spectrum [2]), and {vi,l}mi−1

(cid:35)(cid:41)mi−1

the corre-

and

(cid:40)(cid:34)
vB
i,l−vBC

l=0

i,l

l=0

sponding eigenvectors, resulting in a nullspace representation of the form:

(cid:32)

mn−1(cid:88)
P(cid:88)
mn−1(cid:88)

l=0

n=1

z =

P(cid:88)

n=1

l=0

(cid:88)

j∈Z

s2j

whose substitution into (A.7) yields

(cid:34)

(cid:35)(cid:33)

n,l

vB
n,l−vBC
P(cid:88)

rn,lvn,l + ˜rn,l

mn ≥ 1,

rn,lβ2j

n vn,l + K

s2j+1

(cid:88)

j∈Z

33

mn−1(cid:88)

rn,lβ2j+1

n

vn,l

n=1

l=0

(cid:34)

(cid:35)

(cid:88)

(cid:88)

P(cid:88)

mn−1(cid:88)

+

s2j

˜rn,lβ2j
n

vB
n,l−vBC

− K

s2j+1

n=1

j∈Z

j∈Z
Thus, for Ki,i = 1, i = 0, ..., N − 1, we obtain

l=0

n,l

P(cid:88)

mn−1(cid:88)

n=1

l=0

˜rn,lβ2j+1

n

(βq + βn)krn,lvn,l +

n=1

l=0

q=1

n=1

l=0

q=1

and for Ki,i = −1, i = 0, ..., N − 1

P(cid:88)

mn−1(cid:88)

T(cid:89)

P(cid:88)

mn−1(cid:88)

T(cid:89)

P(cid:88)

mn−1(cid:88)

T(cid:89)

(βq − βn)k ˜rn,l

(cid:34)

P(cid:88)

mn−1(cid:88)

T(cid:89)

(βq + βn)k ˜rn,l

(cid:34)

(cid:35)

= 0N .

(cid:34)
vB
n,l−vBC
(cid:35)

n,l

n,l

vB
n,l−vBC
(cid:35)

vB
n,l−vBC

n,l

= 0N

= 0N .

(βq − βn)krn,lvn,l +

n=1

l=0

q=1

n=1

l=0

q=1

(cid:35)

Hence, we require at least mn low-and at most N − mn high-pass components per
βn at suitably chosen locations D and DC such that the corresponding partitions of
{vn,l(D)}mn−1

(cid:80)P
and ˜rn,l = 0. In general, we need the number of retained low-pass components to be
n=1 mn ≤ N/2 and D such that the above partitions form linearly independent sets

(cid:40)(cid:34)
vB
n,l−vBC

are linearly independent, leading to rn,l = 0

(cid:41)mn−1

(DC)

and

l=0

l=0

n,l

for n = 1, ..., T .

l=0

Consider the relevant case, when we downsample by 2 w.r.t. s = 1 such that D = (0 :
2 : N − 1) (corresponding to D = B in the bipartite case) and |D| = |DC| = N/2. When
eigenbasis V is represented as the N × N -DFT matrix, the relation VD,0:N−1 = [ ˜V ˜V]
holds, where ˜V denotes the N/2 × N/2 DFT-matrix. Thus, the transform is invertible
for βn = γi, if corresponding eigenvalue(s) γi with multiplicity mi are suitably located
in the DFT-ordered spectrum γDF T = {γi}N−1
such that the associated eigenvectors
{vi,l}mi−1
remain linearly independent after downsampling, i.e. their pairwise column
positions (j, j(cid:48)) in VD,0:N−1 are not of the form (j, N/2 + j). Equivalently, the above can
be extended for the bipartite case when −γi exists, since we also have VDC ,0:N−1 = [ ˜V ˜V]
(cid:80)N−1
up to a normalization constant per column.
A special case occurs, when β = ˜d = 0; we need to show that K A

d z = 0N as long as
i = 0. The latter yields r(i) = 0, except when γi = 0. Since, however, the
d , we have r(0) (cid:54)= 0, thus the ﬁlterbank

eigenvector(s) for γi = 0 lie in the nullspace of A
is not invertible for any downsampling pattern, including the case when downsampling
is conducted with respect to s = 1.

i=0 r(i)2γ2

i=0

Appendix A.3.

Proof of Corollary 3.3. Consider the simplest case with T = 1 and one parameter β: we
need to show that the nullspace z of low-pass ﬁlter HLPα in

z = 0N

(A.10)

(cid:19)

(cid:18)

1
2

βIN +

A
d
34

is empty by contradiction. In a similar fashion as in previous proofs, we let z = Vr, with
A
d = VΓVH and obtain

N−1(cid:88)

i=0

||βVr + VΓr||2

2 = 0

N−1(cid:88)

i=0

r(i)2(β2 + 2βγi + γ2

i ) =

r(i)2(β + γi)2 = 0.

Hence, it follows from inspection that the low-pass ﬁlter is invertible unless β = −γi. If
−γi ∈ γ, similar reasoning as for the bipartite case applies. In the case of a bipartite
graph, where |β| = |γi| and γi,−γi of respective multiplicity mi exist, with eigenvectors

z =

r(l)vl + ˜r(l)

(cid:20) vB

l−vBC

l

(cid:21)(cid:19)

,

(cid:18)

mi−1(cid:88)

l=0

mi−1(cid:88)

we observe after substitution into eq. (A.10) that

mi−1(cid:88)

r(l)(βvl + γivl) +

˜r(l)

β

l=0

l=0

(cid:18)

(cid:20) vB

l−vBC

l

(cid:21)

− γi

(cid:20) vB

l−vBC

l

(cid:21)(cid:19)

= 0N .

Due to spectral folding, one eigenvector-set always cancels out for β = ±γi, so that we
cannot guarantee zero coeﬃcients, and hence invertibility. By extension, Hk
is invert-
ible, while Hk
for parameters
βn, under the above.

requires invertibility of each individual factor HLPαn

LP(cid:126)α

LPα

References

[1] D. I. Shuman, S. K. Narang, P. Frossard, A. Ortega, P. Vandergheynst, The emerging ﬁeld of signal
processing on graphs: Extending high-dimensional data analysis to networks and other irregular
domains, IEEE Signal Process. Mag. 30 (3) (2013) 83–98.

[2] F. R. K. Chung, Spectral Graph Theory, American Mathematical Society, 1997.
[3] A. Sandryhaila, J. M. F. Moura, Discrete signal processing on graphs: Frequency analysis, IEEE

Transactions on Signal Processing 62 (12) (2014) 3042–3054.

[4] R. Coifman, M. Maggioni, Diﬀusion wavelets, Applied and Computational Harmonic Analysis 21 (1)

(2006) 53–94.

[5] S. K. Narang, A. Ortega, Perfect reconstruction two-channel wavelet ﬁlter banks for graph struc-

tured data, Signal Processing, IEEE Transactions on 60 (6) (2012) 2786–2799.

[6] S. K. Narang, A. Ortega, Compact support biorthogonal wavelet ﬁlterbanks for arbitrary undirected
graphs, Signal Processing, IEEE Transactions on 61 (19) (2013) 4673–4685. doi:10.1109/TSP.2013.
2273197.

[7] D. K. Hammond, P. Vandergheynst, R. Gribonval, Wavelets on graphs via spectral graph theory,

Applied and Computational Harmonic Analysis 30 (2) (2011) 129 – 150.

[8] B. Ricaud, D. I. Shuman, P. Vandergheynst, On the sparsity of wavelet coeﬃcients for signals on
graphs, in: SPIE Optical Engineering+ Applications, International Society for Optics and Photon-
ics, 2013, pp. 88581L–88581L.

[9] B. Dong, Sparse representation on graphs by tight wavelet frames and applications, Preprint 2015.
[10] D. I. Shuman, M. J. Faraji, P. Vandergheynst, A multiscale pyramid transform for graph signals,

arXiv preprint arXiv:1308.4942.

[11] V. N. Ekambaram, G. C. Fanti, B. Ayazifar, K. Ramchandran, Circulant structures and graph
signal processing, in: IEEE International Conference on Image Processing, ICIP 2013, 2013, pp.
834–838. doi:10.1109/ICIP.2013.6738172.

35

[12] V. N. Ekambaram, G. Fanti, B. Ayazifar, K. Ramchandran, Critically-sampled perfect-
reconstruction spline-wavelet ﬁlterbanks for graph signals, in: IEEE Global Conference on Signal
and Information Processing, GlobalSIP 2013, 2013, pp. 475–478. doi:10.1109/GlobalSIP.2013.
6736918.

[13] M. Unser, Ten good reasons for using spline wavelets, in: Proc. SPIE vol. 3169, Wavelet Applications

in Signal and Image Processing V, 1997, pp. 422–431.

[14] M. Unser, T. Blu, Cardinal exponential splines: Part i—theory and ﬁltering algorithms, IEEE

Trans. Signal Process 53 (2005) 1425–1438.

[15] M. Unser, Splines: A perfect ﬁt for signal and image processing, Signal Processing Magazine, IEEE

16 (6) (1999) 22–38.

[16] M. S. Kotzagiannidis, P. L. Dragotti, Higher-order graph wavelets and sparsity on circulant graphs,
in: SPIE Optical Engineering+ Applications, Vol. 9597, International Society for Optics and Pho-
tonics, 2015, pp. 95971E–95971E–9. doi:10.1117/12.2192003.

[17] M. S. Kotzagiannidis, P. L. Dragotti, The graph fri-framework- spline wavelet theory and sampling
on circulant graphs, in: Acoustics, Speech and Signal Processing (ICASSP), 2016 IEEE Interna-
tional Conference on, 2016, to appear.

[18] D. Thanou, D. I. Shuman, P. Frossard, Parametric dictionary learning for graph signals, in: IEEE
Global Conference on Signal and Information Processing, GlobalSIP 2013, Austin, TX, USA, De-
cember 3-5, 2013, 2013, pp. 487–490. doi:10.1109/GlobalSIP.2013.6736921.

[19] V. Ekambaram, Graph structured data viewed through a fourier lens, Ph.D. thesis, EECS Depart-

ment, University of California, Berkeley (Dec 2013).

[20] F. Dorﬂer, F. Bullo, Kron reduction of graphs with applications to electrical networks, Circuits and

Systems I: Regular Papers, IEEE Transactions on 60 (1) (2013) 150–163.

[21] N. Sharon, Y. Shkolnisky, A class of laplacian multiwavelets bases for high-dimensional data, Ap-
plied and Computational Harmonic Analysis 38 (3) (2015) 420 – 451. doi:http://dx.doi.org/10.
1016/j.acha.2014.07.002.

[22] P. L. Dragotti, M. Vetterli, T. Blu, Sampling moments and reconstructing signals of ﬁnite rate
of innovation: Shannon meets strang-ﬁx, IEEE Trans. Signal Process. 55 (5) (2007) 1741–1757.
doi:10.1109/TSP.2006.890907.

[23] C. Vonesch, T. Blu, M. Unser, Generalized daubechies wavelet families, Signal Processing, IEEE

Transactions on 55 (9) (2007) 4415–4429. doi:10.1109/TSP.2007.896255.

[24] M. Vetterli, J. Kovacevic, V. K. Goyal, Fourier and Wavelet Signal Processing, 2014.

URL http://www.fourierandwavelets.org/

[25] M. Unser, Cardinal exponential splines: part ii - think analog, act digital, IEEE Transactions on

Signal Processing 53 (4) (2005) 1439–1449. doi:10.1109/TSP.2005.843699.

[26] M. Unser, T. Blu, Self-similarity: Part I—Splines and operators, IEEE Transactions on Signal

Processing 55 (4) (2007) 1352–1363.

[27] G. Micula, A variational approach to spline functions theory., Rendiconti del Seminario Matematico

61 (3) (2003) 209–227.
URL http://eudml.org/doc/127983

[28] I. Pesenson, Variational splines and paley–wiener spaces on combinatorial graphs, Constructive

Approximation 29 (1) (2008) 1–21. doi:10.1007/s00365-007-9004-9.

[29] F. Chung, S.-T. Yau, Discrete green’s functions, Journal of Combinatorial Theory, Series A 91 (1–2)

(2000) 191 – 214. doi:http://dx.doi.org/10.1006/jcta.2000.3094.
URL http://www.sciencedirect.com/science/article/pii/S0097316500930942

[30] R. Ellis, Discrete green’s functions for products of regular graphs, arXiv preprint math/0309080.
[31] A. Berman, R. J. Plemmons, Nonnegative matrices in the mathematical sciences, Computer science

and applied mathematics, Academic Press, New York, 1979, includes index.
URL http://opac.inria.fr/record=b1085532

[32] F. Chung, Laplacians and the cheeger inequality for directed graphs, Annals of Combinatorics 9

(2005) 1–19.

[33] M. S. Kotzagiannidis, P. L. Dragotti, Sparse graph signal reconstruction and image processing on
circulant graphs, in: IEEE GlobalSIP, 2014, pp. 923–927. doi:10.1109/GlobalSIP.2014.7032255.
[34] E. Cuthill, J. McKee, Reducing the bandwidth of sparse symmetric matrices, in: Proceedings of the
1969 24th National Conference, ACM ’69, ACM, 1969, pp. 157–172. doi:10.1145/800195.805928.
[35] J. Shi, J. Malik, Normalized cuts and image segmentation, IEEE Transactions on Pattern Analysis

and Machine Intelligence 22 (1997) 888–905.

[36] N. Perraudin, J. Paratte, D. Shuman, V. Kalofolias, P. Vandergheynst, D. K. Hammond, GSPBOX:

A toolbox for signal processing on graphs, ArXiv e-printsarXiv:1408.5781.

36

CRC Press, Inc., Boca Raton, FL, USA, 2011.

[37] R. Hammack, W. Imrich, S. Klavzar, Handbook of Product Graphs, Second Edition, 2nd Edition,
[38] J. Kamm, J. G. Nagy, Kronecker product and {SVD} approximations in image restoration, Linear
Algebra and its Applications 284 (1–3) (1998) 177 – 192, international Linear Algebra Society
(ILAS) Symposium on Fast Algorithms for Control, Signals and Image Processing. doi:http:
//dx.doi.org/10.1016/S0024-3795(98)10024-1.
URL http://www.sciencedirect.com/science/article/pii/S0024379598100241

[39] J. Leskovec, D. Chakrabarti, J. Kleinberg, C. Faloutsos, Z. Ghahramani, Kronecker graphs: An

approach to modeling networks, J. Mach. Learn. Res. 11 (2010) 985–1042.
URL http://dl.acm.org/citation.cfm?id=1756006.1756039

[40] N. P. Pitsianis, The kronecker product in approximation and fast transform generation, Ph.D.

thesis, Ithaca, NY, USA, uMI Order No. GAX97-16143 (1997).

[41] A. Sandryhaila, J. M. F. Moura, Big data analysis with signal processing on graphs: Representation
and processing of massive data sets with irregular structure, IEEE Signal Process. Mag. 31 (5) (2014)
80–90.

[42] C. V. Loan, N. Pitsianis, Approximation with kronecker products, in: Linear Algebra for Large

Scale and Real Time Applications, Kluwer Publications, 1993, pp. 293–314.

[43] R. Hoshino, Independence polynomials of circulant graphs, Ph.D. thesis, Dalhousie University

(2008).

[44] J. C. George, R. S. Sanders, When is a tensor product of circulant graphs circulant?, In eprint

arXiv:math/9907119 (07/1999).

[45] H. Sayama, Estimation of

laplacian spectra of direct and strong product graphs, CoRR

abs/1507.03030.

[46] S. Barik, R. Bapat, S. Pati, On the laplacian spectra of product graphs, Appl. Anal. Discrete Math.

58 (2015) 9–39.

[47] A. E. Brouwer, W. H. Haemers, Spectra of Graphs, New York, NY, 2012.

doi:10.1007/

978-1-4614-1939-6.

[48] W. Imrich, S. Klavˇzar, Product graphs, structure and recognition, Vol. 56, Wiley-Interscience, 2000.

37

