Still Wrong Use of Pairings in Cryptography

Mehmet Sabır Kiraz and Osmanbey Uzunkol

Mathematical and Computational Sciences Labs

T ¨UB˙ITAK B˙ILGEM, Turkey

{mehmet.kiraz, osmanbey.uzunkol}@tubitak.gov.tr

Abstract. Several pairing-based cryptographic protocols are recently
proposed with a wide variety of new novel applications including the ones
in emerging technologies like cloud computing, internet of things (IoT),
e-health systems and wearable technologies. There have been however a
wide range of incorrect use of these primitives. The paper of Galbraith,
Paterson, and Smart (2006) pointed out most of the issues related to the
incorrect use of pairing-based cryptography. However, we noticed that
some recently proposed applications still do not use these primitives cor-
rectly. This leads to unrealizable, insecure or too ineﬃcient designs of
pairing-based protocols. We observed that one reason is not being aware
of the recent advancements on solving the discrete logarithm problems in
some groups. The main purpose of this article is to give an understand-
able, informative, and the most up-to-date criteria for the correct use of
pairing-based cryptography. We thereby deliberately avoid most of the
technical details and rather give special emphasis on the importance of
the correct use of bilinear maps by realizing secure cryptographic pro-
tocols. We list a collection of some recent papers having wrong security
assumptions or realizability/eﬃciency issues. Finally, we give a compact
and an up-to-date recipe of the correct use of pairings.

Keywords: Pairing-Based Protocols, Bilinear Maps, Security, Eﬃciency.

1

Introduction

Pairing-based cryptography has received much attention because of wide
variety of its immediately deployable applications. These applications in-
clude identity-based encryption, functional and attribute-based encryp-
tion, searchable encryption, short/group/ring signatures, signcryption,
homomorphic linear authenticators for integrity checking, security, pri-
vacy and integrity solutions for cloud computing and Internet of Things
(IoT), e-health systems, and wearable technologies. We refer to Appendix
7 for a selected list of some novel applications using pairing-based cryp-
tography. In practice, Voltage Security (now an HP company) and Trend
Micro are the most well-known companies utilizing the pairing-based se-
curity solutions [60].

6
1
0
2

 
r
a

 

M
0
3

 
 
]

R
C
.
s
c
[
 
 

2
v
6
2
8
2
0

.

3
0
6
1
:
v
i
X
r
a

2

Authors Suppressed Due to Excessive Length

There have been unfortunately a collection of results using the pairing-
based primitives incorrectly. In fact, Galbraith, Paterson, and Smart drew
attention to the potential problems related to using these ”black boxes”
incorrectly [34]. However, we notice that many recent research papers still
have security vulnerabilities, realizability issues and/or eﬃciency prob-
lems since the appearance of [34]. These papers (surprisingly) either have
pairing related wrong security assumptions regarding the infeasibility of
certain computational problems or wrong security assumptions and/or
eﬃciency measures. The main reason is to use pairing-based primitives
as “black-boxes” without giving attention on the concrete realizations of
these primitives.

The security of pairing-based cryptosystems relies on the diﬃculty
of various computationally hard problems related to the discrete loga-
rithm problem (DLP). However, there are also new attacks on the DLP
on some groups [3,8,36,38,63]. These attacks have major consequences on
the design of secure cryptographic protocols based on pairing-based cryp-
tography. Hence, one additional relatively new reason of incorrect use of
pairing-based primitives is to ignore these recent technical advancements
in solving the DLP which make certain security assumptions incorrect.
The complexity of these mathematical preliminaries is undoubtedly the
reason of neglecting the realization concerns in the design of pairing-based
protocols.

In this work, our aim is to highlight the importance of correct choices
and their aﬀect on the realizability of abstract pairing requirements to
design cryptographic protocols with prescribed level of security, realiz-
ability and desired eﬃciency. In this respect, we brieﬂy survey the most
recent attacks against pairing-based cryptography which have direct ef-
fects on the designs and the security models of cryptographic protocols.
We further emphasize the concerns in the paper of Galbraith, Pater-
son, and Smart [34] together with further new security issues and their
implications. We stress thereby that this paper does not propose new
improvements or new mathematical techniques but deliberately give at-
tention to the incorrect use of pairings. Therefore, our purpose is to give
an informative and less technical overview of pairing-based mechanisms
which brieﬂy surveys the various pairing-based real-world applications
while taking the recent mathematical improvements into account hav-
ing direct security and eﬃciency implications. Furthermore, we give a
more detailed list on various pairing related hard problems together with
their relation to the security assumptions of the underlying pairing-based
protocols. We ﬁnally propose a compact and state-of-the-art recipe for

Still Wrong Use of Pairings in Cryptography

3

designers to take it into consideration for proper usage. This recipe cov-
ers main security and realizability issues of pairing-based cryptography
which may help the designers to use the primitives correctly.

2 Basics for Pairing-Based Cryptography

We begin with the abstract pairing requirements and diﬀerent types of
bilinear maps used in cryptographic protocols.

Let (G1, +) and (G2, +) be two additive cyclic groups of (nearly)
prime order q with G1 =< P > and G2 =< Q >, (GT ,·) be a multi-
plicative cyclic group of order q with GT =< g >. We write as usual 0
for the identity elements of G1, G2 and 1 for GT . A pairing or a bilinear
map is a map e : G1 × G2 → GT satisfying the following properties:
– Bilinearity: For all P1, P ′

1 ∈ G2, e is a group homo-

morphism in each component, i.e.
1. e(P1 + P ′
2. e(P1, Q1 + Q′

1, Q1) = e(P1, Q1) · e(P ′

1 ∈ G1, Q1, Q′
1, Q1),
1) = e(P1, Q1) · e(P1, Q′
1).

– Non-degeneracy: e is non-degenerate in each component, i.e.

1. For all P1 ∈ G1, P1 6= 0, there is an element Q1 ∈ G2 such that
2. For all Q1 ∈ G2, Q1 6= 0, there is an element P1 ∈ G1 such that
– Computability: There exists an algorithm which computes the bi-

e(P1, Q1) 6= 1,
e(P1, Q1) 6= 1.

linear map e eﬃciently.

There are essentially 4 types of bilinear maps [34, 66] used in the
design of pairing-based protocols depending on the special requirements
such as short representation, hashing to a group element, eﬃcient homo-
morphisms.

– Type-1: G1 = G2. In this case there exists no short representations

for the elements of G1.

– Type-2: G1 6= G2 and there is an eﬃciently computable homomor-
phism φ : G2 → G1. In this case no eﬃcient secure hashing to the
elements in G2 is possible.
– Type-3: G1 6= G2 and there exists no eﬃciently computable homo-
morphism φ : G2 → G1.
– Type-4: G1 6= G2 and there exists an eﬃciently computable homo-
morphism φ : G2 → G1 as in the case of the Type-2 setting but with
an eﬃcient secure hashing method to a group element [66]. Security

4

Authors Suppressed Due to Excessive Length

proofs can be quite cumbersome in this setting as discussed in [46].
We note that this type is not generally used in protocol designs due
to its ineﬃciency.

The main disadvantage of the Type-2 pairing is that there exists no
random sampling algorithm from G2 (yielding to a secure hash function)
which maps arbitrary elements to G2, [34, pp. 3119]. Note that there
exists a natural, eﬃcient, and secure transformation of protocols using
the Type-2 pairing into protocols using the Type-3 pairing [17, Section
5].

The Type-1 setting is commonly called symmetric pairing while other

types are called asymmetric pairing.

Properties and Conversion of Types. Since the situation G1 6= G2
with eﬃciently computable homomorphisms (in both directions) is essen-
tially the same with the Type-1 setting (by identifying the groups via
explicit homomorphisms). Hence, we do not consider it separately.

The main technical part of pairing-based cryptography is the pairing
functions including Weil, Tate and Ate pairing deﬁned mostly on the
product of certain subgroups of low dimensional abelian varieties over
ﬁnite ﬁelds (in practice either on subgroups of elliptic curves or jacobians
of genus two hyperelliptic curves) [10].

Due to eﬃciency and realizability concerns of pairing-based protocols
many ad hoc and conceptual conversion methods from one type of pair-
ing to another one has been proposed [19, 64, 74]. Abe et al. [2] proposed
a generic framework converting not only the protocols with the Type-1
bilinear maps into the Type-3 setting but also converting corresponding
security proofs using black-box reduction methods in the random oracle
model. Akinyele et al. [4] have very recently given some concerns about
the practicability of the elegant theoretic solution of [2] and proposed an
automated software tool transforming schemes using the Type-1 bilinear
maps into the Type-3 setting. We note however that the proposed auto-
mated tool in [4] and generic frameworks in [2] suﬀer from being ineﬃcient
when compared to their manual counterparts like [19,64,74]. In [4, p. 20],
it is left as an open problem to generalize and systematize the manual
advancement more eﬃciently for automated tools.

Basic Computational Problems related to Pairing: For complete-
ness of the paper, we brieﬂy summarize the basic computational problems.
Let G be a ﬁnite cyclic group of order n and P ∈ G be its generator (here

Still Wrong Use of Pairings in Cryptography

5

additively written). In order to use G for cryptographic purposes, we need
the existence of the eﬃcient algorithms available to compute in the group
G. Hence, the isomorphism between (Z/nZ, +) and (G, +) can explicitly
be given and eﬃciently computable via

φ : Z/nZ−→G, a 7→ aP.

The discrete logarithm problem (DLP) asks to ﬁnd the preimage in
Z/nZ of an arbitrarily chosen element in G, i.e. to ﬁnd a for a given
pair (P, aP ), where a is chosen randomly in Z/nZ. If the DLP is not
intractable, in other words, if one can eﬃciently compute φ−1(Q) for any
Q ∈ G, then all pairing related hardness assumptions will be wrong, i.e.
they cannot be used to design secure cryptographic protocols.
The computational Diﬃe-Hellman problem is to compute abP for a
given triple (P, aP, bP ) where a, b are chosen randomly in Z/nZ. The deci-

?
= abP for a given quadruple
sional Diﬃe-Hellman problem is to decide Q
(P, aP, bP, Q) where a, b are chosen randomly in Z/nZ. Due to Pohling-
Hellman reduction it is usual to assume that G has a (nearly) prime order
r (or has a large prime order subgroup of order r, respectively).

Provided that there exists a DLP solver for the image group GT one

has the following well-known fact by Frey-R¨uck and Menezes et al.:

Theorem 1.
[31, 59] If there exists a bilinear map e : G1 × G2 → GT ,
then the DLP in G1 and G2 can be solved in polynomial time in the
number of digits if there exists a DLP oracle for GT .

In the literature this attack is known as the MOV reduction at-
tack.The result follows in a straightforward manner by the assumption
that the pairing function e is eﬃciently computable: Given P ∈ G1 and
aP ∈ G2, we can compute e(P, Q) ∈ GT and e(P, aQ) = e(P, Q)a ∈ GT .
Then the DLP solver for GT can be used to obtain a [31, 59].

3 Attacks on Pairing-Based Cryptography

Several attacks on the DLP have recently been proposed improving the
function ﬁeld sieve algorithm in the multiplicative group of ﬁnite ﬁelds of
small characteristics [3,8,36,38,63]. There are serious implications of these
attacks on the security of pairing-based cryptography. More concretely,
the use of symmetric pairing, and hence the use of pairing-friendly ellip-
tic/hyperelliptic curves over ﬁelds of small characteristic are essentially
useless [3, 38]. Concrete attacks are performed for certain supersingular

6

Authors Suppressed Due to Excessive Length

elliptic/hyperelliptic curves over F2 and F3, see [3,38]. Diﬃculties of gen-
eralizing these attacks on the elliptic curve setting are pointed out in a
recent work of Massierer [58]. However, it can be argued more generally
that the use of elliptic curves over ﬁnite ﬁelds of small characteristics
in group-based cryptography has severe potential security threads. Espe-
cially, a very recent conjectural algorithm of Semaev [65] shows that the
believed security level of 285 bits for a NIST elliptic curve over F571
can
be reduced asymptotically to a security level of 101.7 bits using a variant
of Weil descent attack although there is not a consensus on the validity
of such asymptotical conjectures [32].

2

In this section we summarize the attacks on pairing-based cryptogra-

phy together with their implications.

3.1 Quasi-polynomial Attacks on the DLP and Bilinear Maps

The diﬃculty of the DLP depends on the description of the underlying
group G. Indeed, Shoup showed that the intractability of the DLP is
closely related to the algorithms available to the description of G. He
further shows that in generic groups the computation of the discrete log-
arithms costs at least Ω(√p), where p is the largest prime divisor of the
order of G [68]. In particular, computing the discrete logarithms in generic
groups requires approximately √p computation in G.

It was a well-known fact that the DLP for the multiplicative subgroups
of ﬁnite ﬁelds is not as diﬃcult as in the generic groups. However, many
research has been done using these groups for cryptographic purposes by
neglecting possible use of the algorithmic description of these groups to
solve the discrete logarithm instances. The situation has been dramati-
cally changed with the recent advancements of Joux et al. [8] and G¨ologlu
et al. [36]. Recently, Granger et al. [39] improved the result of Joux et
al. [8] by proposing a new expected quasi-polynomial algorithm for solving
the DLP for ﬁnite ﬁelds Fk
q with roughly q ≈ k. These attacks removed
the DLP for multiplicative subgroups of small characteristic ﬁnite ﬁelds
from the list of intractable problems.

Explicit realization of the bilinear maps can be done if GT is a sub-
group of the multiplicative group of a ﬁnite ﬁeld. Hence, the DLP on G1
and G2 can be transferred into the subgroup of a ﬁnite ﬁeld by The-
orem 1. Hence, the algorithms for solving the DLP for ﬁnite ﬁelds are
applicable on the discrete logarithm instances of pairing groups G1 and
G2. Hence, these new attacks have direct consequences on the security
of many pairing-based cryptographic applications if the characteristic of
the ﬁeld deﬁning G1 is small [44]. In fact, subsequent results applying the

Still Wrong Use of Pairings in Cryptography

7

idea of this algorithm (combined with Frey-R¨uck and MOV attacks [25])
showed the fatal security issues for cryptographic protocols using the
Type-1 bilinear maps [3, 8, 38, 63].

In particular, for a group of size n with

Ln(α, c) = exp((c + o(1))(log n)α(log log n)1−α),

where 0 < α < 1, c > 0, Barbulescu et al. [8] improved the previous
bound for solving the DLP of Joux from Ln(1/4) for a speciﬁed c to
nO(log n) for ﬁelds of the form Fk
q with roughly q ≈ k. The key idea is to
use a new and elegant approach for the descent phase.

Realization of Bilinear Maps:
In order to understand the impact
of these attacks on the design of pairing-based cryptographic protocols,
we now brieﬂy summarize the realization of bilinear maps using suitable
elliptic curves for cryptographic purposes.

Over a ﬁnite ﬁeld Fq with q = pm, p a prime and m ∈ N, the candidate
groups G1 and G2 in the deﬁnition of bilinear maps are certain subgroups
of a carefully chosen elliptic curve E over Fq. In particular, G1 is the r−th
torsion subgroup E(Fq)[r] and G2 is a certain group related to the explicit
realization of the bilinear map. We refer to [10] for further details.

The abstract condition on the eﬃcient computation of

e : G1 × G2 → GT

is realizable using Tate, Weil, Ate, and optimal pairing of elliptic curves,
see for example [40]. More concretely, given an elliptic curve E over Fq the
qk as inputs and outputs
function e takes rational points of E over Fq or F
elements of F∗
qk, where k is the smallest integer with the property that r
divides qk−1. the value k is called the embedding degree of E with respect
to r. To achieve the desired security and eﬃciency in G1, G2 and GT the
ratio log qk/ log r = kρ with ρ = log q/ log r has to be balanced. We refer
to [29] for the details. For implementation and comparison purposes, one
can consult Table 1 following the lines of [61].

The probability that a randomly chosen (nearly) prime order elliptic
curve E has small enough embedding degree is negligibly small (gener-
ically k is in O(q)) [29, 57]. Hence, special pairing-friendly curves have
to be constructed in order to realize an eﬃciently computable function e
with the property that the DLP is still intractable. Supersingular elliptic
curves were initially the natural candidates of realizing such eﬃciently
computable functions e with the desired security level. The reason was

8

Authors Suppressed Due to Excessive Length

Table 1. Comparison with the recommended security levels for pairing groups, cor-
responding embedding degrees, ρ, and #of modular multiplications (MM) over the
prime ﬁeld Fr for Ate and twisted Ate pairing using Barreto-Naehrig curves, (groups
qk of order r, k is the
G1 and G2 have the same prime order r, GT is a subgroup of F
embedding degree which is the smallest integer such that r|(qk − 1), i.e. k is the order
of q mod r) [61].

Security

r

Ate

Twisted Ate

qk

(bits)

k with
ρ ≈ 1 Pairing (k = 12) Pairing (k = 12)
Level (bits) (bits)
6-8
160
12-20
256
384
18-24
512 14000-18000 28-36

7800 MM
12480 MM
31200 MM
62400 MM

4647 MM
7119 MM
17007 MM
33486 MM

960-1280
3000-5000
7000-9000

80
128
192
256

that supersingular elliptic curves have embedding degrees k = 2, 4 or 6
depending on whether char(Fq) 6= 2, 3, char(Fq) = 2 and char(Fq) = 3, re-
spectively [10]. We refer to [29] for further details on constructing curves
with larger embedding degrees, i.e. the construction of ordinary pairing-
friendly curves over prime ﬁelds with complex multiplication (CM) tech-
niques (both families and individual curve constructions).

Consequences of the Attack on Pairing-Based Cryptography As
brieﬂy outlined above, the new attacks attacks for solving the DLP on
the multiplicative subgroup of small characteristic ﬁnite ﬁelds have also
dramatic consequences for the design of pairing-based protocols. In fact,
these attacks showed either the insecurity of the use of supersingular
elliptic curves (all pairing-friendly elliptic curves over ﬁelds of character-
istic 2 or 3) or the ineﬃciency of their usage (all supersingular curves
deﬁned over a large characteristic prime ﬁeld) in the pairing-based set-
tings [3, 8, 36, 38, 63]. Since the Type-1 pairing can only be realized using
supersingular elliptic/hyperelliptic curves [34]. We see in Section 4 that
all Type-1 bilinear maps and the related protocols are either useless or
regarded completely as insecure.

3.2 Minimal Embedding Field Attacks

Hitt [41] observed that the minimal embedding degree FordN p
is not nec-
essarily equal to the ﬁeld Fk
q , i.e. the extension can be deﬁned over Fp
instead of over Fq. Hence, in this case the group GT can be realized as

p

Still Wrong Use of Pairings in Cryptography

9

a subgroup of much smaller ﬁeld yielding to solve the DLP more eﬃ-
ciently in G1, G2 and GT . Note that this attack is only applicable for
pairing-friendly curves deﬁned over non-prime ﬁelds.

3.3 Subgroup Attacks

Usually pairing functions are realized in such a way that two out of three
groups G1, G2 and GT are proper subgroups of larger composite order
subgroups. This results in the so-called subgroup attacks if especially the
underlying pairing implementation is not testing the group membership of
the elements. Barreto et al. deﬁned the concept of subgroup security and
pointed out that most implementations of bilinear maps do not satisfy
this notion [9]. They suggested new curve parameters using the known
families of pairing-friendly elliptic curves achieving the subgroup security.

4 Hard Problems Related to Pairing

There are plenty of pairing related computational and decisional prob-
lems. Their intractabilities form the basic security assumptions upon
which pairing-based cryptographic protocols are designed. In this section,
we only focus on the most general and frequently used hard problems.

4.1 Pairing Inversion Problem

A necessary straightforward security assumption is the one-wayness of the
underlying pairing function e. The generalized pairing inversion problem
(GPInv) asks to ﬁnd P ∈ G1 and Q ∈ G2 such that e(P, Q) = g for a
given pairing function e and a value g ∈ GT . This problem can be divided
into two subproblems:

– The ﬁxed argument pairing inversion problem 1 (FAPI-1) is to ﬁnd

– The ﬁxed argument pairing inversion problem 2 (FAPI-2) is to ﬁnd

Q ∈ G2 such that e(P, Q) = g for a given P ∈ G1 and g ∈ GT .
P ∈ G1 such that e(P, Q) = g for a given Q ∈ G2 and g ∈ GT .
A simple observation shows that for each given pair (P, g) ∈ G1 × GT
or (Q, g) ∈ G1 × GT both problems FAPI-i, i = 1, 2, have a unique
solution by non-degeneracy of e and cyclicity of G1, G2 and GT . Note
that in the explicit realization of pairings FAPI-i (in terms of the size of
the input (P, g) or (Q, g)) can be solved at most in subexponential time
since there exists a subexponential DLP solver for GT (in terms of the

10

Authors Suppressed Due to Excessive Length

input size of G1, G2 and GT ) by Theorem 1 and discussion in Section
3.1. Again by the discussion in Section 3.1 and Theorem 1 it follows that
FAPI-i can even be solved in quasi-polynomial time since there exists a
quasi-polynomial DLP solver for GT for certain choices of G1, G2 and
GT . For a detailed relation of the pairing inversion problems and the
Diﬃe-Hellman type assumptions we refer to [33].

Bilinear maps can be computed mainly in two stages. The ﬁrst one is
to compute the evaluation of a certain function at a certain divisor of the
underlying elliptic curve E by using Miller’s algorithm [10]. The second
stage is the ﬁnal exponentiation. For the details about the relationship be-
tween the individual steps (Miller inversion and inverting exponentiation)
and the pairing inversion problem we also refer to [33].

4.2 Diﬃe-Hellman Related Problems

Other most common pairing related problems are as follows:

Deﬁnition 1 (Computational Bilinear Diﬃe-Hellman Problems
[10]).

Let e : G1 × G2 → GT be a non-degenerate bilinear pairing. Then

– The bilinear Diﬃe-Hellman problem 1 (BDH-1) asks to ﬁnd e(P, Q)ab

– The bilinear Diﬃe-Hellman problem 2 (BDH-2) asks to ﬁnd e(P, Q)ab

for given P, aP, bP ∈ G1, Q ∈ G2 and random a, b.
for given P ∈ G1, aQ, bQ ∈ G2 and random elements a, b.
A frequently used variant of the decisional Diﬃe-Hellman problem in

the Type-1 setting (G1 = G2) is given as follows:

Deﬁnition 2 (Decisional Bilinear Diﬃe-Hellman Problem [10]).
Let e : G1× G1 → GT with a cyclic group G1 =< P > is given. Then
– The decisional bilinear Diﬃe-Hellman problem (DBDH) is to decide
whether h = e(P, P )abc for given P, aP, bP, cP ∈ G1 with random
elements a, b, c and a random element h ∈ GT .
It is clear that the decisional Diﬃe-Hellman problems including the
pairing related ones are solvable in polynomial time when one has oracles
solving the computational Diﬃe-Hellman problems. However, there are
groups for which the classical decisional Diﬃe-Hellman problem is easy
while the classical computational Diﬃe-Hellman problem is believed to
be hard. In particular, a gap Diﬃ-Helman group has a distinguishability
oracle for which solving the computational problem is hard [15, 43]. In

Still Wrong Use of Pairings in Cryptography

11

the Type-1 pairing setting the Gap Diﬃe-Hellman Problem is formally
deﬁned as follows:

Deﬁnition 3 (Gap Diﬃe-Hellman Problem [15,43]). Given groups
G1 and G2 of prime order q, a bilinear map e : G1 × G1 → GT and a
generator P of G1. The Gap Diﬃe-Hellman Problem (Gap DH) asks to
compute abP for given instance (P, aP, bP ) of the CDH problem and a
DDH oracle.

Deﬁnition 4 (Co-Assumptions [14]).

– The Computational Co-Diﬃe-Hellman Problem asks to compute aQ

for given P , aP ∈ G1 and Q ∈ G2 for a random element a.
– The Decisional Co-Diﬃe-Hellman Problem asks to decide whether
aQ = R for given P , aP ∈ G1 and Q, R ∈ G2, for a random el-
ement a.

Assume additionally that G1 6= G2. Then,

pute e(P, Q)abc ∈ G1 for given (P, aP, bP ) ∈ G3
G3
2 for random elements a, b and c.

– The Computational Co-Bilinear Diﬃe-Hellman Problem asks to com-
1 and (Q, aQ, cQ) ∈
– The Decisional Co-Bilinear Diﬃe-Hellman Problem asks to distin-
guish P, aP, bP, Q, e(P, Q)ab from P, aP, bP, Q, e(P, Q)z for random
elements a, b and z.

The relationship between the CDH and FAPI-1 and FAPI-2 problems
is given by the following theorem of Galbraith et al. [33] whose proof
follows for a CDH instance (P, aP, bP ) easily from ﬁrst calling the FAPI-
1 oracle with the inputs (P, e(aP, Q)) to obtain aQ for a random element
Q and calling secondly the FAPI-2 oracle (Q, e(bP, aQ)):

Theorem 2. Let e : G1× G2 → GT be a non-degenerate bilinear pairing
on cyclic groups of prime order r. Suppose one can solve FAPI-1 and
FAPI-2 in polynomial time. Then one can solve the computational Diﬃe-
Hellman problem in G1, G2 and GT in polynomial time.

Similar to the above argumentation the following result is also proved

in [33]:

Theorem 3. Let notation be as above. If one can solve FAPI-1 (resp.
FAPI-2) in polynomial time then one can compute all non-trivial group
homomorphisms φ2 : G2 → G1 (resp. ψ2 : G2 → G1) in polynomial time.

12

Authors Suppressed Due to Excessive Length

We continue with an assumption which is frequently used in the design

of pairing-based protocols:

Deﬁnition 5 (The external Diﬃe-Hellman (XDH) assumption
[12]). Let the CDH be intractable in both G1 and G2. The external Diﬃe-
Hellman assumption (XDH) states that the DDH is also intractable in
G1. If the DDH is also intractable in G2 we have the symmetric external
Diﬃe-Hellman assumption (SXDH).

Remark 1. It is easy to see that the GDH problem is only realizable with
the Type-1 pairing, and the strict XDH assumption (i.e. if SXDH does
not hold) corresponds exactly to the Type-2 setting. Furthermore, the
SXDH assumption is only realizable in the Type-3 setting.

There are also several cryptographic protocols whose security relies

on other pairing related problems with auxiliary inputs:

Deﬁnition 6 (Pairing problems with auxilary inputs [22]). Let
the elements g, gα,··· , gαd
in G1 (resp. G2) be given with a random ele-
ment α. Then, the DLP with auxiliary inputs (DLPwAI) is to compute α.
Solving the DLPwAI implies the solution of many pairing-based problem
assumptions. These are called pairing problems with auxiliary inputs.

These include the Weak Diﬃe-Hellman (wDH) Problem, the Strong

Diﬃe-Hellman (sDH) Problem, the Bilinear Diﬃe-Hellman Inversion (BDHI)
Problem and the Bilinear Diﬃe-Hellman Exponent (BDHE) Problem.

Remark 2. The generalized DLP with auxiliary inputs problem (GDLP-
wAI) is to compute a randomly chosen α if g, gαe1 ,··· , gαed in G1 (resp.
G2) are given and K := {e1,··· , ed} is a multiplicatively closed subset
of Z×
r−1 [23].
We note that some generalized versions of the Weak Diﬃe-Hellman
(wDH) Problem, the Strong Diﬃe-Hellman (sDH) Problem, the Bilinear
Diﬃe-Hellman Inversion(BDHI) Problem and the Bilinear Diﬃe-Hellman
Exponent (BDHE) Problem can also be vulnerable if the GDLPwAI is
solved.

5 Security or Eﬃciency Issues of Recent Papers

In this section, we revisit a collection of recently proposed research papers
in order to illustrate the incorrect use of the pairing-based primitives.

Still Wrong Use of Pairings in Cryptography

13

– In [42], the authors propose a batch veriﬁcation mechanism which
aims to verify multiple digital signatures at a time less than the total
individual veriﬁcation time. The authors prove the security of their
scheme under the collusion attack assumption using the Type-1 setting
with supersingular elliptic curves [42, pp.2526] having security issues
as discussed in Section 3.1.

– In [71], the authors present a new Type-1 pairing-based multi-receiver
encryption scheme and authenticated key establishment protocol for
vehicular ad-hoc network (VANET). Its security analysis relies on
the system of [70] which is based on the underlying Gap DH, hence
realizable only in the Type-1 setting. Their example with a 512 bit
supersingular elliptic curve with embedding degree 2 is too ineﬃcient
since the same security level can be guaranteed in the asymmetric
setting for instance with a Barreto-Naehrig curve of 160 bits [29].

– In [50], the authors proposed an authenticated encryption system us-
ing the Type-1 setting aiming to accomplish conﬁdentiality and au-
thenticity simultaneously. This scheme is applied to email system as
a practical example. Unfortunately, the proposed example does not
have any complexity advantage over the current system. The scheme
is also too ineﬃcient because of the use of the Type-1 setting as in
the previously mentioned schemes.

– In [37] the authors propose a privacy-preserving scheme for incentive-
based demand response in the smart grid. The smart grid technology
basically uses the information and communication technologies aiming
to enhance the eﬃciency, reliability, sustainability of the generation,
transmission, distribution, and consumption of electricity. They used
a Type-1 pairing although the security of the scheme relies on the
existence of an eﬃciently computable homomorphism in the Type-2
setting as stated in [37] using the unforgeability of BBS+ signature
[12]. Therefore, the scheme has to be modiﬁed into a more eﬃcient
Type-3 setting in the light of [17].

– Unlike wired networks, mobile ad-hoc networks (MANETs) are more
vulnerable to security attacks bringing new security challenges (e.g.,
limited resources, open peer-to-peer network, dynamic network topol-
ogy, lack of a trusted centralized authority). Therefore, designing and
implementing more eﬃcient cryptographic algorithms, key manage-
ment, secure neighbor detection, and routing protocol are some of
the active research areas. Certiﬁcate-less (mostly pairing-based) pub-
lic key based solutions are known to be one of the best candidate.
But after surveying the pairing-based MANETs, we again realize the

14

Authors Suppressed Due to Excessive Length

incorrect use of the Type-1 setting and counting the pairing operation
as a black-box, see for instance [35].

– In [24], the authors proposed a solution for scalable data sharing in
cloud storage using key-aggregate cryptosystems using the Type-1 set-
ting. A subsequent paper [54] deals with a cloud data sharing scheme
utilizing supported keyword search. It also suﬀers from the use of the
Type-1 setting. For instance, in the latter paper, the security of the
scheme relies on the intractability of the computational Diﬃe-Hellman
problem which is no longer secure for supersingular elliptic curves over
small characteristic ﬁnite ﬁelds as discussed in Section 3.1.

– The authors in [52] proposed a mechanism using the Type-1 setting
for data integrity veriﬁcation for the Internet of Things (IoT) applica-
tions, where especially the integrity of an outsourced data is the most
crucial security property. The authors did not unfortunately modify
the original BLS idea into the Type-3 setting.

– In [56] the authors proposed secure data transmission mechanism for
cluster-based wireless sensor networks using the Type-1 setting. Their
analysis in [56, pp. 758], however, cannot be realized in this setting.
Therefore, the proposed scheme is much less eﬃcient than the author’s
quantitative calculation.

– The author proposes in [72] a remote data integrity checking model
in multi-cloud platforms. The scheme uses the Gap DH assumptions
like most of their counterparts (public auditing schemes) and hence
uses the Type-1 setting. In the simulation of the scheme the author
argued to use 160 bit elliptic curve for the underlying bilinear map. It
is impossible to obtain a secure mechanism using such a small order
elliptic curve (either insecure for curves over a ﬁeld of characteristic
3 or insecure since the embedding degree is 2 over large ﬁelds due to
the discussions in Section 3.1.)

– In [26], Coron and Naccache proved that the Co-Diﬃe Hellmann prob-
lem and the k-element aggregate extraction problem are equivalent
with the assumption that there exists an eﬃciently computable homo-
morphism φ : G2 → G1. Recently, in [75] Xie und Zhang proposed
a secure incentive scheme for delay tolerant networks under the k-
element aggregate extraction problem using the Type-1 setting. How-
ever, it is impossible to convert their scheme into the Type-2 setting.
The reason is that their scheme uses the existence of an eﬃcient and
secure hashing to point map into G2, which is in fact not realizable
in the Type-2 setting as discussed in Section 2.

– Kundu and Bertino [45] proposed an authentication mechanism using
the Type-1 bilinear maps under the k-element aggregate extraction

Still Wrong Use of Pairings in Cryptography

15

problem in order to achieve conﬁdentiality-preserving authentication
of trees and graphs. As in the above mechanism, an asymmetric mod-
iﬁcation of the scheme can only be realized in the Type-2 setting since
the author uses the original BGLS [14] aggregate signatures. However,
this cannot be realized either, since one requires eﬃcient and secure
hashing to a point map into G2.

6 Recipe for Designers

The following conditions have to be taken into consideration by designing
cryptosystems using bilinear maps:

– Use the Type-3 Setting: Although there are automated tools con-
verting protocols using the Type-1 bilinear maps into protocols using
the Type-3 bilinear maps [2, 4] and a general framework converting
the Type-2 schemes into the Type-3 schemes [17], it is always better
to design cryptosystems using directly the Type-3 pairing to achieve
the best security level and the most eﬃcient protocols.

– Choose the Best Pairing Function: One should use eﬃcient com-
putation in pairing-friendly groups. In other words use optimal pair-
ing [40] or its eﬃcient variants as much as possible. The pairing func-
tion should be speciﬁed in order to obtain the best eﬃciency security
trade oﬀ.

Table 2. Revised version of the comparison of diﬀerent pairing types [34, Table 1]. A
checkmark X denotes that the pairing type satisﬁes the property and ✗ denotes that it
fails to satisfy the property. The # of * measures the eﬃciency of the underlying pairing
type (*** denotes the most eﬃcient choice). Note that p denotes the characteristic of
the ﬁeld over which the curve is deﬁned (i.e. over Fq with q = pn).

Type

Hash to Short Homomorphism Poly time Security Eﬃciency

G2
1 (p=2 or 3) X
X

1(large p)

2
3

X

G1

X

X

X

X

X

generation

X

X

X

X

X

X

**
*
**
***

✗
✗
✗
✗
✗
✗
16

Authors Suppressed Due to Excessive Length

– Begin with a Correct Set-Up: Implementation details should be
given more concretely (what is the desired security level? ) and always
together with its usability (which pairing Type is used? ) and practical
aspects (what is the computation and communication overhead?) and
realizability aspects (which pairing function has to be used?.

– Use Realizable Security Assumptions: It is crucial to avoid un-
realizable security assumptions. Furthermore, the assumptions about
the security level should be carefully stated using concrete constraints.
For a typical example, one may believe that “it is always easy to gen-
erate eﬃciently suitable system parameters for pairing-based cryp-
tosystems” which is clearly wrong as outlined above. See Table 1 for
the concrete realizability constraints.

– Do Not Use Extensions of Binary and Ternary Curves: One
should be careful about more destructive security issues resulting from
attacks on the DLP over ﬁelds of small characteristics (following the
lines of Section 3.1).

– Avoid the Explicit Homomorphisms: A possible wrong use of the
asymmetric setting with the assumption of the existence of eﬃciently
computable homomorphisms leads to unrealizability and/or security
and privacy leakage. We note that in some applications there is a ten-
dency to use the asymmetric setting incorrectly with the assumption
of the existence of eﬃciently computable homomorphisms in both di-
rections (both from G1 to G2 and G2 to G1). See Table 1 for the
concrete realizability constraints.

– Use the Hashing to Point only in the Type-3 Setting: Pairing-
based cryptographic protocols may require the following underlying
assumptions simultaneously: (1) secure and eﬃcient hashing into group
elements (2) eﬃcient homomorphism from G2 to G1. This require-
ment can be vital in order either to prove the security of the un-
derlying protocol or to design comparably more eﬃcient mechanisms.
However, since both requirements cannot be realized simultaneously
in practice, the design criteria should be checked carefully in order to
ensure the claimed security and eﬃciency while achieving a realizable
mechanism. See Table 1 for the concrete realizability constraints.

– Test Group Membership or Subgroup Secure Curves: In order
to undermine the implementation attacks (for instance, failing to test
the group membership) subgroup security has to be guaranteed in the
realization of pairing-based protocols by generating subgroup secure
pairing-friendly elliptic curves following the lines of [9].

– Do Not Use Curves over Extension Fields, Use Prime Fields:
In order to estimate the desired level of security precisely, special

Still Wrong Use of Pairings in Cryptography

17

caution on the realizability of the minimal embedding ﬁeld attack has
to be taken if the underlying elliptic curves are deﬁned over extension
ﬁelds. In particular, the equality ordN (p) = mk needs to be hold,
where q = pm, G1 is a subgroup of N−th torsion subgroup of the
underlying elliptic curve over Fq and k is the embedding degree.

– Be Careful about the Auxiliary Inputs: In order to avoid pos-
sible attack scenarios caused by solving the discrete logarithm with
auxiliary inputs (DLPwAI) [22] and its generalizations (GDLwAI) [23]
special caution has to be taken by the choice of the underlying elliptic
curves and the orders of G1 and G2. Especially, for the order r of G1
and G2 the values r − 1 and r + 1 have no small divisors and auxil-
iary exponents are not closed with respect to multiplication. This is
important if one needs the security assumptions like the Weak Diﬃe-
Hellman (wDH) Problem, the Strong Diﬃe-Hellman (sDH) Problem,
the Bilinear Diﬃe-Hellman Inversion(BDHI) Problem and the Bilinear
Diﬃe-Hellman Exponent (BDHE) for the design of the pairing-based
protocols.

7 Conclusion

In this paper, we aim to highlight once again the wrong usage of bi-
linear maps in the recent research papers which unfortunately leads to
security, realizability and/or eﬃciency issues. Furthermore, with the prac-
ticality and advantages of pairing-based technologies researchers should
focus on the correctness and the mathematical details instead of using
them as a “black-box”. Furthermore, the National Institute of Standards
and Technology (NIST) and IEEE have been actively working on the cor-
rect versions of pairing-based cryptography to update to bring them to
the state-of-the-art advancements, but the current versions are open to
be updated with the recent attacks [1, 60].

Acknowledgements

Kiraz’s work is supported by a grant from Ministry of Development of
Turkey provided to the Cloud Computing and Big Data Research Lab
Project. Uzunkol’s work is supported by the project (114C027) funded
by EU FP7-The Marie Curie Action and T ¨UB˙ITAK (2236-CO-FUNDED
Brain Circulation Scheme).

18

Authors Suppressed Due to Excessive Length

References

1. IEEE standard for identity-based cryptographic techniques using pairings. IEEE

Std 1363.3-2013, pages 1–151, Nov 2013.

2. M. Abe, J. Groth, M. Ohkubo, and T. Tango. Converting cryptographic schemes
In Advances in Cryptology
from symmetric to asymmetric bilinear groups.
CRYPTO 2014, volume 8616 of Lecture Notes in Computer Science, pages 241–260.
Springer Berlin Heidelberg, 2014.

3. G. Adj, A. Menezes, T. Oliveira, and F. Rodr´ıguez-Henr´ıquez. Computing discrete
36·137 using magma. IACR Cryptology ePrint Archive, 2014:57,

logarithms in F
2014.

4. J. A. Akinyele, C. Garman, and S. Hohenberger. Automating fast and secure
translations from type-i to type-iii pairing schemes. In Proceedings of the 22Nd
ACM SIGSAC Conference on Computer and Communications Security, CCS ’15,
pages 1370–1381. ACM, 2015.

5. T. Asami, B. Namsraijav, Y. Kawahara, K. Sugiyama, A. Tagami, T. Yagyu,
K. Nakamura, and T. Hasegawa. Moderator-controlled information sharing by
identity-based aggregate signatures for information centric networking.
In Pro-
ceedings of the 2nd International Conference on Information-Centric Networking,
ICN ’15, pages 157–166. ACM, 2015.

6. G. Ateniese and B. Medeiros. Financial Cryptography: 8th International Confer-
ence, FC 2004, Key West, FL, USA, February 9-12, 2004. Revised Papers, chapter
Identity-Based Chameleon Hash and Applications, pages 164–180. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2004.

7. J. Baek and Y. Zheng. Identity-based threshold decryption. In 7th International
Workshop on Theory and Practice in Public Key Cryptography (PKC), volume
2047, pages 262–276. Springer Berlin Heidelberg - Lecture Notes in Computer
Science, 2004.

8. R. Barbulescu, P. Gaudry, A. Joux, and E. Thom´e. Advances in Cryptology – EU-
ROCRYPT 2014: 33rd Annual International Conference on the Theory and Ap-
plications of Cryptographic Techniques, Copenhagen, Denmark, May 11-15, 2014.
Proceedings, chapter A Heuristic Quasi-Polynomial Algorithm for Discrete Loga-
rithm in Finite Fields of Small Characteristic, pages 1–16. Springer Berlin Heidel-
berg, Berlin, Heidelberg, 2014.

9. P. Barreto, C. Costello, R. Misoczki, M. Naehrig, G. Pereira, and G. Zanon. Sub-
group security in pairing-based cryptography. In Progress in Cryptology – LATIN-
CRYPT 2015, volume 9230 of Lecture Notes in Computer Science, pages 245–265.
Springer International Publishing, 2015.

10. I. Blake, G. Seroussi, N. Smart, and J. W. S. Cassels. Advances in Elliptic Curve
Cryptography (London Mathematical Society Lecture Note Series). Cambridge Uni-
versity Press, New York, NY, USA, 2005.

11. D. Boneh, X. Boyen, and E.-J. Goh. Advances in Cryptology – EUROCRYPT
2005: 24th Annual International Conference on the Theory and Applications of
Cryptographic Techniques, Aarhus, Denmark, May 22-26, 2005. Proceedings, chap-
ter Hierarchical Identity Based Encryption with Constant Size Ciphertext, pages
440–456. Springer Berlin Heidelberg, Berlin, Heidelberg, 2005.

12. D. Boneh, X. Boyen, and H. Shacham. Advances in Cryptology – CRYPTO
2004: 24th Annual International Cryptology Conference, Santa Barbara, Califor-
nia, USA, August 15-19, 2004. Proceedings, chapter Short Group Signatures, pages
41–55. Springer Berlin Heidelberg, Berlin, Heidelberg, 2004.

Still Wrong Use of Pairings in Cryptography

19

13. D. Boneh and M. Franklin.

Identity-Based Encryption from the Weil Pairing,

pages 213–229. Springer Berlin Heidelberg, Berlin, Heidelberg, 2001.

14. D. Boneh, C. Gentry, B. Lynn, and H. Shacham. Advances in Cryptology —
EUROCRYPT 2003: International Conference on the Theory and Applications of
Cryptographic Techniques, Warsaw, Poland, May 4–8, 2003 Proceedings, chapter
Aggregate and Veriﬁably Encrypted Signatures from Bilinear Maps, pages 416–
432. Springer Berlin Heidelberg, Berlin, Heidelberg, 2003.

15. D. Boneh, B. Lynn, and H. Shacham. Short signatures from the weil pairing.
In Advances in Cryptology, ASIACRYPT 2001, volume 2248 of Lecture Notes in
Computer Science, pages 514–532. Springer Berlin Heidelberg, 2001.

16. V. Cakulev, G. Sundaram, and I. Broustis. IBAKE: Identity-Based Authenticated

Key Exchange. RFC 6539, 2012.

17. S. Chatterjee and A. Menezes. On cryptographic protocols employing asymmetric
pairings - the role of ψ revisited. Discrete Applied Mathematics, 159(13):1311–1322,
2011.

18. S. Chatterjee and A. Menezes. Type 2 structure-preserving signature schemes
revisited. In Advances in Cryptology ASIACRYPT 2015, volume 9452 of Lecture
Notes in Computer Science, pages 286–310. Springer Berlin Heidelberg, 2015.

19. J. Chen, H. W. Lim, S. Ling, H. Wang, and H. Wee. Pairing-Based Cryptogra-
phy – Pairing 2012: 5th International Conference, Cologne, Germany, May 16-18,
2012, Revised Selected Papers, chapter Shorter IBE and Signatures via Asymmetric
Pairings, pages 122–140. Springer Berlin Heidelberg, Berlin, Heidelberg, 2013.

20. L. Chen, Z. Cheng, and N. P. Smart. Identity-based key agreement protocols from

pairings. International Journal of Information Security, 6(4):213–241, 2007.

21. P. Chen, X. Wang, and J. Su. A hierarchical identity-based signature from compos-
ite order bilinear groups. In Algorithms and Architectures for Parallel Processing,
volume 9532 of Lecture Notes in Computer Science, pages 46–56. Springer Inter-
national Publishing, 2015.

22. J. H. Cheon and T. Kim. A new approach to the discrete logarithm problem with

auxiliary inputs. 19(1):1–15, 2016.

23. J. H. Cheon, T. Kim, and Y. S. Song. Selected Areas in Cryptography – SAC 2013:
20th International Conference, Burnaby, BC, Canada, August 14-16, 2013, Revised
Selected Papers, chapter A Group Action on Z×
p and the Generalized DLP with
Auxiliary Inputs, pages 121–135. Springer Berlin Heidelberg, Berlin, Heidelberg,
2014.

24. C.-K. Chu, S. S. M. Chow, W.-G. Tzeng, J. Zhou, and R. H. Deng. Key-aggregate
IEEE Trans. Parallel

cryptosystem for scalable data sharing in cloud storage.
Distrib. Syst., 25(2):468–477, Feb. 2014.

25. H. Cohen and G. Frey, editors. Handbook of elliptic and hyperelliptic curve cryp-

tography. CRC Press, 2005.

26. J.-S. Coron and D. Naccache. Advances in Cryptology - ASIACRYPT 2003: 9th
International Conference on the Theory and Application of Cryptology and Infor-
mation Security, Taipei, Taiwan, November 30 – December 4, 2003. Proceedings,
chapter Boneh et al.’s k-Element Aggregate Extraction Assumption Is Equivalent
to the Diﬃe-Hellman Assumption, pages 392–397. Springer Berlin Heidelberg,
2003.

27. A. Enge and J. Milan. Implementing cryptographic pairings at standard security
levels. volume 8804 of Lecture Notes in Computer Science, pages 28–46. Springer
International Publishing, 2014.

20

Authors Suppressed Due to Excessive Length

28. L. Fang, W. Susilo, C. Ge, and J. Wang. Public key encryption with keyword
search secure against keyword guessing attacks without random oracle. Informa-
tion Sciences, 238:221 – 241, 2013.

29. D. Freeman, M. Scott, and E. Teske. A taxonomy of pairing-friendly elliptic curves.

Journal of Cryptology, 23(2):224–280, 2010.

30. E. S. V. Freire. Non-interactive key exchange and key assignment schemes. In Phd

Thesis inproceedingsinproceedingsStanford University, 2014.

31. G. Frey and H.-G. R¨uck. A remark concerning m-divisibility and the discrete
logarithm in the divisor class group of curves. Math. Comput., 62(206):865–874,
Apr. 1994.

32. S. D. Galbraith and P. Gaudry. Recent progress on the elliptic curve discrete

logarithm problem. Designs, Codes and Cryptography, 78(1):51–72, 2015.

33. S. D. Galbraith, F. Hess, and F. Vercauteren. Aspects of pairing inversion. IEEE

Transactions on Information Theory, 54(12):5719–5728, 2008.

34. S. D. Galbraith, K. G. Paterson, and N. P. Smart. Pairings for cryptographers.

Discrete Appl. Math., 156(16):3113–3121, 2008.

35. U. Ghosh and R. Datta. A secure addressing scheme for large-scale managed
manets. Network and Service Management, IEEE Transactions on, 12(3):483–495,
Sept 2015.

36. F. G¨olo˘glu, R. Granger, G. McGuire, and J. Zumbr¨agel. On the Function Field
Sieve and the Impact of Higher Splitting Probabilities, pages 109–128. Springer
Berlin Heidelberg, Berlin, Heidelberg, 2013.

37. Y. Gong, Y. Cai, Y. Guo, and Y. Fang. A privacy-preserving scheme for incentive-
based demand response in the smart grid. Smart Grid, IEEE Transactions on,
(99):1–1, 2015.

38. R. Granger, T. Kleinjung, and J. Zumbr¨agel. Breaking ‘128-bit Secure’ Supersingu-
lar Binary Curves, pages 126–145. Springer Berlin Heidelberg, Berlin, Heidelberg,
2014.

39. R. Granger, T. Kleinjung, and J. Zumbr¨agel. On the discrete logarithm problem

in ﬁnite ﬁelds of ﬁxed characteristic. http://arxiv.org/abs/1507.01495, 2015.

40. F. Hess. Pairing lattices. In S. Galbraith and K. Paterson, editors, Pairing-Based
Cryptography Pairing 2008, volume 5209 of Lecture Notes in Computer Science,
pages 18–38. Springer Berlin Heidelberg, 2008.

41. L. Hitt. Pairing-Based Cryptography – Pairing 2007: First International Confer-
ence, Tokyo, Japan, July 2-4, 2007. Proceedings, chapter On the Minimal Embed-
ding Field, pages 294–301. Springer Berlin Heidelberg, 2007.

42. J. Y. Hwang, D. H. Choi, H. Cho, and B. Song. New eﬃcient batch veriﬁcation
for an identity-based signature scheme. Security and Communication Networks,
8(15):2524–2535, 2015.

43. A. Joux and K. Nguyen. Separating decision diﬃe–hellman from computational
diﬃe–hellman in cryptographic groups. Journal of Cryptology, 16(4):239–247, 2003.
44. A. Joux and C. Pierrot. Technical history of discrete logarithms in small charac-

teristic ﬁnite ﬁelds. Designs, Codes and Cryptography, 78(1):73–85, 2016.

45. A. Kundu and E. Bertino. Privacy-preserving authentication of trees and graphs.

International Journal of Information Security, 12(6):467–494, 2013.

46. N. P. S. L. Chen, Z. Cheng. Identity-based key agreement protocols from pairings.

International Journal of Information Security, 6(4):213–241, 2007.

47. A. Lewko, T. Okamoto, A. Sahai, K. Takashima, and B. Waters. Advances in Cryp-
tology – EUROCRYPT 2010: 29th Annual International Conference on the Theory
and Applications of Cryptographic Techniques, French Riviera, May 30 – June 3,

Still Wrong Use of Pairings in Cryptography

21

2010. Proceedings, chapter Fully Secure Functional Encryption: Attribute-Based
Encryption and (Hierarchical) Inner Product Encryption, pages 62–91. Springer
Berlin Heidelberg, Berlin, Heidelberg, 2010.

48. A. Lewko and B. Waters. Advances in Cryptology – EUROCRYPT 2011: 30th
Annual International Conference on the Theory and Applications of Cryptographic
Techniques, Tallinn, Estonia, May 15-19, 2011. Proceedings, chapter Decentral-
izing Attribute-Based Encryption, pages 568–588. Springer Berlin Heidelberg,
Berlin, Heidelberg, 2011.

49. F. Li and P. Xiong. Practical secure communication for integrating wireless sensor
networks into the internet of things. Sensors Journal, IEEE, 13(10):3677–3684,
2013.

50. F. Li, Z. Zheng, and C. Jin. Identity-based deniable authenticated encryption and

its application to e-mail system. Telecommunication Systems, pages 1–15, 2015.

51. H. Li, Y. Dai, L. Tian, and H. Yang. Cloud Computing: First International Confer-
ence, CloudCom 2009, Beijing, China, December 1-4, 2009. Proceedings, chapter
Identity-Based Authentication for Cloud Computing, pages 157–166. Springer
Berlin Heidelberg, Berlin, Heidelberg, 2009.

52. C. Liu, C. Yang, X. Zhang, and J. Chen. External integrity veriﬁcation for out-
sourced big data in cloud and iot. Future Gener. Comput. Syst., 49(C):58–67, Aug.
2015.

53. J. Liu, Z. Zhang, X. Chen, and K. S. Kwak. Certiﬁcateless remote anonymous
authentication schemes for wirelessbody area networks. Parallel and Distributed
Systems, IEEE Transactions on, 25(2):332–342, 2014.

54. Z. Liu, J. Li, X. Chen, J. Yang, and C. Jia. Information Security and Privacy:
19th Australasian Conference, ACISP 2014, Wollongong, NSW, Australia, July
7-9, 2014. Proceedings, chapter TMDS: Thin-Model Data Sharing Scheme Sup-
porting Keyword Search in Cloud Storage, pages 115–130. Springer International
Publishing, Cham, 2014.

55. A. Lounis, A. Hadjidj, A. Bouabdallah, and Y. Challal. Secure and scalable cloud-
based architecture for e-health wireless sensor networks.
In Computer Commu-
nications and Networks (ICCCN), 2012 21st International Conference on, pages
1–7, 2012.

56. H. Lu, J. Li, and M. Guizani. Secure and eﬃcient data transmission for cluster-
based wireless sensor networks. Parallel and Distributed Systems, IEEE Transac-
tions on, 25(3):750–761, 2014.

57. F. Luca, D. J. Mireles, and I. E. Shparlinski. Mov attack in various subgroups on

elliptic curves. Illinois Journal of Mathematics, 48(3):10411052, 2004.

58. M. Massierer. Some experiments investigating a possible L(1/4) algorithm for the
discrete logarithm problem in algebraic curves. IACR Cryptology ePrint Archive,
2014:996, 2014.

59. A. Menezes, T. Okamoto, and S. Vanstone. Reducing elliptic curve logarithms
Information Theory, IEEE Transactions on,

to logarithms in a ﬁnite ﬁeld.
39(5):1639–1646, 1993.

60. D. Moody, R. Peralta, R. Perlner, A. Regenscheid, A. Roginsky, and L. Chen.
Journal of Research of the National Institute of Standards and Technology. volume
120, pages 11–27. February 2015.

61. N. E. Mrabet, N. Guillermin, and S. Ionica. A study of pairing computation
for elliptic curves with embedding degree 15. IACR Cryptology ePrint Archive,
2009:370, 2009.

22

Authors Suppressed Due to Excessive Length

62. L. Nkenyereye and K. Rhee. Secure traﬃc data transmission protocol for vehicular
cloud. In Advances in Computer Science and Ubiquitous Computing, volume 373 of
Lecture Notes in Electrical Engineering, pages 497–503. Springer Singapore, 2015.
63. A. M. Odlyzko. Advances in Cryptology: Proceedings of EUROCRYPT 84 A Work-
shop on the Theory and Application of Cryptographic Techniques Paris, France,
April 9– 11, 1984, chapter Discrete logarithms in ﬁnite ﬁelds and their crypto-
graphic signiﬁcance, pages 224–314. Springer Berlin Heidelberg, Berlin, Heidel-
berg, 1985.

64. S. C. Ramanna, S. Chatterjee, and P. Sarkar. Public Key Cryptography – PKC
2012: 15th International Conference on Practice and Theory in Public Key Cryp-
tography, Darmstadt, Germany, May 21-23, 2012. Proceedings, chapter Variants
of Waters’ Dual System Primitives Using Asymmetric Pairings, pages 298–315.
Springer Berlin Heidelberg, Berlin, Heidelberg, 2012.

65. I. Semaev. New algorithm for the discrete logarithm problem on elliptic curves.

IACR Cryptology ePrint Archive, 2015.

66. H. Shacham. New Paradigms in Signature Schemes. PhD thesis, Stanford, CA,

USA, 2006.

67. H. Shacham and B. Waters. Compact proofs of retrievability. In Advances in Cryp-
tology - ASIACRYPT 2008, volume 5350 of Lecture Notes in Computer Science,
pages 90–107. Springer Berlin Heidelberg, 2008.

68. V. Shoup. Advances in Cryptology — EUROCRYPT ’97: International Conference
on the Theory and Application of Cryptographic Techniques Konstanz, Germany,
May 11–15, 1997 Proceedings, chapter Lower Bounds for Discrete Logarithms and
Related Problems, pages 256–266. Springer Berlin Heidelberg, Berlin, Heidelberg,
1997.

69. J. Tsai. A new eﬃcient certiﬁcateless short signature scheme using bilinear pair-

ings. Systems Journal, IEEE, PP(99):1–8, 2015.

70. Y.-M. Tseng, Y.-H. Huang, and H.-J. Chang. Cca-secure anonymous multi-receiver
id-based encryption. In Advanced Information Networking and Applications Work-
shops (WAINA), 2012 26th International Conference on, pages 177–182, March
2012.

71. C. Wang, D. Shi, X. Xu, and J. Fang. An anonymous data access scheme for
vanet using pseudonym-based cryptography. Journal of Ambient Intelligence and
Humanized Computing, pages 1–9, 2015.

72. H. Wang. Identity-based distributed provable data possession in multicloud stor-

age. Services Computing, IEEE Transactions on, 8(2):328–340, 2015.

73. Y. Wang. Transactions on Computational Science XVII, chapter Eﬃcient Identity-
Based and Authenticated Key Agreement Protocol, pages 172–197. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

74. B. Waters. Advances in Cryptology - CRYPTO 2009: 29th Annual International
Cryptology Conference, Santa Barbara, CA, USA, August 16-20, 2009. Proceed-
ings, chapter Dual System Encryption: Realizing Fully Secure IBE and HIBE under
Simple Assumptions, pages 619–636. Springer Berlin Heidelberg, 2009.

75. Y. Xie and Y. Zhang. A secure, service priority-based incentive scheme for delay

tolerant networks. Security and Communication Networks, 9(1):5–18, 2016.

76. P. Xu, Q. Wu, W. Wang, W. Susilo, J. Domingo-Ferrer, and H. Jin. Generating
searchable public-key ciphertexts with hidden structures for fast keyword search.
Information Forensics and Security, IEEE Transactions on, 10(9):1993–2006, 2015.
77. E. Zavattoni, L. Dominguez Perez, S. Mitsunari, A. Sanchez-Ramrez, T. Teruya,
and F. Rodriguez-Henriquez. Software implementation of an attribute-based en-
cryption scheme. Computers, IEEE Transactions on, 64(5):1429–1441, May 2015.

Still Wrong Use of Pairings in Cryptography

23

Appendix

A Application Areas of Pairings

Pairing-based cryptography is being considered for alternative construc-
tions in many areas of cryptographic research. It is an active research
area for deploying novel security and privacy mechanisms, e.g., [5, 9, 18,
21, 27, 30, 35, 37, 42, 50, 53, 62, 69, 71, 76, 77]. These include the following
applications:

Identity based encryption (IBE) [13]: It is a special type of public-
key encryption in which a publicly known identiﬁer is used as a public key.
More concretely, a trusted third party ﬁrst generates its public/private
key pair which is called “master” public key and “master” private key.
Next, a user’s public key is replaced with an identity (e.g., an email, an
address, a photo, a phone number, a post address) and his/her private key
is computed based on the identity and master private key. IBE allows the
user to send an encrypted message to another user using his/her identity
as a public key and the user decrypts it with the corresponding public key.
IBE based schemes do not require public-key generation and distribution
as it exists in the conventional public key systems, which signiﬁcantly
reduce/eliminate the cost and complexity of generating and managing
users’ certiﬁcates (i.e., a public key infrastructure). It has further an in-
teresting property that a user does not have generate his/her private key
ready before another party can send him an encrypted message.

Hierarchical identity-based Encryption (HIBE) [11]: It allows the
private key generator to distribute its computation by delegating to lower-
level private key generators. Furthermore, anonymous HIBE is an exten-
sion of IBE which hides not only the message itself but also the identity of
the users. Anonymous HIBE solutions can be applied to anonymous com-
munication systems and public key encryption systems with a keyword
searching mechanism.

Functional (or Attribute based) Encryption [47, 48]: It uses pair-
ings to generate decryption keys which allows a user possessing an en-
crypted data Enc(x) to compute f (x) of the data for an arbitrary function
f .

24

Authors Suppressed Due to Excessive Length

IBE with threshold decryption [7]: The master key of the trusted
third party of a standard IBE system can be distributed in a (k, n) fashion
among n diﬀerent independent authorities, where at least k of them must
cooperate and collude to perform decryption (using conventional tech-
niques of threshold cryptography like Shamir secret sharing schemes).

Searchable encryption [28]: It allows a user to compute whether a
given keyword exists in an encrypted message without giving away any
information about the message itself. In practice, it is possible to search
any query on an encrypted database without decryption (e.g., patient
medical records, biometric data, personal data, corporate data, intellec-
tual property).

Signatures [10, 67]: Digital signatures is an important primitive which
ensures authentication, integrity of a message, and non-repudiation. Apart
from conventional signature schemes (based on RSA or ECC) pairing/ID
based signatures are constructed because of its nice structural properties
like homomorphic linear authenticators where the authenticators can be
aggregated into only one tag signiﬁcantly reducing the communication
and computational complexity. Other types of pairing-based signature
schemes include short signatures (also without random oracles), blind sig-
natures (where a user obtains a signature from a signer while the signer
does not learn any information about the message being signed), iden-
tity based signatures (also including ID-based blind signatures, hierar-
chical ID-based signatures, ring signatures), chameleon signatures (non-
repudiable and non-transferrable), aggregate signatures (which allows
multiple signatures to be aggregated into one compact signature), ring
signatures (where any group member can sign a message without learn-
ing any information about the signed message), group signatures (which
is similar to ring signatures except that a “group manager” can detect
which group member indeed signed a message), threshold signatures (a
valid signature can be computed only if at least t signers cooperate),
authentication-tree based signatures without random oracles.

New security requirements for cloud & IoT security: privacy
enhancing techniques (like privacy-preserving auctions, anonymous cre-
dentials, or privacy-friendly aggregation for the smart grid), proofs of
retrievability of data for cloud storage systems [67], internet of things
(IoT) [49], e-health systems and wearable technologies [55].

Still Wrong Use of Pairings in Cryptography

25

Other applications: Last but not least, there are also various ID based
mechanisms including authentication [16,51], identity based key-agreement
[20,73], signcryption (which is a public key authenticated encryption, i.e.
including both signing and encrypting operations simultaneously), and
identity based Chameleon hashes [6] (which are collision resistant func-
tions with a trapdoor for ﬁnding collisions).

