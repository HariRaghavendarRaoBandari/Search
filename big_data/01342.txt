6
1
0
2

 
r
a

M
4

 

 
 
]

.

O
L
h
t
a
m

[
 
 

1
v
2
4
3
1
0

.

3
0
6
1
:
v
i
X
r
a

Proof-theoretic strengths of weak theories for

positive inductive deﬁnitions

Toshiyasu Arai

Graduate School of Science, Chiba University

1-33, Yayoi-cho, Inage-ku, Chiba, 263-8522, JAPAN

tosarai@faculty.chiba-u.jp

Abstract

In this note it is shown that a fragment of the theory ID1 of positive
inductive deﬁnitions over natural numbers is predicatively reducible, and
its proof-theoretic ordinal is bounded by ϕω0. In the weak fragment, the
transﬁnite induction axiom for the least ﬁxed points to boolean combina-
tions of positive formulas and single quantiﬁed formulas.

1 Introduction

We consider weak theories for positive inductive deﬁnitions. Let L be a lan-
guage for arithmetic having function constants1 for each elementary recursive
functions. Relation symbols in L are =, <. ∆−
0 denotes the set of bounded
formulas in L, and Π1−
the set of formulas in L, called arithmetical formulas.
The elementary recursive arithmetic EA is the theory in L whose axioms are
deﬁning axioms for function constants, axioms for =, < and ∆−

0

0 -IND:

θ(0) ∧ ∀x(θ(x) → θ(x + 1)) → θ(y)

(1)

for θ ∈ ∆−
0 .

Let L(X) = L ∪ {X} be a language with a unary predicate variable X.
∆0(X) denotes the set of bounded formulas in L(X). EA(X) denotes the theory
in L(X) obtained from EA by replacing ∆0-IND by ∆0(X)-IND.

For an extension T of EA(X), its proof-theoretic ordinal |T | is deﬁned to be
the supremum of the order types | ≺ | of elementary recursive relations ≺ for
which T ⊢ ∀y(∀x ≺ y X(x) → X(y)) → ∀y X(y).

Next let us introduce weak theories for positive inductive deﬁnitions over
natural numbers. For a class Γ of X-positive formulas ϕ(X, x), let L(Γ) =
L ∪ {Rϕ : ϕ ∈ Γ} denote the language obtained from the language L by adding
unary predicate constants Rϕ for each ϕ ∈ Γ. The unary predicate constant

1The proof-theoretic strength does not increase with more constants, e.g., with function

constants for primitive recursive functions.

1

Rϕ is intended to denote the least ﬁxed point of the monotone operator deﬁned
from ϕ: N ⊃ X 7→ {n ∈ N : N |= ϕ[X , n]}. Let us write L(ID) for L(Γall), where
Γall denotes the class of all X-positive formulas ϕ(X, x).

The theory ID1 for non-iterated positive inductive deﬁnitions over natural
numbers is an extension of EA. Complete induction schema (1) is available for
any formulas θ in L(ID). Axioms for the predicate Rϕ are

1.

2.

∀x[ϕ(Rϕ, x) → Rϕ(x)]

∀u[Rϕ(u) → ∀x(ϕ(σ, x) → σ(x)) → σ(u)]

for each L(ID)-formula σ.

(2)

(3)

In weakening the theory ID1, there are three factors. First, to which formulas θ
the complete induction schema (1) is available? Second, which class Φ of positive
formulas ϕ to deﬁne the least ﬁxed point Rϕ is to be considered? Third, which
class Γ of formulas σ to which the axiom (3) is available?

For classes Θ, Γ of formulas in L(Φ), let (Θ, Γ)-ID(Φ) denote the fragment
of ID1 deﬁned as follows. (Θ, Γ)-ID(Φ) is an extension of EA. In (Θ, Γ)-ID(Φ),
the positive formula ϕ is in Φ, the formulas θ in complete induction schema (1)
are in Θ, and the formulas σ in the axiom (3) are in Γ.

When Θ = Γ, let us write Γ-ID(Φ) for (Γ, Γ)-ID(Φ), and when Φ is the class

Φall of all positive formulas, let us write Γ-ID for Γ-ID(Φ).

Next let us turn to a concrete example of a fragment. OT ′(ϑ) denotes a
notation system of ordinals based on {0, Ω, +, ϑ} deﬁned in Deﬁnition 5.8 of [9].
We need only ordinal terms up to ϑ(Ωω), the big Veblen number.

1. 0 ∈ OT ′(ϑ). 0 is the least element in OT ′(ϑ), and K(0) = ∅.

2. If 0 6∈ {βk : k < n} ⊂ OT ′(ϑ) ∩ Ω with ω > in−1 > · · · > i0 (n > 0) and
i0 > 0 ∨ n > 1, then Ωin−1 βn−1 + · · · + Ωi0 β0 ∈ OT ′(ϑ). K(Ωin−1 βn−1 +
· · · + Ωi0 β0) = {βk : k < n}.

3. If β ∈ OT ′(ϑ), then ϑ(β) ∈ OT ′(ϑ) ∩ Ω. K(ϑ(β)) = {ϑ(β)}.

4. ϑ(α) < ϑ(β) ⇔ [α < β ∧ K(α) < ϑ(β)] ∨ [ϑ(α) ≤ K(β)].

5. Each ordinal ϑ(α) is deﬁned to be additively closed. This means that

β, γ < ϑ(α) ⇒ β + γ < ϑ(α).

Note that the system OT ′(ϑ) is ω-exponential-free except ϑ(α) = ωα0 for some
α0.

Let (Π1

1(Π0

3)-CA)− denote the axiom schema of lightface, i.e., set parameter-
3-matrix ϕ: ∃Y ∀n[n ∈ Y ↔ ∀X ϕ(X, n)].

1-Comprehension Axiom with Π0
0 is a subsystem of RCA0 in the language EA(X) with ∆0(X)-IND.

free Π1
RCA∗

2

In [9] it is shown that the wellfoundedness of ordinals up to each ordinal<
ϑ(Ωω) is provable in RCA0 +(Π1
3)-CA)−, and that the wellfoundedness of or-
dinals up to each ordinal< ϑ(Ω·ω) = ϕω0 is provable in RCA∗
3)-CA)−.
According to [8] the proofs of the wellfoundedness are due to A. Weiermann.
On the other side, M. Rathjen[9] showed that RCA0 + (Π1
3)-CA)− can be
embedded in Π1

2-BI0, whose proof-theoretic ordinal |Π1

2-BI0| = ϑ(Ωω), cf. [6].

1(Π0

0 +(Π1

1(Π0

1(Π0

Theorem 1.1 ([9])

1. (A. Weiermann)
1(Π0

|RCA0 +(Π1

3)-CA)−| ≥ ϑ(Ωω) and |RCA∗

0 +(Π1

1(Π0

3)-CA)−| ≥ ϑ(Ω·ω).

2. (M. Rathjen) |RCA0 + (Π1

1(Π0

3)-CA)−| ≤ ϑ(Ωω).

3. |RCA0 + (Π1

1(Π0

3)-CA)−| = ϑ(Ωω).

In [8, 9] it is conjectured that |RCA0 +(Π1

1(Π0

3)-CA)−| = ϑ(Ωω), and even more.

An inspection of the proof in pp. 35-37, [9] shows that Acc-ID(Acc) suﬃces
to prove the wellfoundedness of ordinals up to each ordinal< ϑ(Ω· ω), where Acc
denotes the class of X-positive formulas ϕ(X, x) ≡ [∀y(θ0(x, y) → t0(x, y) ∈ X)]
for a ∆0-formula θ0(x, y) and a term t0(x, y) possibly with parameters other than
x, y. For an elementary recursive relation ≺, ∀y(y ≺ x → y ∈ X) is a typical
example of an Acc-operator. Acc denotes the class of formulas σ(x) which are
obtained from an Acc-operator by substituting any predicate constant R for X

σ(x) ≡ [∀y(θ(x, y) → t(x, y) ∈ R)]

(4)

where θ(x, y) is a ∆−
than x, y. Complete induction schema (1) is available for Acc-formulas θ.

0 -formula and t(x, y) a term possibly with parameters other

Let < be the elementary recursive relation obtained from the relation < on
OT ′(ϑ) through a suitable encoding. For the formula ∀y(y < x → y ∈ X) in
Acc, let W denote the accessible part of <. Namely the axiom (2) is ∀y(y <
x → y ∈ W ) → x ∈ W , and the axiom (3) runs u ∈ W → ∀x(∀y(y < x →
σ(y)) → σ(x)) → σ(u) for σ ∈ Acc.

Lemma 1.2 Acc-ID(Acc) ⊢ ∀β < ϑ(Ω · k)(β ∈ W ) for each k < ω.

Proof. We see that the following are provable in Acc-ID(Acc). Note that
A, B, C ∈ Acc for the formulas A, B, C below.

(a) x ∈ W → ∀y(y < x → y ∈ W ) by the axiom (3) for the formula A(x) ⇔

∀y(y < x → y ∈ W ).

(b) y ∈ W → x ∈ W → x + y ∈ W by the axiom (3) for the formula

B(y) ⇔ (x + y ∈ W ).

3

(c) Let M = {α ∈ OT ′(ϑ) : K(α) ⊂ W }, α <Ω β :⇔ (α, β ∈ M ∧ α < β), and
P rogΩ(X) :⇔ ∀α ∈ M [∀β <Ω α(β ∈ X) → α ∈ X]. Then P rogΩ(C) for
C(α) ⇔ (ϑ(α) ∈ W ).

This is seen as in Lemma 5.17 of [9] using (a), (b) and Acc-IND.

(d) For each k and any σ ∈ Acc, P rogΩ(σ) → ∀β <Ω Ω · k σ(β).

This is seen as in Lemma 5.21, [9] by the axiom (3) for the formula D(ζ) ⇔
σ(Ω · k + ζ).

Note that if σ ∈ Acc, then so is D.

Combining (c) and (d), we obtain ∀β <Ω Ω · k C(β), i.e., ∀β <Ω Ω · k(ϑ(β) ∈ W )
for each k. Using this and (b), we see that ∀β < ϑ(Ω · k)(β ∈ W ) by Acc-
induction on the length of β.

This shows Lemma 1.2.

✷

Remarks.

1. Note that the intuitionistic theory Acc-IDi(Acc) suﬃces to prove the well-

foundedness up to ordinals< ϑ(Ω · ω).

2. Let ∀∆0 denote the class of formulas σ(x) of the form ∀y θ(x, y, R) for
a bounded formula θ. If the axiom (3) is applied to a formula σ(x) ⇔
[∀y(θ(x, y, R) → t(y) ∈ R)] ∈ ∀∆0 for a bounded formula θ in which
R = W occurs positively, then one can show the wellfoundedness up to
each ordinal ϑ(Ωω). Speciﬁcally let

ζ ∈ σ0 :⇔ σ0(ζ) ⇔ (M ∩ (α + Ωℓζ) ⊂ C)

(5)

Namely σ0(ζ) denotes ∀β(β ∈ M ∧ β < α + Ωℓζ → ϑ(β) ∈ W ). As
in Lemma 5.19 of [9] we see that ∀α(M ∩ α ⊂ C → M ∩ (α + Ωℓ) ⊂
C)∧M ∩α ⊂ C → ∀ζ(ζ ⊂ σ0 → ζ ∈ σ0). The axiom (3) yields ∀α(M ∩α ⊂
C → M ∩ (α + Ωℓ) ⊂ C) ∧ M ∩ α ⊂ C → W ⊂ σ0, and hence we
obtain ∀α(M ∩ α ⊂ C → M ∩ (α + Ωℓ) ⊂ C) → ∀α(M ∩ α ⊂ C →
M ∩ (α + Ωℓ+1) ⊂ C) in (Acc, ∀∆0)-ID(Acc). By meta induction on ℓ we
obtain (Acc, ∀∆0)-ID(Acc) ⊢ ∀β < ϑ(Ωℓ)(β ∈ W ).

An extension Pos-ID of Acc-ID(Acc) is next introduced. A formula is said to
be positive [negative] if each predicate constant Rϕ for least ﬁxed point occurs
only positively [negatively] in it, resp. Pos denotes the class of all positive
formulas. Pos-ID is denoted as ID∗
1 in [1]. The following
theorem is shown by D. Probst[5], and independently by B. Afshari and M.
Rathjen[1].

1 ↾ in [5], and as ID∗

Theorem 1.3 (Probst[5], Afshari and Rathjen[1]) |Pos-ID| = ϑ(Ω · ω).

Let us introduce another weak fragment of ID1.

In the fragment the ax-
iom (3) is also applied to boolean combinations of positive formulas and single

4

quantiﬁed formulas in which the least ﬁxed points Rϕ may occur positively and
negatively.

Let B denote the set of boolean combinations of atomic formulas t ∈ Rϕ
and arithmetical formulas, and ∀B the set of single quantiﬁed formulas ∀x θ for
θ ∈ B. Also B(Pos, ∀B) the set of boolean combinations of positive formulas
and formulas in ∀B.

Then T h(N) + (Pos,B(Pos, ∀B))-ID denotes the theory, in which each true
arithmetical sentence is an axiom, X-positive formulas ϕ(X, x) are arbitrary, the
formulas θ in the the complete induction schema (1) are restricted to positive
formulas, and the formulas σ in the axiom (3) are restricted to σ ∈ B(Pos,∀B).
Note that (Pos,B(Pos, ∀B))-ID proves that Rϕ is the ﬁxed point of positive
ϕ, i.e., (Pos,B(Pos, ∀B))-ID ⊢ Rϕ = ϕ(Rϕ) since ϕ(ϕ(Rϕ)) ⊂ ϕ(Rϕ) for the
positive formula ϕ(Rϕ, x).

Also note that ∀∆0 6⊂ B(Pos,∀B). Speciﬁcally σ0 6∈ B(Pos,∀B) for the

formula σ0 in (5), Remark 2.

In this note we show the following theorem 1.4.

Theorem 1.4

|T h(N) + (Pos,B(Pos, ∀B))-ID| = ϑ(Ω · ω)

It is clear that the theory (Pos,B(Pos, ∀B))-ID is an extension of the theory

Acc-ID(Acc) in Lemma 1.2.

Let ≺ be an elementary recursive relation on natural numbers. Let us write
E for Rψ, where ψ(X, x) :⇔ ∀y ≺ x X(y). We show the following Lemma 1.5.

Lemma 1.5 If T h(N) + (Pos,B(Pos, ∀B))-ID ⊢ ∀y E(y), then its order type
| ≺ | < ϑ(Ω · ω).

2 Finitary analyses

In this section we prove Lemma 1.5. Our proof is based on ﬁnitary analysis of
ﬁnite proof ﬁgures using substitution rules due to G. Takeuti 2.

Let ≺ be an elementary recursive relation. Assume that ∀y E(y) is provable
in T h(N) + (Pos,B(Pos, ∀B))-ID for the accessible part E = Rψ of ≺, ψ(X, x) ⇔
∀y ≺ x X(y).

In what follows R stands for a predicate constant Rϕ of the least ﬁxed point

of the monotonic operator deﬁned from a positive formula ϕ(X, x).

2.1 Preparations

We assume that for each predicate symbol R or set variable Xi, their comple-
ment or negation ¯R, ¯Xi are in the language. For example, we have negations

2I am aware that such a ﬁnitary analysis does not appeal to a wide audience, and suppose
that the theorem could be proved through inﬁnitary derivations such as Ω-rule due to W.
Buchholz.

5

6=, 6< of the predicate constants =, <. Logical connectives are ∨, ∧, ∃, ∀. Nega-
tions ¬A of formulas A are deﬁned recursively by de Morgan’s law and elimi-
nation of double negations. A → B denotes ¬A ∨ B for formulas A, B. ¬A is
also denoted by ¯A.

Let us reformulate T in one-sided sequent calculus. A closed term t is iden-

tiﬁed with the numeral n of the value of t.

The followings are initial sequents.

1. (logical initial sequent)

¯L, L, Γ

where L is a literal.
Each of ¯L and L is a principal formula of the initial sequent.

2. (equality initial sequent)

t 6= s, ¯L(t), L(s), Γ

for literals L(x).
Each of t 6= s, ¯L(t) and L(s) is a principal formula of the initial sequent.

3. (arithmetical initial sequent)

A, Γ

where A is one of formulas t = t, a deﬁning axiom for an elementary
recursive function, and a true arithmetical sentence in L.

A is the principal formula of the initial sequent.

Inference rules are (∀)CNF, (W)DNF, (∀), (∃), (V), (W), (∧), (∨), (R), ( ¯R), and

(weak), (cut), (ind), (sub). Inferences (∀)CNF, (W)DN F are condensed.

1.

Γ

Γ, ∆

(weak)

There is no principal formula nor auxiliary formula of (weak).

A weakening (weak) is tacitly used in writing a proof. For example,

Γ0, A0 Γ1, A1

Γ0, Γ1, ∆, A0 ∧ A1

is an abbreviation for

Γ0, A0

Γ0, Γ1, A0

(weak)

Γ1, A1

Γ0, Γ1, A1

Γ0, Γ1, A0 ∧ A1

Γ0, Γ1, ∆, A0 ∨ A1

6

(weak)
(∧)

(weak)

2.

3.

4.

5.

6.

7.

Γ, ¯C C, ∆

Γ, ∆

(cut)

where C is the cut formula of the (cut). C and ¯C are auxiliary formulas
of the (cut).

h{Lqr(a) : r < Rq} ∪ ∆ : q < Qi

∀yVq<QWr<Rq

Lqr(y), ∆

(∀)CNF

where a is an eigenvariable, and for each q < Q, {Lqr(a) : r < Rq} ∪ ∆ is
an upper sequent. Also each Lqr(a) is one of positive formulas, negative
formulas, ∀B-formulas and ∃B-formulas.

∀yVq<QWr<Rq

iliary formula.

Lqr(y) is the principal formula, and each Lqr(a) is an aux-

We assume that each Lqr(a) is not a disjunctive formula.

hLq0r, ∆ : r < Rq0 i
Lqr, ∆

Wq<QVr<Rq

(W)DNF

where q0 < Q and for each r < Rq0 , Lq0r, ∆ is an upper sequent. Also
each Lqr is one of positive formulas, negative formulas, ∀B-formulas and
∃B-formulas.

Lqr is the principal formula, and each Lq0r is an auxiliary

formula. We assume that each Lqr is not a conjunctive formula.

Wq<QVr<Rq

A(a), Γ

∀x A(x), Γ

(∀)

where a is an eigenvariable.

∀x A(x) is the principal formula, and A(a) is the auxiliary formula.

A(t), Γ

∃x A(x), Γ

(∃)

∃x A(x) is the principal formula, and A(t) is the auxiliary formula.

hAi, ∆ : i < Ii

Vi<I Ai, ∆

(V)

7

8.

9.

where for each i < I, Ai, ∆ is an upper sequent. Also each Ai is either one
of positive formulas, negative formulas, ∀B-formulas and ∃B-formulas, or
a disjunction of these formulas.

Vi<I Ai is the principal formula, and each Ai is an auxiliary formula.

Ai0 , ∆

Wi<I Ai, ∆

(W)

where i0 < I. Also each Ai is either one of positive formulas, negative for-
mulas, ∀B-formulas and ∃B-formulas, or a conjunction of these formulas.

Wi<I Ai is the principal formula, and Ai0 is the auxiliary formula.

(a)

Ai, Γ

A0 ∨ A1, Γ

(∨)

for an i = 0, 1.
A0 ∨ A1 is the principal formula, and Ai is the auxiliary formula.

(b)

A0, Γ A1, Γ
A0 ∧ A1, Γ

(∧)

A0 ∧ A1 is the principal formula, and each Ai is an auxiliary formula.

10. Let ϕ(X, x) be an X-positive formula.

(a)

∃x[ϕ(X, x) ∧ ¯X(x)], X(t), Γ

Rϕ(t), Γ

(R)

X is an eigenvariable, Rϕ(t) is the principal formula, and ∃x[ϕ(X, x)∧
¯X(x)] and X(t) are auxiliary formulas.

(b) Let σ be a DNF Wi<I Vj σij , where each σij is one of of positive

formulas, negative formulas, ∀B-formulas and ∃B-formulas (including
σij = X).

∀x[ ¯ϕ(σ, x) ∨ σ(x)], Γ ¯σ(t), Γ

¯Rϕ(t), Γ

( ¯R)

a is the eigenvariable, ¯Rϕ(t) is the principal formula, and ∀x[ ¯ϕ(σ, x)∨
σ(x)] and ¯σ(t) are auxiliary formulas.
We can assume that

σ contains a positive occurrence of a R

(6)

For otherwise let σ0 ≡ (Rϕ(0) ∧ ¯Rϕ(0)), and σ0 ∨ σ ↔ σ.

8

Using these inference rules (R), ( ¯R), (2) and (3) are provable.

11. Let θ be a positive formula.

∆, θ(0) ∆, ¯θ(a), θ(a + 1)

¯θ(t), ∆

∆

(ind)

where a is the eigenvariable.

θ(x) is the induction formula, t the induction term. There is no principal
formula nor auxiliary formula of (ind).

12. Moreover let us introduce an inference rule (sub), a partial substitution:

∆(X), Γ(X)
∆(X), Γ(σ)

(sub)X
σ

where X is an eigenvariable and

each formula in ∆(X) ∪ Γ(X) is positive

(7)

Γ(σ) = {γ(σ) : γ(X) ∈ Γ(X)}, where γ(σ) denotes the result of replacing
every occurrence of X(t) by σ(t) in γ(X).

There is no principal formula nor auxiliary formula of (sub). σ is a DNF

Wi<I Vj σij , where each σij is one of of positive formulas, negative formu-

las, ∀B-formulas and ∃B-formulas (including σij = Y ). Again we assume
that

σ contains a positive occurrence of a R

(6)

No ﬁrst-order free variable occurs below the inference rule (sub), i.e., the
inference (sub) is in the closed trunk deﬁned below. In particular Γ(X)
contains no ﬁrst-order free variable.

A proof is deﬁned from these initial sequents and inference rules.

An ordinal o(Γ) = o(Γ; P ) is assigned to an occurrence of a sequent Γ in a

proof P as follows.

1. o(Γ) = 1 if Γ is an initial sequent.

In what follows let Γ be a lower sequent of an inference rule J.

2. o(Γ) = o(∆) if J is a (weak) with its upper sequent ∆.

3. o(Γ) = o(∆0)#o(∆1) if J is a (cut) with its upper sequents ∆0 and ∆1.

α#β denotes the natural (commutative) sum of α and β.

4. Let J be an inference other than (cut), (ind) and (sub) with its upper

sequents ∆0, . . . , ∆n, and its principal formula A.

o(Γ) = (cid:26) o(∆0)# · · · #o(∆n)#Ω

o(∆0)# · · · #o(∆n) + 1

a predicate R occurs negatively in A
otherwise

9

5. Let J be an (ind) with its upper sequents ∆0, ∆1, ∆2, and θ(x) the induc-

tion formula of J.

o(Γ) = (cid:26) o(∆0)#o(∆1)#o(∆2)#Ω a predicate R occurs in θ(x)

o(∆0)#o(∆1)#o(∆2) + 1

otherwise

6. o(Γ) = ϑ(o(∆)) if J is a (sub) with its upper sequent ∆.

It is clear that o(Γ) < Ω · ω for any Γ in a proof P . Moreover o(P ) := o(Γend) <
ϑ(Ω · ω) if the last inference rule in the proof P is a (sub) with the end sequent
Γend.

Let for α, β ∈ OT ′(ϑ)

α ≪ β :⇔ α < β ∧ K(α) < ϑ(β) and α≪β :⇔ α = β ∨ α ≪ β

Proposition 2.1

1. K(α) < ϑ(α).

2. α ≪ β ⇒ ϑ(α) ≪ ϑ(β).

3. 0 ≪ α if α > 0.

4. 1 ≪ α if α > 1 := ϑ(0).

5. α ≪ β ≪ γ ⇒ α ≪ γ.

6. α ≪ β ⇒ α#γ ≪ β#γ.

By our assumption there exists a proof P1 of E(a) for a variable a, in which

(sub) does not occur.

By substituting arbitrary numeral m for the free variable a, and appending

a vacuous (sub) in the end, we get a proof P0:

.... P1

E(m)
E(m)

(sub)

P0 =

By eliminating (cut)’s partially we may assume that any cut formula is either

an arithmetical formula or one of atomic formulas Rϕ(t), X(t).

Deﬁnition 2.2 A proof P is said to be simple if it enjoys the following four
conditions.

1. P ends with a (sub).

2. Its end-sequent is of the form ∆, Λ for a set ∆ of false arithmetical sen-

tences and Λ = {E(m0), . . . , E(mn)} 6= ∅ for some numerals mi.

3. For any cut formula C in P , one of the following conditions holds.

(a) C is either an arithmetical formula or a literal.

10

(b) C ∈ B(Pos,∀B).
(c) Either C ∈ {∃x[ϕ(σ, x)∧¯σ(x)], ϕ1[σ]} or ¯C ∈ {∃x[ϕ(σ, x)∧¯σ(x)], ϕ1[σ]}
for some positive formulas ϕ(X, x), ϕ1[X] and a σ ∈ B(Pos,∀B) in
which an R occurs positively, (6).
Let C ∈ {∃x[ϕ(σ, x) ∧ ¯σ(x)], ϕ1[σ]}. There is an inference (sub) with
its eigenvariable X such that an ancestor C is in its lower sequent,
and ∃x[ϕ(X, x) ∧ ¯X(x)] in the upper sequent when C ≡ (∃x[ϕ(σ, x) ∧
¯σ(x)]). When C ≡ ϕ1[σ], ϕ1[X] is in its upper sequent. The same
holds in the case ¯C ∈ {∃x[ϕ(σ, x) ∧ ¯σ(x)], ϕ1[σ]}.

4. If inferences rules (sub)X

σ0 and (sub)X

σ1 occurs in P , then σ0 ≡ σ1.

A (cut) with a cut formula ∃x[ϕ(σ, x) ∧ ¯σ(x)] arises when we replace a (cut)
with a cut formula Rϕ(t) by a (cut) with an auxiliary formula ¬∃x[ϕ(σ, x)∧¯σ(x)]
of an inference ( ¯R). In reducing the cut of a ϕ(σ, t), (cut)’s with cut formulas
ϕ1[σ] are produced for subformulas ϕ1[X] of ϕ(X, x).

Note that the third case on cut formulas includes when the variable X does
not occur in ϕ1[X]. This means that either C or ¯C is positive, and there exists
a (sub) such that a positive C or ¯C is in its lower and upper sequent.

It suﬃces to show the following Lemma 2.3 by transﬁnite induction on or-

dinals o(P ).

Lemma 2.3 Let P be a simple proof with its end-sequent ∆, Λ, where ∆ is a
set of false arithmetical closed formulas and Λ a non-empty set of atoms E(m)
with numerals m. Then

|P | ≤ o(P )

where |m|≺ = sup{|k|≺ + 1 : k ≺ m} and |P | = min{|m|≺ : E(m) ∈ Λ}.

For a simple proof P in the lemma, several simple proofs {Pι}ι are con-
structed so that the lemma holds for P assuming that the lemma holds for each
Pι and o(Pι) < o(P ).

2.2 Proof of Lemma 2.3

We follow largely pp. 105-114, 150-153 in [7] and [2] to prove Lemma 2.3, but
we should be stingy in rewriting cut inferences. An iteration of exponential
functions on ordinals arises when we introduce so called cross cuts in lower cut
ranks in place of cuts in higher ranks. The resulting ordinal would be much
bigger than ϑ(Ω · ω). The only exponential function available for us is the
function α 7→ ϑ(α). Using it, we have, e.g., ϑ(ϑ(ϑ(β)#α)#α) < ϑ(Ω#α) if
ϑ(β) < ϑ(Ω#α). In replacing a cut inference by cuts (with lower ranks), cuts
are divided by substitution inferences (sub) and arranged vertically, not hori-
zontally as in the usual procedure with cross cuts.

Relations between occurrences A, B of formulas in a proof such as ‘A is a
descendant of B’ or equivalently ‘B is an ancestor of A’, and ‘an occurrence of

11

inference rule is implicit or explicit ’ are deﬁned as in Deﬁnition 9.7, pp 78-79 of
[7] and [3].

Deﬁnition 2.4 Let P be a proof whose end-sequent contains no ﬁrst-order free
variable. The closed trunk of such a proof P consists of sequents such that no
ﬁrst-order free variable occurs in and below the sequents. Namely, a sequent
in the closed trunk iﬀ there is no inference rule (∀)CNF, (∀), (ind) introducing
eigenvariables below it.

An inference rule is said to be in the closed trunk if its lower sequent is in the
closed trunk. A boundary inference is an inference such that its lower sequent
is in the closed trunk, but not its upper sequents. A boundary inference is one
of (∀)CNF, (∀), (ind).

Let P be a simple proof of ∆, Λ for a set ∆ of false arithmetical closed for-

mulas, and a non-empty set Λ = {E(m0), . . . , E(mn)}.

Case 1. The case when there is an explicit inference rule in the closed trunk of
P .

Then the descendant of the principal formula of such an explicit inference is

either a false arithmetical sentence A or a formula E(t) with a closed term t.

Let J be a lowest explicit inference rule.
For example let P be the following:

....

A(a), Γ

Pick an n such that A(n) is false, and substitute n for the eigenvariable a to get
the following P ′.

∀x A(x), Γ

∀x A(x), ∆

....

....

.... a := n

A(n), Γ

∀x A(x), A(n), Γ

∀x A(x), A(n), ∆

Obviously P ′ is simple. Form Proposition 2.1 we see that o(A(n), Γ; P ′) =
o(A(a), Γ; P ) ≪ o(A(a), Γ; P )#1 = o(∀x A(x), Γ; P ), and hence o(P ′) < o(P ).

Next consider the case when the descendant of the principal formula of J is

a formula E(t). Let n denote the value of the closed term t.

....

Γ, ∀x ≺ t E(x)

Γ, E(t)

....

∆, Λ, E(t)

(E)

12

Pick an m ≺ n arbitrarily, and by inversion, get a simple proof P ′ of m 6≺
t, ∆, Λ, E(t), E(m) with the false arithmetical closed formula m 6≺ t.

.... a := m

Γ, m 6≺ t, E(m)

m 6≺ t, Γ, E(t), E(m)

....

m 6≺ t, ∆, Λ, E(t), E(m)

Since o(m 6≺ t, Γ, E(t), E(m); P ′)≪o(Γ, ∀x ≺ t E(x); P ) ≪ o(Γ, E(t); P ), we
obtain min({|m|≺, |n|≺} ∪ {|k|≺ : E(k) ∈ Λ}) ≤ o(P ′) < o(P ) for any m ≺ n by
Proposition 2.1. Therefore min{|k|≺, |n|≺ : E(k) ∈ Λ} ≤ o(P ).

By virtue of Case 1 we can assume that the closed trunk contains no explicit

inference rule.

Case 2. The case when P contains a (cut) whose cut formulas A, ¯A are arith-
metical closed formula.

Let P be the following with true arithmetical closed formula A.

....
Γ, ¯A

....

A, Φ

Γ, Φ

....

∆, Λ

(cut)

Let P ′ be the following:

....
Γ, ¯A
¯A, Γ, Φ....

¯A, ∆, Λ

with the false arithmetical sentence ¯A in the new end-sequent. Obviously P ′ is
simple. We have o(A, Φ; P ) > 0 and o( ¯A, Γ, Φ; P ′) = o(Γ, ¯A; P ) ≪ o(Γ, Φ; P ).
Hence o(P ′) < o(P ) by Proposition 2.1.

Case 3. The case when P contains a (cut) such that its lower sequent contains
one of cut formulas.

....

Γ, A

....

¯A, A, Φ

(cut)

Let P ′ be the following:

Γ, Φ, A

....

Γ, A

Γ, Φ, A

13

Obviously P ′ is simple. We see o(P ′) < o(P ) as in Case 2.

Case 4. The case when P contains a sequent Γ such that {¬A, A} ⊂ Γ for an
atomic formula A, and Γ is not an initial sequent in P .

Let P be the following.

P =

¬A, A, Γ

.... Q
....

∆, Λ

Replace the subproof Q by the logical initial sequent ¬A, A, Γ to get a simple
P ′

¬A, A, Γ....

∆, Λ

P ′ =

We see o(P ′) < o(P ) from 1 = o(¬A, A, Γ; P ′) ≪ o(¬A, A, Γ; P ) and Proposi-
tion 2.1.

Case 5. The case when P contains an (ind) J0 on the boundary.
Let P be the following with the value n of the induction term.

∆, θ(0) ∆, ¯θ(a), θ(a + 1)

¯θ(n), ∆

∆

(ind)

Case 5.0. The predicates Rϕ, ¯Rϕ does not occur in the induction formula θ.

Then θ(x) is an arithmetical formula. Let Λ0 be the end-sequent of P . In

each case below it is clear that P ′ is simple, and o(P ′) < o(P ).

Case 5.01. θ(0) is false.

Let P ′ be the following.

Case 5.02. ¯θ(n) is false.

Let P ′ be the following.

∆, θ(0)
∆, θ(0)

Λ0, θ(0)

....

....

....

....

¯θ(n), ∆
¯θ(n), ∆

¯θ(n), Λ0

Case 5.03. Otherwise.

14

Then θ(0) ∧ ¯θ(n) is true. Pick an m < n so that θ(m) ∧ ¯θ(m + 1) is true. Let

P ′ be the following.

.... a := m
∆, ¯θ(m), θ(m + 1)
∆, ¯θ(m), θ(m + 1)

....

Λ0, ¯θ(m), θ(m + 1)

Case 5.1. Either Rϕ or ¯Rϕ occurs in θ.

Then we have o(∆) = o(∆0)#o(∆1)#o(∆2)#Ω for the upper sequents ∆0, ∆1, ∆2

of the (ind) J0. Let P be the following.

....

∆, ¯θ(a), θ(a + 1)

∆, θ(0)

∆

....

Λ

¯θ(n), ∆

J0

where Λ denotes the the upper sequent of the uppermost (sub) below J0.

Let Q0 be the following.

∆, θ(0)
∆, θ(0)

....

Λ, θ(0)

For m < n, let Qm+1 be constructed from Qm recursively as follows.

.... Qm

Λ, θ(m)
Λ, θ(m)

(sub)

.... a := m
∆, ¯θ(m), θ(m + 1)
....

Λ, ∆, θ(m + 1)

Λ, θ(m + 1)

(cut)

Finally let P ′ be the following.

.... Qn

Λ, θ(n)
Λ, θ(n)

(sub)

¯θ(n), ∆

Λ, ∆

....

Λ

(cut)

It is easy to see that P ′ is simple.

15

Inductively we see that o(Qm) ≪ o(Λ; P ) from Proposition 2.1 and the fact
that ϑ is not applied between ∆ and Λ since there is no (sub) there. Hence
o(Λ; P ′) ≪ o(Λ; P ).

Deﬁnition 2.5 An inference other than (weak), (ind), (sub) is said to be weak
in a proof P if there is a weak auxiliary formula of the inference, while an
occurrence of a formula is weak in P if any ancestor of the formula in P is not
a principal formula of an inference nor of an initial sequent.

Case 6. The case when P contains a weak inference J.

Let P be the following.

.... Q

∆, C
Γ

· · ·

· · ·

J

where ∆ ⊂ Γ and the auxiliary formula C in ∆, C is weak in P .

Let P ′ be the following:

.... Q′

∆
Γ

(weak)

where Q′ is obtained from Q by eliminating all ancestors of C.

We obtain o(P ′) < o(P ).

Deﬁnition 2.6 Let P be a proof whose end-sequent contains no ﬁrst-order free
variable.

1. A (cut) is deﬁned to be analytic in P if the cut is in the closed trunk of
P and each cut formula of this (cut) has an ancestor which is a principal
formula of an inference rule in the closed trunk.

2. An analytic (cut) in P is said to be fully analytic if each cut formula of
the (cut) has an ancestor which is the principal formula of an inference
rule in the closed trunk up to a boundary or to an initial sequent. This
means that for each cut formula C of the (cut), there is an inference J0 in
the closed trunk of P such that the principal formula of J0 is an ancestor
C ′ of the cut formula C, where C ′ may diﬀer from C due to an inference
(sub). Furthermore if J0 is not a boundary, i.e., if J0 is an inference other
than (∀)CNF, (∀), (ind), then for each non-literal auxiliary formula C1 of
J0, there exists an inference J1 in the closed trunk of P such that the
principal formula of J1 is an ancestor C ′
1 of the auxiliary formula C1, and
if J1 is not a boundary, then for each non-literal auxiliary formula C2 of
J1, there exists an inference J2 in the closed trunk of P such that the
principal formula of J1 is an ancestor C ′
1 of the auxiliary formula C1, and
so forth.

We need to strengthen Sublemma 12.9 in p.109 and 13.11) in p. 151 of [7]

slightly.

16

Lemma 2.7 Let P be a proof enjoying the following conditions.

1. The end-sequent of P contains no ﬁrst-order free variable.

2. The closed trunk of P contains no explicit inference.

3. The closed trunk of P contains an implicit inference.

4. The closed trunk of P contains no (cut) whose cut formulas are arithmeti-

cal closed formula.

5. The closed trunk of P contains no (cut) such that its lower sequent con-

tains one of cut formulas.

6. The closed trunk of P contains no (ind) on its boundary.

7. The closed trunk of P contains no weak inference.

Then P contains a fully analytic cut in its closed trunk.

Proof. Let P be a proof enjoying the seven conditions in the lemma. First we
show that the closed trunk contains an analytic cut.

Claim 2.8 The closed trunk of P contains a (cut) J enjoying the following two
conditions (V) and (I).

(V) One of cut formulas of J is a descendant of a principal formula of an

implicit inference in the closed trunk.

(I) The lower sequent of J contains no descendant of a principal formula of

any implicit inference in the closed trunk.

Proof of Claim 2.8.

The closed trunk of P contains an implicit inference by the third condition.
This means that there is a (cut) in the closed trunk enjoying the condition (V).
Consider a lowest (cut) J in the closed trunk enjoying (V).

.... Q

A, ∆

Γ, ¬A

Γ, ∆

J

Then the lower sequent Γ, ∆ contains no descendant of a principal formula of
any any implicit inference in the closed trunk. In other words J enjoys both
conditions (V) and (I). This shows Claim 2.8.
✷

Now pick an uppermost (cut) J in the closed trunk enjoying two conditions
(V) and (I). We claim that J is an analytic cut. Let ¬A in the left upper sequent
of J be a descendant of a principal formula of an implicit inference rule in the
closed trunk by (V). Assume that A is not a descendant of a principal formula
of any implicit inference rule in the closed trunk.

17

Next let an inference rule I in the closed trunk of Q be an implicit inference
of P . Since no descendant of the principal formula of I is in the right upper
sequent A, ∆ of J by our assumption and (I), there is a descendant of the
principal formula of I which is a cut formula of a (cut) in Q. This means that
I is implicit in Q. Hence for any inference rule in the closed trunk of Q, it is
implicit in Q iﬀ it is implicit in P .

By the second condition and the assumption Q contains no explicit (in Q)
inference. On the other side, the (cut) J is not weak by the seventh condition.
In particular A in the right upper sequent of J is a descendant of a principal
formula of an inference in Q. Hence the closed trunk of Q contains an inference,
which must be implicit in Q. Therefore the proof Q enjoys the seven conditions
in the lemma. Then the closed trunk of Q would contain a (cut) enjoying the two
conditions (V) and (I) for Q by Claim 2.8. Any such (cut) enjoys the condition
(I) for P as seen above. This contradicts the choice of J, which is a topmost
such cut.

Therefore J has to be an analytic cut.

✷

We saw that there is an analytic cut in the closed trunk of P enjoying the
condition (I) in Claim 2.8. Let J be a topmost such cut. We claim that J is
fully analytic.

.... Q0

A1, ∆0
A, ∆0

· · ·

J0

· · ·

Γ, ¬A

Γ, ∆

.... Q

A, ∆

J

where J0 is a topmost inference in the closed trunk of P such that its principal
formula A in the lower sequent is an ancestor of the cut formula A of J. A1 in
an upper sequent of J0 is a non-literal auxiliary formula of J0. Suppose that
the upper sequent A1, ∆0 is in the closed trunk of P .

Assume that A1 is not a descendant of the principal formula of any inference

in the closed trunk.

Claim 2.9 Let I be an inference with a principal formula B in the closed trunk
of Q0. The principal formula B of I has no descendant in ∆0 of the upper
sequent of J0.

Proof of Claim 2.9. Suppose that the principal formula B of I has a descendant
in ∆0. On the other J0 is a topmost inference such that its principal formula is
an ancestor of the cut formula A of J, and J enjoys the condition (I). Hence I
is implicit in Q, and Q enjoys seven conditions in the lemma. Then the closed
trunk of Q contains an analytic cut enjoying the condition (I). However J is a
topmost such cut. This is a contradiction. This shows Claim 2.9.
✷

We see that there is no explicit (in Q0) inference in the closed trunk from
Claim 2.9 and our assumption. Hence any inference rule I in the closed trunk

18

of Q0, which is implicit in P , is implicit in Q0. On the other side, the inference
J0 is not weak by the seventh condition. In particular the auxiliary formula A1
is a descendant of a principal formula of an inference in Q0. Hence the closed
trunk of Q0 contains an inference, which must be implicit in Q0. Therefore the
proof Q0 enjoys the seven conditions in the lemma. Then the closed trunk of Q0
would contain an analytic cut enjoying the condition (I). This is a contradiction.
Therefore there exists an inference in the closed trunk whose principal for-
mula is an ancestor of the auxiliary formula A1. Let J1 be a topmost such
inference, and A2 a non-literal auxiliary formula of J1. Then we see similarly
as above that there exists an inference in the closed trunk whose principal for-
mula is an ancestor of the auxiliary formula A2, and so on. Therefore J is fully
analytic. This shows Lemma 2.7.
✷

By virtue of Case 1-6, we can assume that P enjoys the conditions in Lemma
2.7 except the third. Assume that the closed trunk of P contains no implicit
inference. Then by the sixth condition any inference in the closed trunk is one
of (weak), (cut), (sub), and the closed trunk of P is a whole of P . No ﬁrst-
order free variable occurs in P , and any initial sequent is a logical one by the
fourth condition. Each literal E(m) in the end-sequent is a weak formula. Each
false arithmetical sentence in the end-sequent is also weak. These as well as
inferences (weak) are eliminable, and we get a proof of the empty sequent from
logical initial sequents using (cut) and (sub). Substitute formulas σ for the
variable X when (sub)X
σ occurs in the proof. Note that substituted formulas
are identical for substitutions (sub)X with the same variable X by the fourth
condition in Deﬁnition 2.2. This results in a proof of the empty sequent from
logical initial sequents and (cut)’s. Obviously such a proof does not exist. Thus
the closed trunk of P contains an implicit inference. Therefore P enjoys the
seven conditions in Lemma 2.7 from which we see that the closed trunk of P
contains a fully analytic cut J0. Let C be the cut formula of J0

Case 6. The case when the cut formula C of J0 is an atomic formula R(t) with
a closed term t and R = Rϕ. Let n denote the value of the closed term t.

Let P be the following with an analytic cut J0.

Γ, ∃x[ϕ(X, x) ∧ ¯X(x)], X(n)

Γ, R(n)

....

Γ0, R(n)

(R)

.... Q0

∀x[ ¯ϕ(σ, x) ∨ σ(x)], ∆

¯R(n), ∆

....

¯R(n), ∆0

Γ0, ∆0

....

Λ

.... Q1

¯σ(n), ∆

( ¯R)

J0

where σ is either a variable Y or a boolean combination of positive formulas
and ∀B-formulas. Λ denotes the upper sequent of the uppermost (sub) below

19

J0. Also (R) in the left upper part and ( ¯R) in the right upper part of J0 are
inference rules such that their principal formulas R(n), ¯R(n) has descendants
R(n), ¯R(n), which are cut formulas of J0.

Q0[Q1] denotes the subproof ending with the left upper sequent ∀x[ ¯ϕ(σ, x) ∨
σ(x)], ∆ [with the right upper sequent ¯σ(n), ∆] of the boundary inference ( ¯R).

Let P ′ be the following.

Γ, ∃x[ϕ(X, x) ∧ ¯X(x)], X(n)

Γ, R(n), ∃x[ϕ(X, x) ∧ ¯X(x)], X(n)

Γ0, R(n), ∃x[ϕ(X, x) ∧ ¯X(x)], X(n)

Γ0, ∆0, ∃x[ϕ(X, x) ∧ ¯X(x)], X(n)

....

¯R(n), ∆0

....

....

Λ, ∃x[ϕ(X, x) ∧ ¯X(x)], X(n)
Λ, ∃x[ϕ(σ, x) ∧ ¯σ(x)], σ(n)

(sub)

.... Q0

∀x[ ¯ϕ(σ, x) ∨ σ(x)], ∆

.... Q1

¯σ(n), ∆

....

Γ0, R(n)

Γ0, ∆0, Λ

....

Λ, Λ

¯R(n), ∆, Λ

....

¯R(n), ∆0, Λ

It is easy to see that P ′ is simple. We have o( ¯R(n), ∆; P ) = Ω#o(Q0)#o(Q1),
while o( ¯R(n), ∆, Λ; P ′) = ϑ(α)#o(Q0)#o(Q1) with
α = o(Λ, ∃x[ϕ(X, x) ∧ ¯X(x)], X(n); P ′) ≪ o(Λ; P ) since the inference rule (R)
in the left part of J0 disappears in P ′. Consider the right part of J0 up to the
inference rule ( ¯R). The non-positive formula ¯R(n) occurs in every sequent in
the part, and one of its ancestor ¯R(n) is the principal formula of the inference
( ¯R). Hence there is no (sub), i.e., ϑ is not applied in the part by (7). Therefore
we obtain o(Λ, Λ; P ′) ≪ o(Λ; P ).

Case 7. Let P be the following with ϕ0[X] ≡ (∃x[ϕ(X, x) ∧ ¯X(x)]).

Γ1, ϕ(X, m) ∧ ¯X(m)

Γ1, ϕ0[X]

....

....

Γ0, ϕ0[X]
Γ′
0, ϕ0[σ]

(sub)

Γ, ϕ0[σ]

(∃)

....

¯ϕ(σ, a) ∨ σ(a), ∆1

(∀)

¯ϕ0[σ], ∆1

....

¯ϕ0[σ], ∆

J0

Γ, ∆

....

Λ

20

where Λ denotes the upper sequent of the uppermost (sub) below J0. (∃) in the
left upper part and (∀) in the right upper part of J0 are inference rules such
that their principal formulas ϕ0[X], ¯ϕ0[σ] has descendants ϕ0[σ], ¯ϕ0[σ], which
are cut formulas of J0.

Let P ′ be the following.

Γ1, ϕ(X, m)

Γ1, ϕ0[X], ϕ(X, m)

....

....

Γ0, ϕ0[X], ϕ(X, m)
Γ′

0, ϕ0[σ], ϕ(X, m)

Γ, ϕ0[σ], ϕ(X, m)

Γ, ∆, ϕ(X, m)

....

Λ, ϕ(X, m)
Λ, ϕ(σ, m)

Γ1, ¯X(m)

Γ1, ϕ0[X], ¯X(m)

Γ0, ϕ0[X], ¯X(m)
0, ϕ0[σ], ¯X(m)
Γ′

....

....

Γ, ϕ0[σ], ¯X(m)
....

Γ, ∆, ¯X(m)

Λ, ¯X(m)
Λ, ¯σ(m)
¯ϕ0[σ], ∆1, Λ

....

¯ϕ0[σ], ∆, Λ

....

Γ, ϕ0[σ]

Γ, ∆, Λ

....

Λ, Λ

....

¯ϕ0[σ], ∆

....

¯ϕ0[σ], ∆

.... a := m

¯ϕ(σ, m), σ(m), ∆1

where the subproofs ending with Γ1, ϕ(X, m) and with Γ1, ¯X(m) are obtained
from the subproof of Γ1, ϕ(X, m) ∧ ¯X(m) by inversion. Also the subproof of
¯ϕ(σ, m), σ(m), ∆1 is obtained from the subproof of ¯ϕ(σ, a)∨σ(a), ∆1 by inversion
and substituting m for a.

It is easy to see that P ′ is simple.
From o(Γ1, ϕ(X, m); P ′)≪o(Γ1, ϕ(X, m) ∧ ¯X(m); P ) ≪ o(Γ1, ϕ0[X], we ob-
tain o(Λ, ϕ(X, m); P ′) ≪ o(Λ; P ). Similarly for o(Λ, ¯σ(m); P ′). On the other
hand we have o( ¯ϕ0[σ], ∆1) = Ω#o( ¯ϕ(σ, a), σ(a), ∆1), and
o(Λ, ϕ(σ, m); P ′), o(Λ, ¯σ(m); P ′) < Ω. Thus o( ¯ϕ0[σ], ∆1, Λ; P ′) < o(∆1; P ).
Since there is no (sub) between ¯ϕ0[σ], ∆1 and ¯ϕ0[σ], ∆ by (7) and (6), we obtain
o(Λ, Λ; P ′) < o(Λ; P ), and hence o(Λ, Λ; P ′) ≪ o(Λ; P ).

Case 8. Let P be the following for a positive formula ϕ1[X] ≡ (∃y θ1(X, y))
with an m.

21

Γ1, θ1(X, k)
Γ1, ϕ1[X]

....

....

Γ0, ϕ1[X]
Γ′
0, ϕ1[σ]

Γ, ϕ1[σ]

(∃)

(sub)

Γ, ∆

....

Λ

....

....

¯θ1(σ, a), ∆1
¯ϕ1[σ], ∆1

(∀)

¯ϕ1[σ], ∆

J0

where Λ denotes the upper sequent of the uppermost (sub) below J0. The
principal formulas ϕ1[X] and ¯ϕ1[σ] are ancestors of cut formulas ϕ1[σ] and
¯ϕ1[σ] of J0, resp.

We can assume that X occurs (positively) in ϕ1[X] by virtue of Case 2.

Then there is no (sub) between ¯ϕ1[σ], ∆1 and ¯ϕ1[σ], ∆ by (7) and (6).

Let P ′ be the following.

Γ1, θ1(X, k)

Γ1, ϕ1[X], θ1(X, k)

....

....

(∀)

.... a := k
¯θ1(σ, k), ∆1

....

....

Γ0, ϕ1[X], θ1(X, k)
Γ′
0, ϕ1[σ], θ1(X, k)

(sub)

¯θ1(σ, a), ∆1
¯ϕ1[σ], ∆1

Γ, ϕ1[σ], θ1(X, k)

¯ϕ1[σ], ∆

Γ, ∆, θ1(X, k)

....

Λ, θ1(X, k)
Λ, θ1(σ, k)

....

Γ, ϕ1[σ]

Γ, ∆, Λ....

Λ, Λ

¯ϕ1[σ], ∆1, Λ

....

¯ϕ1[σ], ∆, Λ

It is clear that P ′ is simple.

We have o( ¯ϕ1[σ], ∆1) = Ω#o(¯θ1(σ, a), ∆1) by (6). From this we see that

o(Λ, Λ; P ′) ≪ o(Λ; P ) as in Case 7.

Case 9. Let P be the following for a positive formula ϕ1[X] ≡ (∀y θ1(X, y))
with the value k of a closed term.

22

....

....

....

Γ1, θ1(X, a)
Γ1, ϕ1[X]

Γ0, ϕ1[X]
Γ′
0, ϕ1[σ]

Γ, ϕ1[σ]

(∀)

(sub)

Γ, ∆

....

Λ

¯θ1(σ, k), ∆1
¯ϕ1[σ], ∆1

(∃)

....

¯ϕ1[σ], ∆

J0

where Λ denotes the upper sequent of the uppermost (sub) below J0. The
principal formulas ϕ1[X] and ¯ϕ1[σ] are ancestors of cut formulas ϕ1[σ] and
¯ϕ1[σ] of J0, resp.

There is no (sub) between ¯ϕ1[σ], ∆1 and ¯ϕ1[σ], ∆ by (7) and (6).
Let P ′ be the following.

.... a := k

Γ1, θ1(X, k)

Γ1, ϕ1[X], θ1(X, k)

....

....

Γ, ∆, θ1(X, k)

....

Λ, θ1(X, k)
Λ, θ1(σ, k)

Γ0, ϕ1[X], θ1(X, k)
Γ′
0, ϕ1[σ], θ1(X, k)

(sub)

¯θ1(σ, k), ∆1
¯ϕ1[σ], ∆1

....

Γ, ϕ1[σ], θ1(X, k)

¯ϕ1[σ], ∆

(∃)

¯θ1(σ, k), ∆1

....

Γ, ϕ1[σ]

Γ, ∆, Λ

....

Λ, Λ

¯ϕ1[σ], ∆1, Λ

....

¯ϕ1[σ], ∆, Λ

It is clear that P ′ is simple.

We have o( ¯ϕ1[σ], ∆1) = Ω#o(¯θ1(σ, k), ∆1) by (6). From this we see that

o(Λ, Λ; P ′) ≪ o(Λ; P ) as in Case 7.

23

Case 10. Let P be the following for a positive formula ϕ1[X] ≡ (θ0[X] ∨ θ1[X])
with i = 0, 1.

(∨)

(sub)

Γ1, θi[X]
Γ1, ϕ1[X]

Γ0, ϕ1[X]
Γ′
0, ϕ1[σ]

....

....

Γ, ϕ1[σ]

Γ, ∆

....

Λ

¯θ0[σ], ∆1

¯θ1[σ], ∆1

(∧)

¯ϕ1[σ], ∆1

....

¯ϕ1[σ], ∆

J0

where Λ denotes the upper sequent of the uppermost (sub) below J0. The
principal formulas ϕ1[X] and ¯ϕ1[σ] are ancestors of cut formulas ϕ1[σ] and
¯ϕ1[σ] of J0, resp.

There is no (sub) between ¯ϕ1[σ], ∆1 and ¯ϕ1[σ], ∆ by (7) and (6).
Let P ′ be the following.

Γ1, θi[X]

Γ1, ϕ1[X], θi[X]

....

....

Γ0, ϕ1[X], θi[X]
Γ′
0, ϕ1[σ], θi[X]

(sub)

Γ, ϕ1[σ], θi[X]

¯θ0[σ], ∆1

¯θ1[σ], ∆1

¯ϕ1[σ], ∆1

....

¯ϕ1[σ], ∆

Γ, ∆, θi[X]

....

Λ, θi[X]
Λ, θi[σ]

....

Γ, ϕ1[σ]

Γ, ∆, Λ....

Λ, Λ

¯ϕ1[σ], ∆1, Λ

....

¯ϕ1[σ], ∆, Λ

(∧)

¯θi[σ], ∆1

It is easy to see that P ′ is simple.

We have o( ¯ϕ1[σ], ∆1) = Ω#o(¯θ0[σ], ∆1)#o(¯θ1[σ], ∆1) by (6). From this we

see that o(Λ, Λ; P ′) ≪ o(Λ; P ) as in Case 7.

Case 11. Let P be the following for a positive formula ϕ1[X] ≡ (θ0[X] ∧ θ1[X])
with i = 0, 1

24

Γ1, θ0[X] Γ1, θ1[X]

(∧)

Γ1, ϕ1[X]

Γ0, ϕ1[X]
Γ′
0, ϕ1[σ]

....

....

Γ, ϕ1[σ]

¯θi[σ], ∆1
¯ϕ1[σ], ∆1

....

¯ϕ1[σ], ∆

(∨)

J0

(sub)

Γ, ∆

....

Λ

where Λ denotes the upper sequent of the uppermost (sub) below J0. The
principal formulas ϕ1[X] and ¯ϕ1[σ] are ancestors of cut formulas ϕ1[σ] and
¯ϕ1[σ] of J0, resp.

There is no (sub) between ¯ϕ1[σ], ∆1 and ¯ϕ1[σ], ∆ by (7) and (6).
Let P ′ be the following.

Γ1, θi[X]

Γ1, ϕ1[X], θi[X]

....

....

Γ0, ϕ1[X], θi[X]
Γ′
0, ϕ1[σ], θi[X]

(sub)

¯θi[σ], ∆1
¯ϕ1[σ], ∆1

(∨)

....

Γ, ϕ1[σ], θi[X]

¯ϕ1[σ], ∆

Γ, ∆, θi[X]

....

Λ, θi[X]
Λ, θi[σ]

(sub)

¯θi[σ], ∆1

....

Γ, ϕ1[σ]

Γ, ∆, Λ....

Λ, Λ

¯ϕ1[σ], ∆1, Λ

....

¯ϕ1[σ], ∆, Λ

It is easy to see that P ′ is simple.

We have o( ¯ϕ1[σ], ∆1) = Ω#o(¯θi[σ], ∆1) by (6). From this we see that

o(Λ, Λ; P ′) ≪ o(Λ; P ) as in Case 7.

Case 12. The cut formula C of J0 is a boolean combination of positive formulas
and ∀B-formulas.

25

Cij , where each
Cij is one of positive formulas, negative formulas, ∀B-formulas and ∃B-formulas.

We can assume that C is a DNF Wi<I Ci with Ci ≡ Vj<Ji

Let P be the following.

· · ·

(W)

Γ1, ¯Ci,j(i)

Γ1, ¯Ci
....
Γ0, ¯Ci
Γ0, ¯C
....
Γ, ¯C

· · ·

(V)

Γ, ∆

....

Λ

{Ci0j, ∆0 : j < Ji0 }

C, ∆0

....

C, ∆

J0

(W)DNF

where i0 < I and I > i 7→ j(i) < Ji. Λ denotes the upper sequent of the

uppermost (sub) below J0. The principal formulas ¯C of the (V) and C of
(W)CNF are ancestors of cut formulas ¯C and C of the fully analytic cut J0, resp.
Moreover the principal formula ¯Ci of (W) is an ancestor of the auxiliary formula
¯Ci of (V).

There are several cases to consider depending on the form of the formula

D ≡ Ci0 ,j(i0).

Case 12.0. D is Rϕ-free.

First assume that D is a false arithmetical formula. Then let P ′ be the

following with the end-sequent Λ0 of P .

Ci0 , D, ∆0
C, D, ∆0

....

C, D, ∆

....
Γ, ¯C

Γ, ∆, D

....
Λ, D....

Λ0, D

Second assume that D is a true arithmetical formula. Then let P ′ be the

26

following.

· · ·

Γ1, ¯Ci0 , ¯D

Γ1, ¯D
....

Γ0, ¯Ci0 , ¯D · · ·
Γ0, ¯C, ¯D

....

Γ, ¯C, ¯D

....

C, ∆

Γ, ∆, ¯D....
Λ, ¯D....

Λ0, ¯D

In each case it is clear that P ′ is simple and o(P ′) < o(P ).

Case 12.1. D is a positive formula in which Rϕ occurs. We have o(Γ1, ¯Ci) =
Ω#o(Γ1, ¯Ci,j(i)).

There is no (sub) between Γ1, ¯Ci0 and Γ, ¯C by (6).
Let P ′ be the following.

D, ∆0

....
Γ, ¯C

C, D, ∆0

C, D, ∆

....
Γ, ∆, D....

Λ, D
Λ, D

(sub)

Γ, ∆, Λ....

Λ, Λ

· · ·

....

C, ∆

Γ1, ¯D

· · ·

Γ1, ¯Ci0 , Λ

....

Γ0, ¯Ci0 , Λ
....

Γ0, ¯C, Λ

Γ, ¯C, Λ

It is easy to see that P ′ is simple and o(Λ, Λ; P ′) ≪ o(Λ; P ).

Case 12.2. D is a negative formula in which Rϕ occurs. We have o(Ci0 , ∆1) =

Ω#Pj o(Ci0 j, ∆1).

27

There is no (sub) between Ci0 , ∆1 and C, ∆ by (6).
Let P ′ be the following.

Γ1, ¯Ci0 , ¯D

Γ1, ¯D
....

· · ·

Γ0, ¯Ci0 , ¯D · · ·

Γ0, ¯C, ¯D....

Γ, ¯C, ¯D

....

C, ∆

Γ, ∆, ¯D....

Λ, ¯D
Λ, ¯D

(sub)

D, ∆0

Λ, C, ∆0

....

Λ, C, ∆

....
Γ, ¯C

Λ, Γ, ∆....

Λ, Λ

It is easy to see that P ′ is simple and o(Λ, Λ; P ′) ≪ o(Λ; P ).

Case 12.3. D is an ∃B-formula ∃yWq<Q Dq(y) with Dq(y) ≡ V({Lqr(y) : r ∈
q } ∪ { ¯Lqr(y) : r ∈ R−

q }) ∪ {Lqr(y) : r ∈ R0

q}), where each Lqr(y) is positive,
q . Each Lqr(y) is an arithmetical formula for

R+
and contains Rϕ for r ∈ R+
r ∈ R0
q.

q ∪ R−

Let P be the following with A+ ≡ A0 ≡ A and A− ≡ ¯A.

.
...

...
.

..
..

Γ2, ¯D

Γ1, ¯D
Γ1, ¯Ci0

Γ0, ¯Ci0
Γ0, ¯C

.
...
Γ, ¯C

(W)

(V)

Γ, ∆

..
..
Λ

28

Γ2 ∪ { ¯L∗

q0 r(a) : r ∈ R∗
q0

, ∗ = +, −, 0}

(∀)CNF

{Lq0 r(n), ∆2 : r ∈ R+

q0 }

{ ¯Lq0 r(n), ∆2 : r ∈ R−

q0 }

{Lq0 r(n), ∆2 : r ∈ R0
q0

}

(W)

Wq Dq(n), ∆2

Wq Dq(n), ∆1

(∃)

..
..

.
...

....

D, ∆1

D, ∆0
C, ∆0

C, ∆

(W)DNF

J0

qr(a) : r ∈ R∗

q } ∪ { ¯Lqr(a) : r ∈ R0

q0 , ¯Lq0r(n), ∆2 for r ∈ R−

q , ∗ = +, −, 0} = Γ2 ∪ { ¯Lqr(a) : r ∈ R+

where Γ2 ∪ { ¯L∗
r ∈ R−
Lq0r(n), ∆2 for r ∈ R+

q } ∪ {Lqr(a) :
q} is an upper sequent of (∀)CNF for each q < Q, and
q0 and Lq0r(n), ∆2 for r ∈ R0
q0
are upper sequents of (W). The principal formula ¯D of (∀)CNF is an ancestor of
the auxiliary formula ¯D of (W), the principal formula D of (∃) is an ancestor of
the auxiliary formula D of (W)DNF, and the principal formula Wq Dq(n) of (W)
in the right part is an ancestor of the auxiliary formula Wq Dq(n) of (∃). Such

inferences exist since J0 is fully analytic.

We have o(Γ2, ¯D) = Ω#Pq<Q o(Γ2 ∪{ ¯Lqr(a) : r ∈ R+
o(Lq0r(n), ∆3)#Pr∈R−

and o(Wq Dq(n), ∆3) = Ω#Pr∈R+

q0

q0

q }∪{Lqr(a) : r ∈ R−
o( ¯Lq0r(n), ∆3).

q })

Case 12.331 R+

q0 6= ∅. Then there is no (sub) between Γ2, ¯D and Γ, ¯C by (7).

Let Qr be the following for each r ∈ R+

q0 ∪ R0

q0 .

Lq0r(n), ∆2

Wq Dq(n), ∆2, Lq0r(n)

D, ∆0, Lq0r(n)
C, ∆0, Lq0r(n)

....

....

C, ∆, Lq0r(n)

Γ, ∆, Lq0r(n)

....

Λ, Lq0r(n)

....
Γ, ¯C

Then let Q be the following.

.... Qr

Λ, Lq0r(n)
Λ, Lq0r(n)

· · ·

· · ·

.... a := n

Γ2 ∪ { ¯L∗

Λ ∪ Γ2 ∪ {Lq0r(n) : r ∈ R−

q0r(n) : r ∈ R∗
q0 }

q0 , ∗ = +, −, 0}

Λ ∪ Γ2 ∪ { ¯D} ∪ {Lq0r(n) : r ∈ R−

q0 }

· · ·

Λ ∪ Γ0 ∪ { ¯Ci0 } ∪ {Lq0r(n) : r ∈ R−
q0 }
Λ ∪ Γ0 ∪ { ¯C} ∪ { Lq0r(n) : r ∈ R−
q0 }

....

....

· · ·

....

C, ∆

Λ ∪ Γ ∪ { ¯C} ∪ {Lq0r(n) : r ∈ R−

q0 }

Λ ∪ Γ ∪ ∆ ∪ {Lq0r(n) : r ∈ R−

q0 }

....

Λ ∪ {Lq0r(n) : r ∈ R−

q0 }

When R−

q0 = ∅, let P ′ = Q.

29

Suppose R−

by (7). Let P ′ be the following.

q0 6= ∅. Then there is no (sub) between Wq Dq(n), ∆2 and C, ∆

.... Q

Λ ∪ {Lq0r(n) : r ∈ R−
Λ ∪ {Lq0r(n) : r ∈ R−

q0 }
q0 } · · ·

¯Lq0r(n), ∆2

· · ·

Wq Dq(n), ∆2, Λ

....

....

D, ∆0, Λ
C, ∆0, Λ

C, ∆, Λ

· · ·

· · ·

....
Γ, ¯C

Γ, ∆, Λ

....

Λ, Λ

It is easy to see that P ′ is simple.

Consider the case R−

q0 6= ∅. For each Qr, we have o(Qr) ≪ o(Λ; P ), and

hence o(Q) ≪ o(Λ; P ). Therefore o(Λ, Λ; P ′) ≪ o(Λ; P ).

Case 12.332 R+
and C, ∆ by (7).

q0 = ∅ and R−

q0 6= ∅. Then there is no (sub) betweenWq Dq(n), ∆2

Then let Q be the following.

.... a := n
q0r(n) : r ∈ R∗
q0

Γ2 ∪ { ¯L∗

, ∗ = −, 0}

Γ2 ∪ { ¯D} ∪ { ¯L∗

q0r(n) : r ∈ R∗

q0 , ∗ = −, 0}

· · ·

Γ0 ∪ { ¯Ci0 } ∪ { ¯L∗
Γ0 ∪ { ¯C} ∪ { ¯L∗

q0r(n) : r ∈ R∗
q0
q0 , ∗ = −, 0}
q0r(n) : r ∈ R∗

, ∗ = −, 0} · · ·

....

C, ∆

Γ ∪ { ¯C} ∪ { ¯L∗

q0r(n) : r ∈ R∗
q0

, ∗ = −, 0}

Γ ∪ ∆ ∪ { ¯L∗

q0r(n) : r ∈ R∗

q0 , ∗ = −, 0}

Λ ∪ { ¯L∗

q0r(n) : r ∈ R∗
q0

, ∗ = −, 0}

....

....

....

30

Let P ′ be the following.

Λ ∪ {Lq0 r(n) : r ∈ R−
Λ ∪ {Lq0 r(n) : r ∈ R−

.... Q
q0 } ∪ { ¯Lq0 r(n) : r ∈ R0
q0 } ∪ { ¯Lq0 r(n) : r ∈ R0

· · ·

....
Γ, ¯C

Γ, ∆, Λ

....

Λ, Λ

C, ∆0, Λ

....

C, ∆, Λ

¯Lq0 r(n), ∆2 (r ∈ R−
q0 )

· · · Lq0 r(n), ∆2 (r ∈ R0

q0 )

q0 }
q0 r}
Wq Dq(n), ∆2, Λ

· · ·

....

D, ∆0, Λ

As in Case 12.331 we see that o(Λ, Λ; P ′) ≪ o(Λ; P ) for the simple P ′.

Case 12.333 R+

q0 = R−

q0 = ∅.

If there is a false arithmetical formula A ≡ Lq0r0(n) in {Lq0r : r ∈ R0

q0 },

then let P ′ be the following for the end-sequent Λ0 of P .

A, ∆2

Wq Dq(n), ∆2, A

....

D, ∆0, A

C, ∆0, A....

C, ∆, A

· · ·

· · ·

....
Γ, ¯C

Γ, ∆, A....

Λ, A

....

Λ0, A

Suppose each Lq0r(n) is a true arithmetical formula for r ∈ R0

q0 .

31

Then let P ′ be the following.

.... a := n
Γ2 ∪ { ¯Lq0r(n) : r ∈ R0

q0 }
Γ2 ∪ { ¯D} ∪ { ¯Lq0r(n) : r ∈ R0

q0 }

· · ·

Γ0 ∪ { ¯Ci0 } ∪ { ¯Lq0r(n) : r ∈ R0
q0 } · · ·
Γ0 ∪ { ¯C} ∪ { ¯Lq0r(n) : r ∈ R0
q0 }

Γ ∪ { ¯C} ∪ { ¯Lq0r(n) : r ∈ R0

q0 }
Γ ∪ ∆ ∪ { ¯Lq0r(n) : r ∈ R0

q0 }

....

C, ∆

....

....

....
....

Λ ∪ { ¯Lq0r(n) : r ∈ R0

q0 }

Λ0 ∪ { ¯Lq0r(n) : r ∈ R0

q0 }

We see that P ′ is simple and o(P ′) < o(P ).

Case 12.4. D is an ∀B-formula ∀yVq<Q Dq(y) with Dq(y) ≡ W({Lqr(y) : r ∈
q } ∪ { ¯Lqr(y) : r ∈ R−

q }) ∪ {Lqr(y) : r ∈ R0

q}), where each Lqr(y) is positive,
q . Each Lqr(y) is an arithmetical formula for

R+
and contains Rϕ for r ∈ R+
r ∈ R0
q.

q ∪ R−

Let P be the following.

{Γ3, Lq0 r(n) : r ∈ R+

q0 } {Γ3, ¯Lq0 r(n) : r ∈ R−

q0 }

{Γ3, Lq0 r(n) : r ∈ R0
q0

}

(W)

Γ3, Wq
..
..
Γ2, Wq

¯Dq(n)

¯Dq(n)

(∃)

Γ2, ¯D

..
..

.
...

Γ1, ¯D
Γ1, ¯Ci0

Γ0, ¯Ci0

· · ·

Γ0, ¯C

.
...
Γ, ¯C

{ ¯L∗

q0 r(a) : r ∈ R∗
q0
D, ∆1
....

D, ∆0

.
...
, ∗ = +, −, 0} ∪ ∆1

(∀)CNF

C, ∆0

...
.
C, ∆

· · ·

(W)DNF

J0

· · ·

(W)

(V)

Γ, ∆
.
...
Λ

The principal formula ¯D of (∃) is an ancestor of the auxiliary formula ¯D of
(W), the principal formula Wq

¯Dq(n) of (W) in the left part is an ancestor of the

32

¯Dq(n) of (∃), and the principal formula D of (∀)CNF is an

auxiliary formula Wq
ancestor of the auxiliary formula D of (W)DNF.

A simple P ′ is constructed as in Case 12.3.
This competes a proof of Lemma 2.3, and Lemma 1.5 and Theorem 1.4 are

shown.

References

[1] B. Afshari and M. Rathjen, A note on the theory of positive induction,

ID∗

1, Arch. Math. Logic 49 (2010), 275-281.

[2] T. Arai, A consistency proof of a system including Feferman’s IDξ by

Takeuti’s reduction method, Tsukuba J. Math. 11 (1987), 227-239.

[3] T. Arai, Proof theory for theories of ordinals I:recursively Mahlo ordinals,

Ann. Pure Appl. Logic 122 (2003) 1-85.

[4] G. Gentzen, Beweibarkeit und Unbeweisbarkeit von Anfangsf¨allen der
transﬁniten Induktion in der reinen Zahlentheorie, Math. Ann. 119 (1943)
140-161.

[5] D. Probst, The proof-theoretic analysis of transﬁnitely iterate quasi least

ﬁxed points, J. Symb. Logic 71(2006), 721-746.

[6] M. Rathjen and A. Weiermann, Proof-theoretic investigations on Kruskal’s

theorem, Ann. Pure Appl. Logic 60(1993), 49-88.

[7] G. Takeuti, Proof Theory, second edition. Studies in Logic, vol.81. Amster-

dam: North-Holland 1987. reprinted from Dover, 2013.

[8] J. Van der Meeren, Connecting the Two Worlds: Well-partial-orders and

Ordinal Notation Systems, dissertation, Universiteit Ghent, 2015.

[9] J. Van der Meeren, M. Rathjen and A. Wiermann, An order-theoretic char-

acterization of the Howard-Bachmann-hierarchy, arXiv: 1411.4481.

33

