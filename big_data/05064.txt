6
1
0
2

 
r
a

 

M
4
1

 
 
]
T
G
.
s
c
[
 
 

1
v
4
6
0
5
0

.

3
0
6
1
:
v
i
X
r
a

Pairwise Stability in Two Sided Market with Strictly

Increasing Valuation Functions

Yasir ALIa1, Asma JAVAIDb,

aCollege of Electrical and Mechanical Engineering, National University of Sciences and Technology,

b School of Natural Sciences, National University of Sciences and Technology, H-12, Islamabad, Pakistan

Rawalpindi 46070, Pakistan

Abstract

This paper deals with two-sided matching market with two disjoint sets, i.e. the set
of buyers and the set of sellers. Each seller can trade with at most with one buyer and
vice versa. Money is transferred from sellers to buyers for an indivisible goods that
buyers own. Valuation functions, for participants of both sides, are represented by
strictly increasing functions with money considered as discrete variable. An algorithm
is devised to prove the existence of stability for this model.

keyword: Stable matching, marriage model, indivisible goods, increasing valuations

1

Introduction

Over the last few decades, numerous scholars have carried out research pertaining to two-
sided matching problem. In a two sided matching problem, the set of participants are divided
into two disjoint sets, say U and V . Each participant ranks a participant of other set in order
of preferences. Main objective of two-sided matching problem is formation of partnership
between the participants of U and V . A matching X, is one-to-one correspondence between
the participant of one set to the participant of other set. Main requirement in a two-sided
matching problems is that of stability of matchings. A matching is stable if all participants
have acceptable partners and there does not exist a pair that is not matched but prefers
each other to their current partners.

The concept of ﬁnding two-sided stable matching was ﬁrst given by Gale and Shapley [4]
in their paper “College Admissions and the Stability of Marriage”. In the course of presenting
an algorithm for matching applicants to college places, they introduced and solved the stable
marriage problem. This problem deals with two disjoint sets of participants U and V . Each
participant of these sets submits a preference list ranking a subset of other set of participants
in order of preference. The aim is to form a one-to-one matching X of the participants such
that no two participants would prefer each other to their partner in X. The authors used
their solution to this problem as a basis for solving the extended problem where one of

1Corresponding author
E-mail address: yali@ceme.nust.edu.pk (Y. Ali). asmajavaid05@yahoo.com (A. Javaid).

1

the sets consists of college applicants, and the other consists of colleges, each of which has
a quota of places to ﬁll. An important feature of their model is that no negotiations are
allowed among the participant of both sets. This shows that participants in their model are
rigid. Many additional variants of the stable marriage problem have been discussed in the
literature. Guessﬁeld and Iriving [5] published a book that covers many variants of original
stable marriage problem such as the preferences of agents may include ties, incomplete
preferences, weighted edges as well as non-bipartite versions such as roommate problem.

Shapley and Shubik [7] presented the one-to-one buyer seller model known as “assignment
game”.
In their model, participants are ﬂexible because monetary transfer is permitted
among participants of both sets. Each participant on one side can supply exactly one unit
of some indivisible good and exchange it for money with a participant from the other side
whose demand is also one unit. Shapley and Shubik [7] showed that the core of the game is a
non-empty complete lattice, where the core is deﬁned as the set of un-denominated outcomes.
The core in their model is a solution set based upon a linear programming formulation of
the model [7].

After this, two-sided matchings have been studied extensively. Diﬀerent approaches have
been made by many researchers in which they generalize the marriage model of Gale and
Shapley [4] and assignment game of Shapley and Shubik [7]. Main aim of these researchers
was to ﬁnd common result for both of [4] and [7] models in a more general way. Erikson and
Karlinder [2] and Sotomayor [8] presented the hybrid models. These models are the general-
ization of the discrete marriage model [4] and continuous assignment game [7]. Existence of
stable outcome and the core is discussed in [2, 8]. Farooq [3] presented a one-to-one match-
ing model in which he identiﬁed the preferences of participants by strictly increasing linear
functions. He proposed an algorithm to show the existence of pairwise stable outcome in his
model by taking money as a continuous variable. His model includes the marriage model of
Gale and Shapely [4], assignment game of Shapely and Shubik [7] and Erikson and Karlan-
der [2] hybrid model as special cases. The motivation of our work from the stable matching
literature is the model of Ali and Farooq [1]. Ali and Farooq [1] presented a one-to-one
matching model by taking money as a discrete variable in linear increasing function. They
designed an algorithm to show that pairwise stable outcome always exists. The complexity
of Ali and Farooq’s [1] algorithm depends on the size of those intervals where prices fall.
Our model is the generalized form of Ali and Farooq [1] model. We consider the preferences
of participants by general increasing function and designed an algorithm to ﬁnd a pairwise
stable outcome in our model.

This paper is organized as follows. Section 2 describes of our model brieﬂy. Section 3
gives the Sequential Mechanisms for buyer and seller. Section 4 describes the supple and
demand characterization of stable matching. We devise an algorithm which ﬁnds a stable
outcome in our model in Section 5. In Section 6, we discuss the main result of our model.

2

2 The Model Description

The matching market under consideration consists of two types of participants one type of
participants are sellers and second type of participants are buyers. Here U and V denote
the sets of sellers and buyers, respectively. Throughout in this paper, we model matching
markets as trading platforms where buyers and sellers interact. Moreover, each buyer as
well as seller can trade with at most one participant on the other side of the market at a
particular time. The negotiation and side payments between participants of both sides are
allowed. Naturally, each participant wants to gain as much proﬁt as possible from his/her
partner. Let E = U × V denotes the set of all possible pairs of seller-buyer. Also when
buyer and seller interact with each other in auction market they have some upper and lower
bounds of prices. We express these bounds by vector π, π ∈ ZE where always πij ≤ πij for
each (i, j) ∈ E2. The price vector is denoted by p and deﬁne as p = (pij ∈ Z|(i, j) ∈ E).
The price vector is said to be feasible price vector if it satisﬁes π ≤ p ≤ π 3.

Since each participant has preferences over the participants of the other set, so the
preferences of sellers over buyers and buyers over sellers is given by the valuation function
fij(x) and fji(−x) for each (i, j) ∈ E. Here fij(x) denotes the valuation of seller i ∈ U,
when he or she trade with buyer j ∈ V , and get an amount of money x from buyer j ∈ V .
Similarly, fji(−x) represents the valuation of buyer j ∈ V , when he or she trade with seller
i ∈ U, and pays an amount of money x. These valuation functions are strictly increasing
functions of money 4.

3 The Buyer Seller Sequential Mechanism

Since fij(x) and fji(−x) denote the preferences of participants so if fij(x) ≥ 0, then we
say that seller i is ready to make a partnership with buyer j if j pays i an amount x of
money. Or we can say that buyer j is acceptable to seller i an amount x of money. Also
if fji(−x) ≥ 0, then we say that buyer j is ready to make a partnership with seller i an
amount x of money. If fi0j0(x1) > fi0j1(x1), then we can say that seller i0 prefers buyer j0
to buyer j1 at money x1 where i0 ∈ U and j0, j1 ∈ V and x1 ∈ Z. If fj0i0(−x1) > fj0i1(−x1),
then we can say that j0 prefers i0 to i1 at money x1 where i0, i1 ∈ U and j0 ∈ V and x1 ∈ Z.
If fi0j0(x1) = fi0j1(x1), then seller i0 is indiﬀerent between j0 and j1 at money x1. Also, if
fj0i0(−x1) = fj0i1(−x1), then buyer j0 is said to be indiﬀerent between i0 and i1 at money x1.
If fij(x) = 0, then seller i is indiﬀerent between the buyer j and himself at x. If an individual
is not indiﬀerent between any two participants then the preferences of such individual are
called strict preferences. In our model, preferences of the participants are not strict because
these are based on monetary transfer and therefore, diﬀerent functions may have same value
for two distinct values of money. If fji(−x) = 0 for some x ∈ Z, then buyer j is indiﬀerent

2The notation Z stand for set of integers and notation R stand for set of real numbers. The notation ZE

stands for integer lattice whose points are indexed by E.

3For any two vectors x ∈ ZE and y ∈ ZE, we say that x ≤ y if xij ≤ yij for all (i, j) ∈ E.
4By strictly increasing function we mean that for x > y implies f (x) > f (y).

3

between the seller i and himself at x. Preferences of participants are not strict in our model
because the monetary transfer is allowed between participants of both sets.

4 The Supply and Demand Characterization of Stable

Matchings

This section describes the characteristic of an outcome for which it would be stable. A subset
X, of a set E, is called matching if every agent appear at most once in X. A matching X is
said to be pairwise stable if it is individually rational and is not blocked by any buyer-seller
pair. A 4-tuple (X; p, q, r) of a matching X and a feasible price vector p is said to be a
pairwise-stable outcome if the following two conditions are satisﬁed:

(p1) q ≥ 0 and r ≥ 0,

(p2) fij(c) ≤ qi or fji(−c) ≤ rj for all c ∈ [πij, πij]Z and for all (i, j) ∈ E5,

where (q, r) ∈ RU × RV is deﬁned by

qi = (cid:26) fij(pij)
rj = (cid:26) fji(−pij)

0

0

if (i, j) ∈ X for some j ∈ V
otherwise

if (i, j) ∈ X for some i ∈ U
otherwise

(i ∈ U),

(j ∈ V ).

(4.1)

(4.2)

Condition (p1) says that the matching X is individually rational. Condition (p2) means
(X; p, q, r) is not blocked by any buyer-seller pair. A matching X is said to be pairwise-stable
if (X; p, q, r) is pairwise-stable.

To show the existence of pairwise-stable outcome in the model deﬁned in Section 3, we
ﬁrst need to calculate price vector p for each buyer-seller pairs. Since prices should be feasible
and pij ∈ Z for each (i, j) ∈ E6, so initially we deﬁne it by

pij =(cid:26) πij

max(cid:8)πij,(cid:4)−f −1

ji (0)(cid:5) otherwise.

if fji(−πij) ≥ 0

(4.3)

Before describing the algorithm mathematically, we deﬁne few subsets of set E that help us
to ﬁnd a matching X satisfying condition (p1). Firstly, we deﬁne the subset K0 and T0 of
set E, that contain those buyer-seller pairs from the set E that are not mutually acceptable,
as:

K0 = {(i, j) ∈ E | fji(−pij) < 0},

T0 = {(i, j) ∈ E | fij(pij) < 0}.

(4.4)

(4.5)

5we deﬁne [x, y]Z = {a ∈ Z | x ≤ a ≤ y}.
6⌊x⌋ = sup{n ∈ Z | x ≥ n}.

4

K0 is the set of all those pairs where buyer is not ready to trade with seller and T0 is the
set of all those pairs where seller is not ready to trade with buyer. Now the set of mutually
acceptable buyer-seller pairs is deﬁned as:

Deﬁne ˜qi for each i ∈ U, and eEP by (4.7) and (4.8)

eE = E \ {K0 ∪ T0}.

and

(4.6)

(4.7)

(4.8)

(4.9)

(4.10)

˜qi = max{fij(pij) | (i, j) ∈ eE}
eEP = {(i, j) ∈ eE | fij(pij) = ˜qi}.

those buyer-seller pairs which are mutually acceptable and the buyer is most preferred for

The maximum over an empty set is taken to be zero by deﬁnition. Here the set eEP contains
seller out of all acceptable buyers. We deﬁne a subset bEP of eEP by:
Initially, since r = 0, bEP will coincide with eEP . However, in the further iterations of the
algorithm bEP may be a proper subset of eEP .
Since we have no matching X at the start of the algorithm, so consider eV = ∅, where eV

bEP = {(i, j) ∈ eEP | fji(−pij) ≥ rj}.

denotes the set of matched buyers in X, that is,

eV = {j ∈ V | j is matched in X}.

If eV = ∅, then there is no matched buyer in matching X. At each step in the algorithm, the
matching X in the bipartite graph (U, V ; bEP ) must satisﬁes the following conditions:
(s1) X matches all members of eV ,
(s2) X maximizes P(i,j)∈X

fji(−pij) among the matchings that satisfy (s1).

Up to this point the outcome (X; p, q, r) obviously satisﬁes the condition (p1). To satisfy
the condition (p2), we deﬁne the set K of all those buyer-seller pairs that are mutually
acceptable and the buyer is most preferred to seller but the seller is unmatched in X by

Lemma 4.1. If K = ∅, then matching X is stable.

K = {(i, j) ∈ eEP | i is unmatched in X}.

(4.11)

Proof. We know that a stable matching satisfy conditions (p1) and (p2). By deﬁnition

X ⊆ eE thus (p1) holds true. Suppose that K = ∅ and on contrary suppose that (p2)

dose not hold true. This means that for some (i, j) ∈ E there exists c ∈ [πij, πij] such
that fji(−c) > rj and fij(c) > qi.
Initially, r = 0 and fji(−pij) ≥ 0 for (i, j) ∈ E,
therefore, pij ≥ c, by (4.3). This means that fij(pij) ≥ fij(c) > qi. But K = ∅ implies that
fij(pij) < ˜qi = qi, which is a contradiction. This proves the assertion.

5

If K = ∅ then there is no need to modify price vector p and deﬁne further sets but if
K is not empty then we will modify price vector, by preserving condition (p1). The new
price vector must also be feasible, that is, πij ≤ ˜pij ≤ πij for each (i, j) ∈ E. Since we are
ij ∈ R++ for
considering strictly increasing functions, therefore, we can ﬁnd a real number m∗
each (i, j) ∈ K, to modify price vector p, such that

Since we are dealing with discrete prices so we will deﬁne an integer mij as follows:

fji(−(pij − m∗

ij)) = rj.

Now, we have

mij = max(cid:8)1, ⌈m∗

ij⌉(cid:9) .

fji(−(pij − mij)) ≥ rj,

(4.12)

(4.13)

(4.14)

where pij − mij is an integer and mij is the minimum positive integer that satisﬁes the above
condition.
This means that

fji(−(pij − (mij − 1))) ≤ rj.

Here the integer mij for each (i, j) ∈ K helps us in ﬁnding the new price vector such that
condition (p2) also satisﬁes. Now we deﬁne a subset L of K that contain those pairs from
the set K for which modiﬁed price does not remain feasible.

L = {(i, j) ∈ K | pij − mij < πij}.

(4.15)

The modiﬁed price vector ˜p must also be feasible and is deﬁned by:

˜pij :=(cid:26) max{πij, pij − mij} if (i, j) ∈ K

otherwise

pij

(i, j) ∈ E.

(4.16)

(4.17)

We also deﬁne a subset eT0 of K by:

eT0 := {(i, j) ∈ K | fij(˜pij) < 0}.

Remark: Throughout in the algorithm, our modiﬁed price vector will be decreasing and the
size of matching X will be increasing. Also, the participants will change their preferences
according to new price vector.

5 An Algorithm for Finding a Pairwise Stability

In this section, we propose an algorithm for ﬁnding a pairwise stable outcome for the model
described in Section 3.

Input: Two disjoint and ﬁnite sets U and V , the set of ordered pairs E = U × V , price
vector p ∈ ZE, two vectors π ∈ ZE and π ∈ ZE where π ≤ π, general increasing
functions .

6

Output: Vectors (q, r) ∈ RU × RV , and p ∈ ZE must satisfy (p1) and (p2).

Step 0: Put eV = ∅ and r = 0. Initially deﬁne p, K0, T0, eE, ˜q, eEP and bEP by (4.3)−(4.9),
respectively and ﬁnd a matching X in the bipartite graph (U, V ; bEP ) satisfying (s1)
and (s2). Deﬁne r, eV and K by (4.2), (4.10) and (4.11), respectively.

Step 1: If K = ∅ then deﬁne q by (4.1) and stop. Otherwise go to Step 2.

Step 2: For each (i, j) ∈ K calculate mij by (4.13) and new price vector ˜p by (4.16). Deﬁne

L and eT0 by (4.15) and (4.17), respectively and update T0 by T0 := T0 ∪ eT0 and K0 by

K0 := K0 ∪ L.

Step 3: Replace price vector p by ˜p and modify eE by:

eE := eE \ {K0 ∪ T0}.

(5.18)

Again deﬁne ˜q by (4.7) and modify eEP , bEP by (4.8) and (4.9) respectively, for the
updated p and eE. Find a matching X in the bipartite graph (U, V ; bEP ) that satisﬁes
the conditions (s1) and (s2). Again deﬁne r, eV and K by (4.2), (4.10) and (4.11),

respectively. Go to Step 1.

6 Existence of Pairwise Stability

In this section, we will show the existence of pairwise stability for this model. For this
purpose, we will show that the algorithm we have proposed terminates and at termination it
outputs a stable matching. We will also give some other important results about the model
and the algorithm.

We will add preﬁxes (old)∗ and (new)∗ to sets/vectors/integers before and after update,
respectively, in any iteration of the algorithm. The key result is Lemma 6.2 which will be
proved here using the assumption deﬁned in equation (4.13).

dition (s1) and (s2) in each iteration of the algorithm at Step 3.

Lemma 6.1. There exists a matching X in the bipartite graph (U, V ; bEP ) that satisfy con-
Proof. The proof of the lemma is equivalent to show that (old)X ⊆ (new)bEP at Step 3, in
each iteration. In each iteration at Step 2 and at Step 3, we update vector p and eE by (4.16)
elements or/and subsets of K. As K ∩ (old)X = ∅, therefore, (old)X ⊆ (new)bEP .

and (5.18), respectively. As clear from (4.16) and (5.18), these modiﬁcations are done for

The following lemma represents the signiﬁcance of mij for each (i, j) ∈ K and explains

that updated price is the maximum price at which (i, j) ∈ K can match.

Lemma 6.2. In each iteration of the algorithm at Step 3, we have fji(−(pij − mij)) ≥ rj
for each (i, j) ∈ K. Furthermore, if fji(−(pij − mij)) > rj for some (i, j) ∈ K then pij − mij
is the maximum integer for which this inequality holds.

7

Proof. Let (i, j) ∈ K this means that fji(−(old)pij) ≤ rj. At Step 2 we calculated an integer
mij by (4.13) for each (i, j) ∈ K with following property

fji(−((old)pij − mij)) ≥ rj.

This proves the ﬁrst part of the assertion.

Next, we prove the second part of the lemma that if fji(−((old)pij − mij)) > rj then
(old)pij − mij is the maximum integer for which this holds. This can be proven by showing
that mij is minimum positive integer for which fji(−((old)pij − mij)) > rj holds.

By (4.13), we have mij ≥ 1. First we consider the case when m∗

ij ≤ 1, that is, mij = 1 by
(4.13). For this case the result holds trivially as mij = 1 is minimum positive integer. Now,
consider when m∗

ij is a real number for which we have

ij > 1. We m∗

rj = fji(−(old)pij + m∗

ij)

As we are dealing with strictly increasing function, therefore, for any real number δ > 0, we
have

fji(−((old)pij − (m∗

ij + δ))) > rj > fji(−((old)pij − (m∗

ij − δ))).

Since

mij = ⌈m∗

ij⌉ ≥ m∗
ij.

(6.19)

(6.20)

ij is minimum positive real number for which rj < fji(−(old)pij + m∗

By (6.19), m∗
ij) and by
(6.20), mij is minimum positive integer for which fji(−(pij − mij)) > rj. Thus (old)pij − mij
is the maximum integer for which fji(−(pij − mij)) > rj holds.

For (i, j) ∈ K, we update price vector by (4.16). There is a possibility that (new)pij does
not remain feasible, that is, pij < πij. To maintain the feasibility in such cases we have the
following result.

Lemma 6.3. For each (i, j) ∈ L we have (new)pij = πij and fji(−(new)pij) ≤ (old)rj ,
where L is deﬁned at Step 2.

The proof of the Lemma 6.3 follows by using (4.15) and (4.16).
The following lemma describes the important features of our algorithm. The results of
these lemma will be used to show that the algorithm will terminate after ﬁnite number of
iterations.

Lemma 6.4. In each iteration of the algorithm, following hold:

same.

(i) If L 6= ∅ or eT0 6= ∅ at Step 2 then eE reduces at Step 3. Otherwise eE will remain the
(ii) The vector p decreases or remains same. In particular, if K \ {L ∪ eT0} 6= ∅ at Step 2

then pij decreases at Step 3 for all (i, j) ∈ K \ {L ∪ eT0}.

(iii) The vector r increases or remains same.

8

Proof. (i) At Step 0, eE is given by (4.6) and it is updated by (5.18), at Step 3. At Step
2 we updated K0 = K0 ∪ L and T0 = T0 ∪ eT0. According to (5.18), eE will reduce if
L 6= ∅ or eT0 6= ∅ at Step 2. If both L and eT0 are empty the eE will remain unchanged

by (5.18).

(ii) Initially, p is set by (4.3) and in each iteration it is updated by (4.16). It is easy to see

(iii) At the start of the algorithm we set r = 0. We modiﬁed r by (4.2) afterwards. In each

that for (i, j) ∈ K, ˜pij ≤ pij. Here the equality may hold for (i, j) ∈ L ∪ eT0.
iteration, matching X satisﬁes condition (s1) this means that (old)eV ⊆ (new)eV . Also,
for j ∈ (old)eV , as matching X also satisﬁes (s2). Moreover, (old)rj = (new)rj = 0 for
each j ∈ V \ eV . Therefore, vector r either remains the same or increases.

(new)p ≤ (old)p by part (ii) of Lemma 6.4. Thus (new)rj = fji(−(new)pij) ≥ (old)rj,

To show that our algorithm produces a stable matching is not possible without proving

that our algorithm will terminate after some iterations.

Theorem 6.5. The algorithm terminates after ﬁnite number of iterations.

Proof. Termination of the algorithm depends upon set of mutually acceptable pairs and price

vector p. By the Lemma 6.4 part (i), eE reduces when either L 6= ∅ or T0 6= ∅ or remains the

same. This case is possible at most |E| times.

If L = T0 = ∅ then, by part (ii) of Lemma 6.4, pij decreases for each (i, j) ∈ K.
Otherwise, p remains unchanged. As we know that p is bounded and discrete, therefore,
it can be decreased a ﬁnite number of time. This proves that in either case our algorithm
terminates after a ﬁnite number of iterations.

This is the most important result which establishes the existence of pairwise stability for

our model.

Theorem 6.6. The outcome (X; p, q, r) must satisﬁes the condition (p1) and (p2) if algo-
rithm terminates.

by (5.18) at Step 3 in each iteration. Thus fij(pij) and fji(−pij) are non-negative for all

Proof. We know that X ⊆ eE. Initially eE is deﬁned by (4.6) and afterwards it is updated
(i, j) ∈ eE. Therefore, fij(pij) ≥ 0 and fji(−pij) ≥ 0 for all (i, j) ∈ X. This shows that the

X satisﬁes (p1) at termination.

On contrary to (p2), assume that there exist α ∈ [πij, πij] and (i, j) ∈ E such that

fij(α) > qi

and

fji(−α) > rj.

If we take pij < α it yields fji(−pij) > fji(−α) > rj. But according to Lemma 6.2, pij is
the maximum integer for which this inequality holds. Thus pij < α is not possible. Now
consider that pij ≥ α, which implies that

fij(pij) ≥ fij(α) > qi.

(6.21)

9

However, at termination we have K = ∅ means that (i, j) 6∈ K and since (i, j) are not
matched, therefore, fij(pij) < ˜qi = qi. A contradiction to (6.21). Thus (p2) holds when the
algorithm terminates.

7 Conclusion

This paper presents a matching model where money is given in integers. The preferences
of participants are represented by general increasing utility functions. Ali and Farooq [1]
is a special case of our model. We have given a constructive proof for the existence of a
pairwise stable outcome in our model.
It would be worthwhile to prove the existence of
stable outcome for many-to-many model with such valuation functions by using the same
mathematical apparatus. Further, the complexity of our algorithm may depend on the length
of [π, π]. An interesting problem may be to devise an algorithm with polynomial complexity
in the number of participants.

References

[1] Ali Y, Farooq R. Pairwise stability in a two-sided matching market with indivisible

goods and money. J Oper Res Soc Jpn 2011; 54: 1–11.

[2] Eriksson K, Karlander J. Stable matching in a common generalization of the marriage

and assignment models. Discrete Math 2000; 217: 135–156.

[3] Farooq R. A polynomial-time algorithm for a stable matching problem with linear val-

uations and bounded side payments. Jpn J Ind Appl Math 2008; 25: 83–98.

[4] Gale D, Shapley LS. College admissions and the stability of marriage. Amer Math

Monthly 1962; 69: 9–15.

[5] Gusﬁeld D, Iriving RW. The Stable Marriage Problem Structure and Algorithms. Cam-

bridge, US: MIT Press, 1989.

[6] Roth A, Sotomayor M. Two-sided matching. A study in game-theoretic modeling and

analysis. Econ Soc Monogr, Cambridge University Press, 1990.

[7] Shapley LS, Shubik M. The assignment game I: The core. Internat J Game Theory

1972; 1: 111–130.

[8] Sotomayor M. Existence of stable outcomes and the lattice property for a uniﬁed match-

ing market. Math Social Sci 2000; 39: 119–132.

10

