6
1
0
2

 
r
a

 

M
1
2

.

 
 
]
E
P
o
i
b
-
q
[
 
 

1
v
4
7
3
6
0

.

3
0
6
1
:
v
i
X
r
a

Analyzing coevolutionary games with dynamic ﬁtness

landscapes

Hendrik Richter

HTWK Leipzig University of Applied Sciences

Faculty of Electrical Engineering and Information Technology

Postfach 301166, D–04251 Leipzig, Germany.

Email: hendrik.richter@htwk-leipzig.de.

March 22, 2016

Abstract

Coevolutionary games cast players that may change their strategies as well as their networks of interac-
tion. In this paper a framework is introduced for describing coevolutionary game dynamics by landscape
models. It is shown that coevolutionary games invoke dynamic landscapes. Numerical experiments are
shown for a prisoner’s dilemma (PD) and a snow drift (SD) game that both use either birth–death (BD)
or death–birth (DB) strategy updating. The resulting landscapes are analyzed with respect to modality
and ruggedness.

1 Introduction

Evolutionary games are mathematical models of interactions between individuals in a population and explain
how their behavioral strategies (for instance cooperation or competition) contribute to payoﬀ collecting and
consequently to the individuals’ success in terms of ﬁtness. An evolutionary game becomes dynamic if it is
played iteratively over several rounds and the individuals are allowed to change their strategies and/or to
recast the network describing with whom they are interacting. Such an iterated evolutionary game comprises
of an evolving population of individuals acting as players and can be seen as an expression of evolutionary
dynamics.

For describing evolutionary dynamics the framework of ﬁtness landscapes has been introduced, e.g. [8,
23, 27]. A ﬁtness landscape formulates relationships between the genetic speciﬁcations of individuals and
their ﬁtness. Together with the postulate of diﬀerences in ﬁtness over all possible genetic speciﬁcations and
a moving bias towards higher ﬁtness, the setup suggests the picture of an evolving population that is moving
directedly on the landscape. On a conceptual level, this picture is based on the notion of evolutionary paths
that are created by the topological features of the ﬁtness landscape. Evolutionary paths are a succession
of moves on the landscape with persistently ascending ﬁtness values. The existence and abundance of
such evolutionary paths gives raise to estimates about how likely a transition from low–ﬁtness regions to
high–ﬁtness regions in the landscape is. These transitions instantiate evolutionary dynamics.

Given the fact that there are two frameworks for addressing evolutionary dynamics, it appears naturally
to ask about their relationships. Unfortunately, both frameworks are not immediately compatible. Although
it is acknowledged that evolutionary games cast ﬁtness landscapes, it became also clear that such game
landscapes change with an evolving population of players [14]. This is attributed to frequency–dependent
selection. In other words, game landscapes are dynamic. Based on some recent results on dynamic ﬁtness
landscapes, e.g. [5, 19, 21], there are some ﬁrst attempts applying these ideas to games [22].
In this
paper the concept of dynamic landscapes is used for analyzing evolutionary games. Games are considered

1

where the players may update their strategies (evolutionary games [1, 6, 28]) but also games where the
players may additionally change their network of interaction (coevolutionary games [18, 29]). In particular,
it is shown that the proposed method makes it possible to model and analyze evolutionary games and
coevolutionary games within the same framework. The paper is structured as follows. In Sec. 2, some basic
deﬁnitions are given and evolutionary and coevolutionary games are brieﬂy recalled. Sec. 3 reviews game
dynamics, particularly the processes to update strategies and networks of interaction. Landscape models
of coevolutionary games are introduced and discussed in Sec. 4. Sec. 5 reports numerical experiments
on landscape properties such as modality and ruggedness. Sec. 6 closes the paper with a summary and
conclusions.

2 Deﬁnitions and game description

The coevolutionary games considered in the paper comprise of three levels of activity: (i) game playing,
(iii) updating the strategy, and (iii) updating the network of interaction. The game playing is done by a
population of N players I that use one of two strategies π during each round k = {0, 1, 2, . . .}. A player
Ii ∈ I, i = 1, 2, . . . , N , can either cooperate (Ci) or defect (Di). A pairwise interaction between two players
Ii and Ij (which can be seen as player and coplayer) yields a reward in form of a payoﬀ (pi, pj) as given by
the payoﬀ matrix

(cid:18) Cj Dj

(cid:19)

Ci R S
Di
P

T

.

(1)

For player and coplayer using the same strategy, (πi, πj) = (Ci, Cj) or (πi, πj) = (Di, Dj), the reward for
mutual cooperation pi = pj = R or the punishment for mutual defection pi = pj = P is obtained. A
mixed choice of strategy gives the sucker payoﬀ S for cooperating with a defector, and the temptation T
to defect while the coplayer is cooperating. Hence, for (πi, πj) = (Ci, Dj), there is pi = S and pj = T ,
while for (πi, πj) = (Di, Cj), there is pi = T and pj = S. Depending on the numerical values of (R, P, S, T )
and their order, particular examples of the game are obtained, which have become metaphors for studying
social dilemmas and discussing strategy selection along with the eﬀect on short– and long–term success in
accumulating payoﬀ [11, 12]. Most prominently, there are prisoner’s dilemma (PD) games, where T > R >
P > S, and snow drift (SD) games, where T > R > S > P .
The payoﬀ pi(k) of player Ii in round k depends not only on the player’s strategy πi(k) and the values
of the payoﬀ matrix (1), but also on who its coplayer is (or more precisely as to what the coplayer’s strategy
is) and how many coplayers there are. The question of who–plays–whom in a given round of the game is
addressed by the network of interaction. A convenient way of expressing and visualizing the network of
interaction is by using elements from evolutionary graph theory [1, 10, 15, 24]. Evolutionary graph theory
places each player of the population on a vertex of an (undirected) graph. This graph describes the network
of interaction and consequently it is called interaction graph. As there are no empty vertices and a vertex
can only be occupied by one player, the number of vertices of the graph equals the number of players N .
For each player, its coplayers are indicated by edges that connect the vertex of the player with the vertices
of the coplayers. Such an edge deﬁnes the connected players to be adjacent. Each vertex can have up to
N − 1 edges (self–play is not allowed). As the degree d is the number of edges incident with a vertex, the
degrees of the interaction graph equal the number of coplayers that are engaged with each player in a single
round. A graph is called regular if the degree is the same for all vertices. Hence, a regular interaction graph
means that all players have the same number of coplayers.
The interaction graph can be described algebraically by its (interaction) adjacency matrix AI , which is
also called interaction matrix. The matrix AI ∈ [0, 1]N×N is a symmetric N × N matrix with entries aij = 1
indicating an edge between vertex i and j and aij = 0 showing that players Ii and Ij are not adjacent. The
diagonal elements aii = 0 because there is no self–play. The symmetry of AI reﬂects the fact that two players
Ii and Ij mutually engage in the game. From the perspective of player Ii, the player Ij may be the coplayer.

2

If so, then from the perspective of player Ij, the player Ii is the coplayer. Consequently, aij = aji in the
adjacency matrix AI . If all aij = 1 (except aii = 0), the graph is complete, meaning that every player has
all other players as coplayers and the evolutionary game is understood to be well–mixed [28]. To summarize,
for describing completely and deterministically the game and the allocation of payoﬀ, apart from the payoﬀ
matrix (1) only two other entities are necessary: the strategy vector π = (π1π2 . . . πN ) with πi ∈ [Ci, Di] and
the adjacency matrix AI . This setting deterministically ﬁxes the payoﬀ p = (p1, p2, . . . , pN ) for each player.
For making payoﬀ pi of a player Ii interpretable as reproduction rate or survival probability (and lastly as
ﬁtness f ), it has been suggested to rescale pi by a positive, increasing, diﬀerentiable function [1, 24]. In the
following the linear function f = 1 + δ · p is used with the intensity of selection δ ≥ 0.

3 Coevolutionary game dynamics

As the game is completely determined by ﬁxing the payoﬀ matrix (1) as well as the strategy vector π, and
the adjacency matrix AI , the distribution of payoﬀ pi(k) amongst the players remains the same if the players
were to engage in the game with the same entities for a second time in round k + 1. In other words, for
these entities being constant the game can be seen as static. Consequently, to make the evolutionary game
dynamic requires to update either the players’ strategies or the network of interaction, or both.

3.1 Updating Strategies

There is a huge amount of work devoted to the modes of updating the player strategies in evolutionary
games [1, 15, 17]. Most models use versions of a stochastic strategy updating based on a Moran process,
but there are also works emphasizing on limiting the eﬀect of random and including self–interest of players,
e.g. [7]. According to a Moran process [30], in each round a player Ii (or more precisely its strategy) is
replaced by (the strategy of) a player Ij. The players Ii and Ij are selected at random, but the probabilities
of the selection may not be uniform, for instance depending on the players’ ﬁtness, which may vary. Versions
of stochastic updating rules diﬀer in several respects. Diﬀerences are, for example, the actual probabilities
that given players Ii and Ij are selected or whether or not there is an order between selecting the player
providing the strategy (the source) and selecting the player receiving the strategy (the target). Finally,
there may be general restrictions as to which players are allowed to be a possible source and/or target of
another player. Such predetermined restrictions imply a replacement structure [15]. Conceptual similar to
interaction, the question of who–may–replace–whom can be described by a network of replacement. This
network is expressible by a replacement graph and consequently by a (replacement) adjacency matrix WR,
which is also called replacement matrix. The matrix WR ∈ RN×N has entries wij > 0 if player Ii may
provide its strategy for player Ij to receive. Note that the values of wij > 0 contribute to the probabilities
that player Ii is source and player j is target. Hence, if for a constant ¯w (cid:54)= 0 all wij = ¯w, every player Ii may
be the source to every target player Ij with equal probability. In other words, if there are no restrictions,
the replacement graph is fully connected with evenly weighted edges.

Amongst strategy updating, the following replacement rules are frequently studied: birth–death (BD),
death–birth (DB), imitation (IM), and pair–wise comparison (PD) [1, 17, 24]. For all rules there may be
restrictions with respect to replacement. The rules BD and DB diﬀer in the order with which source and
target are selected, with BD selecting source before target and DB target before source. The probability to
become a source depends on the source’s ﬁtness. IM is similar to DB but with the diﬀerence that the target
itself can compete with other players to become a source. In PD (also known as link dynamics) both players
are selected simultaneously and the source is replaced by the target with a probability depending on the
ﬁtness diﬀerence between the players, for instance via a Fermi function. Hence, IM and PD share that the
target can be its own source, meaning than the strategy remains the same. To summarize, all Moran–based
updating rules depend only on random (and possibly on players’ ﬁtness and replacement restrictions), but
not on details of the interaction (for instance who the source or target are actually interacting with and what
those strategies are). Therefore, they do not account for self–interested players [7] and make it possible to

3

disentangle player and strategy in the sense that it makes no diﬀerence from which source the target receives
its strategy updating. In other words, for all these updating rules it is possible to specify probabilities τij
that the strategy of a source Ii replaces the strategy of a target Ij depending only on replacement matrix
and ﬁtness [17].

3.2 Updating networks of interaction

If in addition to the strategies also the network of interaction can be updated in evolutionary games, the
game is called coevolutionary. In essence, coevolution in evolutionary games is to consider the network of
interaction as dynamic, from which follows that the interaction matrix AI must be time–dependent. There
is a substantial variety of schemes and rules for coevolution [16, 18, 29]. These schemes can be categorized
according to diﬀerent criteria. A ﬁrst criterion is the type of dynamics of AI , for which there can be three
groups: (i) purely random updating, (ii) random updating with probabilities depending on ﬁtness or current
strategy or network properties, and (iii) deterministic updating. A second criterion is the eﬀect which the
dynamics has on graph–theoretical properties of the networks, for instance, the number of edges (is the
number of links in the network constant or growing/shrinking), or the regularity of the graph (do all players
have always the same number of coplayers, or are there rules that allow speciﬁc players to become super–
connected), or network connectivity. Finally, there is the question of time scale, that is how the cycles
of strategy updating relate to the cycles of network updating, for instance if the edges have a life–time
depending on the number of strategy updating that the players experienced.

Unfortunately, the topic of network updating is not yet matured as far as to express for a given rule
transitions from one network to another probabilistically. Whereas for strategy updating, there are replace-
ment probabilities for diﬀerent updating rules [17], the same is not known for network updating. However,
it might be reasonable to assume that a network updating involves to create an interaction matrix AI (k + 1)
at point in time k + 1 from a matrix AI (k) at the previous point k. Such a succession of interaction networks
can be modelled by instances of an Erd¨os–R´enyi graph. In this paper, the discussion is restricted to the case
that the number of coplayers is the same for all players and constant for all updating instances. Employing
such a model precludes situations where a more highly connected player receives high ﬁtness due to its con-
nectedness, but not necessarily due to the eﬀectiveness of its strategy. For d coplayers, such an interaction
graph has degree d and belongs to a special class of Erd¨os–R´enyi graphs, namely random d–regular graphs.
Modelling the interaction network by random d–regular graphs makes it possible to systematically carry
out numerical experiments because recently eﬃcient algorithms for generating such graphs became avail-
able [2, 3, 9]. Moreover, for random d–regular graphs, some analytic results about the number of diﬀerent
graphs are known. This, in turn, corresponds to the number of possible player–coplayer combinations.
For a small number of edges (= coplayers) d, the number Ld(N ) of diﬀerent d–regular graphs for N
vertices (= players) can be found by enumeration, see for instance the entries in the Sloane encyclopedia
of integer sequences [25]. Thus, L2(4) = 3 and L3(4) = 1, while L2(6) = 70, L3(6) = 70, L4(6) = 15 and
L5(6) = 1, and L2(8) = 3507, L2(10) = 286884. Note that generally LN−1(N ) = 1, which means that a
well–mixed population represented by a complete network of interaction possesses only one instance of the
matrix AI . In other words, for a complete network graph the game cannot be coevolutionary. It is always
static with respect to interaction because no dynamic changes can be cast out of a single instance of AI .
Further note that Ld(N ) grows rapidly. Although no simple closed formula for Ld(N ) and given N and d
is known, asymptotic expressions have been found [31]. Asymptotically, and for d = o(
N ) and dN even,
the number is

√

12N + O(cid:16) d2

(cid:16) 1−d2
(cid:1)! 2
(cid:0) dN
4 − d3
dN
2 (d!)N

N

2

(cid:17)(cid:17)

(dN )! · exp

Ld(N ) =

.

(2)

Based on a collection of random d–regular graphs the eﬀect of diﬀerent networks of interaction on payoﬀ
collecting and ﬁtness can be analyzed, for which a landscape approach is proposed in the next section.

4

4 Landscape models of game dynamics

4.1 Static and dynamic landscapes
A general deﬁnition of a (static) ﬁtness landscape ΛS is the triple ΛS = (X, n, f ), where X is a conﬁgu-
ration space, n(x) is a neighborhood structure that assigns to every x ∈ X a set of direct neighbors, and
f (x) : X → R is a ﬁtness function that gives to every x ∈ X a proprietary quantity to be interpreted as a
’quality’ information or ﬁtness [23, 27]. In this deﬁnition, the conﬁguration space together with the neigh-
borhood structure expresses a (multi–dimensional) ’location’, while ﬁtness is a property of this location.
The conﬁguration space itself can be seen as an unordered (ﬁnite or inﬁnite) list of conﬁgurations that
the genetic speciﬁcations of biological systems can have. The neighborhood structure deﬁnes a (possibly
multi–dimensional) order of this list by establishing what is directly next to each element of the conﬁgu-
ration space. As direct neighbors of an element have a neighborhood structure themselves, this naturally
establishes distant neighbors of the element as well.

The deﬁnition of a (static) landscape has the consequence of each conﬁguration possessing a constant
ﬁtness value. For several reasons this might not realistically reﬂect the evolutionary scenario to be described
and generally may restrict the descriptive power and versatility of the landscape model. Hence, assuming
that ﬁtness may change over time, while conﬁguration space and neighborhood structure remain constant,
the deﬁnition above can be extended to a dynamic ﬁtness landscape, which can be expressed as the quintuple
ΛD = (X, n,K, F, φ) [20]. In addition to the elements of the static landscape, there is the time set K, the set of
all ﬁtness function F in time κ ∈ K, and the transition map φ deﬁning how the ﬁtness function changes over
time. It is noteworthy that for a discrete time set K, for instance for the integer numbers K = {0, 1, 2, . . .},
In other
the notion of a dynamic landscape coincides with the notion of a series of static landscapes.
S = (X, n, f (2)) can be reformulated as one dynamic
words, two static landscapes Λ(1)
landscape with (f (1), f (2)) ∈ F and φ describing how f (1) changes into f (2).

S = (X, n, f (1)) and Λ(2)

4.2 Player landscapes

Applying a landscape approach for describing evolutionary dynamics requires to address what may constitute
a conﬁguration x ∈ X and its neighborhood n(x), but also what deﬁnes ﬁtness f (x). For the evolutionary
game described in the previous sections, there are several modelling options, which will be reviewed in the
following. The actual modelling choice of X, n and f and their interdependencies may additional entail a
landscape that is dynamic. The simplest modelling choice is to equate conﬁgurations with players I, which
for N players leads to a (ﬁnite) conﬁguration space with N elements. The neighborhood structure follows
from the d coplayers that each player has, which can be 1 ≤ d ≤ N − 1. In other words, the neighborhood
of a player consists of all the other players with which it is mutually engaged in a game according to the
interaction matrix AI . Hence, such a player landscape ΛI can be speciﬁed by ΛI = (I, AI , f ). A popular
form of such player landscapes is to place the players on a two–dimensional square lattice and deﬁne the
coplayers to be Von Neumann (or Moore) neighborhoods, which consists of the lattices cells orthogonally (or
additionally diagonally–adjacent) surrounding a central cell. Such an arrangement ﬁxes the number of direct
neighbors to d = 4 (or d = 8), but yields a convenient way of visualizing the quality information over the
resulting two–dimensional structure, which might be one reason for the popularity of these neighborhoods.
The most obvious choice of the quality information is payoﬀ p or quantities directly derived from it such as
the linear ﬁtness f = 1+δ·p introduced earlier. This has led to label such landscapes as payoﬀ landscapes [4].
There are, however, several problems with such a player landscape model. The main problem is that
with the player’s and coplayers’ strategies two quantities decisive for the amount of payoﬀ are not directly
attached to the conﬁguration, which is player only. Strategies can be seen as ambiguous and polyvalent
properties of the conﬁguration of players. This means that the payoﬀ attributable to a conﬁguration depends
on both the player’s strategy and also on the strategies of its neighboring coplayers. This aspect is known
as frequency–dependence as the payoﬀ can be seen as to depend on how frequent the strategy that the
In short, ﬁtness derived from payoﬀ is dynamic so that the
player adopts also occurs in the coplayers.

5

player landscape ΛI = (I, AI ,K, f (κ), φ) is dynamic as well. Moreover, the dynamics of f (κ) is caused
not only by frequency–dependence, but also by strategy updating for which the player landscape model
does not directly account and both these causes can hardly be separated from each other. Hence, the
transition map φ describing how the ﬁtness f (κ + 1) relates to f (κ) is not straightforwardly deﬁnable. In
addition, modelling conﬁgurations of a landscape by players means that the neighborhood structure is the
adjacency matrix. In other words, a variable network of interaction, as in coevolutionary games, implies
a changing neighborhood structure. To conclude a player landscape of a coevolutionary game involves
changing neighborhood structure as well as dynamic ﬁtness. This may make analyzing such a landscape
rather complicated.

There is another reason for the diﬃculties to deduce meaningful conclusions from payoﬀ over a player
landscape. Topological features of the landscape can be used as a starting point for estimating how likely
transitions from low–ﬁtness conﬁgurations to high–ﬁtness conﬁguration are and also which conﬁgurations
are most likely to be a steady state of evolutionary dynamics. However, which player in a symmetric game
as speciﬁed by the payoﬀ matrix (1) exactly is a likely high–ﬁtness outcome of an evolutionary process
is not very relevant. A much more important question is what fraction of the players in the long run
settles stably to one of the possible strategies. In pursuing this question, there are several works that deﬁne
the quality information of the landscape to be the strategy to which a player temporary or ﬁnally settles.
This means the ’ﬁtness’ is expressed by the strategy vector π(k). The results have been visualized by
coloring the players according to their strategy [13, 14]. Such a modelling has the advantage that the spatial
and temporal distribution of the strategy preference can be visualized with respect to the player–coplayer
structure. However, payoﬀ–based ﬁtness as the main drive of evolutionary game dynamics is not an explicit
component of such a landscape.

4.3 Strategy landscapes

An alternative modelling choice is to equate conﬁgurations with all possible combinations of strategies that
each player and its coplayers can have. An element π ∈ Π of the strategy conﬁguration space Π is comprised
of the strategies of any player Ii, i = 1, 2, . . . , N , and its up to N − 1 coplayers: π = (π1π2 . . . πN ). Note
that the strategy conﬁguration space Π generalizes the time–dependent strategy vector π(k) towards all of
its possible instances. Hence, for N players with two possible strategies, Π contains (cid:96) = 2N elements. If we
binary code the strategies cooperation and defection (for instance Ci = 1, Di = 0), an element π ∈ Π appears
as binary string of length N . Note that the bit–count of π, bc(π), provides a simple way of expressing the
fraction of cooperators bc(π)
N . It is assumed that only one player or coplayer can change its strategy at a
given point in time. This implies a neighborhood structure where each element π has N direct neighbors
which are distanced by Hamming distance of 1, which is denoted by H1
d. With such a modelling we obtain
d, fi) for each player Ii and each network
for payoﬀ–based ﬁtness f a unique and static landscape Λi
of interaction. As the game speciﬁed by the payoﬀ matrix (1) is symmetric, the strategy landscapes Λi
Π are
topologically alike for all players Ii. They can be transformed into each other by shifting and reshuﬄing.
For a landscape interpretation this topological likeness implies that landscape quantiﬁers such as the number
of maxima, or correlation structure, or information content do not vary over the Λi

Π = (Π,H1

For N = 4, the landscapes can be visualized in two dimensions, see Fig. 1. It shows Λi

0 1 1 1

1 0 1 1
1 1 0 1
1 1 1 0

Π.

 the adjacency matrix specifying a PD game

Π, i = 1, 2, 3, 4,

for the payoﬀ matrix

Ci
Di

3
5

and AI =

(cid:18) Cj Dj

(cid:19)

0
1

with a complete network of interaction and d = 3. We ﬁnd that L3(4) = 1 and hence the game is static with
respect to updating the network of interaction. Observe that for each player there is only one maximum
ﬁtness value (the player is defecting, while all coplayers cooperate) and one minimum ﬁtness value (the
player cooperates, while all coplayers defect). Apart from the single maximum and the single minimum,
there are several conﬁgurations that have the same ﬁtness value. Interestingly, these conﬁgurations do not

6

Figure 1: Strategy landscapes Λi
Π for a PD game with N = 4 and a complete network of interaction.
Same colors give equal ﬁtness values f = 1 + δp for payoﬀ p with δ = 0.25. Each strategy conﬁguration
π = (π1π2π3π4) has N = 4 neighbors distanced by Hamming distance H1
d, while periodic boundary conditions
apply.

form a neutral network [23] as they are no direct neighbors. From the strategy landscape Λi
Π it can be
concluded which strategy for the player Ii (with respect to the strategies of the coplayers) yields the highest
ﬁtness and is therefore most desirable from the perspective of Ii. Nonetheless, the evolutionary path from
a given start conﬁguration may depend on, and be inﬂuenced by, the strategies provided to and/or received
from the coplayers. In addition, from the perspective of another player, another strategy conﬁguration is
best. Best conﬁgurations for respective players, however, are mutually exclusive, which is a deﬁning feature
of social dilemma games such as PD. Consequently, each strategy landscape Λi
Π can be seen as a building
block that constructs a strategy landscape of the game. Such a game landscape would allow conclusions as
to what strategy conﬁgurations are preferred if all players and their interactions are taken into account. In
other words, a game landscape may model the dynamics caused by the strategy updating processes discussed
in Sec. 3.1.

4.4 Game landscapes

Reconsider the game with N = 4 players, for which Fig. 1 depicts the player–wise strategy landscapes Λi
Π.
At every point in time k, the game can be seen as occupying one of its 24 = 16 conﬁgurations. Put another
way, the actual strategy vector π(k) speciﬁes an actual conﬁguration on the landscapes Λi
Π. For each player
Ii, its landscape Λi
Π gives its actual ﬁtness fi(k). The strategy updating process means that one player
provides its strategy for another player to receive. The receiving player changes its strategy. According to
the landscape view this process corresponds with changing the actual conﬁguration π(k) to a neighboring
conﬁguration π(k +1). The change of conﬁguration entails that all players may experience a change of ﬁtness
as well. No player can hold onto its conﬁguration if the strategy updating process is underway unless one of
the two absorbing conﬁgurations are reached, namely π = (00 . . . 00) or π = (11 . . . 11). In the following, the
strategy updating processes birth–death (BD) and death–birth (DB) will be discussed. For these processes
transition probabilities can be derived [17]. Furthermore, it will be convenient to rewrite the landscape Λi
Π
as its decomposition Λi
(cid:96) contains the ﬁtness and neighborhood of
conﬁguration (cid:96).
Assume that the game is in the conﬁguration π(k) = (1101), which means that player I3 is defecting,
while the three other players are cooperating. According to the PD game, the ﬁtness of I3 is highest,
the three other players have the same (albeit lower) ﬁtness. To start with, let us consider a BD strategy
updating. A player’s strategy is chosen at random with a probability proportional to ﬁtness to be a source
(hence birth). The birth probability of a conﬁguration (cid:96) of player Ii therefore scales to bi
, where
the λi
Π. The player with the highest ﬁtness is most likely to be
a source, which is I3 with strategy π3(k) = 0. Which one of the three players is the target to receives the
strategy (hence death) is due to chance but inﬂuenced by possible restrictions regarding the replacement.

(cid:96)}, (cid:96) = 1, 2, . . . , 2N , where each λi

(cid:96) are the decompositions of the landscape Λi

Π = {λi

(cid:96)(cid:80)2N
(cid:96) = λi

(cid:96)=1 λi
(cid:96)

7

11010010110100100246π3π4π1π2f111010010110100100246π3π4π1π2f211010010110100100246π3π4π1π2f311010010110100100246π3π4π1π2f4(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

Figure 2: Modality measured by the number of local maxima #LM over N and d. Red gives the results for
BD updating, green for DB updating. (a) – (d): no replacement restriction. T = 5: (a) PD game, (b) SD
game; T = 7: (c) PD game, (d) SD game. (e) – (h): replacement restrictions. T = 5: (e) PD game, (f) SD
game; T = 7: (g) PD game, (h) SD game.

N(cid:88)

j=1

wji(cid:80)N

i=1 wji

, where the wji are the elements of the

Hence, the death probability of a player Ii is di = 1

N

replacement matrix WR possibly restricting replacement of strategies as discussed in Sec. 3.1. Note that
the death probability is independent of ﬁtness and hence the same for all conﬁgurations. A BD (and also a
DB) updating does not envisage self–replacement and hence the replacement matrix WR must have diagonal
elements wii = 0. Hence, if there are no replacement restrictions, then di = 1
N for all players using a BD
updating. Assume that all players can be a target and I2 is chosen. Hence, the strategy conﬁguration after
the strategy updating is π(k + 1) = (1001). The players I2 and I3 have leveled their ﬁtnesses, while the
ﬁtness of both the other players is fallen even more. Now consider a DB strategy updating. Here, a player’s
strategy is chosen at random with a probability proportional to the inverse of its ﬁtness to be a target
(hence death). Therefore, the death probability of a conﬁguration (cid:96) of player Ii can be expressed as scaling
to di
. Still assume that the game is in the conﬁguration π(k) = (1101) and as the players
I1, I2, and I4 have the same (low) ﬁtness values, one of them is most likely to be the target. Suppose
I1 is chosen. Which one of the three players provides its strategy as a source (hence birth), depends on
chance and possible replacement restrictions. We get the birth probability bi = 1
N

(cid:96)(cid:80)2N
(cid:96) = 1 − λi

N(cid:88)

, which is

(cid:96)=1 λi
(cid:96)

wij(cid:80)N

j=1

i=1 wij

the same as the death probability in BD, but the target and the source are switched in the elements of the
replacement matrix. Note that only if the player I3 is chosen, a change in the conﬁguration takes place, that
is the strategy conﬁguration after the strategy updating is π(k + 1) = (0101). In other words, the outcome
of both a DB and a BD updating may be the same, but the probabilities to reach it may be diﬀerent.

For a suﬃcient large number of updating processes (and therefore changes of conﬁguration), there will
be some conﬁgurations that the game occupies more often than others. These may be the absorbing
conﬁgurations with a bit count bc(π) = 0 and bc(π) = N . Whether or not these absorbing conﬁgurations

8

051015200510152000.511.52#LM#LM#LM#LM#LM#LM#LM#LM#LMdN0510152005101520100102104Ndlogloglogloglogloglogloglog#LM#LM#LM#LM#LM#LM#LM#LM#LM0510152005101520100102104Ndlogloglogloglogloglogloglog#LM#LM#LM#LM#LM#LM#LM#LM#LM0510152005101520100102104Ndlogloglogloglogloglogloglog#LM#LM#LM#LM#LM#LM#LM#LM#LM05101520051015200246Nd#LM#LM#LM#LM#LM#LM#LM#LM#LM0510152005101520100102104Ndlogloglogloglogloglogloglog#LM#LM#LM#LM#LM#LM#LM#LM#LM0510152005101520100102104Ndlogloglogloglogloglogloglog#LM#LM#LM#LM#LM#LM#LM#LM#LM0510152005101520100102104Ndlogloglogloglogloglogloglog#LM#LM#LM#LM#LM#LM#LM#LM#LMare reached and how long this takes, gives raise to ﬁxation probabilities and times to ﬁxation, which are
interesting quantities to study [10, 17, 24]. However, here it is focused on the question of how frequent any
conﬁguration is. The frequency of reaching a conﬁguration scales to the probabilities of birth and death
discussed so far. Hence, for a BD updating the game landscape

(3)

(4)

Π = {λBD
ΛBD

(cid:96)

} =

can be deﬁned, while for a DB updating, we set

Π = {λDB
ΛDB

(cid:96)

} =




1 + exp

1 + exp

(cid:17)

 ,
 ,

(cid:16) 1

N

1

(cid:80)N

i=1 bi

(cid:96)di

(cid:16) 1

N

1

(cid:80)N

i=1 di

(cid:96)bi

(cid:17)

both with (cid:96) = 1, 2, . . . , 2N . Diﬀerent updating processes cast diﬀerent game landscapes ΛBD
Π out
of the same strategy landscapes of the players Λi
Π are topological alike, and hence
might be seen as to possessing symmetry properties, diﬀerent strategy updating rules break the symmetry
of the player–wise strategy landscapes.

Π . Given that the Λi

Π and ΛDB

The discussion so far has been for a constant network of interaction, that is a speciﬁc matrix AI . As
pointed out in Sec. 3.2, network updating can be understood as to be describable by a series of adjacency
matrices AI (κ). Hence, as the ’genetic description’ of the evolutionary game comprises of the strategy vector
and the network of interaction, the strategy conﬁgurations made up by the space Π could be augmented by
interaction conﬁgurations built by all possible networks of interaction. Consequently, the Ld(N ) diﬀerent
interaction graphs enumerated by Eq.
(2) could be seen as conﬁgurations according to the landscape
deﬁnitions discussed above. However, in view of the rather large number of possible graphs for a given
N and 1 < d < N − 2 (a rough estimate of Eq. (2) for d (cid:28) N yields Ld(N ) = O(N N )), an alternative
model is to understand diﬀerent interaction graphs as dynamic instances of the strategy landscape. Put
diﬀerently, the dynamics of the strategy landscape is the results of its variability with respect to the network
of interaction.
It should be noted that the timely order of the varying network of interaction could be
interpreted as temporal neighborhoods according to the neighborhood structure inherent to landscapes.
With network updating modelled as dynamic instances of player–wise strategy landscapes, we get a dynamic
d,K, fi(κ),{AI (κ), AI (κ + 1)}) for describing a coevolutionary game. Apart from the
landscape Λi
d and the integer time set K, the quantity fi(κ) gives payoﬀ–
strategy conﬁguration Π with neighborhood H1
based ﬁtness for each conﬁguration, each player Ii and the κ–th network of interaction. The matrix pair
{AI (κ), AI (κ + 1)} of subsequent adjacency matrices speciﬁes how the ﬁtness fi(κ + 1) relates to fi(κ). For
these dynamic player–wise strategy landscapes, game landscapes for BD and DB updating can be deﬁned
according to the probabilities of birth/death and expressed as dynamic counterparts of Eqn. (3) and (4).
These dynamic BD and DB landscapes are the main topic of the numerical experiments reported in the
next section.

Π = (Π,H1

5 Numerical experiments

The numerical experiments with the dynamic ﬁtness landscapes of coevolutionary games presented in this

(cid:18) Cj Dj

(cid:19)

(cid:18) Cj Dj

(cid:19)

research consider a PD game and a SD game with payoﬀ matrices

Ci
Di

3
5

0
1

and

Ci
Di

3
5

1
0

,

respectively. Additionally, the eﬀect of varying the T /R ratio (which encourages or dampens the temptation
to defect) is studied. Therefore, results for T = 5 are contrasted with T = 7. The dynamics of the landscape
is addressed by examining the eﬀect of varying networks of interaction. Algorithms are employed that
numerically generate adjacency matrices AI (κ) specifying random regular graphs with given degree [2, 3, 9].

9

It is checked if the graphs are connected. If a graph fails the check, there are isolated vertices that may
bias controlling the interaction network via the graph’s degree and hence such graphs are discarded. For
the experiments, a set of up to 3000 graphs with prescribed N and d are generated. For Ld(N ) < 3000, the
complete set of possible networks of interaction is used. Also, diﬀerent replacement structures are analyzed.
The experimental setup follows previous works [15] and deﬁnes the replacement matrix WR as random
regular graph with given degree and guaranteed connectivity. Additionally, the elements wij (cid:54)= 0 are ﬁlled
with realizations of a random variable uniformly distributed on the interval [0, 1]. The degree of WR is
set to match the degree of AI . All these experiments are carried out for BD and DB landscapes. Other
updating schemes such as PC or IM can be treated likewise as for these processes transition probabilities
are also known [17] and hence landscapes similarly to (3) and (4) can be computed. With the conventional
PC–based computational resources that were available, it was possible to experiment within a reasonable
time–frame with up to N = 20 players. All experiments employ a linear relationship f = 1 + δp between
payoﬀ and ﬁtness with δ = 0.25.

2N → 0 for N getting larger. All these results support previous ﬁndings

As pointed out before, the landscapes can only be visualized as two–dimensional projections up to N = 4
players. For analyzing landscapes with more players, we need to resort to landscape measures. As a ﬁrst
measure we look at modality expressed by the number of local maxima #LM . Local maxima are potential
steady states on the evolutionary path. Hence, the number of local maxima relates to the variety of possible
evolutionary paths and consequently to the complexity of the evolutionary dynamics displayed. If there is
just one (smoothly accessible) maximum, then all evolutionary paths converge to it and the evolutionary
dynamics displayed is rather simple. If, on the other hand, there is a large number of maxima, then the
possible evolutionary paths may be very diﬀerent resulting in more complex evolutionary dynamics. Fig.
2 shows the number of local maxima #LM over even N and d. The red lines show a BD updating, the
green lines a DB updating.
In addition to the #LM averaged over the up to 3000 diﬀerent interaction
networks tested (horizontal lines), the vertical spikes indicate the range between the least and the largest
value of #LM . Except Fig. 2a and 2e showing the PD game for T = 5, the #LM are given as logarithmic
plots. The results show several major trends that partly inﬂuence each other. A ﬁrst is that SD landscape
have generally more maxima than PD landscapes and also DB updating generates more maxima that BD
updating. Further note that #LM
about evolutionary games, for instance that PD games but also BD updating does not provide an advantage
for cooperators [15]. Thus, the small number of maxima of the player–wise landscapes Λi
π (compare to Fig.
1) corresponds with the small number of maxima in the game landscape. By contrast, for the SD game
and DB updating not only conﬁgurations where the defecting player earns the largest payoﬀ are maxima
of the game landscapes. Consequently, the number #LM is larger. Also, an increased T /R ratio leads to
more maxima, albeit lightly. In addition, for T = 7 the spread of #LM is over a larger range, indicating
that diﬀerent networks of interaction produces topologically diﬀerent landscapes. The same applies for
restrictions imposed by WR, see Fig. 2e-h. Most visible for T = 5, but also for T = 7, replacement
restrictions imply landscapes that vary substantially over diﬀerent networks of interaction.
As a second landscape measure, the correlation length λ is studied, see Fig. 3. The correlation length λ =
−1/ log(|r(1)|) derives from the autocorrelation r(1) of time lag 1 of the landscape’s random walk correlation
function [23]. A random walk of length 10000 was used, the results are averages over 50 independent walks.
Due to brevity requirements, only results for T = 5 are given. As there is an inverse relationship between
λ and ruggedness, it can be observed that ruggedness decreases as the number of player gets larger. On
the other hand, the number of players getting larger leads to a larger variety of λ, which means that the
landscapes diﬀer in ruggedness. This eﬀect is ampliﬁed by replacement restrictions, see 3c-d. As this is not
matched by a likewise increase in the number of maxima (compare to Fig. 2) additional topological features
must be augmented by additional players. Thus, it may be interesting to analyses the landscapes by further
landscape measures, for instance information content.

10

(a)

(b)

(c)

(d)

Figure 3: Ruggedness measured by the correlation length λ over N and d. Red gives the results for BD
updating, green for DB updating. (a) – (b): no replacement restriction. (c) – (d): replacement restriction.
T = 5: (a) (c) PD game, (b) (d) SD game.

6 Summary and conclusions

Coevolutionary games have players that update their strategies as well as their networks of interaction.
In this study, a reinterpretation of coevolutionary games as dynamic ﬁtness landscapes is proposed. The
dynamic landscapes are based on three major components: (i) a description of strategy updating as a Moran
process with deﬁnable probabilities of strategy transitions, (ii) a formulation of network of interaction up-
dating as instances of random regular graphs, and (iii) a linear relation between payoﬀ and ﬁtness. Using
these components, payoﬀ–related ﬁtness landscapes can be deﬁned for each player.
It is further shown
that coevolutionary game dynamics can be expressed by a game landscape derived from these player–wise
landscapes by including the strategy updating process. Moreover, diﬀerent strategy updating processes,
such as death–birth (DB) or birth–death (BD) produce diﬀerent game landscapes, which can be seen as
strategy updating breaking the symmetry of the play–wise landscapes.
In numerical experiments it has
been demonstrated that landscape measures such as modality and ruggedness allow to diﬀerentiate between
diﬀerent game landscapes. So far the approach presented is a technique for analyzing coevolutionary games
by landscapes. However, by using the distribution of maxima in strategy space, it might be feasible to
estimate ﬁxation probabilities. Moreover, the approach is not restricted to Moran processes as long as strat-
egy transition probabilities can be derived, at least approximately. Finally, networks updating is currently
modeled as a given sequence of random regular graphs, but should be understood as a transition process, for
instance by using reproducing graphs [26] as a tool to reﬁne the description of transitions between adjacency
matrices.

References

[1] B. Allen and M. A. Nowak, Games on graphs. EMS Surv. Math. Sci. 1: 113–151, 2014.

[2] M. Bayati, J. H. Kim, and A. Saberi, A sequential algorithm for generating random graphs. Algorithmica

58: 860–910, 2010.

[3] J. Blitzstein and P. Diaconis, A sequential importance sampling algorithm for generating random graphs

with prescribed degrees. Internet Mathematics 6: 489–522, 2011.

[4] M. Brede, The evolution of cooperation on correlated payoﬀ landscapes. Artiﬁcial Life 17: 365–373,

2011.

[5] D. V. Foster, M. M. Rorick, T. Gesell, L. M. Feeney, and J. G. Foster, Dynamic landscapes: a model of

context and contingency in evolution. J. Theor. Biol. 334: 162–172, 2013.

11

05101520051015200.40.50.60.70.8Ndλλλλλλλλλ05101520051015200.40.50.60.70.8Ndλλλλλλλλλ05101520051015200.20.40.60.81Ndλλλλλλλλλ05101520051015200.20.40.60.81Ndλλλλλλλλλ[6] G. W. Greenwood and D. Ashlock, Evolutionary games and the study of cooperation: Why has so little
progress been made? In: H. Abbass, D. Essam, R. Sarker (eds.), Proc. IEEE Congress on Evolutionary
Computation, IEEE CEC 2012, IEEE Press, Piscataway, NJ, 1–8, 2012.

[7] G. W. Greenwood and P. Avery, Does the Moran process hinder our understanding of cooperation
in human populations? In: G. Rudolph, M. Preuss (eds.), Proc. IEEE Conference on Computational
Intelligence and Games, IEEE CIG 2014, IEEE Press, Piscataway, NJ, 1–6, 2014.

[8] S. A. Kauﬀman and S. Johnsen, Coevolution to the edge of chaos: Coupled ﬁtness landscapes, poised

states, and coevolutionary avalanches. J. Theor. Biol. 149: 467–505, 1991.

[9] J. H. Kim and V. H. Vu, Generating random regular graphs. In: L. L. Larmore, M. X. Goemans (eds.),

Proc. ACM Symposium on Theory of Computing, STOC 2003, ACM, New York, 213–222, 2003.

[10] E. Lieberman, C. Hauert, and M. A. Nowak, Evolutionary dynamics on graphs. Nature 433: 312–316,

2005.

[11] J. Maynard Smith, Evolution and the Theory of Games. Cambridge University Press, Cambridge, 1991.

[12] M. A. Nowak, Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press,

Cambridge, MA, 2006.

[13] M. A. Nowak and R. M. May, The spatial dilemmas of evolution. Int. J. Bifurc. Chaos 3: 35–78, 1993.

[14] M. A. Nowak and K. Sigmund, Evolutionary dynamics of biological games. Science 303: 793–799, 2004.

[15] H. Ohtsuki, J. M. Pacheco, and M. A. Nowak, Evolutionary graph theory: Breaking the symmetry

between interaction and replacement. J. Theor. Biol. 246: 681–694, 2007.

[16] J. M. Pacheco, A. Traulsen, and M. A. Nowak, Coevolution of strategy and structure in complex

networks with dynamical linking. Phys. Rev. Lett. 97: 258103, 2006.

[17] K. Pattni, M. Broom, L. Silvers, and J. Rychtar. Evolutionary graph theory revisited: When is an

evolutionary process equivalent to the Moran process? Proc. Roy. Soc. A471: 20150334, 2015.

[18] M. Perc and A. Szolnoki, Coevolutionary games–A mini review. BioSystems 99: 109–125, 2010.

[19] H. Richter, Coupled map lattices as spatio–temporal ﬁtness functions: Landscape measures and evolu-

tionary optimization. Physica D 237: 167–186, 2008.

[20] H. Richter, Fitness landscapes that depend on time. In: H. Richter, A. P. Engelbrecht (eds.), Recent
Advances in the Theory and Application of Fitness Landscapes, Springer–Verlag, Berlin, 265–299, 2014.

[21] H. Richter, Codynamic ﬁtness landscapes of coevolutionary minimal substrates. In: C. A. Coello Coello
(ed.), Proc. IEEE Congress on Evolutionary Computation, IEEE CEC 2014, IEEE Press, Piscataway,
NJ, 2692–2699, 2014.

[22] H. Richter, Coevolutionary intransitivity in games: A landscape analysis. In: A. M. Mora, G. Squillero
(eds.), Applications of Evolutionary Computation - EvoApplications 2015, Springer–Verlag, Berlin, 869–
881, 2015.

[23] H. Richter and A. P. Engelbrecht, Recent Advances in the Theory and Application of Fitness Landscapes.

Springer–Verlag, Berlin, 2014.

[24] P. Shakarian, P. Roos, and A. Johnson, A review of evolutionary graph theory with applications to

game theory. BioSystems 107: 66–80, 2012.

12

[25] N. Sloane, The on–line encyclopedia of integer sequence. https://oeis.org (retrieved October, 29, 2015).

[26] R. Southwell and C. Cannings, Some models of reproducing graphs. I. Pure reproduction. Appl. Math.

1: 137–145, 2010.

[27] P. F. Stadler and C. R. Stephens, Landscapes and eﬀective ﬁtness. Comm. Theor. Biol. 8: 389–431,

2003.

[28] G. Szabo and G. Fath, Evolutionary games on graphs. Phys. Rep. 446: 97–216, 2007.
[29] J. Tanimoto, Dilemma solving by the coevolution of networks and strategy in a 2 × 2 game. Phys. Rev.

E76: 021126-1-7, 2007.

[30] P. A. Whigham and G. Dick, Evolutionary dynamics for the spatial Moran process. Genet. Programm.

Evol. Machine 9: 157–170, 2008.

[31] N. C. Wormald, Models of random regular graphs. In: J. D. Lamb, D. A. Preece (eds.), Surveys in

Combinatorics, 1999, Cambridge University Press, Cambridge, 239–298, 1999.

13

