Computer-automated tuning of semiconductor double quantum dots into the

single-electron regime

T. A. Baart1,2, P. T. Eendebak1,3, C. Reichl4, W. Wegscheider4, and L. M. K. Vandersypen1,2

1: QuTech, Delft University of Technology, P.O. Box 5046, 2600 GA Delft, The Netherlands

2: Kavli Institute of Nanoscience, Delft University of Technology,

P.O. Box 5046, 2600 GA Delft, The Netherlands

3: Netherlands Organisation for Applied Scientiﬁc Research (TNO),

P.O. Box 155, 2600 AD Delft, The Netherlands and

4: Solid State Physics Laboratory, ETH Z¨urich, 8093 Z¨urich, Switzerland

(Dated: March 9, 2016)

We report the computer-automated tuning of gate-deﬁned semiconductor double quantum dots in
GaAs heterostructures. We benchmark the algorithm by creating three double quantum dots inside
a linear array of four quantum dots. The algorithm sets the correct gate voltages for all the gates
to tune the double quantum dots into the single-electron regime. The algorithm only requires (1)
prior knowledge of the gate design and (2) the pinch-oﬀ value of the single gate T that is shared
by all the quantum dots. This work signiﬁcantly alleviates the user eﬀort required to tune multiple
quantum dot devices.

Electrostatically deﬁned semiconductor quantum dots
have been the focus of intense research for the applica-
tion of solid-state quantum computing [1–3]. In this ar-
chitecture, quantum bits (qubits) can be deﬁned by the
spin state of an electron. Recently, several experiments
have shown coherent manipulation of such spins for the
purpose of spin-based quantum computation [4–8]. En-
abled by advances in device technology, the number of
quantum dots that can be accessed is quickly increasing
from very few to many [9, 10]. Up to date, all these
quantum dots have been tuned by ‘hand’. This is a slow
process whereby gate voltages are tweaked carefully, ﬁrst
to reach a regime with one electron in each of the dots,
and then to adjust the strength of all the tunnel barri-
ers. Defects and variations in the local composition of
the heterostructure lead to a disordered background po-
tential landscape, which must be compensated for by the
gate voltages. On top, cross-capacitances of each gate
to neighboring dots increases the tuning complexity as
the number of dots increases. The ability to tune these
dots automated by computer algorithms, including tun-
ing of many dots in parallel, is an important ingredient
towards the scalability of this approach to create a large-
scale quantum computer.

In this Letter, we demonstrate the computer auto-
mated tuning of double quantum dot (DQD) devices. We
have created an algorithm that only requires as input: (1)
prior knowledge of the gate design, which is reasonable
for future large-scale quantum dot circuits and (2) the
measured pinch-oﬀ value of the single gate T shared by
all the quantum dots. We describe the algorithm used
and verify its robustness by creating three independent
DQDs inside a quadruple dot array. The algorithm ﬁnds
the correct gate voltages to tune all DQDs into the single-
electron regime and the computer recognizes that this
goal has been achieved within an overnight measurement.
A scanning electron microscopy (SEM) image of a de-
vice nominally identical to the one used is shown in
Fig. 1(a). Gate electrodes fabricated on the surface of

a GaAs/AlGaAs heterostructure are biased with appro-
priate voltages to selectively deplete regions of the two-
dimensional electron gas (2DEG) 90 nm below the sur-
face and deﬁne the quantum dots. The main function
of each gate is as follows: gates L and R set the tunnel
coupling with the left and right reservoir, respectively.
D1− D3 control the three inter-dot tunnel couplings and
P 1 − P 4 are used to set the electron number in each
dot. However, each gate inﬂuences the other parame-
ters as well. Changing L for example, will also change
the electron number in dot 1 and inﬂuence the inter-dot
tunnel barrier between dot 1 and 2. This needs to be
taken into account by the algorithm. Two other nearby
quantum dots on top of the qubit array, sensing dot 1
and 2 (SD1 and SD2), are created in a similar way and
function as a capacitively coupled charge sensor of the
dot array. When positioned on the ﬂank of a Coulomb
peak, the conductance through the sensing dot is very
sensitive to the number of charges in each of the dots in
the array. Changes in conductance are measured using
radiofrequency (RF) reﬂectometry [11]. High-frequency
lines are connected via bias-tees to gates P 1, P 3 and P 4.
The device was cooled inside a dilution refrigerator to
a base temperature of ∼15 mK. All measurements were
taken at zero magnetic ﬁeld.

Before running the algorithm the user is required to
input a range of T -values for which the algorithm should
try to ﬁnd DQDs. This range is currently determined by
measuring the pinch-oﬀ value of T manually, and then
choosing a set of gate voltages more negative than this
pinch-oﬀ value. The pinch-oﬀ value can for example
be determined by setting all other gates to 0 mV and
next measuring the current from O1 to O4 (other ohmics
open) whilst sweeping T . This step could be automated
in future work.

The algorithm consists of 3 steps: (1) to determine the
starting values for the gate voltages, we ﬁrst measure the
pinch-oﬀ characteristic between each individual gate and
the shared T -gate. Based on those results we (2) cre-

6
1
0
2

 
r
a

M
7

 

 
 
]
l
l
a
h
-
s
e
m

.
t
a
m
-
d
n
o
c
[
 
 

1
v
4
7
2
2
0

.

3
0
6
1
:
v
i
X
r
a

2

so there is no current. For more positive voltages the
channel is open, so there is a large current. We ﬁt a
tetragon to the area corresponding to large current, see
Fig. 2(a) for an example of the leftmost dot (details can
be found in Supplementary Information II B). We next
take a ﬁner scan of the area closest to the tetragon corner
with the most negative gate voltages, see Figs. 2(b-e). In
the experiments we have performed, this point is always
showing the start of quantum dot formation through the
appearance of a Coulomb peak. We use this point as the
starting point in gate-space for creating DQDs. The ex-
act location of the Coulomb peak is determined using a
Gabor ﬁlter and is shown as black dots in Figs. 2(b-e)
(see Supplementary Information II B).

When going to double dots, transport measurements
are not suitable as current levels through few-electron
double dots are impractically low for this device design.
Therefore, once the single dots have been formed, we
tune the SDs in a similar way. They can then be used
for non-invasive charge sensing which does allow one to
distinguish single-electron transitions in the dot array
through RF-reﬂectometry. To achieve a high sensitiv-
ity it is important that the SD is tuned to the ﬂank
of one of its Coulomb peaks. After ﬁnding a Coulomb
peak for the SD in a similar way as described for the
qubit dots, we make a 1D scan of the plunger gates, see
Fig. 2(f). Each detected Coulomb peak is given a score
based on its height and slope that allows the algorithm
to continue with the most sensitive operating point for
the corresponding plunger gate (see Supplementary In-
formation II C).

With the SD tuned we create a double dot in the fol-
lowing way: ﬁrst we set the voltages of the gates for
the double dot to the values found for the individual
single dots (black dots in Figs. 2(b-e)). For the single
gate shared by the two individual dots (e.g. gate D1 for
the leftmost double dot) the average of the two values
is used. Next, we record a charge stability diagram of
the double dot structure by varying the two plunger gate
voltages involved. We use a heuristic formula to deter-
mine the correct scan range that takes into account the
capacitive coupling of the gates to the dots (see Supple-
mentary Information II D). Typical results for such scans
are shown in Fig. 3(a-c). Scans involving two plungers
are measured by applying a triangular voltage ramp to
the plungers on the horizontal axis using an arbitrary
waveform generator, and by stepping the other plunger
gate using DACs [12]. Whilst stepping the latter gate we
also adjust the sensing dot plunger gate to compensate
for cross-capacitive coupling and thereby improve the op-
erating range of the SD.

To verify that the double dot has reached the single-
electron regime, the algorithm ﬁrst detects how well spe-
ciﬁc parts of the charge stability diagrams match the
shape of a reference cross (see inset of Fig. 3). Each
match should ideally correspond to the crossing of a
charging line from each dot. The shape of the reference
cross is derived from the various capacitive couplings,

FIG. 1: (a) SEM image of a sample nominally identical to
the one used for the measurements. Dotted circles indicate
quantum dots, squares indicate Fermi reservoirs in the
2DEG, which are connected to ohmic contacts. O5 is always
open during the measurements. The gates that are not
labeled are grounded. The current through the quadruple
dot array, Iarray, is measured to create single dots. The
reﬂectance of the SDs, VRF,SD1 and VRF,SD2, is monitored
to tune DQDs into the single-electron regime. (b-d)
Pinch-oﬀ curves showing Iarray versus the gate voltages L,
P 1 and D1 (T = −400 mV). The calculated transition value
is shown as a dotted vertical line. The horizontal lines
denote the high and low value as detected by the algorithm
(see Supplementary Information II A).

ate single quantum dots. The required tunnel barriers
acquired in (2) can be used as a starting point to (3)
create double dots into the single-electron regime. Sub-
sequently, steps (1) and (2) are used to create the SDs.
To measure the pinch-oﬀ characteristic we apply a
small voltage-bias (∼ 500 µV) to O4 and measure the cur-
rent Iarray through the quadruple dot array. Variations
in the local composition of the heterostructure under-
neath each gate will be reﬂected in the required voltage
to create quantum point contacts (QPCs). We term this
voltage the transition value, V tr
gate,i, which is deﬁned as
the gate voltage for which Iarray is at ∼ 30% of its max-
imum value (see Supplementary Information II A). This
procedure is repeated for a range of T -values. Figs. 1(b-
d) show an example for T = −400 mV and the gates
controlling the leftmost dot (L, P 1 and D1). In practice,
it is best to continue with the most positive T -value that
still allows pinch-oﬀ for all gates. In our experience this
tends to create better quantum dots for this gate design.
We start by creating single quantum dots, as they al-
ready include much of the cross-talk between gates, dots
and barriers, that is present in double dots. To create sin-
gle quantum dots we apply a ﬁxed voltage for the plunger
gate (usually -80 mV) which we know is appropriate for
this device design, and use the transition values of the
barrier gates as input for a 2D coarse scan. A suitable
scan range is [V tr
gate,i+400 mV]. We again
monitor Iarray. The structure of these scans is always
similar: for negative gate voltages the channel is closed,

gate,i-10 mV, V tr

(d)(c)P1P2P3P4 LD1D2D3 R TSD1aSD1cSD1bSD2aSD2cSD2bVRF,SD2VRF,SD1O1O3O4IarrayO5500 nm(a)(b)which follow from the gate design and are known approx-
imately from the start. Instead of detecting crosses, one
could also try to detect the individual charge-transition
lines. This turned out to be more sensitive to errors
for two reasons: (1) Extra features in the charge sta-
bility diagrams that do not correspond to charging lines
are wrongfully interpreted as dot features. (2) Not all
charging lines are straight across the entire dataset; this
makes it harder to interpret which line belongs to which
dot. The cross-matching algorithm is robust against such
anomalies because of the local, instead of global, search
across the dataset. In future work it could actually be
useful to still detect these extra and/or curved lines.
They could give information about e.g. unwanted addi-
tional dots and aid in determining the electron numbers
in regions with higher tunnel couplings. For the current
goal of ﬁnding the single-electron regime this extra infor-
mation is not required.
Next, the algorithm checks whether within a region
slightly larger than 70×70 mV2, it ﬁnds other charge
transitions for more negative gate voltages with respect
to the most bottom-left detected cross (see Supplemen-
tary Information II D). These regions are depicted by the
green tetragons in Fig. 3. If no extra transitions are de-
tected: the single-electron regime has been found and the
result is given a score of 1 for that speciﬁc measurement
outcome.
If extra transitions are found the algorithm
outputs the score 0. In both cases this is where the algo-
rithm stops. At the end of the run the user can see the
measurement results for the various initial choices of T
and select the best one.
All combined, the running of this complete algorithm
(for a single value of the T -gate) takes ∼ 200 minutes.
Per device typically 5 T -values are tested. In practice we
have observed that for some cooldowns of the sample the
algorithm could not attain the single-electron regime. A
thermal cycle combined with diﬀerent bias cooling [13]
can signiﬁcantly inﬂuence the tuning and solve this is-
sue; just as for tuning done by hand. The key diﬀerence
is that with the computer-aided tuning hardly any user
eﬀort is required to explore tuning of double dots to the
few-electron regime. In future work the time required for
automated tuning (as well as for tuning by hand) can
be further reduced by also connecting the tunnel barrier
gates of each single dot to a high-frequency line which
would allow much faster scans for Figs. 1-2 [14]. These
scans currently form the bottleneck in the overall tuning
process. Future experiments will also address the auto-
mated tuning of more than two dots and the tuning of
the tunnel couplings in between dots and their reservoirs,
which are key parameters for operating dots as qubit de-
vices.

In summary, we have demonstrated computer-
automated tuning of double quantum dot devices into
the single-electron regime. This work will simplify tun-
ing dots in the future and forms the ﬁrst step towards
automated tuning of large arrays of quantum dots.

3

ACKNOWLEDGMENTS

The authors acknowledge useful discussions with the
members of the Delft spin qubit team, and experi-
mental assistance from M. Ammerlaan, J. Haanstra,
R. Roeleveld, R. Schouten, M. Tiggelman and R. Ver-
meulen. This work is supported by the Netherlands
Organization of Scientiﬁc Research (NWO) Graduate
Program, the Intelligence Advanced Research Projects
Activity (IARPA) Multi-Qubit Coherent Operations
(MQCO) Program and the Swiss National Science Foun-
dation.

REFERENCES

[1] R. Hanson, L. P. Kouwenhoven, J. R. Petta, S. Tarucha,
and L. M. K. Vandersypen, Reviews of Modern Physics
79, 1217 (2007).

[2] F. A. Zwanenburg, A. S. Dzurak, A. Morello, M. Y. Sim-
mons, L. C. L. Hollenberg, G. Klimeck, S. Rogge, S. N.
Coppersmith, and M. A. Eriksson, Reviews of Modern
Physics 85, 961 (2013).

[3] C. Kloeﬀel and D. Loss, Annual Review of Condensed

Matter Physics 4, 51 (2013).

[4] J. R. Petta, A. C. Johnson, J. M. Taylor, E. A. Laird,
A. Yacoby, M. D. Lukin, C. M. Marcus, M. P. Hanson,
and A. C. Gossard, Science 309, 2180 (2005).

[5] K. C. Nowack, F. H. Koppens, Y. V. Nazarov,

and

L. M. K. Vandersypen, Science 318, 1430 (2007).

[6] J. Medford, J. Beil, J. M. Taylor, S. D. Bartlett, A. C.
Doherty, E. I. Rashba, D. P. Divincenzo, H. Lu, A. C.
Gossard, and C. M. Marcus, Nature Nanotechnology 8,
654 (2013).

[7] E. Kawakami, P. Scarlino, D. R. Ward, F. R. Braakman,
D. E. Savage, M. G. Lagally, M. Friesen, S. N. Copper-
smith, M. a. Eriksson, and L. M. K. Vandersypen, Nature
nanotechnology 9, 666 (2014).

[8] M. Veldhorst, J. C. C. Hwang, C. H. Yang, A. W. Leen-
stra, B. de Ronde, J. P. Dehollain, J. T. Muhonen, F. E.
Hudson, K. M. Itoh, A. Morello, and A. S. Dzurak, Nature
Nanotechnology 9, 981 (2014).

[9] R. Thalineau, S. Hermelin, A. D. Wieck, C. B¨auerle,
L. Saminadayar, and T. Meunier, Applied Physics Letters
101 (2012).

[10] T. Takakura, A. Noiri, T. Obata, T. Otsuka, J. Yoneda,
K. Yoshida, and S. Tarucha, Applied Physics Letters 104
(2014).

[11] C. Barthel, M. Kjærgaard, J. Medford, M. Stopa, C. M.
Marcus, M. P. Hanson, and A. C. Gossard, Physical Re-
view B 81, 3 (2010).

[12] T. A. Baart, M. Shaﬁei, T. Fujita, C. Reichl,
and L. M. K. Vandersypen, arXiv

W. Wegscheider,
preprint arXiv:1507.07991 (2015).

[13] A. R. Long, M. Pioro-Ladri`ere, J. H. Davies, A. S.
Sachrajda, L. Gaudreau, P. Zawadzki, J. Lapointe,
J. Gupta, Z. Wasilewski,
and S. A. Studenikin, Phys-
ica E: Low-Dimensional Systems and Nanostructures 34,
553 (2006).

[14] J. Stehlik, Y.-Y. Liu, C. Quintana, C. Eichler, T. Hartke,
and J. Petta, Physical Review Applied 4, 014018 (2015).

4

FIG. 2: (a-e) Four single dots are created by sweeping the tunnel barrier gate voltages for each dot whilst keeping the
plunger gate ﬁxed and monitoring Iarray. After a coarse scan (example shown for the leftmost dot in (a)) we zoom in to the
region showing Coulomb blockade (b-e). The center location where Coulomb peaks are formed is determined using a Gabor
ﬁlter and depicted by black dots. (f) The SD is ﬁne-tuned by sweeping its plunger gate voltage. The charge sensing
measurements shown in Fig. 3 are performed by tuning to the left ﬂank of a Coulomb peak.

FIG. 3: (a-c) Double dot charge stability diagram for the left, middle and right double dot respectively. Using the result of
Figs. 2(b-e) the tunnel barriers are set, and the plunger gates are swept as indicated. The occupancy of each dot is denoted
by (n, m) corresponding to the number of electrons in the left and right dot respectively of that speciﬁc double dot. The
algorithm determines how well regions of the charge stability diagram match to a reference cross (see inset). Good matches
are encircled. These ideally corresponds to the crossing of charging lines from two dots. The single-electron regime is found
by verifying that no other charging lines are observed for more negative gate voltages with respect to the most bottom-left
detected cross (green regions). The horizontal scan range of panel (b) is less than for (a) and (c) due to hardware limitations.

(e)(a)(c)(b)(d)(f)(0,0)(0,1)(1,1)(1,0)(0,1)(0,0)(1,1)(1,0)(a)(b)(c)(1,1)(0,0)(1,0)(0,1)Supplementary Material

I. METHODS AND MATERIALS

The

experiment

performed

on
grown

was
heterostructure

a
by
GaAs/Al0.307Ga0.693As
molecular-beam epitaxy, with a 90-nm-deep 2DEG
with an electron density of 2.2 · 1011 cm−2 and mobil-
ity of 3.4 · 106 cm2V−1s−1 (measured at 1.3 K). The
metallic (Ti-Au) surface gates were fabricated using
electron-beam lithography. The device was cooled inside
an Oxford Triton 400 dilution refrigerator to a base
temperature of 15 mK. To reduce charge noise the
sample was cooled while applying a positive voltage on
all gates (ranging between 100 and 400 mV) [13]. Gates
P 1, P 3 and P 4 were connected to homebuilt bias-tees
(RC=470 ms), enabling application of d.c. voltage
bias as well as high-frequency voltage excitation to
these gates.
Frequency multiplexing combined with
RF reﬂectometry of the SDs was performed using two
LC circuits matching a carrier wave of frequency 107.1
MHz for SD1 and 86.4 MHz for SD2. The inductors
are formed by microfabricated NbTiN superconducting
spiral inductors with an inductance of 3.2 µH (SD1) and
4.6 µH (SD2). The power of the carrier wave arriving at
the sample was estimated to be -93 dBm. The reﬂected
signal was ampliﬁed using a cryogenic Weinreb CITLF2
ampliﬁer and subsequently demodulated using home-
built electronics. Data acquisition was performed using
a FPGA (DE0-Nano Terasic) and digital multimeters
(Keithley). Voltage pulses to the gates were applied
using a Tektronix AWG5014.

II. SOFTWARE AND ALGORITHMS

The software was developed using Python [1] with

SciPy [2].

The image processing is performed in pixel coordi-
nates. We specify the parameters of algorithms in phys-
ical units such as mV. The corresponding parameter in
pixel units is then determined by translating the value
using the scan parameters. By specifying the parame-
ters in physical units the algorithms remain valid if we
make scans with a diﬀerent resolution. Of course making
scans with a diﬀerent resolution can lead to diﬀerences in
rounding of numbers leading to slightly diﬀerent results.

A. Determination of the transition values

To determine the transition values we perform the fol-

lowing steps:

• Determine the lowvalue (L) and highvalue (H) of
the scan by taking a robust minimum and maxi-
mum. For L this is done by taking the 1th per-

5

centile of the values. H is determined by ﬁrst tak-
ing the 90th percentile of the scan data H0 and
then the 90th percentile of all the values larger then
(L+H0)/2. This two-stage process to determine H
also works well when the pinch-oﬀ occurs for very
positive gate voltages. Simply taking for example
the 99th percentile of the scan data could then re-
sult in a too low estimate.

• Smoothen the signal and ﬁnd the ﬁrst element in
the scan larger than .7L + .3H. The position of
that value is selected as the transition value.

• Perform several additional checks. The above two
steps will always results in a transition value, even
though the channel could be completely open or
closed. The checks include amongst others:

– If the transition value is near the left border
of the scan we conclude the transition has not
been reached. We then set the transition value
to the lowest value of the gate that has been
scanned. In principle the algorithm could con-
tinue to search for a transition value for more
negative gate voltages. However, making gate
voltages too negative may induce charge noise
in the sample so we do not want to apply very
negative voltages. Choosing the most negative
voltage of the scan range then turns out to be
a good choice. In the next steps of the algo-
rithm, this transition voltage is just a starting
value and the gate voltage will still be var-
ied. Due to cross-talk, the neighboring gates
in follow-up steps will together with the gate
that did not yet close, typically still ensure the
formation of single dots.

– The diﬀerence of the mean of the measured
values left of the transition value and the
mean of the values right of the transition value
should be large enough. Large enough means
more than 0.3 times the standard deviation
of all the values in the scan. If it is not large
enough, we set the transition value to the low-
est value of the gate that has been scanned
following a similar reasoning as for the previ-
ous check. In this scenario we assume that the
scan range started at a voltage around 0 mV,
and thus that no signiﬁcant change in the mea-
sured current corresponds to a channel that
was always open.

B. Analysis of single dots

As described in the main text the initial analysis of a
2D scan is performed by ﬁtting a tetragon to the image.
The bottom-left corner point of this tetragon gives a good
indication of the position of the area where Coulomb

peaks are visible. See the magenta points in Figs. 4(a-
d). The next step is to make a more detailed scan of the

(a)

(b)

(c)

(d)

FIG. 4: (a-d) Four single dots are created by sweeping the
tunnel barriers for each dot whilst keeping the plunger ﬁxed.
The outcome is ﬁtted to a tetragon (dashed black lines) to
ﬁnd the best gate values to search for Coulomb peak
formation.

6

furthest into the direction of the closed region is selected
as the best Coulomb peak (green point). The concept
of connected components for a binary image is standard
in the computer vision community. We ﬁnd these using
OpenCv, see http://docs.opencv.org/3.0.0/d0/d7a/
classcv_1_1SimpleBlobDetector.html, but any imple-
mentation will return the same results. If there are more
than two Coulomb peaks there are two possibilities:

1. Both peaks are converted into two separate con-
nected components. Then, the blob furthest into
the direction of the closed region of the scan is se-
lected.

2. One of the two peaks might be much stronger than
the other. In that case the other peak is below the
threshold selected by the algorithm and the other
peak will be not be visible.

In our experiments we observed that for the single dots
at most a couple of Coulomb peaks are visible. Scans of
the region of Fig. 5 with a charge sensor instead of the
current through the array conﬁrm that the last Coulomb
peak visible in the image is indeed the Coulomb peak cor-
responding to the zero-to-one electron transition. This
behavior is typical for this speciﬁc gate design and inﬂu-
ences the choice for the plunger gate values for the DQD
scans such as shown in Fig. 3 to ﬁnd the single-electron
regime, see also section II D.

area. In this scan we search for the Coulomb peaks using
a Gabor ﬁlter [3, 4]. A Gabor ﬁlter is a sinusoidal wave
multiplied by a Gaussian function. The sinusoidal wave
seeks out features that show contrast with their environ-
ment. We deﬁne

(cid:32)
− x(cid:48)2 + γ2y(cid:48)2

(cid:33)

G(x, y, λ, θ, ψ, σ, γ) = exp

cos(2πx(cid:48)/λ + ψ)

2σ2

(1)
with x(cid:48) = cos(θ)x + sin(θ)y, y(cid:48) = − sin(θ)x + cos(θ)y.
We create a Gabor ﬁlter with the following parameters:
The orientation is set to θ = π/4, standard deviation of
Gaussian σ = 12.5 mV, γ = 1, λ = 10 mV, ψ = 0. A
rectangular image patch of size 40 × 40 mV2 is created
using this Gabor function (see inset Fig. 5).

The response of the Gabor ﬁlter to the 2D scan of Fig. 5
is shown in Fig. 6. 1 From the response ﬁgure it is clear
that there is a peak (red color) at the location of the
Coulomb peak. To extract the precise location of the
peaks we threshold the image with a value automatically
determined from the response image and determine the
connected components, i.e. the pixels that together con-
stitute a relevant feature. The center of the component

1 We use the OpenCV function matchTemplate with method

TM CCORR NORMED.

FIG. 5: Scan of the rightmost single dot where the tunnel
barriers are varied. The inset depicts the Gabor ﬁlter used
to determine the location where Coulomb peaks are formed,
see Fig. 6 for the ﬁlter response.

C. Selection of Coulomb peaks

In this section we describe how the selection of
Coulomb peaks for the SD is performed. We start with a
scan of the plunger gate SDxb (x is 1 or 2) in a conﬁgu-
ration for which Coulomb peaks can be expected. In the

7

FIG. 6: Response of the Gabor ﬁlter for the data shown in
Fig. 5. Green point is selected as the best Coulomb peak.

scan we determine the lowest and highest values (mean-
ing the channel is completely closed or completely open)
using a robust minimum and maximum function (see sec-
tion II A for details). These values are indicated as dotted
horizontal lines in Fig. 7.

FIG. 8: Detected peaks in the data of Fig. 7.

After this ﬁltering step the peaks are ordered according
to a score. For various applications we can deﬁne dif-
ferent scores.
In this work the SD-peaks are primarily
selected for proper charge sensing. For a good charge
sensitivity we need a large peak with a steep slope. We
then tune the SD to the position at half-height on the
left of the highest-scoring peak. The scoring function we
used is

score = height

2

1 + hw/hw0

(2)

The value of hw0 is a scaling parameter determining the
typical half width of a Coulomb peak. In our experiments
we used hw0 = 10 mV. In our experience, this scoring
represents a reasonable trade-oﬀ between the height and
the slope of a peak. The result is shown in Fig. 9.

FIG. 7: Scan of the reﬂectance VRF,SD1 for varying plunger
gate SD1b.

The peaks in the data are detected by selecting the
local maxima in the plot. All peaks below a minimum
threshold are discarded.2 For each of the peaks the po-
sition of the peak half-height on the left and right side is
determined. Also the bottom of the peak is determined
(see details at the end of this section). From these values
we can determine the peak properties such as the height
and the half-width of the peak. Finally the peaks are
ﬁltered based on the peak height and overlapping peaks
are removed (see details at the end of this section) lead-
ing to the detected peaks shown in Fig. 8.

2 We use scipy.ndimage.filters.maximum filter1d with a size

parameter of 12 mV.

FIG. 9: Final result of indexing the data from Fig. 7. The
peaks are plotted in red, the point at the peak half-height on
the left is plotted as a green dot.

Details to detect the bottom left of a peak :

the x-
coordinate of a peak, xpeak, has already been determined
by selecting the local maxima in the data. To ﬁnd the
x-coordinate of the bottom on the left side of the peak,
l, the following steps are performed after smoothing the
data:

Filter response (a.u.)peak 2: score 2507peak 0: score 5217peak 1: score 29281. Search for the x-coordinate, xbottom low, of the
range
minimum value
[xpeak − 3 × thw, xpeak]. The variable thw is a mea-
sure for the typical half width of a peak and is set
to ∼ 10 mV.

(bottom low)

in the

2. Starting from xbottom low, scan from left to right
and select the ﬁrst datapoint that fulﬁlls the fol-
lowing two conditions: (1) the slope is positive, and
(2) the y-value is larger than ‘bottom low + 10%
of the peak height’.

This method does not require a speciﬁc ﬁtting model,
and also works well for asymmetric Coulomb peaks.

Details of the ﬁlter to remove overlapping peaks:

for
each peak we have the position of the bottom on the
left (l) and the top of the peak (p). For two peaks
the overlap is deﬁned using the intersection of the in-
tervals [l1, p1] and [l2, p2]. The length of an interval L
is denoted as ||L||. The overlap ratio is then equal to

||π([l1, p1], [l2, p2])||/(cid:112)||[l1, p1]||||[l2, p2]||. To make the

overlap a bit more robust we use a smoothed version of
this formula using Laplace smoothing:

1 + ||π([l1, p1], [l2, p2])||

1 +(cid:112)||[l1, p1]||||[l2, p2]|| .

s =

When the overlap s between two peaks is larger than a
threshold (0.6), then the peak with the lowest score is
removed.

D. Tuning and analysis of a double dot

The main text describes how we set the gate values
for the tunnel barriers of each double dot using the in-
formation of the single dot scans. For the plunger gates
of the double dot an extra compensation factor is added.
When each single dot is formed, the dot-barrier gate of
its neighbor is kept at zero Volt. When next making a
double dot, these dot-barrier gates are activated and shift
the electrochemical potential of their neighbor, for which
we compensate with the corresponding plunger voltage.
This compensation factor is determined heuristically. For
a double dot with gates L − P 1 − M − P 2 − R the com-
pensation values for P 1, P 2 are

(−φR,−φL) ,

with φ = 0.1. See Table I for an example.
In future
experiments we plan to use the capacitive-coupling infor-
mation from the single dot scans in order to create more
precise compensation values for the tunnel barrier gates.
The exact values of the plunger gates are not very impor-
tant, since we will make a scan of the double dot using
the plunger gates. A good initial guess does reduce the
measurement time.

The important structures in the scan of a double dot
are the charging lines and the crossings of two charging

8

Gate Left dot Right dot Double-dot
-539.9
-33.0
-306.6
-26.0
-469.7

-539.9
-80.0
-285.9

-327.3
-80.0
-469.7

L
P 1
D1
P 2
D2

TABLE I: Example for double dot settings. All values are
in mV.

lines. To determine the locations of the crossings in the
image we create a template for such a crossing. We then
search for crossings using template matching. The re-
sponse to the template is thresholded and local maxima
are calculated. The template of the crossing consists of 4
lines at angles π/8, 3π/8, 9π/8 and 11π/8 (radians) that
are separated by a distance of 1.5 mV at 45 degrees that
represents the interdot capacitive coupling (see inset of
Fig. 3 of the main text). The width of these lines ensures
that experimentally measured crossings still overlap with
the template despite unavoidable small variations in the
interdot capacitive coupling and the lever arms between
gate voltage and electrochemical potential, which aﬀect
the slope of the transitions.
The ﬁnal step consists of checking whether extra charg-
ing lines are visible in a region of ∼70×70 mV2 to the
side of more negative gate voltages. The size of this re-
gion should be larger than the charging energy of each
dot in mV. The topright corner of the 70×70 mV2 area is
located -10 mV southwest of the most bottom-left cross.
We slightly extend this region on top and on the right to
reduce the probability that a charging line is missed. If
the total region falls outside the scan range of the data,
the algorithm reduces the size of this region accordingly
(alternatively, one could take data over a larger gate volt-
age range). The algorithm could then draw the wrong
conclusion. When the region that results from clipping at
the border of the scan range is smaller than 40×40 mV2,
the algorithm will stop and output that it cannot prop-
erly determine whether the single-electron regime has
been attained. In the typical case that the region is large
enough, we ﬁrst smoothen the data within this region.
We subtract the smoothed data from the original data
and check whether the resulting pixel values fall above
a certain threshold that is proportional to the standard
deviation of the smoothed dataset. If at most one pixel
value is larger than the threshold, the algorithm classiﬁes
the dataset as ‘single-electron regime’.

REFERENCES

[1] “Python – Python Programming Language,”.
[2] E. Jones, T. Oliphant, P. Peterson, et al., “SciPy: Open
source scientiﬁc tools for Python,” (2001–), [Online; ac-
cessed 2015-04-14].

[3] Wikipedia, “Gabor ﬁlter — wikipedia, the free encyclope-

dia,” (2015), [Online; accessed 29-September-2015].
[4] J. G. Daugman, J. Opt. Soc. Am. A 2, 1160 (1985).

9

