6
1
0
2

 
r
a

 

M
7
1

 
 
]
T
I
.
s
c
[
 
 

1
v
0
4
5
5
0

.

3
0
6
1
:
v
i
X
r
a

Conferencing in Wyner’s Asymmetric Interference Network:

Effect of Number of Rounds
Mich`ele Wigger, Roy Timo and Shlomo Shamai (Shitz)

1

Abstract

Our goal is to study the effect of the number of conferencing rounds on the capacity of large interference networks. We do
this at hand of the per-user multiplexing gain (MG) of Wyner’s soft-handoff model with dedicated conferencing links between
neighbouring transmitters and receivers. We present upper and lower bounds on the per-user MG of this network, which depend
on the capacities of the transmitter- and receiver- conferencing links and on the number of allowed conferencing rounds. The
bounds are tight when: the prelogs of the conferencing links are small or high; there is only transmitter conferencing or only
receiver conferencing; or some symmetry conditions between transmitter-conferencing and receiver-conferencing hold. We also
determine the per-user MG of the network when the number of conferencing rounds is unlimited.
Our results show that for small conferencing prelogs (cid:46) 1/6, a single conferencing round sufﬁces to attain the maximum per-
user MG when the number of conferencing rounds is unconstrained. In contrast, when the prelogs are large, then every additional
conferencing round increases the maximum per-user MG.

I. INTRODUCTION

We study a communication network where transmitters and receivers can cooperate over dedicated links that do not interfere
with the main communication over the network. We analyse how the performance over a communication network depends
on the number of interactive communication rounds that are allowed to take place over the conferencing (cooperation) links.
Protocols with only few conferencing rounds are advantageous in practice because they can also be implemented when the
conferencing communication is subject to stringent latency constraints or when the cooperative devices are limited in storage
and computational capabilities.

Willems seminal work [1] shows that a single conferencing round—during which the transmitters exchange parts of their
messages—is optimal when the network is a two-user discrete memoryless multi-access channel (MAC). The same applies also
to the two-user memoryless Gaussian MAC [4]; the three-user Gaussian or discrete memoryless MAC where the transmitters
cooperate over “public links” that are observed by all transmitters [9]; and for the compound discrete memoryless MAC [19].
For the three-user memoryless Gaussian MAC with “private” conferencing links where each transmitter can send cooperation
information only to its left-neighbour, two conferencing rounds—during which the transmitters share and relay parts of their
messages—are sum-rate optimal at high signal-to-noise ratio (SNR) [8].

A single conferencing round is also optimal for the physically degraded two-user discrete memoryless broadcast channel
(BC) with conferencing receivers [11]. For general broadcast channels this does not seem to be the case, and Dabora and
Servetto proposed an interactive two-round conferencing protocol [11]. Interactive two-round conferencing protocols have also
been proposed for two-user discrete memoryless BCs for scenarios where both receivers are interested in the same message
or where only one of the two receivers has a message to decode [18].

Conferencing has been studied in many other scenarios, e.g., [12]–[18] generally restricting attention to small networks and

to one or two conferencing rounds.

In this work we consider a large interference network with an arbitrary large number K of transmitters and receivers and we
analyze on how the performance over the network depends on the number of allowed conferencing rounds between transmitters
and between receivers.

Speciﬁcally, we consider Wyner’s asymmetric soft-handoff model [28], [29], [32] in Figure 1 where the K transmitters and
K receivers are aligned on opposite grids and each transmitted signal is received at its corresponding receiver and the receiver
to its right. Each transmitter and each receiver can cooperate with its immediate left and right-neighbours over non-interfering
dedicated conferencing links of capacities µTx· 1
2 log(1 +SNR), where SNR stands for signal-to-noise
ratio. Cooperation between transmitters can take place over at most κTx rounds and conferencing between receivers over at
most κRx rounds. For the setup in Figure 1 this makes that information about a transmitter’s message can propagate only to
its κTx left- and right-neighbours, and information about a receiver’s output signal can propagate only to its κRx left- and
right-neighbours.

2 log(1 +SNR) and µRx· 1

The results in this paper were partly presented at the 2015 IEEE Information Theory Workshop, Jerusalem, Israel.

M. Wigger is with the Signal and Information Processing Laboratory at Telecom ParisTech, michele.wigger@telecom-paristech.fr. R. Timo is with the Institute
for Communications Engineering at the Technische Universit¨at M¨unchen, roy.timo@tum.de. S. Shamai is with the Department of Electrical Engineering,
Technion Israel Institute of Technology, sshlomo@ee.technion.ac.il.
S. Shamai was supported by the Israel Science Foundation (ISF) and the FP7 Network of Excellence in Wireless COMmunications NEWCOM#. M. Wigger
was supported by the city of Paris under the program “Emergences.” R. Timo was supported by the Alexander von Humboldt Foundation. Some of the material
in this paper was presented at the IEEE Information Theory Workshop (ITW), Jerusalem, Israel, April, 2015.

2

κTx and κRx (Corollary 1);

rounds κTx and κRx (Corollary 2);

Our measure of performance is the high-SNR sum-capacity of the Wyner network, more speciﬁcally, the asymptotic per-user
multiplexing gain (MG). We propose upper and lower bounds on the per-user MG (Theorems 1 and 2), which depend on the
conferencing prelogs µTx and µRx and on the number of allowed conferencing rounds κTx and κRx. Our bounds coincide when:
• conferencing prelogs µTx and µRx are below given thresholds that depend on the number of allowed conferencing rounds
• conferencing prelogs µTx and µRx exceed given thresholds that again depend on the number of allowed conferencing
• only transmitters can cooperate or only receivers can cooperate, i.e., µRx = 0 or µTx = 0 (Corollary 3); and
• the symmetry condition µTx
For comparison, we also derive the per-user MG when the number of conferencing rounds is not limited (Theorem 3).
Our results show that for small conferencing prelogs, in particular for µTx, µRx ≤ 1/6, a single conferencing round at
transmitters and receivers allows to achieve the same per-user MG as when the number of conferencing rounds is unconstrained.
In contrast, for large conferencing prelogs, the maximum per-user MG increases with every additional conferencing round. In
particular, with κTx transmit and κRx receive conferencing rounds, the per-user MG saturates at 2κTx+2κRx+1
2κTx+2κRx+2 for large values
of µTx and µRx.

between transmitter and receiver conferencing holds (Corollary 4).

= µRx
κRx

κTx

To the best of our knowledge, these results are the ﬁrst to quantify the impact of the number of conferencing rounds on the

capacity of a network.

In interference networks, both transmitter cooperation and receiver cooperation allow to mitigate interference [12], [13],
[19]–[22], [25], [26], [31]. Recently, Ntranos, Maddah-Ali, and Caire [22] proposed the following cooperation protocol for
interference mitigation in large Gaussian networks: transmitters share quantised versions of their transmit signals and receivers
share parts of their decoded messages. (This is different from many previous works where transmitters share parts of their
messages and receivers share quantised versions of their received signals.) Knowledge about other transmitters’ input signals
allows the transmitters to mitigate the interference caused by these signals using dirty-paper coding. Similarly, knowledge of
decoded messages allows receivers to reconstruct interferences and subtract them from received signals.

A drawback of these interference mitigation techniques is the delay in communication and the propagation of interference
they induce. Speciﬁcally, each transmitter k has to wait until it has obtained the quantisation information about the transmit
k and send quantisation information about it to its
signals it wishes to mitigate, before it can construct its own input signal X n
other neighbours. In a similar way, each receiver has to wait until it obtains the decoded messages pertaining to some of the
transmitters that interfere its output signals, before it can decode its own message and send parts of it to its other neighbours.
Our coding scheme presented in this paper is inspired by the Ntranos, Maddah-Ali, and Caire [22] protocol explained above.
(Transmitters share quantised versions of transmit signals and receivers share parts of decoded messages.) The constraints on
the number of cooperation rounds κTx and κRx however require the following two major changes:

• Since the transmitters and receivers cannot wait inﬁnitely long before producing their cooperation messages, the protocol
can only be applied over subsets of the network. This necessitates to periodically silence transmitters in the network,
which decomposes the network into smaller subnets.

• The interest is to switch off as few transmitters as possible and thus to make the subnets as large as possible. To this end,
a sophisticated combination of the described transmitter and receiver interference-mitigation techniques is required. We
also introduce slight variations of these techniques that can exploit the cooperation links from the transmitters to their
left neighbours and from the receivers to their left neighbours.

For the case κTx = κRx = 1, the performance of our schemes can also be achieved using conferencing protocols where
the transmitters share parts of their messages and receivers share quantisation information about their receive signals. The
advantage of these protocols is that they do not necessitate codebook knowledge during the conferencing phase and can thus
be implemented in oblivious scenarios.

A. Notation

We denote the integers by Z, the positive integers by Z+, and the real numbers by R. Random variables are identiﬁed by
uppercase letters, e.g. W , their alphabets by matching calligraphic font, e.g. W, and elements of an alphabet by lowercase
letters, e.g. w ∈ W. The Cartesian product of W and W(cid:48) is W × W(cid:48), and the n-fold Cartesian product of W is W n. For any
n-tuple of random variables W1, . . . , Wn we use the shorthand notation W n := (W1, . . . , Wn).
Given two n-dimensional vectors an, bn ∈ Rn, let (cid:107)an(cid:107) denote the standard norm of an in Euclidean space, and let
< an, bn > denote the standard inner product of an and bn. Let further ∠(an, bn) denote the angle between the two vectors:

where arccos denotes the arc-cosine function.

∠(an, bn) := arccos

< an, bn >
(cid:107)an(cid:107)(cid:107)bn(cid:107)

,

3

Fig. 1. Wyner’s asymmetric interference network with rate-limited noiseless cooperation links between neighbouring transmitters and neighbouring receivers.

B. Organisation of Paper

The rest of this paper is organised as follows. Section II describes the problem setup. Section III states the main results
of the paper. Proofs of the results are presented in Sections VI–IV: Section VI proves the achievability of our Theorem 2;
Section V proves our converse Theorem 1; and Section IV proves the converse to Theorem 3.

A. Channel Model and Transmit Power Constraint

II. PROBLEM SETUP

Consider a wireless communications system with K pairs of transmitters and receivers, labeled by k ∈ {1, . . . , K}. Assume
that the transmitters and receivers are each equipped with a single antenna, and that all channel inputs and outputs are real
valued. We imagine a network with short-range interference, `a la [28]–[31], so that the signal sent by transmitter k is only
observed by receivers k and k + 1. Speciﬁcally, the time-t channel output at receiver k is

(1)
where Xk,t and Xk−1,t are the symbols sent by transmitters k and k − 1 at time t respectively; {Zk,t} are independent and
identically distributed (i.i.d.) standard Gaussians for all k and t; αk (cid:54)= 0 is a ﬁxed real number; and X0,t = 0 for all t. A small
segment of this short-range interference model is depicted in Figure 1.
Each and every transmitter k ∈ {1, . . . , K} is required to reliably communicate a source message Mk to its corresponding

Yk,t = Xk,t + αkXk−1,t + Zk,t,

receiver k. The source message Mk is uniformly distributed on

where n denotes the blocklength and Rk the rate of transmission of source message Mk. All source messages are independent
of each other and of all channel noises. An average block-power constraint P > 0 is imposed on the transmitted signals:

Mk := {1, . . . ,(cid:98)2nRk(cid:99)}

1
n

n(cid:88)t=1

X 2
k,t ≤ P,

a.s.,

∀ k ∈ {1, . . . , K}.

(2)

B. Overview of Conferencing and Communications Phases

A key feature of this work is that we include rate-limited local cooperation between neighbouring transmitters and neigh-
bouring receivers over dedicated conferencing links. Speciﬁcally, we suppose that the communications process consists of the
following four phases.

1) Tx-Conferencing Phase: The source messages (M1 M2 . . . MK) are revealed to their respective transmitters, and each
transmitter exchanges conferencing messages with its two direct neighbours over dedicated noiseless channels. Each of
these conferencing channels has a maximum rate budget of nRTx bits. We let the rate budget RTx scale with the transmit
power constraint P as

RTx := µTx

log(1 + P ),

(3)

1
2

where µTx ∈ [0,∞) is ﬁxed and called the Tx-prelog conferencing constant.

MkMk 1Mk+1Xnk↵k+1Xk,t↵kXnk 1Xnk+1Xnk 1↵k 1Xnk 2ˆMkˆMk 1ˆMk+1Tx(k)Tx(k 1)Tx(k+1)Rx(k+1)Rx(k)Rx(k 1)ZnkZnk 1Znk+1Ynk 1Ynk+1Ynk2) Cooperative Communications Phase: The transmitters communicate their source messages over the memoryless interfer-
ence channel (1). Transmitter k’s channel inputs are a function of its source message Mk and the conferencing messages
it received during the Tx-conferencing phase.

3) Rx-Conferencing Phase: The receivers observe their channel outputs, and they exchange conferencing messages with
their immediate neighbours over dedicated noiseless channels. Each of these conferencing channels has a maximum rate

4

log(1 + P ).
Here µRx ∈ [0,∞) is ﬁxed and called the Rx-prelog conferencing constant.
received during the Rx-conferencing phase.

RRx := µRx

1
2

4) Decoding Phase: The receivers decode their desired source messages from the channel outputs and conferencing messages

Remark 1: In the above problem formulation, the Tx-conferencing phase takes place before the communications phase, and
the Rx-conferencing phase takes place before the decoding phase. The conferencing phases, however, should not be considered
as strictly separated from the communications and decoding phases. In fact, a transmitter might compute and store its transmit
signal already during the Tx-conferencing phase. Similarly, a receiver might compute and store its decoded message already
during the Rx-conferencing phase. This allows transmitters (resp. receivers) to exchange parts of their transmit signals (resp.
decoded messages) over the conferencing links with their neighbours.

We now describe the four communication phases more formally.

C. Tx-Conferencing Phase with κTx Rounds
To model systems with tight latency, computational complexity or storage space constraints, we shall focus on the case
where the number of Tx- and Rx-conferencing rounds are limited to (ﬁnite) κTx ∈ Z+ and κRx ∈ Z+ respectively. (Later, for
comparison, we will also consider the case of unlimited conferencing rounds.)
The Tx-conferencing phases consists of κTx rounds: In round j = 1, 2, . . . , κTx, transmitter k sends a conferencing message
k→k(cid:48) to its neighbouring transmitters k − 1 and k + 1. Here,
U (j)

is a function of its source message Mk and the conferencing messages it received during the Tx-conferencing phase. Speciﬁcally

X n

k := φ(j)

k,k(cid:48)(cid:16)Mk U (1)

k−1→k U (1)

k+1→k U (2)

k−1→k U (2)

fk : Mk ×

κTx(cid:89)j=1 (cid:89)k(cid:48)∈{k−1,k+1}(cid:110)1, . . . ,(cid:4)2nR(j)

k+1→k(cid:17),

k−1→k U (κTx)

k+1→k . . . U (κTx)
Tx,k(cid:48)→k(cid:107)(cid:111) → Rn.

(4)

(5)

(6)

(7)

k→k(cid:48) := φ(j)
U (j)

φ(j)
k,k(cid:48) : Mk ×

k+1→k U (2)

k−1→k U (1)

k,k(cid:48)(cid:16)Mk U (1)
j−1(cid:89)j(cid:48)=1 (cid:89)˜k∈{k−1,k+1}(cid:110)1, . . . ,(cid:4)2nR(j(cid:48))

k+1→k . . . U (j−1)

k+1→k(cid:17),
k−1→k U (j−1)
Tx,k→k(cid:48)(cid:107)(cid:111)
Tx,˜k→k(cid:107)(cid:111) −→(cid:110)1, . . . ,(cid:4)2nR(j)

k−1→k U (2)

and we understand U (j)

0→1 and U (j)

K+1→K to be degenerate random variables (constants) with

The total rate from transmitter k to each one of its neighbours may not exceed the rate budget:

R(j)
Tx,0→1 = R(j)

Tx,K+1→K = 0,

∀j ∈ {1, . . . , κTx}.

κTx(cid:88)j=1

R(j)
Tx,k→k(cid:48) ≤ RTx

for all k(cid:48) ∈ {k − 1, k + 1} and k ∈ {1, . . . , K}.
D. Cooperative-Communication Phase

The channel codeword sent by transmitter k,

X n

k = (Xk,1 Xk,2 . . . Xk,n),

where

and

E. Rx-Conferencing Phase with κRx Rounds

The Rx-conferencing phase takes place after all the channel outputs have been observed by the receivers. Let

Y n
k = (Yk,1 Yk,2 . . . Yk,n)

denote the channel outputs observed at receiver k.

neighbour receiver k(cid:48), for k(cid:48) ∈ {k − 1, k + 1}. Here

The Rx-conferencing phase consists of κRx rounds: In round j, receiver k sends a conferencing message V (j)

k→k(cid:48)

V (j)
k→k(cid:48) := φ(j)

k,k(cid:48) : Rn ×
ψ(j)

k−1→k V (1)

k+1→k V (2)

k−1→k V (2)

k V (1)

k+1→k . . . V (j−1)

k,k(cid:48)(cid:16)Y n
j−1(cid:89)j(cid:48)=1 (cid:89)˜k∈{k−1,k+1}(cid:110)1, . . . ,(cid:106)2nR(j(cid:48))

k+1→k(cid:17),
k−1→k V (j−1)
Rx,k→k(cid:48)(cid:107)(cid:111)
Rx,˜k→k(cid:107)(cid:111) −→(cid:110)1, . . . ,(cid:106)2nR(j)
K+1→K to be degenerate random variables (constants) with

and we understand V (j)

0→1 and V (j)

We require that the total rate from receiver k to its immediate neighbours does not exceed the rate budget,

R(j)
Rx,0→1 = R(j)

Rx,K+1→K = 0,

∀j ∈ {1, . . . , κRx}.

κRx(cid:88)j=1

R(j)
Rx,k→k(cid:48) ≤ RRx,

∀ k(cid:48) ∈ {k − 1, k + 1}.

F. Decoding Phase

Receiver k estimates the source message Mk by

5

to its

(8)

(9)

(10)

where

where

ˆMk := g(j)

k V (1)

k−1→k V (1)

k+1→k V (2)

k−1→k V (2)

k+1→k . . . V (κRx)

k(cid:16)Y n
gk : Rn ×

κRx(cid:89)j(cid:48)=1 (cid:89)k(cid:48)∈{k−1,k+1}(cid:110)1, . . . ,(cid:106)2nR(j(cid:48))

k+1→k(cid:17)
k−1→k V (κRx)
Rx,k(cid:48)→k(cid:107)(cid:111) → Mk.

G. Capacity, Sum Capacity and Per-User Multiplexing Gain

For brevity, let

κ = (κTx κRx), µ = (µTx µRx)

and R = (R1 . . . RK).

We call the collection of encoders and decoders in (5), (7), (8) and (10) an (n, R, κ, µ, P )-code. For given κ, µ and P :
We say that a rate tuple R is (κ, µ, P )-achievable if for every  > 0 there exists a sufﬁciently large blocklength n and an
(n, R, κ, µ, P )-code with

P(cid:2)( ˆM1 . . . ˆMK) (cid:54)= (M1 . . . MK)(cid:3) ≤ .

The capacity region C(κ, µ, P) is the closure of the set of all (κ, µ, P )-achievable rate tuples, and the sum capacity is

CΣ(κ, µ, P) := max

R∈C(κ,µ,P)

Rk.

K(cid:88)k=1

Deﬁnition 1: The per-user multiplexing gain (MG) is

S(κ, µ) := lim
K→∞

lim
P→∞

CΣ(κ, µ, P)
K · 1
2 log P

,

for κ ∈ Z+ × Z+ and µ ∈ [0,∞) × [0,∞).
The main problem of interest in this paper is to determine S(κ, µ). In Section III, we give upper and lower bounds on
S(κ, µ) and show that these bounds coincide in many cases. The next proposition summarises some basic properties of the
per-user MG, and we omit its proof.

Proposition 1:

1) S(κ, µ) is nondecreasing in κ and µ and upper bounded by 1.

6

2) If µTx = 0, then S(κ, µ) does not depend on κTx:

for all κRx ∈ Z+ and µRx ∈ [0,∞).
Similarly, if µRx = 0, then S(κ, µ) does not depend on κRx:

S(0, κRx, 0, µRx) = S(1, κRx, 0, µRx) = ···

for all κTx ∈ Z+ and µTx ∈ [0,∞).

3) If µ = (0, 0), then

for all (κTx, κRx) ∈ Z+ × Z+.

H. Conferencing with Unlimited Rounds

S(κTx, 0, µTx, 0) = S(κTx, 1, µTx, 0) = ···

S(κTx, κRx, 0, 0) =

1
2

To help put our results S(κ, µ) in context, we will also consider the case of unlimited Tx- and Rx-conferencing rounds.
The per-user MG with unlimited conferencing is deﬁned in the same way as above, except now κTx and κRx are inﬁnite1.
Let S∞(µ) denote the per-user MG with unlimited conferencing. The next proposition summarises some basic properties of
S∞(µ), and we omit its proof.

Proposition 2:
1) S∞(µ) is nondecreasing in µ.
2) For all κ ∈ Z+ × Z+ and µ ∈ [0,∞) × [0,∞):

1
2 ≤ S(κ, µ) ≤ S∞(µ) ≤ 1
III. MAIN RESULTS

A. Converse: Conferencing with Finite Rounds

Our ﬁrst theorem gives a converse (upper) bound on the per-user MG S(κ, µ).
Theorem 1: For all κ = (κTx κRx) ∈ Z+ × Z+ and µ = (µTx µRx) ∈ [0,∞) × [0,∞), we have

If µTx = 0, then

If µRx = 0, then

2

S(κ, µ) ≤ min(cid:26) 2µTx + 2µRx + 1
S(κ, µ) ≤ min(cid:26) 2µRx + 1
S(κ, µ) ≤ min(cid:26) 2µTx + 1

2

2

,

,

,

2κRx + 1

2κTx + 2κRx + 1

2κTx + 2κRx + 2(cid:27) .
2κRx + 2(cid:27) .
2κTx + 2(cid:27) .

2κTx + 1

(11)

(12)

(13)

(14)

(15a)

The next theorem gives an achievable (lower) bound on the per-user MG S(κ, µ). Its expression depends on the following

Proof: Theorem 1 is proved in Section V.

B. Achievability: Conferencing with Finite Rounds

two quantities

πTx :=

and πRx :=

µTx
κTx

µRx
κRx

.

Deﬁne SAch : Z+ × Z+ × [0,∞) × [0,∞) → [0, 1] as follows:
• If πRx = πTx, let

2µTx + 2µRx + 1

SAch(κ, µ) :=

2

if

2µTx + 2µRx + 2πTx ≤ 1

2κTx + 2κRx + 1
2κTx + 2κRx + 2

otherwise.

1For a given blocklength n scheme, it however sufﬁces to choose κTx ≤ 2KnRTx and κRx ≤ 2KnRRx, because each of the K transmitters can send at
most nRTx bits over each of the two links to its left and right, and similarly each of the K receivers can send at most nRRx bits over each of the two links
to its left and right.

• If πRx < πTx, let

• If πRx > πTx, let

SAch(κ, µ) :=

SAch(κ, µ) :=

2µTx + 2µRx + 1

2

2κTx + 2κRx + 1
2κTx + 2κRx + 2

2κTx + 2µRx + 1

2κTx + 2

2µTx + 2µRx + 1

2

2κTx + 2κRx + 1
2κTx + 2κRx + 2

2κRx + 2µTx + 1

2κRx + 2

if 2µTx + 2µRx + 2πTx ≤ 1
if 2µTx(cid:18) πRx

πTx(cid:19) + 2µRx + 2πRx > 1

otherwise.

if

if

2µTx + 2µRx + 2πRx ≤ 1

2µTx + 2µRx(cid:18) πTx

πRx(cid:19) + 2πTx > 1

otherwise.

7

(15b)

(15c)




Theorem 2: For all κ ∈ Z+ × Z+ and µ ∈ [0,∞) × [0,∞), we have
S(κ, µ) ≥ SAch(κ, µ).

Proof: Theorem 2 is proved in Section IV.

Remark 2: The coding scheme that we present in Section IV requires that the codebooks are known during the Tx- and
Rx-conferencing phases. When κTx = κRx = 1, then it is possible to ﬁnd a coding scheme achieving SAch(κ, µ) where the
conferencing phases do not use knowledge about codebooks. Our results for κTx = κRx = 1 thus continue to hold also in
oblivious setups. The scheme in Section IV needs to be changed as follows: Instead of sending quantised versions of transmit
signals over the Tx-conferencing links, the transmitters conference source messages, and instead of sending decoded sources
messages over the Rx-conferencing links, the receivers send quantised versions of their receive signals. (Details omitted.)

C. Conferencing with Unlimited Number of Rounds

Now consider the case where the number of conferencing rounds is unconstrained. The next theorem determines the exact

per-user MG.

Theorem 3:

for all µ ∈ [0,∞) × [0,∞).

S∞(µ) = min(cid:26)1 ,

1 + 2µTx + 2µRx

2

(cid:27)

Proof: The proof of Theorem 3 consists of a direct part proving

and a converse part proving

S∞(µ) ≥ min(cid:26)1 ,
S∞(µ) ≤ min(cid:26)1 ,

1 + 2µTx + 2µRx

2

1 + 2µTx + 2µRx

2

(cid:27)
(cid:27) .

µTx + µRx <

1
2

,

The converse part is proved in Section VI.

The direct part follows from Theorem 2 and from continuity considerations. Speciﬁcally, for

(16)

(17)

(18)

(19)

the desired per-user MG of 1+2µTx+2µRx

κTx and κRx sufﬁciently large so that 2µTx + 2µRx + 2 min(cid:110) µTx

κTx

2

is achievable by Theorem 2 when one chooses the number of conferencing rounds

, µRx

κRx(cid:111) < 1. (Since here the number of conferencing rounds is

unlimited, we can choose κTx and κRx as large as we wish.) Moreover, since the per-user MG is non-decreasing in µTx and
µRx (see Proposition 1) a per-user MG of 1 must be achievable whenever

µTx + µRx ≥

1
2

.

8

Fig. 2. The achievable (lower) bound SAch(κ, µ) in (15) on the per-user MG S(κ, µ) for the case with equal Tx- and Rx-conferencing rounds κ = (κ, κ)
and unbalanced Tx and Rx prelog conferencing contraints µTx = 2µRx. The asymptotic per-user MG for unlimited conferencing rounds S∞(µ), as described
in Theorem 3, is also shown.

D. Discussion and Corollaries to Theorems 1, 2 and 3

We start with an example.
Example 1: Let

κ = (κ, κ) and µ = (µ, µ/2).

In this case, the achievable bound from Theorem 2, SAch(κ, κ, µ, µ/2), is given by (15b). Figure 2 plots (15b) as a function of
µ for κ = 1, 2 and 3 conferencing rounds. The ﬁgure also shows the per-user MG with unlimited conferencing rounds from
Theorem 3,

3µ + 1

2

1

1
3

if 0 ≤ µ ≤
otherwise.

µ

S∞(cid:16)µ,

2(cid:17) =
2(cid:17) = SAch(cid:16)1, 1, µ,

per-user MG as multiple (even unlimited) rounds; that is, for all µ ∈ [0, 1/5]
2(cid:17) = SAch(cid:16)2, 2, µ,

S∞(cid:16)µ,

µ

µ

µ

2(cid:17) = . . . .

If the prelog constant µ is small, then it can be seen from Figure 2 that a single conferencing round achieves the same

This idea extends to more general setups: Finitely many conferencing rounds are optimal whenever the prelog conferencing
constants are sufﬁciently small.

Corollary 1 (Small µ regions): Fix the number of Tx- and Rx-conferencing rounds κ = (κTx, κRx). If the prelog confer-

encing constants µ = (µTx, µRx) are small (depending on κ), namely,

2µTx + 2µRx + 2 max(cid:26) µTx

κTx

,

µRx

κRx(cid:27) ≤ 1,

then κ conferencing rounds achieve the same performance as unlimited conferencing rounds; that is,

for all κ(cid:48) ∈ Z+ × Z+ with κTx ≤ κTx(cid:48) and κRx ≤ κRx(cid:48).

Proof: Corollary 1 follows directly from Theorems 1 and 2.

S(κ, µ) = S(κ(cid:48), µ) = S∞(µ) =

1 + 2µTx + 2µRx

2

(20)

Figure 3 illustrates the regions of small µs indicated in Corollary 1 where a small number of conferencing rounds yields the
same per-user MG as an unlimited number of rounds. Speciﬁcally, the ﬁrst line (2µTx + 2µRx + max{µTx, µRx} ≤ 1) depicts
the boundary of the small µ region where one-shot conferencing (κ = 1) is optimal, i.e., achieves the same per-user MG as
unlimited-rounds conferencing. The second line (2µTx + 2µRx + max{µTx, µRx} ≤ 1) depicts the boundary of the small µ

00.10.20.30.40.50.50.550.60.650.70.750.80.850.90.951  S1⇣µ,µ2⌘SAch⇣3,3,µ,µ2⌘SAch⇣2,2,µ,µ2⌘SAch⇣1,1,µ,µ2⌘µ569

Fig. 3. An illustration of the small µ regions of Corollary 1, where a single, two or three conferencing rounds sufﬁce. The topmost line indicates the values
of µTx, µRx where the per-user MG saturates at 1 in the case of unlimited conferencing rounds.

region where two-round conferencing (κ = 2) is optimal, and the third line (2µTx + 2µRx + (2/3) max{µTx, µRx} ≤ 1) depicts
the boundary of the small µ region where three-round conferencing (κ = 3) is optimal. The top-most line depicts the µ values
for which in case of unlimited conferencing rounds the per-user MG saturates at 1. The blue dashed line (µTx = 2µRx = µ)
corresponds to the example in ﬁgure 2: its crossing point with the 2µTx + 2µRx + max{µTx, µRx} ≤ 1-line, for example, shows
that κ = 1 is optimal for all µ ∈ [0, 1/5].

We now switch to the large µ regime. Consider again example 1 and Figure 2. For µ > κ/(2κ + 1), where the achievable

lower bound in (15b) meets the upper bound in Theorem 1 and therefore
4κ + 1
4κ + 2

µ

.

S(cid:16)κ, κ, µ,

2(cid:17) =

We can see that in this regime S(κ, κ, µ, µ/2) is saturated in terms of conferencing prelog µ, but is strictly increasing in κ, so
adding additional conferencing rounds increases the per-user MG.

More generally, the achievable bound in Theorem 2 is optimal whenever µ is sufﬁciently large. The resulting expression
for SAch(κ, µ) moreover exhibits that in this large-µ regime the per-user MG saturates in µ but is strictly increasing in the
maximum number of allowed conferencing rounds κTx and κRx.

Corollary 2: Fix the number of Tx- and Rx- conferencing rounds κ = (κTx κRx). If the prelog conferencing constants

µ = (µTx µRx) are sufﬁciently large (depending on κ), namely,

then,

µTx · min(cid:26)1,

πRx

πTx(cid:27) + µRx · min(cid:26)1,

πTx

πRx(cid:27) + min(cid:8)πTx, πRx(cid:9) >

1
2

,

S(κ, µ) =

2κTx + 2κRx + 1
2κTx + 2κRx + 2

.

(21)

Intuitively, the right hand side of (21) is smaller than one—irrespective of the available prelogs on the conferencing links—
because the interference cancelation techniques that we employ in our coding scheme (see Section IV) cause interference to
propagate through the network. This “propagating interference” can be (partially) eliminated only at close Tx/Rx pairs within
the range of conferencing. For example, a conference message detailing the interference caused by transmitter 1 can be relayed

00.10.20.30.40.500.050.10.150.20.250.30.350.40.450.5µTxµRx2µRx+2µTx12max{µRx,µTx}12µTx+2µRx+2µRx+max{µRx,µTx}12µTx+2µRx+(2/3)max{µRx,µTx}12µTx+µTx=2µRxfrom transmitter 1 over the Tx-conferencing links as far as transmitter κTx + 1, but no further. Our scheme stops interference
propagating beyond the conferencing range by selectively “shutting down” transmitters, and these shutdowns cause SAch(κ, µ)
to be strictly less than 1.

Our achievable bound SAch(κ, µ) in Theorem 2 is also optimal when there is conferencing at the transmitters or receivers,

but not both.

10

Corollary 3:

If µTx = 0, then

for all κ ∈ Z+ × Z+ and µRx ∈ [0,∞).
• If µRx = 0, then

S(κ, µ) =
S(κ, µ) =

1 + 2µRx

2

, 2µRx + 2πRx ≤ 1

2κRx + 1
2κRx + 2

,

otherwise

1 + 2µTx

2

, 2µTx + 2πTx ≤ 1

2κTx + 1
2κTx + 2

,

otherwise.

for all κ ∈ Z+ × Z+ and µTx ∈ [0,∞).
For the case of transmitter-conferencing only (µRx = 0), we observe that:
• A single conferencing round is optimal whenever µTx ≤ 1
4.
• Two conferencing rounds are optimal whenever µTx ≤ 1
3.
• Three conferencing rounds are optimal whenever µTx ≤ 3
8.
• Generally, κ ∈ Z+ conferencing rounds are optimal whenever µTx ≤ κ
Finally, the achievable bound SAch(κ, µ) is also tight under certain symmetry conditions.

2(κ+1).

Corollary 4: If πTx = πRx = π, then

S(κ, µ) =

1 + 2µTx + 2µRx

2

, 2µTx + 2µRx + 2π ≤ 1

2κTx + 2κRx + 1
2κTx + 2κRx + 2

,

otherwise.

IV. PROOF OF THEOREM 2

(22)

(23)

(24)

(25)

A. Overview

We now present a coding strategy that achieves SAch(κ, µ). The strategy will time-share between one, two or three different
coding schemes — depending on the particular values of κ and µ. To this end, let us divide the blocklength n in three
consecutive periods of lengths N1, N2 and N3 channel symbols, as shown in Fig. 4, so that n = N1 + N2 + N3. Here n and,
therefore, N1, N2 and N3 can be chosen arbitrarily large.

• Period 1: During period 1 (the ﬁrst N1 channel uses) we will use a scheme that employs both Tx- and Rx-conferencing,
assuming that the prelogs µTx and µRx are both positive. If µTx = 0 or µRx = 0, then we will remove period 1 by setting
N1 = 0.

• Period 2: During period 2 (channel uses N1 + 1 to N1 + N2) we will use a scheme that employs either Tx-conferencing
(when πRx < πTx) or Rx-conferencing (when πTx > πRx), but not both. If πRx = πTx, then we will remove period 2 by
setting N2 = 0.

• Period 3: During period 3 (the last N3 channel uses) we will use a scheme that does not employ Tx- or Rx-conferencing.
We now choose N1, N2 and N3, and detail the coding schemes used during each period. To simplify exposition, suppose

that

so that we only use Tx-conferencing during period 2. (The case πTx < πRx can be treated by exchanging the subscripts Tx
and Rx everywhere in the following arguments.) Choose

πTx ≥ πRx,

N1 := min(cid:8)n, nπRx(2κTx + 2κRx + 2)(cid:9)
N2 := min(cid:8)n − N1, n(πTx − πRx)(2κTx + 2)(cid:9)

(26a)
(26b)

11

Fig. 4. Timesharing between Tx and Rx conferencing schemes

Fig. 5. Transmitter and receiver conferencing scheme: The network is decomposed into γ non-interfering subnets, where each subnet consists of (β − 1)
active transmitters and β active receivers. Red nodes represent active transmitters, black nodes represent active receivers, and white nodes represent deactivated
transmitters. Example parameters: K = 27, ι = 1, β = 6 and γ = 4.

N3 := n − N1 − N2.

(26c)

Period 1: We will timeshare between 2κTx + 2κRx + 2 instances of the coding scheme described in Section IV-B but where
2 log(1 + P ).2 Each of these instances is used over an
we make sure that each (sub)message is sent at a rate not exceeding 1
equally long interval, i.e., over (cid:98)N1/(2κTx + 2κRx + 2)(cid:99) channel symbols, and employs a different value of the parameter
ι ∈ {1, . . . , 2κTx + 2κRx + 2}. Varying the parameter ι over 1, . . . , 2κTx + 2κRx + 2 varies the utilised resources (transmit
powers and conferencing links) as well as the served Tx/Rx pairs in a round robin manner.
Period 2: We will timeshare between 2κTx + 2 instances of the coding scheme in Section IV-C, where we again make sure
2 log(1 + P ).3 Each of these instances is again used over an equally-long

that each message is sent at a rate not exceeding 1
interval, i.e., over (cid:98)N2/(2κTx + 2)(cid:99) channel uses, and employs a different value for the parameter ι = 1, . . . , 2κTx + 2.

Period 3 We will employ the scheme in Section IV-D. No conferencing is used.
We now present the coding schemes that we time-share in the various transmission periods.

B. Tx- and Rx-Conferencing in Period 1

Let

Choose ι ∈ {1, . . . , β} arbitrarily, and deﬁne

β := 2κTx + 2κRx + 2.

γ :=(cid:22) K − ι + 1

β

(cid:23) .

1) Split the Network into Subnetworks: We ﬁrst split the network into γ identical subnets that do not interfere each other.

To this end, we will deactivate (silence) every transmitter4 with an index

k ∈ S := {1, . . . , ι − 1} ∪ {ι + β − 1, ι + 2β − 1, . . . , ι + γβ − 1} ∪ {ι + γβ, . . . , K}.

That means, every silenced transmitter (Tx) k ∈ S sets its channel inputs X n
k deterministically to 0. Moreover, every such
silenced Tx k ∈ S can send and receive conferencing messages only to and from its left-neighbour Tx k − 1, but not its
right-neighbour Tx k + 1. Similarly, each corresponding receiver (Rx) k ∈ S can send and receive conferencing messages only
to and from its left-neighbour Rx k − 1, but not its right-neighbour Rx k + 1. According to these assumptions, the various
subnets do not interfere and they each consist of (β − 1) active transmitters and β active receivers — an example is illustrated
in Figure 5.

2This ensures that also each Rx-conferencing link is used at a rate of at most 1
3This again ensures that each Rx-conferencing link is used at a rate of at most 1
4Transmitters 1, . . . , ι − 1 and ι + γβ, . . . , K have been deactivated to simplify the following presentation. In fact, we could improve the scheme’s
performance by, for example, reactivating transmitters 1, 3, 5, . . . , i − 1 (each reactivated transmitter can communicate with its receiver over an interference-
free Gaussian point-to-point channel). Such reactivations, however, will not improve the scheme’s asymptotic (K → ∞) per-user MG.

2 log(1 + P ).
2 log(1 + P ).

...N1N1+N2N1+N2+1N1+N2+N312N1+1N1+2......Period1(Tx&Rxconf.)Period2(TxorRxconf.)Period3(noconf.)No.ofchanneluses1612182427TxRxSubnet 1Subnet 2Subnet 3Subnet 412

2) Communication in a Subnet: Since the subnets are identical and do not interfere with one another, we need only describe
the coding scheme for subnet 1 (transmitters ι, . . . , ι + β − 2 and receives ι, . . . , ι + β − 1), where we need to communicate
source messages
(27)

Source message Mι+β−κRx−1 will be handled in a special way: We will split it into independent sub-messages

ι+β−κRx−1(cid:1),
(28)
where M Tx
ι+β−κRx−1. We will partition the remaining source
messages in (27) into four groups G1,G2,G3, and G4, see Figure 6. In our scheme, the messages in each group are transmitted
using a different strategy. The special source message M Tx
ι+β−κRx−1 is transmitted in the same way as source messages in G3,
and source message M Rx

Mι+β−κRx−1 =(cid:0)M Tx

ι+β−κRx−1 has rate RTx

ι+β−κRx−1 is transmitted in the same way as source messages in G4.

ι+β−κRx−1 and M Rx

(cid:0)Mι Mι+1 . . . Mι+β−1(cid:1).
ι+β−κRx−1 M Rx
ι+β−κRx−1 has rate RRx

Fig. 6. An illustration of G1, G2, G3 and G4 in Subnet 1. The transmitter corresponding to the special source message Mι+κRx+2κTx+1 is coloured in blue.
The ﬁgure also shows the Tx- and Rx-conferencing links that are effectively used in our scheme, and it indicates that the desired communication paths for
group 1 and 2 messages are the direct links, and for group 3 and 4 messages the diagonal links.

We next describe how to partition the messages into groups G1, . . . ,G4 and sketch how to communicate the source messages
in these groups. The communications are described with more technical details in Appendix A, where we also present an
analysis.

• Group 1 (successive interference cancellation from left to right, see Figure 7): The ﬁrst group of source messages,

(29)

with

(cid:8)Mk : k ∈ G1(cid:9)

G1 :=(cid:8)ι, ι + 1, . . . ι + κRx(cid:9),

k (Mk) thus only depend on Mk.

is communicated using point-to-point channel codes with successive interference cancellation from left-to-right at the
receivers. Speciﬁcally, each Tx k ∈ G1 uses a Gaussian point-to-point code of power P to transmit its source message Mk.
Inputs X n
The decoding procedure is depicted in Figure 7 and described with more technical details in Appendix A-A.
Recall that we deactivated Tx ι − 1 (the last transmitter in the previous subnet). Rx ι (the ﬁrst receiver in group 1) thus
observes channel outputs
(30)

Y n
ι = X n
based on which it decodes its desired source message Mι.
Rx ι also describes its decoded source message ˆMι over the conferencing link to Rx ι + 1 (its immediate right-neighbour).
Rx ι + 1 uses this conferencing message to reconstruct αι+1X n

ι ( ˆMι). It then forms

ι (Mι) + Z n
ι ,

ˆY n
ι+1 = Y n

ι+1 − αι+1X n

ι ( ˆMι)

Subnet 11◆◆+Rx+1TxRx◆+Rx+Tx+1◆+2Rx+2TxSuccessive interference cancellationDirty paper codingDirty paper codingSuccessive interference cancellationG1G2G3G4◆+  1◆+Rx+2Tx+1=◆+  Rx 1and decodes source message Mι+1 based on this difference. Rx ι + 1 also describes ˆMι+1 over the conferencing link to
Rx ι + 2 (its immediate right-neighbour).
Notice that whenever ˆMι = Mι, Rx ι + 1 decodes Mι+1 based on the interference-free signal

13

(31)
The same procedure is continued for receivers k =∈ ι + 2, . . . , ι + κRx. Speciﬁcally, each of these receivers performs the
following three steps:
1) It reconstructs interference αkX n
2) It forms the presumingly interference-free signal

k−1( ˆMk−1) using the conferencing message ˆMk−1 obtained from Rx k − 1.

ι+1(Mι+1) + Z n

ˆY n
ι+1 = X n

ι+1.

k − αk ˆX n
and it decodes source message Mk based on this difference.

ˆY n
k = Y n

k−1( ˆMk−1),

3) It sends the decoded source message ˆMk over the conferencing link to Rx k + 1.

The last receiver ι + κRx does not send anything over the conferencing link; it skips this third step.

Notice that the described scheme requires only left-to-right Rx-conferencing; no Tx-conferencing and no right-to-left
conferencing. Also, Rx ι + j − 1 (the j-th receiver of group G1), for j ∈ {1, . . . , κRx − 1}, has to wait until it obtains
the Rx-conferencing message from its left-neighbour before it can start performing above three steps. It can thus send its
own conferencing message ˆMι+j−1 only in Rx-conferencing round j.
Finally, we notice that for each k, if Rx k − 1 has correctly decoded its message, i.e., ˆMk−1 = Mk−1, then Rx k decodes
the source message Mk based on the interference-free signal ˆY n
k . Source messages Mι, . . . , Mι+κRx can thus
k = X n
be decoded with vanishingly small probability of error as n → ∞, whenever (see also Lemma 1 in Appendix A-A)

k + Z n

and

Rk <

1
2

log(1 + P ),

∀k ∈ G1

RRx > Rk,

∀k ∈ G1.

Fig. 7. Group 1: Left-to-right successive cancellation at the receivers. White circles represent interference cancellation and the black circles represent channel
decoding. Top-down arrows represent communications over left-to-right Tx-conferencing links.

• Group 2 (dirty paper coding from left to right, see Figure 8): The second group of source messages,

(32)

(33)

(34)

with

will be communicated using dirty paper coding to mitigate the interference from the left. The encoding procedure is
depicted in Figure 8 and is explained with more technical details in Appendix A-B.

G2 := {ι + κRx + 1, ι + κRx + 2, . . . , ι + κRx + κTx(cid:9),

(cid:8)Mk : k ∈ G2(cid:9)

ˆM◆ˆM◆+1Rx◆+RxRx◆Rx◆+1ˆM◆+Rx 1Yn◆Yn◆+1Yn◆+Rx 1Yn◆+RxRx conf. round no. ˆM◆+RxRx◆+Rx 112Rx 1RxˆM◆+Rx 2ˆYn◆+1ˆYn◆+Rx 1ˆYn◆+Rx14

Fig. 8. Group 2: Tx dirty paper coding from left to right. The dark circles represent dirty paper channel encoders, and the white circles represent vector
Gaussian quantisers. Top-down arrows represent communications of quantised input signals over the Tx-conferencing links to right-neighbours.

ι+κRx using a rate- 1

To facilitate dirty-paper coding at Tx ι + κRx + 1 (the ﬁrst transmitter in group 2), Tx ι + κRx (the last transmitter in
group 1) quantises its inputs signal X n
2 log(1 + P ) quantiser. It sends the quantisation message to this
Tx ι + κRx + 1.
Tx ι + κRx + 1 reconstructs the quantised inputs ˆX n
code that eliminates interference αι+κRx+1 ˆX n
ι+κRx.
Tx ι + κRx + 1 also quantises its produced inputs X n
message to Tx ι + κRx + 2 (its right-neighbour).
Rx ι + κRx + 1 decodes source message Mι+κRx+1 by applying dirty-paper decoding to its outputs

ι+κRx and encodes its source message Mk using a power P dirty-paper

2 log(1 + P ) quantiser, and sends the quantisation

ι+κRx+1 using a rate- 1

Y n
ι+κRx+1 = αι+κRx+1X n

ι+κRx + X n

ι+κRx+1 + Z n

Notice that αι+κRx+1 ˆX n
ι+κRx has variance close to nα2
code precancels the predominant part of the interfering signal αι+κRx+1X n

ι+κRx − αι+κRx+1X n

ι+κRx+1

ι+κRx

ι+κRx+1.
P +1 and thus for P (cid:29) 1 the dirty-paper

P

The procedure is repeated for transmitters and receivers k = ι + κRx + 2, . . . , ι + κRx + κTx. Each such Tx k performs
the following three steps:
1) Using the conferencing message from Tx k − 1, it reconstructs the quantised signal ˆX n
2) It encodes and transmits its source message Mk using a power-P dirty-paper code that eliminates interference

k−1.

αk ˆX n

k−1.

3) It quantises its input signals X n

k with a rate- 1

2 log(1 + P ) quantiser and sends the produced quantisation message

over the conferencing link to Tx k + 1.
Tx ι + κRx + κTx (the last transmitter in group G2) sends no conferencing message; it skips step 3.

Each corresponding Rx k decodes its desired source message Mk using dirty-paper decoding based on its outputs Y n
k .

Notice that the described scheme requires only left-to-right Tx-conferencing; no right-to-left Tx-conferencing and no
Rx-conferencing. Also, Tx ι + κRx + j, (the j-th transmitter of group G2), for j ∈ {1, . . . , κTx − 1}, has to wait until it
obtains the Tx-conferencing message from its left-neighbour before it can perform above three steps. It can thus send its
own Tx-conferencing message to its right-neighbour only in Tx-conferencing round j + 1.
Finally, as we show in detail in Appendix A-B, through a careful design of the vector-quantisers and the dirty-paper
codes and when P (cid:29) 1, the predominant part of the interference αkX n
k−1 experienced at Rx k can be precanceled. As a
consequence, source messages Mι+κRx+1, . . . , Mι+κRx+κTx can be decoded with vanishingly small probability of error as
n → ∞, whenever (see also Lemma 2 in Appendix A-B)
P +1(cid:33) ,
log(cid:32)1 +

P
1 + α2
k

∀k ∈ G2

Rk <

(35)

1
2

P

ˆXn◆+RxXn◆+Rx+1Tx◆+Rx+TxTx◆+RxTx◆+Rx+1Xn◆+Rx+Tx 1Xn◆+RxM◆+Rx+1M◆+Rx+Tx 1M◆+Rx+TxTx conf. round no. Xn◆+Rx+TxTx◆+Rx+Tx 112Rx 1RxˆXn◆+Rx+Tx 2ˆXn◆+Rx+1ˆXn◆+Rx+Tx 1and

RTx >

1
2

log(1 + P ).

15

(36)

Source messages in groups 1 and 2 were transmitted over the “direct” links from a Tx k to its corresponding Rx k. The
“diagonal” links from a Tx k to its right-neighbouring Rx k + 1 only carried interference that had to be mitigated. In contrast,
source messages in groups 3 and 4 are transmitted over the “diagonal” links, whereas the “direct” links carry interference that
has to be mitigated. Without conferencing, there exists no desired communication path over the diagonal links, since the source
message desired by Rx k is a priori unknown at its left-neighbour Tx k − 1. Setting up such a path requires concatenating the
diagonal link from Tx k − 1 to Rx k with a preceding right-to-left Tx-conferencing from Tx k to Tx k − 1 or a subsequent
right-to-left Rx-conferencing from Rx k to Rx k − 1, see (44) and (38) ahead.

We now describe transmission of messages in group 4, follows by transmission of messages in group 3.
• Group 4 (successive interference cancellation from right to left): The fourth group of messages,

with

(37)

(38)

(cid:8)M Rx
ι+β−κRx−1(cid:9) ∪(cid:8)Mk : k ∈ G4(cid:9)
G4 :=(cid:8)ι + β − κRx, . . . , ι + β − 2},

Tx k −→ Rx k + 1 −→ Rx k.

is communicated using point-to-point channel codes with right-to-left successive interference cancellation at the decoders.
(See Appendix A-C for more technical details.)
Speciﬁcally, each source message Mk

5 is sent over the following communication path:

Each Tx k ∈ G4 uses a Gaussian point-to-point code of power P to transmit its source message Mk.
Rx ι + β − 1 (the last receiver in the subnet) observes channel outputs

(39)
because we silenced its corresponding Tx ι + β − 1. It decodes source message Mι+β−2 from these channel outputs and
describes the decoded message ˆMι+β−2 over the conferencing link to Rx ι + β − 2 (its immediate left-neighbour).
Rx ι + β − 2 declares the obtained conferencing message ˆMι+β−2 as its guess of Mι+β−2. It further uses the conferencing
message to reconstruct X n

ι+β−2(Mι+β−2) + Z n

Y n
ι+β−1 = αι+β−1X n

ι+β−1,

ι+β−2( ˆMι+β−2) and forms
ˆY n
ι+β−2 = Y n

ι+β−2 − X n

ι+β−2( ˆMι+β−2).

Rx ι + β − 2 ﬁnally decodes source message Mι+β−3 from this difference and describes ˆMι+β−3 over the conferencing
link to Rx ι + β − 3.
Whenever ˆMι+β−2 = Mι+β−2,

ˆY n
ι+β−2 = αι+β−2X n

ι+β−3(Mι+β−3) + Z n

ι+β−2,

(40)

k := Y n

k − X n

k ( ˆMk) and decodes source message Mk−1 based on this difference.

and Rx ι + β − 2 decodes source message Mι+β−3 based on an interference-free signal.
The described procedure is repeated for receivers k = ι + β − 3, . . . , ι + β − κRx − 1 in decreasing order. Speciﬁcally,
each such Rx k performs four steps:
1) Using the conferencing message ˆMk from Rx k + 1, it reconstructs the “interference” X n
2) It forms ˆY n
3) It sends the decoded source message ˆMk−1 over the conferencing link to Rx k − 1.
4) It declares ˆMk as its guess of source message Mk.
Notice that the described scheme requires only right-to-left Rx-conferencing; no left-to-right Rx-conferencing nor Tx-
conferencing. Rx ι + β − 1 (the last receiver in the subnet) sends its conferencing message ˆMι+β−2 in the ﬁrst Rx-
conferencing round. For each j ∈ {2, . . . , κRx}, Rx ι + β − j (the j-th right-most receiver in the subnet) has to wait until
it obtains the conferencing message from its right-neighbour before it can start performing above four steps. It can thus
send its own conferencing message ˆMι+β−j−1 only in Rx-conferencing round j.
Finally, we notice that if Rx k + 2’s decoding was successful, i.e., ˆMk+1 = Mk+1, then ˆX n
αk+1X n

k+1, and Rx k + 1 can thus decode source message Mk based on an interference-free signal.

k+1 and ˆY n

k+1 = X n

k ( ˆMk).

k + Z n

k+1 =

5For ease of notation, in the following paragraph we write simply Mι+β−κRx−1 for M Rx

ι+β−κRx−1

Consequently, source messages M Rx
of error as n → ∞, whenever

ι+β−κRx−1, Mι+β−κRx , . . . , Mι+β−2 can be decoded with vanishingly small probability
(41a)

log(1 + α2

Rk <

k+1P ),

k ∈ G4,

1
2

and

with

• Group 3 (dirty paper coding from right to left): The third group of messages

RRx
ι+β−κRx−1 <

1
2

log(1 + α2

ι+β−κRx P ),

RRx > max(cid:110)RRx

ι+β−κRx−1, Rι+β−κRx, . . . , Rι+β−2(cid:111).

(cid:8)Mk : k ∈ G3(cid:9) ∪(cid:8)M Tx

ι+β−κRx−1(cid:9)

G3 :=(cid:8)ι + β − κRx − κTx, . . . , ι + β − κRx − 2(cid:9),

16

(41b)

(42)

(43)

(45)

Tx k −→ Tx k − 1 −→ Rx k

uses dirty paper coding to mitigate the interference from the right. The desired communication path of a message Mk is
(44)
k−1 that encodes

and thus involves Tx-conferencing from right-to-left. More speciﬁcally, Tx k prepares a transmit signal X n
message Mk. It then describes it over the conferencing link to Tx k − 1, which will transmit this signal.
For simplicity, we temporarily ﬁx k = ι + β − κRx − 1. In the previous subsection we described how Tx k (the special
k . Tx k now also encodes its second message
transmitter of Figure 6), generated its input signal X n
M Tx
k . Denote the produced dirty-paper
k using a dirty-paper code of power α2
sequence by ΨDPC,k(cid:0)M Rx
k (cid:1).

P 2
P +1 that mitigates its own input signal X n

Tx k quantises a scaled version of the dirty-paper sequence,
P + 1

k in function of M Rx

k

2 log(1 + P ) quantiser and sends the resulting quantisation message over the conferencing link to Tx k − 1

using a rate- 1
(its left neighbour).
Tx k − 1 reconstructs the quantised sequence ˆΦn

Φn

k :=

P

ΨDPC,k(cid:0)M Rx
k (cid:1)

k and transmits
k−1 = α−1
X n

k

ˆΦn
k

over the interference network.
Rx k decodes source message M Tx

k by applying dirty-paper decoding to its outputs Y n
k .

Notice that if there was no quantisation error,

then Rx k would observe outputs

∆n

k = 0,

k := ˆΦn

k − Φn
k (cid:1) + Xkn + Z n
k = ΨDPC,k(cid:0)M Rx

Y n

k .
In this case, since the applied dirty-paper code precancels the “interference” X n
with the same rates as over an interference-free channel.
Now, zero quantization error (45) is very unlikely. However, when the quantiser is chosen as in Appendix A-D, the
k simply as an
additional noise, will thus not degrade the prelog rate of the source message Mk. (See Appendix A-D for a more detailed
analysis.)

k(cid:3) approaches α2
normalized variance Var(cid:2) 1
Let now k = ι + β − κRx − 2, one less than before.
Tx k (which before was Tx k−1) also prepares the transmit signal of its left-neighbour. Speciﬁcally, Tx k encodes its own
source message Mk using a dirty-paper code of power α2
DPC,k(Mk)
k
denote the produced dirty-paper sequence. Tx k applies a rate- 1

P +1 and is bounded in P . Treating the quantisation ∆n

P 2
P +1 that mitigates its own input signal X n

k , source message Mk could be transmitted

2 log(1 + P ) quantiser to the scaled sequence

k . Let Ψn

n ∆n

k

1

P
and sends the resulting quantisation message to Tx k − 1.

P + 1

Φn

k :=

Ψn

DPC,k(Mk)

Rk <

1
2

log(cid:32)1 +

α2
k

P 2
P +1
P

P +1(cid:33) ,

1 + α2
k

log(cid:32)1 +

k ∈ G3,

P 2
P +1 α2

1 + P

P +1 α2

ι+β−κRx−1

ι+β−κRx−1(cid:33)

RTx
ι+β−κRx−1 <

1
2

(46a)

(46b)

(47)

17

This process is repeated for transmitters and receivers k = ι + β − κRx − 3, . . . , ι + β − κRx − κTx in decreasing order.
Each such Tx k performs the following four steps:6
1) Using the conferencing message from Tx k + 1, it reconstructs the quantised signal ˆΦn
2) It transmits X n
3) It encodes source message Mk using dirty-paper coding of power α2
k

P 2
P +1 that mitigates its own inputs X n

ˆΦn
k+1 over the network.

k . It then

k = α−1

k+1.

k+1

DPC,k(Mk), where Ψn

DPC,k(Mk) denotes the produced dirty-paper sequence.

2 log(1 + P ) quantiser and sends the resulting quantisation bits over the conferencing

forms Φn

k = P +1

4) It quantises Φn
link to Tx k − 1.

P Ψn
k using a rate- 1

Tx ι + κRx + κTx + 1 (the left-most transmitter only performs steps 1) and 4), but prepares and sends no conferencing
message.
Each receiver applies dirty-paper decoding to decode its desired message Mk based on its outputs Y n
k .

Notice that the described scheme requires right-to-left Tx-conferencing; no left-to-right Tx-conferencing or Rx-conferencing
are needed. Special Tx ι+κRx+2κTx+1 sends its conferencing message in Tx-conferencing round 1. Each Tx ι+β−κRx−,
for j ∈ {2, . . . , κTx − 1} can send its conferencing message only after receiving the conferencing message from its right-
neighbour. Tx ι + β − κRx −  can thus send its conferencing message only in Tx-conferencing round j + 1.
Finally, as we show in detail in Appendix A-D, through a careful design of the quantisers and the dirty-paper codes,
source messages Mι+β−κRx−κTx , . . . , M Tx
ι+β−κRx−1 can be decoded with vanishingly small probability of error as n → ∞,
whenever

and

C. Tx-Conferencing in Period 2

RTx >

1
2

log(1 + P ).

period 2 in case of Tx-conferencing only. In this case, there is no need for a message M Rx
M Tx

If in the previous subsection IV-B we set everywhere κRx = 0, and hence G1 = G4 = ∅, we obtain our scheme for
ι+κTx+2κRx+1 and we can simply set
ι+κTx+2κRx+1 = Mι+κTx+2κRx+1.
D. No Conferencing in Period 3

We silence all odd transmitters. This splits the network into a set of (cid:100) K

optimal point-to-point codes over these channels.

2 (cid:101) parallel Gaussian point-to-point channels. We use

E. Analysis

1) Analysis of Period 1: As argued in (32), (35), (41) and (46) (see also lemmas 1–4), in each subnet we can transmit
2κTx + 2κTx + 1 (sub)messages each of MG 1. Thus, over the entire network which consists of γ subnets, our scheme achieves
a MG of

γ(2κTx + 2κRx + 1),

(48)

and a per-user MG of

2κTx + 2κRx + 1
2κTx + 2κRx + 2

.

Speriod1 =

(49)
We now analyse the communication over the conferencing links. We have for each subnet g = 0, . . . , γ−1 (see lemmas 1–4),
• Only the κTx consecutive transmitters ι + gβ + κRx, . . . , ι + gβ + κRx + κTx − 1 send conferencing messages to their
right-neighbours. Each of these messages corresponds to a decoded source message. Since we transmit all source messages
at rates below 1

2 log(1 + P ), also the rates of the conferencing messages do not exceed 1

• Only the κTx consecutive transmitters ι + (g + 1)β − κRx − κTx, . . . , ι + (g + 1)β − κRx − 1 send conferencing messages
to their left-neighbours. Each of these messages corresponds to a decoded source message. Since we transmit all source
messages at rates below 1

2 log(1 + P ), also the rates of the conferencing messages do not exceed 1

• Only the κRx consecutive receivers ι + gβ, . . . , ι + gβ + κRx − 1 send conferencing messages to their right-neighbours.

2 log(1 + P ).

2 log(1 + P ).

Each of these messages corresponds to a rate- 1

2 log(1 + P ) quantisation message.7

6See Appendix A-D for more technical details.
7More precisely, the rate should be slightly larger than 1

the set of achievable rates. It is thus a minor technicality, which we ignore.

2 log(1 + P ). Through standard continuity considerations one can show that this does not change

• Only the κRx consecutive receivers ι + (g + 1)β − κRx, . . . , ι + (g + 1)β − 1 send conferencing messages to their left-
We conclude that each Tx-conferencing link is used a

neighbours. Each of these messages corresponds to a rate- 1
κTx

2 log(1 + P ) quantisation message.

2κTx+2κRx+2-th of the time and at a total rate not exceeding
κTx

µTx,Period1 =

2κTx + 2κRx + 2 ·

log(1 + P ).

1
2

Similarly, each Rx-conferencing link is used a

κRx

2κTx+2κRx+2-th of the time and at a total rate not exceeding

µRx,Period1 =

κRx

2κTx + 2κRx + 2 ·

1
2

log(1 + P ).

2) Analysis of Period 2: Specializing the ﬁndings of the previous section to κRx = 0, the per-user MG achieved in period 2

is

The tx-conferencing links are used at rate

Speriod2 =

2κTx + 1
2κTx + 2

.

µTx,Period2 =

κTx

2κTx + 2 ·

1
2

log(1 + P ),

18

(50)

(51)

(52)

(53)

(54)

(55)

(56)
(57)

and the rx-conferencing links are not used at all,

µRx,Period2 = 0.

3) Analysis of Period 3: During the third period the achieved per-user MG is

The conferencing links are not used at all,

Speriod3 =

1
2

.

µTx,Period3 = 0
µRx,Period3 = 0.

4) Analysis of Overall Scheme: We ﬁrst analyse the communication over the conferencing links. Under assumption (25),
there is tx-conferencing in periods 1 and 2. Given the length of the periods in (26), and the tx-conferencing rates in periods 1
and 2, (50) and (53), in total each tx-conferencing link is used at rate not exceeding

N1
n

µTx,period1 +

n ·

=(cid:18) N1
≤(cid:18) µRx

κRx
≤ µTx ·

1
2

N2
n

µTx,period2

κTx

2κTx + 2κRx + 2

+

N2
n ·

(2κTx + 2κRx + 2)

2κTx + 2κRx + 2

log(1 + P ) = RTx.

log(1 + P )

1
2

κTx

2κTx + 2(cid:19) ·
+(cid:16) µTx

κTx

κTx −

µRx

κRx(cid:17)(2κTx + 2)

κTx

2κTx + 2(cid:19) ·

1
2

log(1 + P )

(58)

Our overall scheme thus respects the tx-conferencing rate constraints in (6).

The rx-conferencing links are used only in period 1 at rate not exceeding (51). Thus, considering the length of this period 1

in (26), in total each receiver conferencing link is used at a rate not exceeding

N1
n

µRx,period1 =

κRx

N1
n ·
µRx
≤
κRx
= µRx ·

2κTx + 2κRx + 2 ·
(2κTx + 2κRx + 2) ·
1
2

log(1 + P ) = RRx.

log(1 + P )

1
2
2κTx + 2κRx + 2 ·

κRx

Our overall scheme thus also respects the rx-conferencing rate constraints in (9).

We now analyse the per-user MG achieved by our overall scheme. It is given by

To evaluate this expression, we distinguish three cases:

S =

N1
n

Speriod1 +

N2
n

Speriod2 +

N3
n

Speriod3.

1) When

1 ≤

µRx
κRx

(2κTx + 2κRx + 2),

1
2

log(1 + P )

(59)

(60)

(61)

then N1 = n and periods 2 and 3 don’t exist. In this case,

S = Speriod1 =

2κTx + 2κRx + 1
2κTx + 2κRx + 2

.

(2κTx + 2κRx + 2) and

2) When 1 > µRx
κRx

then N1 = n µRx
κRx

1 <

µRx
κRx

(2κTx + 2κRx + 2) +(cid:16) µTx

κTx −

µRx

κRx(cid:17)(2κTx + 2) = 2µTx + 2µRx + 2

µTx
κTx

,

N1

(2κTx + 2κRx + 2), N2 = n − N1 and N3 = 0, i.e., period 3 does not exist. In this case,
S =
(2κTx + 2κRx + 2)(cid:19) 2κTx + 1
2κTx + 2(cid:19)

n (cid:17)Speriod2
+(cid:18)1 −
(2κTx + 2κRx + 2)(cid:18) 2κTx + 2κRx + 1

2κTx + 2κRx + 1
2κTx + 2κRx + 2

Speriod1 +(cid:16)1 −

N1
n
µRx
κRx
2κTx + 1
µRx
2κTx + 2
κRx
2κTx + 1 + 2µRx

(2κTx + 2κRx + 2) ·

2κTx + 2κRx + 2 −

2κTx + 2

2κTx + 1

µRx
κRx

=

=

+

=

3) When

2κTx + 2

.

1 > 2µTx + 2µRx + 2

µTx
κTx

,

then N1 = n µRx
κRx

κRx(cid:17)(2κTx + 2) and N3 = n − N1 − N − 2 > 0. In this case,

(2κTx + 2κRx + 2), N2 = n(cid:16) µTx

Speriod1 +

N2

N2
n

κTx − µRx
Speriod2 +(cid:18)1 −
N1
n −
(2κTx + 2κRx + 2) −(cid:16) µTx

2κTx + 2κRx + 1
2κTx + 2κRx + 2
κTx −

(2κTx + 2κRx + 2) ·
µRx
κRx

n (cid:19) Speriod3
+(cid:16) µTx
κRx(cid:17)(2κTx + 2)(cid:19) ·

κTx −

µRx

µRx

N1
n

=

µRx
κRx

+(cid:18)1 −

1
2

S =

=

1 + 2µTx + 2µRx

.

2

κRx(cid:17)(2κTx + 2) ·

2κTx + 1
2κTx + 2

19

(62)

(63)

(64)

(65)

Combining all these ﬁndings proves Theorem 2.

V. PROOF OF THEOREM 1

Since with an unlimited number of conferencing rounds we cannot do worse than with κ = (κTx, κRx) conferencing rounds,

by Theorem 3,

We now prove that also

S(κ, µ) ≤ S∞(µ) ≤

2µTx + 2µRx + 1

2

.

S(κ, µ) ≤

2κTx + 2κRx + 1
2κTx + 2κRx + 2

(66)

(67)

holds. Let us suppose that a genie provides each transmitter the source messages of the κTx transmitters on its left and right;
that is, transmitter k is given source messages

(Mk−κTx

. . . Mk−1)

and

(Mk+1 . . . Mk+κTx ).

Let us also suppose that the genie provides to each receiver the exact channel outputs at the κRx receivers on its left and right;
that is, receiver k is given

(Y n

k−κRx

. . . Y n

k−1)

and

(Y n

k+1 . . . Y n

k+κRx).

Lapidoth et al. [31, Cor. 2] established that the per-user MG of this genie-aided problem is given by (2κTx + 2κRx + 1)/(2κTx +
2κRx + 2). Since the per-user MG of the genie-aided problem cannot be smaller than S(κ, µ) in the problem at hand, we
obtain upper bound (67).

We now establish the converse bound (12) for the case µTx = 0. The other parameters κ = (κTx, κRx) and µRx are arbitrary.

By Proposition 1,

S(0, κRx, 0, µRx) = S(1, κRx, 0, µRx) = ··· .

The genie-aided arguments in the preceding paragraph remain valid for κ(cid:48) = (0, κRx) and µ(cid:48) = (0, µRx), so

S(κTx, κRx, 0, µRx) = S(0, κRx, 0, µRx) ≤

2κRx + 1
2κRx + 2

,

which establishes (12).

The converse bound (13) for µRx = 0 can be proved in a similar way.

We prove the converse bound in (18),

VI. PROOF OF CONVERSE TO THEOREM 3

Assume for the moment that K is even, and let

S∞(µ) ≤

1 + 2µTx + 2µRx

2

.

αmax (cid:44) max

k=2,...,K |αk|.

Deﬁne Ieven and Iodd to be the sets of indices in {1, . . . , K} that are even and odd respectively:

Ieven (cid:44)(cid:8)k ∈ {1, . . . , K} : k is even(cid:9)
Iodd (cid:44)(cid:8)k ∈ {1, . . . , K} : k is odd(cid:9).

Xn
Yn
Yn

Meven (cid:44)(cid:8)Mk : k ∈ Ieven(cid:9)
Modd (cid:44)(cid:8)Mk : k ∈ Iodd(cid:9)
even (cid:44)(cid:8)X n
k : k ∈ Ieven(cid:9)
even (cid:44)(cid:8)Y n
k : k ∈ Ieven(cid:9)
k : k ∈ Iodd(cid:9)
odd (cid:44)(cid:8)Y n
3 − Z n
1 − Z n
4 ,
6 , . . . , αKZ n
α6Z n

2 , α4Z n

5 − Z n

K(cid:19)
K−1 − Z n

2 − Z n
α7Z n

3 , α5Z n

4 − Z n
5 ,
7 , . . . , αK−1Z n

6 − Z n

K−2 − Z n

K−1(cid:19)

20

(68)

(69)
(70)

(71)
(72)
(73)
(74)
(75)

(76)

Deﬁne further

and

Gn

noises,even (cid:44)(cid:18)α2Z n

Gn

noises,odd (cid:44)(cid:18)α3Z n

k(cid:48)→k, . . . , U (κTx)

(77)
Also, let Ueven→odd denote the set of all cooperation messages that are sent from transmitters with even indices to transmitters
with odd indices:
(78)
Similarly, let Uodd→even denote the set of all cooperation messages that are sent from transmitters with odd indices to transmitters
with even indices:
(79)
In the same way, let Veven→odd denote the set of all cooperation messages that are sent from receivers with even indices to
receivers with odd indices,
(80)
and let Vodd→even denote the set of all cooperation messages that are sent from receivers with odd indices to receivers with
even indices:
(81)

k(cid:48)→k : k(cid:48) ∈ Ieven, k ∈ Iodd(cid:111).
k(cid:48)→k : k(cid:48) ∈ Iodd, k ∈ Ieven(cid:111).
k(cid:48)→k : k(cid:48) ∈ Ieven, k ∈ Iodd(cid:111).
k(cid:48)→k : k(cid:48) ∈ Iodd, k ∈ Ieven(cid:111).

Ueven→odd (cid:44)(cid:110)U (1)
Uodd→even (cid:44)(cid:110)U (1)
Veven→odd (cid:44)(cid:110)V (1)
Vodd→even (cid:44)(cid:110)V (1)

k(cid:48)→k, . . . , V (κRx)

k(cid:48)→k, . . . , V (κRx)

k(cid:48)→k, . . . , U (κTx)

Our converse proof is based on the following observations:

21

(82)

(83)

(84)

(85)

i) From Veven→odd and Yn

odd it is possible to reconstruct

{Vall→k : k ∈ Iodd} ,
i.e., all cooperation messages sent to odd-indexed receivers k ∈ Iodd.

even it is possible to reconstruct

ii) From Vodd→even and Yn

iii) From Uodd→even and Meven it is possible to reconstruct

{Vall→k : k ∈ Ieven} ,
i.e., all cooperation messages sent to even-indexed receivers k ∈ Ieven.
{Uall→k : k ∈ Ieven} ,
i.e., all cooperation messages sent to even-indexed transmitters k ∈ Ieven.

iv) From Uodd→even and Meven it is possible to reconstruct Xn
v) From Xn
We now proceed to prove the converse:

noises,even it is possible to reconstruct Yn

even, and Gn

even, Yn

even.

odd.


n

K(cid:88)k=1

Rk −
1
n

≤

≤

=

=

=

≤

+

1
n

+

1
n

+

+

+

1
n

+

+

+

1
n

+

+

(cid:124)
(cid:124)

1
n

+

1
n

−

noises,even(cid:17)

noises,even(cid:17)

1
n

1
n

odd, Yn

1
n
1
n
1
n

even, Gn

even, Gn

noises,even(cid:17)
even, Vodd→even|Gn
noises,even(cid:17)
odd, Veven→odd|Meven, Gn
noises,even(cid:17)
even, Vodd→even|Gn
even|Meven, Gn
odd, Yn
noises,even(cid:17)
noises,even(cid:17)
even|Meven, Gn
noises,even(cid:17)
even|Uodd→even, Meven, Gn

I(cid:16)Meven; Yn
I(cid:16)Modd; Yn
I(cid:16)Meven; Yn
I(cid:16)Modd, Uodd→even; Yn
I(cid:16)Meven; Vodd→even|Yn
I(cid:16)Uodd→even; Yn
I(cid:16)Meven; Yn
even|Gn
I(cid:16)Modd; Yn
odd, Yn
I(cid:16)Meven; Vodd→even|Yn
I(cid:16)Uodd→even; Yn
I(cid:16)Meven; Yn
even|Gn
I(cid:16)Modd; Yn
even|Uodd→even, Meven, Gn
noises,even(cid:17)
I(cid:16)Meven; Vodd→even|Yn
I(cid:16)Uodd→even; Yn
even|Meven, Gn
I(cid:16)Yn
even; Uodd→even, Meven, Modd(cid:12)(cid:12)Gn
I(cid:16)Yn
noises,even(cid:17)
even; Uodd→even(cid:12)(cid:12)Meven, Gn
(cid:125)
(cid:123)(cid:122)
noises,even(cid:17)
I(cid:16)Meven; Vodd→even|Yn
noises,even(cid:17)
I(cid:16)Uodd→even; Yn
even|Meven, Gn

noises,even(cid:17)
even|Meven, Gn
noises,even(cid:17)

noises,even(cid:17)
noises,even(cid:17)
noises,even(cid:17)
noises,even(cid:17)
(cid:125)

2 log(1+(1+αmax)2P )

even, Gn

even, Gn

1
n
1
n
1
n

odd, Yn

odd, Yn

odd, Yn

1
n
1
n

1
n

(cid:123)(cid:122)

≤ K

2 · 1

≤0

Above steps are justiﬁed as follows:

+

K
2 ·

1
2

log(1 + (1 + αmax)2P ).

22

(86)

from (Meven, Modd).

observations i) and ii).

• The ﬁrst inequality holds by Fano’s inequality, by the independence of Gn
• The second inequality holds because Veven→odd can be computed from (Yn
• The ﬁrst equality holds by the chain rule for mutual information.
• The second equality holds by our previous observations iv) and v).
• The third equality holds by the deﬁnition of mutual information and by rearranging terms.
• The last inequality holds by the nonnegativity of mutual information and by Inequality

even, Yn

noises,even, Meven and Modd, and by our previous

odd) and Uodd→even can be computed

I(cid:16)Yn
even; Uodd→even, Meven, Modd(cid:12)(cid:12)Gn
log(cid:0)1 + (1 + αmax)2P(cid:1) .

K
2 ·

noises,even(cid:17)

≤

1
2

(87)

Observations i)–iv) hold also when the subscripts “even” and “odd” are exchanged. The same is true for the above sequence

of inequalities leading to (85). Thus,

Now, since from Xn
of mutual information and rearranging terms:

odd, and Gn

odd, Yn

noises,odd(cid:17).
K−2 (but not Y n

(88)

K), and by using the deﬁnition


n

K(cid:88)k=1

≤

Rk −
1
n

+

odd, Gn

even, Yn

noises,odd(cid:17)
odd|Modd, Gn

I(cid:16)Modd; Veven→odd|Yn
I(cid:16)Ueven→odd; Yn
I(cid:16)Modd; Yn
odd|Gn
I(cid:16)Meven; Yn
even, Yn

1
n
1
n
1
n
noises,odd it is possible to reconstruct Y n

noises,odd(cid:17)
noises,odd(cid:17)
odd|Ueven→odd, Modd, Gn
2 , . . . , Y n

+

+

Rk −


n

K(cid:88)k=1

noises,odd(cid:17)

≤

=

≤

1
n

+

+

+

1
n

+

+

(cid:124)
(cid:124)
(cid:124)

+

1
n

1
n
1
n

odd, Yn

odd, Gn

odd, Gn

1
n
1
n
1
n

even, Yn

noises,odd(cid:17)
odd|Modd, Gn

noises,odd(cid:17)
noises,odd(cid:17)
odd|Ueven→odd, Modd, Gn
noises,odd(cid:17)
noises,odd(cid:17)
(cid:125)

I(cid:16)Modd; Veven→odd|Yn
I(cid:16)Ueven→odd; Yn
I(cid:16)Modd; Yn
odd|Gn
I(cid:16)Meven; Y n
K, Yn
I(cid:16)Modd; Veven→odd|Yn
noises,odd(cid:17)
I(cid:16)Ueven→odd; Yn
even|Modd, Gn
I(cid:16)Modd, Ueven→odd, Meven; Yn
odd|Gn
(cid:123)(cid:122)
noises,odd(cid:17)
I(cid:16)Ueven→odd; Yn
odd|Modd, Gn
(cid:125)
(cid:123)(cid:122)
≤0
I(cid:16)Meven; Y n
K|Yn
odd, Ueven→odd, Modd, Gn
(cid:123)(cid:122)
≤ 1
I(cid:16)Modd; Veven→odd|Yn

noises,odd(cid:17)

2 log(1+(1+αmax)2P )

2 log(1+(1+αmax)2P )

odd, Gn

1
n

≤ K

2 · 1

1
n

−

noises,odd(cid:17)
(cid:125)

In the following we combine bounds (86) and (89). To this end, notice that the transmitter-side conferencing constraint

implies

+

1
n

I(cid:16)Ueven→odd; Yn
+ 1(cid:19) 1
+(cid:18) K

2

2

1
n

I(cid:16)Uodd→even; Yn

I(cid:16)Ueven→odd; Yn

1
n
≤ KµTx(tL + tR)

noises,odd(cid:17)

odd, Yn

even|Modd, Gn
log(cid:0)1 + (1 + αmax)2P(cid:1) .
noises(cid:17)
even|Modd, Gn

even|Meven, Gn
odd, Yn
1
2

log(1 + P ).

odd, Yn

noises(cid:17)

even, Gn

I(cid:16)Meven; Vodd→even|Yn

I(cid:16)Modd; Veven→odd|Yn

1
n
≤ 2KµRx

log(1 + P ).

1
2

+

noises(cid:17)
noises(cid:17)

odd, Gn

+

1
n

and the receiver-side conferencing constraint implies

23

(89)

(90)

(91)

Adding up bounds (86) and (89) and dividing the result by 2, in view of (90) and (91), we obtain for any even value of K:

K(cid:88)k=1

Rk ≤

1

2(cid:0)K + 1 + 2KµTx + 2KµRx(cid:1)
log(cid:0)1 + (1 + αmax)2P(cid:1).

1
2

·

(92)
2 log(1 + P ) and letting ﬁrst P → ∞ and then

The same bound can also be obtained for odd values of K. After dividing by K
K → ∞, bound (92) establishes the desired upper bound on the per-user MG in (18).

VII. SUMMARY AND CONCLUSION

We quantify how the asymptotic MG per-user of Wyner’s soft-handoff interference network increases with the number of
permitted Tx- and Rx-conferencing rounds. We identify two regimes. When the conferencing links are of low rate, then the
asymptotic MG per-user does not depend on the number of permitted conferencing rounds; a single round of non-interactive
conferencing sufﬁces. When the conferencing links are of high rate, then every additional conferencing round increases the
asymptotic per-user MG. For certain system parameters there is a third intermediate regime, where a single conferencing round
is suboptimal, but a ﬁnite number of rounds sufﬁces to achieve the asymptotic MG per-user.

Determining the smallest number of conferencing rounds that attains the asymptotic MG per user is of practical interest,

because it allows to limit implementation complexity.

Intuitively, increasing the number of Tx- and Rx-conferencing rounds in an interference network can be beneﬁcial, because
information about a given transmit message or about a given receive signal can be spread over a larger part of the network.
This is important for iterative interference mitigation techniques (like successive dirty-paper coding at the transmitters and
successive interference cancellation at the receivers), where interference-mitigation information precisely needs to propagate
over the network.

To avoid propagating interference beyond what can be mitigated with the number of permitted conferencing rounds, in our
scheme we periodically deactivate transmitters. This splits the large network into smaller subnets. Over each of these subnets
we employ a coding scheme that smartly combines transmitter and receiver interference-mitigation techniques so as to allow
to keep the subnets as large as possible, and thus minimize the number of deactivated transmitters.

The conferencing protocols and interference-mitigation techniques that we use in the subnets, are inspired by Ntranos,
Maddah-Ali, and Caire [22]. Transmitters describe quantised versions of transmit signals over the Tx-conferencing links to
their left- or right-neighbours, and these neighbours apply dirty-paper coding to mitigate the interference signals described over
the conferencing links. Receivers send decoded messages over Rx-conferencing links to their left- or right-neighbours. These
neighbours then reconstruct the transmit signals corresponding to the conferenced messages, and subtract these interferences
from their receive signals.

In general, the described conferencing strategies are strictly better than conferencing messages at the transmitter-side and
quantised versions of receive signals at the receiver-side. The advantage of this latter conferencing strategy however is that it
can be applied also in oblivious setups (like for example in C-RANs) where the codebooks are not known during the Tx- and
Rx-conferencing phases. When only a single conferencing round is permitted at the transmitter and the receiver side, than the
two conferencing strategies are equivalent. In this sense, our results also provide an estimate about the loss in asymptotic MG
per user in oblivious setups.

24

DETAILED DESCRIPTION AND ANALYSIS OF THE CODING SCHEMES IN A SUBNET

APPENDIX A

We describe and analyse the random coding argument that we employ for the ﬁrst subnet. We will construct random
codebooks, which are revealed to all transmitters and receivers before communication starts. The probabilities of decoding
errors that we present in our analysis are average probabilities of error, where the average is taken over the random source
messages, the random channel realisations and the random choices of the codebooks. We shall identify conditions under which
these average probabilities of decoding errors tend to 0 as the blocklength n → ∞. Standard arguments then imply that there
must exist a deterministic choice of all the codebooks such that the average probabilities of decoding errors (now averaged
only over the source messages and the channel realisations) tend to 0 as n → ∞.
Recall that in the ﬁrst subnet we transmit messages Mι, . . . , Mι+β−κRx−2, M (Tx)
ι+β−κRx−1, Mι+β−κRx, . . . , Mι+β−2,
and that these messages are partitioned into four groups, see subsection IV-B2 and ﬁgure 6. We explain transmission of these
four groups separately. For ease of exposition, we start with group 1, followed by group 2, then group 4, and ﬁnally group 3.

ι+β−κRx−1, M (Rx)

A. Transmission of source messages Mι, . . . , Mι+κRx (messages in group 1)

For each k ∈ {ι, ι + 1, . . . , ι + κRx}, let

CP2P,k :=(cid:110)X n

k (m) =(cid:0)Xk,1(m) . . . Xk,n(m)(cid:1)(cid:111)(cid:98)2nRk(cid:99)

m=1

be a random Gaussian codebook of rate Rk with codewords of length n drawn iid as Xk ∼ N (0, P ).8 Given source message Mk,
Tx k sends the corresponding codeword X n
Consider Rx ι (the ﬁrst receiver in group one). Tx ι − 1 has been deactivated, so the channel output at Rx ι is

k (Mk) over the channel.

(93)
where the addition is understood to be symbol by symbol. Rx ι looks through the codebook CP2P,ι for a unique index m∗
ι are jointly typical [34]. If successful, Rx ι declares ˆMι = m∗, otherwise it declares ˆMι = 1. By
such that X n
ι (m∗) and Y n
standard arguments [34], if

ι (Mι) + Z n
ι ,

Y n
ι = X n

Rι <

log(1 + P ),

1
2

then P[ ˆMι (cid:54)= Mι] → 0 as n → ∞.
Rx ι sends its estimate ˆMι of Mι to Rx ι + 1 during the ﬁrst Rx-conferencing round:

(This will be the only conferencing message that Rx ι sends).

Rx ι + 1 estimates the interference from Tx ι to be αι+1 X n

ι ( ˆMι) and computes

ι→ι+1 := ˆMι.
V (1)

If Rx ι decoded correctly, ˆMι = Mι, then X n

ι ( ˆMι).

ˆY n
ι+1 := Y n
ι ( ˆMι) = X n
ˆY n
ι+1 = X n

ι+1 − αι+1X n
ι (Mι) and
ι+1(Mι+1) + Z n

ι+1.

(94)

(95)

(96)

(97)

(98)

Rx ι + 1 looks through its codebook CP2P,ι+1 for a unique index m∗ such that X n
successful, it declares ˆMι+1 = m∗, otherwise it declares ˆMι+1 = 1. If

ι+1(m∗) and ˆY n

ι+1 are jointly typical. If

then P[ ˆMι+1 (cid:54)= Mι+1| ˆMι = Mι] → 0 as n → ∞.
Rx ι + 1 sends its estimate ˆMι+1 to Rx ι + 2 during the second Rx-conferencing round:

Rι+1 <

1
2

log(1 + P ),

ι+1→ι+2 = ˆMι+1.
V (2)

The same process is repeated for receivers ι + 2, . . . , ι + κRx in increasing order, see also Figure 7. The only difference
concerns the Rx-conferencing messages: The right-most receiver Rx ι + κRx − 1 does not send any conferencing message at
all. Every other receiver ι + j, for j ∈ {2, . . . , κRx − 1}, has to wait until Rx-conferencing round j + 1 to send its conferencing
message ˆMι+j:
(99)

ι+j→ι+j+1 = ˆMι+j,
V (j+1)

j ∈ {2, . . . , κRx − 1}.

8To be precise, in order to satisfy the power constraint P in (2), the variance of Xk needs to be chosen slightly smaller than P . This is a technicality that

we will ignore for ease of exposition.

The next lemma follows by iteratively applying the arguments we used to derive (94) and (97) and accounting for (95) and

(98).

25

Lemma 1: Source messages Mι, . . . , Mι+κRx are successfully decoded with probability tending to 1 as n → ∞, whenever

and

Rk <

1
2

log (1 + P ) ,

∀ k ∈ {ι, . . . , ι + κRx},

B. Transmission of source messages Mι+κRx+1, . . . , Mι+κRx+κTx (messages in group 2)

RTx > Rk,

∀k ∈ {ι, . . . , ι + κRx − 1}.

Let us temporarily ﬁx k = ι + κRx + 1 to simplify notation. Consider Tx k − 1 (the last transmitter in group one), and
recall that its channel codeword X n
k−1(Mk−1) was chosen from an iid Gaussian codebook of power P . To help facilitate
communication at Tx k (the ﬁrst transmitter of group 2), Tx k − 1 sends a rate-1/2 log(1 + P ) quantisation of its transmitted
signal X n

k−1(Mk−1) to Tx k.

Let

so that

Construct a random quantisation codebook

ˆXk−1 ∼ N(cid:18)0,

P 2

1 + P(cid:19) and Z†k−1 ∼ N(cid:18)0,
Xk−1 := ˆXk−1 + Z†k−1 ∼ N (0, P ).

P

1 + P(cid:19) .

CRD,k−1 :=(cid:110) ˆX n

k−1(u) =(cid:0) ˆXk−1,1(u) . . . ˆXk−1,n(u)(cid:1)(cid:111)(cid:98)2nRTx(cid:99)

u=1

with codewords of length n drawn iid as ˆXk−1.
and ˆX n

Tx k− 1 takes its channel codeword X n

k−1(u∗) are jointly typical. If successful, Tx (k − 1) sends the index

k−1(Mk−1) and looks through CRD,k−1 for a unique index u∗ such that X n

k−1(Mk−1)

to Tx k during Tx-conferencing round 1; otherwise it sends U (1)
sends.)

(100)
k−1→k = 1. (This is the only conferencing message Tx k − 1
Let Qk−1 denote the event that the described quantisation is successful, i.e., that there was a unique index u∗. Standard

k−1→k = u∗
U (1)

arguments show that whenever the Tx-conferencing rate satisﬁes

then P[Qk−1] → 1 as n → ∞.
Now consider Tx/Rx pair k. Rx k observes the channel outputs

RTx >

log(1 + P ),

(101)

1
2

which can be rewritten as

Y n
k = αkX n

k−1(Mk−1) + X n

k + Z n
k ,

Y n
k = X n

+ αk ˆX n

channel input

channel state Sn

k(cid:124)(cid:123)(cid:122)(cid:125)

(cid:124)

k−1(U (1)

+ αk(cid:0)X n

k−1→k)
k known at Tx k

(cid:123)(cid:122)
k−1→k, Tx k reconstructs ˆXk−1(U (1)

k−1(Mk) − ˆX n
(cid:123)(cid:122)

(cid:125)

(cid:124)

k−1(U (1)

additive noise ˜Zn
k

k

k−1→k)(cid:1) + Z n
(cid:125)

After obtaining the conferencing message U (1)
k−1→k). It then encodes its source message Mk
using dirty-paper coding over spheres [6], [4, Section V]9 of power P and designed for the channel in (102) with additive
state sequence

.

(102)

(103)

and additive noise sequence

k := αk ˆX n
Sn

k−1(U (1)

k−1→k)

k−1(Mk) − ˆX n

k−1(U (1)

k−1→k)(cid:1) + Z n

k .

˜Z n

k := αk(cid:0)X n
(cid:13)(cid:13)2 −→ α2
(cid:13)(cid:13)Sn

k

9Standard dirty-paper coding and its analysis are not sufﬁcient because the noise sequence ˜Zn

k is neither iid (not even when averaged over all codebooks)

nor independent of the state sequence Sn
k .

In fact, since the state-sequence Sn

k is not uniform over a sphere, the dirty-paper encoding over spheres needs to be extended as described in the proof
of Remark III-5 in [4]. The analysis of this extended dirty-paper coding over spheres only requires that the normalised lengths of the noise and the state
sequences are approximately constant and the noise and state sequences are approximately orthogonal [4]. Given event Qk−1, our setup satisﬁes these
conditions: 1
n

k > −→ 0, where convergence is in probability everywhere.

(cid:13)(cid:13)2 −→ 1 + α2

(cid:13)(cid:13) ˜Zn

n < ˜Zn

P 2
P +1 ,

k , Sn

P +1 ,

and 1

1
n

P

k

k

k

Rx k uses dirty-paper decoding over spheres as described in [4, Section V-C]. Adapting Corollary IV.2 in [4] similarly as
in Remark IV.4 of [4], and in view of footnote 10, we obtain the following: If Tx k sends its source message Mk to Rx k
using dirty-paper coding over spheres [4, Section V] of power P and designed for a channel with normalised noise variance
N = 1 + α2
k

k , and if the rate of the source message

P +1 and interference sequence Sn

P

Rk <

1
2

log(cid:32)1 +

P +1(cid:33) ,

P

P
1 + α2
k

then P[ ˆMk (cid:54)= Mk|Qk−1] → 0 as n → ∞.
Let now k = ι + κRx + 2 and consider Tx k − 1. (This is the ﬁrst transmitter in group 2 that we also considered in the
previous dirty-paper coding step.) It facilitates communication at Tx k (the second transmitter in group 2) by sending it a
2 log(1 + P ) quantisation of its input signal X n
k−1. Since this input signal was produced by the dirty-paper coding over
rate- 1
spheres in [4, Section V]), we use a quantisation codebook

CRD,k−1 :=(cid:110) ˆX n

k−1(u)(cid:111)(cid:98)2nRTx(cid:99)

u=1

with codewords ˆX n

k−1(u) that are picked iid uniformly over the surface of an n-dimensional sphere of radius(cid:113)nVar(cid:0) ˆXk−1(cid:1) =

(cid:113)n P 2
1+P . Quantisation is as follows. Tx k− 1 looks through CRD,k−1 for the vector ˆX n
to(cid:113) P
P +1:
Tx k − 1 sends the index u∗ over the conferencing link to Tx k. It does so during the second Tx-conferencing round:

u∗ = argminu∈{1,...,2nRTx}(cid:12)(cid:12)(cid:12)(cid:12)

k−1(cid:1) −(cid:114) P
P + 1(cid:12)(cid:12)(cid:12)(cid:12).

k−1(u∗) whos angle with X n

k−1 is closest

k−1(u), X n

∠(cid:0) ˆX n
k−1→k = u∗.
U (2)

By standard arguments (see e.g., proof of (134) in [35]), whenever

26

(104)

(105)

(106)

(107)

(108)

then

RTx >

1
2

log(1 + P ),

k−1(cid:1) −(cid:114) P

P + 1(cid:12)(cid:12)(cid:12)(cid:12) −→ 0

k−1(u∗), X n

∠(cid:0) ˆX n

(cid:12)(cid:12)(cid:12)(cid:12)

in probability.

Tx k reconstructs the quantised signal ˆX n

over spheres of power P and for a channel with normalised noise variance N = 1 + α2
k
k := αk ˆX n
Sn
Receiver k applies dirty-paper coding over spheres to decode message Mk from its output sequence

k−1→k).

k−1(U (2)

k−1(U (2)

k−1→k), and encodes its source message Mk using dirty-paper coding
P +1 and interference sequence

P

Y n
k = X n

+ αk ˆX n

channel input

channel state Sn

k−1(U (1)

k−1→k)
k known at Tx k

(cid:123)(cid:122)

+ αk(cid:0)X n

(cid:124)

k−1(U (1)

k−1(Mk) − ˆX n
(cid:123)(cid:122)

additive noise ˜Zn
k

.

k

k−1→k)(cid:1) + Z n
(cid:125)

(cid:124)

k(cid:124)(cid:123)(cid:122)(cid:125)

Since given (106) the noise sequence ˜Z n

k and state sequence Sn

k satisfy again the convergence conditions in footnote 10,

extending Corollary IV.2 similarly to Remark IV.4 (both in [4]), we obtain that if (106) and

(cid:125)
log(cid:32)1 +

Rk <

1
2

P +1(cid:33)

P

P
1 + α2
k

hold, then P[ ˆMk (cid:54)= Mk] → 0 as n → ∞.
The same procedure can be repeated for k = ι + κRx + 3, . . . , ι + κRx + κTx, see also Figure 8.
The next lemma follows by iteratively applying the arguments we used to derive (104) and (108).

Lemma 2: Source messages Mι+κRx+1 . . . , Mι+κRx+κTx are successfully decoded with probability tending to 1 as n → ∞,

whenever

and

Rk <

1
2

log (1 + P ) ,

∀k ∈ {ι + κRx + 1, . . . , ι + κRx + κTx}

RTx >

1
2

log(1 + P ).

C. Transmission of source messages M Rx

ι+β−κRx−1, Mι+β−κRx, . . . , Mι+β−2 (messages in group 4)
For each k ∈ {ι + β − κRx − 1, . . . , ι + β − 2}, let
CP2P,k :=(cid:110)Ξn

k (m) =(cid:0)Ξk,1(m) . . . Ξk,n(m)(cid:1)(cid:111)(cid:98)2nRk(cid:99)

be a random Gaussian codebook of rate Rk with codewords of length n drawn iid as Ξk ∼ N (0, α2
message Mk,10 Tx k picks the corresponding codeword Ξn

k (Mk) and transmits the scaled sequence

m=1

.

k+1P ). Given source

Transmission of each source message Mk goes over the “diagonal path”

X n

k = α−1

k+1Ξn

k (Mk).

(109)

27

Tx k −→ Rx k + 1 −→ Rx k.

In fact, Rx k + 1 decodes source message Mk and describes its guess over the conferencing link to Rx k − 1, which then
declares this message.
Consider Rx ι + β − 1 (the last receiver in the subnet). Since in our scheme Tx ι + β − 1 is deactivated, Rx ι + β − 1

observes

Y n
ι+β−1 = αι+β−1X n

ι+β−2 + Z n

ι+β−1
ι+β−2(Mι+β−2) + Z n

ι+β−1,

= Ξn

where the second equality follows by (109).

Rx ι + β − 1 decodes source message Mι+β−2. It looks through codebook CP2P,ι+β−2 for a unique index m∗ such that
ι+β−1 are jointly typical. If successful it sets ˆMι+β−2 = m∗, otherwise it sets ˆMι+β−2 = 1. By standard
ι+β−2(m∗) and Y n
Ξn
arguments [33], if
(111)

log(1 + α2

Rι+β−2 <

1
2

ι+β−1P ),

then P[ ˆMι+β−2 (cid:54)= Mι+β−2] → 0 as n → ∞.
Rx ι + β − 1 sends the conferencing message

We next consider Rx ι + β − 2. (This is the receiver immediately left to the previously considered receiver, which obtained

(ι+β−1)→(ι+β−2) = ˆMι+β−2
V (1)
to Rx ι + β − 2. (This is the only conferencing message Rx ι + β − 1 sends.)
the conferencing message (112).) It observes channel outputs
ι+β−2 + αι+β−2X n
ι+β−1Ξn

Y n
ι+β−2 = X n
= α−1

ι+β−3 + Z n
+ Ξn

ι+β−2(Mι+β−2)
interference “known” at receiver

ι+β−2
ι+β−3(Mι+β−3)

+ Z n

ι+β−2
noise

where the second equality follows again by (109).

(cid:125)
Rx ι + β − 2 has a guess of Mι+β−2, see (112), and thus an estimate about α−1

(cid:124) (cid:123)(cid:122) (cid:125)
ι+β−2(Mι+β−2). It will cancel this
“interference” before decoding source message Mι+β−3. Speciﬁcally, Rx ι + β − 2 ﬁrst forms

ι+β−1Ξn

(cid:123)(cid:122)

(cid:123)(cid:122)

desired signal

(cid:124)

(cid:124)

(cid:125)

(110)

(112)

(113)

(115)

(116)

ˆY n
ι+β−2 = Y n

ι+β−2 − α−1

ι+β−1Ξn

ι+β−2( ˆMι+β−2),

and then looks through codebook CP2P,ι+β−2 for a unique index m∗ such that Ξn
successful it sets ˆMι+β−3 = m∗, otherwise it sets ˆMι+β−3 = 1.

ι+β−3(m∗) and ˆY n

Notice that when ˆMι+β−2 = Mι+β−2, then
ˆY n
ι+β−2 = Ξn

ι+β−3(Mι+β−3) + Z n

ι+β−2,

and Rx ι + β − 2 can declare source message Mι+β−3 based on an interference-free signal.
By standard arguments [33], P[ ˆMι+β−3 (cid:54)= Mι+β−3| ˆMι+β−2 = Mι+β−2] → 0 as n → ∞, whenever

Rι+β−3 <

log(1 + α2

ι+β−2P ).

1
2

(114)
ι+β−2 are jointly typical. If

Rx ι + β − 2 sends the Rx-conferencing message
(ι+β−2)→(ι+β−3) = ˆMι+β−3
V (2)

10Whenever we write Mk or Rk for k = ι + β − κRx − 1 in this subsection we actually mean M Rx

ι+β−κRx−1 and RRx

ι+β−κRx−1. We do not write the

latter for ease of exposition.

to its left neighbour. (This is its only conferencing message.)

Finally, Rx ι + β − 2 declares the guess ˆMι+β−2 that it had obtained from its right neighbour (112).
The same process is repeated for receivers ι + β − 3, ι + β − 4, . . . , i + β − κRx − 1 in decreasing order.
The next lemma follows by iteratively applying the arguments we used to derive (111) and (116).

28

Lemma 3: Source messages M Rx

as n → ∞, whenever

ι+β−κRx−1, Mι+β−κRx , . . . , Mι+β−2 are successfully decoded with probability tending to 1
log(cid:0)1 + α2
1
2

∀k ∈ {ι + β − κRx, . . . , ι + β − 2},

k+1P(cid:1) ,

Rk <

RRx
ι+β−κRx−1 <

1
2

log(cid:0)1 + α2

ι+β−κRx P(cid:1) ,

RRx > max(cid:110)RRx

ι+β−κRx−1, Rι+β−κRx , . . . , Rι+β−2(cid:111).

D. Transmission of source messages Mι+β−κRx−κTx , . . . , Mι+β−κRx−κTx−2, M Tx
in the previous subsection, Tx k already encoded its source message M Rx
k
iid Gaussian codebook.

Fix k = ι + β − κRx − 1, and consider the special Tx/Rx pair k. (In Figure 6 this is the blue transmitter.) As we described
k that was drawn from an

ι+β−κRx−1 (messages in group 3)
into its input signal X n

Tx k now encodes its second source message M Tx

k which it transmits over the path

Tx k −→ Tx k − 1 −→ Rx k.

For convenience we will denote M Tx
2 log(1 + P ) quantisation of Φn
1
quantised sequence ˆΦn

k and send it over the network, see (121) ahead.
We ﬁrst describe the quantisation, and then the construction of Φn

ι+β−κRx−1 simply by Mk. Rx k will construct a transmit signal Φn

k (Mk) and send a rate-
k over the conferencing link to its left-neighbour Tx k − 1. This latter will then reconstruct the
k (Mk) won’t be iid Gaussian, we will

k (Mk). Since Φn

draw our quantisation codebook uniform over a sphere. Construct a random quantisation codebook

u=1

quantisation vector ˆΦn

k (u∗) whos angle with Φn

k (u)(cid:111)(cid:98)2nRTx(cid:99)

by choosing all vectors iid uniformly over an n-dimensional sphere of radius (cid:112)nα2
k(cid:1) −(cid:114) P
P + 1(cid:12)(cid:12)(cid:12)(cid:12),

∠(cid:0) ˆΦn
k→k−1 = u∗.
U (1)
By standard arguments (see e.g., proof of (134) in [35]), whenever

CRD,k :=(cid:110) ˆΦn
k is closest to(cid:113) P
u∗ = argmin(cid:12)(cid:12)(cid:12)(cid:12)

k (u), Φn

P +1:

where the argmin is over all u ∈(cid:8)1, . . . , 2nRTx(cid:9). Tx k sends index u∗ to its left-neighbour Tx k in Tx-conferencing round 1:

(118)

kP . Tx k looks through CRD,k for the

and

then

After obtaining conferencing message U (1)

over the interference network.

Rx k observes the channel outputs

RTx >

1
2

log(1 + P ),

∠( ˆΦn

k (u∗), Φn

k ) −(cid:114) P

(cid:12)(cid:12)(cid:12)(cid:12)

P + 1(cid:12)(cid:12)(cid:12)(cid:12) → 0
k→k−1(cid:1)
ˆΦk(cid:0)U (1)

in probability.

k→k−1, Tx k − 1 reconstructs ˆΦk(cid:0)U (1)

k→k−1(cid:1) and transmits

k−1 = α−1
X n

k

k = X n
Y n
= X n

k + αkX n
k + ˆΦn

k + Z n
k

k−1 + Z n

k

(117)

(119)

(120)

(121)

(122)

which we choose to write

Y n
k =

Transmitter k encodes Mk using a generalized dirty-paper code over spheres [4], [6] of power α2
k

channel in (126), i.e., for a channel with additive noise

P

P + 1

Φn

k (Mk)

+

desired signal

(cid:124)

(cid:123)(cid:122)

state sequence Sn
k

X n

k(cid:124)(cid:123)(cid:122)(cid:125)

(cid:125)
k :=(cid:16) ˆΦn

˜Z n

P

P + 1

k −

P

P + 1

Φn

noise sequence ˜Zn
k

k

k(cid:17) + Z n
(cid:125)

(cid:123)(cid:122)

k −

+(cid:16) ˆΦn
(cid:124)
k(cid:17) + Z n

Φn

k ,

and iid additive Gaussian state

k := X n
Sn
k .
DPC,k(Mk) denote the resulting dirty-paper sequence. Tx k sets

Let Ψn

Φk(Mk) :=

P + 1

P

Ψn

k (Mk).

Receiver k observes

29

(123)

.

P 2
P +1 for the state-dependent

(124)

(125)

(126)

(127)

and applies dirty-paper decoding over spheres to decode Message Mk. From a slight extension of Corollary IV.2 [4]11we obtain
that, if (119) holds and if

Y n
k = Ψn

DPC,k(Mk)

+

(cid:124)

(cid:123)(cid:122)

(cid:125)

dirty-paper signal

state sequence Sn
k

+(cid:16) ˆΦn
(cid:124)

P

k −

P + 1

Φn

noise sequence ˜Zn
k

,

k

k(cid:17) + Z n
(cid:125)

(cid:123)(cid:122)

X n

k(cid:124)(cid:123)(cid:122)(cid:125)
log(cid:32)1 +

RTx

k <

1
2

P 2
P +1
P

P +1(cid:33) ,

α2
k

1 + α2
k

then P[ ˆMk (cid:54)= Mk] → 0 as n → ∞.
The same process is repeated for k = ι + β − κRx − 2, . . . , ι + β − κRx − κTx in decreasing order.
The next lemma follows by iteratively applying the arguments we used to derive (127), see also (119).

Lemma 4: Source messages Mι+β−κRx−κTx . . . , Mι+β−κRx−2, M Tx

ι+β−κRx−1 are successfully decoded with probability tending

to 1 as n → ∞, whenever
1
2

Rk <

log(cid:32)1 +

P 2
P +1
P

P +1(cid:33) ,

α2
k

1 + α2
k

k ∈ {ι + β − κRx − κTx, . . . , ι + β − κRx − 2}

and

and

RTx
ι+β−κRx−1 <

log(cid:32)1 +

1
2

P 2
P +1 α2

1 + P

P +1 α2

ι+β−κRx−1

ι+β−κRx−1(cid:33) .

RTx >

1
2

log(1 + P ).

11The extension is required because the state sequence Sn
n(cid:107)Sn
however have the following limits (in probability): 1
n(cid:107) ˜Zn
k > −→ 0, and 1
1
can be shown to extend readily, e.g., using the arguments in the proof of Remark III-5 in [4].

k is not uniform over a sphere and because the noise is not independent of the input. We
k (cid:107)2 −→ P . Moreover when (119) holds, then by (120) also
k(P + 1) and 1
DPC,k > −→ 0 (all in probability). Under these assumptions, Corrollary IV.2 in [4]

k (cid:107)2 −→ 1 + α2

k (Mk)(cid:107) −→ α2
k , Ψn

n < ˜Zn

n < ˜Zn

n(cid:107)Φn

P +1 , 1

k , Sn

P

k

REFERENCES

30

Jun., 2009.

Jul., 2006.

May 2011.

May 2011.

Kong, June 2015.

vol 19, no. 5, May 2015.

10, Oct. 2007.

pp. 4976–4985.

Sep. 2–7, 2007.

pp. 441–445, Nov. 1983.

1973.

Toronto, Canada, July 6–11, 2008.

vol. 58, no. 9, pp. 5640–5668, Sep., 2012.

no. 10, Oct., 2007.

[1] F. M. J. Willems, “The discrete memoryless multiple access channel with partially cooperating encoders,” IEEE Trans. Inform. Theory, vol. 29, no. 3,

[2] D. Slepian and J.K. Wolf, “A coding theorem for multiple access channels with correlated sources,” Bell System Tech. J. vol. 52, pp. 1037–1076, Sep.,

[3] S. Bross, A. Lapidoth, and M. A. Wigger, “The Gaussian MAC with conferencing encoders,” in proc. Intl. Symp. Inform. Theory (ISIT), pp. 2702–2706,

[4] S. I. Bross, A. Lapidoth and M. Wigger, “Dirty-paper coding for the Gaussian multiaccess channel with conferencing,” IEEE Trans. Inform. Theory,

[5] I. Maric, R. D. Yates, and G. Kramer, “Capacity of interference channels with partial transmitter cooperation,” IEEE Trans. Inform. Theory, vol. 53,

[6] Aaron S. Cohen and Amos Lapidoth. The Gaussian watermarking game. IEEE Trans. Inform. Theory, 48(6):1639–1667, June 2002.
[7] Max H. M. Costa. Writing on dirty paper. IEEE Trans. Inform. Theory, 29(3):439–441, May 1983.
[8] O. Simeone, O. Somekh, G. Kramer, H. V. Poor, and S Shamai (Shitz), “Three-User Gaussian Multiple Access Channel with Partially Cooperating

Encoders,” in proc. Asilomar Conference Signals, Systems and Computers, Oct. 2008.

[9] M. A. Wigger and G. Kramer, “Three-User MIMO MACs with Cooperation,” in Proc. Inform. Theory Workshop (ITW), pp. 221–225, Volos, Greece,

[10] R. Dabora and S. Servetto, “A multi-step conference for cooperative broadcast,” in Proc. Intl. Symp. Inform. Theory (ISIT), pp. 2190–2194, Seattle, WA,

[11] R. Dabora and S. Servetto, “Broadcast channels with cooperating decoders,” IEEE Trans. Inform. Theory, vol. 52, no. 12, pp. 5438–5454, Dec. 2006.
[12] I.-H. Wang and D. N. C. Tse, “Interference mitigation through limited transmitter cooperation,” IEEE Trans. on Inf. Theory, vol. 57, no. 5, pp. 2941–2965,

[13] I.-H. Wang and D. N. C. Tse, ”Interference mitigation through limited receiver cooperation,” IEEE Trans. on Inf. Theory, vol. 57, no. 5, pp. 2913–2940,

[14] Y. Steinberg, “Instances of the relay-broadcast channel and cooperation strategies,” in Proc. Intl. Symp. Inform. Theory (ISIT), pp. 2653–2657, Hong

[15] H. Mao, W. Feng, and N. Ge, “Receiver cooperation for MIMO broadcast channels with ﬁnite-rate feedback,” IEEE Communications Letters, pp. 887–890,

[16] S. Salehkalaibar and M. R. Aref, “On the capacity region of a class of Z channels with cooperation,” in Proc. 2010 Intl. Symp. Inform. Theory and its

[17] Z. Goldfeld, H. H. Permuter, G. Kramer, “Duality of a source coding problem and the semi-deterministic broadcast channel with rate-limited cooperation.”

[18] C. T. K. Ng, A. J. G. I. Maric, and R. D. Y. S. Shamai, “Iterative and one-shot conferencing in relay channels” in Proc. of Inform. Theory Workshop

Appl. (ISITA), Taichung, China, 17–20 Oct. 2010, pp. 464–468.

Online: http://arxiv.org/abs/1405.7812

2006, Punta del Este, Uruguay, 13–17 March 2006, pp. 193–197.

[19] I. Maric, R. D. Yates, and G. Kramer, “Capacity of interference channels with partial transmitter cooperation,” IEEE Trans. Inform. Theory, vol. 53, no.

[20] N. Levy and S. Shamai (Shitz), “Clustered local decoding for Wyner- type cellular models,” IEEE Trans. Inform. Theory, vol. 55, no. 11, Nov. 2009,

[21] A. Lapidoth, S. Shamai (Shitz), and M. Wigger, “On cognitive interference networks,” in Proc. of Inform. Theory Workshop (ITW), Lake Tahoe, USA,

[22] V. Ntranos, M. A. Maddah-Ali, and G. Caire, “Cellular interference alignment,” IEEE Trans. Inform. Theory, vol. 61, no. 3, March 2015, pp. 1194–1217.
[23] V. Ntranos, M. A. Maddah-Ali, and G. Caire, “Omni-directional antennas and asymmetric conﬁgurations,” IEEE Trans. Inform. Theory, vol. 61, no. 12,

March 2015, pp. 6663 - 6679.

[24] V. Ntranos, M. A. Maddah-Ali, and G. Caire, “On uplink-downlink duality for cellular IA,”July 2014. Online: http://arxiv.org/abs/1407.3538.
[25] B. He, N. Yang, X. Zhou, and J. Yuan, “Base station cooperation for conﬁdential broadcasting in multi-cell networks,” IEEE Trans. on Wireless

[26] M. Bande, A. El Gamal, and V. V. Veeravalli, “Flexible backhaul design with cooperative transmission in cellular interference networks,” in Proc. 2015

Communications, vol. 14, no. 10, Oct. 2015, pp. 5287–5299.

Intl. Symp. Inform. Theory, Hong Kong, China, June 14–19, 2015.

[27] S. A. Jafar and V. R. Cadambe, “Interference alignment and degrees of freedom of the k -user interference channel,” IEEE Trans. Inform. Theory, vol. 54,

pp. 3425–3441, Aug. 2008.

Nov., 1994.

[28] A. D. Wyner, “Shannon-theoretic approach to a Gaussian cellular multiple-access channel,” IEEE Trans. Inform. Theory, vol. 40, pp. 1713–1727,

[29] S. V. Hanly and P. A. Whiting, “Information-theoretic capacity of multi-receiver networks,” Telecommunication Systems, vol. 1, pp. 1–42, 1993.
[30] S. Shamai (Shitz) and M. Wigger, “Rate-limited transmitter-cooperation in Wyner’s asymmetric interference network ,” in proc. Intl. Symp. Inform. Theory

(ISIT), pp. 425–429, St. Petersburg, Russia, Jul. 31 – Aug. 5, 2011.

[31] A. Lapidoth, N. Levy, S. Shamai (Shitz), and M. Wigger, “Cognitive Wyner networks with clustered decoding,” IEEE Trans. Inform. Theory, vol. 60,

no. 10, pp. 6342-6367 Oct. 2014.

[32] O. Simeone, N. Levy, A. Sanderovich, O. Somekh, B. M. Zaidel, H. V. Poor and S. Shamai (Shitz), “Cooperative Wireless Cellular Systems: An
Information-Theoretic View,” Foundations and Trends in Communications and Information Theory (FnT), Vol. 8, No. 1-2, 2011, pp. 1–177, Now
Publishers, 2012.

[33] T. Cover and J. Thomas, “Elements of information theory,” 2nd edition, Wiley-Interscience.
[34] A. El Gamal and Y.-H. Kim, “Network information theory,” Cambridge.
[35] A. Lapidoth and S. Tinguely, “Sending a bivariate Gaussian over a Gaussian MAC,” IEEE Transactions on Information Theory, vol. 56, no. 6, pp.

2714–2752, Jun. 2010.

