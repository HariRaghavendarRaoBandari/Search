Efﬁcient Globally Optimal Point Cloud Alignment using

Bayesian Nonparametric Mixtures

6
1
0
2

 
r
a

 

M
5
1

 
 
]

V
C
.
s
c
[
 
 

1
v
8
6
8
4
0

.

Julian Straub(cid:63), Trevor Campbell(cid:63), Jonathan P. How, John W. Fisher III

Massachusetts Institute of Technology

Abstract. Point cloud alignment is a common problem in computer vision and
robotics, with applications ranging from object recognition to reconstruction. We
propose a novel approach to the alignment problem that utilizes Bayesian non-
parametrics to describe the point cloud and surface normal densities, and the
branch and bound (BB) paradigm to recover the optimal relative transformation.
BB relies on a novel, reﬁnable, approximately-uniform tessellation of the rota-
tion space using 4D tetrahedra which leads to more efﬁcient BB operation in
comparison to the common axis-angle tessellation. For this novel tessellation, we
provide upper and lower objective function bounds, and prove convergence and
optimality of the BB approach under mild assumptions. Finally, we empirically
demonstrate the efﬁciency of the proposed approach as well as its robustness to
suboptimal real-world conditions such as missing data and partial overlap.

3
0
6
1
:
v
i
X
r
a

1 Introduction

Point cloud alignment is a fundamental problem
for many applications in robotics [35,23] and com-
puter vision [45,40,55]. Finding the optimal rel-
ative transformation is generally hard: point-to-
point correspondences typically do not exist, the
point clouds might only have partial overlap, and
the underlying objects themselves are often non-
convex, leading to a potentially large number of
alignment local minima. As such, popular local op-
timization techniques sufﬁce only in circumstances
with small true relative transformations and large
overlap, such as in dense 3D incremental map-
ping [23,40,55]. Solving the alignment problem for
large unknown relative transformations and small
point cloud overlap calls for a global approach. Ex-
ample applications are the loop-closure problem in
SLAM [7] and the model-based detection of ob-
jects in 3D scenes [29].

Fig. 1: A 3D projection of the
600-cell [53]—a 4D object tessel-
lating the rotation space for the
proposed branch and bound ap-
proach to point cloud alignment.

Motivated by the observation that surface normal distributions are translation in-
variant [25] and straightforward to compute [38,46], we develop a two-stage branch

(cid:63) The ﬁrst two authors contributed equally to this work.

2

x

and bound (BB) [31,32] optimization algorithm for point cloud alignment. We model
the surface normal distribution of each point cloud as a Dirichlet process (DP) [16,48]
von-Mises-Fisher (vMF) [18] mixture [47] (DP-vMF-MM). To ﬁnd the optimal ro-
tation, we minimize the L2 distance between the distributions over the space of 3D
rotations. We develop a novel reﬁnable tessellation consisting of 4D tetrahedra (see
Fig. 1) which outperforms the common axis-angle tessellation [33,22] during BB op-
timization. Given the optimal rotation and modeling the two point distributions as DP
Gaussian mixtures [2,9] (DP-GMM), we obtain the optimal translation similarly via
BB over the space of 3D translations. We prove that, under mild assumptions, this de-
coupled optimization is guaranteed to recover the exact jointly optimal translation and
rotation1. The use of mixture models circumvents discretization artifacts, while still
permitting efﬁcient optimization. In addition to algorithmic developments, we provide
corresponding theoretical bounds on the convergence of both BB stages, linking the
quality of the derived rotation and translation estimates to the depth of the search tree
and thus the computation time of the algorithm. Experiments on real data corroborate
the theoretical results, and demonstrate the accuracy and efﬁciency of BB as well as
its robustness to suboptimal conditions, such as partial overlap, high noise, and large
relative transformations.

2 Related Work

Local Methods: There exists a variety of approaches for solving the local point cloud
alignment problem [8,45]. Iterative closest point (ICP) [5], the most common of these,
alternates between establishing matches between the points in both clouds and updating
the relative transformation estimate under those associations. There are many variants
of ICP [43]. They differ in their choice of cost function, how correspondences are estab-
lished, and how the objective is optimized at each iteration. An alternative to ICP devel-
oped by Magnusson et al. [35] relies on the normal distribution transform (NDT) [6],
which represents the density of the scans as a structured GMM that lends itself to nu-
meric optimization. This approach has been shown to be more robust than ICP in cer-
tain cases [36]. Approaches that use correlation of kernel density estimates (KDE) for
alignment [50] or GMMs [28] use a similar representation as the proposed approach.
KDE-based methods scale poorly with the number of points. In contrast, we capture
distributions using mixture models inferred by nonparametric clustering algorithms
(DP-means [30] and DP-vMF-means [47]). This allows adaptive compression of the
data, enabling the processing of large noisy point clouds (see Sec. 6 for experiments
with more than 300k points). Straub et al. propose two local rotational alignment al-
gorithms [47,46] that, similarly to the proposed approach, utilize surface normal dis-
tributions modeled as vMF mixtures. Common to all local methods is the assumption
of an initialization close to the true transformation and signiﬁcant overlap between the
two point clouds. If either of these assumptions are violated, local methods become
unreliable as they tend to get stuck in suboptimal local minima [43,45,36]. Randomly
sampling initializations can mitigate these issues to some degree, but no convergence
or optimality guarantees exist.

1 Extended proofs of all theoretical results in this paper may be found in the supplement.

x

3

Global Methods: Global point cloud alignment algorithms ﬁnd the optimal alignment
without prior assumptions on the relative transformation, point correspondences, or sig-
niﬁcant overlap. For those reasons global algorithms, such as the proposed one, are
often used to initialize local methods. 3D-surface-feature-based algorithms [44,19,29]
involve extracting local features, obtaining matches between features in the two point
clouds, and ﬁnally estimating the relative pose using RANSAC [17] or other robust es-
timators [26]. Aiger et al. [1] detail an improved RANSAC-based alignment procedure
which relies on matching congruent sets of four coplanar points between scans to obtain
transformation hypotheses. Though popular, feature-based algorithms are vulnerable to
large fractions of incorrect feature matches, as well as repetitive scene elements and
textures. A second class of approaches, including the one proposed herein, rely purely
on statistical properties of the two point clouds to solve the alignment problem. The pro-
posed algorithm falls into this class. Makadia et al. [37] separate rotational and transla-
tional alignment. The optimum rotation is obtained as the maximum of the convolution
of the peaks of the extended Gaussian images (EGI) [25] of the two surface normal sets.
This search is performed efﬁciently using the spherical Fourier Transform [15]. After
rotational alignment, the translation is found in a similar vein using the standard fast
Fourier Transform (FFT). The use of histogram-based density estimates for the surface
normal as well as the point distributions introduces discretization artifacts. Addition-
ally, the sole use of the peaks of the EGI makes the method vulnerable to noise in the
data. For the alignment of 2D scans, Weiss et al. [54] and Bosse et al. [7] follow a simi-
lar convolution-based approach. Early work by Li, Hartley and Kahl [33,22] on BB for
point cloud alignment introduced BB over rotations using the axis-angle (AA) repre-
sentation. A drawback of this approach is that a uniform AA tessellation does not lead
to a uniform tessellation in rotation space. This, as we show in Sec. 6, leads to less ef-
ﬁcient BB search. Sec. 4.1 elaborates further on the differences to our approach. Parra
et al. [42] propose improved bounds for rotational alignment by reasoning carefully
about the geometry of the AA tessellation. GoICP [57] is a BB algorithm that nests BB
over translations inside BB over rotations and utilizes ICP internally to improve the BB
bounds.

3 The Point Cloud Alignment Problem

Our approach to point cloud alignment relies on the fact that surface normal distribu-
tions are invariant to translation [25] and easily computed [38,46], allowing us to isolate
the effects of rotation. Thus we decompose the task of ﬁnding the relative transforma-
tion into ﬁrst ﬁnding the optimal rotation using only the surface normal distribution,
and then obtaining the optimal translation given the optimal rotation.
Let a noisy sampling of a surface S be described by the joint point and surface
normal density p(x, n), where x ∈ R3 and n ∈ S2. Suppose further that there is
no rotational symmetry in either p(x) or p(n). A sensor observes two independent
samples from this model: one from p1(x, n) = p(x, n), and one from p2(x, n) =
p(R(cid:63)T (x − t(cid:63)), R(cid:63)T n) differing in an unknown rotation R(cid:63) ∈ SO(3) and transla-
tion t(cid:63) ∈ R3. Given these samples, we model the marginal point densities ˆp1(x), ˆp2(x)
using the posterior of a Dirichlet process Gaussian mixture (DP-GMM) [2], and model

4

x

the marginal surface normal densities ˆp1(n), ˆp2(n) using the posterior of a Dirichlet
process von Mises-Fisher mixture (DP-vMF-MM) [4,47]. Note that the formulation us-
ing DP mixture models admits arbitrarily accurate estimates of a large class of noisy
surface densities (Theorem 2.2 in [13]). Finally, we assume that p(x) and p(n) satisfy
the conditions required for DP mixture posterior inference to be strongly consistent to
avoid pathological cases [20,49,56]. We cast the problem of ﬁnding the relative trans-
formation as the problem of ﬁrst aligning the estimated surface normal densities, and
subsequently aligning the point densities:

(cid:90)

(cid:90)

R3

ˆp1(x)ˆp2( ˆRx + t)dx.

(1)

ˆR = arg max
R∈SO(3)

ˆp1(n)ˆp2(Rn)dn

ˆt = arg max

t∈R3

S2

While many cost functions (e.g. KL-divergence or L1 distance) could be used, the above
minimizes the L2 metric via maximization of the convolution, which has been shown to
be robust in practice [28]. This is a common approach for Gaussian MMs [50,28] but to
our knowledge has not been explored for vMF-MMs, nor for Bayesian nonparametric
DP mixtures. In fact, the use of DP mixtures is critical, as it leads to the guaranteed
consistency of the recovered transformation ˆR, ˆt, providing strong justiﬁcation for the
proposed decoupled approach:
Theorem 1. The point cloud alignment procedure in Eq. (1) is asymptotically consis-
tent as the number of observed samples grows large, i.e.

p→ R(cid:63)

ˆR

p→ t(cid:63)

ˆt

(cid:107)p1(x) − p2( ˆRx + ˆt)(cid:107)2

p→ 0,

(2)

with p→ denoting convergence in probability.
The proof of Theorem 1 relies primarily on the Argmax Continuous Mapping Theo-
rem ([52], Theorem 3.2.2), and is shown in detail in the supplement. Note that while this
result pertains to asymptotic guarantees, current depth sensors (e.g. LiDAR or RGB-D)
create sufﬁciently large/dense sample sets that this is not a severe limitation. Further-
more, while exact posterior DP-MM densities cannot be computed tractably, excellent
estimation algorithms are available [30,47]. To mitigate the real-world nonuniformity
of sampling over a surface from actual LiDAR or depth sensors, we weigh the observed
samples according to the surface area they represent (discussed further in Section 6).
Finally, while the rotational asymmetry of the marginals p(x) and p(n) is required for
the above result, it is not difﬁcult to extend it to the case where symmetry is allowed.

Both optimization problems in Eq. (1) are nonconcave maximizations. Considering
the geometry of the problem, we expect many local maxima, rendering typical gradient-
based methods ineffective. This motivates the use of a global approach, which we de-
velop in the form of a two-step BB procedure [31,32] procedure. BB ﬁrst searches over
S3, the manifold of unit quaternion rotations, for the optimal rotation q(cid:63), and then over
R3 for the optimal translation t(cid:63). Note that both spaces are 3-dimensional and thus
suitable for BB search, whose complexity scales exponentially with the search space
dimension. Furthermore, note that BB may theoretically return multiple optimal rota-
tions, depending on the scene. We estimate the optimal translation under each of those
rotations, and return the joint optimal transformation with the highest translational cost

x

5

lower bound. We make use of the equivalence between the rotation matrix space SO(3)
and the half sphere in 4D, S3 [24]. In the following we use a unit quaternion q ∈ S3 to
represent a rotation R, and q ◦ n to denote the rotation of the surface normal n by the
unit quaternion q.

Algorithmically, BB requires three major components: (1) a TESSELLATION method
for covering the optimization domain with subsets (see Sec. 4.1 and 5.1); (2) a BRANCH
procedure for subdividing any subset into smaller subsets (see Sec. 4.1 and 5.1); and
(3) UPPERBOUND/LOWERBOUND methods for ﬁnding upper and lower bounds of the
maximum objective on each subset (see Sec. 4.2 and 5.2). BB proceeds by bounding
the optimal objective in each subset, pruning those which cannot contain the maximum,
subdividing the best subset to reﬁne the bounds, and iterating. Note that in this work we
select the node with the highest upper bound for subdivision. More nuanced strategies
have been developed and could also be utilized [27,32].

In the following, we show how to optimize over the space of rotations to obtain
q(cid:63), and then outline a similar approach to obtaining t(cid:63) given q(cid:63). These algorithmic
developments are supported by a set of theoretical results that together form the basis
of the main optimality and convergence guarantees in Theorems 3 and 5.

4 vMF Mixture Rotational Alignment

We model the distributions of surface normals n as von-Mises-Fisher [18] mixture mod-
els (vMF-MM) with means {µik}Ki
k=1. For i ∈ {1, 2} and
cluster weights {πik ≥ 0}Ki

k=1 and concentrations {τik}Ki

k=1 the distributions are:

k=1 πikCikeτikµT

ikn , Cik (cid:44)

k=1 πik = 1 .

(3)

4π sinh(τik) , (cid:80)Ki

τik

ˆpi(n) =(cid:80)Ki

(cid:80)

max
q∈S3

k,k(cid:48)

Dkk(cid:48)
2π

(cid:82)

Note that there are a variety of techniques for inferring vMF-MMs [3,14,47]. We use [47]
because this nonparametric method infers Ki automatically. Given this model, the ro-
tation alignment problem from Eq. (1) becomes:

S2 e(τ1kµ1k+τ2k(cid:48) q◦µ2k(cid:48) )T n dn , Dkk(cid:48) (cid:44) (2π)π1kπ2k(cid:48)C1kC2k(cid:48) .

(4)

We obtain the following objective function by noting that the integral is the normaliza-
tion constant of a vMF density with concentration zkk(cid:48)(q) (cid:44) (cid:107)τ1kµ1k + τ2k(cid:48)q ◦ µ2k(cid:48)(cid:107):
(5)

k,k(cid:48)Dkk(cid:48)f (zkk(cid:48)(q)) where f (z) (cid:44) 2 sinh(z)z−1 =(cid:0)ez − e−z(cid:1) z−1 .
(cid:80)

max
q∈S3
In the following, we show how to tessellate S3 and demonstrate how that leads to a
cover that can be reﬁned. Next, we derive upper and lower bounds for the proposed vMF
mixture-based objective function. Finally, using these bounds, we provide convergence
guarantees for the rotational alignment optimization algorithm.

4.1 Cover and Reﬁnement of the Rotation Space S3
We propose a novel tessellation scheme for the space of rotations and introduce key
properties that allow convergence proofs for BB over the space of rotations. We follow a

6

x

similar approach to the geodesic grid tessellation of a sphere in 3D (i.e. S2): as depicted
in Fig. 2a, starting from an icosahedron, each of the 20 triangular faces is subdivided
into four triangles of equal size. Then the newly created triangle corners are normalized
to unit length, projecting them onto the unit sphere.

Icosahedron

Subdiv. 1

Subdiv. 2

AA Space

Top View

Side View

s
e
l
g
n
a
i
r
T

n
o
i
t
a
l
l
e
s
s
e
T

Q

(2a) Tessellation of S2 via iterated triangle
subdivision. The tessellation of S3 follows the
same principles but instead of triangles 4D
tetrahedra are used.

(2b) Tessellation of S2 implied by uniform tes-
sellation in the axis-angle space. Note that or-
ange tiles contain surface area on the lower
half-sphere. The axis-angle tessellation of S3
follows the same principle and incurs similar
distortion. That the AA tessellation covers the
lower half-sphere as well means that that parts
of the rotation space are covered twice.

In four dimensions we instead start with the analogue of the icosahedron, the 600-
cell [11] (shown in Fig. 1), an object composed of 600 4D tetrahedra. The angle between
any two connected tetrahedra vertices is γ0 (cid:44) 72◦. After scaling the 120 vertices to unit
length, each vertex can be understood as representing a unit quaternion describing a
3D rotation. Furthermore, the collection of 600 4D tetrahedra, which are “ﬂat” in 4D
analogous to triangles in 3D, constructs a 4D object which approximates the 4D sphere,
S3. Note that the optimization only considers a set of 300 projected tetrahedra in the
initial tessellation, which cover the upper-half of S3, since the quaternions q and −q
describe the same rotation.

One major advantage of the proposed S3 tessellation is that it is exactly uniform
over S3 at the 0th level and approximately uniform for deeper subdivision levels (see
Fig. 2a for S2). This generally tightens bounds employed by BB, leading to more ef-
ﬁcient optimization. Another advantage is that this tessellation is an exact covering of
the upper-half of S3. No overlap occurs, meaning that BB wastes no time searching
the same area twice. The widely employed AA-tessellation scheme [33,22,42,57], in
contrast, uniformly tessellates a cube enclosing the axis-angle space, a 3D sphere with
radius π, and maps that tessellation onto the rotation space. There are two major is-
sues with the AA approach. First, the cube enclosing the 3D spherical AA space covers
parts of rotation space twice [33,22] (see Fig. 2b). Second, the uniform tessellation in
AA space does not lead to uniform tessellation in rotation space. The reason for this is
that the Euclidean metric in AA space is a poor approximation of the distance on the
rotation manifold [33]. In Fig. 2b, we display the equivalent of the AA tessellation for
S2, showing the decidedly non-uniform tessellation of S2. We empirically ﬁnd that the
proposed tessellation leads to more efﬁcient exploration than the AA tessellation during
optimization (see Fig. 2g and 3c).

x

7

We now analyze the proposed tessellation. Suppose we select a particular tetrahe-
dron from our approximation of S3, and denote its vertices qj ∈ S3 , j ∈ {1, . . . , 4}.
Then, stacking them horizontally into a matrix Q ∈ R4×4, the projection Q of the
tetrahedron onto S3 is:

Q =(cid:8)q ∈ R4 : (cid:107)q(cid:107) = 1, q = Qα, α ∈ R4

(cid:9) .

(6)
The set Q is the set of unit quaternions found by extending the tetrahedron to the unit
sphere using rays from the origin. For S2, this is displayed in the second row of Fig. 2a.
Lemma 1 guarantees that the tessellation covers S3:
Lemma 1. The set of all Q generated by the tetrahedra in the 600-cell is a cover of S3.

+

(2c) The three subdivision patterns of a tetra-
hedron displayed in 3D. The internal orange
edge is chosen to minimize distortion.

(2d) The actual γ and Γ angle between tetrahe-
dron vertices for increasing reﬁnement level,
compared to the derived bounds of Lemma 2.
Next, we require a method of subdividing any Q in the cover. Similar to the triangle
subdivision method for reﬁning the tessellation of S2, each 4D tetrahedron can be sub-
divided into eight smaller tetrahedra [34] as depicted in Fig. 2c. We have the freedom
to choose one of three internal edges for subdivision. This allows us to select the edge
that minimizes distortion of the subdivided tetrahedra. The resulting six new vertices
are scaled to unit length, thus forming the new subdivided cover elements Q.
To establish convergence properties of the BB algorithm it is important to know how
quickly the cover elements Q shrink with subdivision level. For the present tessellation
of S3, this property cannot be stated exactly in closed-form, due to the repeated dis-
tortion from the unit-norm projection of vertices. Instead, we employ Lemma 2, which
bounds the shrinkage of cover elements Q with subdivision level. Figure 2d demon-
strates the tightness of these bounds.
Lemma 2. Let γN (ΓN ) be the min (max) dot product between vertices of a cover set
Q at reﬁnement level N. Then

≤ γN ≤ ΓN ≤(cid:113) 1+ΓN−1

2

2γN−1
1+γN−1

.

(7)

4.2

vMF Mixture Model Bounds

BB requires both upper and lower bounds on the maximum of the objective function
within each projected tetrahedron Q, i.e. we need L and U such that

(cid:80)
k,k(cid:48) Dkk(cid:48)f (zkk(cid:48)(q)) ≤ U .

L ≤ max
q∈Q

(8)

8

x

The lower bound L is trivial to obtain: one can simply evaluate the objective at any
point in Q. We derive two upper bounds U. The ﬁrst bound considers the vMF-MM
components independently, while the second considers them jointly. We employ the
following deﬁnitions whose computation is discussed in Section 4.3:

Ukk(cid:48) (cid:44) max

q∈Q zkk(cid:48)(q)

and Lkk(cid:48) (cid:44) min

q∈Q zkk(cid:48)(q) ,

(9)

Independent Upper Bound U⊥ The ﬁrst upper bound we provide uses the true objective
function, at the cost of decoupling the rotations in each component of the objective sum.
First, since the coefﬁcients Dkk(cid:48) (c.f. Eq. (4)) satisfy Dkk(cid:48) ≥ 0:

k,k(cid:48)Dkk(cid:48) max

q∈Q f (zkk(cid:48)(q)) (cid:44) U⊥ .

(10)

max
q∈Q

(cid:80)
k,k(cid:48)Dkk(cid:48)f (zkk(cid:48)(q)) ≤(cid:80)
U⊥ =(cid:80)

k,k(cid:48)Dkk(cid:48)f (max

q∈Q zkk(cid:48)(q)) =(cid:80)

Noting that f is monotonically increasing, the independent component upper bound is:

k,k(cid:48)Dkk(cid:48)f (Ukk(cid:48)) .

(11)

b2−a2

(cid:16) b2f (a)−a2f (b)
(cid:80)

Convex Upper Bound U∪ The second upper bound we provide maintains coupling of
the rotations in each sum component, but optimizes a relaxed objective:
Lemma 3. For any z ∈ [a, b], a, b ≥ 0,

(cid:17) (cid:44) z2g(a, b) + h(a, b) .

f (z) ≤ z2(cid:16) f (b)−f (a)

(cid:17)

(cid:80)

(12)
Lemma 3, combined with the fact that Dkk(cid:48) ≥ 0, provides a method of bounding the
original optimization with a quadratic optimization over Q:

b2−a2

+

max
q∈Q

k,k(cid:48)Dkk(cid:48)f (zkk(cid:48)(q)) ≤ max
q∈Q

Akk(cid:48) (cid:44) 2Dkk(cid:48)τ1kτ2k(cid:48)gkk(cid:48)Mkk(cid:48) , Bkk(cid:48) (cid:44) Dkk(cid:48)(cid:0)(τ 2

kk(cid:48)qT Akk(cid:48)q + Bkk(cid:48) = max

q∈Q qT Aq + B ,

2k(cid:48))gkk(cid:48) + hkk(cid:48)(cid:1) ,

(13)

(14)
and gkk(cid:48) (cid:44) g(Lkk(cid:48), Ukk(cid:48)), hkk(cid:48) (cid:44) h(Lkk(cid:48), Ukk(cid:48)), and Mkk(cid:48) ∈ R4×4 is obtained by
examining the action of a quaternion rotation on the dot product between µ1k and µ2k(cid:48).
Refer to the supplement for its deﬁnition and derivation. Rewriting q in terms of a conic
combination of the vertices of Q, i.e. q = Qα,

1k + τ 2

q∈Q qT Aq + B = max
max
α∈R4

αT QT AQα + B s.t. αT QT Qα = 1 , α ≥ 0 .

(15)

The exact solution to this optimization is found by examining the Karush-Kuhn-Tucker
(KKT) conditions, yielding

U∪ = B + max

I⊆{1,2,3,4} max
v:v≥0

λI,v ,

(16)

where λI,v is the generalized eigenvalue solution of

(cid:0)QT AQ(cid:1)

(cid:0)QT Q(cid:1)

I v = λI,v

(17)
and subscript I denotes the set of rows and columns selected from the respective vector
or matrix. The condition that all elements of v have the same sign enforces that λI,v
corresponds to a solution q that lies in Q. Note that solving Eq. (15) involves solving

(cid:0)4
(cid:1) = 15 generalized eigenvalue problems of at most four dimensions.

(cid:80)4

I v ,

i=1

i

Theorem 2. U∪ ≤ U⊥, and the inequality is tight.
Theorem 2 implies that the BB algorithm with the convex upper bound is guaranteed
to converge faster than using the independent component bound. However, the inde-
pendent upper bound is still important as it is critical for BB convergence analysis and
easier to implement in practice.

x

9

4.3 Computing Lkk(cid:48) and Ukk(cid:48)
Next, we analytically solve for the min/max vector norm argument zkk(cid:48)(q) that appears
in many of the functions above. Note that with τ 2
1k(q ◦ µ2k(cid:48)) , Lkk(cid:48) =

1k(q ◦ µ2k(cid:48)) .

τ 2
kk(cid:48) + max

τ 2
kk(cid:48) + min

kk(cid:48) = τ 2

1k + τ 2

(cid:114)

(cid:114)

Ukk(cid:48) =

2k(cid:48):

(18)

q∈Q µT

q∈Q µT

To optimize the dot product, we use Lemma 4, which allows us to optimize µT
1kw over
vectors w in the polyhedron Mµ2k(cid:48) on the sphere S2 instead of over rotations q ∈ Q.
Lemma 4. Given a projected tetrahedron Q ⊆ S3, and ﬁxed vectors u, v ∈ S2,

(cid:8)uT (q ◦ v) | q ∈ Q(cid:9) =(cid:8)uT w | w ∈ Mv

where Mv =(cid:8)w ∈ R3 : (cid:107)w(cid:107) = 1, w = Mvα, α ∈ R4

(cid:9) ⊂ R ,

(cid:9) ,

(19)

and Mv ∈ R3×4 is the matrix with columns qj ◦ v, where Q has vertices {qj}4
If µ1k lies in the interior of Mµ2k(cid:48) , the closest point is w(cid:63) = µ1k. Otherwise the closest
point lies on the boundary of Mµ2k(cid:48) , and we check for the maximum dot product on
all vertices as well as all six geodesics between vertices of Mµ2k(cid:48) . Due to spherical
symmetry, the furthest point from µ1k is equivalent to the closest point to −µ1k.

j=1.

+

4.4 Convergence Properties
At this point, we have developed all the components necessary to optimize Eq. (5) via
BB on S3. Theorem 3 provides a bound on the number of reﬁnements to obtain (1) a
projected tetrahedron Q with U − L <  and (2) a certain angular precision. Corollary
1 yields the overall complexity of the algorithm—note that the complexity of BB is
exponential in the maximum search tree depth N. Since N is logarithmic in the desired
accuracy  (Theorem 3, Eq. (21)), the BB complexity is polynomial in −1 (Corollary 1).
Theorem 3. Suppose γ0 is the initial maximum angle between vertices in the tetrahe-
dra tessellation of S3, and deﬁne

(cid:19)(cid:12)(cid:12)(cid:12)(cid:12)
either the independent or the convex bound, where ∆γ = (4(cid:80)

(cid:12)(cid:12)(cid:12)(cid:12) ∂
(cid:108)
f
log2[(cos γ0)−1 − 1] − log2[(cos ∆γ)−1 − 1]

Then at most N mesh reﬁnements are required to achieve optimization tolerance  with
k,k(cid:48) Dkk(cid:48)Gkk(cid:48))−1, or

to achieve an angular tolerance of at most  on S2, where ∆γ = /2.
Corollary 1. BB on S3 terminates in ﬁnite time and has worst-case complexity O(−6).

Gkk(cid:48) (cid:44) max
x∈[0,π]
N (cid:44) max

(cid:109)(cid:111)

.

(20)

(21)

2k(cid:48) +2τ1kτ2k(cid:48) cos x

(cid:18)(cid:113)

τ 2
1k +τ 2

(cid:110)

∂x

0,

10

x

5 Gaussian Mixture Translational Alignment

In this section, we reuse notation for simplicity and to highlight parallels between the
translational and rotational alignment problems. We model the density of points in the
two point clouds with a Gaussian mixture model (GMM), which can be inferred in a
variety of ways [30,9]. For i ∈ {1, 2} the two distributions are:

ˆpi(x) =(cid:80)Ki

k=1πikN (x; µik, Σik) , (cid:80)Ki

(22)
Let R ∈ SO(3) and q(cid:63) describe the optimal rotation recovered using BB over S3.

k=1πik = 1, πik ≥ 0 .

Then deﬁning

mkk(cid:48) (cid:44) q(cid:63) ◦ µ2k(cid:48) − µ1k , Skk(cid:48) (cid:44) Σ1k + RΣ2k(cid:48)RT ,
zkk(cid:48)(t) (cid:44) − 1

kk(cid:48) (t − mkk(cid:48)) ,

2 (t − mkk(cid:48))T S−1
the translational optimization in Eq. (1) becomes:

(cid:80)
kk(cid:48)Dkk(cid:48)f (zkk(cid:48)(t)) where f (z) (cid:44) ez , Dkk(cid:48) (cid:44) π1kπ2k(cid:48)

√

max
t∈R3

(2π)3|Skk(cid:48)| .

(23)

(24)

This is again a nonconcave maximization, motivating the use of a global approach.
Thus, we develop a second BB procedure on R3 to ﬁnd the optimal translation.

5.1 Cover and Reﬁnement of R3
Developing a cover of the space of translations, R3, is easier than its rotational coun-
terpart because the space is Euclidean. Furthermore, most of the space does not need
to be considered since the translation can be bounded a priori with a rectangular cell of
diagonal length γ0 by examining the coordinates of the bounding boxes of the two point
clouds. For the reﬁnement step, we choose to subdivide the cell into eight equal-sized
rectangular cells. Thus, the minimum γN and maximum ΓN side length of any rectan-
gular cell at reﬁnement level N possesses a shrinkage property similar to Lemma 2,

γN−1

2 = γN ≤ ΓN = ΓN−1

2

.

(25)

5.2 Gaussian Mixture Model Bounds

As in the rotational problem, the translational BB algorithm requires lower and upper
bounds on the objective function in Eq. 24:

(cid:80)
kk(cid:48)Dkk(cid:48)f (zkk(cid:48)(t)) ≤ U .

L ≤ max
t∈Q

(26)
Again, a lower bound is found by evaluating the objective at any t ∈ Q, and we develop
two upper bounds similarly to the previous section using the deﬁnitions

Ukk(cid:48) (cid:44) max

t∈Q zkk(cid:48)(t)

and Lkk(cid:48) (cid:44) min

t∈Q zkk(cid:48)(t) ,

(27)

whose computation is discussed in Section 5.3.

x

11

Independent Upper Bound U⊥ The ﬁrst upper bound is found by exploiting the mono-
tonicity of f:

kk(cid:48)Dkk(cid:48)f (Ukk(cid:48)) .

(28)

Convex Upper Bound U∪ The second upper bound is found via the convexity of f:
Lemma 5. For any z ∈ [a, b],

(cid:16) bf (a)−af (b)

(cid:17) (cid:44) zg(a, b) + h(a, b) .

(29)
Lemma 5, combined with the fact that Dkk(cid:48) ≥ 0, again provides a method of bounding
the optimization over Q:

b−a

b−a

+

(cid:16) f (b)−f (a)

f (z) ≤ z

U⊥ =(cid:80)
(cid:17)

max
t∈Q
where A (cid:44) − 1
2

(cid:80)
kk(cid:48)Dkk(cid:48)f (zkk(cid:48)(t)) ≤ max
(cid:80)
kk(cid:48)Dkk(cid:48)gkk(cid:48)S−1
C (cid:44)(cid:80)
hkk(cid:48) − 1
2

kk(cid:48)Dkk(cid:48)

(cid:18)

t∈Q tT At + BT t + C (cid:44) U∪ ,
kk(cid:48) , B (cid:44)(cid:80)
kk(cid:48)Dkk(cid:48)gkk(cid:48)S−1

kk(cid:48)mkk(cid:48) ,

(cid:19)

gkk(cid:48)mT

kk(cid:48)S−1

kk(cid:48)mkk(cid:48)

,

(30)

(31)

and gkk(cid:48) (cid:44) g(Lkk(cid:48), Ukk(cid:48)), hkk(cid:48) (cid:44) h(Lkk(cid:48), Ukk(cid:48)). This is a concave quadratic maxi-
mization over a cube. Thus, we compute the maximizer t(cid:63) over all local optima in the
interior, faces, edges, and vertices to obtain U∪ according to Eq. (30).
Theorem 4. U∪ ≤ U⊥, and the inequality is tight.

5.3 Computing Lkk(cid:48) and Ukk(cid:48)
By examining Eq. (23), the values Lkk(cid:48) and Ukk(cid:48) can be computed using the procedure
described in the previous section, except with A (cid:44) − 1
kk(cid:48)mkk(cid:48), and
C (cid:44) − 1
kk(cid:48)mkk(cid:48). Because of the concavity of the objective, Lkk(cid:48) can be obtained
more efﬁciently by only checking the vertices of the rectangular cell Q.

kk(cid:48), B (cid:44) S−1

kk(cid:48)S−1

2 S−1

2 mT

5.4 Convergence Properties
We have now developed all the components necessary to optimize Eq. (24) via BB on
R3. As in the rotational alignment case, we provide theoretical results—Theorem 5 and
Corollary 2—characterizing the maximum reﬁnement depth required for optimization
tolerance and translational precision, along with the complexity of the algorithm.
Theorem 5. Suppose γ0 is the initial diagonal of the translation cell in R3, and deﬁne

(cid:110)

(cid:108)
log2(γ0) − log2(∆γ)

(cid:109)(cid:111)

, N (cid:44) max

0,

(cid:0)minλ∈eigSkk(cid:48) λ(cid:1)−1

Gkk(cid:48) (cid:44) γ0

either the independent or convex upper bounds, where ∆γ = ((cid:80)

Then at most N mesh reﬁnements are required to achieve optimization tolerance  with
k,k(cid:48) Dkk(cid:48)Gkk(cid:48))−1,

or to achieve a translational tolerance of at most , where ∆γ = .
Corollary 2. BB on R3 terminates in ﬁnite time and has worst-case complexity O(−3).

.

(32)

12

x

(e) initial

(f) BB

(g) BB using AA and the proposed direct S3 tessellation

Fig. 2: Optimal alignment of the full Stanford Bunny.

(a) initial

(b) BB+ICP

(c) BB using AA and the proposed direct S3 tessellation

Fig. 3: Alignment of partial scans of the Stanford Bunny.

6 Results and Evaluation

We evaluate the proposed BB algorithm on two point cloud sets from the Stanford 3D
scanning repository, and on a large set of randomly-sampled scan pairs from the NYU
depth dataset [39]. We compare BB to three other global alignment methods: the FT-
based method of Macadia et al. [37] (FT), GoICP [57], and a ﬁrst and second moment-
matching strategy (MOM). We additionally show results for running the ICP variant
by Chen et al. [10] with and without initialization by the global methods. To generate
the vMF-MMs and GMMs for BB, we cluster the data with DP-vMF-means [47] and
DP-means [30], respectively. Given the clustering, we ﬁt the maximum likelihood (ML)
mixture models to the data. To account for nonuniform point densities arising from the
sensing process, we weight each point’s contribution to the MMs by its surface area,
estimated by the disc of radius equal to the distance to the ﬁfth nearest neighbor. We
extract surface normals using the kNN+PCA-based approach of meshlab2 and PCL2.
To improve the robustness of BB, the algorithm is run three times on each problem with
scale values λn ∈ {45◦, 65◦, 80◦} in DP-vMF-means. The scale λx for DP-means is
manually selected based on the scale of the point cloud.
Stanford Bunny [51]: In this experiment, BB was used to align the Stanford Bunny
with a random transformation, as depicted in Fig. 2e. BB ﬁnds the perfect alignment,
shown in Fig. 2f, independent of the tessellation strategy. FT and GoICP ﬁnd the same
optimum alignment. Figure 2g shows conclusively that the proposed tessellation leads
to more efﬁcient BB optimization than the AA tessellation. The proposed approach

2 http://meshlab.sourceforge.net/ and http://pointclouds.org/

x

13

leads to a faster reduction in the bound gap, faster exploration, and a smaller number of
active nodes versus BB iteration, while reducing the computation time per iteration by
an order of magnitude. Note that the AA tessellation starts at 150% unexplored space
because it covers the rotation space more than once as discussed in Sec. 4.1. BB ﬁnds
the optimal translation within 200 iterations, hinting at the comparative difﬁculty of the
rotational alignment problem.
Partial Stanford Bunny: The results of aligning two partial scans of the Stanford
Bunny with relative viewpoint difference 45◦ are shown in Fig. 3. While ICP fails,
BB+ICP, FT+ICP and GoICP ﬁnd comparable optimal transformations (displayed in
the supplement). Neither the BB nor the FT alignment are perfect by themselves but
close enough to allow ICP to converge to the alignment depicted in Fig. 3b. This gives
ﬁrst evidence that the proposed BB approach is robust to violations of the assumptions
for global optimality. Similar to the previous experiment, BB with the proposed tessel-
lation outperforms the AA tessellation, as shown in Fig. 3c. The differences between
the approaches will become evident in the next experiments.

(a) initial

(b) BB (c) BB+ICP (d) GoICP (e) FT

(f) FT+ICP (g) MM

(h) ICP

Fig. 4: Alignment of partial scans of Happy Buddha.

Happy Buddha [12]: The Happy Buddha dataset consists of 15 scans taken at 24◦
rotational increments about the vertical axis of a Buddha statue. This dataset is chal-
lenging for alignment: the scans contain few overlapping points, and the surface normal
distributions are anisotropic. Fig. 4a shows the initial scan point clouds. We perform
pairwise alignment of consecutive scans, and render the aligned scans together in the
coordinate system of the ﬁrst in Fig. 4b–4h. The only successful alignment is produced
by BB+ICP. FT fails to estimate good-enough transformations for ICP to converge to
a correct alignment. As can be seen in the alignments of FT, MOM and ICP, the main
error is ﬂipping the statue onto its head. GoICP aligns all scans with the right side up,
but does not achieve correct axial alignment. BB does not fall prey to these issues, and
with the ICP reﬁnement recovers the high-quality reconstruction depicted in Fig. 4c.
NYU v2 Depth Dataset [39]: Next, we evaluate the alignment algorithms on point
cloud pairs generated from the NYU dataset. For a given scene, the point clouds are
generated by randomly sampling two camera poses and then rendering the point cloud
for each using a realistic Kinect noise model [41]. The viewpoint sampling algorithm
guarantees that all scene pairs have at least 28% overlap. Before alignment, one of
the point clouds is randomly transformed to simulate a global alignment problem with
differing coordinate systems. The transformation consists of a uniformly random ro-

14

x

initial

aligned

Fig. 5: Rotational and translational error statistics for 9300 randomly generated point
cloud pairs from the NYU depth dataset (example pairs and BB alignment to the right).
BB is robust to real noise, small overlap, and angular viewpoint differences.
tation of magnitude 30◦, and translation of magnitude 1m in a random direction. The
algorithms are evaluated via the angular ∆θ and translational (cid:107)∆t(cid:107)2 errors between
estimated and true transformation.

The median computation times for the algorithms used in this experiment are: BB
35s, FT 45s, MOM 1.5s, and ICP 25s. GoICP did not terminate within 24h and is
thus not represented in the quantitative evaluation. This is potentially due to the sig-
niﬁcantly stronger noise than in the other experiments. Fig. 5 shows the error statistics
for differing scene overlap percentages, and for differing viewpoint angular deviations,
demonstrating the robustness of BB to these quantities. With a median angular and
translational error below 5◦ and 25cm, respectively, BB outperforms all other methods.
Note that BB successfully aligns scans with small overlap (down to 28%) even though
the theoretical optimality results do not cover this case. The proposed BB algorithm is
computationally competitive with all others, while improving alignment performance.

7 Conclusion

We have proposed a BB approach to the global point cloud alignment problem that
utilizes a compression of the point clouds in terms of Bayesian nonparametric models.
A novel direct tessellation and reﬁnement scheme for the space of rotations improves
the search efﬁciency of BB. Experiments on scans of objects, as well as a large-scale
study of Kinect point clouds of indoor scenes, demonstrate the robustness of the method
to noisy real world data with little overlap and large angular differences between the
viewpoints. Beyond experimental validation, we have provided a thorough and rigorous
theoretical analysis of the BB approach that establishes performance guarantees and
convergence rates of the algorithm.

We expect that the proposed direct tessellation of S3 and its use in the BB framework
will be useful in other rotational optimization problems throughout computer vision and
robotics. All code is available at http://people.csail.mit.edu/jstraub/.

x

15

References

1. D. Aiger, N. J. Mitra, and D. Cohen-Or. 4-points congruent sets for robust pairwise surface

registration. In ACM TOG, volume 27, page 85, 2008. 3

2. C. Antoniak. Mixtures of Dirichlet processes with applications to Bayesian nonparametric

problems. The Annals of Statistics, 1152–1174, 1974. 2, 3

3. A. Banerjee, I. S. Dhillon, J. Ghosh, S. Sra, and G. Ridgeway. Clustering on the unit hyper-

sphere using von Mises-Fisher distributions. JMLR, 6(9), 2005. 5

4. M. Bangert, P. Hennig, and U. Oelfke. Using an inﬁnite von Mises-Fisher mixture model to

cluster treatment beam directions in external radiation therapy. In ICMLA, 2010. 4

5. P. J. Besl and N. D. McKay. A method for registration of 3-D shapes. TPAMI, 14(2):239–256,

1992. 2

6. P. Biber and W. Straßer. The normal distributions transform: A new approach to laser scan

matching. In IROS, 2003. 2

7. M. Bosse and R. Zlot. Map matching and data association for large-scale two-dimensional

laser scan-based SLAM. IJRR, 27(6):667–691, 2008. 1, 3

8. R. J. Campbell and P. J. Flynn. A survey of free-form object representation and recognition

techniques. Computer Vision and Image Understanding, 81(2):166–210, 2001. 2

9. J. Chang and J. W. Fisher III. Parallel sampling of DP mixture models using sub-clusters

splits. In NIPS, 2013. 2, 10

10. Y. Chen and G. Medioni. Object modeling by registration of multiple range images. In ICRA,

1991. 12

11. H. S. M. Coxeter. Regular polytopes. Courier Corporation, 1973. 6
12. B. Curless and M. Levoy. A volumetric method for building complex models from range

images. In SIGGRAPH, 1996. 13

13. L. Devroye. A Course in Density Estimation. Birkhauser Boston Inc., 1987. 4
14. I. S. Dhillon and D. S. Modha. Concept decompositions for large sparse text data using

clustering. Machine Learning, 42(1-2):143–175, 2001. 5

15. J. R. Driscoll and D. M. Healy. Computing Fourier transforms and convolutions on the

2-sphere. Advances in Applied Mathematics, 15(2):202–250, 1994. 3

16. T. Ferguson. A Bayesian analysis of some nonparametric problems. The Annals of Statistics,

209–230, 1973. 2

17. M. Fischler and R. Bolles. Random sample consensus: a paradigm for model ﬁtting with
applications to image analysis and automated cartography. Communications of the ACM,
24(6):381–395, 1981. 3

18. N. I. Fisher. Statistical Analysis of Circular Data. Cambridge University Press, 1995. 2, 5
19. N. Gelfand, N. J. Mitra, L. J. Guibas, and H. Pottmann. Robust global registration.

In

Symposium on Geometry Processing, volume 2, page 5, 2005. 3

20. S. Ghosal, J. K. Ghosh, and R. V. Ramamoorthi. Posterior consistency of Dirichlet mixtures

in density estimation. The Annals of Statistics, 27(1):143–158, 1999. 4

21. Frederico Girosi and Tomaso Poggio. Networks and the best approximation property. Bio-

logical Cybernetics, 63:169–176, 1990.

22. R. I. Hartley and F. Kahl. Global optimization through rotation space search. IJCV, 82(1):64–

79, 2009. 2, 3, 6

23. P. Henry, M. Krainin, E. Herbst, X. Ren, and D. Fox. RGB-D mapping: Using Kinect-style
depth cameras for dense 3D modeling of indoor environments. IJRR, 31(5):647–663, 2012.
1

24. B. K. Horn. Some notes on unit quaternions and rotation. 2001. 5
25. B. K. P. Horn. Extended Gaussian images. Proceedings of the IEEE, 72(12):1671–1686,

1984. 1, 3

26. P. J. Huber. Robust statistics. Springer, 1981. 3
27. T. Ibaraki. Theoretical comparisons of search strategies in branch-and-bound algorithms.

IJCIS, 5(4):315–344, 1976. 5

16

x

28. B. Jian and B. C. Vemuri. Robust point set registration using gaussian mixture models.

PAMI, 33(8):1633–1645, 2011. 2, 4

29. A. E. Johnson and M. Hebert. Surface matching for object recognition in complex three-

dimensional scenes. Image and Vision Computing, 16(9):635–651, 1998. 1, 3

30. B. Kulis and M. I. Jordan. Revisiting k-means: New algorithms via Bayesian nonparametrics.

In ICML, 2012. 2, 4, 10, 12

31. A. H. Land and A. G. Doig. An automatic method of solving discrete programming prob-

lems. Econometrica: Journal of the Econometric Society, 497–520, 1960. 2, 4

32. E. L. Lawler and D. E. Wood. Branch-and-bound methods: A survey. Operations research,

14(4):699–719, 1966. 2, 4, 5

33. H. Li and R. Hartley. The 3D-3D registration problem revisited. In ICCV, 2007. 2, 3, 6
34. A. Liu and B. Joe. Quality local reﬁnement of tetrahedral meshes based on 8-subtetrahedron

subdivision. AMS Math. Comp., 65(215):1183–1200, 1996. 7

35. M. Magnusson, A. Lilienthal, and T. Duckett. Scan registration for autonomous mining

vehicles using 3D-NDT. Journal of Field Robotics, 24(10):803–827, 2007. 1, 2

36. M. Magnusson, A. N¨uchter, C. L¨orken, A. J. Lilienthal, and J. Hertzberg. Evaluation of 3D

registration reliability and speed-a comparison of ICP and NDT. In ICRA, 2009. 2

37. A. Makadia, A. Patterson, and K. Daniilidis. Fully automatic registration of 3D point clouds.

In CVPR, 2006. 3, 12

38. N. J. Mitra, A. Nguyen, and L. Guibas. Estimating surface normals in noisy point cloud data.

IJCGA, 14:261–276, 2004. 1, 3

39. P. K. Nathan Silberman, Derek Hoiem and R. Fergus.
inference from RGBD images. In ECCV, 2012. 12, 13

Indoor segmentation and support

40. R. A. Newcombe, A. J. Davison, S. Izadi, P. Kohli, O. Hilliges, J. Shotton, D. Molyneaux,
S. Hodges, D. Kim, and A. Fitzgibbon. Kinectfusion: Real-time dense surface mapping and
tracking. In ISMAR, 2011. 1

41. C. V. Nguyen, S. Izadi, and D. Lovell. Modeling Kinect sensor noise for improved 3D

reconstruction and tracking. In 3DIMPVT, 2012. 13

42. A. J. Parra Bustos, T.-J. Chin, and D. Suter. Fast rotation search with stereographic projec-

tions for 3D registration. In CVPR, 2014. 3, 6

43. S. Rusinkiewicz and M. Levoy. Efﬁcient variants of the ICP algorithm.

In 3-D Digital

Imaging and Modeling, 2001. 2

44. R. B. Rusu, N. Blodow, and M. Beetz. Fast point feature histograms (FPFH) for 3D registra-

tion. In ICRA, 2009. 3

45. J. Salvi, C. Matabosch, D. Foﬁ, and J. Forest. A review of recent range image registration
methods with accuracy evaluation. Image and Vision Computing, 25(5):578–596, 2007. 1, 2
46. J. Straub, N. Bhandari, J. J. Leonard, and J. W. Fisher III. Real-time Manhattan world rotation

estimation in 3D. In IROS, 2015. 1, 2, 3

47. J. Straub, T. Campbell, J. P. How, and J. W. Fisher III. Small-variance nonparametric clus-

tering on the hypersphere. In CVPR, 2015. 2, 4, 5, 12

48. Y. W. Teh. Dirichlet processes. In Encyclopedia of Machine Learning. Springer, New York,

2010. 2

49. S. Tokdar. Posterior consistency of Dirichlet location-scale mixture of normals in density

estimation and regression. The Indian Journal of Statistics, 67(4):90–110, 2006. 4

50. Y. Tsin and T. Kanade. A correlation-based approach to robust point set registration.

In

ECCV, 2004. 2, 4

51. G. Turk and M. Levoy. Zippered polygon meshes from range images. In SIGGRAPH, 1994.

12

52. A. van der Vaart and J. Wellner. Weak Convergence and Empirical Processes. Springer, New

York, 1996. 4

53. R. Webb.

Stella software.

http://www.software3d.com/Stella.php and

https://en.wikipedia.org/wiki/600-cell. 1

x

17

54. G. Weiss, C. Wetzler, and E. Von Puttkamer. Keeping track of position and orientation of

moving indoor systems by correlation of range-ﬁnder scans. In IROS, 1994. 3

55. T. Whelan, M. Kaess, H. Johannsson, M. Fallon, J. Leonard, and J. McDonald. Real-time

large scale dense RGB-D SLAM with volumetric fusion. IJRR, 2014. 1

56. Y. Wu and S. Ghosal. The L1-consistency of Dirichlet mixtures in multivariate Bayesian

density estimation. Journal of Multivariate Analysis, 101(10):2411–2419, 2010. 4

57. J. Yang, H. Li, and Y. Jia. Go-ICP: Solving 3D registration efﬁciently and globally optimally.

In ICCV, 2013. 3, 6, 12

