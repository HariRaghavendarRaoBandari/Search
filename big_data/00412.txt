A targeted spectral interpolation algorithm for the
detection of continuous gravitational waves

Gareth S. Davies1,2, Matthew Pitkin1 & Graham Woan1
1 SUPA, University of Glasgow, Glasgow, G12 8QQ, United Kingdom
2 Cranﬁeld Forensic Institute, Cranﬁeld University, Shrivenham, SN6 8LA, United
Kingdom

E-mail: g.s.davies@cranfield.ac.uk

Abstract. We present an improved method of targeting continuous gravitational-
wave signals in data from the LIGO and Virgo detectors with a higher eﬃciency
than the time-domain Bayesian pipeline used in many previous searches. Our spectral
interpolation algorithm, SplInter, removes the intrinsic phase evolution of the signal
from source rotation and relative detector motion. We do this in the frequency domain
and generate a time series containing only variations in the signal due to the antenna
pattern. Although less ﬂexible than the classic heterodyne approach, SplInter allows for
rapid analysis of putative signals from isolated (and some binary) pulsars, and eﬃcient
follow-up searches for candidate signals generated by other search methods. The
computational saving over the heterodyne approach can be many orders of magnitude,
up to a factor of around ﬁfty thousand in some cases, with a minimal impact on overall
sensitivity for most targets.

6
1
0
2

 
r
a

M
 
1

 
 
]

M

I
.

h
p
-
o
r
t
s
a
[
 
 

1
v
2
1
4
0
0

.

3
0
6
1
:
v
i
X
r
a

Spectral Interpolation for detection of continuous gravitational waves

2

1. Introduction

Rapidly rotating neutron stars are promising sources of long-lived gravitational-wave
signals and one of the key science targets of the LIGO and Virgo Scientiﬁc Collaborations
[1]. The full parameter space for these signals is too large for simple coherent methods to
be employed on timescales longer than a few days, so a range of more speciﬁc methods
have been developed to explore speciﬁc regions of the space to diﬀerent depths [2].
Known radio and X-ray pulsars comprise an important class of potential gravitational-
wave source and three analysis pipelines have been speciﬁcally developed to exploit the
known rotational phase evolution of these targets [3, 4, 5]. These targeted pipelines are
fully-coherent over arbitrary lengths of time, tracking the predicted gravitational signal
based on electromagnetic observations. They perform the deepest gravitational wave
searches in the ﬁeld and all three use both time and frequency domain techniques to
reduce the data at relatively low computational cost. However, as these pipelines are
now being applied more widely to candidate sources identiﬁed by other searches there is
signiﬁcant beneﬁt in reducing the cost still further. Two of these (the Bayesian targeted
and G statistic [3, 5] pipelines), rely on data from a carefully implemented, but slow,
heterodyne step developed by Dupuis and Woan [2, 3, 6, 7] that allows the data to be
sampled at a much lower rate than is generated by the detector (from ∼ 16 kHz to
usually one sample per minute). Although we believe this exact solution is still the best
way to approach high-value targets, short-period binaries and targets close to spectral
lines (such as the Crab pulsar), when certain approximations are valid the step can be
performed more eﬃciently for many other targets using fast fourier transform (FFT)
methods. We therefore present an eﬃcient method for down-sampling gravitational wave
data and removing the eﬀects of detector motion with respect to the source based on
FFTs. Similar spectral methods have been used widely in the ﬁeld for many years, and
indeed form the basis of the F-statistic search methods [8] which are ubiquitous. Our
version of spectral interpolation, SplInter, is designed as a replacement for the current
heterodyne algorithm used in targeted searches [3] and can also deal with signals that
evolve linearly in frequency on timescales comparable to the transform length.

In section 3 we show how to calculate the down-sampled data streams using this
method.
In section 4 we conﬁrm the equivalence of these streams to those from the
heterodyne method, and assess the improvement in computational eﬃciency oﬀered by
SplInter.

The continuous gravitational wave strain signal in the output of a detector depends
on the source emission mechanism and the source/detector geometry, but for the
purposes of this analysis we assume it to be quasi-sinusoidal, with the form

h(T ) = A(T )eiΦ(T ) + A∗(T )e−iΦ(T ),

(1)

where A(T ) contains both the antenna response pattern and source amplitude
parameters. Φ(T ) is the apparent phase evolution of the signal due to source rotation
and T is the time in a suitable inertial frame (see below). For example in the case of

Spectral Interpolation for detection of continuous gravitational waves

3

a triaxial neutron star rotating about a principle axis, emitting gravitational waves at
twice the rotation frequency, A has the form [3]

A(T ) =

1
4

F+(T ; ψ)h0(1 + cos2 ι) − i
2

F×(T ; ψ)h0 cos ι,

(2)

where ι is the inclination angle between the source rotation axis and the line of sight
from the detector to the source, ψ is the gravitational wave polarisation angle and h0
is the wave amplitude. F+ and F× are the antenna pattern responses to plus and cross
polarisations respectively. The evolution of Φ(T ) depends on the intrinsic rotational
evolution of the neutron star, deﬁned by its frequency and frequency derivatives
f (0),(1),(2)...
. Over short timescales, the time-dependence of h(T ) is dominated by this
rotation
phase term, expanded as

Φ(T ) = Φ0 + 2π

,

(3)

(cid:88)

f (l)(T − T0)l+1

(l + 1)!

l=0

where f (l) is the lth time derivative of the gravitational wave frequency (note that these
are twice the rotation values for the l = m = 2 harmonic of a non-precessing, triaxial
neutron star), T0 is the epoch at which Φ(T0) = Φ0. The f (l) values are derived from
radio, X-ray, or γ-ray pulse times-of-arrival, preferably from data spanning the same
analysis period as the gravitational wave search in question.

The rotational and orbital motions of the Earth put the detector in a non-inertial
rest frame, but for a given source position on the sky we can relate the (‘topocentric’)
signal arrival times at the detector, t(cid:48), to those in the source’s frame of reference by

T = t(cid:48) + δ(t(cid:48)),

where δ(t(cid:48)) comprises four time-delay terms [3]:

δ(t(cid:48)) = ∆R(cid:12) + ∆S(cid:12) + ∆E(cid:12) + ∆Binary.

(4)

(5)

The Roemer delay ∆R(cid:12) is the dominant term; it is the Euclidian diﬀerence in time taken
for the signal to arrive at the detector and the solar system barycentre (SSB). ∆S(cid:12) is
the Shapiro delay, caused by the bending of spacetime near to massive bodies, which
in the case of an Earth-based detector is dominated by the Sun’s contribution. The
Einstein delay ∆E(cid:12) combines the eﬀects of special and general relativistic time dilation
due to motion and the presence of massive bodies. All of these terms vary slowly over
the course of a year, and by small amounts over the course of a day, and as such can
be considered as changing only linearly over the half-hour intervals we will consider
shortly. ∆Binary however can vary more quickly, on the timescale of the period of binary
motion, this is an additional all-encompassing term that combines the Roemer, Shapiro
and Einstein delays caused by the source’s non-inertial motion, should it be in a binary
system. In terms of the topocentric time we now have
f (l)(t(cid:48) + δ(t) − t0)l+1

(cid:88)

Φ(t(cid:48)) = φ0 + 2π

where t0 is the time at which Φ(t0 − δ) = φ0.

l=0

(l + 1)!

,

(6)

Spectral Interpolation for detection of continuous gravitational waves

4

Once we have corrected for this known phase variation the only remaining time-
dependence in Equation 1 is from A(t), which evolves as the antenna pattern sweeps
over the source in a sidereal day. We can therefore sample the data at a much reduced
rate, limited only by the changing antenna pattern, provided that we still capture this.
The original heterodyne pipeline achieves phase correction by multiplying the strain
time series s(t(cid:48)) (where we use the notation of [3] that s(t(cid:48)) = h(t(cid:48)) + n(t(cid:48)), where
h(t(cid:48)) is the signal from Equation 1 and n(t(cid:48)) is Gaussian noise) by exp[−iφ(t(cid:48))], where
φ(t(cid:48)) = Φ(t(cid:48)) − φ0, eﬀectively shifting the signal frequency to zero and leaving A(t) as
the only time-dependent term. After applying a low-pass ﬁlter (conventionally with a
time constant of 1 minute) we average over M data samples to obtain a down-sampled
time series of the form

M(cid:88)

j=1

BK =

1
M

s(t(cid:48)

j) exp[−iφ(t(cid:48)

j)],

(7)

where M is the number of raw data samples contributing to BK (following [3] this is
often chosen to given one sample per minute), and K is the time index for the resulting
time series. We model this as a combination of a signal term yK = A(tK) exp(iφ0)
and, appropriately over the narrow bands considered here, white Gaussian noise
nK ∼ N (0, σ2
K)

BK = yK + nK.

(8)

σK is modelled as constant over short timescales, and is related to the original time-series
noise σT by

σ2
K =

σ2
T
M

=

σ2
T
r∆t

,

(9)

where r is the original sample rate and ∆t is the down-sampled period.

2. Formulation in the frequency domain

We can consider a similar analysis in the frequency domain. The Fourier transform of
a signal h(t(cid:48)) limited in duration to ∆t centred on a time (tk − t0) is

(cid:90)

tk−t0+∆t/2

(cid:104)

A(t(cid:48))eiΦ(t(cid:48)) + A∗(t(cid:48))e−iΦ(t(cid:48))(cid:105)

Hk(f ) =

exp [−2πif (t(cid:48) − t0 − tk + ∆t/2)] dt(cid:48). (10)

tk−t0−∆t/2

In this Fourier-based version, tk become the time-stamps of a series similar to the tK
series deﬁned above, with Hk(fsignal) playing the role of yK. However, we now use k
rather than K as the index to highlight that the two sampling rates need not be (and
indeed usually are not) the same. t0 is (again) the reference epoch of our timing solution.
We now consider φ(t(cid:48)), the time-dependent part of Φ(t(cid:48)), and use a time coordinate t
with its origin at the mid-point of the data under consideration i.e., t(cid:48) → t = t(cid:48) − tk + t0.
Importantly, the time-delay correction term δ(t) in (5) will vary slightly over the time ∆t.
We approximate these changes in the arrival time to ﬁrst order in t, deﬁning δk = δ(tk)

Spectral Interpolation for detection of continuous gravitational waves

5

dt δ(tk), such that for the duration of the data δ(t) ≈ δk + ˙δkt. Equation 6

and ˙δk = d
now becomes

φ(t) ≈ 2π

To second order in t

f (l)(cid:104)

(cid:88)

t(1 + ˙δk) + tk − t0 + δk

l=0

(l + 1)!

(cid:105)l+1

.

φ(t) ≈ φk + 2πfkt + π ˙fkt2,

(cid:88)

f (l)(tk − t0 + δk)l+1

,

(l + 1)!

φk := 2π

l=0

fk := (1 + ˙δk)

(cid:88)

l=0

˙fk =

fend − fstart

∆t

f (l)(tk − t0 + δk)l

l!

.

We also approximate ˙fk as

(11)

(12)

(13)

(14)

(15)

.

(16)

(17)

where

and

where

and

(cid:20)
(cid:20)

.

(cid:18)
(cid:18)

fstart =

1 +

d
dt

δ

tk − ∆t
2

fend =

1 +

d
dt

δ

tk +

∆t
2

(cid:19)(cid:21)(cid:88)
(cid:19)(cid:21)(cid:88)

l=0

f (l)(cid:2)tk − ∆t
f (l)(cid:2)tk + ∆t

(cid:1)(cid:3)l
2 − t0 + δ(cid:0)tk − ∆t
(cid:1)(cid:3)l
2 − t0 + δ(cid:0)tk + ∆t

l!

2

2

.

l=0

l!

We assume the signal amplitude and antenna pattern contributions to A(t) are
approximately constant on timescales of a small fraction of a day, so when ∆t is small
we can replace A(t) above with A(tk). Having deﬁned yk := A(tk)eiφ0 we can therefore
write, using these approximations,

∆t/2(cid:90)

(cid:2)ykeiφ(t) + y∗

ke−iφ(t)(cid:3) e−2πif t dt.

Hk(f ) ≈ e−iπf ∆t

(18)

This is the Fourier transform which will be considered in the following models.

−∆t/2

2.1. The form of the signal in a short transform

Our signal is quasi-sinusoidal, but with amplitude and phase varying slowly as the source
moves though the antenna pattern, and with changes in delay and doppler shift as well

Spectral Interpolation for detection of continuous gravitational waves

6

as intrinsic variations in the source spin rate. To ﬁrst order in f , using Hk(f ) from (18)
and φ(t) from (12) we have

Hk(f ) ≈ ykeiφk−iπf ∆t

exp

∆t/2(cid:90)

2πi(fk − f )t + iπ ˙fkt2(cid:105)
(cid:104)
∆t/2(cid:90)
(cid:104)−2πi(fk + f )t − iπ ˙fkt2(cid:105)

exp

dt

−∆t/2

+ y∗

ke−iφk−iπf ∆t

dt.

(19)

−∆t/2

These expressions are not strictly analytic due to the t2 phase-dependency of the
exponent, but are forms of the familiar Fresnel integral. The limiting form, when ˙fk is
small, is just the Fourier transform of a time-limited sinusoid, so we will consider this
as a special case below.

˙fk = 0. The contribution of the intrinsic spin-down
2.1.1. The sinc approximation,
˙f is generally negligible over the course of a single
of the source, f (1), to the overall
transform (maybe lasting minutes to hours) and the change in frequency due to this
component will be much smaller than the frequency resolution. For example the Crab
pulsar, which has an unusually large spin-down of f (1) = 7.4 × 10−10 Hz s−1 [9, 10], will
change in frequency by only ∆f = 1.3 × 10−6 Hz over 30 minutes, which is 0.1% of the
˙fk is dominated by the ˙δk term caused by the orbital
width of a frequency bin. Instead,
motions of the source and observer. The spin and orbital motion of the observer are
also usually negligible over ∼ 1 h, so for a source that is not in a binary system we can
assume ˙fk = 0 for the duration of the integral, so that

(20)

(21)

(22)

(23)

(24)

∆t/2(cid:90)

Hk(f ) ≈ ykeiφk−iπf ∆t

exp [2πi(fk − f )t] dt

−∆t/2

+ y∗

ke−iφk−iπf ∆t

∆t/2(cid:90)

exp [−2πi(fk + f )t] dt

−∆t/2

≈ yk∆t exp [iφk − iπf ∆t] sinc [π(fk − f )∆t]

+ y∗

k∆t exp [−iφk − iπf ∆t] sinc [π(fk + f )∆t] ,

where we use the convention
sin x

sinc x :=

.

x

Close to the signal frequency (i.e., when f (cid:39) fk)

sinc [π(fk − f )∆t] (cid:29) sinc [π(fk + f )∆t] ,

so we can remove the second term in (21) to give

Hk(f ) ≈ yk∆t exp [iφk − iπf ∆t] sinc [π(fk − f )∆t] .

We will refer to this below as the sinc approximation.

Spectral Interpolation for detection of continuous gravitational waves

7

If ˙fk is non-negligible then we can still approximate
2.1.2. The Fresnel approximation.
the form of Hk(f ) through a numerical integration. Such circumstances would occur
if the doppler-shifted frequency was evolving signiﬁcantly on timescales of ∆t due to
the orbital motion of the source or observer. If the rate of change of signal frequency
is a constant, i.e. ¨fk = 0, we would expect the signal to appear as a ‘Fresnel’ pattern
in the spectrum, characterised by the quadratic evolution of phase with time. Fresnel
Integrals have been studied extensively, and there are good algorithms for fairly rapid
calculation [11]. They comprise a pair of functions deﬁned as [12]

and

C[w] :=

S[w] :=

w(cid:90)
w(cid:90)

0

0

cos

sin

2

dx

(cid:19)
(cid:18) πx2
(cid:18)πx2
(cid:19)
(cid:110)C[wend] + i

2

dx.

In terms of these integral functions, (19) becomes
Hk(f ) ≈

yk

(cid:113)

2| ˙fk| exp(i∆φ)

2

(cid:111)

,

(25)

(26)

(27)

(28)

(29)

(30)

where

and

˙fk
˙fk
| ˙fk|S[wend] − C[wstart] − i
| ˙fk|S[wstart]
(cid:33)2

˙fk∆t

− f

fk +

,

(cid:32)
(cid:33)
(cid:33)

+

2

∆t

| ˙fk|
2

(cid:115)
(cid:115)

fk − f +

˙fk∆t

2

−

| ˙fk|
2

∆t.

∆φ = φk − πf ∆t + π

˙fk∆t2

2

− π
˙fk

fk − f +

˙fk∆t

2

(cid:32)
(cid:32)

(cid:113)
(cid:113)

2| ˙fk|
˙fk

2| ˙fk|
˙fk

wend =

wstart =

Here, we have again ignored the (f + fk) term in (19), as again it is negligible in the
interpolation region where f (cid:39) fk.

We will refer to (27) as the Fresnel approximation to the signal spectrum,
and we calculate the Fresnel integral terms with suﬃcient numerical precision using
˙fk the Fresnel approximation reduces to the sinc
the algorithm in [11]. For small
approximation described above. Computationally it is more expensive than the
sinc approximation, however it need only be implemented during periods of time
corresponding to large values of

˙fk,, i.e., | ˙fk|∆t2 > 0.1.

Spectral Interpolation for detection of continuous gravitational waves

8

3. The Spectral Interpolation algorithm

The Spectral Interpolation algorithm (SplInter) is an alternative to the time-domain
heterodyne algorithm of Dupuis and Woan [3] originally developed for gravitational-wave
searches targeting known pulsars. In contrast to this heterodyne algorithm, SplInter uses
Fast Fourier Transform methods to generate a similarly narrow-band time series but
can process multiple targets very much more eﬃciently and usually with an acceptable
impact on overall sensitivity. The Fourier transforms used in SplInter are formally ‘Short
Fourier Transforms’ (SFTs) deﬁned in [13], which contain some minimal windowing
and are widely-used in continuous gravitational wave searches. Of course there is an
associated computational load in creating these SFTs, but this is oﬀset by the eﬃciency
of the SplInter algorithm. In addition, SFTs for several types of continuous-wave search
(such as [14]) can be shared with SplInter.

In the ﬁrst stage of the SplInter algorithm we take a discretely-sampled Fourier
transform, in the form of an SFT, and compute a value of Hk at the instantaneous
topocentric signal frequency using one of the interpolation methods described above
over a small number of spectral points either side of the central topocentric frequency
bin. We denote the result of this spectral interpolation Bk. In addition, we wish to
calculate σk, the standard deviation of the noise on our estimate of Bk. Figure 3 shows
the SplInter algorithm in detail, with a more detailed description in the next section.

3.1. Bk and σk calculation

An SFT is of course a discrete Fourier transform, so we must interpolate between
frequency bins to recover an unbiased estimate, Bk, of the signal, yk. The interpolation
is best understood in Bayesian terms: we compute the most probable value of yk by
choosing the value that maximises its posterior probability, given the data and a model
for the signal. We choose to estimate the signal and noise separately, so for the signal
estimate we will marginalise over the (unknown but assumed constant) noise variance.
We start by noticing that we can express the signal spectrum Hk(f ) (using either
the sinc or Fresnel approximation for this expression) as the product of our unknown
signal amplitude, yk and a known signal shape function, µk, deﬁned as

Hk(f )

.

µk(f ) :=

(31)
If the spectrum of the data is Sk(f ) then, writing Ski ≡ Sk(fi) and µki ≡ µk(fi) the
likelihood of the set of data {Sk(f )} given Bk, spectral noise σF and signal shape µk(f )
is

yk

(cid:33)

(cid:32)

N(cid:88)

i=1

p ({Sk(f )}|Bk, σF ,{µk(f )}) =

1
F )N exp
(2πσ2

− 1
2σ2
F

|Ski − Bkµki|2

.(32)

where the sum in i is over a window of N frequency bins around the signal frequency
for which |µ| is signiﬁcantly greater than zero. Here we have assumed that the noise
is uncorrelated between frequency bins and has a constant standard deviation σF . We

Spectral Interpolation for detection of continuous gravitational waves

9

can consider σF as a nuisance parameter, and marginalise over it. Choosing a Jeﬀreys
prior for σF of p(σF ) ∝ 1/σF , σF > 0 and a uniform prior on Bk, for Bk = −∞ to ∞
we obtain, after marginalisation, a log posterior for Bk of

(cid:32)(cid:88)
The maximum of this log posterior occurs when(cid:80)

log [ p (Bk|{Ski},{µki})] ∝ −N log

i

diﬀerentiate with respect to B∗

|Ski − Bkµki|2

.

(33)
i |Ski − Bkµki|2 is minimised. If we

(cid:33)

(cid:33)

(cid:88)

k ‡ and set this to be zero we get
ki − SkiB∗
d
dB∗

ki − BkµkiS∗

(SkiS∗

k

ki + Bkµ∗

i
kiµki) = 0.

kµ∗

ki + BkB∗

kµ∗

kiµki)

The most probable value of Bk is therefore

(cid:32)(cid:88)

d
dB∗

k

|Ski − Bkµki|2

(cid:88)

i

=
(−Skiµ∗

i

=

(cid:80)
(cid:80)

i

i

[Skiµ∗
ki]
[µ∗

kiµki]

,

Bk =

(34)

(35)

Bk −

(cid:80)
(cid:80)

i

i

 .

[Skiµ∗
ki]
[µ∗

kiµki]

a result that is familiar from least-squares analysis.

To estimate the variance of the noise, σ2

k, we would ideally follow a similar route,

marginalising over Bk in (32) and maximising the posterior for σk

p(σk|{Ski},{µki})max =

p(σk|{Ski},{µki}, Bk) p(Bk) dBk

. (36)

−∞

max

However, this integral is not analytic. We therefore choose to use our calculated value
of Bk from (35) to obtain the best estimate of σk, equivalent to using the Dirac delta
function as the prior on Bk in (36)

 ∞(cid:90)



p(Bk) = δD

(37)

The application of this is straightforward: we use the most probable Bk calculated above
to return best estimate of Hk(fi), Hbest(fi) = Bkµ(fi). The diﬀerence between Hbest(fi)
and S(fi) is our best estimate of the noise Nbest(fi). We take these noise residuals
around the signal frequency and then calculate their variance to give us σ2
F .

The spectral noise variance, σ2
F ,

is related to the time domain noise through

Parseval’s theorem (σ2

2
∆t2r ). Using this and (9) we get

‡ B∗
(i) Bk → B∗
(ii) B∗

k has the simultaneous properties of

∗
k is conjugate conformal, leading to dB
k
dBk

= 0 and dBk
dB∗
k and Bk are mutually deﬁned; the most likely value of B∗

k

(38)

= 0

k deﬁnes the most likely value of Bk.

F = σ2
T
∆t
2

.

k = σ2
σ2
F

Spectral Interpolation for detection of continuous gravitational waves

10

Figure 1: An illustration of the type of outlier removed by the second outlier removal step. Shown are
the best ﬁt of the noise, the standard deviation of the residuals, the threshold for removal, and the
protected band around the source frequency. The removed data point is indicated by the magenta star.

We now have our calculated Bk and an estimate of σk. The parameter estimation stage
of the pipeline used by Dupuis and Woan [3] treated the noise variance as a nuisance
parameter to be marginalised over 30-minute segments to give a Student’s t-likelihood
for the signal. However here we use the direct estimates of σk described above, giving a
Gaussian likelihood for use in parameter estimation.

3.2. Outlier removal

The noise in gravitational-wave data contains many line features that may aﬀect our
estimates of Bk if they are close to the source frequency. We minimise this contamination
by performing three outlier removal steps. The ﬁrst removes data points with values
above a threshold multiple of standard deviations. This threshold is set to be large,
to remove only the strongest lines, and the ten bins around the signal frequency are
excluded from this ﬁrst step.

The second outlier removal step takes place after initial estimates of Bk and σk have
been made and is shown in ﬁgure 1. By this stage we have an estimate of the noise in
the frequency domain, σF , so we identify S(f ) data points with residual values above a
threshold factor of this standard deviation. We use a factor of ﬁve in the illustrations
given here. This threshold is lower than that employed in the ﬁrst step, and now all but
the closest ±4 data points to the signal are involved. If any data points are removed
by this process Bk and σF are recalculated and this outlier removal step repeated to
convergence.

The third outlier removal step uses the noise estimates over the entire data set. We

−20−15−10−5051015Frequency − Source Frequency (bins)Amplitude Spectral Density, Arbitrary units  |S(f)|Estimated |H(f)|ResidualsResidual σ5 σ thresholdProtected bandSpectral Interpolation for detection of continuous gravitational waves

11

Figure 2: An illustration of the type of outlier removed by the third outlier removal step, showing the
power spectra of two example SFTs. SFT1 has an unusually high low-frequency noise contribution,
bleeding power into frequency channels up to around 300 Hz. For sources with signals in this lower
range (such as a 90-Hz signal shown by the black line) the noise estimation for SFT1 would be large
compared to that in SFT2 (a normal SFT). Sources at frequencies above ∼ 300 Hz would be unaﬀected
by this outlier removal.

calculate the mean value of {σk}, (cid:104)σ(cid:105), and remove any data for which |Re[Bk]|, |Im[Bk]|
or σk is above a threshold factor of this value. This step removes data points which are
unusually noisy, but for which the noise is broadband and was not detected by the ﬁrst
two outlier removal steps, as shown in ﬁgure 2.

Figure 3 shows the full SplInter algorithm for a single SFT. The detector data
includes data quality ﬂags and we restrict our analysis to segments of data in ‘science
mode’. The input ﬁles are therefore a science segment list and pointers to the
corresponding Fourier data and a set of ﬁles deﬁning the targets. The SplInter algorithm
loops through each segment, and in each processes each SFT according to ﬁgure 3.

4. Testing the SplInter algorithm

We tested the SplInter algorithm against the standard heterodyne method currently
employed for both accuracy and performance. The ﬁrst accuracy test is described in
section 4.1.1 and checked that the Bk/K outputs from the two routines are consistent in
the noiseless case. In section 4.1.3 we check that the noise estimation σk is also accurate,
and that this estimate is consistent with that estimated from the heterodyned BK. In
section 4.1.4 we perform a black-box replacement test, comparing the performance of
our routines end-to-end for the analysis of hardware signal injections in real LIGO data.
Finally we test the algorithm performance in section 4.2, particularly the speed increase

10210310−2410−2210−2010−18Frequency, HzAmplitude Spectral Density, Arbitrary units  SFT1SFT2Spectral Interpolation for detection of continuous gravitational waves

12

Figure 3: Flowchart showing the Spectral Interpolation algorithm during each SFT. This ﬂowchart
runs for each SFT, running on a loop within each science segment, which itself is looped over. The
third outlier removal is not shown, as it does not take place within this loop.

of SplInter compared to the heterodyne routine.

4.1. Accuracy and testing

We now compare the SplInter output, Bk, with the standard heterodyne output, BK
(which we assume to be exact for this comparison), using the mismatch, m, between
the two, deﬁned as

(39)

(cid:12)(cid:12)(cid:12)(cid:12)1 −

m =

(cid:80)
(cid:80)
k Bk,Spl · Bk,het
k Bk,het · Bk,het

(cid:12)(cid:12)(cid:12)(cid:12) .

StartSFTLoadSFTdataCalculateδk,˙δk,fk,˙fk,φkfkwithinSFTrange?Outlierremoval1Signalspread?UseFresnelmodelUsesincmodelCalculateBk,σkusingleastsquaresﬁtOutlierremoval2Outliersremoved?OutputtoﬁlebuﬀerMoresources?NextsourceNextSFTnoﬁrstsourceyesyesnonoyesnoyesSpectral Interpolation for detection of continuous gravitational waves

13

Table 1: Parameters of hardware injection pulsars 4 and 6.

f (1) Hz s−1
f (0) Hz
1403.16 −2.54 × 10−8
148.72 −6.73 × 10−9

PULSAR4
PULSAR6

RA

18h 39m 57.04s −12◦ 27(cid:48) 59.85(cid:48)(cid:48)
23h 55m 0.23s −65◦ 25(cid:48) 21.45(cid:48)(cid:48)

Dec

We deﬁne Bk,het as the average BK value over the duration of the corresponding SFT,
which is equivalent to performing the heterodyne with a ∆t value of 30 minutes.

4.1.1.
Recovery of noiseless signals from isolated pulsars. In the case of a
noiseless signal, the heterodyne and spectral interpolation routines should, ignoring
approximations, agree exactly, as Bk = yk. Figures 4 and 5 show the result of applying
the SplInter and heterodyne routines to noise-free data. The frames and SFTs were made
using lalapps create pulsar signal frame and lalapps MakeSFTs respectively§. We
see that the SplInter and heterodyne B-estimates agree well, and always to better
than 1%. We apply a hybrid interpolation scheme here, using the sinc approximation
when ˙fk is small, and the Fresnel approximation otherwise, with a changeover point at
| ˙fk|∆t2 = 0.1 [15].

Figure 5 shows the importance of using the Fresnel rather than the sinc
approximation for PULSAR4. This source has both a high frequency and a relatively
low declination, leading to a large second order change in phase over the duration of the
SFT.

4.1.2. Recovery of noiseless signals from binary pulsars. The signal delay for a binary
pulsar contains an extra term, ∆Binary , in (5) from the Roemer, Shapiro and Einstein
delays in the binary system itself, and this delay can introduce rapid variations in
apparent frequency. Figure 6 shows a comparison of SplInter and heterodyne results
for all 97 known binary pulsars in the LIGO band and fulﬁlling the critereon for being
analysable with Splinter. We compute the mismatch over one day if the binary period
Pb is <1 d, over the binary period if 1 < Pb < 5 d and over 5 d if Pb > 5 d.

50 of these sources are in systems that show mismatches above 0.1 for SplInter,
and we are therefore unable to use this method for these and maintain accuracy and
sensitivity. The mismatch comes from signiﬁcant high-order frequency derivatives in
these pulsars over the 30 min period of the SFT. The second-order frequency derivative
¨fk is proportional to f (0)a1/P 3
b , where a1 is the projected semi-major axis of the binary
system. Using the pulsars in ﬁgure 6 we set an empirically acceptable upper-limit for
¨fk using 30 min SFTs of

(cid:18) Pb

(cid:19)−3 (cid:46) 10,

f (0)
1 Hz

a1

1 lightsecond

1 day

(40)

§ These routines are within the LALsuite software repository https://www.lsc-group.phys.uwm.
edu/daswg/projects/lalsuite.html

Spectral Interpolation for detection of continuous gravitational waves

14

Figure 4: SplInter Bk (green/cyan/black) and ﬁne heterodyne BK (red) values over one day, with
amplitude on the left and phase on the right, for a noiseless signal corresponding to hardware injection
PULSAR6. Below are the fractional diﬀerence between the two. SplInter values are shown using the
sinc approximation (green), the Fresnel approximation (cyan) and the mixed interpolator (black), which
uses the sinc approximation when | ˙fk|∆t2 < 0.1 and the Fresnel approximation otherwise. m = 0.0029
for the sinc approximation, m = 0.0029 for the mixed interpolation and m = 0.0028 for the Fresnel
approximation. The two methods are equally precise in this case, as the frequency does not signiﬁcantly
change during the SFT length.

and this limit is delineated in ﬁgure 6 for pulsars with gravitational wave frequencies of
10, 100 and 1000 Hz.

4.1.3. Noise estimation tests We tested noise estimation using SFTs and frames with
known levels of white noise but no signal. After running the SplInter and heterodyne
algorithms, we checked that the Bk/K noise estimates were consistent with the injected
value and with each other. We compared noise estimates from the SplInter routine to
noise estimates from the heterodyne routine for noise data with a time-domain variance
of σ2
T = 1. The estimate of the noise from the heterodyne, σH, was obtained using an
average of the variance of the real and imaginary heterodyne parts over the duration of
an SFT, converted into the equivalent noise value for the 30-min cadence of Bk.

We see in ﬁgure 7 that the heterodyne and SplInter noise estimates are consistent,
and that both agree with the injected value of the noise and the expected distribution
of these estimates. The expected distribution is a χ2 distribution with n − 1 degrees of
freedom, where n is the number of data points used to calculate the noise estimate:

∼ χ2(n − 1)
n − 1

σ2
k
σ2

true

.

(41)

02468x 10400.511.52x 10−25|Bk|Time elapsed, s                                                Pulsar 6 Bk side−by−side comparison02468x 104051015Time elapsed, s∠ Bk, rad  Spl SincSpl FresnelSpl Mixedhet02468x 10410−410−310−210−1100Fractional Error in |Bk|Time elapsed, s  Spl SincSpl FresnelSpl Mixed02468x 104−505101520x 10−3Time elapsed, sError in ∠ Bk, radSpectral Interpolation for detection of continuous gravitational waves

15

Figure 5: SplInter Bk (green/cyan/black) and ﬁne heterodyne BK (red) values over one day, showing
amplitude, phase and real/imaginary parts for a noiseless signal corresponding to hardware injection
| ˙fk| is high for this pulsar, and the Fresnel approximation is used by
PULSAR4 (colours as ﬁgure 4.
the mixed interpolator to maintain accuracy. There is a signiﬁcant discrepency in the real part of Bk
when using just the sinc approximation. (m = 0.0101 for sinc, 0.0040 for mixed and 0.0039 for the
Fresnel approximation.

The heterodyne noise estimate used 30 BK data points from each of the real and
imaginary parts of the data, leading to an expected distribution of a χ2 with 59 degrees
of freedom, shown in the ﬁgure by the red dotted line. Here we used the spectral
interpolation algorithm with a bandwidth of 0.3 Hz around the signal frequency, leading
to a χ2 distribution on σ2
k with 1079 degrees of freedom (shown on the ﬁgure as a
blue dotted line). One might get a marginally better noise estimate using a wider
bandwidth, however the frequency dependence of the noise limits this. Additionally,
there are diminishing returns in computational eﬃciency, and a bandwidth of 0.3 Hz is
a good compromise.

4.1.4. Full testing with hardware injections. The LSC and Virgo collaborations inject
artiﬁcial signals into the detector hardware control loops to test analysis pipelines. Here
we show the results of running both the heterodyne and SplInter pipelines on two
hardware-injected pulsars ( ‘PULSAR4’ and ‘PULSAR6’, the parameters of which are
given in table 1) in just under four months of LIGO S6 data from the Hanford detector
(LHO). During this interval the LHO duty cycle was 47%, giving ∼ 5 × 106 s of science
data. With 4 months of data the injections can be recovered with a high signal-to-
noise ratio, but with the posteriors retaining suﬃcient width to usefully assess our noise
estimates. Table 2 lists the returned signal-to-noise ratios for the two pulsars using
both the SplInter and heterodyne pipelines, running the latter with both a Gaussian
and Student’s t likelihood.

02468x 10400.20.40.60.81x 10−23|Bk|Time elapsed, s                                                Pulsar 4 Bk side−by−side comparison02468x 104−6−4−2024Time elapsed, s∠ Bk, rad  Spl SincSpl FresnelSpl Mixedhet02468x 104−4−20246x 10−24Time elapsed, sRe{Bk}02468x 104−0.500.5x 10−23Time elapsed, sIm{Bk}02468x 10410−410−310−210−1100Fractional Error in |Bk|Time elapsed, s  Spl SincSpl FresnelSpl Mixed02468x 104−0.0500.050.10.15Time elapsed, sError in ∠ Bk, rad02468x 10410−510−410−310−210−1100Time elapsed, sFractional Error in Re{Bk}02468x 10410−410−310−210−1Time elapsed, sFractional Error in Im{Bk}Spectral Interpolation for detection of continuous gravitational waves

16

Figure 6: Binary period vs projected semi-major axis for targeted binary pulsars, indicating which
binary pulsars can be analysed using SplInter and which cannot. We include an indication of the
empirical criteria we set for analysis of a target in a binary system, given in (40), for pulsars with
source frequency of 10, 100 and 1000 Hz.

Figure 7: A histogram of standard deviation estimates of white noise from SplInter (top) and heterodyne
(bottom), with the mean estimated values shown as dashed lines. Also shown is the true value of the
noise (black dashed line) and the expected distributions of these values (dotted lines).

−1.5−1−0.500.511.522.53−2−1.5−1−0.500.511.52log10(Binary Period, Pb/days)log10(projected semi−major axis, a1/ls)  All targetsAnalysedcriteria, 10Hzcriteria, 100Hzcriteria, 1000Hz0.60.70.80.911.11.21.31.41.51.60246810σk2 est / σk2 inProbability Density  True NoiseSplInter EstimatesMean Spl Estimateχ2, 1079 DOF0.60.70.80.911.11.21.31.41.51.60123456σk2 est / σk2 inProbability Density  True NoiseHeterodyne EstimatesMean Het Estimateχ2, 59 DOFSpectral Interpolation for detection of continuous gravitational waves

17

Table 2:
months of LIGO Hanford S6 strain data,
lalapps pulsar parameter estimation nested [16]

SNRs of hardware injections 4 and 6 recovered by the two pipelines from four
calculated using the nested sampling algorithm

Bk/K algorithm

SplInter

heterodyne

Likelihood distribution

Gaussian

Student’s t

PULSAR4
PULSAR6

234.67
16.02

251.99
17.22

235.23
17.18

We see that the SplInter results are consistent with those from the heterodyne
pipeline, with SNR values around 7% below those from heterodyne. This is to be
expected in real data containing segments and lines as the ﬁltering is diﬀerent in the
two pipelines. Most of this drop in SNR (around 5%) is due to SplInter’s need for
contiguous 30-min stretches of science data, rather than the 60 s stretches used by the
heterodyne pipeline.

Figures 8 and 9 show the posterior distributions of the four source parameters
Again, in this example the

determined in targeted searches, h0, φ0, cos ι and ψ.

Figure 8: Posterior distributions on h0, φ0, cos ι and ψ for hardware injection PULSAR4 using four
months of LHO S6 data. The blue line shows posteriors made using SplInter for the calculation of Bk/K,
and the red and green lines show the heterodyne algorithm with Gaussian and Student’s t-likelihood
distribution respectively. The vertical black line shows the injection value.

posteriors generated by the two pipelines show suﬃciently good agreement to allow the
SplInter pipeline to replace the heterodyne pipeline without a systematically signiﬁcant
impact on overall performance.
In ﬁgure 8 the discrepancies between the injected
values and the recovered posteriors are within the range expected due to calibration
uncertainties.

4.24.44.6x 10−2300.511.52x 1024h0Probability Density                                   PULSAR04 Parameters−0.66−0.65−0.64−0.63050100ψ0.270.280.290.30.31050100Probability Densitycos ι0.840.860.880.90.92050100φ0Spectral Interpolation for detection of continuous gravitational waves

18

Figure 9: Posterior distributions on h0, φ0, cos ι and ψ for hardware injection PULSAR6 using four
months of LHO S6 data. Colour scheme as in ﬁgure 8.

4.2. Speed testing

The purpose of SplInter is to decrease the computational cost of targeted searches
without signiﬁcantly aﬀecting sensitivity. We now consider the speed of SplInter in
comparison with the heterodyne algorithm. The fundamental speed increase comes from
the fact that we do not require the entire data bandwidth for our estimate of Bk. SplInter
only requires a small frequency band of less than 1 Hz, whereas the heterodyne algorithm
initially starts with a dataset containing the equivalent of 16384 Hz. In addition to this,
we can analyse the sources in parallel for each SFT, reducing overall ﬁle input/output
time when alaysing multiple sources.

It is simplest to compare the total algorithm time taken per source, as the
heterodyne algorithm simply takes the sources one at a time. However the SplInter
execution time is not linear in the number of sources, so we also compare the total time
per source, for one, ten, one hundred and one thousand sources at a time. These tests
use the mixed interpolation scheme, so that we gain accurate timing results, including
the occasional use of the Fresnel approximation.

Table 3 and ﬁgure 10 show the amount of time taken to analyse the sources for
a day of continuous data using both the heterodyne and SplInter routines. Table 3
also shows the computational improvement in CPU hours per source per hour of data.
We see that the SplInter routine can improve the computational eﬃciency of the Bk/K
calculation by up to two orders of magnitude for single source input, and four orders
of magnitude if we use multiple source input. These analyses were performed on the
atlas computing cluster at the Albert Einstein Institute, Hannover.

The improvement in computational eﬃciency is not just limited to the Bk

5678x 10−250510x 1024h0Probability Density                                   PULSAR06 Parameters0.30.40.50.60510ψ−0.3−0.2−0.1051015Probability Densitycos ι22.12.20510φ0Spectral Interpolation for detection of continuous gravitational waves

19

Figure 10: Histograms of the average time taken to analyse sources for a day of continuous data for the
SplInter algorithm. Times are given in seconds per day per source. The diﬀerent coloured histograms
show the diﬀerent number of sources used in each analysis. The horizontal axis markers denote the
mean values for these times for the diﬀerent numbers of sources.

Table 3: Median time taken to analyse sources for a day of data using heterodyne and Spectral
Interpolation in seconds and CPU core hours per number of sources per hour of data for each
interferometer.

Sources

Time/day (s)
CPUh/N/h

1

Heterodyne
5.0×102
5.8×10−3

SplInter

1
1.0

1.1×10−5

10
1.7

1.9×10−6

100
2.5

2.9×10−7

1000
10.9

1.2×10−7

calculation stage. The lower cadence of the SplInter Bk data results in fewer data
points containing a similar amount of information and hence faster calculations at the
parameter estimation stage. This does however come with a cost: SplInter requires
contiguous 30-min periods and lacks the ﬂexibility of the heterodyne code in that respect.

5. Discussion

We have introduced SplInter, a new spectral interpolation method of calculating the
down-sampled complex amplitude of a continuous wave signal with relative motion
and source rotation eﬀects removed. We have shown that this algorithm improves the
computational eﬃciency of this part of the Bayesian targeted and G-statistic pipelines
by up to four orders of magnitude, and have explained how using longer time steps for
Bk/K with an estimate of the noise has a knock-on eﬀect of improving computational
speed in the parameter estimation stage. We have also shown that the SplInter routine
performs well in comparison to the heterodyne routine in most cases, and that there

−2−1.5−1−0.5000.10.20.30.40.50.60.70.80.91log10(Total time per source per day, seconds)Fraction of repeats  Single source10 sources100 sources1000 sourcesSpectral Interpolation for detection of continuous gravitational waves

20

is no signiﬁcant drop in the recovered SNR. The increase in computational eﬃciency
means that the search is a viable rapid follow-up pipeline for all-sky or directed search
candidates, and preliminary results for this secondary use are in [15]. This method
has been used in dual-harmonic searches for gravitational waves from spinning neutron
stars [17], in which the Spectral Interpolation algorithm was found to improve the upper
limit on J1748−2446ac by a factor of 1.7 compared to [2] by the use of the line removal
routine.

Tests on the Bk output of the SplInter and heterodyne output have shown that
the SplInter algorithm with 30 min SFTs is not suitable for sources in binary systems
with relatively short binary periods, this is as the frequency of the signal will alter
signiﬁcantly and non-linearly over the course of the SFT. Work is planned to provide a
solution to this problem, which could include switching between the time and frequency
domain to make shorter Fourier transforms in the cases of high frequency variability
during the 30 min duration of the SFTs. The inverse FFT and FFT required to do this
would not be computationally expensive, due to the eﬃciency of the FFT and inverse
FFT algorithms. This method could be able to be used in a ﬂexible way, calculating
the required timestep for the new transforms for each SFT, meaning that the number
of returned data points is optimal.

6. Acknowledgements

The authors would like to thank members of the Institute for Gravitational Research
at the University of Glasgow and the LIGO Scientiﬁc Collaboration continuous waves
group for constructive comments and discussion. In particular we would like to thank
Damir Buskulic for useful comments in preparation of this manuscript. GSD is funded
by a studentship from the Science and Technologies Facilities Council. MP and GW are
funded by the STFC through grant number ST/L000946/1. This document has been
assigned the LIGO Document Control Center number LIGO-P1500258.

References

[1] J Aasi et al. Gravitational-waves from known pulsars:

results from the initial detector era.

Astrophys. J., 785:119, 2014. http://arxiv.org/abs/1309.4027.

[2] B. P. Abbott et al. Searches for Gravitational Waves from Known Pulsars with Science Run 5

LIGO Data. Astrophys. J., 713:671–685, April 2010.

[3] R. Dupuis and G. Woan. Bayesian estimation of pulsar parameters from gravitational wave data.

Phys. Rev. D, 72:102002, 2005. http://arxiv.org/abs/gr-qc/0508096v2.

[4] P. Astone, A. Colla, S. D’Antonio, S. Frasca, and C. Palomba. Coherent search of continuous
gravitational wave signals: extension of the 5-vectors method to a network of detectors. J.
Phys.: Conf. Ser., 363:012038, 2012.
[5] P. Jaranowski and A. Kr´olak. Searching for gravitational waves from known pulsars using the F
and G statistics. Classical and Quantum Gravity, 27(19):194015, October 2010.

[6] R. Dupuis. Bayesian searches for gravitational waves from pulsars. PhD thesis, University of

Glasgow, 2004.

Spectral Interpolation for detection of continuous gravitational waves

21

[7] B. Abbott et al. Upper limits on gravitational wave emission from 78 radio pulsars. Phys. Rev

D, 76(4):042001, August 2007.

[8] P. Jaranowski and A. Kr´olak A. Analysis of Gravitational-Wave Data. Number 29 in Cambridge
Monographs on Particle Physics, Nuclear Physics and Cosmology. Cambridge University Press,
Cambridge, September 2009.

[9] Australia Telescope National Facility. The ATNF pulsar database. www.atnf.csiro.au/people/

pulsar/psrcat/.

[10] R. N. Manchester, G. B. Hobbs, A. Teoh, and M. Hobbs. The Australia Telescope National Facility

Pulsar Catalogue. Astron. J., 129:1993–2006, April 2005.

[11] W. H. Press, S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery. Numerical Recipes: The
Art of Scientiﬁc Computing. Cambridge University Press, Cambridge, United Kingdom, second
edition, 1992. Available online http://apps.nrbook.com/c/index.html.

[12] G. Woan. The Cambridge Handbook of Physics Formulas. Cambridge University Press,

Cambridge, United Kingdom, 2000.

[13] B. Abbott et al. Setting upper limits on the strength of periodic gravitational waves from PSR
J1939+2134 using the ﬁrst science data from the GEO 600 and LIGO detectors. Phys. Rev D,
69(8):082004, April 2004.

[14] G. Mendell and K. Wette. Using generalized powerﬂux methods to estimate the parameters of

periodic gravitational waves. Class. Quantum Grav., 35:114044, 2008.

[15] G. S. Davies. Bayesian searches for continuous gravitational waves in the frequency domain. PhD

thesis, University of Glasgow, 2015.

[16] M. Pitkin, C. Gill, J. Veitch, E. Macdonald, and G. Woan. A new code for parameter estimation
in searches for gravitational waves from known pulsars. J. Phys.: Conf. Ser., 363(1):012041,
June 2012.

[17] M. Pitkin, C. Gill, D. I. Jones, G. Woan, and G. S. Davies. First results and future prospects
for dual-harmonic searches for gravitational waves from spinning neutron stars. MNRAS,
453(4):4399–4420, 2015.

