A fully eﬃcient time-parallelized quantum optimal control algorithm

1 Department of mathematical science, New Jersey Institute of Technology, New Jersey, USA

2 CEREMADE, Universit´e Paris Dauphine, Place du Mar´echal De Lattre De Tassigny, 75775 Paris Cedex 16, France

M. K. Riahi1, J. Salomon2, S. J. Glaser3, and D. Sugny4,5∗

3Department of Chemistry, Technische Universit¨at M¨unchen,

6
1
0
2

 
r
a

M
3

 

 
 
]

.

C
O
h
t
a
m

[
 
 

1
v
7
3
2
1
0

.

3
0
6
1
:
v
i
X
r
a

Lichtenbergstrasse 4, D-85747 Garching, Germany

4 Laboratoire Interdisciplinaire Carnot de Bourgogne (ICB),

UMR 5209 CNRS-Universit´e de Bourgogne, 9 Av. A. Savary,

BP 47 870, F-21078 DIJON Cedex, FRANCE and

5 Institute for Advanced Study, Technische Universit¨at M¨unchen,

Lichtenbergstrasse 2 a, D-85748 Garching, Germany

(Dated: March 4, 2016)

We present a time-parallelization method that enables to accelerate the computation of quantum
optimal control algorithms. We show that this approach is approximately fully eﬃcient when based
on a gradient method as optimization solver: the computational time is approximately divided by
the number of available processors. The control of spin systems, molecular orientation and Bose-
Einstein condensates are used as illustrative examples to highlight the wide range of application of
this numerical scheme.

PACS numbers: 05.45.-a,02.30.Ik,45.05.+x

I.

INTRODUCTION

The general goal of quantum control is to actively ma-
nipulate dynamical processes at the atomic or molecular
scale [1, 2].
In recent years, the advances in quantum
control have emerged through the introduction of appro-
priate and powerful tools coming from mathematical con-
trol theory and by the use of sophisticated experimental
techniques to shape the corresponding control ﬁelds [3–
6]. In this framework, diﬀerent numerical optimal con-
trol algorithms [7–9] have been developed and applied
to a large variety of quantum systems. Optimal control
was used in physical chemistry in order to steer chemical
reactions [3], but also for spin systems [10, 11] with ap-
plications in Nuclear Magnetic Resonance [7, 12–16] and
Magnetic Resonance Imaging [17–19]. Recently, optimal
control has attracted attention in view of applications to
quantum information processing, for example as a tool
to implement high-ﬁdelity quantum gates in minimum
time [4, 20, 21]. Generally, algorithms can also be de-
signed to account for experimental imperfections or con-
straints related to a speciﬁc material or device [4]. The
possibility of including such constraints renders optimal
control theory more useful in view of experimental appli-
cations and helps bridge the gap between control theory
and control experiments.

The standard numerical optimal control algorithms
based on an iterative procedure compute the control
ﬁelds through many time propagations of the state of
the system, which can be prohibitive for systems of large
dimensions in terms of computational time. This nu-
merical limit can be bypassed by making use of parallel

∗Electronic address: dominique.sugny@u-bourgogne.fr

computing [22–24]. In the case the computational time is
divided by the number of computers, the method is said
to be fully eﬃcient. This full eﬃciency can be viewed as
the physical limit in terms of performance of a parallel
algorithm. While in applied mathematics diﬀerent tech-
niques have been developed using space or time decom-
position [22, 24], very little has been done in quantum
mechanics. The exponential growth of the Hilbert space
dimension with the system size makes this question even
more crucial in order to simulate the dynamics of com-
plex quantum systems. Note that quantum control com-
putations can also be speeded up by the parallelization
of matrix exponential algorithms [25, 26] and by paral-
lelizing density operator time evolutions using minimal
sets of pure states [53].

This paper is not aimed at proposing a new opti-
mization approach, but rather at describing and study-
ing a general framework, namely the Intermediate State
Method (ISM), introduced in [24], which uses a time-
parallelization to speed up the computation of opti-
mal control ﬁelds. We investigate the eﬃciency of ISM
on three benchmark quantum control problems, ranging
from the control of coupled spin systems and the control
of molecular orientation to the control of Bose-Einstein
condensates. As a by-product, we show under which con-
ditions ISM can be made fully eﬃcient.

The paper is organized as follows.

Section II is
dedicated to the description of the time-parallelization
method. The numerical schemes involved in this algo-
rithm are deﬁned in Sec. III. Numerical results on the
control of spin systems, molecular orientation and Bose-
Einstein condensates are presented in Sec. IV. Conclusion
and prospective views are given in Sec. V.

II. THE TIME-PARALLELIZATION METHOD

We ﬁrst introduce the optimal control problem and
we derive the corresponding optimality conditions. We
consider pure quantum states and we assume that the
time evolution is coherent. Note that the formalism can
be easily extended to mixed states or to the control of
evolution operators [27]. The control process is aimed at
maximizing the transfer of population onto a target state,
but modiﬁcation of the algorithms in view of optimizing
the expectation value of an observable is straightforward.
The dynamics of the quantum system is governed by the
Hamiltonian H. The initial and target states are denoted
by |ψii and |ψf i, respectively and the general state of
the system at time t, by |ψ(t)i. The dynamics of the
quantum system is governed by the Schr¨odinger equation:

i∂t|ψ(t)i = H(u(t))|ψ(t)i,

(1)

where u(t) is the ﬁeld to be determined. The control
time T is ﬁxed. The objective of the control problem is
to maximize the ﬁgure of merit J

2

|χ(t)i

•

•

•

•

|ψ(t)i

•

|ψf i

(|ϕu

ni)n=1,··· ,5

|χn(t)i

•

t = T

|ψii

•

t = 0

CPU

CPU

CPU

CPU

CPU

1

2

3

4

5

•

tn

|ψn(t)i

tn+1

FIG. 1: Schematic description of the Intermediate state
method (see the text for details).

We then introduce in each sub-interval the optimal
Jn[|ϕui, un] deﬁned by the maxi-

control problem max

un

mization of the sub-functional:

J [u] = ℜ[hψ(T )|ψf i] −

α

2 Z T

0

u(t)2dt,

Jn[un, |ϕui] = −

1
2

|||ψn(tn+1)i − |ϕu

n+1i||2

α being a positive parameter which expresses the relative
weight between the projection onto the target state and
the energy of the control ﬁeld. A necessary condition to
ensure the optimality of u is given by the cancellation of
the gradient of J with respect to u [7]:

∇J [u](t) = −αu(t) + ℑ[hχ(t)|∂u(t)H(u(t))|ψ(t)i] = 0,

where |χ(t)i is the adjoint state that satisﬁes

i∂t|χ(t)i = H(u(t))|χ(t)i,

(2)

(3)

with the ﬁnal condition |χ(t = T )i = |ψf i.

We now present ISM. A schematic description is dis-
played in Fig. 1. The main idea consists in consider-
ing a combination of the trajectories followed by |ψ(t)i
and |χ(t)i [28]. Given N ∈ N, we decompose the in-
[0, T ] into a partition of sub-intervals [0, T ] =
terval
∪N −1
n=0 [tn, tn+1], with 0 = t0 < · · · < tN = T . The par-
allelization strategy is based on this decomposition. We
consider an arbitrary control u and we introduce the se-
quence |ϕui = (|ϕu
ni)n=0,··· ,N that interpolates the state
and adjoint state trajectories at time tn as follows:

|ϕu

ni =

T − tn

T

|ψ(tn)i +

tn
T

|χ(tn)i,

(4)

where |ψ(t)i and |χ(t)i are deﬁned by Eqs. (1) and (3),
respectively. Note that |ϕui does not sample any usual
dynamics, e.g. |ϕui does not correspond to a solution of
Eq. (1). Its initial and ﬁnal states are |ϕu(0)i = |ψ0i and
|ϕu(T )i = |ψf i, respectively. The choice of intermediate
states made in Eq. (4) is crucial to demonstrate Theorem
1 below [24].

−

αn

2 Z tn+1

tn

un(t)2dt,

with 0 ≤ n ≤ N − 1. In this problem, the state |ψni is
deﬁned on [tn, tn+1] by:

i∂t|ψn(t)i = H(u(t))|ψn(t)i,

(5)

starting from |ψn(tn)i = |ϕu

ni. The penalization coeﬃ-

cient is deﬁned by αn =

α. Since

tn+1 − tn

T

Jn[un, |ϕui] = −

1
2

|||ψn(tn+1)i||2 −

1
2

|||ϕu

n+1i||2

+ℜ[hψn(tn+1)|ϕu

n+1i] −

αn

2 Z tn+1

tn

un(t)2dt,

maximizing Jn with respect to u is equivalent to maxi-
mize a ﬁgure of merit of the form: ℜ[hψn(tn+1)|ϕu
n+1i] −
αn

In this way, each sub-problem has

un(t)2dt.

2 Z tn+1

tn

the same structure as the initial one.

We now review some properties of the time decompo-
sition in order to establish the relation with the original
optimal control problem. Given an arbitrary trajectory
|ϕ(t)i, we deﬁne an auxiliary ﬁgure of merit:

Jk[u, |ϕi] =

N −1

Xn=0

βnJn[un, |ϕi],

with βn =

T

tn+1 − tn

. A ﬁrst relation between Jk and J

is given in Theorem 1 (see Ref. [24] for the proof).

Theorem 1. Given an arbitrary control u, we have:

2. While Err > η, do:

3

|ϕui = argmax|ϕi(cid:0)Jk[u, |ϕi](cid:1).

Moreover, the following relation is satisﬁed:

Jk[u, |ϕui] = J [u].

As a by-product, this Theorem allows us to compute in
parallel J [u], knowing only the sequence |ϕui. A similar
relation also holds between the gradients of the function-
als, as stated in Theorem 2.

Theorem 2. Given an arbitrary control u, we have:

∇J [u]|[tn,tn+1] = βn∇Jn[u|[tn,tn+1], |ϕui].

This result provides a new interpretation of the
time-parallelized method since the sequence |ϕu(tn)i,
n = 0, · · · , N of intermediate states enables the decom-
position of the computation of the gradient.

Proof: Let us consider a ﬁxed value n, with 0 ≤ n ≤
N − 1, t ∈ [tn, tn+1] and denote by |χn(t)i and |ψn(t)i
the trajectories deﬁned by

i∂t|χn(t)i = H(u(t))|χn(t)i,

and

(a) Compute on [0, T ] the trajectories |ψ(k)(t)i
and |χ(k)(t)i associated with u(k) according to
Eqs. (1) and (3).

(b) Compute |ϕ(k)(t)i = |ϕu(k)

(t)i according to

Eq. (4).

(c) On each sub-interval [tn, tn+1] compute in par-
allel an approximation of the solution u(k+1)
of the problem max
un

Jn[un, |ϕki].

n

(d) Deﬁne u(k+1) as the concatenation of the con-

trols u(k+1)

n

, n = 1, · · · , N − 1.

(e) Set Err =

N −1

Xn=0 Z Tn+1

Tn

k∇Jn[u(k+1)

|[tn,tn+1]](t)kdt.

(f ) Set k = k + 1.

Step 2a contradicts the parallelization paradigm, since
it requires a sequential solving of an evolution equation
on the full interval [0, T ]. We will see how this problem
can be solved in Sec. IV. However, note that the most
time consuming step, namely Step 2c, is achieved in par-
allel.

i∂t|ψn(t)i = H(u(t))|ψn(t)i,

III. DESCRIPTION OF THE NUMERICAL

METHODS USED IN THE PARALLELIZATION

with |χn(tn+1)i = |ϕu
ni. For t ∈
[tn, tn+1], we repeat with Jn the computation made to
derive the gradient of J :

n+1i and |ψn(tn)i = |ϕu

∇Jn[u|[tn,tn+1], |ϕui](t) = ℑ(cid:0)hχn(t)|∂u(t)H|ψn(t)i(cid:1)

−αnu(t).

Using the fact that:

|χn(t)i =

(T − tn+1)

T

|ψ(t)i +

tn+1

T

|χ(t)i,

and

|ψn(t)i =

(T − tn)

T

|ψ(t)i +

tn
T

|χ(t)i,

we arrive at:

∇Jn[u|[tn,tn+1], |ϕui](t) =

1
βn

ℑ(cid:0)hχ(t)|∂u(t)H|ψ(t)i(cid:1)

−

u(t),

α
βn

Diﬀerent schemes can be used to implement the time-
parallelized algorithm in practice. This requires two in-
gredients, a numerical scheme to solve approximately the
evolution equations of Steps 2a and 2c and an optimiza-
tion procedure for the sub-problem of Step 2c. In this
paragraph, we give some details about the used numeri-
cal methods and we explain how the full eﬃciency can be
approached in the case of quantum systems of suﬃciently
small dimensions.

In the diﬀerent numerical examples, we consider two
numerical solvers for the Schr¨odinger Equation (1): a
Crank-Nicholson scheme and a second order Strang op-
erator splitting. Such solvers can be described through
an equidistant time-discretization grid ta = t0 < t1 <
· · · < tJ = tb of an interval [ta, tb]. The time step is de-
noted by τ = (tb − ta)/(J − 1) for some J ∈ N. For each
time grid point tj, we introduce the state |ψji and the
control uj, which are some approximations of the exact

state |ψ(tj )i and of the exact control ﬁeld u(

).
The Crank-Nicholson algorithm is based on the follow-

2

tj + tj+1

and the result follows.(cid:3)

ing recursive relation:

We now give the general structure of ISM. Let 1 ≥ η >

0 and u(0) be an initial control ﬁeld.
Algorithm 1.

i
τ

(|ψj+1i − |ψji) =

H(uj)

2

(|ψj+1i + |ψji),

(6)

which can be rewritten in a more compact form as

1. Set Err = 1, k = 0.

(Id + Lj)|ψj+1i = (cid:0)Id − Lj(cid:1)|ψj i ,

(7)

τ
2

iτ
2

where Id is the identity operator and Ln := i

H(un(t)).
The second order Strang operator splitting is rather
used in the case of inﬁnite dimensional systems. Indeed,
this method is particularly relevant when the Hamilto-
nian includes a diﬀerential operator. We consider, for
example, the case H(u(t)) = −∆ + V (u(t), x) where ∆
denotes the Laplace operator and V (u(t)) = V (u(t), x)
is a scalar potential. In this case, Strang’s method gives
rise to the iteration:
iτ
2

|ψj+1i = exp(−

∆) exp(−iτ V (uj)) exp(−

∆)|ψji.

(8)
In Eq. (8), each product can be determined very quickly
since the operator V (uj) is diagonal in the physical space,
while ∆ is generally diagonal in the Fourier space, and
the change of basis can be achieved eﬃciently by fast
Fourier transform.

These schemes provide a second order approximation
with respect to time, which leads to an accurate approx-
imation of the trajectory |ψ(t)i. In addition, both prop-
agators automatically preserve the normalization of the
wave function, which is very interesting to avoid non-
physical solutions. A speciﬁc advantage of these solvers
is that they allow an exact diﬀerentiation with respect to
the control in the discrete setting, in the case of scalar
control for the Strang solver (8) and in any case for the
Crank-Nicholson solver (6).

We now explain how the full eﬃciency can be reached
with the parallelization algorithm. Both solvers lead to
a linear relation between the initial and the ﬁnal states
of the system of the form:

|ψJ i = M (u)|ψ0i.

4

We consider the case of a Crank-Nicholson solver, but
similar computations can be made for Strang’s solver.
We introduce the functional  Lτ deﬁned by:

 Lτ [u, |ψi, |χi] = Jτ [u] + ℜ(

hχj|Id + Lj|ψj+1i

Xj=0

J−1

−hχj|Id − Lj|ψji).

Since Lj is anti-hermitian, diﬀerentiating  Lτ with respect
to |ψi gives rise to the discrete adjoint evolution equation:

(Id − Lj−1)|χj−1i = (Id + Lj)|χji,

with the ﬁnal condition (Id − LJ−1)|χJ−1i = |ψJ i. To
derive the gradient of Jτ [u], it remains to diﬀerentiate
Lτ with respect to u, which leads to the j-th entry of the
gradient of Jτ :

(∇Jτ [u])j = αdtuj +

iτ
2

hχj|∂uH|ψj+1 + ψji.

In the sequel, we use this result to implement a con-
stant step gradient method: the approximation of the
solution of the sub-problem in Step 2d is computed by
iterating on ℓ in the formula:

uℓ+1 = uℓ − ρ∇Jτ (uℓ),

(9)

for some ρ > 0.

Other optimization methods such as pseudo or quasi-

Newton approaches can be used to perform Step 2c.

As an example, for the Crank-Nicholson solver, we have:

IV. NUMERICAL RESULTS

M (u) = ΠJ−1

j=0 (Id + Lj)−1(Id − Lj).

The matrix M (u) can be computed in parallel during
the propagation of Eq. (7). Knowing the state |ψ0i, this
matrix enables to compute in one matrix-vector prod-
uct |ψJ i. As a consequence, this propagator assembling
technique allows us to avoid the sequential solving on
the full interval [0, T ] in Step 2a of Algorithm 1. More
precisely, assume for example that at iteration k of Al-
gorithm 1 and on each sub-interval, a matrix Mn(u(k)
n ) is
computed and transmitted to the main processor. The
computations of the sequences |ψ(tn)i and |χ(tn)i, that
are required to deﬁne the intermediate states |ϕ(k)(tn)i,
can be achieved in 2N matrix-vector products. Due to
storage and communications issues of the matrices, note
that this approach can only be used for quantum systems
of small dimensions.

We conclude this paragraph by presenting a way to
derive the gradient of time-discretized ﬁgures of merit of
the form:

Jτ [u] = ℜhψJ |ψf i −

α
2

τ

J−1

Xj=0

u2
j .

This section is dedicated to some numerical results ob-
tained with ISM, used with the schemes presented in
Sec. III. The eﬃciency of this approach is illustrated
on three benchmark examples in quantum control [3, 4],
namely the control of a system of coupled spins, the con-
trol of molecular orientation and the control of a Bose-
Einstein condensate whose dynamics is governed by the
Gross-Pitaevskii equation.

A. Control of a system of ﬁve coupled spins

In this paragraph, we consider the control of a system
of coupled spin 1/2 particles. The principles of control in
Nuclear Magnetic Resonance being described in diﬀerent
books [10, 11, 18], only a brief account will be given here
in order to introduce the used model. We investigate the
control of a system of coupled spins by means of diﬀerent
magnetic ﬁelds acting as local controls on each spin. Each
ﬁeld only acts on one spin and does not interact with
the others, i.e. the spins are assumed to be selectively
addressable.

We introduce a system of 5 coupled spins [29, 30], the
evolution of which is described by the following Hamilto-
nian:

H = H0 +

5

Xk=1

[uk

x(t)I (k)

x + uk

y(t)I (k)

y

]

(10)

where the operators I (k)
Pauli matrices which only act on the kth spin:

and I (k)

x

y

are, up to a factor,

Ix := (cid:18) 0

1/2

1/2

0 (cid:19) , Iy := (cid:18) 0 −i/2

0 (cid:19) ,

i/2

Iz := (cid:18) 1/2

0 −1/2 (cid:19) .

0

We assume that the free evolution Hamiltonian H0 is
associated with a topology [29, 30] deﬁned by:

H0 = 2π(J12I (1)
+J23I (2)

z I (3)

z + J25I (2)

z I (5)

z I (2)

z + J13I (1)

z I (3)

z +
z + J34I (3)

z I (4)

z ).

Note that this model system is valid in heteronuclear
spin systems if the coupling strength between the spins
is small with respect to the frequency shifts [10, 11]. The
coupling constant between the spins is taken to be uni-
form and equal to Jp = 140. For the numerical simu-
lations, we move to the density matrix formalism with
I (1)
as initial and ﬁnal states, respectively. The
x
control time is ﬁxed to T = Jp/10. The parameter α is
set to 0.

and I (5)

x

For the time-parallelization, we consider a uniform
grid, so that tn+1 − tn = T /N , for n = 0, · · · , N − 1 and
we compare the results for diﬀerent values of N . The time
discretization is done by the Crank-Nicholson method of
Eq. (6) with the time step T /215. In Step 2c, one iter-
ation of the constant step gradient descent method [see
Eq. (9)] is used, with ρ = 104. As a result of Theorem 2,
the values obtained after a given number of iterations are
the same for all values of N . In this way, the method is
almost fully eﬃcient. It is actually equivalent to a stan-
dard gradient method, except that the computation of
the gradient is done in parallel. The computational ef-
fort is therefore exactly divided by the number of proces-
sors, and the full eﬃciency is only limited by the memory
usage and also by the communication between proces-
sors required by the update of the intermediate states in
Steps 2a and 2b of the algorithm. Figure 2 displays the
ﬁgure of merit with respect to the parallel computational
time.

In order to evaluate more precisely the eﬃciency of the
algorithm, we give some details about the speedup of the
numerical computations. Numerical simulations are im-
plemented with Matlab, where the parallelization is real-
ized using the open source library MatlabMPI [31]. The
tests have been carried out on a shared memory machine
under a linux system with a core of Intel(R) Xeon(R)

5

N=1
N=2
N=4
N=8
N=16

1e+0

1e+1

Computational time

1e+2

1

t
i
r
e
m

 
f
o
 
e
r
u
g
i
f
 
d
e
z

i
l

a
m
r
o
N

0.8

0.6

0.4

0.2

0

FIG. 2: Evolution of the normalized ﬁgure of merit at each
iteration and for diﬀerent values of N (the number of proces-
sors) with respect to computational time (wall-clock time) in
the case of the control of a spin system. As stated in Theo-
rem 2, the values obtained after a given number of iterations
are the same for all values of N . Log-scale is used in the
x-axis.

CPU type (@ 2.90GHz with 198 Giga byte shared mem-
ory). The parallel computation uses N processors where
N stands, as above, for the number of sub-intervals of
the time domain decomposition. In Fig. 3, parallel nu-
merical performances are compared with the sequential
performance which is obtained when a single processor is
used to treat the whole time domain. Given ε > 0, we
introduce the quantities S(ε, N ) := t(ε, 1)/t(ε, N ) and
Ef f (ε, N ) := 102(S(ε, N )/N ), as the parallel speedup
and the eﬃciency respectively, where t(ε, N ) denotes the
computational time (with N processors) necessary to
reach a value J [uk] such that J [u∞] − J [uk] < ε, where
u∞ is the value of the sequence uk obtained at the nu-
merical convergence. Figure 3 displays results about the
speedup of the parallel implementation. We observe that
the algorithm behaves as expected when increasing the
number of processors. Despite the use of Input/Output
(I/O) data ﬁles to ensure the communication between
CPUs (as required by MatlabMPI), ISM achieves a lin-
ear scalability. A proﬁling of the parallel computing is
reported in Fig. 4 where we present the time spent to
achieve the communications for the master and one slave
processors during 20 iterations of the optimization pro-
cess. As expected, the speedup is independent on the
value of ε. This point is clearly exhibited in Table I.
The communications in MatlabMPI are of point-to-point
type through I/O ﬁles, a for-loop is therefore necessary
to cover all sender and receiver processors. In this view,
a slave processor waits for its turn in order to be able
to read the message from the master processor. On the
contrary, the printing message addressed to the master
processor is done on slave processors and hence is non-
blocking.

Figure 4 shows that, in the case N = 4, the slave
processor mainly works on parallel computing. Its com-
munication part is shared between sending and receiving
data. The sending part is longer due to the amount of

p
u
d
e
e
p
S

 8

 7

 6

 5

 4

 3

 2

 1

MatlabMPI
Linear

1

2

4

8

Number of processors

FIG. 3: Speedup S(1.74, N ) of the parallel implementation (y-
axis) with respect to the number of processors N (x- axis).
The blue dots indicate the speedup achieved with MatlabMPI
for ε = 1.74 (see Table I for details). The red solid line
corresponds to a linear evolution of the speedup as a function
of N .

Scattering
Scattering

Computing
Computing

Receiving
Receiving
Receiving

Sending

Gathering

Master processor

Slave processor

FIG. 4: MPI proﬁling of the tasks performed by the mas-
ter and a slave processors with N = 4 and for 20 iterations
of the optimization process. The proportions are computed
separately regarding the own wall-clock timing of a given pro-
cessor.

data to treat, which consists not only of partial control
but also of propagator matrices.

1

N processors
Ef f (0.32, N ) 100% 100.5% 99.7 % 100.9%
Ef f (0.89, N ) 100% 100.2 % 99.2 % 99.9%
Ef f (1.74, N ) 100% 100.2% 99.2% 99.9%

2

4

8

TABLE I: Eﬃciency Ef f (ε, N ) of the parallel MPI implemen-
tation. Note the full eﬃciency performance through several
snapshots in the running parallel computing.

The full eﬃciency of ISM is clearly shown in the numer-
ical simulations, see Table. I. Note that, in some cases,
the eﬃciency is greater than 100% because the full prob-
lem requires more memory, and thus spends more time in
hardware storage processes. On the contrary, the parallel
computing uses a smaller amount of data. Also, depend-

6

ing on the processor architecture, the computational time
shall behave nonlinearly with respect to the size of the
data. Similar linear and super linear speedup have been
observed in Ref. [32] with MatlabMPI.

B. Optimal control of molecular orientation

In a second series of numerical tests, we consider
the control of molecular orientation by THz laser ﬁelds.
Molecular orientation [33, 34]
is nowadays a well-
established topic both from the experimental [35, 36] and
theoretical points of views [37–41]. Diﬀerent optimal con-
trol analyses have been made on this quantum system
[42–45].

In this paragraph, we consider the control of a linear
polar molecule, HCN, by a linearly polarized THz laser
ﬁeld E(t). We assume that the molecule is in its ground
vibronic state and described by a rigid rotor. In this case,
the Hamiltonian of the system can be written as:

H(t) = BJ 2 −µ0 cos θE(t)−

E(t)2

2

[(αk −α⊥) cos2 θ+α⊥],

where B is the rotational constant, J 2 the angular mo-
mentum operator, µ0 the permanent dipolar moment, αk
and α⊥ the dipole polarizability components parallel and
perpendicular to the molecular axis, respectively, and θ
the angle between the molecular axis and the polariza-
tion direction of the electric ﬁeld. At zero temperature,
the dynamics of the system is ruled by the following dif-
ferential equation:

i

∂|ψ(t)i

∂t

= H(t)|ψ(t)i

where the initial state at t = 0 is |0, 0i, in the basis of
the spherical harmonics {|j, mi, j ≥ 0, −j ≤ m ≤ j}.
Numerical values are taken to be B = 6.6376 × 106,
µ0 = 1.1413, αk = 20.055 and α⊥ = 8.638, in a.u. We
refer the reader to Ref. [42] for details on the numerical
implementation of this control problem. The α param-
eter is chosen as a time-dependent function of the form
105(
)6 + 104 in order to design a control ﬁeld

t − T /2

T /2

which is experimentally relevant [42]. The target state is
the eigenvector of the observable cos θ with the maximum
eigenvalue in the subspace such that j ≤ 4 [39, 46].

Having investigated the implementation issues in
Sec. IV A, we focus in this paragraph on the eﬃciency
Ef f ⋆(ε, N ) achieved when neglecting the time associ-
ated with I/O communications. As a consequence, the
results hereafter do not depend on the used computer
and software. We study the eﬃciency of the paralleliza-
tion method in the cases where the optimization solver
consists in one step of either a monotonic algorithm or a
Newton method. We start with a simulation using mono-
tonic algorithm (see [8, 47] for details about this method).
Given a target value ε of the ﬁgure of merit, we measure

s
e
u
a
v
 
l

l

a
n
o

i
t
c
n
u
F

1.5

1

0.5

1.5

1

0.5

7

N=4
N=8
N=16
N=32
N=64

s
e
u
a
v
 
l

l

a
n
o

i
t
c
n
u
F

N=2
N=4
N=8
N=16
N=32
N=64

1e-2

1e-1

1e+0

1e+1

1e+2

1e-1

1e+0

1e+1

1e+3

Computational time

Computational time

FIG. 5: Functional values at each iteration and for various
values of N with respect to computational time for the control
of molecular orientation by a monotonic algorithm. Log-scale
is used in the x-axis.

N Ef f ⋆(ε, N )
1
2
4
8
16
32
64

100%
55.2%
51.2%
51.5%
38.5%
26.4%
16.3%

FIG. 6: Same as Fig 5 but for a Newton solver.

-
-

N N · t(ε, N )
1
2
4 1264.763737
8 759.976361
16 589.424517
32 516.603943
64 774.557304

TABLE III: Equivalent sequential time of ISM in the case of
a Newton solver for the control of molecular orientation.

TABLE II: Eﬃciency of ISM for various values of N in the
case of the control of molecular orientation with a monotonic
algorithm.

sider the quantity N · t(ε, N ) to measure the eﬃciency of
the process. The results are presented in Table III.

the computational time necessary to obtain it.
In the
numerical computation, we use ε = 0.3, while the opti-
mum has been numerically estimated as 0.2909 [42]. The
values of the ﬁgure of merit are plotted in Fig. 5. In this
case, the full eﬃciency is not obtained, as reported in
Table II.

In the diﬀerent numerical simulations, we observe that
this method seems to be signiﬁcantly more eﬃcient than
gradient descent solvers. The wall-clock computational
time is a decreasing function of N , so that solving beneﬁts
from large parallelization. However, Ef f ⋆(ε, N ) does not
appear to be a monotonic function of N . The analysis of
this point is out of the scope of this paper.

We repeat this test with one iteration of the Newton
method as optimization solver. More precisely, we imple-
ment a matrix-free version of the algorithm that updates
the control by means of a GMRES routine [48, 49]. In
this case, we observe that this approach actually enables
to obtain convergence, the algorithm does not converge
for N = 1 and N = 2 but converges for larger values
of N . The values of the ﬁgure of merit are plotted in
Fig. 6. Since the algorithm does not converge for N = 1,
t(ε, 1) and Ef f ⋆ are not deﬁned. In this case, we con-

C. Optimal control of Bose-Einstein condensates

The last example investigated in this work deals with
the optimal control of Bose-Einstein condensates [50].
This subject has been extensively studied in the past few
years [51, 52, 54–58]. Following Ref. [51], we consider the
control of a condensate in magnetic microtraps whose dy-
namics is ruled by the Gross-Pitaevskii equation:

∂
∂t

|ψ(x, t)i = (H0 + V (x, λ(t))) |ψ(x, t)i,

(11)

∂2
∂x2 +
where |ψ(x, t)i is the state of the system, H0 = −
κhψ(x, t)|ψ(x, t)i, λ is the radio-frequency control ﬁeld
and κ a positive coupling constant. The potential V is
deﬁned by

1
2

V (x, λ) =

1

2 (cid:18)|x| −
2 (cid:18) (λd)2

1

8

λd

for |x| >

2 (cid:19)2
− x2(cid:19) otherwise,

λd
4




with d > 0. Unitless parameters are used here. We refer
the reader to Ref. [51] for details on the model system.

N=1
N=2
N=4
N=8
N=16
N=32

1

0.5

t
i
r
e
m

 
f

o

 

e
r
u
g

i
f
 

d
e
z

i
l

a
m
r
o
N

0
1e-1

1e+0

1e+1

1e+2

1e+3

1e+4

Computational time

FIG. 7: Evolution of the normalized ﬁgure of merit at each
iteration and for various values of N with respect to compu-
tational time for the control of a Bose-Einstein condensate.

The ﬁgure of merit associated with this control problem
is:

J [λ] = ℜ[hψ(T )|ψf i].

(12)

The ﬁnal and initial states of the control problem are
respectively the ground states of the Hamiltonians H0 +
V (x, 0) and H0 + V (x, 1). The parameter α is set to 0.
Due to the nonlinearity of the model system, the pre-
ceding approach has to be adapted. In this way, we do
not consider anymore the sequence of states |ϕu
ni [see
Eq. (4)] but we split up these intermediate states into two
sets. The sequence of initial states is taken on the trajec-
tory |ψ(t)i, i.e. deﬁned by |ψ(tn)i, n = 0, · · · , N , while
the sequence of target states is taken on the adjoint tra-
jectory |χ(t)i, i.e. deﬁned by |χ(tn)i, n = 0, · · · , N . The
maximization problem in Step 2c of Algorithm 1 is there-
fore replaced by the maximization of the sub-functional:

Jn[un, |ψui] = ℜ[hψn(tn+1)|χ(tn+1)i],

(13)

with 0 ≤ n ≤ N − 1.
In this problem, the state |ψni
is deﬁned on [tn, tn+1] by Eq. (5), but starting from
|ψn(t = tn)i = |ψ(tn)i. The rest of the procedure re-
mains unchanged.

This modiﬁcation does not aﬀect dramatically the
computational time since these trajectories are not com-
puted sequentially but in parallel. We then use the prop-
agator assembling technique presented in Sec. IV to com-
pute the sequences of initial and ﬁnal states. The numer-
ical values of the parameters are set to T = 8, κ = 1 and
d = 10. The space domain we consider is [−10, 10]. For
the space discretization, we consider a uniform grid com-
posed of 50 points. The time discretization is achieved
with a time grid of 29 points, and we use Strang’s split-
ting (8) to compute the trajectories. The optimization
solver in Step 2c consists in one iteration of the constant
step gradient descent method, see Eq. (9), with ρ = 10−1.

8

N Ef f ⋆(ε, N )
1
2
4
8
16
32

100%
90%
99.7%
126.3%
141.8%
116.65%

TABLE IV: Eﬃciency of ISM for various values of N in the
case of the control of a Bose-Einstein condensate.

The results are presented in Fig. 7.
We observe that the full eﬃciency is reached, as con-
ﬁrmed in Table IV. This feature is certainly a conse-
quence of the nonlinear setting. The sub-control prob-
lems are simpler not only because of the size reduction
induced by the time decomposition, but also because of
the dynamics itself, which is simpliﬁed on a shorter time
interval.

V. CONCLUSION AND PERSPECTIVES

In this work, we have investigated the numerical eﬃ-
ciency of a time parallelized optimal control algorithm
on standard quantum control problems extending from
the manipulation of spin systems and molecular orien-
tation to the control of Bose-Einstein condensates. We
have shown that the full eﬃciency can be reached in the
case of a linear dynamics optimized by means of gra-
dient methods. On the contrary, full eﬃciency is not
achieved when using monotonic algorithms and Newton
solvers. In the case of a Newton method, the paralleliza-
tion setting reduces the length of time intervals where
the solver is used, and makes the subproblems easier to
solve. Such a property is also observed in the case of
nonlinear dynamics, as shown with the example of Bose-
Einstein condensates. The results of this work can be
viewed as an important step forward for the implementa-
tion of parallelization methods in quantum optimal con-
trol algorithms. Their use will become a prerequisite in
a near future to simulate quantum systems of increasing
complexity.
ACKNOWLEDGMENT
S.J. Glaser acknowledges support from the DFG (Gl
203/7-1), SFB 631 and the BMBF FKZ 01EZ114 project.
D. Sugny and S. J. Glaser acknowledge support from the
ANR-DFG research program Explosys (ANR-14-CE35-
0013-01; DFG-Gl 203/9-1). J.S was partially supported
by the Agence Nationale de la Recherche (ANR), Pro-
jet Blanc EMAQS number ANR-2011-BS01-017-01. This
work has been done with the support of the Technis-
che Universit¨at M¨unchen Institute for Advanced Study,
funded by the German Excellence Initiative and the
European Union Seventh Framework Programme under
grant agreement 291763.

9

[1] D. D’Alessandro, Introduction to Quantum Control and
Dynamics (Chapman and Hall, Boca Raton, 2008), ap-
plied mathematics and nonlinear science series ed.

[2] P. Brumer and M. Shapiro, Principles and Applications
of the Quantum Control of Molecular Processes (Wiley
Interscience, 2003).

[3] C. Brif, R. Chakrabarti, and H. Rabitz, New J. Phys. 12,

075008 (2010).

[4] S. J. Glaser, U. Boscain, T. Calarco, C. P. Koch,
W. Kockenberger, R. Kosloﬀ,
I. Kuprov, B. Luy,
S. Schirmer, T. Schulte-Herbr¨uggen, et al., Eur. Phys.
J. D 69, 79 (2015).

[28] J. Salomon and G. Turinici, J. Chem. Phys. 124, 074102

(2006).

[29] R. Marx, A. F. Fahmy, J. M. Myers, W. Bermel, and

S. J. Glaser, Phys. Rev. A 62, 012310 (2000).

[30] R. Marx, N. Pomplum, W. Bermel, H. Zeiger, F. Engelke,
A. F. Fahmy, and S. J. Glaser, Magn. Reson. Chem. 53,
442 (2015).

[31] J. Kepner and S. Ahalt, Journal of Parallel and Dis-

tributed Computing 64, 997 (2004).

[32] J. Kepner and S. Ahalt, Journal of Parallel and Dis-

tributed Computing 64, 997 (2004).

[33] H. Stapelfeldt and T. Seideman, Rev. Mod. Phys. 75,

[5] C. Altaﬁni and F. Ticozzi, IEEE Trans. Automat. Con-

543 (2003).

trol 57, 1898 (2012).

[34] T. Seideman and E. Hamilton, Adv. At. Mol. Opt. Phys.

[6] D. Dong and I. A. Petersen, IET Control Theory A. 4,

52, 289 (2006).

2651 (2010).

[7] N. Khaneja, T. Reiss, C. Kehlet, T. Schulte-Herbr¨uggen,

and S. J. Glaser, J. Magn. Reson. 172, 296 (2005).

[8] D. Reich, M. Ndong, and C. P. Koch, J. Chem. Phys.

136, 104103 (2012).

[35] S. Znakovskaya, D. Ray, F. Anis, N. G. Johnson, I. A.
Bocharova, M. Magrakvelidze, B. D. Esry, C. L. Cocke,
I. V. Litvinyuk, and M. F. King, Phys. Rev. Lett. 103,
153002 (2009).

[36] S. Fleischer, Y. Zhou, R. W. Field, and K. A. Nelson,

[9] P. Doria, T. Calarco, and S. Montangero, Phys. Rev.

Phys. Rev. Lett. 107, 163603 (2011).

Lett. 106, 190501 (2011).

[37] C. M. Dion, A. Keller, and O. Atabek, Eur. Phys. J. D

[10] M. H. Levitt, Spin Dynamics: Basics of Nuclear Mag-

14, 249 (2001).

netic Resonance (Wiley, New York, 2008).

[38] I. S. Averbukh and R. Arvieu, Phys. Rev. Lett. 87,

[11] R. R. Ernst, G. Bodenhausen, and A. Wokaun, Princi-
ples of nuclear magnetic resonance in one and two di-
mensions, vol. 14 (Clarendon Press Oxford, 1987).

[12] E. Ass´emat, M. Lapert, Y. Zhang, M. Braun, S. J. Glaser,

and D. Sugny, Phys. Rev. A 82, 013415 (2010).

[13] M. Lapert, J. Salomon, and D. Sugny, Phys. Rev. A 85,

163601 (2001).

[39] D. Daems, S. Gu´erin, D. Sugny, and H. R. Jauslin, Phys.

Rev. Lett. 94, 153003 (2005).

[40] M. Lapert and D. Sugny, Phys. Rev. A 85, 063418 (2012).
[41] R. Tehini and D. Sugny, Phys. Rev. A 77, 223407 (2008).
[42] J. Salomon, C. M. Dion, and G. Turinici, J. Chem. Phys.

033406 (2012).

123, 144310 (2005).

[14] M. Lapert, Y. Zhang, M. Braun, S. J. Glaser, and

[43] M. Lapert, R. Tehini, G. Turinici, and D. Sugny, Phys.

D. Sugny, Phys. Rev. Lett. 104, 083001 (2010).

Rev. A 78, 023408 (2008).

[15] N. Khaneja, R. Brockett, and S. J. Glaser, Phys. Rev. A

[44] M. Yoshida and Y. Ohtsuki, Phys. Rev. A 90, 013415

63, 032308 (2001).

(2014).

[16] Y. Zhang, M. Lapert, D. Sugny, M. Braun, and S. J.

[45] K. Nakajima, H. Abe, and Y. Ohtsuki, J. Phys. Chem.

Glaser, J. Chem. Phys. 134, 054103 (2011).

A 116, 11219 (2012).

[17] S. Conolly, D. Nishimura, and A. Macovski, IEEE Trans.

Med. Imaging MI-5, 106 (1986).

[18] M. A. Bernstein, K. F. King, and Zhou, Handbook of
MRI Pulse Sequences (Elsevier, Burlington-San Diego-
London, 2004).

[19] M. Lapert, Y. Zhang, M. Janich, S. J. Glaser, and

D. Sugny, Scientiﬁc Reports 2, 589 (2012).

[20] A. Garon, S. J. Glaser, and D. Sugny, Phys. Rev. A 88,

043422 (2013).

[21] A. D. Boozer, Phys. Rev. A 85, 013409 (2012).
[22] A. Toselli and O. B. Widlund, Domain decomposition
methods - Algorithms and theory, vol. 34 (Springer Series
in Computational Mathematics, 2005).

[23] G. Horton, Commun. Appl. Num. Methods 8, 585 (1992).
[24] Y. Maday, J. Salomon, and G. Turinici, SIAM J. Num.

[46] D. Sugny, A. Keller, O. Atabek, D. Daems, C. M. Dion,
S. Gu´erin, and H. R. Jauslin, Phys. Rev. A 71, 063402
(2005).

[47] J. Salomon, ESAIM: M2AN 41, 77 (2007).
[48] R. Barret, M. Berry, T. F. Chan, J. Demmel, J. M. Do-
nato, J. Dongarra, V. Eijkhout, R. Pozo, J. CharlKep-
ner, and S. Ahalt, Templates for the Solution of Linear
Systems: Building Blocks for Iterative Methods (SIAM,
Philadelphia, 1994).

[49] Y. Saad and M. H. Schultz, SIAM J. Sci. Stat. Comput.

7, 856 (1986).

[50] R. Folman, P. Kr¨uger, J. Schmiedmyaer, J. Denschlag,
and C. Henkel, Adv. At. Mol. Opt. Phys. 48, 263 (2002).
[51] U. Hohenester, P. K. Rekdal, A. Borzi, and J. Schmied-

mayer, Phys. Rev. A 75 (2007).

Anal. 45, 2468 (2007).

[52] A. Borzi and U. Hohenester, SIAM J. Sci. Comput. 30,

[25] T. Gradl, A. K. Sp¨orl, T. Huckle, S. J. Glaser, and
T. Schulte-Herbr¨uggen, Proc. EUROPAR 2006, Paral-
lel Processing Lecture Notes in Computer Science 4128,
751 (2006).

[26] T. Auckenthaler, M. Bader, T. Huckle, A. Sp¨orl, and
K. Waldherr, Parallel computing archive 36, 359 (2010).
[27] J. P. Palao and R. Kosloﬀ, Phys. Rev. A 68, 062308

(2003).

441 (2008).

[53] T. Skinner and S. J. Glaser, Phys. Rev. A 66, 032112

(2002).

[54] R. B¨ucker, T. Berrada, S. van Frank, J.-F. Schaﬀ,
T. Schumm, J. Schmiedmayer, G. J¨ager, J. Grond, and
U. Hohenester, J. Phys. B 46, 104012 (2013).

[55] G. J¨ager, D. M. Reich, M. H. Goerz, C. P. Koch, and

U. Hohenester, Phys. Rev. A 90, 033628 (2014).

[56] J. F. Mennemann, D. Matthes, R.-M. Weish¨aupl, and

[58] J.-F. Schaﬀ, X.-L. Song, P. Capuzzi, P. Vignolo, and

T. Langen, New J. Phys. 17, 113027 (2015).

G. Labeyrie, Eur. Phys. Lett. 93, 23001 (2013).

[57] M. Lapert, G. Ferrini, and D. Sugny, Phys. Rev. A 85,

023611 (2012).

10

