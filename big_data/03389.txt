On the Effects of Battery Imperfections in an

Energy Harvesting Device

Department of Information Engineering, University of Padova - via Gradenigo 6b, 35131 Padova, Italy

Alessandro Biason and Michele Zorzi

{biasonal,zorzi}@dei.unipd.it

6
1
0
2

 
r
a

 

M
0
1

 
 
]
T
I
.
s
c
[
 
 

1
v
9
8
3
3
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—Energy Harvesting allows the devices in a Wireless
Sensor Network to recharge their batteries through environmen-
tal energy sources. While in the literature the main focus is on
devices with ideal batteries, in reality several inefﬁciencies have
to be considered to correctly design the operating regimes of an
Energy Harvesting Device (EHD). In this work we describe how
the throughput optimization problem changes under real battery
constraints in an EHD. In particular, we consider imperfect
knowledge of the state of charge of the battery and storage
inefﬁciencies,
i.e., part of the harvested energy is wasted in
the battery recharging process. We formulate the problem as a
Markov Decision Process, basing our model on some realistic
observations about transmission, consumption and harvesting
power. We ﬁnd the performance upper bound with a real battery
and numerically discuss the novelty introduced by the real
battery effects. We show that using the old policies obtained
without considering the real battery effects is strongly sub-
optimal and may even result in zero throughput.

I. INTRODUCTION

Energy Harvesting (EH), thanks to its ability to prolong
the network lifetime, has been widely studied in the last
years and a lot of research is still being conducted on this
topic. If equipped with harvesting capabilities, the nodes in a
Wireless Sensor Network (WSN) can recharge their batteries
with renewable energy sources. Since one of the main goals in
a WSN is to keep the network operational for a very long time
(even decades), energy harvesting is a promising technique
to achieve such target. While, ideally, with EH the network
may operate for an unlimited amount of time, in practice
the network lifetime is constrained by hardware failures, e.g.,
the batteries have a limited number of charging/discharging
cycles [1]. Also, generally, the harvested power is low with
respect to the device energy consumption. Because of this,
energy has to be carefully managed in order to optimally
exploit the available resources.

Several energy sources have been considered in the past.
The most studied one is sunlight because it provides high
power harvesting rate and the technology is mature and
efﬁcient [2]. Examples of other techniques [3] are piezoelec-
tric, vibrations, wind, ambient RadioFrequency (RF), acoustic
noise, etc. Different optimization problems related to EH can
be found in the literature so far. Generally, the main focus
is on optimizing some network parameters, e.g., throughput,
delay, packet drop rate, etc. A lot of research focused on ofﬂine
optimization, where it was assumed that the Energy Harvesting
Device (EHD) knows everything about the environment (future
energy arrivals, past history, channel status, etc.) [4]. Some

relevant papers were produced by Sharma et al. [5], where
the authors found throughput and mean delay optimal policies
when the considered device has an inﬁnite data queue. Also,
Ozel et al. in [6] set up the ofﬂine throughput optimization
problem and presented schemes to achieve the AWGN capac-
ity. Tutuncuoglu et al. studied ofﬂine policies for more than
one device [7]. The authors also presented several works on the
imperfect storage capabilities of energy harvesting devices [8].
Another class of problems regards online optimization. In
this context, only a statistical knowledge of the environment is
required. Generally, a Markov approach is used to model and
solve the problem [9]. [10] considered the case of a correlated
energy generation process. [11] studied the use of relays in
an energy harvesting communication system. The interactions
among multiple devices were analyzed in [12]–[14].

Despite the many works that can be found in this area,
only few of them consider a non-ideal device. Indeed, several
aspects are frequently neglected when designing the optimal
policy, e.g., battery degradation [1], energy leakage [15],
imperfect knowledge of the State Of Charge (SoC) [16],
storage losses [8], [17], [18] or circuitry costs [19]. In reality,
the EHD battery is affected by all these aspects and, in general,
the optimal policy obtained without considering them is not
necessarily optimal. In this work we redeﬁne the optimization
problem when the device 1) has only a limited knowledge of
its SoC and 2) the battery has storage inefﬁciencies (possibly
dependent upon the current SoC). Even if in the literature these
problems were partially studied separately, the combination
of the two represents a more realistic case. Moreover, we ﬁnd
that the existing policies for the two separate scenarios are not
applicable to the combined case because they would provide
very poor performance. To model the system, we use an online
approach and focus on the throughput optimization problem.
In the deﬁnition of the system model we take into account
some realistic and practical considerations (for example, using
the energy consumption of a real device). We present two
heuristic sub-optimal policies and discuss how they can be
applied to our case. In our numerical evaluation we remark
the importance of computing a new optimal policy, explicitly
designed for the imperfect SoC case with a real battery.

The paper is organized as follows. Section II deﬁnes the
system model. The optimization model, the performance upper
bound and the sub-optimal policies are discussed in Sec-
tion III. Section IV presents our numerical results. Section V
concludes the paper.

II. SYSTEM MODEL

In this paper, we focus on an Energy Harvesting Device
(EHD) with energy losses in the battery storage process and
imperfect knowledge of its State of Charge (SoC).

time interval(cid:2)T k, T (k +1)(cid:1). At the beginning of every frame,

Time is divided in frames where frame k corresponds to the

EHD decides whether to stay idle or become active. In the idle
phase, the energy consumption is assumed negligible. In the
active phase, a stream of bits is sent to an external receiver
during the ﬁrst δ < T seconds of the frame. We assume that δ
is much lower than T . This is a realistic assumption that will
be discussed in more detail in Section II-C.1

A. State of Charge

The device has the capability of gathering energy from
the environment and store it in a ﬁnite battery. We model
the several energy quantities in the system as discrete energy
quanta.2 The device has a battery of ﬁnite size emax ∈ N\{0}
energy quanta. In every time frame,
the energy stored in
the battery is Ek ∈ (cid:69) (cid:44) {0, . . . , emax}. As in [16], we
assume that, in the general case, EHD cannot read all the
values of (cid:69), but can only observe the partition ˜(cid:84) (with
N subsets). For example, the node may only know if the
energy level is low or high (N = 2). In this case, we have
˜(cid:84) = {LOW, HIGH}, with LOW (cid:44) {0, . . . ,(cid:98)emax/2(cid:99)} and
HIGH (cid:44) {(cid:98)emax/2(cid:99) + 1, . . . , emax}. When the battery level
is e ∈ (cid:69), the node can observe only ˜t ∈ ˜(cid:84), where ˜t is given
by ˜t = ψ(e). In the previous example, ψ(e) = LOW, ∀e ≤
(cid:98)emax/2(cid:99) and ψ(e) = HIGH, ∀e ≥ (cid:98)emax/2(cid:99) + 1.3

In our work we study the case where ˜(cid:84) is a partition of
(cid:69), but future work includes the extension to the case where
different subsets of ˜(cid:84) are partially overlapped. This may be
useful to study the cases where only a noisy observation of e
is available.

Note that it is meaningful to consider the imperfect SoC
case because, in reality, the battery level cannot be known
with absolute precision but can only be approximated (this
strongly depends upon the considered technology). Moreover,
we will ﬁnd that, even restricting the study to the imperfect
knowledge case, high performance can be achieved.

B. Harvested Energy

The energy arrivals are modeled as a random i.i.d. process
(the case with memory could be studied with an approach
similar to [16] but, because of the curse-of-dimensionality, can
be solved only with sub-optimal techniques). Thus, in frame
k, Bk energy quanta arrive at the device, according to some
energy arrival statistics with probability mass function (pmf)
pB(b), mean ¯b and maximum arrivals bmax. In an ideal battery
(no losses), all the Bk energy quanta can be stored in the
battery. In this work, we consider a real battery with losses
1It is also possible to extend the model to the case δ ≈ T by redeﬁning

the function yT of Equation (2).

2If the quantization granularity is sufﬁcient, the discrete model can be

considered as a good approximation of the continuous case.
1 subsets (one for every energy state) and the function ψ(e) = {e}.

3Note that the perfect SoC case is obtained when the partition ˜(cid:84) has emax+

Figure 1: Function η(e) (Equation (1)) as a function of the normalized SoC
when emax = 100 (however, the structure of η(e) is only weakly dependent
on emax).

in the energy storage process. Different energy loss models
exist, e.g., we can assume that only a ﬁxed fraction η of the
incoming power can be stored [8], or, more generally, that
η depends upon the current state of charge of the battery.
This is a realistic assumption, e.g., in a capacitor [18]. In
this case, when the state of charge Ek is low or high, then
only a small fraction of the incoming energy can be stored,
whereas, if Ek ≈ emax/2, then almost all the energy can be
successfully stored. An example, that was proposed in [18]
as an approximation for the storage losses in a capacitor and
will be used in our numerical evaluations (however, our results
are general and do not depend upon the particular structure of
η(e)), is

η(e) = 1 − (e − emax/2)2
βn.l.(emax/2)2 ,

(1)

where βn.l. > 1 is a constant which strictly depends upon the
used technology. An example, that we will use as a baseline in
this work, is βn.l. = 1.05 (see [18]). In Figure 1 we plot η(e)
as a function of the state of charge e ∈ (cid:69), normalized with
respect to emax. Note that, as βn.l. increases, the storage losses
decrease, until the asymptotic situation βn.l. → ∞ where we
obtain an ideal battery with no losses.

Assume that a harvesting power Bk/T is received (constant
over a frame). In this case, only a power η(e)Bk/T can be
converted and stored in the battery. Note that, at e = emax/2
there are no energy losses, i.e., η(e) = 1, whereas when e ∈
{0, emax}, the losses are highest, i.e., η(e) = 1 − 1/βn.l..

We now describe how to evaluate the stored energy evolu-
tion during a single frame. Equation (1) is an instantaneous
expression that has to be applied only to powers. Assume that
during a frame the harvested power is constant and equal to
Bk/T and the battery is charged at Ek. After t ≤ T seconds,
the battery status will ideally be

(cid:90) t

0

yt = Ek +

1
T

Bkη(yτ )dτ.

(2)

At t = T we obtain the battery level after an entire frame,
i.e., Ek+1 = yT (Bk, Ek). Also, since the battery energy levels
are discretized, we approximate yT (Bk, Ek) with a Round(·)

normalized SOC e00.10.20.30.40.50.60.70.80.91s(e)00.10.20.30.40.50.60.70.80.91βn.l. = 1.05βn.l. = 3βn.l. = 10βn.l. = infoperation. In Equation (3) we will present the full expression
of the battery evolution by also considering other phenomena
(overﬂow and transmission energy).

Note that the procedure to evaluate yT (Bk, Ek) does not
depend upon the particular structure of η(e). The only basic
hypothesis that has to be made is that Round(yT (bmax, e)) ≥
1 for every e (otherwise,
there may exist a state where
recharging the battery would not be possible). However, it is
always possible to satisfy this hypothesis by redeﬁning the
notion of energy quantum or the frame length.

C. Energy Consumption

In frame k,

a power Pk

∈ (cid:80) (e.g., (cid:80) (cid:44)
{0, ρmin, . . . , ρmax}) is used for transmitting a new stream of
bits (we assume that in every frame there is always enough
data to be transmitted). Transmitting with a power ρ ≥ 0
provides a reward r(ρ), where r(·) is the instantaneous reward
function, positive, concave, increasing in ρ and with r(0) = 0.
A typical example of r(ρ), that we also use as a baseline in
our work, is r(ρ) = ln(1 + Λρ), where Λ represents an SNR
scaling factor [5], [6], [10], [20]. In this case, r(·) represents
the transmission rate.

In slot k, the device spends Dk energy quanta in order to
perform the transmission. In order to consider the circuitry
costs, in general Dk > Pk (since the transmission duration δ
is ﬁxed, we use the terms “power” and “energy” interchange-
ably). An example of power consumption and corresponding
transmission power is given in Table I.

Table I: MSP430 SoC With RF Core [21].

Tx Power (Pk)

Power Consumption (Dk)
868 MHz
433 MHz

315 MHz

915 MHz
14 mW 79.2 mW 100.2 mW 106.5 mW 104.4 mW
96.3 mW
10 mW 75.6 mW
1 mW 43.8 mW
52.8 mW
52.8 mW
0.25 mW 44.1 mW

86.4 mW
50.4 mW
52.5 mW

99.0 mW
53.4 mW
53.4 mW

The previous table refers to an MSP430 device from Texas
Instruments, a microcontroller designed with low power con-
sumption operations and with transmission/reception capa-
bilities. The “Tx Power” column represents, approximately,
the power sent into the channel. The other columns describe
the overall power consumption in different frequency bands.
Note that, in general, Pk (cid:28) Dk, regardless of the operating
frequency.

D. Battery Evolution

In order to understand how the battery evolves, we brieﬂy
discuss how a frame is structured. During the ﬁrst δ seconds,
a stream of bits may be sent. We assume δ (cid:28) T because the
time required for a transmission is much smaller than the time
required to obtain enough energy quanta for a transmission.
This can be seen by comparing the values of Tables I and II.

In Table II we report some common energy sources with
the corresponding power density levels. These values should

Table II: Energy Sources [2], [22], [23].

Energy Source
Solar outdoors - sunny day
Piezoelectric
Vibrations
Solar outdoors - cloudy day
Ambient RadioFrequency (in London)
Acoustic Noise (at 100 dB)

Power Density
15 mW/cm2
330 µW/cm3
200 µW/cm3
150 µW/cm2
6.39 µW/cm2
0.96 µW/cm3

be compared with the power consumption Dk in Table I.
In general, except for the solar light in a sunny day, the
harvested power is several orders of magnitude smaller than
the transmission power. Thus,
to store enough energy to
perform a transmission, a long time is required.

If a device with much smaller power consumption and a rich
energy source are considered, then it may be possible to allow
the device to directly send the harvested energy instead of
storing it. This is particularly useful in the cases of imperfect
real batteries in order to avoid the storage losses [8], [17] but
has fewer practical applications. We leave additional study of
such technique as future work.

Ek+1 = min{yT (Bk, [Ek − Dk]+), emax}.

Because of the presented situation, in our model we assume
that the transmission is instantaneous and happens at the be-
ginning of a frame (i.e., δ is considered negligible with respect
to T ). Under this assumption, the value Ek of Equation (2) is
replaced with Ek − Dk. Following the previous reasoning, the
battery evolution from frame k to k + 1 can be computed as
(3)
Note that we explicitly take into account the effects of
[·]+ (cid:44) max{0,·} has to be applied to
a ﬁnite battery.
Ek − Dk because, in the imperfect SoC knowledge case, it
may happen that a too high transmission power is selected,
and Dk > Ek. In this case, we assume that the reward in
the corresponding slot is zero (only a partial codeword is
transmitted). In summary, the attained reward in slot k is

g(Pk) =

r(Pk),
0,

if Dk ≤ Ek,
otherwise.

(4)

(cid:40)

III. OPTIMIZATION

The system described so far can be modeled with a discrete
Markov Chain (MC), whose states correspond to the actual
level of charge of the battery. Since we assume that only partial
SoC knowledge is available in general, the device cannot see
the state of the system (partially observable MC).
obtained with the function g(·):

Our goal is to maximize the average long-term reward Gµ

1
K

g(Pk)

.

(5)

Gµ(E0) = lim inf
K→∞

EBk,Pk
If g(·) is the transmission rate,

k=0
then G represents the
throughput of the system. We remark that in this case we are
maximizing the throughput only over δ in which a device is
always in idle mode for a fraction (T − δ)/T of the time. µ
is the policy, i.e., the function that deﬁnes which transmission
power should be used. E0 is the initial charge of the battery
(in general we ﬁx E0 = 0).

(cid:35)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)E0

(cid:34)K−1(cid:88)

Since we focus on the long-term optimization (that is typical
for a sensor network because the device operates for long times
in the same conditions), it can be shown that the problem can
be formulated by exploiting the MC structure:
πµ(e|E0)jµ(e),

(cid:88)

Gµ(E0) =

(6)

e∈(cid:69)

where

• πµ(e|E0) is the long-term probability of being in state e
given the initial state of the system E0;
• jµ(e) (cid:44) EΘe [g(Θe)]. Θe is a random variable with
probability mass function f (ρ; e), ρ ∈ (cid:80). Our goal is
to specify the pmf of Θe for every e ∈ (cid:69).

When perfect SoC is available, the problem can be formu-
lated as a Markov Decision Process (MDP) and solved with
standard algorithms, e.g., the Value Iteration Algorithm (VIA)
or the Policy Iteration Algorithm (PIA) [24]. In this case, the
role of µ is to deﬁne, for every possible e ∈ (cid:69), the pmf f (·; e).
In [17] we proved that the optimal policy is deterministic, i.e.,
given the state of the system f (ρ; e) = χ{ρ = ρ(cid:63)}, where χ{·}
is the indicator function and ρ(cid:63) is the optimal transmission
power when the state is e.

In the general case (imperfect SoC knowledge), the problem
is a Partially Observable MDP (POMDP) [24]. This kind
of problems can be solved using a belief state as described
in Chapter 5 of [24]. With this technique, in order to ﬁnd
the optimal policy, in general it is necessary to keep track
of the energy arrivals in all past slots. However, this would
incur a very high computational cost and, moreover, storing
the optimal policy would require a large memory because all
possible combinations of the past events have to be taken into
account. Because of these, following [16], in our work we
focus on a sub-optimal approach, i.e., we do not consider the
history and focus only on the current frame. In this context,
the policy µ deﬁnes a pmf f (·; ˜t) for every partition ˜t ∈ ˜(cid:84).
Also, we restrict our study to deterministic policies as in the
perfect SoC case for simplicity. Unfortunately, the problem is
non-convex, thus standard optimization algorithms cannot be
applied. Because of this, in our numerical evaluation, we resort
to an exhaustive search (that is computationally affordable
when the cardinality of (cid:80) and the number of partitions N
are not too high).

A. Upper Bound

We want to ﬁnd an upper bound to the performance in the
case Pk = Dk. When Dk > Pk, the upper bound is still valid
but looser (additional study of this case is left for future work).
Assume that b energy quanta arrive. An interesting quantity

to evaluate is

Using the previous equations, it is possible to derive an

upper bound for the performance.
Proposition 1. An upper bound to Gµ is given by

Gu.b. = g(¯bs),

¯bs (cid:44)

pB(b)β(cid:63)(b),

(9)

bmax(cid:88)

b=0

where β(cid:63)(b) is deﬁned in (8) and pB(b) is the pmf of the
energy arrivals.

Proof: The energy causality constraint imposes

Bi,

∀k = 0, 1, 2, . . .

(10)

k(cid:88)

Pi ≤ k−1(cid:88)

i=0

i=0

that immediately leads to the upper bound g(¯b) as k grows
to inﬁnity [16]. However, in the case of storage losses, the
previous inequality can be changed as follows in order to
provide a better upper bound. The frame evolution is as
follows

E0 = 0 =⇒ P0 = 0,
E1 = yT (E0, B0) =⇒ P1 ≤ yT (E0, B0),
E2 = yT (E0, B0) + yT (E1, B1) − P1
=⇒ P1 + P2 ≤ yT (E0, B0) + yT (E1, B1),

...

Ek =

k−1(cid:88)
=⇒ k(cid:88)

i=0

yT (Ei, Bi) − k−1(cid:88)
Pi ≤ k−1(cid:88)

i=0

Pi

yT (Ei, Bi),

k > 0.

i=0

i=0

In order to obtain a simple upper bound, we remove the
terms Ei from the previous equation, assuming that they are
always chosen optimally. Obviously, in the general case this
is not possible and this is why, with this assumption, we only
obtain an upper bound

β(cid:63)(Bi),

∀k = 1, 2, . . .

(11)

i=1

i=1

With the previous equation, by exploiting the concavity of

g, we obtain the upper bound (9).

Note that the upper bound may depend upon the battery
size. For example, focus on Equation (1). As the battery size
increases, the region where η(e) ≈ 1 increases. Thus, for large
batteries, β(cid:63)(b) ≈ b and the upper bound degenerates in g(¯b).
Instead, if η is constant, the upper bound simply becomes

g(η¯b) and does not depend upon the particular battery size.

B. Sub-optimal Policies

k(cid:88)

Pi ≤ k−1(cid:88)

a(cid:63) = arg max

a

yT (a, b),

(7)

β(cid:63)(b) = yT (a(cid:63), b).

(8)
In practice, for a given harvesting power b, β(cid:63)(b) repre-
sents the maximum energy that can be stored in the battery
(maximized over all possible values of the current state of
charge, a). For example, using Equation (1), we would have
a(cid:63) < emax/2. Instead, with a constant η, β(cid:63)(b) = ηb and is
achieved for any a.

In our numerical evaluation we will present results for the
optimal policy. However, in general, computing the optimal
policy is a difﬁcult task, especially if the number of partitions
N is high (exhaustive search). Because of this, here we
introduce some simpler policies that are easier to implement
than the optimal one. The ﬁrst, named Low Complexity Policy
(LCP), provides good performance when the battery size is
not too large, whereas the second one, named Balanced Policy
(BP), works well for large batteries.

LCP is derived from the Optimal Policy (OP) with perfect
SoC knowledge, namely OPRP (Real battery and Perfect
knowledge). With perfect SoC knowledge the optimal policy
can be efﬁciently found solving a linear program. Once the
optimal RP policy is computed for every e ∈ (cid:69), we deﬁne
LCP as follows.
For every subset ˜t ∈ ˜(cid:84), the power consumption of LCP
in the subset ˜t (dLCP(˜t)) is deﬁned as the average power
consumption of RP (dRP(·)) over all the values e ∈ ˜t, i.e.,
e∈˜t dRP(e).4 LCP can be seen as the
adaptation of OPRP to the imperfect knowledge case. We will
show that this approximation is legitimate if the battery is
small, but degenerates quickly as the battery size increases.
This remarks the importance of using ad hoc policies for the
cases of imperfect SoC knowledge with real batteries.

dLCP(˜t) = 1/|˜t|(cid:80)

The aim of BP is to consume, on average, a power equal to
¯bs (Equation (9)). If this were always possible, then BP would
achieve the upper bound. The deﬁnition of BP strictly depends
upon the number of partitions N and the battery inefﬁciencies
(function η(e)). In the case N = 2 (LOW-HIGH) and for η(e)
deﬁned in Equation (1) we deﬁne BP as d(LOW) = 0 and
d(HIGH) = ¯bs. Note that it is important to set d(LOW) = 0
in order to avoid to be trapped in the low energy states (we
will discuss this effect in more detail in the next section).

IV. NUMERICAL RESULTS

In our numerical results we discuss the behavior and com-

pare the performance of the policies in Table III.

Table III: Policies.
Perfect SoC

Ideal Battery
Real Battery

OPIP
OPRP

Imperfect SoC

OPII

OPRI, BP, LCP, OPII

Where OPi represents the optimal policy in scenario i.
Our focus is on the RI case.5 Here, we also evaluate the
performance of OPII applied to this scenario and of BP and
LCP, deﬁned in Section III-B.

A. Optimal Policies Structure

We now discuss the shape and the performance of the four
optimal policies of Table III. A channel gain Λ = 10−2 is
chosen in order to operate in the low SNR regime [5]. Also
we set ˜(cid:84) = {LOW, HIGH} (N = 2) and neglect the circuitry
costs, thus the power consumption in state e is equal to ρ(e).
The storage losses are modeled with Equation (1). The battery
size is set to emax = 100 energy quanta and the energy arrival
process is described by a truncated geometric random variable
with mean ¯b = 20 and maximum arrivals bmax = 50.

In Figure 2 we plot

the transmission power ρ(e) as a
function of the battery size e. Note that, because of the battery
imperfections, the curve of OPRP (Real battery with Perfect
knowledge) is not as smooth as the one for the ideal case OPIP
(Ideal battery with Perfect knowledge).

4An alternative deﬁnition of LCP would consider a weighted mean (e.g.,
with the steady-state probabilities). However, we have numerically veriﬁed
that this leads to worse performance.

5OPIP was studied in [25], OPII in [16] and OPRP in [17].

Figure 2: Power consumption d(e) (without circuitry costs d(e) = ρ(e)) of
the optimal policies in Table III as a function of the battery level e ∈ (cid:69).

Interestingly, for the low energy states, the curves for a real
battery are lower than their counterparts for an ideal battery. In
practice, when the battery is almost empty, the energy losses
are high, thus only a small fraction of the harvested energy can
be stored. In this case, it is better not to transmit (or transmit
with low power) and wait until the battery reaches a more
favorable region.

1) OPII applied to RI:

We now want to highlight the importance of applying the
right optimal policy. In particular, we show that applying OPII
(Ideal battery with Imperfect knowledge) and OPRP (Real
battery with Perfect knowledge) is sub-optimal in the RI case.
It can be veriﬁed that applying
OPII to the RI case provides a reward equal to zero whereas
OPRI provides a reward of 0.1655 (we discuss how the reward
changes in Section IV-B). This result can be explained as
follows. In state e = 0, the maximum storable energy is
given by yT (0, bmax). In our example, bmax = 50 and, using
Equation (1), it can be veriﬁed that yT (0, bmax) = 6.3, i.e.,
approximately 6 energy quanta. Starting from E0 = 0, after
the ﬁrst slot we have E1 = 6. In this slot, a transmission power
corresponding to 11 energy quanta is demanded (as shown by
the red curve), but, since E1 < 11, only 6 energy quanta
are drawn from the battery. However, this results in a failed
transmission (the transmission is interrupted at 55%), thus the
corresponding reward is zero. In the successive slot, E2 = 0
and the process repeats periodically, providing a global reward
equal to zero. Note that this behavior is not inﬂuenced by the
initial state: even if the battery were initially fully charged,
there would exist a positive probability of reaching state 0 and
being trapped there. A similar behavior can be noticed in the
perfect SoC case, but with less disruptive effects. This example
highlights an important characteristics of real batteries, that has
to be accurately taken into account when a system is designed.
2) OPRP applied to RI: The optimal policy with perfect
knowledge cannot be directly applied to the imperfect SOC
case. Therefore we have to resort to the approximation de-
scribed in Section III-B, namely LCP. OPRP takes into account
the fact that the low energy states should be avoided in order
not to trap the battery level. However, by taking the average
over every subset, it may happen that, as in the OPII case,

Battery level, e020406080100Power consumption, d(e) = transmission power, p(e)05101520253035404550OPRIOPIIOPRPOPIPFigure 3: Power consumption d(e) (without circuitry costs d(e) = ρ(e)) of
OPRI for N = 1, 2, 3 as a function of the battery level e ∈ (cid:69).

B. Throughput

Another interesting quantity to analyze is the throughput of
the various policies when the battery size increases. In this
case, see Figure 4, we also want to show the system upper
bounds and the performance of LCP and BP. As expected,
as the battery size increases,
the optimal policy and the
upper bound (9) converge to g(¯b) (upper bound with an ideal
battery). An interesting point is that Gu.b. is much closer to
the performance of the optimal policy than g(¯b), especially for
low batteries.

We remark that Gu.b. is an upper bound also for the RP
(Real battery with Perfect knowledge) case. Thus, since the
upper bound and the performance of OPRI are quite close, we
can state that it is almost equal to considering ˜(cid:84) with a LOW-
HIGH subsets, or the perfect knowledge case (| ˜(cid:84)| = emax+1),
i.e., even considering ˜(cid:84) with very few subsets it is still possible
to achieve close to optimal rewards.

The ﬁgure also reports the Balanced Policy. Its performance
is very close to the reward of OPRI, for both low and high
batteries. BP also converges to the upper bound Gu.b. for very
large batteries. This is because, on average, BP transmits data
with power ¯bs.

Finally, we applied the optimal II (Ideal battery with Imper-
fect knowledge) and RP (Real battery with Perfect knowledge)
policies to the RI scenario. As pointed out in Section IV-A2,
in order to apply RP to the RI case, we introduced LCP. As
can be seen from the ﬁgure, OPII achieves a very low reward
that quickly degenerates to zero. Instead, LCP seems to work
well for low batteries but as soon as the battery size grows
too much, its reward degenerates to zero as well. This further
emphasizes the importance of using the proper policy when a
real battery with imperfect knowledge is considered.

Figure 4: Long-term average throughput Gµ (Equation (6)) as a function of
the battery size emax (with ¯b = 20).

C. Real Case Example

a too high power consumption is employed, resulting also in
this case in zero reward. This behavior is better explained in
Section IV-B.

While applying a sub-optimal policy to the RI case may
result in zero reward, OPRI takes into account this effect and
avoids the inefﬁcient energy states. This is easy to obtain
when N is high. However, if N is very low (N = 1, i.e., no
SoC knowledge) this may result in a signiﬁcant performance
degradation. In Figure 3 we plot the transmission power of
OPRI when we use one, two or three partitions. Note that in the
case N = 1, in order to avoid the effect previously described
(reward equal to zero if the power consumption is too high),
ρ(e) has to be very low. With N = 3, any transmission is
avoided for the low energy states in order not to operate in an
inefﬁcient battery region. The rewards obtained in the three
cases are 0.0488, 0.1655 and 0.1670, respectively. Also, the
reward obtained with perfect SoC knowledge is 0.1714. We
notice that even a rough idea of the battery SoC (quantization
to two levels, LOW and HIGH) provides close-to-optimal
performance, and therefore a more accurate representation is
not necessary. On the other hand, if no information is provided
(N = 1) the performance is heavily sub-optimal.

Table IV: Numerical example parameters.

Parameter
One energy quantum
Frame length (T )
Slot length (δ)
Available bandwidth (W )
Noise power density (N)
Channel state (H)
Min/Max energy consumption (d(e))

Min/Mean/Max harvested energy (b(e))

Value
10 µJ
1 s
5 ms
2 MHz
10−20.4 W/Hz
3 · 10−13 W/Hz
44.1/106.5 mW
(22/53 quanta)
10/300/500 µJ
(1/30/50 quanta)

We present numerical results for the device reported in
Table I. In Table IV we summarize the parameters used for
our example.

The considered energy source can be, e.g., piezoelectric or
vibrations. In order to model the statistics of the energy source
we use a truncated Poisson random variable in order to have
a distribution centered around its mean. Note that T (cid:29) δ.
The instantaneous reward function is deﬁned according to
Shannon’s formula

(cid:18)

(cid:19)

H

W N0

ρ

.

g(ρ) =

δ
T

W log2

1 +

(12)

Battery level, e020406080100Power consumption, d(e) = transmission power, p(e)051015202530351 partition2 partitions3 partitionsBattery size, emax50100150200250300Long-term average throughput, Gu00.020.040.060.080.10.120.140.160.180.2OPRILCPBPOPII (real battery)Upper Bound (real battery)Upper Bound (ideal battery)[3] S. Chalasani and J. M. Conrad, “A survey of energy harvesting sources
for embedded systems,” in Proc. IEEE Southeastcon, Apr. 2008, pp.
442–447.

[4] J. Yang and S. Ulukus, “Optimal packet scheduling in an energy
harvesting communication system,” IEEE Trans. Commun., vol. 60,
no. 1, pp. 220–230, Jan. 2012.

[5] V. Sharma, U. Mukherji, V. Joseph, and S. Gupta, “Optimal energy
management policies for energy harvesting sensor nodes,” IEEE Trans.
Wireless Commun., vol. 9, no. 4, pp. 1326–1336, Apr. 2010.

[6] O. Ozel and S. Ulukus, “Achieving AWGN capacity under stochastic
energy harvesting,” IEEE Trans. Inf. Theory, vol. 58, no. 10, pp. 6471–
6483, Oct. 2012.

[7] K. Tutuncuoglu and A. Yener, “Communicating with energy harvesting
transmitters and receivers,” in Proc. IEEE Information Theory and
Applications Workshop (ITA), Feb. 2012, pp. 240–245.

[8] K. Tutuncuoglu, A. Yener, and S. Ulukus, “Optimum policies for an
energy harvesting transmitter under energy storage losses,” IEEE J.
Selected Areas in Commun., vol. 33, no. 3, pp. 467–481, Mar. 2015.

[9] J. Lei, R. Yates, and L. Greenstein, “A generic model for optimizing
single-hop transmission policy of replenishable sensors,” IEEE Trans.
Wireless Commun., vol. 8, no. 2, pp. 547–551, Feb. 2009.

[10] N. Michelusi, K. Stamatiou, and M. Zorzi, “Transmission policies for
energy harvesting sensors with time-correlated energy supply,” IEEE
Trans. Commun., vol. 61, no. 7, pp. 2988–3001, Jul. 2013.

[11] H. Li, N. Jaggi, and B. Sikdar, “Relay scheduling for cooperative
communications in sensor networks with energy harvesting,” IEEE
Trans. Wireless Commun., vol. 10, no. 9, pp. 2918–2928, Sep. 2011.

[12] A. Biason, D. Del Testa, and M. Zorzi, “Low-complexity policies for
wireless sensor networks with two energy harvesting devices,” in Proc.
IEEE 13th Annual Mediterranean on Ad Hoc Networking Workshop
(MED-HOC-NET), Jun. 2014, pp. 180–187.

[13] A. Biason and M. Zorzi, “Joint transmission and energy transfer policies
for energy harvesting devices with ﬁnite batteries,” IEEE J. Selected
Areas in Commun., vol. 33, no. 12, pp. 1–15, Dec. 2015.

[14] N. Michelusi and M. Zorzi, “Optimal adaptive random multiaccess in
energy harvesting wireless sensor networks,” IEEE Trans. Commun.,
vol. 63, no. 4, pp. 1355–1372, Apr. 2015.

[15] B. Devillers and D. Gunduz, “A general framework for the optimization
of energy harvesting communication systems with battery imperfec-
tions,” IEEE J. of Commun. and Netw., vol. 14, no. 2, pp. 130–139,
Apr. 2012.

[16] N. Michelusi, L. Badia, and M. Zorzi, “Optimal transmission policies
for energy harvesting devices with limited state-of-charge knowledge,”
IEEE Trans. Commun., vol. 62, no. 11, pp. 3969–3982, Nov. 2014.

[17] A. Biason and M. Zorzi, “Energy harvesting communication system
with SOC-dependent energy storage losses,” in Proc. IEEE Twelfth
International Symposium on Wireless Communication Systems (ISWCS),
Aug. 2015, pp. 406–410.

[18] M. Gorlatova, A. Wallwater, and G. Zussman, “Networking low-power
energy harvesting devices: Measurements and algorithms,” IEEE Trans.
Mobile Computing, vol. 12, no. 9, pp. 1853–1865, Sep. 2013.

[19] W. Ni and X. Dong, “Energy harvesting wireless communications with
energy cooperation between transmitter and receiver,” IEEE Trans.
Commun., vol. 63, no. 4, pp. 1457–1469, Apr. 2015.

[20] P. Blasco, D. Gunduz, and M. Dohler, “A learning theoretic approach
to energy harvesting communication system optimization,” IEEE Trans.
Wireless Commun., vol. 12, no. 4, pp. 1872–1882, Apr. 2013.

[21] Texas Instruments, MSP430 SoC with RF Core.
[22] S. J. Roundy, “Energy scavenging for wireless sensor nodes with a focus
on vibration to electricity conversion,” Ph.D. dissertation, Department of
Mechanical Engineering, University of California, Berkeley, 2003.

[23] M. Pi˜nuela, P. D. Mitcheson, and S. Lucyszyn, “Ambient RF energy har-
vesting in urban and semi-urban environments,” IEEE Trans. Microwave
Theory and Techniques, vol. 61, no. 7, pp. 2715–2726, Jul. 2013.

[24] D. Bertsekas, Dynamic programming and optimal control.

Athena

Scientiﬁc, Belmont, Massachusetts, 2005.

[25] N. Michelusi, K. Stamatiou, and M. Zorzi, “On optimal transmission
policies for energy harvesting devices,” in Proc. IEEE Information
Theory and Applications Workshop (ITA), Feb. 2012, pp. 249–254.

Figure 5: Long-term average throughput Gµ (Equation (6)) as a function of
the battery size emax (with ¯b = 30) for the various frequency bands of
Table I. The bandwidth is W = 2 MHz.

The term δ/T takes into account the fact that the optimiza-

tion is performed in the ﬁrst δ seconds of the frame.

We assume that the device ﬁxes a priori the transmission
frequency according to the columns of Table I. In Figure 5
we show the throughput for a 2 MHz bandwidth, expressed
in kbps, at the four frequencies. At 315 MHz, the throughput
is greater because, for every ﬁxed transmission power ρ, the
corresponding power consumption d is lower.

V. CONCLUSIONS

In this paper we studied the throughput optimization prob-
lem of an Energy Harvesting Device with a Markov Decision
Process approach. We explicitly considered the effects of im-
perfect batteries and in particular the imperfect SoC knowledge
and the energy storage inefﬁciencies (with losses related to the
SoC status). We based our model on some realistic consid-
eration about the transmission/consumption/harvesting power.
We found a performance upper bound and showed that, with
a real battery, the upper bound and the performance are lower
than in the ideal case. We proposed low complexity policies
and showed that BP is a good approximation for the optimal
case. We discussed the application of the policies derived in
traditional settings and showed that they are strongly sub-
optimal and that, in some cases, the corresponding throughput
could even be zero. This emphasizes the importance of consid-
ering the real characteristics of an EHD when the optimization
process is performed.

As part of the future work we would like to set up a model
where also an ultra-low power device can be studied, i.e., δ
and T are similar. Also, other model imperfections can be
included, e.g., energy leakage or battery degradation.

REFERENCES

[1] N. Michelusi, L. Badia, R. Carli, L. Corradini, and M. Zorzi, “Energy
management policies for harvesting-based wireless sensor devices with
battery degradation,” IEEE Trans. Commun., vol. 61, no. 12, pp. 4934–
4947, Dec. 2013.

[2] V. Raghunathan, A. Kansal, J. Hsu, J. Friedman, and M. Srivastava,
“Design considerations for solar energy harvesting wireless embedded
systems,” in Proc. IEEE 4th international symposium on Information
processing in sensor networks, Apr. 2005, pp. 457 – 462.

Battery size, emax50100150200250300350400Long-term average throughput, Gu [kbps]00.511.522.533.544.55315 MHz433 MHz868 MHz915 MHz