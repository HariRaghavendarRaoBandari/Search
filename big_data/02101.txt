6
1
0
2

 

b
e
F
9
2

 

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
1
0
1
2
0

.

3
0
6
1
:
v
i
X
r
a

Spatio-spectral concentration of Convolutions

Shravan M. Hanasoge

Department of Astronomy and Astrophysics, Tata Institute of Fundamental Research,

Mumbai 400005, India

Abstract

Diﬀerential equations may possess coeﬃcients that vary on a spectrum of
scales. Because coeﬃcients are typically multiplicative in real space, they
turn into convolution operators in spectral space, mixing all wavenumbers.
However, in many applications, only the largest scales of the solution are of
interest and so the question turns to whether it is possible to build eﬀec-
tive coarse-scale models of the coeﬃcients in such a manner that the large
scales of the solution are left intact. Here we apply the method of numerical
homogenization to deterministic linear equations to generate sub-grid-scale
models of coeﬃcients at desired frequency cutoﬀs. We use the Fourier basis
to project, ﬁlter and compute correctors for the coeﬃcients. The method is
tested in 1D and 2D scenarios and found to reproduce the coarse scales of the
solution to varying degrees of accuracy depending on the cutoﬀ. We relate
this method to mode-elimination Renormalization Group (RG) and discuss
the connection between accuracy and the cutoﬀ wavenumber. The tradeoﬀ
is governed by a form of the uncertainty principle for convolutions, which
states that as the convolution operator is squeezed in the spectral domain, it
broadens in real space. As a consequence, basis sparsity is a high virtue and
the choice of the basis can be critical.

Keywords: Renormalization Group, Homogenisation

1. Introduction

In the early 1970s, a signiﬁcant hurdle faced by particle physicsists was
the computation of partition functions that involved evaluating integrals over

Email address: hanasoge@tifr.res.in (Shravan M. Hanasoge)

Preprint submitted to Journal of Computational Physics

March 8, 2016

large ranges in wavenumbers. Ultimately, the only parameters of interest
were at coarse scales of the systems under study. To compute these param-
eters, Kenneth Wilson introduced mode-elimination Renormalization Group
(RG) that enabled building low-wavenumber representations of ﬂuctuating
coeﬃcients while succeeding in preserving the coarse-scale accuracy of the
solutions.
In other words, RG describes a means of projecting the small
scales onto the large, and by degrees, integrating out rapid variations in the
coeﬃcients. This procedure has the potential to greatly reduce the compu-
tational burden. RG is perhaps the most celebrated instance of the concept
of building coarse-scale models of inherently multi-scale phenomena, and
has been widely used to model a range of phenomena. The application of
mode-elimination RG to generate sub-grid-scale models of ﬂuid turbulence,
i.e. that convey the eﬀect of scales smaller than the grid size, was suggested
by Yakhot and Orszag (1986) and studied in detail for passive-scalar advec-
tion by Avellaneda and Majda (1990) (also see Smith and Woodruﬀ (1998)
who compare these methods and Kraichnan’s Direct Interaction Approxi-
mation, Kraichnan, 1962). Yakhot and Orszag (1986) suggested integrating
over shells of wavenumbers, proceeding from the largest to the smallest, se-
quentially adding corrections to the coeﬃcients of the turbulence model in
question.

Independently, Kozlov (1979) and Papanicolaou and Varadhan (1982) stud-

ied solutions to the diﬀusion equation with random coeﬃcients. Deﬁn-
ing a small parameter ε to be the ratio of the correlation length-scale of
the random coeﬃcent to the relevant coarse scale of the solution, Kozlov
(1979) and Papanicolaou and Varadhan (1982) derived a two-scale asymp-
totic theory to estimate eﬀective coeﬃcients. The formulation is similar in
concept to RG and produces a zero-wavenumber (constant) representation
of the original random coeﬃcient, and in the limit of vanishingly small ε,
Papanicolaou and Varadhan (1982) showed that the solution was accurate.
Multi-scale coeﬃcients however present a challenge and appropriately deci-
mating these coeﬃcients onto a coarser grid (not necessarily zero wavenum-
ber) is of relevance in computational physics. In the ﬁnite-scale-cutoﬀ sce-
nario with non-random media, the method of numerical homogenisation is
remarkably similar to RG. These techniques can be applied to build eﬀec-
tive models of wavespeeds (whose spatial distributions can be complicated)
in seismology, deriving coarse-scale descriptions of porosity coeﬃcients in
porous media etc. In this article, we will focus on these two scenarios.

A central goal of seismic studies of the Sun, stars and Earth is to infer

2

the structural and dynamical properties of interiors using observations of
their surface oscillations. The forward problem, critical to this eﬀort, is the
simulation of small-amplitude (linear) waves through the relevant media.
Such media can comprise a wide spectrum of length scales, possibly much
smaller than the wavelength. The problem thus becomes computationally
stiﬀ and very expensive to attempt. We are therefore interested in bringing
to bear methods of homogenization, which describe the coarse-scale behavior
of diﬀerential equations with rapidly varying coeﬃcients, on these problems
of wave propagation. We seek to replace the ﬁne-scale structure with an
eﬀective sub-grid-scale model such that the coarse scales of the solution are
accurately reproduced to within a speciﬁed tolerance.

Similarly, in porous media, the permeability of the medium, a tensor
quantity, is ﬁnely sampled at a large number of spatial points. The goal is to
coarsen the grid and appropriately average these tensor coeﬃcients. Eﬀec-
tive coarse-grained models of ﬁne-scale tensor coeﬃcients will necessarily mix
various components. Here we will derive a formal theory that describes how
to mix various terms. Classical homogenization primarily addresses prob-
lems in which the coeﬃcients periodically vary (Bensoussan et al., 1978),
with the sub-grid model being a zero-wavenumber representation (e.g., by
the harmonic mean). However, in a number of real-world applications, the
rapid variations are aperiodic and a more general theory to attempt such
problems is required. Along these lines, multi-resolution analysis in the aid
of numerical homogenization of aperiodic media has been developed (e.g.
Brewster and Beylkin, 1995; Dorobantu and Engquist, 1998; Engquist and Runborg,
2002; Owhadi and Zhang, 2008). More recently, e.g., Capdeville et al. (2010),
have posed the problem of terrestrial seismic wave propagation through ape-
riodic heterogeneous media in the language of classical homogenization.

In this article, we follow the methodology of Dorobantu and Engquist
(1998) and Engquist and Runborg (2002), which is well laid out and from
which details may be intuited. Numerical homogenization aﬀords two major
advantages: signiﬁcant reduction in spatial complexity and a less restrictive
Courant condition on the timestep. Here, we use the spatial Fourier and
Haar-wavelet bases to investigate the accuracy of numerical homogenization
on three diﬀerent wave equations, each gaining complexity over the previous.
The Fourier basis lends itself to elegant interpretation but produces dense
matrices whose inverses may not be easy to compute.
In contrast sparse
matrix inversion techniques may be easily extended to homogenization in
the Haar basis. The demonstrable success of the method encourages a more

3

complete exploration of its possibilities.

2. Numerical homogenization in 1D

Consider the 1D operator L acting on a function u deﬁned by Lu =
∂x(a ∂xu), where a = a(x) > 0 is a coeﬃcient, ∂x is the spatial derivative with
respect to the x coordinate. The wave equation corresponds to ∂2
t u − S =
Lu, where t is time, S = S(x, t) is a source and the equation takes on a
hyperbolic character. The time-independent porous-ﬂow equation, identical
to the diﬀusion equation, is given by Lu = 0 and is elliptic in character.

The product in real space between a(x) and ∂xu is a convolution in Fourier
domain, resulting in the mixing of coarse and ﬁne scales. In other words, the
Fourier transform of this term (we do not add extra symbols to denote the
transformed quantity) is

Lu(k) = −Xk′

kk′a(k − k′) u(k′),

(1)

and this results in a mixing between low and high wavenumbers. Thus to
obtain the low-wavenumber representation of u, one must solve the equation
over the full set of wavenumbers, which can be computationally expensive.
The goal then is to create a sub-grid-scale model of a such that the coarse
scales of u are well reproduced. Let us consider the projection of a function in
the Fourier basis. Deﬁne a projection operator F that transforms a function
in real space to the Fourier basis, producing a set of Fourier coeﬃcients
which may subsequently be characterized as “coarse” or “ﬁne”. Denoting
the forward transform by F , and given an N × 1 vector v, the projection is

written as F v = (cid:18)P

Q(cid:19) v, where P is a kp × N matrix that projects v on to

the coarse set of coeﬃcients (of size kp ×1) and the (N −kp)×N-sized matrix
Q projects v on to the ﬁne coeﬃcients. We note that F −1F = F F −1 = IN ,
where the subscript denotes the size of the identity matrix (N ×N). Since we
use the orthogonal Fourier basis, the inverse transform is F −1 = (P ∗ Q∗),
where the ∗ denotes conjugate transpose (the Hermitian transpose) and the
associated identities are satisﬁed

P P ∗ = IP , QQ∗ = IQ, P Q∗ = 0, QP ∗ = 0, P ∗P + Q∗Q = IN .

(2)

Note that IP is of size kp×kp and IQ of size kq ×kq (where kq = N −kp). With
no loss of generality, this method may also be extended to other orthogonal

4

and bi-orthogonal systems. Note that the sizes of the zero matrix 0 in the
two identities in the middle are kp × kq and kq × kp respectively. We would
like to obtain the eﬀective coarse-scale representation of this spatial operator.
First we consider the projection of the diﬀerential operator on the Fourier
basis. The Fourier transform of ∂xu(x) is ik u(k), where u(k) denotes the
Fourier transform of u(x) (note that, as before, we do not use additional
symbols to denote transformed quantities). Thus the Fourier projection of
the spatial derivative operator is a diagonal matrix which we denote as

Q(cid:19) ∂x(cid:0)P ∗ Q∗(cid:1) = (cid:18)KP
(cid:18)P

0

0 KQ(cid:19) ,

where diagonal matrices (referred to by ‘diag’ in the equation below)

KP = diag(ik) :
KQ = diag(ik) :

|k| < kp,
|k| ≥ kp,

(3)

(4)
(5)

contain low (coarse) and high (ﬁne scale) wavenumbers respectively. The
zero-wavenumber (i.e., the mean or the dc component of u) is an element in
KP , which means that KP is non-invertible whereas KQ possesses an inverse.
Thus ∂xu projected on to the Fourier basis is

(cid:18)P
Q(cid:19) ∂xu = (cid:20)(cid:18)P

Q(cid:19) ∂x(cid:0)P ∗ Q∗(cid:1)(cid:21)(cid:18)P

Q(cid:19) u = (cid:18)KP

0 KQ(cid:19)(cid:18)uP

uQ(cid:19) .

0

(6)

Similarly the projection of the full term ∂x (a ∂xu) on to the Fourier basis

is given by

Lu(k) = (cid:18)P

LuQ(cid:19)
Q(cid:19) ∂x (a ∂xu) = (cid:18)LuP

(7)

where LuP and LuQ denote the low and high-frequency parts of Lu(k). Be-
cause we are interested in homogenising a, it is written as a matrix, i.e.
a(x) = diag(a); additionally, the product a(x) u(x) is represented as a prod-
uct between the diagonal matrix a and vector u. We rewrite equation (7)
as

Q(cid:19) a(cid:0)P ∗ Q∗(cid:1)(cid:18)P
QaP ∗ QaQ∗(cid:19)(cid:18)KP

Q(cid:19) ∂x(cid:20)(cid:0)P ∗ Q∗(cid:1)(cid:18)P
(cid:18)P
= (cid:18)KP
LuQ(cid:19) = (cid:18)KP P a P ∗ KP KP P a Q∗ KQ
(cid:18)LuP

Q(cid:19) ∂x(cid:26)(cid:0)P ∗ Q∗(cid:1)(cid:18)P
uQ(cid:19)
0 KQ(cid:19)(cid:18)uP
uQ(cid:19) .
KQ Qa P ∗ KP KQ Qa Q∗ KQ(cid:19)(cid:18)uP

0 KQ(cid:19)(cid:18)P aP ∗ P aQ∗

0

0

Q(cid:19) u(cid:27)(cid:21)

(8)

5

Since we want to model just the coarse scales, we set to zero the ﬁne-scale
equation, given by the multiplication with the second row, i.e. LuQ = 0,
arriving at the equation

KQ Qa Q∗ KQ uQ = −KQ Qa P ∗ KP uP ,

uQ = −(KQ Qa Q∗ KQ)−1 (KQ Qa P ∗ KP uP ),
uQ = −K −1

Q (Qa Q∗)−1 Qa P ∗ KP uP .

(9)

The coarse-scale part of the equation, given by the multiplication of the ﬁrst
row of the operator with the Fourier projection of u,

LuP = KP [P a P ∗ − P a Q∗(Qa Q∗)−1 Qa P ∗] KP P u,

(10)

obtained by substituting the expression for uQ from equation (9). Substitut-
ing KP = P ∂x P ∗, and denoting

¯a = diag(P ∗P [a − a Q∗(Qa Q∗)−1 Qa]P ∗P ),

(11)

where the diag operation involves extracting only the terms along the prin-
cipal diagonal.
Note that we may extract non-diagonal terms from the
matrix as well but this corresponds to an integral over space - and thus the
original diﬀerential equation would become an integro-diﬀerential equation.
This is explained by the uncertainty principle that governs convolutions and
products, described in Section 2.2.

The ﬁrst term, P ∗P aP ∗P is simply the low-pass representation of a (akin
to simply discarding the high wavenumbers) while the second term, the cor-
rector, captures the impact of the high wavenumbers on the low. In general
the matrix thus obtained will have oﬀ-diagonal terms, and one may discard
these, especially if it is diagonally dominated. Needless to say, ignoring the
oﬀ-diagonal terms will lead to numerical errors when computing solutions.
Reverting to the original equation, we have,

where ¯u = P ∗P u is the low-resolution solution, because

LuP = P ∂x[ ¯a ∂x ¯u],

¯u(x) = F −1(cid:18)uP

0 (cid:19) = (cid:0)P ∗ Q∗(cid:1)(cid:18)uP

0 (cid:19) = P ∗P u.

(12)

(13)

The high wavenumbers, of which there are kq, have been set to zero in equa-
tion (9) which is why we replace uQ by a vector of zeroes of length kq × 1 in
equation (13), and the Fourier coeﬃcient vector is (up 0)T .

6

∂x(a∂xu) = 0, the homogenised coeﬃcient is [R 1

A ﬁrst test is to compare the outcome of equation (11) to the classical
homogenisation result. For a periodic a in the diﬀusion equation Lu =
0 dx′ a−1(x′)]−1, with x ∈
[0, 1], a result that we obtained successfully (the derivation is fully laid out
for instance in Papanicolaou and Varadhan, 1982; Capdeville et al., 2010).
Next considered the 1D diﬀusion equation with a heterogeneous coeﬃcient.
The exact solution to the problem in x ∈ [0, 1], u(0) = 0, u(1) = 1 is given by
R x
0 a−1(x′)dx′. We compared the exact solution to
that obtained using the homogenized and raw-ﬁltered coeﬃcients. The error
is plotted as a function of retained bandwidth of the coeﬃcient in Figure 1
and shows that homogenisation is distinctly superior to there performance
of raw ﬁltering.

u(x) = (cid:16)R 1

0 a−1(x′)dx′(cid:17)−1

2.1. RG notation

The development outlined in section (2) can be recast in the notation of
RG. The Fourier domain is naturally suited for RG; we use subscripts ‘<’ and
‘>’ to describe low and high wavenumbers and the goal is to remove all the
> (high) wavenumbers, projecting them onto the < (low) wavenumbers. We
recall that ‘high’ and ‘low’ are deﬁned externally, suitable for the problem at
hand. The continuous Fourier transform of Lu is

Lu(k) = −Z ∞

−∞

dk′ k k′ a(k − k′) u(k′).

(14)

Denoting wavenumbers |k| ≤ kc by k< and wavenumbers |k| > kc by k>,
where kc is the desired cutoﬀ, we deﬁne the following integrals

Z<

dk = Z kc

−kc

dk,

Z>

dk = Z −kc

−∞

dk +Z ∞

kc

dk.

(15)

Using this notation, we can split equation (14) into two parts, for small and
high k respectively,

Lu(k)< = −Z<
Lu(k)> = −Z>

dk′ k< k′ a(k − k′) u<(k′) −Z>
dk′ k> k′ a(k − k′) u>(k′) −Z<

dk k< k′ a(k − k′) u>(k′), (16)

dk′ k> k′ a(k − k′) u<(k′). (17)

Equation (16) for instance states that k belongs to the set of low wavenum-
bers, and therefore if k′ is also a low wavenumber, u(k′) = u< and if k′ were

7

1.4

1.2

1

0.8

0.6

0.4

e
g
a

t

n
e
c
r
e
P
 
n
i
 
r
o
r
r

E

0.2

0

 error, Homogenized
 error, Homogenized
 error, Simple Filtering
 error, Simple Filtering

L
L
L
L

1

2

1

2

10
50
Retained Bandwidth (Percentage of Nyquist)

40

30

20

60

Figure 1: Homogenization consistently outperforms raw ﬁltering in 1D: errors in deci-
mating heterogeneous coeﬃcients of the diﬀusion equation, Lu = ∂x(a∂xu) = 0, plotted
against the amount of bandwidth retained. For instance, 0 retention corresponds to re-
placing the heterogeneous coeﬃcient by one number and 100 means retaining the original
coeﬃcient. In order to satisfy Orszag’s two-thirds rule (Orszag, 1971), we zero out the
upper third portion of the spectrum, which is why the error in the raw ﬁltered coeﬃcient
rapidly drops to zero around 66% of the Nyquist. The x-axis range therefore spans 0 to
60%. Setting boundary conditions on the domain x ∈ [0, 1], u(0) = 0, u(1) = 1, the exact

0 a−1(x′)dx′(cid:17)−1

solution can be obtained: u(x) = (cid:16)R 1

0 a−1(x′)dx′. The homogenised and
raw ﬁltered coeﬃcients are computed, and the diﬀerence errors measured in the L1 and
L2 norms, normalised by the corresponding norms of the exact solution, are plotted. It is
however important to note that these curves are sensitive to the model of the coeﬃcient a
and the curves should be thought of more as indicative of the trend rather than an absolute
statement on the errors. Although the problem is not periodic, the eﬀective coeﬃcients
are still estimated in the Fourier basis.

R x

8

large, u(k′) = u>. As described in equation (15), integrals with the sub-
script < represent integration over low wavenumbers whereas those with the
subscript > denote high-wavenumber integration. The idea thus involves in-
tegrating over shells of the high wavenumbers and expressing them in terms
of the low wavenumbers,

Lu(k)> = 0 → Z>

dk′ k> k′ a(k − k′) u>(k′) = −Z<

dk′ k> k′ a(k − k′) u<(k′).

(18)
Equation (18) details the connection between u> and u< through a Fredholm
integral over the range k′ ∈ H. Positing the existence an inverse Fredholm
operator a−1(k, k′), we write,

u(k)> = −Z>

dk′ Z<

dk′′ a−1(k>, k′) a(k′, k

′′

) u<(k

′′

).

(19)

In general, the real-space representation of the high-frequency portion of
>) = a>>(x, x′), where x, x′ are spatial
the convolution operator is a(k>, k′
variables corresponding to Fourier wavenumbers k, k′. Whereas the Fourier
transform of the coeﬃcient a contains only one wavenumber, the convolu-
tional integrals in, e.g. equation (16), introduce two wavenumbers k, k′ and
thus the originally one-variable function a may become a function of two
spatial coordinates when split into high- and low-wavenumber combinations
<<, <>, ><, >>.

2.2. Uncertainty principle applied to convolutions

A deeper connection may be found when considering the coeﬃcient using
the theory of distributions. The product of two functions can be written as
integral, i.e.

a(x) u(x) = Z ∞

−∞

dx′ a(x′)δ(x − x′) u(x′),

(20)

and so we consider the redeﬁnition of the coeﬃcient a as an operator,

a(x, x′) = a(x′) δ(x − x′) = Z ∞

−∞

dk′ Z ∞

−∞

dk ˆa(k′) eik(x−x′)+ik′x′

,

(21)

9

and substituting the following transformation η = k − k′ and replacing k′ by
k − η, we obtain

−∞

Z ∞
(cid:20)Z<

−∞

dη Z ∞
dη Z<

dk ˆa(k − η) e−iηx′+ikx =

(22)

dk +Z<

dη Z>

dk +Z>

dη Z<

dk +Z>

dη Z>

dk(cid:21) [ˆa(k − η) e−iηx′+ikx].

It can be seen that only if all four integrals are retained, the resultant quan-
tity reduces to the form in equation (21).
If however, one of the terms,
such as the >> integral, is projected on to the others, the inverse transform
produces a more general function ¯a(x, x′). It is possible to connect the de-
gree of broadening in space (i.e. the deviation of the operator a(x, x′) from
a(x)δ(x − x′)) to the degree of squeezing in Fourier domain, i.e. the number
of Fourier coeﬃcients that are discarded. Indeed, Stegel (2000) has derived
an uncertainty principle for convolution operators, which address the tradeoﬀ
between spectral and real-space representations. In addition, the Fredholm
integral equation (18) typically appears in the classical spectral concentra-
tion problem (Slepian, 1983) that concerns the design of functions that are
optimally spatio-spectrally localized. The analogy with the spatio-spectral
concentration of convolution operators thus follows.

In linear equations, especially ones that only involve space in the diﬀusion
equation, ignoring the broadening in real space can be a source of numer-
ical error. Substituting back into the inverse Fourier transformed form of
equation (16),

Lu< = ∂x(¯a ∂xu<),

¯a(x, x′) = Z<
− Z>

dkZ<
′′ Z>

dk

dk′ eikx+ik′x′

[a(k, k′)

(23)

(24)

′′′

dk

a(k, k

′′

) a−1(k

′′

, k

′′′

) a(k

′′′

, k′)(cid:21) ,

which is essentially what equation (11) states but in continuous notation.
As in equation (11), the renormalised coeﬃcient is given by ¯a = ¯a(x, x′) and
the operator acts on a function u(x) thus,

¯au = Z dx′ ¯a(x, x′) u(x′).

(25)

10

This introduces a greater degree of computational complexity, in the sense
that what was originally a diﬀerential equation is now an integro-diﬀerential
equation. As a consequence, we force ¯a → ¯a(x, x′) δ(x − x′), potentially
leading to errors in the coarse-scale representation of Lu. Figure 2 illustrates
the manifestation of the uncertainty principle. As the retained bandwidth of
the convolution operator reduces, so expands its representation in real space,
evidenced by the oﬀ-diagonal components. Note that the approximation
¯a → ¯a(x, x′) δ(x − x′) translates to dropping the oﬀ-diagonal terms (see
Figure 2).

3. 2D case

We consider the diﬀusion equation with a scalar coeﬃcient in 2D:

∇ · (a∇u) = 0,

(26)

where ∇ is the covariant spatial gradient, a = a(x) > 0, x is the 2D Cartesian
coordinate x = (x, y) and u = u(x) is the solution. Fourier transforms in the

x and y directions are denoted by Fx = (cid:18)Px

Qx(cid:19) and Fy = (cid:18)Py

Qy(cid:19). The 2D

transform commutes in that Fx Fy = Fy Fx and is written thus

PxPy
QxPy
PxQy
QxQy







,

(27)

where the ﬁrst entry is the low-pass ﬁlter and the three other entries represent
high-pass ﬁlters. The following identities hold for pairwise products of the
projection matrices

PxPy = PyPx, QxPy = PyQx, PxQy = QyPx, QxQy = QyQx,
PxP ∗
PyP ∗

x = I, QxQ∗
y = I, QyQ∗

x = 0, QxP ∗
y = 0, QyP ∗

x = I, PxQ∗
y = I, PyQ∗

(28)

x = 0, P ∗
y = 0, P ∗

x Px + Q∗
y Py + Q∗

xQx = I,
yQy = I.

Because the y-projection matrices are unaﬀected by the operator ∂x and vice
versa, we have similar relationships as in equation (28). We do not explicitly
write them here.

11

x

x

50

100

150

200

250

50

100

150

200

250

¯a(x, x’), 8% retained

¯a(x, x’), 31% retained

x

50

100

150

200

250

50

100 150 200 250

x’

50

100 150 200 250

x’

¯a(x, x’), 66% retained

¯a(x, x’), 93% retained

x

50

100

150

200

250

50

100 150 200 250

x’

50

100 150 200 250

x’

Figure 2: Uncertainty principle for convolutions: spatial broadening as a consequence of
Fourier-domain squeezing. As discussed in section 2, homogenisation contributes to the
emergence of ﬁnite oﬀ-diagonal terms in ¯a(x, x′). As smaller fractions of the bandwidth
are retained, the broadening in (x, x′) space increases. The colour scale is the same on all
plots. A Heisenberg uncertainty principle operates; squeezing in Fourier domain results
in broadening in physical space (Stegel, 2000). However, unlike the classical theorem
that applies to transform pairs, this is a convolutional uncertainty, in that squeezing a
convolution in the (k, k′) space causes the (x, x′) representation to broaden.

The projection of the partial spatial derivative ∂x on to 2D Fourier space

12

is

PxPy
QxPy
PxQy
QxQy







x P ∗

y Q∗

xP ∗

y P ∗

x Q∗

y Q∗

xQ∗

∂x(cid:0)P ∗

y(cid:1) =

K P
0
0
0
x
0 K Q
0
0
x
0 K P
0
0
x
0 K Q
0
0
x




,




through the use of identities (28), which we write in anticipation of future
notational needs as

K P
0
0
0
x
0 K Q
0
0
x
0 K P
0
0
x
0 K Q
0
0
x







= (cid:18)K P

0 Kx(cid:19) .

0

x

(29)

The projection of the partial spatial derivative ∂y is

PxPy
QxPy
PxQy
QxQy







∂y (cid:0)P ∗

x P ∗

y Q∗

xP ∗

y P ∗

x Q∗

y Q∗

xQ∗

y(cid:1) =

K P
0
0
0
y
0 K P
0
0
y
0 K Q
0
0
y
0 K Q
0
0
y







, (30)

rewritten as

K P
0
0
0
y
0 K P
0
0
y
0 K Q
0
0
y
0 K Q
0
0
y







The projection of a on to this basis is

= (cid:18)K P

0 Ky(cid:19) .

0

y

PxPy
QxPy
PxQy
QxQy







a(cid:0)P ∗

x P ∗

y Q∗

xP ∗

y P ∗

x Q∗

y Q∗

xQ∗

B A(cid:19) ,
y(cid:1) = (cid:18)D C

(31)

(32)

13

where

x Q∗

y PxPy a Q∗

xQ∗

y(cid:1) ,

D = PxPy a P ∗

x P ∗
y ,
xP ∗
y PxPy a P ∗
x P ∗
QxPy a P ∗
y
x P ∗
PxQy a P ∗
y
QxQy a P ∗
x P ∗
y
y QxPy a P ∗
xP ∗
y PxQy a P ∗
xP ∗
xP ∗
y QxQy a P ∗

C = (cid:0)PxPy a Q∗
B = 

A = 


QxPy a Q∗
PxQy a Q∗
QxQy a Q∗


 ,

x Q∗
x Q∗
x Q∗

y QxPy a Q∗
y PxQy a Q∗
y QxQy a Q∗

xQ∗
y
xQ∗
y
xQ∗
y


 .

(33)

(34)

The projection of the solution on to Fourier space is written as

PxPy
QxPy
PxQy
QxQy







u = (cid:18)uP

uQ(cid:19) ,

where uP = PxPy u is the low-pass ﬁltered component of the solution and uQ
contains the high-frequency projections in the x and y directions. The full
projection is

x

0

(cid:18)K P

0 Kx(cid:19)(cid:18)D C

B A(cid:19)(cid:18)K P

0 Kx(cid:19)(cid:18)uP

uQ(cid:19)+(cid:18)K P

0 Ky(cid:19)(cid:18)D C

B A(cid:19)(cid:18)K P

0 Ky(cid:19)(cid:18)uP

uQ(cid:19) ,

0

0

0

y

x

y

or

= (cid:18)K P

x DK P
KxBK P

x CKx

uQ(cid:19) +(cid:18)K P
x KxAKx(cid:19)(cid:18)uP
x K P
x + K P
y K P
y DK P
= (cid:18)K P
x + KyBK P
y

x DK P
KxBK P

y DK P
KyBK P

uQ(cid:19) ,
y KyAKy (cid:19)(cid:18)uP
x CKx + K P
uQ(cid:19) .
KxAKx + KyAKy (cid:19)(cid:18)uP

y K P

y CKy

y CKy

(35)

As in section 2, setting the high-frequency component to zero, we obtain

uQ = −(KxAKx + KyAKy)−1(KxBK P

x + KyBK P

y )uP ,

(36)

and substituting this into the low-frequency component, we obtain

(K P

x CKx + K P

[(K P
y CKy)(KxAKx + KyAKy)−1(KxBK P

x DK P
x + K P
x + KyBK P

y DK P
y ) −
y )]uP = 0,

14

and recalling the deﬁnitions of K P
arrive at the eﬀective low-pass equation

x and K P

y from equations (29) and (31), we

where ¯a is a second-order tensor

∇ · (¯a · ∇¯u) = 0,

¯a = (cid:18)¯axx ¯axy

¯ayx ¯ayy(cid:19) .

The diﬀerent components of the coeﬃcients are given by,

¯axx = diag{P ∗

x P ∗

¯axy = −diag{P ∗
¯ayx = −diag{P ∗
x P ∗

¯ayy = diag{P ∗

y [D − C Kx(KxAKx + KyAKy)−1Kx B]PxPy},
y [C Kx(KxAKx + KyAKy)−1Ky B] PxPy},
x P ∗
y [C Ky(KxAKx + KyAKy)−1Kx B] PxPy},
x P ∗
y [D − C Ky(KxAKx + KyAKy)−1Ky B]PxPy}.

(37)

(38)

(39)

(40)

(41)

(42)

With no conceptual diﬃculty (but a greater degree of book keeping), this
formulation may be extended to equations with tensor coeﬃcients, outlined
for instance in Appendix Appendix A.

of the scalar coeﬃcient into tensorial components, ¯axx = (R 1
and ¯ayy = (R 1

The ﬁrst and simplest test of this method is to homogenise a periodic coef-
ﬁcient that varies only in one direction (e.g. Engquist and Runborg (2002)),
i.e. where a = a(x), and whose periodicity length scale is small in comparison
to the overall size of the domain. Classical homogenisation predicts a splitting
0 dx′a−1(x′))−1
0 dx′a(x′)). We solve the 2D scalar-coeﬃcient diﬀusion equa-
tion, shown in Figure 3, where we build a 2D model of the coeﬃcient a and
decimate it using methods of homogenisation and raw ﬁltering. The coeﬃ-
cients obey axx = ayy, axy = 0 = ayx. We ﬁrst populate all the spatial points
of the coeﬃcient using a uniform random distribution and subsequently ﬁl-
ter out the upper third of the Fourier transform (i.e. by setting it to zero)
to conform with Orszag’s two-thirds rule (Orszag, 1971). A water level is
added to the coeﬃcient to ensure that its minimum is ﬁnite and positive (see
Figure 3).

Homogenization produces a tensor coeﬃcient at coarse scales, as in equa-
tion (38), whereas raw ﬁltering just removes the high spatial frequencies of the
scalar coeﬃcient. Comparing solutions obtained using these two decimated-
coeﬃcient models in Figure 4, we ﬁnd that the homogenized solution per-
forms slightly better than the naively ﬁltered case. Homogenisation does not

15

y

1

0.8

0.6

0.4

0.2

0

0

True Coefficient

0.5
x

1

8

6

4

2

y

1

0.8

0.6

0.4

0.2

0

0

Homogenized, xx

0.5
x

1

Exact

y

1

0.8

0.6

0.4

0.2

0

0

Filtered

0.5
x

1

4.6

4.4

4.2

4

3.8

Homogenized - exact
1

×10-3

5

Raw filtered - exact

×10-3

5

4.2
4.1
4
3.9
3.8
3.7

1

0.8

0.6

0.4

0.2

0

1

0.8

0.6

0.4

0.2

y

y

0.8

0.6

0.4

0.2

0

0

1

0.8

0.6

0.4

0.2

0

y

-5

1

0

0

0.5
x

0.5
x

1

0

0

0.5
x

1

0

-5

Figure 3: Finite-wavenumber homogenisation applied to the 2D diﬀusion equation with a
scalar coeﬃcient (upper-left panel). The homogenised (¯axx) and (raw) ﬁltered coeﬃcients,
shown in the upper-middle and upper-right panels. shows the exact solution, the lower-
left panel the diﬀerence between the homogenised and exact and the lower-right, the
diﬀerence between the raw-ﬁltered and exact solutions. Only 2 coeﬃcients are retained
from the full solution. There is little perceivable diﬀerence between the homogenised and
ﬁltered solutions. We use the freely available Portable Extensible Toolkit for Scientiﬁc
Computation (PETSc) to compute the solution on a 64 × 64-sized grid applying second-
order centered ﬁnite diﬀerences. Zero-Neumann boundary conditions are applied to the
upper and lower boundaries, ∂yu(x, y = 0) = 0 = ∂yu(x, y = 1), unit-Dirichlet on the left,
u(x = 0, y) = 1 and zero-Dirichlet on the right, u(x = 1, y) = 0 boundaries. Note that as
in Figure 1, we are careful to honour Orszag’s two-thirds rule (Orszag, 1971).

perform signiﬁcantly better than raw ﬁltering, as was observed in the 1-D
case, and the reason is not apparent.

Finally we study the eﬀect of basis sparsity of the coeﬃcient has on the
quality of the homogenised solution. We generate coeﬃcients that are sparse
in the Fourier basis (Figure 5) and compute solutions. The errors between the
exact and homogenised / ﬁltered solutions as a function of retained spectral
bandwidth are plotted in Figure 6. Note that because the power is narrowly
focused, raw ﬁltering errors are roughly constant to the point when the ﬁlter
begins to include the annulus (see upper-right panel in Figure 5), at which

16

%

 
r
o
r
r

E

1.1

1

0.9

0.8

0.7

0.6

0.5

0

L1, homogenized
L2, homogenized
L1, filtered
L2, filtered

5
10
Bandwidth retained %

15

Figure 4: Homogenization appears to perform better or approximately as well as raw ﬁlter-
ing in 2D: errors as measured in the L1, L2 norms between the exact and the homogenised
and ﬁltered solutions as a function of the retained bandwidth of the coeﬃcient for the case
shown in Figure 3. We solve the diﬀusion problem as described in Figure 3. Note that
homogenisation produces a tensor coeﬃcient whereas raw ﬁltering produces a low-pass
model of the original coeﬃcient, i.e. axx = ayy = ﬁlt(a). Homogenisation does better at
intermediate bandwidths, i.e. between zero wavenumber and at a third of the Nyquist
(Orszag’s two-thirds rule). The coeﬃcient has no power beyond a third of the Nyquist,
and therefore ﬁltering is seen to outperform (or approximately as well as) homogenisation.

point the error drops sharply. Homogenisation appears to perform well at
intermediate ranges of retained bandwidth, away from zero wavenumber and
a third of the Nyquist (keeping in mind Orszag’s two-thirds rule).

4. Conclusions

Numerical homogenization is a powerful methodology to build sub-grid-
scale models of coeﬃcients of diﬀerential equations in a variety of scenar-

17

y

1

0.8

0.6

0.4

0.2

0

0

True Coefficient

0.5
x

1

6
5
4
3
2
1

y

1

0.8

0.6

0.4

0.2

0

0

y

0.8

0.6

0.4

0.2

0

0

1

0.8

0.6

0.4

0.2

0

y

0.5
x

1

Exact

Homogenized, xx

Power spectrum, coefficient

y

k

60

40

20

0

0

40

60

20

kx

3

2.9

2.8

2.7

1

0.8

0.6

0.4

0.2

0

1

0.8

0.6

0.4

0.2

y

350
300
250
200
150
100
50

0

-5

Homogenized - exact
1

×10-3

5

Raw filtered - exact

×10-3

5

-5

1

0

0

0.5
x

0.5
x

1

0

0

0.5
x

1

Figure 5: Finite-wavenumber homogenisation applied to the 2D diﬀusion equation with a
scalar coeﬃcient (upper-left panel) that has a sparse Fourier representation (upper-right
panel). Nominally, the coeﬃcient would have had power up to a third of the Nyquist
(honouring Orszag’s two-thirds rule) but to enforce sparsity we limit the wavenumber
range over which the coeﬃcient has power. Note that in order to improve visibility, we
have subtracted the mean from the coeﬃcient (zero wavenumber power) in the upper-
right panel. The homogenised (¯axx) coeﬃcient is shown in the upper-middle panel. The
lower-middle panel shows the exact solution, the lower-left panel the diﬀerence between
the homogenised and exact and the lower-right, the diﬀerence between the raw-ﬁltered
and exact solutions. We use the publicly downloadable Portable Extensible Toolkit for
Scientiﬁc Computation (PETSc) to compute the solution on a 64 × 64-sized grid applying
second-order centered ﬁnite diﬀerences. Zero-Neumann boundary conditions are applied
to the upper and lower boundaries, ∂yu(x, y = 0) = 0 = ∂yu(x, y = 1), unit-Dirichlet on
the left, u(x = 0, y) = 1 and zero-Dirichlet on the right, u(x = 1, y) = 0 boundaries. Note
that as in Figure 1, we are careful to honour Orszag’s two-thirds rule (Orszag, 1971).

ios. The technique of numerical homogenisation bears a striking resemblance
to mode-elimination Renormalization Group (RG) as developed by Wilson
(Wilson, 1975). Indeed, RG has been applied to a wide range of problems
(mostly of the non-linear kind), including in ﬂuid mechanics, speciﬁcally to
model turbulence (Yakhot and Orszag, 1986). In this article, we apply RG
to linear problems, viz. the diﬀusion and wave equations with deterministic

18

0.71

0.7

0.69

0.68

0.67

0.66

0.65

0.64

0.63

0.62

%

 
r
o
r
r

E

0.61

0

5

L1, homogenized
L2, homogenized
L1, filtered
L2, filtered

20

25

10

15

Bandwidth retained %

Figure 6: Homogenisation performs better than raw ﬁltering when the coeﬃcient is sparse
in the basis (Figure 5): errors as measured in the L1, L2 norms between the exact and
the homogenised and ﬁltered solutions as a function of the retained bandwidth of the
coeﬃcient. We solve the diﬀusion problem as described in Figure 3. Note that homogeni-
sation produces a tensor coeﬃcient whereas raw ﬁltering produces a low-pass model of
the original coeﬃcient, i.e. axx = ayy = ﬁlt(a). Because there is no power between zero
wavenumber and the narrow annulus where all the power resides, the errors associated
raw ﬁltering are relatively ﬂat over a range. When the ﬁlter begins to include the annulus,
the raw ﬁltering error starts to drop sharply.

coeﬃcients. We describe how to build sub-grid-scale models (coarse descrip-
tors) of heterogeneous coeﬃcients of diﬀerential equations and characterise
the accuracy of the approximation as a function of the degree of coarsening.
This raises the more fundamental question of why RG works well in some
scenarios and not others. We trace the problem to the uncertainty princi-
ple, which can be derived for convolutions also (Stegel, 2000). A product
of functions in real space is encoded as a convolution in Fourier domain;
the extended uncertainty principle then states that localising convolutions

19

in Fourier domain results in a broadening in real space.
In other words,
squeezing in (k, k′)-space will cause the function to become delocalized in
(x, x′) space. This observation may be extended to diﬀerential equations
that evolve temporally in that squeezing in the spatial Fourier domain will
not only broaden the real-space representation but additionally, might in-
troduce temporal convolutions. Thus RG will likely not work in situations
where the convolution is strongly compressed in Fourier domain but where
the spatial representation does not account for delocalisation, i.e. where the
coeﬃcients continue are forced to assume the form ¯a(x, x′) = δ(x − x′) a(x).
Constructing the right basis on which to project the coeﬃcients can therefore
be critical to generating accurate coarsened models. Linear problems pro-
vide an excellent opportunity to gain insights of this sort into RG and can
additionally shed light on why sub-grid-scale models in turbulence perform
well on some occasions but not on others.

Appendix Appendix A analyzes the time-dependent wave equation and
appears to suggest that the uncertainty principle operates in an unexpected
fashion: concentrating the convolution operator in spatial domain results in
broadening in both space and time domains. Solutions to the linear wave
equation may be projected onto the eigen-basis of the operator, and discard-
ing high spatial wavenumbers implies that the corresponding eigenfunctions
are also removed. Because normal modes of the wave operator are at speciﬁc
wavenumbers and temporal frequencies, selectively removing some of them
has consequences in both spatial and temporal domains. This will likely
result in broadening in both space and time; the uncertainty principle will
thus likely involve the spatio-temporal density of normal modes of the wave
equation.

We have studied relatively simple problems in this article and much work
needs to be done to fortify these results. One of the more serious aspects that
remains to be addressed when solving large 3D homogenization problems is
that of storing and computing the inverses of these large matrices. Sparsity is
therefore a critical feature. The Fourier basis has poor sparsity properties and
consequently, wavelet or other bases may prove superior. It is also important
to characterize the eﬃciency and accuracy of the method over a wider range
of problems and more realistic scenarios.

20

Acknowledgements

The author acknowledges support from consultancy project PT54324 with
Shell India, Ramanujan fellowship SB/S2/RJN-73/2013, the Max-Planck
Partner Group Program and the NYU Abu Dhabi Center for Space Sci-
ence. The work has beneﬁted substantially from numerous conversations,
and SMH gratefully acknowledges discussions with Alain Plattner, Srinivasa
Varadhan, Rishi Sharma and Sandip Trivedi.

References

Avellaneda, M., Majda, A. J., 1990. Mathematical models with exact
renormalization for turbulent transport. Communications in mathemati-
cal physics 131 (2), 381–429.

Bensoussan, A., Lions, J. L., Papanicolaou, G., 1978. Asymptotic analysis

for periodic structures. Vol. 5. North Holland.

Brewster, M., Beylkin, G., 1995. A multiresolution strategy for numerical

homogenization. Appl. Comput. Harmon. Anal. (2), 327–349.

Capdeville, Y., Guillot, L., Marigo, J.-J., 2010. 1-d non-periodic homoge-
nization for the seismic wave equation. Geophysical Journal International
181 (2), 897–910.

Dahlen, F. A., Tromp, J., 1998. Theoretical Global Seismology. Princeton

University Press.

Dorobantu, M., Engquist, B., 1998. Wavelet-based numerical homogeniza-

tion. SIAM J. NUMER. ANAL 35, 540–559.

Engquist, B., Runborg, O., 2002. Wavelet-based numerical homogenization
with applications. In: Lecture Notes in Computational Science and Engi-
neering. Springer, pp. 97–148.

Kozlov, S. M., 1979. Averaging of random operators. Matematicheskii

Sbornik 151 (2), 188–202.

Kraichnan, R. H., May 1962. Stochastic Models for Many-Body Systems. II.
Finite Systems and Statistical Nonequilibrium. Journal of Mathematical
Physics 3, 496–521.

21

Orszag, S. A., 1971. On the elimination of aliasing in ﬁnite diﬀerence schemes
by ﬁltering high-wavenumber components. Journal of Atmospheric Sci-
ences 28, 1074.

Owhadi, H., Zhang, L., 2008. Numerical Homogenization of the Acoustic
Wave Equations with a Continuum of Scales. Computer Methods in Ap-
plied Mechanics and Engineering 198 (3-4), 397–406.

Papanicolaou, G. C., Varadhan, S. R. S., 1982. Diﬀusions with Random
Coeﬃcients. In: Kallianpur, G., Krishnaiah, P. R., Ghosh, J. K. (Eds.),
Statistics and Probability: Essays in honor of C. R. Rao. North-Holland,
pp. 253–262.

Slepian, D., 1983. Some comments on fourier analysis, uncertainty and mod-

eling. SIAM review 25 (3), 379–393.

Smith, L. M., Woodruﬀ, S. L., 1998. Renormalization-group analysis of tur-

bulence. Annual Review of Fluid Mechanics 30 (1), 275–310.

Stegel, G., 2000. An uncertainty principle for convolution operators on dis-
crete groups. Proceedings of the American Mathematical Society 128 (6),
1807–1812.

Wilson, K. G., 1975. The renormalization group: Critical phenomena and

the kondo problem. Reviews of Modern Physics 47 (4), 773.

Yakhot, V., Orszag, S. A., 1986. Renormalization group analysis of turbu-

lence. i. basic theory. Journal of scientiﬁc computing 1 (1), 3–51.

Appendix A. Tensor equation

Similar extensions to higher-order wavespeed tensors in 3-D are possible.
We only outline the method, leaving its execution and testing to a future
occasion. Consider the general seismic wave equation

ρ∂2

t u − ∇ · (T : ∇u) = f(x, t),

(A.1)

where T = {τijkl} is a fourth-order tensor (Dahlen and Tromp, 1998). We
transform the equation to temporal Fourier domain

− ρω2u − ∇ · (T : ∇u) = f(x, ω),

(A.2)

22

where for convenience we have not explicitly indicated that u is the temporal
Fourier trasform. The projection of the spatial operator on to the Fourier
basis is written as

0

(cid:18)K P

0 Ki(cid:19)(cid:18)Dijkℓ Cijkℓ

Bijkℓ Aijkℓ(cid:19)(cid:18)K P

0 Kk(cid:19)(cid:18)uP

ℓ
uQ

0

k

i

ℓ (cid:19) ,

Xi,k

where

FxFyFz τijkℓ F −1

x F −1

y F −1

z = (cid:18)Dijkℓ Cijkℓ

Bijkℓ Aijkℓ(cid:19) .

The product in equation (A.3) is simplied

Xi,k

which we rewrite as

(cid:18)K P

i DijkℓK P
KiBijkℓK P
k

k K P

i CijkℓKk

KiAijkℓKk (cid:19)(cid:18)uP

ℓ
uQ

ℓ (cid:19) ,

(cid:18) ¯Djℓ
¯Bjℓ

¯Cjℓ
¯Ajℓ(cid:19)(cid:18)uP

ℓ
uQ

ℓ (cid:19) ,

(A.3)

(A.4)

(A.5)

(A.6)

where the bar indicates that sums over indices i, k have been taken into ac-
count. Setting the high-frequency components to zero, we have three equa-
tions for each index j and three unknowns for each index ℓ in 3-D space.
Thus

¯A11 + ρω2

¯A21
¯A31




¯A22 + ρω2

¯A12

¯A32

¯A13
¯A23

¯A33 + ρω2




uQ
1
uQ
2
uQ
3





 = −


¯B11
¯B21
¯B31

¯B12
¯B22
¯B32

¯A13
¯B23
¯B33








+


uP
1
uP
2
uP
3
(A.7)

f Q
1
f Q
2
f Q
3


 ,

and leaving aside the source for the moment, we obtain the corrector

− CA−1B


uP
1
uP
2
uP
3

where

¯A22 + ρω2

¯A21
¯A31

¯A11 + ρω2
A = 

¯C11
C = 
¯C21

¯C31

¯C12
¯C22
¯C32

¯A12

¯A32

 ,

¯C13
¯C23
¯C33

¯A13
¯A23

¯A33 + ρω2
¯D11
D = 
¯D21

¯D31

23


 ,
¯B11

 , B = 
¯B21

¯B31

 .

¯D12
¯D22
¯D32

¯D13
¯D23
¯D33

(A.8)

¯B12
¯B22
¯B32

(A.9)

¯B13
¯B23
¯B33


 ,

(A.10)

The eﬀective wavespeed matrix is thus D − CA−1B, and is a function of
temporal frequency because the deﬁnition of A in equation (A.9) has an ω2 in
it. From this relation, each homogenized wavespeed component ¯τijkl may be
i DijkℓK P
k
and similarly for matrices B and C. The diﬃculty lies in being able to store
and invert the matrix composed of ¯Aij. Computing matrix products may
also be non trivial. The homogenized source is

computing the sum above while keeping in mind that ¯Djℓ = Pik K P

¯f1

¯f2

¯f3


 = 


f P
1
f P
2
f P
3

 − C A−1



f Q
1
f Q
2
f Q
3


 .

(A.11)

Taking a step back, we see that spatial homogenization creates a model
of wavespeed that is a function of temporal frequency, which multiplies the
(frequency-dependent) solution. This is a product in temporal Fourier do-
main, and therefore a convolution in the time domain. Thus squeezing
the (convolutional) wavespeed operator in spatial Fourier domain results in
broadening not just in real space but time as well. This is to be expected
since eigenfunctions of the wave operator, which depend on both spatial
wavenumber and temporal frequency form the basis on which wave solutions
are projected. Reducing the size of this basis, i.e. discarding high-frequency
solutions to the operator, has repercussions therefore in both the spatial and
temporal domains, resulting in a broadened (t, t′), (x, x′). Ignoring the (t, t′)
and (x, x′) dependencies introduce further errors when evaluating solutions.
This analysis suggests the existence of an uncertainty principle that involves
both space and time and may point to reasons why strongly interacting sys-
tems such as turbulence have not succumbed to renormalization group.

24

