6
1
0
2

 
r
a

 

M
1
1

 
 
]

C
H
.
s
c
[
 
 

1
v
5
9
7
3
0

.

3
0
6
1
:
v
i
X
r
a

Demonstrating the Feasibility of

Automatic Game Balancing

Vanessa Volz

Günter Rudolph

Boris Naujoks

Abstract

Game balancing is an important part of the (computer) game design process, in which designers adapt a
game prototype so that the resulting gameplay is as entertaining as possible. In industry, the evaluation
of a game is often based on costly playtests with human players. It suggests itself to automate this
process using surrogate models for the prediction of gameplay and outcome. In this paper, the feasibility of
automatic balancing using simulation- and deck-based objectives is investigated for the card game top
trumps. Additionally, the necessity of a multi-objective approach is asserted by a comparison with the
only known (single-objective) method. We apply a multi-objective evolutionary algorithm to obtain decks
that optimise objectives, e.g. win rate and average number of tricks, developed to express the fairness and
the excitement of a game of top trumps. The results are compared with decks from published top trumps
decks using simulation-based objectives. The possibility to generate decks better or at least as good as decks
from published top trumps decks in terms of these objectives is demonstrated. Our results indicate that
automatic balancing with the presented approach is feasible even for more complex games such as real-time
strategy games.

I.

Introduction

The increasing complexity and popularity of
(computer) games result in numerous chal-
lenges for game designers. Especially ﬁne-
tuning game mechanics, which affects the feel
and required skill proﬁle of a game signiﬁ-
cantly, is a difﬁcult task. For example, chang-
ing the time between shots for the sniper riﬂe
in Halo 3 from 0.5 to 0.7 seconds impacted the
gameplay signiﬁcantly according to designer
Jaime Griesemer1.

It is important to draw attention to the fact
that the game designer’s vision of a game can
rarely be condensed into just one intended
game characteristic. In competitive games, for
example, it is certainly important to consider
fairness, meaning that the game outcome de-
pends on skill rather than luck (skill-based) and
that the win rate of two equally matched play-
ers is approx. 50% (unbiased). But additionally,
the outcome should not be deterministic and
entail exciting gameplay, possibly favouring
tight outcomes.

balancing process with tools that can automati-
cally evaluate and suggest different game pa-
rameter conﬁgurations, which fulﬁl a set of
predeﬁned goals (cf. [14]). However, since the
effects of certain goals tend to be obscure at
the time of design, we suggest to use a multi-
objective approach which allows to postpone
the decision on a conﬁguration until the trade-
offs can be observed.
In this paper, we in-
troduce game balancing as a multi-objective
optimisation problem and demonstrate the fea-
sibility of automating the process in a case
study.

For the purpose of this paper, we deﬁne
game balancing as the modiﬁcation of param-
eters of the constitutive and operational rules
of a game (i.e. the underlying physics and the
induced consequences / feedback) in order to
achieve optimal conﬁgurations in terms of a set
of goals. To this end, we analyse the card game
top trumps and different approaches to balance
it automatically, demonstrating the feasibility
and advantages of a multi-objective approach
as well as possibilities to introduce surrogate
models.

It therefore suggests itself to support the
1http://www.gdcvault.com/play/1012211/Design-in-Detail-Changing-the

1

In the following section, we present related
work on top trumps, balancing for multiplayer
competitive games and gameplay evaluations.
The subsequent section highlights some impor-
tant concepts speciﬁc to the game top trumps
and multi-objective optimisation, before the fol-
lowing section details our research approach
including the research questions posed. After-
wards, the results of our analysis are presented
and discussed, before we ﬁnish with a conclu-
sion and outlook on future work.

II. Related Work

Cardona et al. use an evolutionary algorithm
to select cards for top trumps games from open
data [4]. The focus of their research, however,
is the potential to teach players about data and
learn about it using games. The authors de-
velop and use a single-objective dominance-
related measure to evaluate the balance of a
given deck. This measure is used as a reference
in this paper (cf. fD in Sec. IV).

Jaffe introduces a technique called re-
stricted play that is supposed to enable de-
signer to express balancing goals in terms of
the win rate of a suitably restricted agent [11].
However, this approach necessitates expert
knowledge about the game as well as an AI
and several potentially computationally expen-
sive simulations. In contrast, we explore other
possibilities to express design goals and utilise
non-simulation based metrics.

Chen et al. intend to solve “the balance
problem of massively multiplayer online role-
playing games using co-evolutionary program-
ming” [5]. However, they focus on level pro-
gression and ignore any balancing concerns
apart from equalising the win-rates of different
in-game characters.

Yet, most work involving the evaluation of
a game conﬁguration is related to procedural
content generation, speciﬁcally map or level
generation. Several papers focus on issuing
guarantees, e.g. with regards to playability [18],
solvability [17], or diversity [15, 10]. Other re-
search areas include dynamic difﬁculty adapta-
tion for single-player games [9], the generation

2

of rules [2, 16], and more interactive versions
of game design, e.g. mixed-initiative [13].

III. Basics

In the following, the game top trumps is in-
troduced and theoretical background for the
applied methods from multi-objective optimi-
sation and performance evaluation is sum-
marised.

I. Top Trumps
Top trumps is a themed card game originally
published in the 1970s and relaunched in 1999.
Popular themes include cars, motorcycles, and
aircrafts. Each card in the deck corresponds to
a speciﬁc member of the theme (such as a car
model for cars) and displays several of its char-
acteristics, such as acceleration, cubic capacity,
performance, or top speed. An example can be
found in Fig. 1.

Figure 1: Card from a train-themed top trumps deck

with 5 categories (winningmoves.co.uk)

At the start of a game, the deck is shufﬂed
and distributed evenly among players. The
starting player chooses a characteristic whose
value is then compared to the corresponding
values on the cards of the remaining players.
The player with the highest value receives all

cards in the trick and then continues the game
by selecting a new attribute from their next
card. The game usually ends when at least one
player has lost all their cards. However, for
the purpose of this paper, we end the game
after all cards have been played once in order
to avoid possible issues of non-ending games.

II. Multi-objective optimisation
Switching from single- to multi-objective opti-
misation has advantages and disadvantages [6].
While it is often better to consider multiple ob-
jectives for technical optimisation tasks, the
complete order of individuals is lost in this
case. Instead, one has to handle incomparable
solutions, e.g. two solutions that are better than
the other one in at least one objective. This ob-
jective or component wise approach goes back
to the deﬁnition of Pareto dominance. A solu-
tion or individual x is said to strictly (Pareto)
dominate another solution y (denoted x ≺ y) iff
x is better than y in all objectives. Considering
minimisation this reads
x ≺ y
under ﬁtness function

f : X ⊂ Rn → Rm, f (x) =(cid:0) f1(x), . . . , fm(x)(cid:1).

iff ∀i ∈ {1, . . . , m} :

f (xi) < f (yi)

the set of

Based on this,
(Pareto) non-
dominated solutions (Pareto set) is deﬁned as
the set of incomparable solutions as deﬁned
above and the Pareto front to be the image of
the Pareto set under ﬁtness function f .

Nevertheless, even incomparable solutions
need to be distinguished when it comes to se-
lection in an evolutionary algorithm. In the evo-
lutionary multi-objective optimiser considered,
SMS-EMOA [1], this is done based on the con-
tribution to the hypervolume (i.e the amount of
objective space covered by a Pareto front w.r.t.
a predeﬁned reference point). The contribution
of a single solution to the overall hypervolume
of the front is used as the secondary ranking
criterion for the (µ + 1)-approach to selection.
The ﬁrst one is the non-dominated sorting rank
assigned to each solution.

For measuring the performance of different
SMS-EMOA runs, we consider two other per-
formance indicators next to the hypervolume

of the resulting Pareto fronts. These are the
additive ε indicator as well as the R2 indicator,
all presented by Knowles et al. [12]. These indi-
cators are also considered for the termination
of EMOA runs using online convergence detec-
tion as introduced by Trautmann et al. [19].

For variation in SMS-EMOA, the most
widely used operators in the ﬁeld are consid-
ered, namely simulated binary crossover and
polynomial mutation. These are parametrised
using pc = 1.0, pm = 1/n, ηc = 20.0, and
ηm = 15.0, respectively, cf. Deb [6].

for
III. Performance Measurement
Stochastic Multi-objective Optimisers

The unary performance indicators introduced
above only express the performance of a single
optimisation run. However, to evaluate and
compare the relative performance of stochastic
optimisers with potentially signiﬁcantly dif-
ferent outcomes (such as evolutionary multi-
objective algorithms), measurements for the
statistical performance are needed.

For this purpose, (empirical) attainment
functions that describe the sets of goals
achieved with different approaches were pro-
posed, expressing both the quality of the
achieved solutions as well as their spread over
multiple optimisation runs [7]. Based on these
functions, the set of goals that are reached in
50% (or other quantiles) of the runs of the opti-
misers can be computed (also known as 50%-
attainment surface). Comparing the attainment
surfaces of different optimisers is already a
much better indicator for their performances
than comparing the best solutions achieved, as
they are subject to stochastic inﬂuences.

Additionally, Fonseca et al. detail a statisti-
cal testing procedure (akin to a two-sample
two-sided Kolmogorov-Smirnov hypothesis
test) based on the ﬁrst- and second-order attain-
ment-functions of two optimisers [7]. If the null
hypotheses of these tests are rejected, it can be
assumed that the differences in performance
of the considered optimisers are statistically
signiﬁcant.

3

IV. Approach

For the remainder of this paper, we denote the
number of cards in a deck as K (even number)
and the number of characteristics (categories)
displayed on a card L. Two representations are
used for a deck, (1) as a vector x ∈ RKL for
the evolutionary algorithm and (2) as a K × L
matrix V for easier understanding.
Accordingly, the value of the k-th card in
the l-th category is vk,l with k ∈ {1, . . . , K}, l ∈
{1, . . . , L}. The k-th card in a deck is vk,· =
(vk,1, . . . , vk,L). A partial order for the cards
can be expressed with vk1,· (cid:31) vk2,· meaning
that card vk2,· beats vk1,· in all categories

In this paper, we only consider decks that
fulﬁl two basic requirements we deem existen-
tial for entertaining gameplay:

• all cards in the deck are unique:
(cid:64)(k1, k2) ∈ {1, . . . , K}2, k1 (cid:54)= k2 with
vk1,· = vk2,·
• there is no strictly dominant card in the
deck:
(cid:64)k1 ∈ {1, . . . , K} with vk2,· ≺ vk1,·∀k2 ∈
{1, . . . , K}
(in this case, dominant cards have larger
values, since higher values win according
to the game rules)

ent knowledge about the played deck:

We consider two agents p4, p0 with differ-
• p4 knows the exact values of all cards in
• p0 only knows the valid value range for

the deck

all values vk,l

Both agents are able to perfectly remember
which cards have been played already. Player
p4 is expected to perform better than p0 on
average on a balanced deck. In order to reduce
the number of simulations needed to verify
this, only games of a player p4 against p0 will
be considered here.

In our simulation, both of these agents es-
timate the probabilities to win with each cat-
egory on a given card with consideration of
their respective knowledge about the deck as
well as the cards already played. p0 therefore
has to assume a uniform distribution and will
only take the values of their current card into

4

account. p4, in contrast, is able to model the
probability more precisely by accounting for
the number of cards with a higher value in
each category that are still in play.

4

> K

Let RG be the number of simulation runs.
The number of tricks that p4 received at the end
of the r-th game (r ∈ {1, . . . , RG}) with deck
V will be called t(r,V)
henceforth, and thus iff
t(r,V)
= K
2 the
4
game was a draw, and else, p4 lost. t(r,V)
is
the number of times the player choosing the
category did not win the trick in round r of the
game with deck V, i.e. the number of times the
player announcing the categories changed.

2 , p4 won the game, iff t(r,V)

4

c

Since optimisation tasks are generally as-
sumed to be minimisation problems (without
loss of generality), this convention is satisﬁed
here as well for the sake of consistency. There-
fore, maximisation problems are transformed
into minimisation task by multiplication with
−1. In the course of this paper, we compare
8 card sets from purchased decks with decks
generated using three different approaches and
corresponding ﬁtness functions detailed in the
following:
• Single-objective optimisation according
to the dominance-related (D) measure
proposed in [4] which describes the dis-
tance of the cards in a deck V to the
Pareto front:

fD(V) = − 1
K

K∑

K∑

k=1

i=1

(1 − 1(vk ≺ vi))

• Multi-objective optimisation with simula-
tion-based measures developed with ex-
pert knowledge that are supposed to ex-
press the decks V’s fairness, excitement,
and resulting balance (B):

(cid:32)

fB(V) =

− 1
RG

RG∑

r=1

t(r,V)
c

,

− 1
RG

RG∑

1

r=1
1
RG

RG∑

r=1

t(r,V)
4

(cid:18)
(cid:12)(cid:12)(cid:12)(cid:12)2t(r,V)

4

,

(cid:19)
(cid:33)
(cid:12)(cid:12)(cid:12)(cid:12)

.

>

K
2
− K
2

• Multi-objective optimisation with simula-
tion-independent measures developed in
the pre-experimental planning phase (cf.

Sec. II) as surrogate (S) for (the simula-
tion-based) ﬁtness fB of different decks:
fS(V) =(−hv(V),

− sd({avg(v·,l)|l ∈ {1, . . . , L}})),
with the dominated hypervolume hv of a
deck V, sd the empirical standard devia-
tion and avg the average.

In order to compare the aforementioned
approaches, an SMS-EMOA is used to approxi-
mate the Pareto front for the ﬁtness functions
fS and fB. Online convergence detection, varia-
tion operators, and parameters as described in
Sec. II are used. For the single-objective ﬁtness
fD, the algorithm was modiﬁed as little as pos-
sible to enable comparisons.Thus, a (µ + 1)-EA
was used with the same variation operators
and equivalent selection. The convergence was
tested based on the variations of some single-
objective performance indicators, namely the
min, mean and max ﬁtness values of the active
population. The experiments were conducted
using R with the help of the emoa package2
and a related SMS-EMOA implementation3,4.

I. Research questions

The different approaches to ﬁnding a balanced
top trumps deck are evaluated and compared
in Sec. V. We focus on the following topics:
I Problems of manual balancing and the solu-

tions offered by automation

II Feasibility of automatic balancing in terms

of required quality

III Performance of multi- and single-objective

approaches

IV Feasibility of automatic balancing in terms

of computational costs

II. Preexperimental planning

Before any experiments can be executed, the
test case has to be deﬁned more accurately. The
following assumptions are made:

• The number of cards and categories are
set to K = 32, L = 4 in accordance with
these values for the purchased decks.
• The valid range of all values vl,k is set
to [1, 10] ∈ R, which all decks can be
transformed to. This results in an inﬁnite
number of possible cards, but other op-
tions entail the necessity to construct a
genotype-phenotype mapping.

Due to the large number of possible card
distributions among the players, the order of
the cards in a deck, and different starting play-
ers, a single deck could potentially result in
a large number of different games (4K!). As
a consequence, all simulation-based metrics
to evaluate the deck have to be approximated.
The values of the metrics in fB, which all ex-
press an average, should be as close to the true
mean of the respective distributions as possible.
To ensure the quality of the approximation, a
statistical t-test is conducted to compute the
size of the conﬁdence interval for each metric
for RG between 100 and 10 000 at a conﬁdence
level of 0.95. This test is repeated 500 times
for each possible sample size and each met-
ric and. Assuming a normal distribution, the
.95-quantile is stored as the result. RG = 2 000
games are found to be a good tradeoff between
computational time and ﬁtness approximation
accuracy for all metrics.

An equivalent test is conducted to decide
on the number of optimisation runs necessary
to approximate the performance of the corre-
sponding approach (to a suitable conﬁdence
interval). Here, the HV-, - and R2-indicators
are considered with the Pareto front resulting
from all of these runs as a reference set. After
considering the results, the number of runs RO
was set to RO = 100.

For the simulation-independent approach,
metrics that do not require a simulation are de-
veloped. The hypervolume is chosen as a mea-
sure to achieve as many non-dominated cards
in each deck as possible. This is expected to
improve the fairness of a deck (also cf. fD). The

2https://cran.r-project.org/web/packages/emoa/
3https://github.com/olafmersmann/emoa
4Additional code written for the simulation and experiments will be made accessible after publication

5

standard deviation of category means is used
to increase the signiﬁcance of player p0’s disad-
vantage, thereby resulting in a higher win-rate
for p4.

Different population sizes are tested and
the resulting Pareto fronts are compared for
a quick estimate of their performance. Based
on the results received, approaches are evalu-
ated on runs with population sizes of 10 and
100 individuals. This accounts for both small
populations with a high selection pressure and
also bigger populations with a larger spread.

V. Results

We evaluate all approaches according to the
ﬁtness function fB which is based on expert
knowledge and therefore assumed to charac-
terise a balanced deck best. This assumption
is supported by the fact that most of the pur-
chased decks are located on the approximated
Pareto front according to these metrics.

In the remainder of the paper, we use the
letter corresponding to the ﬁtness function and
the population size to refer to the union of the
Pareto fronts of RO = 100 runs with the respec-
tive ﬁtness function and population size for the
multi-objective approaches. The introduced
acronym with an added index p refers to the
Pareto front of the respective set with regards
to fB. A numerical index stands for the attain-
ment surfaces to the indicated level. For exam-
ple, S10 is the union of all Pareto fronts from
optimiser runs with population size 10 and ﬁt-
ness function fS, S10p is the Pareto front of this
set and S1050 is its 50% attainment surface. For
the single-objective approach, the union of the
best individuals achieved in RO = 100 runs are
considered instead, because the populations
converge to one deck. The set of purchased
decks will henceforth be denoted PD.

To facilitate the discussion of the experi-
ments, the results of the three different ap-
proaches are plotted in terms of their perfor-
mance on the ﬁtness function fB. Figure 2
depicts the sets listed in Tab. 1. Figure 3 vi-
sualises the 50%-attainment surfaces as well
as the Pareto fronts resulting from the Pareto

6

front union for each approach. The legend
for all plots can be found in Tab. 1, where
the same colour scheme is used to refer to the
Pareto fronts and attainment surfaces of the
respective approaches.

Table 1: Legend providing the color assignment to the
results of different optimiser runs as depicted
in the Fig. 2 and Fig. 3. The same colour is
assigned to all results from one approach, i.e.
B10, B1050 and B10p have the same colour.

B10
B100

D10
D100

S10
S100

PD

I. Automatic Balancing Advantages

To evaluate the advantages of automatic bal-
ancing, the following hypotheses are proposed.
I-C1 The number of tests needed to approxi-
mate some simulation-based metrics for a
single deck to an appropriate accuracy is
very high and possibly exceeds the num-
ber of playtests that could reasonably be
done with human players.

I-C2 Many of the purchased decks are unfair
in the sense that the game’s outcome de-
pends strongly on luck and less on the
players’ skill levels.

With these hypotheses, the effort needed for
manual balancing is considered and the per-
formance of PD (i.e. likely manually balanced
decks) is compared to that of automatically
balanced decks.

The t-test described in Sec. II already de-
termined that the best tradeoff between the
accuracy of the approximation of simulation-
based metrics and the number of simulations
RG was ≈ 2 000. Considering the large effort
playtests with humans necessitate as well as
the bias induced by having different players
play, testing 2 000 rounds of a game with hu-
mans is tedious and potentially not even pos-
sible on smaller budgets. For example, the
standard deviation on fB for the decks in B10
is ≈ (0.0427, 0.3191, 0.3576).
If we assume
we had 100 players play 10 games each, the
resulting conﬁdence interval for α = 0.05 is

Figure 2: Union of all Pareto fronts of RO = 100 runs for all approaches considered (refer to legend in Fig. 1) from two

different perspectives. Elements of the shared Pareto front are depicted with larger squares.

Figure 3: 50%-attainment surfaces (left) and Pareto fronts (rights) per approach of the union of all Pareto fronts from
RO = 100 optimisation runs (depicted in Fig. 2). Refer to legend in Fig. 1 for the colour scheme. Elements of
the shared Pareto front are depicted with larger squares.

≈ (0.0442, 0.4298, 0.15), which would not allow
the designers to distinguish between different
solutions and is therefore not accurate enough.
The standard deviation as well as the number
of games needed would likely increase with
the complexity of the game as well. Therefore,
a deﬁnitive advantage of automatic balancing
over manual playtests is the possibility of a
quantitative analysis of simulation-based met-
rics (cf. [11]).

Except for a single deck (motor cycles), the
purchased decks are all on the edge of the
estimated Pareto front with the worst perfor-
mances in terms of the win-rate of p4. This is

obvious in Fig. 3. The low win-rates for p4
are probably due to the fact that the number of
non-dominated cards in those decks in PD is
relatively low. The fD average is ≈ −24.12 com-
pared to optimum −31 (only non-dominated
cards). This means that the resulting game-
play depends heavily on luck because there are
card combinations with which a player sim-
ply cannot win regardless of their skill. The
only exception is the motor cycle deck with a
value for fD of −30.4375 and a much better p4
win-rate of approx. 0.8.

Thus, we demonstrated that the effort
needed to evaluate one deck is beyond a rea-

7

sonable number of playthroughs. Additionally,
the manually balanced decks are located on
the extreme edges of the Pareto front, imply-
ing that it is difﬁcult to ﬁnd less extreme so-
lutions manually. This also suggests that the
approximation of the Pareto front could help a
designer by giving them a more sophisticated
idea about the characteristics of their game and
potential alternatives. The ﬁndings by Nelson
and Mateas also connote that designers see po-
tential in automatic balancing tools to support
the balancing process [14].

II. Automatic Balancing Quality
Next, we demonstrate the feasibility of auto-
matic balancing, i.e. that at least some of the
automatically balanced decks perform on par
with the purchased decks.
II-C1 Automatically balanced decks are on the

Pareto front.

II-C2 The results for II-C1 are statistically sig-

niﬁcant.

As is obvious from the plots (especially the
right plot in Fig. 3), automatically balanced
decks (S10 and B10) make up a large part of
the Pareto front and are thus not dominated
by the purchased decks. Moreover, most pur-
chased decks are concentrated at the extreme
edges of the front.

The same is true for individuals in S1050
and B1050, which ensures that, despite the
stochasticity of the approach, decks on the
Pareto front can be achieved in at least 50%
of all optimisation runs, making the result sta-
tistically relevant.

III. Single- and Multi-objective perfor-
mance
We analyse whether the multi-objectiﬁcation
of the approach used by Cardona et al. [4]
could result in better performing individuals.
Therefore we extend fD to fS. The bigger
the dominated hypervolume (the ﬁrst part of
fS), the more non-dominated cards are in a
deck, which is expressed by fD. The hypervol-
5https://eden.dei.uc.pt/~cmfonsec/software.html

8

ume additionally favours cards with a larger
spread, which does not affect the dominance-
relationship (or the outcome of a playthrough
or any simulation-based ﬁtness values). The
second part of fS is the standard deviation of
the category means. The higher the deviation,
the more problematic is the strategy of player
p0 to assume uniform distributions for the cate-
gories to make up for their lack of knowledge.
III-C1 There is a signiﬁcant difference between
the (empirical) attainment functions of
the considered multi-objective (S10, S100)
and single-objective (D10, D100) optimi-
sation approaches.

III-C2 The results of the single-objective ap-
proach (D10, D100) perform signiﬁ-
cantly worse than the multi-objective
ones (S10,S100) in terms of fB.

In order to test hypothesis III-C1, the statistical
testing procedure for the comparison of empir-
ical attainment surfaces described by Fonseca
et al. [7] is conducted using software published
by C. Fonseca5. With 10 000 random mutations
and α = 0.05, the null hypothesis (the attain-
ment function of two approaches are equally
distributed) is rejected with a p-value of 0 (crit-
ical value 0.23, test statistic 1) for all compar-
isons in {D10, D100} × {S10, S100}. This re-
sult was expected as, judging from the visuali-
sations (e.g. in Fig. 2), the individuals found
by the analysed approaches are in very differ-
ent areas. Additionally, the results found by
the single-objective approach have a very low
spread, which is probably owed to the charac-
ter of the ﬁtness measure fD.

The sets of solutions found for the single-
objective approaches are both strictly domi-
nated by both surrogate approaches according
to the deﬁnition by Knowles et al. [12]. For-
mally, it holds that

(D1050 ∪ D10050) ≺ (D10 ∪ D100)

≺ S1050 ≺ S10

(D1050 ∪ D10050) ≺ (D10 ∪ D100)

(cid:107) S10050 ≺ S100.

The test for hypothesis III-C1 has shown that
the attainment functions of the approaches are
not the same. This indicates that using ﬁtness
function fS instead of fD has improved the
results in terms of fB, thus conﬁrming III-C2.
This is suggests that the multi-objectiﬁcation
of fD can indeed improve the achieved results
in this case.

IV. Computational Costs and Surro-
gate Objectives
We now address the feasibility of automatic
balancing in terms of computational costs. In
Sec. II, we have already analysed and veriﬁed
its feasibility on function fB. Therefore, the
computational costs needed with RG = 2 000
simulations per game and RO = 100 optimi-
sation runs are obviously manageable for the
considered application.

However, a simulation-based approach to
balancing might prove too costly for more com-
plex games with computationally expensive
simulations or a large game-state space. We
approach this problem by investigating the pos-
sibility of using simulation independent mea-
sures (e.g fS) instead of fB. Naturally, in prac-
tice these measures would need to be devel-
oped in accordance with the intended balanc-
ing goals and observations of the optimisers’
behaviour, similar to what is described in Sec.
II.

The following hypotheses are put forward
in order to investigate the computational costs
of automatic balancing and the feasibility of
simulation-independent objectives:
IV-C1 Some results optimised based on ﬁtness
function fS (S10, S100) are not dominated
by B10 and B100.

IV-C2 The best individuals in S10 and S100
perform at least equally well as the ones
in B10 and B100 in terms of performance
indicators.

IV-C3 There is no signiﬁcant difference
functions of

between the attainment
S10, S100 and B10, B100.

IV-C4 The results for IV-C1 and IV-C2 are sta-

tistically signiﬁcant.

As visualised in Fig. 2 and Fig. 3, there are
individuals in S10 on the shared Pareto front
and which are therefore not dominated by any
individual in B10 ∪ B100. In fact, B100 ≺ S10
and B10(cid:107)S10. For S100, it can only be said that
S100(cid:107)B100, making IV-C1 only true for S10.
In order to compare the performances of
the Pareto fronts of the approaches considered
here, the performance indicators for HV,  and
R2 are computed for S10p, S100p, B10p, B100p.
To facilitate the interpretation of these values,
the aforementioned sets are normalised (result-
ing in values between 1 and 2, cf. [19]) with
regards to all values achieved (cf. Fig. 2) be-
fore computing the indicators. The normalised
Pareto front of the union of all achieved fronts
is used as a reference set (cf. Fig. 3 (right)).
The resulting indicator values can be found in
the upper half of Tab. 2. The non-dominated
sorting ranks in Tab. 2 (top half) clearly show
that hypothesis II-C2 is true for the computed
values and that the approaches with the same
population size perform equally well.

Table 2: Normalised indicator values for the Pareto
fronts and 50%-attainment surfaces of the con-
sidered approaches (cf. Fig. 3) as well as their
resulting ranks. The rank value in brackets are
alternatives accounting for statistically insignif-
icant distinctions.

set
B10p
B100p
S10p
S100p
B1050
B10050
S1050
S10050

HV
0.241
0.541
0.177
0.475
0.490
0.638
0.527
0.676

fﬂ

0.329
0.559
0.368
0.501
0.555
0.650
0.565
0.692

R2
0.103
0.203
0.091
0.206
0.203
0.258
0.222
0.288

rank
1
2 (3)
1
2
1 (1)
3 (2)
2 (1)
4 (3)

In order to test the statical signiﬁcance of
this statement, the width w of the conﬁdence
interval for α = 0.05 for each set and each indi-
cator is computed. This is done using a t-test
to estimate the true indicator means on the
separately achieved performance indicators for
RO = 100 runs for each approach, normalised

9

as before. When accounting for the uncertainty
expressed in the conﬁdence intervals, all dif-
ferences in performance indicators in Tab. 2
(top half) are statistically signiﬁcant except for
the difference in R2 for B10 and S10, as well
as B100 and S100. This means that in the true
ranking, B100 could be ranked 3 instead of 2.
The tests used to compare empirical attain-
ment functions for hypothesis III-C1 described
in Sec. III are applied again here to compare
the attainment functions for all combinations of
B10, B100 and S10, S100. Contrary to hypothe-
sis IV-C3, the tests all reject the null hypothesis
of equal attainment functions with a p-value
of 0, although the decisions are a bit tighter
than in Sec. III. Thus, hypothesis IV-C3 can
not be conﬁrmed. The differences in attain-
ment functions are likely due to the fact that
the compared sets occupy different areas in
the objective space (cf. Fig. 2). This can be
explained by failing to express the excitement
of a playthrough in fS, which was constructed
to better express a deck’s fairness starting from
fD (cf. Sec. III). Therefore, if the goal was to
approximate the solutions obtained from fB
with simulation-independent ﬁtness measures,
different ones should be selected, possibly us-
ing the p-value of the aforementioned test as
an indicator for their quality.

From Fig. 3 (left) it is obvious that both
B1050 and S1050 contain individuals on the
shared Pareto front, thus proving that IV-C1
is true in at least 50% of optimisation runs.
The performance indicators for the respective
50%-attainment surfaces for the respective ap-
proaches are listed in Tab. 2 (bottom half),
along with their ranks and the possible true
rank when uncertainty is accounted for. In this
case, S10050 performs signiﬁcantly worse than
all the other approaches considered. However,
S1050 deﬁnitely performs better than B10050
and there is no clear ranking of the perfor-
mances of S1050 and B1050. This implies that
hypothesis IV-C4 is true as well.

Since the values in Tab. 2 are all based on
normalised outcomes, the absolute values can
be compared. As expected, the 50%-attainment
surfaces all perform worse than their Pareto

10

front counterpart and the differences are signif-
icant. Interestingly, the differences per indica-
tor are smaller in the bottom half of Tab. 2. This
reﬂects the fact that the distances of the 50%-
attainment surfaces of the different approaches
in objective space are visibly smaller in Fig. 3
(left) than the Pareto fronts in Fig. 3 (right).
There are also more individuals in S10050 and
B10050 when compared to S100p and B100p,
respectively, which explains their smaller loss
in performance indicators. This is because both
approaches experience less spread in the direc-
tion of the optimum.

V. Additional Observations

Next to the results discussed previously, some
interesting observations were made during the
experiments.

The single-objective optimisation approach
converges to one deck for both population
sizes tested, even though all decks with exclu-
sively non-dominated cards perform equally
well. The optimal ﬁtness value for fD, 31, is
achieved in almost all runs. This suggests that
the algorithm used for single-objective opti-
misation including the convergence detection
worked for this application. Furthermore, we
can conclude that fD is not suited for deck gen-
eration because it does not distinguish decks
well. This might be entirely different for data
selection as done by Cardona et al. [4].

The optimiser runs were stopped by the
convergence detection mechanism after very
different numbers of function evaluations neval,
even for the same approach. For example, the
ﬁrst 30 runs for S10 executed between 3 727
and 23 737 ﬁtness function evaluations. There
is no apparent correlation between neval and
the quality of the achieved solutions, with neval
between 3 993 and 20 243 for runs with solu-
tions on the Pareto front of this subset of S10.
This point to a high complexity of the ﬁtness
function landscapes and validates the use of on-
line convergence detection in this experiment.

VI. Conclusion and Outlook

In this paper, we present our approach to auto-
matic game balancing (as deﬁned in Sec. I) and
apply it to the card game top trumps. Our ap-
proach includes the formalisation and interpre-
tation of the task as a multi-objective minimi-
sation problem which is solved using a state-
of-the-art EMOA with online convergence de-
tection. The performances of the resulting and
purchased decks next to a single-objective ap-
proach [4] are evaluated using statistical analy-
ses.

We conclusively show the feasibility of auto-
matic game balancing in terms of the quality of
the achieved solutions for the game top trumps
under the assumptions detailed in Sec. IV. Be-
ing aware that computational concerns could
render a simulation-based approach infeasible
for complex applications, an approach to avoid
simulation was outlined in section IV. The pre-
sented work, therefore, is a necessary step to
proving the feasibility of automatic balancing
in general. Additionally, the apparent advan-
tages of an automated balancing approach and
multi-objective balancing are discussed as well
(cf. Sec. V). These discussions and the addi-
tional observations in Sec. V strongly indicate
that the presented approach was suitable and
successful.

A possible way to proceed with this work
is to further optimise the different parts of the
approach. For example, the considered opti-
misers could be improved by better parame-
ters, e.g. determined by tuning methods like
sequential parameter optimisation, thereby po-
tentially sharpening our results. In addition,
several other modules should be tested for pos-
sible (parameter) improvements like the online
convergence detection mechanism.

With respect to the implemented player AI,
it seems reasonable to extend our research by
testing different improvements of the proba-
bilistic AI used in our study. This could pro-
vide interesting results if the restriction of al-
lowing exactly K
2 rounds of play is removed. In
this case, the agent is required to plan ahead

6http://torcs.sourceforge.net/

and making more complex strategies proﬁtable.
A viable AI extension is inference based rea-
soning about the opponent’s cards as demon-
strated by Buro et al. in their work on improv-
ing state evaluation in trick-based card games.
Monte Carlo Search is common used for card
games as well, as they commonly feature im-
perfect information (cf. [8, 20]). Another route
would be the implementation of AIs that imi-
tate human players.

Further work on the analysis of the pre-
sented measures and the discovery of new ones
is intended. As a ﬁrst step in this direction, we
propose to use our approach for different appli-
cations, possibly after developing application-
speciﬁc methods.
In that regard, we aim to
test our approach on more complex computer
games. A ﬁrst attempt will be made incorporat-
ing The Open Racing Car Simulator (TORCS)6,
but further tests on real-time-strategy games
and platformers are intended as well. Based
on the analysis of different well-performing
ﬁtness measures, a next step could be the in-
vestigation of generalisable ones.

More importantly, we plan to evaluate our
vision of a balanced deck, our ﬁtness measures
and the results of our methods with surveys
for human players. In our opinion, incorporat-
ing human perception of balancing is the only
acceptable way to achieve the eventual goal, i.e.
accurately expressing and maximising human
players’ enjoyment of a game.

References

[1] N. Beume, B. Naujoks, and M. Em-
merich. SMS-EMOA: Multiobjective Se-
lection Based on Dominated Hypervol-
ume. European Journal of Operational Re-
search, 181(3):1653–1669, 2007.

[2] C. B. Browne. Automatic generation and
evaluation of recombination games. Phd the-
sis, Queensland University of Technology,
2008.

[3] M. Buro, J. R. Long, T. Furtak, and N. R.
Improving state evaluation,

Sturtevant.

11

inference, and search in trick-based card
In Conference on Artiﬁcial Intelli-
games.
gence (IJCAI), pages 1407–1413. Morgan
Kaufmann, San Francisco, CA, 2009.

[4] A. B. Cardona, A. W. Hansen, J. Togelius,
and M. G. Friberger. Open Trumps, a
Data Game. In Foundations of Digital Games
(FDG 2014). Society for the Advancement
of the Science of Digital Games, Santa
Cruz, CA, 2014.

[5] H. Chen, Y. Mori, and I. Matsuba. Solving
the balance problem of massively multi-
player online role-playing games using
coevolutionary programming. Applied Soft
Computing, 18:1–11, 2014.

[6] K. Deb. Multi-Objective Optimization Using
Evolutionary Algorithms. Wiley, Chichester,
UK, 2001.

[7] C. Fonseca, V. D. Fonseca, and L. Pa-
quete.
Exploring the performance of
stochastic multiobjective optimisers with
the second-order attainment function. In
C. A. C. Coello et al., editors, Evolutionary
Multi-Criterion Optimization (EMO 2005),
pages 250–264. Springer, Berlin, 2005. doi:
10.1007/b106458.

[8] T. Furtak and M. Buro. Recursive Monte
Carlo search for imperfect information
games. In Computational Intelligence and
Games (CIG 2013), pages 225–232. IEEE
Press, Piscataway, NJ, 2013.

[9] G. Hawkins, K. V. Nesbitt, and S. Brown.
Dynamic Difﬁculty Balancing for Cau-
tious Players and Risk Takers. International
Journal of Computer Games Technology, 2012:
1–10, 2012.

[10] A. Isaksen, D. Gopstein, J. Togelius, and
A. Nealen. Discovering Unique Game
Variants.
In H. Toivonen et al., edi-
tors, Computational Creativity (ICCC 2015).
Brigham Young University, Provo, Utah,
2015.

12

[11] A. Jaffe. Understanding Game Balance with
Quantitative Methods. Phd thesis, Univer-
sity of Washington, 2013.

[12] J. Knowles, L. Thiele, and E. Zitzler. A Tu-
torial on the Performance Assessment of
Stochastic Multiobjective Optimizers. TIK
Report 214, Computer Engineering and
Networks Laboratory (TIK), ETH Zurich,
2006.

[13] A. Liapis, G. N. Yannakakis, and J. To-
gelius. Sentient sketchbook: Computer-
In Founda-
aided game level authoring.
tions of Digital Games (FDG 2013), pages
213–220. Society for the Advancement of
the Science of Digital Games, Santa Cruz,
CA, 2013.

[14] M. J. Nelson and M. Mateas. A require-
ments analysis for videogame design sup-
port tools. In Foundations of Digital Games
(FDG 2009), pages 137–144. ACM Press,
New York, 2009.

[15] M. Preuss, J. Togelius, and A. Liapis.
Searching for Good and Diverse Game
Levels. In Computational Intelligence and
Games (CIG 2014), pages 381–388. IEEE
Press, Piscataway, NJ, 2014.

[16] A. M. Smith and M. Mateas. Variations
Forever: Flexibly generating rulesets from
a sculptable design space of mini-games.
In Computational Intelligence and Games
(CIG 2010), pages 273–280. IEEE Press, Pis-
cataway, NJ, 2010. doi: 10.1109/ITW.2010.
5593343.

[17] A. M. Smith, E. Butler, and Z. Popovi´c.
Quantifying over Play : Constraining Un-
desirable Solutions in Puzzle Design. In
Foundations of Digital Games (FDG 2013),
pages 221–228. Society for the Advance-
ment of the Science of Digital Games,
Santa Cruz, CA, 2013.

[18] J. Togelius, M. Preuss, N. Beume, S. Wess-
ing, J. Hagelbäck, G. N. Yannakakis, and
C. Grappiolo. Controllable procedural

map generation via multiobjective evolu-
tion. Genetic Programming and Evolvable
Machines, 14(2):245–277, 2013.

[19] H. Trautmann, T. Wagner, B. Naujoks,
M. Preuss, and J. Mehnen. Statistical Meth-
ods for Convergence Detection of Multi-
Objective Evolutionary Algorithms. Evo-

lutionary Computation, 17(4):493–509, 2009.
doi: 10.1162/evco.2009.17.4.17403.

[20] C. D. Ward and P. I. Cowling. Monte Carlo
search applied to card selection in Magic:
In Computational Intelli-
The Gathering.
gence and Games (CIG 2009), pages 9–16.
IEEE Press, Piscataway, NJ, 2009.

13

