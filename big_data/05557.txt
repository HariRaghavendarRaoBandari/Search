6
1
0
2

 
r
a

 

M
1
2

 
 
]

Y
S
.
s
c
[
 
 

2
v
7
5
5
5
0

.

3
0
6
1
:
v
i
X
r
a

Modularity Approach to Adaptive

Inner/Outer Loop Control of Robotic

Systems

Hanlei Wang, Wei Ren, Chien Chern Cheah, and Yongchun Xie

system with an inner PI

Abstract—Modern applications of robotics typically involve a robot
control
(proportional-integral) or PID
(proportional-integral-derivative) control loop and an outer user-speciﬁed
control loop. The existing outer loop controllers, however, do not take into
consideration the dynamic effects of robots and their effectiveness relies
on the ad hoc assumption that the inner PI or PID control loop is fast
enough (generally impossible in practice), and other torque-based control
algorithms cannot be implemented in robotics with closed architecture
(i.e., the torque control loop is closed). This paper investigates the adaptive
control of robotic systems with the inner/outer loop structure, taking into
full account the effects of the dynamics and the system uncertainties,
and both the task-space control and joint-space control are considered.
We propose a modularity approach to resolve this issue, and a class
of adaptive outer loop control schemes is proposed and their role is to
generate joint velocity and position commands for the low-level joint
servoing loop. Without relying on the ad hoc assumption that the joint
servoing is fast enough or the modiﬁcation of the low-level joint controller
structure, we rigorously show that the proposed outer loop controllers can
ensure the stability and convergence of the closed-loop robotic system. We
also propose the outer loop versions of several standard direct/composite
adaptive joint-space controllers for rigid robots or ﬂexible-joint robots,
and a promising conclusion may be that most torque-based adaptive
controllers for robots can be designed to ﬁt the inner/outer loop structure,
by using the adaptively scaled dynamic compensation and the new
deﬁnition of the joint velocity command. Simulation results are provided
to show the performance of various adaptive outer loop controllers, using
a three-DOF (degree-of-freedom) manipulator.

Index Terms—Inner/outer loop, adaptive control, modularity approach,

robotics.

I. INTRODUCTION

User-friendliness is an important aspect of modern automatic
machines, especially if they are expected to do extensive work in
cooperation with human beings. The control systems for modern
robotic systems, unfortunately, have not yet reach this expectation
though numerous control algorithms have been developed over the
past several decades. To serve this purpose, the controlled robotic
system might have to be reliable, robust, and ﬂexible to satisfy the
user’s needs. As we take a deep look at the development of computers
(for instance, the recent hybrid computers—Surface Pro 4, iPad Pro,
etc.), the module design plays a vital role in promoting their success
in our everyday life. The relationship between the operating systems
(e.g., the Windows System) and the application programs further
validates the desirability of this module design philosophy.

Historically, the applications of robotics have undergone the fol-

lowing phases:

1) Traditional

industrial applications—factory automation in
a structured environment with a simple joint-space PID

H. Wang is with the Science and Technology on Space Intelligent Con-
trol Laboratory, Beijing Institute of Control Engineering, Beijing 100190,
China, and also with the Department of Electrical and Computer En-
gineering, University of California, Riverside, CA 92521 USA (e-mail:
hlwang.bice@gmail.com).

W. Ren is with the Department of Electrical and Computer Engineering,
University of California, Riverside, CA 92521 USA (e-mail: ren@ee.ucr.edu).
C. C. Cheah is with the School of Electrical and Electronic Engineering,
Nanyang Technological University, Singapore 639798, Republic of Singapore
(e-mail: ecccheah@ntu.edu.sg).

Y. Xie is with the Science and Technology on Space Intelligent Control
Laboratory, Beijing Institute of Control Engineering, Beijing 100190, China
(e-mail: xieyongchun@vip.sina.com).

1

(proportional-integral-derivative) inner loop control as well as
inverse kinematics;

2) Modern applications—beyond factory automation in an un-
structured environment with sensory feedback in the task space,
e.g., (outer loop) visual servoing and task-space control, which,
however, either cannot be implemented in robotics with closed
architecture or rely on the ad hoc assumption that the combined
inner/outer loop is stable and the effect of the dynamics can
be neglected. This ad hoc assumption typically (approximately)
holds only on the occasion that the given task is slow enough.

The inner/outer loop structure of robotic systems (e.g., most com-
mercial robotic systems) enjoys certain module design ﬂavor and
has some desirable properties, e.g., it is beneﬁcial for generating a
high joint stiffness by employing a fast inner joint servoing while
it is not reliable as directly specifying the control torque due to the
limitation of the communication (generally required for exerting a
coupling control action) reliability. For this reason, the gap between
the study of advanced robot control theory and practical applications
is longstanding. In the academic ﬁeld, most advanced controller
designs are torque-based and typically require an open torque control
loop. In practical applications, the much more reliable and robust
velocity control mode is adopted. It seems necessary here to recall the
standard inner/outer loop structure of most commercial (industrial)
robotic systems: 1) an outer (kinematic) loop using a centralized
computer with enough computing power; 2) an inner dynamic loop
that consists of n independent processors equipped at each joint in
a decentralized way (i.e., each processor only receives/sends signals
from/to its local sensors, actuator, and the centralized computer). The
inner dynamic loop usually evolves at a much faster sampling than
the outer (kinematic) loop.

The attempts that aim to address the control of this kind of robotic
systems in the task space occur in, e.g., [1], [2], [3], [4]. However,
these controllers cannot ensure the tracking error convergence without
signiﬁcantly modifying the low-level PI (proportional-integral) con-
troller to be a more complex one. One may note that these control
algorithms are all based on the standard resolved motion rate control
proposed by [5] to design the joint velocity command. Then what
actually prevents the application of advanced robot controllers? Let
us ﬁrst retrospect the realization of the standard computed torque
controller that has been discussed in [6, p. 209, p. 210] (see also the
trajectory precorrection based on the computed torque feedforward
in [7]). The speciﬁc procedure in [6] is to modify the terms in the
feedforward action that may involve coupling by replacing certain
signals (positions or velocities) with their desired values. In this
way, no communication between the joint processors at the dynamic
servoing loop is required since the desired values of all the joints are
stored in each joint’s computer a priori (which would, on the other
hand, mean that this algorithm is not ﬂexible in the case that the
desired trajectory is subjected to changes). The overall impression
is that for the sake of reducing computational burden, this scheme
performs the feedforward at the joint control loop in a relatively lim-
ited manner and with many nonlinear terms being neglected. Another
important well-recognized reason is that most commercial/industrial
robotic systems do not have an open torque control loop (see, e.g.,
[8]). These two factors give rise to the awkward situation of the
modern torque-based robot control algorithms (e.g.,
the adaptive
algorithms in [9], [10], [11], [12], [13], [14], [15] and the robust
algorithms in [16], [17]), i.e., it is hard to apply these algorithms to
robotic systems with the inner/outer loop structure. The precorrection
scheme in [7], by producing a trajectory correction term based on the
inverse manipulator dynamics and then adding it to the desired joint
trajectory, improves the performance of the industrial robotic system

without modifying the low-level controller structure. The main proofs
of the performance improvement, however, are by the experimental
results rather than by the rigorous analysis.

In this paper, we rigorously address this issue in the context
of adaptive task-space/joint-space control for robotic systems with
an embedded low-level PI joint velocity controller (or PID joint
position controller) and with uncertain dynamics (and kinematics).
The use of PI velocity controller or PID position controller in most
industrial/commercial robotic systems is well recognized (see, e.g.,
[18], [19]). Our main purpose here is to develop a class of adaptive
outer loop controllers that can ensure the stability and convergence
of the robotic systems with the dynamic effect being taken into
full account and without modifying the embedded inner PI or PID
control loop. The application of the current adaptive (or robust) task-
space regulation/tracking algorithms (e.g., [20], [21], [12], [13], [15],
[22], [23], [14], [24], [25]) to robotic systems with inner/outer loop
structure, for a long period, relies on the ad hoc assumption that the
inner joint servoing loop is fast enough or the modiﬁcation of the
inner joint controller structure.

We ﬁrst propose two adaptive task-space regulation controllers
that rule out the fundamental limitations of the existing results, by
using an adaptively scaled dynamic compensation that exploits the
physically independent nature of the low-level controller structure.
The ﬁrst controller, by introducing an adaptive ﬁlter, avoids the task-
space velocity measurement, and the second one avoids the use
of the task-space velocity by using an observer [motivated by the
one in [26] with a modiﬁed feedback gain (which depends on the
estimated Jacobian matrix) to achieve feedback separation]. Both
of the adaptive controllers are qualiﬁed outer loop control schemes
that can be applied to robotic systems with an unmodiﬁable joint
servoing controller (PI velocity or PID position controller) (e.g.,
most industrial/commercial robots), taking into account the dynamic
loop of the robotic systems. From a robot control perspective, most
existing kinematic algorithms are not mathematically rigorous in that
either the effects of the inner joint control loop are not considered
(e.g., [27], [28], [29]), or the low-level
joint servoing controller
is assumed to be strong enough to ensure (yet cannot rigorously
guarantee due to the absence of dynamic compensation action in
the low-level dynamic loop) the square-integrability and boundedess
of the velocity tracking error (e.g., [30], [31]), or even the modiﬁ-
cation of the low-level controller structure (e.g., [1], [2], [3]). These
limitations are mainly caused by the two-loop structure and closed
controller architecture. The proposed outer loop controller here, by
using adaptively scaled dynamic compensation action and adaptive
transpose Jacobian feedback, ensures the singularity-robust stability
and convergence of the task-space position error without relying on
any modiﬁcation of the low-level PI/PID controller structure. Due to
the independence of the design of the outer loop controller and that
of the low-level PI/PID controller, the proposed design approach is
referred to as modularity approach.

We then show that the observer-based task-space regulation scheme
can be extended to the case of task-space tracking. The obtained
control scheme has an interesting feature that the inverse of the
estimated Jacobian matrix is used for introducing feedforward and
its transpose is used for introducing feedback, in contrast to most
existing task-space algorithms that only employ the inverse of the
Jacobian matrix to exert feedforward and feedback actions (see, e.g.,
[9], [32], [21], [14]), and the beneﬁt of this lies in two folds: 1) it
yields the feedback separation of the kinematic and dynamic loops,
thus reducing the activity of the dynamic compensation action; 2) it
is reducible in the sense that once the desired task-space velocity
becomes zero, the tracking control law reduces to the regulation
control law without involving the inverse of the estimated Jacobian

2

(cid:46)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:70)(cid:3)
(cid:83)(cid:79)(cid:68)(cid:81)(cid:81)(cid:72)(cid:85)

(cid:13)
cq(cid:5)

cq

(cid:50)(cid:88)(cid:87)(cid:72)(cid:85) (cid:79)(cid:82)(cid:82)(cid:83)

(cid:14)

(cid:14)
(cid:14)

(cid:14)

(cid:51)(cid:44)(cid:3)(cid:89)(cid:72)(cid:79)(cid:82)(cid:70)(cid:76)(cid:87)(cid:92)(cid:3)
(cid:70)(cid:82)(cid:81)(cid:87)(cid:85)(cid:82)(cid:79)(cid:79)(cid:72)(cid:85)

(cid:44)(cid:81)(cid:81)(cid:72)(cid:85) (cid:79)(cid:82)(cid:82)(cid:83)

(cid:48)(cid:68)(cid:81)(cid:76)(cid:83)(cid:88)(cid:79)(cid:68)(cid:87)(cid:82)(cid:85)(cid:3)
(cid:71)(cid:92)(cid:81)(cid:68)(cid:80)(cid:76)(cid:70)(cid:86)

q

q(cid:5)

x

(cid:48)(cid:68)(cid:81)(cid:76)(cid:83)(cid:88)(cid:79)(cid:68)(cid:87)(cid:82)(cid:85)(cid:3)
(cid:78)(cid:76)(cid:81)(cid:72)(cid:80)(cid:68)(cid:87)(cid:76)(cid:70)(cid:86)

Inner/outer loop control ( ˙q∗

Fig. 1.
c and qc are the velocity and position
commands, respectively, and q, ˙q, and x are the joint position, joint velocity,
and task-space position, respectively).

matrix.

Finally, we illustrate how the adaptively scaled dynamic compensa-
tion enables several typical adaptive robot controllers for joint-space
trajectory tracking to be applicable to robotic systems with inner/outer
loop structure (e.g., most
industrial/commercial robotic systems).
In particular, the proposed modularity approach is further shaped
to incorporate the composite adaptation for improving performance
and to address the issue of joint ﬂexibility. By these additional
examples, it seems hopeful that most adaptive dynamic controllers
for robots in the literature with the use of adaptively scaled dynamic
compensation and new deﬁnition of the joint velocity command
would be rendered to be qualiﬁed outer loop schemes. Another
potential favorable point may be the reduction of the cost of the
laboratory experimental research on advanced robot control theory
in that there no longer needs to develop a speciﬁc manipulator with
an open torque control loop (usually requiring extensive efforts and
time) and any commercial robot (cost-efﬁcient due to the large-scale
production) can be directly used.

II. PRELIMINARIES

A. Background and Motivation

Inner/outer loop control is typical in modern applications of robotic
systems (see Fig. 1), and generally the inner loop is designed by the
robot production company and closed and only the outer loop is
open to the user. The user can specify the position and velocity (and
acceleration) commands within the outer loop based on measurements
in joint space [and task space (e.g., image space)], which are then
sent to the inner loop as reference signals. The main beneﬁt of
adopting an inner/outer loop structure may be that the inner loop
(due to simplicity) can be operated at a high sampling rate and
thus a high stiffness can be maintained, and that the outer loop can
be operated at a low sampling rate allowing relatively complicated
communication and sensing. In addition, inner/outer loop structure
does help to realize the relative independence of the manipulator
production company and the users, and to promote the large-scale
production of manipulators due to the invariance of the inner control
loop.

Historically, most theoretical results on adaptive manipulator con-
trol are presented in the context that the joint torque is directly
designable rather than in the framework of inner/outer loops. This
results in the longstanding gap between the study of advanced robot
control theory and the applications of robots. The existing results
(e.g., [1], [2], [3], [7], [27], [28], [29]) are either ad hoc, e.g., effective
under the assumption that the joint servoing is fast enough, relying
on the modiﬁcation of the low-level controller structure which is
unmodiﬁable in practice, or not theoretically rigorous.

Our main purpose is to develop a class of adaptive outer loop
controllers using the task-space sensory measurement (instead of
obtaining the task-space information based on the kinematics as
in Fig. 1 since the kinematics is unknown) to take place of the

kinematic planner in Fig. 1 so that the stability and convergence
of the closed-loop robotic systems with uncertain dynamics (and
kinematics) can rigorously be ensured, and to ﬁnally approach the
goal of “modularity”.

Let xd ∈ Rm denote the desired task-space position. For regulation
problem, it is set as constant; for tracking problem, it can be set as
time-varying and in this case, we assume that xd, ˙xd, and ¨xd are all
bounded.

3

B. Manipulator Kinematics and Dynamics

Consider an n-DOF (degree-of-freedom) manipulator actuated by
permanent magnet DC motors. Let x ∈ Rm be the position of the
end-effector in the task space and it is relevant to the joint position
by the following nonlinear mapping [33], [34]

x = f (q)

(1)
where q ∈ Rn denotes the joint position and f : Rn → Rm is the
mapping from joint space to task space. We here assume that n ≥ m,
i.e., the manipulator can either be nonredundant or redundant.
Differentiating (1) with respect to time yields the relation between

the task-space velocity ˙x and joint velocity ˙q [33], [34]

˙x = J(q) ˙q

(2)
where J(q) ∈ Rm×n is the Jacobian matrix. If the kinematic
parameters are unknown,
the task-space position/velocity can no
longer be derived by the direct kinematics given above. The typical
practice in this case is to employ certain task-space sensors (e.g., a
camera) to obtain the task-space position information.

The dynamics of the manipulator can be written as [34]

M (q)¨q + C(q, ˙q) ˙q + B ˙q + g(q) = Ku

(3)
where M (q) ∈ Rn×n is the inertia matrix, C(q, ˙q) ∈ Rn×n is the
Coriolis and centrifugal matrix, B ∈ Rn×n is a constant diagonal
positive deﬁnite matrix, g(q) ∈ Rn is the gravitational torque, u ∈
Rn is the armature voltage, and K ∈ Rn×n is a constant diagonal
positive deﬁnite matrix.
Four basic properties associated with (2) and (3) that shall be useful
for the controller design and stability analysis are listed as follows.
Property 1 ([21]): The kinematics (2) depends linearly on a

constant kinematic parameter vector ak, which gives rise to

J(q)ψ = Yk(q, ψ)ak

(4)
where ψ ∈ Rn is a vector and Yk(q, ψ) is the kinematic regressor
matrix.
Property 2 ([35], [34]): The inertia matrix M (q) is symmetric and

uniformly positive deﬁnite.

Property 3 ([35], [34]): The matrix C(q, ˙q) can be appropriately
deﬁned such that the matrix ˙M (q) − 2C(q, ˙q) is skew-symmetric.
Property 4 ([35], [34]): The dynamics (3) depends linearly on a
constant dynamic parameter vector ad, which yields

M (q) ˙ζ + C(q, ˙q)ζ + Bζ + g(q) = Yd(q, ˙q, ζ, ˙ζ)ad

(5)

where ζ ∈ Rn is a differentiable vector,
ζ, and Yd(q, ˙q, ζ, ˙ζ) is the dynamic regressor matrix.

˙ζ is the time derivative of

III. ADAPTIVE INNER/OUTER LOOP CONTROL

Kinematic control typically appears in the context of inner/outer
loop control of robot manipulators and its focus is on the design
of the joint velocity command. Historically,
the effectiveness of
kinematic control stands on the relatively strong assumption that the
inner control (PI velocity control or PID position control) loop is
fast enough so that the dynamic effects of the inner loop can be
neglected. Here, we present a modularity approach to ensure the
convergence of the task-space position error, without relying on this
ad hoc assumption or the modiﬁcation of the inner control loop.

A. Filter-Based Adaptive Regulation Control

To avoid the task-space velocity measurement, we introduce the

following adaptive passive ﬁlter

˙y = −K1y + K1 ˆJ T (q)∆x,

upon which, we deﬁne the joint reference velocity as

˙qr = −K2y

(6)

(7)

where ∆x = x − xd, K1 and K2 are diagonal positive deﬁnite
matrices, and ˆJ (q) is the estimate of the Jacobian matrix J(q) and
is obtained by replacing ak in J(q) with its estimate ˆak. Deﬁne a
sliding vector

s = ˙q − ˙qr.

Substituting (7) into (2) and using Property 1 gives

˙x = − ˆJ (q)K2y − [ ˆJ (q) − J(q)] ˙q − ˆJ(q) ˙qr + ˆJ(q) ˙q
= − ˆJ (q)K2y − Yk(q, ˙q)∆ak + ˆJ (q)s.

where ∆ak = ˆak − ak.

We deﬁne the joint velocity and position commands as

˙q∗
c = ˙qr + diag[ ˆwi, i = 1, . . . , n]

×h−α ˆJ T (q)∆x + Yd(q, ˙q, ˙qr, ¨qr)ˆadi

˙qr(r)dr

qc =qc(0) +Z t

0

(8)

(9)

(10)

(11)

where qc(0) can be chosen as an arbitrary constant vector, α is a
positive design constant, ˆad is the estimate of ad, ˆwi denotes the scale
weight, i = 1, . . . , n, and diag[ ˆwi, i = 1, . . . , n][−α ˆJ T (q)∆x +
Yd(q, ˙q, ˙qr, ¨qr)ˆad] denotes the adaptively scaled dynamic compensa-
tion action. The adaptation laws for ˆak, ˆw = [ ˆw1, . . . , ˆwn]T , and ˆad
are given as

k (q, ˙q)∆x

˙ˆak = ΓkY T
˙ˆw = −Λdiag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙qr, ¨qr)ˆad]s
˙ˆad = −ΓdY T

d (q, ˙q, ˙qr, ¨qr)s

(12)
(13)
(14)

where Γk, Λ, and Γd are symmetric positive deﬁnite matrices.

The PI gains of the inner PI velocity control loop (the case of PID
position control is discussed in Sec. III-D) are supposed to be KP
and KI and the PI action takes the form

u = −KP ( ˙q − ˙q∗

c ) − KI (q − qc) .

(15)

c and qc are the velocity and position commands given by
˙q∗

Here,
(10) and (11), respectively.

Theorem 1: The adaptive outer loop controller given by (10), (11),
(12), (13), and (14) for the robotic system (2) and (3) under the inner
PI controller (15) ensures the stability of the system and convergence
of the task-space position error, i.e., ∆x → 0 as t → ∞.

1

1
2

2
1
2
1
2

+

+

Proof: Substituting (15), (10), and (11) into the manipulator

dynamics (3) and taking into account Property 4 gives

M (q) ˙s + C(q, ˙q)s

i

0

0

˙qr(r)dr + δ0(cid:21)

= − (K ∗ + B)s − KKI(cid:20)q − q(0) −Z t
+ K ∗diag[ ˆwi, i = 1, . . . , n][−α ˆJ T (q)∆x + Yd(q, ˙q, ˙qr, ¨qr)ˆad]
− Yd(q, ˙q, ˙qr, ¨qr)ad
= − (K ∗ + B)s − α ˆJ T (q)∆x − KKI(cid:20)Z t
+ K ∗(diag[ ˆwi − k∗−1
, i = 1, . . . , n])
× [−α ˆJ T (q)∆x + Yd(q, ˙q, ˙qr, ¨qr)ˆad]
+ Yd(q, ˙q, ˙qr, ¨qr)∆ad
= − (K ∗ + B)s − α ˆJ T (q)∆x − KKI(cid:20)Z t
+ diag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙qr, ¨qr)ˆad]K ∗∆w
+ Yd(q, ˙q, ˙qr, ¨qr)∆ad

s(r)dr + δ0(cid:21)

s(r)dr + δ0(cid:21)

(16)
where δ0 = q(0) − qc(0) is a constant vector, K ∗ = KKP =
i , i = 1, . . . , n] with k∗
i being positive constants, ∆ad =
diag[k∗
]T . Consider the
ˆad − ad, and ∆w = [ ˆw1 − k∗−1
following Lyapunov function candidate
V =α(cid:16) 1

, . . . , ˆwn − k∗−1

∆xT ∆x +

yT K2K −1

1 y +

∆aT

k Γ−1

1
2

n

0

1
2
1

sT M (q)s +

2(cid:20)Z t

0

s(r)dr + δ0(cid:21)T

k ∆ak(cid:17)
KKI(cid:20)Z t

0

s(r)dr + δ0(cid:21)

(17)

∆wT Λ−1K ∗∆w +

∆aT

d Γ−1

d ∆ad

whose derivative with respect to time along the trajectories of (16),
(9), (6), (12), (13), and (14) can be written as (using Property 3)

(18)

˙V = −αyT K2y − sT (K ∗ + B)s ≤ 0.
Then we obtain that y ∈ L2 ∩ L∞, s ∈ L2 ∩ L∞, R t
0 s(r)dr ∈ L∞
∆x ∈ L∞, ˆw ∈ L∞, ˆak ∈ L∞, and ˆad ∈ L∞. From (6), we
obtain that
˙y ∈ L∞ and thus y is uniformly continuous. From the
properties of square-integrable and uniformly continuous functions
[36, p. 232], we obtain that y → 0 as t → ∞. From (7), we know
˙qr ∈ L∞ and thus ˙q ∈ L∞. From (12), we obtain that ˙ˆak ∈
that
˙ˆJ(q). From (2), we obtain
L∞, giving rise to the boundedness of
that
˙x ∈ L∞, and we then obtain that ¨y ∈ L∞ based on (6). This
˙y is uniformly continuous and thus ˙y → 0 as t → ∞
means that
according to Barbalat’s Lemma [35]. From equation (6), we then
obtain that ˆJ T (q)∆x → 0 as t → ∞. This means that ∆x → 0
as t → ∞ provided that ˆJ (q) has full row rank. Furthermore, the
result that
˙y ∈ L∞ yields the conclusion that ¨qr ∈ L∞. Therefore,
from (16), we obtain that ˙s ∈ L∞ using Property 2, and further that
¨q ∈ L∞. Hence s is uniformly continuous, yielding the result that
s → 0 as t → ∞ according to the properties of square-integrable
and uniformly continuous functions [36, p. 232]. This immediately
gives the conclusion that ˙q → 0 as t → ∞ since ˙qr = −K2y → 0
as t → ∞.
(cid:4)
Remark 1: The introduction of the adaptive scale ˆw is to accommo-
date the uncertain diagonal matrix K ∗ = KKP , and its uncertainty
comes from both the actuator model and low-level controller design
(generally performed by the robot production company). The part
due to the actuator model (i.e., K) is inherently uncertain and may
possibly be subjected to slow variation. The uncertainty of the part
due to the low-level controller design (i.e., KP ) is a business strategy
for protecting the intellectual property right and thus it is and will be
impossible to be disclosed thoroughly in the short run. The integral

4

gain KI is also generally unknown to the user, but as we see, the
proposed adaptive controller does not need to know the value of
KI. In addition, the adaptive scale ˆw used here is computationally
efﬁcient and free of computational singularity since it does not
involve the computation of inverse of an estimated quantity (which,
however, would be encountered if we directly estimate the matrix
K ∗). Similar techniques for handling the uncertainty of the diagonal
torque-constant matrix (which describes the relation between the
torque and current) appear in the context of adaptive control for rigid-
link electrically-driven robots or robots with actuator uncertainty, yet
with an open controller structure (i.e., the voltage can be directly
speciﬁed by the user) [37], [11].

Remark 2: The adaptive ﬁlter (6) with K1 ˆJ T (q)∆x as the input
can be considered as an extension of [38] to address the avoidance of
task-space velocity measurement in the context of adaptive task-space
control. Clearly, the joint velocity command (10) no longer involves
the task-space velocity measurement since ¨qr = −K2 ˙y and ˙y given
by (6) does not involve the task-space velocity.

B. Observer-Based Adaptive Regulation Control

The task-space observer is given as

˙xo = ˆJ (q) ˙qr − β ˆJ (q) ˆJ T (q)∆xo

(19)
where xo ∈ Rm denotes the observed quantity of x, ∆xo = xo − x,
and β is a positive design constant, and the joint reference velocity
˙qr is now deﬁned as

˙qr = − ˆJ T (q) [γ(xo − xd)]

(20)

where γ is a positive design constant. The observer (19) is motivated
by [26] yet with a new feedback gain β ˆJ (q) ˆJ T (q) for the purpose of
achieving feedback separation, and the idea behind is that the actual
joint velocity ﬁnally approaches the joint reference velocity ˙qr and
thus ˆJ(q) ˙qr would approach the estimated task-space velocity ˆJ (q) ˙q.
The desirable point is that the observer no longer depends on the joint
velocity and is thus not inﬂuenced by the noise of the velocity signal.
The joint velocity command is deﬁned as

˙q∗
c = ˙qr + diag[ ˆwi, i = 1, . . . , n]

× Yd(q, ˙q, ˙qr, ¨qr)ˆad

(21)

which no longer needs the scaled dynamic compensation action
diag[ ˆwi, i = 1, . . . , n][−α ˆJ T (q)∆x]. The adaptation laws for ˆak
and ˆw are given as

˙ˆak = ΓkY T
˙ˆw = −Λdiag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s
The adaptation law for ˆad remains the same as (14).

k (q, ˙q)(∆x − ∆xo)

Combining (19) and (2) and using Property 1 yields

(22)
(23)

∆ ˙xo = −β ˆJ(q) ˆJ T (q)∆xo + Yk(q, ˙q)∆ak − ˆJ(q)s.

(24)
By premultiplying s = ˙q − ˙qr with ˆJ (q) and using Property 1, we
obtain (since ˙xd = 0)

ˆJ (q)s = ˙x + ˆJ(q) ˆJ T (q) [γ(xo − xd)] + Yk(q, ˙q)∆ak.

(25)

Therefore, at the outer loop, we obtain
∆ ˙xo = − β ˆJ (q) ˆJ T (q)∆xo + Yk(q, ˙q)∆ak − ˆJ (q)s

˙x = − ˆJ (q) ˆJ T (q) [γ(xo − xd)] − Yk(q, ˙q)∆ak + ˆJ(q)s.
We are presently ready to formulate the following theorem.
Theorem 2: Let the controller parameters β and γ be chosen such

that

β > 4γ/9.

(28)

(26)
(27)

The adaptive outer loop controller given by (21), (11), (22), (23), and
(14) with ˙qr being given as (20) for the robotic system (2) and (3)
under the inner PI controller (15) ensures the stability of the system
and convergence of the task-space position error, i.e., ∆x → 0 as
t → ∞.
Proof: Substituting (15), (21), and (11) into (3) and using Property
4 gives

M (q) ˙s + C(q, ˙q)s = − (K ∗ + B)s − KKI(cid:20)Z t

0

s(r)dr + δ0(cid:21)

+ diag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]K ∗∆w
+ Yd(q, ˙q, ˙qr, ¨qr)∆ad.

Consider the Lyapunov-like function candidate

V ∗ =

1
2

sT M (q)s +

1

2(cid:20)Z t
s(r)dr + δ0(cid:21) +

0

1
2

s(r)dr + δ0(cid:21)T

KKI

∆wT Λ−1K ∗∆w

×(cid:20)Z t

0

1
2

+

∆aT

d Γ−1

d ∆ad

whose derivative with respect to time along the trajectories of (29),
(23), and (14) can be written as

˙V ∗ = −sT (K ∗ + B)s ≤ 0

(31)

where we have used Property 3. This directly gives the conclusion
that s ∈ L2 ∩ L∞,R t
0 s(r)dr ∈ L∞, ˆw ∈ L∞, and ˆad ∈ L∞. Then,
there exists a positive constant ℓM such that R t
0 sT (r)s(r)dr ≤ ℓM ,
∀t ≥ 0. Let us now consider the following quasi-Lyapunov function
candidate

V ∗∗ =

∆xT

o ∆xo +

∆xT ∆x +

1
2

1
2

∆aT

k Γ−1

k ∆ak

1
2

+(cid:18) 1

β

+

1

γ(cid:19)hℓM −Z t

0

sT (r)s(r)dri

and the derivative of V ∗∗ along the trajectories of (26), (27), and
(22) can be written as
˙V ∗∗ = − β∆xT
− ∆xT
− γ∆xT ˆJ (q) ˆJ T (q)∆x + ∆xT ˆJ(q)s −(cid:18) 1

ˆJ (q) ˆJ T (q)∆xo
ˆJ (q)s − γ∆xT ˆJ (q) ˆJ T (q)∆xo

γ(cid:19) sT s.

+

β

1

o

o

Using the following results derived from the standard basic inequal-
ties

∆xT
o

ˆJ (q)s ≤
∆xT ˆJ (q)s ≤
we obtain from (33) that

β
4
γ
4

∆xT
o

ˆJ(q) ˆJ T (q)∆xo +

∆xT ˆJ(q) ˆJ T (q)∆x +

sT s

1
β
1
sT s
γ

˙V ∗∗ ≤ −

3β
4

∆xT
o

ˆJ (q) ˆJ T (q)∆xo

− γ∆xT ˆJ(q) ˆJ T (q)∆xo −
ˆJ T (q)∆x(cid:21)T(cid:20)(3β/4)In
≤ −(cid:20) ˆJ T (q)∆xo

(γ/2)In

3γ
4

∆xT ˆJ (q) ˆJ T (q)∆x

(γ/2)In

(3γ/4)In(cid:21)
}

Q

{z

(cid:20) ˆJ T (q)∆xo
ˆJ T (q)∆x(cid:21) ≤ 0

(36)

|

due to the positive deﬁniteness of Q in the case that β > 4γ/9,
where In is the n× n identity matrix. Then using similar procedures
as in the proof of Theorem 1, we can show the stability of the

(29)

(30)

(32)

(33)

(34)

(35)

5

system (regardless of the estimated Jacobian matrix ˆJ(q)) and the
convergence of ∆x and ∆xo.
(cid:4)
Remark 3: The existing adaptive (or robust) task-space regulation
algorithms either assume the exact knowledge of the gravitational
torques [21], [12], or require the careful choice of the controller
parameters [20], [39], [22], or encounter the overparametrization
problem [22]. Furthermore, many adaptive visual tracking schemes
(e.g., [21], [24], [14], [25]) have also been proposed, yet the necessity
of investigating task-space regulation algorithms is due to the consid-
eration that the choice of speciﬁc controllers should take into account
the properties of the speciﬁc tasks. It is well accepted that given a
speciﬁc task, the control law should be as (computationally) simple as
possible; while the adaptive tracking controllers can also achieve the
regulation of the task-space position to the desired one (constant), it is
not cost-effective to rely on such kind of complexity (usually involves
the inverse of the estimated Jacobian and the singularity issues) for
regulation tasks. The two adaptive regulation controllers presented
here rule out the limitations of the above results, and in addition
the proposed controllers can be applied to robotic systems with the
inner/outer loop structure (e.g., most industrial/commercial robotic
systems) that have an unmodiﬁable joint servoing controller but admit
the design of the joint velocity and position commands, beneﬁting
from the use of the adaptively scaled dynamic compensation action.

C. Extension to Task-Space Tracking

In the case of task-space tracking, a feedforward action needs to be
introduced in the deﬁnition of the joint reference velocity. Speciﬁcally
we deﬁne ˙qr as

˙qr = ˆJ T (q)[ ˆJ(q) ˆJ T (q)]−1 ˙xd

(37)

|

feeforward

{z

−γ ˆJ T (q)(xo − xd)
|
}

{z

feedback

}

where the use of the generalized inverse of ˆJ (q) follows the typical
practice. The deﬁnition given by (37) extends the one in [30]
to address the case of no task-space velocity measurement. The
interesting point here is that both the inverse and transpose of ˆJ(q)
are incorporated, and one is for introducing a feedforward action
and the other for introducing a feedback action. This is in contrast
to most existing task-space control algorithms that rely on the use
of the inverse of the (estimated) Jacobian matrix to exert both the
feedforward and feedback actions (see, e.g., [9], [32], [14]). As can
be clearly observed, once the desired task-space velocity becomes
zero, ˙qr in (37) reduces to the one deﬁned by (20), and this means
that the regulation and tracking cases are uniﬁed.

Theorem 3: Let the controller parameters β and γ be chosen such

that

β > 4γ/9.

(38)

The adaptive outer loop controller given by (21), (11), (22), (23), and
(14) with ˙qr being given as (37) for the robotic system (2) and (3)
under the inner PI controller (15) ensures the stability of the system
and convergence of the task-space tracking errors, i.e., ∆x → 0 and
∆ ˙x → 0 as t → ∞.
The proof of Theorem 3 can be straightforwardly completed based
on that of Theorem 2, and the major difference lies in the fact that
equation (27) for the case of regulation problem now becomes
∆ ˙x = − ˆJ(q) ˆJ T (q) [γ(xo − xd)] − Yk(q, ˙q)∆ak + ˆJ (q)s.

(39)

By an analysis of the system given by (26), (39), and (22), we can
derive the stability of the system and convergence of the task-space
tracking errors.

Remark 4: The ﬁlter-based adaptive regulation algorithm is com-
putationally simpler in comparison with the observer-based one. But

the main issue of the ﬁlter-based algorithm is that it is difﬁcult
to quantitatively evaluate the performance. Here the observer-based
algorithm is extended to cover the case of task-space tracking
by additionally introducing feedforward based on the generalized
inverse of the estimated Jacobian matrix [see (37)]. The extension
of the ﬁlter-based algorithm to realize the task-space tracking can be
completed in a similar way.

D. Adaptive Task-Space Control With an Inner PID Position Con-
troller

We here investigate another case that the low-level controller takes

the PID position control action, i.e.,

u = −KD( ˙q − ˙q∗

c ) − KP (q − qc) − KIZ t

0

[q(r) − qc(r)]dr (40)

where KD, KP , and KI are the derivative, proportional, and integral
gains (diagonal and positive deﬁnite), respectively. In this case,
to ensure the stability and convergence of the robotic system, we
need to make some modiﬁcations. We take the ﬁlter-based adaptive
regulation control in Sec. III-A as an illustrating example and the
other controllers can be similarly formulated. Speciﬁcally, we deﬁne
two quantities below

˙q∗
r = ˙qr − Kc(q − qr)
¨q∗
r =¨qr − Kc( ˙q − ˙qr)

with qr being generated by

˙qr = −Kcqr − K2y + Kcq

(41)
(42)

(43)

where qr(0) = qc(0) and Kc is a diagonal positive deﬁnite matrix.
The joint velocity command for the low-level PID controller is
deﬁned as

˙q∗
c = ˙q∗

r + diag[ ˆwi, i = 1, . . . , n]

×h−α ˆJ T (q)∆x + Yd(q, ˙q, ˙q∗

r , ¨q∗

r )ˆadi

and the joint position command remains the same, i.e.,

qc = qc(0) +Z t

0

˙qr(r)dr.

The adaptation laws for ˆw and ˆad are modiﬁed as

˙ˆw = −Λdiag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙q∗
˙ˆad = −ΓdY T

d (q, ˙q, ˙q∗

r , ¨q∗

r )ξ.

r , ¨q∗

r )ˆad]ξ

with

ξ = ˙q − ˙q∗

r = s + Kc(cid:20)Z t

0

s(r)dr + δ0(cid:21) ,

(44)

(45)

(46)
(47)

(48)

and the adaptation law for ˆak is still the same as (12).

With these modiﬁcations and using the fact

that q − qr =

0 s(r)dr + δ0, equation (16) becomes

R t

6

(49)

M (q) ˙ξ + C(q, ˙q)ξ
= − ( ¯K ∗ + B)ξ − α ˆJ T (q)∆x

0

r , ¨q∗

r )∆ad

+ diag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙q∗
+ Yd(q, ˙q, ˙q∗
− KKP (q − qr) − KKIZ t
= − ( ¯K ∗ + B)ξ − α ˆJ T (q)∆x
+ diag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙q∗
+ Yd(q, ˙q, ˙q∗
r )∆ad
− (KKP − KKI K −1
− KKI K −1

)(q − qr)
c (cid:20)q − qr + KcZ t
= − ( ¯K ∗ + B)ξ − α ˆJ T (q)∆x
+ diag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙q∗
+ Yd(q, ˙q, ˙q∗

r , ¨q∗

r , ¨q∗

r )∆ad
− (KKP − KKI K −1
− KKI K −1

c (cid:20)Z t

)(cid:20)Z t
ξ(r)dr + δ0(cid:21)

c

c

0

0

0

r , ¨q∗

r )ˆad] ¯K ∗∆w

[q(r) − qr(r)]dr

r , ¨q∗

r )ˆad] ¯K ∗∆w

[q(r) − qr(r)]dr(cid:21)

r , ¨q∗

r )ˆad] ¯K ∗∆w

s(r)dr + δ0(cid:21)

r , ¨q∗

+ Yd(q, ˙q, ˙q∗

r )ˆad] ¯K ∗∆w

r , ¨q∗
r )∆ad − α ˆJ T (q)∆x

where ¯K ∗ = KKD. The above equation can further be written as
M (q) ˙ξ + C(q, ˙q)ξ
=diag[−α ˆJ T (q)∆x + Yd(q, ˙q, ˙q∗
− Kh(KD + K −1B)s
+ [(KD + K −1B)Kc + (KP − KI K −1
− KKI K −1

c )](cid:18)Z t

s(r)dr + δ0(cid:19)i

ξ(r)dr + δ0(cid:21) .

c (cid:20)Z t

(50)

0

0

Consider the Lyapunov function candidate

∆xT ∆x +

yT K2K −1

V =α(cid:16) 1

2
1
2

1
2
1

+

ξT M (q)ξ +

0

2(cid:20)Z t
s(r)dr + δ0(cid:21)T
s(r)dr + δ0(cid:21) +

0

1

+

2(cid:20)Z t
×(cid:20)Z t

0

1
2

∆aT

1 y +

k Γ−1

k ∆ak(cid:17)
KKI(cid:20)Z t
ξ(r)dr + δ0(cid:21)T
(KM + KKcKD + KcB)
1
∆wT Λ−1 ¯K ∗∆w +
∆aT
2

1
2

0

ξ(r)dr + δ0(cid:21)

d Γ−1

d ∆ad
(51)

where

c

.

M = (KD + K −1B)Kc + KP − KI K −1

(52)
By suitably choosing Kc, we can ensure that M is positive semidef-
inite. The derivative of V can be written as
˙V = − αyT K2y − sT ( ¯K ∗ + B)s

−(cid:20)Z t

KMKc(cid:20)Z t

s(r)dr + δ0(cid:21)T

s(r)dr + δ0(cid:21) ≤ 0. (53)
Theorem 4: Choose the matrix Kc such that M given by (52) is
positive semideﬁnite. Then the adaptive outer loop controller given
by (44), (45), (12), (46), and (47) for the robotic system (2) and
(3) under the inner PID position controller (40) ensures the stability
of the system and convergence of the task-space position error, i.e.,
∆x → 0 as t → ∞.

0

0

The proof of Theorem 4 can be completed by following similar

steps as in the proof of Theorem 1.

and by using the ﬁltering technique in [40], we then have the
following equation without involving joint acceleration measurement

7

Remark 5: The key issue in the case of using a low-level PID
controller is the choice of Kc, and obviously large enough Kc can
ensure that M is positive semideﬁnite. The remaining thing is how
to determine the gain Kc. In practice, since the damping matrix B
may be quite small, we thus neglect it and this implies that kc,i (i.e.,
the i-th diagonal entry of Kc) should satisfy

kc,i ≥

kP,i +qk2

2kI,i

P,i + 4kI,ikD,i

, ∀i = 1, . . . , n.

(54)

Here we face the similar situation as the control engineers of the
robot production company. The control engineers are usually careful
about
the choice of the integral gain and large gain may cause
instability; a trade-off has to be made between the attenuation of
constant disturbances and the stability margin of the control system.
In practice, kP,i and kD,i are possibly/generally chosen to be not
less than kI,i, and in this case, we can simply choose kc,i as

kc,i ≥ (√5 − 1)/2, ∀i = 1, . . . , n.

Remark 6: In practice, either PI velocity controller or PID position
controller is possibly adopted in the low-level inner loop but we may
not know which one is actually used. In this context, the adaptive
outer loop controller given by (44), (45), (12), (46), and (47) with
kc,i satisfying (54) would also be qualiﬁed.

IV. GENERALIZATIONS AND FURTHER DISCUSSIONS

Let us now discuss the proposed framework in other closely related

topics concerning adaptive robot control.

A. Direct Adaptation

The ﬁrst result that we would like to discuss is the well-known
Slotine and Li adaptive controller [9] and the result there is presented
in the context of open joint torque control. If we redeﬁne ˙qr in (20)
as

˙qr = ˙qd − ¯α(q − qd)

(55)
with qd ∈ Rn being the desired joint position and ¯α a positive
design constant, then the adaptive controller given by (21), (11),
(23), and (14) with ˙qr being deﬁned by (55) becomes an outer loop
(“applicable”) version of Slotine and Li adaptive controller suitable
for practical robotic systems (without opening the torque control
module) with an unmodiﬁable inner PI velocity control loop (in the
case of an inner PID position controller, its outer loop version can
be similarly developed by following the steps in Sec. III-D). In this
case of the joint-space position tracking, one can easily show that the
position command qc = qd is also qualiﬁed for ensuring the stability
of the robotic system and convergence of the joint tracking errors.

B. Composite Adaptation

The implementation of the standard composition adaptation al-
gorithm given in [40] in the framework of inner/outer controller
structure seems not straightforward and we need to ensure that no
additional number of parameters appear in the ﬁltered dynamic model
(i.e., avoiding the overparameterization). For this purpose, we rewrite
the dynamics (3) as

diag[wi, i = 1, . . . , n][M (q)¨q + C(q, ˙q) ˙q + B ˙q + g(q)]

= K −1

P u = −( ˙q − ˙q∗

c ) − K −1

P KI(cid:20)q − qc(0) −Z t

0

˙qr(r)dr(cid:21)(56)

diag[wi, i = 1, . . . , n]Yf (q, ˙q, t)ad
= u∗
f − diag[wh,i, i = 1, . . . , n]hf

(57)

i

, wh,i = k−1

where wi = k∗−1
Yf (q, ˙q, t) = λf
p+λf
hf = λf
the Laplace variable and the ﬁlter parameter, respectively. Let

0 ˙qr(r)dri with p and λf > 0 being

p+λf hq − qc(0) −R t

i = 1, . . . , n,
λf
c ), and

P,ikI,i,
f = −

Yd(q, ˙q, ˙q, ¨q), u∗

( ˙q − ˙q∗

p+λf

ˆu∗

f = diag[ ˆw]Yf ˆad + diag[hf ] ˆwh

(58)

where ˆwh is the estimate of wh = [wh,1, . . . , wh,n]T . Then we deﬁne
a prediction error

ef =ˆu∗

f − u∗

f

=diag[w]Yf ∆ad + diag[Yf ˆad]∆w + diag[hf ]∆wh

and the composite adaptive version of (23) and (14) is given as

˙ˆw = − Λ(diag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s + γ0diag[Yf ˆad]ef )
˙ˆad = − Γd(Y T
˙ˆwh = − Λhγ0diag[hf ]ef

d (q, ˙q, ˙qr, ¨qr)s + γ0Y T

f ef )

(59)

(60)
(61)
(62)

where γ0 is a positive design constant and Λh is a diagonal positive
deﬁnite matrix.

Remark 7: The interesting and also distinguished point here is
that the prediction error ef given by (59) contains the unknown
coefﬁcient matrix diag[w], due to which the regressor matrix is
actually only partially known. This motivates us to wonder whether
or not
the stability of the closed-loop robotic system can still
be guaranteed under the composite adaptation here. Besides, the
adaptation algorithm for updating ˆwh given by (62) is indispensable
for deriving the value of the predicted error ef since the low-level
PI controller parameters are generally unknown to the user, and this
should not be considered as the occurrence of overparameterization.

Consider the nonnegative function

V1 = (1/2)[∆wT Λ−1K ∗∆w + ∆aT

d Γ−1

d ∆ad + ∆wT

h Λ−1

h K ∗∆wh]
(63)

whose derivative along (60), (61), and (62) can be written as

˙V1 = − ∆wT K ∗diag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s − ∆aT
f ef

− γ0(∆wT K ∗diag[Yf ˆad]ef + ∆aT
+ ∆wT

h K ∗diag[hf ]ef )

d Y T

d Y T

d (q, ˙q, ˙qr, ¨qr)s

Π

=

z
−∆wT K ∗diag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s − ∆aT
− γ0eT

}|

f K ∗(diag[Yf ˆad]∆w + diag[w]Yf ∆ad + diag[hf ]∆wh

)

d Y T

d (q, ˙q, ˙qr, ¨qr)s

{

}

(64)

|

ef

{z

where the term Π is used to compensate for the indeﬁnite terms
due to the parametric uncertainty, and in this way, the stability is
ensured. The key point here is to exploit the independent nature of
the joint processors which means that K ∗ is diagonal. The other
versions of composite adaptation, e.g., BGF composite adaptation
and CF composite adaptation (see, e.g., [40]) can also be used so
that smoother parameter adaptation and better tracking performance
can be achieved. Speciﬁcally, the CF composite adaptation laws can

be given as

˙ˆw = −Λ(diag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s + γ0diag[Yf ˆad]ef )
˙Λ = λ1(Λ − Λ¯Λ−1Λ) − γ0Λ(diag[Yf ˆad])2Λ
˙ˆad = −Γd(Y T
˙Γd = λ2(Γd − Γd ¯Γ−1
˙ˆwh = −Λhγ0diag[hf ]ef
˙Λh = λ3(Λh − Λh ¯Λ−1

d (q, ˙q, ˙qr, ¨qr)s + γ0Y T
d Γd) − γ0ΓdY T

h Λh) − γ0Λh(diag[hf ])2Λh

f ef )
f Yf Γd

(65)




where λ1, λ2, and λ3 are strictly positive forgetting factors (time-
varying or constant), and ¯Λ, ¯Γd, and ¯Λh denote the upper bounds of
Λ, Γd, and Λh, respectively. Note that Λ(0) and Λh(0) are chosen
as diagonal positive deﬁnite matrices satisfying 0 < Λ(0) ≤ ¯Λ and
0 < Λh(0) ≤ ¯Λh, and Γd(0) can be chosen as a symmetric positive
deﬁnite matrix satisfying 0 < Γd(0) ≤ ¯Γd, and in this way, it can
be shown that Λ(t) and Λh(t) are always diagonal, ∀t ≥ 0. The
derivative of the nonnegative function V1 deﬁned by (63) in this case
becomes
˙V1 =−∆wT K ∗diag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s − ∆aT
∆aT

d (q, ˙q, ˙qr, ¨qr)s
d − ¯Γ−1

d )∆ad

d (Γ−1

d Y T

∆wT (Λ−1 − ¯Λ−1)K ∗∆w −
∆wT
h )K ∗∆wh −

h − ¯Λ−1

h (Λ−1

λ2
2
γ0
2

eT
f K ∗ef .

(66)

λ1
2
λ3
2

−
−

Obviously, the stability of the system and convergence of the joint
tracking errors can be guaranteed.

C. Adaptive Control of Flexible-Joint Manipulators

The typical result may be the singular-perturbation-based adaptive
control approach [10], [41]. Consider a ﬂexible-joint manipulator
governed by [42]

(M0(q)¨q + C(q, ˙q) ˙q + B ˙q + g(q) = Ks(θ − q)
Dr ¨θ + Br ˙θ = Ku − Ks(θ − q)

(67)

where θ ∈ Rn is the rotor position, Ks is the constant, diagonal,
and positive deﬁnite stiffness matrix, Dr ∈ Rn×n is the rotor inertia
matrix seen from the link side, and Br ∈ Rn×n is the damping
matrix. In this case, the motor velocity command is deﬁned as

˙q∗
c = ˙qr + diag[ ˆwi, i = 1, . . . , n]

× [Yd(q, ˙q, ˙qr, ¨qr)ˆad]

with ˙qr being deﬁned as

The adaptation laws for ˆw and ˆad are given as

˙qr = ˙qd − ¯α(q − qd).

˙ˆw = −Λdiag[Yd(q, ˙q, ˙qr, ¨qr)ˆad]s
˙ˆad = −ΓdY T

d (q, ˙q, ˙qr, ¨qr)s.

(68)

(69)

(70)
(71)

The low-level PI control action in this case of ﬂexible-joint robots
would typically take the form

u = −KP ( ˙θ − ˙q∗

c ) − KI (θ − qc)

(72)

where qc = qc(0) +R t

0 ˙qr(r)dr is the position command sent to the
inner motor control loop. Substituting (72) into the second equation
of (67) with some further manipulations gives

Dr(¨θ − ¨q) + Br( ˙θ − ˙q)
= − K ∗( ˙θ − ˙q∗

c ) − KKI(cid:20)θ − q +Z t

0

− Dr ¨q − Br ˙q − Ks(θ − q)

s(r)dr + δ0(cid:21)

(73)

8

c ) − KKI(cid:20)Z t

and the above equation can further be written as
Dr(¨θ − ¨q) + (Br + K ∗)( ˙θ − ˙q) + [(Ks + KKI )K −1
= − K ∗( ˙q − ˙q∗

]Ks(θ − q)
s(r)dr + δ0(cid:21) − Dr ¨q − Br ˙q. (74)
As the fast dynamics becomes settled, i.e., Ks(θ − q) is quasi-
constant, we obtain that
Ks(θ − q) = − Ks(Ks + KKI )−1nK ∗( ˙q − ˙q∗

c )

s

0

+ KKI(cid:20)Z t

0

s(r)dr + δ0(cid:21) + Dr ¨q + Br ˙qo

(75)

and thus the slow dynamics becomes

[M0(q) + K ∗

s Dr]¨q + C(q, ˙q) ˙q + (B + K ∗

s Br) ˙q + g(q)

s KKI(cid:20)Z t

0

s(r)dr + δ0(cid:21)

c ) − K ∗

s K ∗( ˙q − ˙q∗

= − K ∗
where K ∗
s = Ks(Ks + KKI )−1. The fast/slow-dynamics-based
analysis given above is based on [10], [41], and one can rigorously
obtain the stability and convergence of the system by following
similar arguments as in [10], [41].

(76)

Remark 8: Different from the rigid robot case, the actual value
of the scale parameter now satisﬁes diag[w] = K ∗
s K ∗. Part of the
low-level integral action in (72) −KI (θ − q) is the same as the
relative position feedback in [41] and its effect is to increase the
joint stiffness, providing the possibility of applying the control to
manipulators with a relatively low joint stiffness [41].

Remark 9: It is interesting to note that the joint velocity and
position commands in the ﬂexible joint case remains the same as
the rigid joint case. This provides a good understanding and more
importantly an effective justiﬁcation of why most results derived in
the case of rigid robots are generally applicable to (not justiﬁed in the
previous literature though) practical robotic systems with inner/output
loop structure (e.g., most
industrial/commercial robotic systems),
even without the need of any modiﬁcation (in practice, any robot has
certain joint ﬂexibility). In fact, the relative damping suggested in [10]
is naturally included as applying the scaled-dynamic-compensation
versions of most control schemes valid for rigid robots to (ﬂexible-
joint) robots in practice. More remarks in terms of the roles of the
rotor inertias and joint stiffness are presented in the later simulation.
One may also be interested in deriving a composite adaptive
version of the adaptive scheme for ﬂexible-joint manipulators and
it shall be feasible by using similar techniques as those for rigid
manipulators.

D. Further Discussions

Here, we take several standard adaptive robot control schemes for
illustrating how the scaled dynamic compensation makes them to
be qualiﬁed adaptive outer loop schemes and further the possible
applications to robotic systems with inner/outer loop structure. It
seems hopeful
that most adaptive robot control schemes in the
literature can be reshaped to be adaptive outer loop schemes by
accommodating such modiﬁcations.

The inner/outer controller structure basically performs the inner
joint servoing much faster and the outer loop relatively slower, and
thus the scaled dynamic compensation is actually exerted at a quite
lower updating cycle. In the case of fast operating process, this
would result in degrading of the performance and even instability at
certain extreme cases. The main objective of the study and results
presented here is to provide the possibility of exerting dynamic
compensation (feedforward) even in the standard setting of industrial
robotic systems, of course, under the limit of the operation speed.

(cid:22)(cid:60)

(cid:22)(cid:59)

(cid:48)(cid:68)(cid:81)(cid:76)(cid:83)(cid:88)(cid:79)(cid:68)(cid:87)(cid:82)(cid:85)

(cid:22)(cid:61)

(cid:19)(cid:60)

(cid:19)(cid:61)

(cid:19)(cid:59)

Fig. 2. Three-DOF manipulator.

Once upon a while, direct-drive robots are believed to be promising in
taking over the role of the standard robots using gear reduction in that
direct-drive robots are much coefﬁcient and less inﬂuenced by friction
and backlash, etc. But this hope advances not so favorably, especially
in applications, and the reasons may perhaps be the following:

• The torque output of direct-drive robots is small and large
torque output would require large and heavy joint motors, which,
however, are signiﬁcantly constrained by the weight limit of the
manipulator;

• direct-drive robots, as is typically expected, are torque-based,
but torque-based design is relatively risky and not so reliable
since all factors are taken into account at the same time and
in addition the communication constraint presents a limit of the
coupling torque exerting cycle.

These unfavorable factors concerning torque-based design and direct-
drive robots give rise to the welcome of the inner/outer loop structure
in most practical robotic applications and this may still be going in
the future. A very recent example is Robonaut 2 [43] which uses
harmonic gear transmission instead of the direct-drive conﬁguration,
and the feedforward is shown to be necessary to improve the control
accuracy as well as the system response within the range of the
torque limit. In this speciﬁc example, the joint torque control loop
is open just for admitting the injection of feedforward or dynamic
control action, but from a long run and for promoting the large-scale
production and decreasing the cost, the inner/outer loop structure with
the joint control loop sealed may perhaps be more desirable.

V. SIMULATION RESULTS

A. Task-Space Adaptive Control

Consider a three-DOF manipulator with a tool, as is shown in Fig.
2. Its physical parameters are given in Table I with the labels 1,
2, 3, and E denoting link 1, 2, 3, and the tool, respectively, and
the diagonal rotor inertia matrix (seen from the link side) Dr =
diag[0.6, 0.3, 0.1]. The diagonal matrix B and K are set as B =
diag[0.20, 0.15, 0.10] and K = diag[60.0, 30.0, 10.0], respectively.
The angle about the axis Z3 between the tool and the third link is δ =
30 deg. The inner joint servoing loop with a PI velocity controller (the
case of PID position controller shall be similar and omitted here) is
operated at a high-rate cycle with the sampling period being 0.5 ms,
and the outer loop is operated at a low-rate cycle with the sampling
period being 20 ms. The gains of the low-level PI controller are
1 and KI = 15.0I3, and this means that the
set as KP = 30.0I3
effective PI gains are K ∗
I =
diag[900.0, 450.0, 150.0].

P = diag[1800.0, 900.0, 300.0] and K ∗

PHYSICAL PARAMETERS OF THE MANIPULATOR

TABLE I

i-th body mi(kg)
1.6000

1

C,i, I zz

C,i, I yy
I xx
C,i(kg · m2)
0.4320, 0.0720, 0.4320

2

3

E

0.6000

0.6000

0.8000

0.0054, 0.1620, 0.1620

0.0054, 0.1620, 0.1620

0.0032, 0.0960, 0.0960

)

m

(
 
s
r
o
r
r
e
 
n
o
i
t
a
u
g
e
r

l

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

−0.8
 
0

9

lC,i(m)
0.9000

0.9000

0.9000

0.6000

li(m)
1.8000

1.8000

1.8000

1.2000

 

∆x(1)
∆x(2)
∆x(3)

2

4

time (s)

6

8

10

Fig. 3. Task-space position errors (ﬁlter-based control).

1) Regulation problem: We ﬁrst perform the simulations of the
system under the ﬁlter-based and observer-based task-space regula-
tion schemes. The manipulator starts at the conﬁguration q(0) =
[π/6, π/3, −5π/6]T and the corresponding task-space position is
x(0) = [−0.7500, 1.2990, 0.5196]T . The desired task-space position
is set as xd = [−1.0, 2.0, 0.8]T . In the case of using the ﬁlter-
based scheme, the controller parameters are set as K1 = 60.0I3,
K2 = 2.0I3, α = 2.0, Γk = 20.0I3, Λ = 0.001I3, and
Γd = 0.006I15. The initial values of the parameter estimates are
chosen as ˆak(0) = [3.0, 5.0, 2.0]T , ˆw(0) = 03, and ˆad(0) = 015.
Simulation results are shown in Fig. 3 and Fig. 4, which, respectively,
give the responses of the task-space position error and the scale
parameter estimates. In the case of using the observer-based scheme,
the controller parameters β and γ are determined as β = 2.0 and
γ = 2.0, which obviously satisfy the condition (28), and the other
controller parameters and the initial parameter estimates are chosen
to be the same as those of the ﬁlter-based scheme. The task-space
position error and the scale parameter estimates are shown in Fig. 5
and Fig. 6, respectively.

2) Tracking problem: Let us now consider

the case of us-
ing the observer-based tracking scheme given by (21), (37), (19),

0.03

0.025

0.02

0.015

0.01

0.005

s
e
t
a
m

i
t
s
e
 
r
e
t
e
m
a
r
a
p

 

l

e
a
c
s

0
 
0

 

estimate of w
1
estimate of w
2
estimate of w
3

2

4

time (s)

6

8

10

1Iℓ denotes the ℓ × ℓ identity matrix, ℓ = 2, 3, . . . .

Fig. 4. Scale parameter estimates (ﬁlter-based control).

)

m

(
 
s
r
o
r
r
e
 
n
o
i
t
a
u
g
e
r

l

0.6

0.4

0.2

0

−0.2

−0.4

−0.6

−0.8
 
0

 

∆x(1)
∆x(2)
∆x(3)

5

10

time (s)

15

20

10

 

estimate of w
1
estimate of w
2
estimate of w
3

5

10

time (s)

15

20

0.05

0.04

0.03

0.02

0.01

0
 
0

s
e
t
a
m

i
t
s
e
 
r
e
t
e
m
a
r
a
p
 
e
a
c
s

l

Fig. 5. Task-space position errors (observer-based control).

Fig. 8. Scale parameter estimates (observer-based tracking control).

s
e
t
a
m

i
t
s
e

t

 
r
e
e
m
a
r
a
p
e
a
c
s

 

l

0.03

0.025

0.02

0.015

0.01

0.005

0

−0.005
 
0

 

estimate of w
1
estimate of w
2
estimate of w
3

5

10

time (s)

15

20

)
g
e
d
(
 
s
r
o
r
r
e
g
n
k
c
a
r
t

 

i

3

2

1

0

−1

−2

−3

−4

−5
 
0

 

∆q(1)
∆q(2)
∆q(3)

5

10

time (s)

15

20

Fig. 6. Scale parameter estimates (observer-based control).

Fig. 9.

Joint position tracking errors (direct adaptive controller).

(22), (13), and (14). The desired task-space trajectory is given as
xd = [−1.0500 + 0.3 cos(πt/3), 1.2990 + 0.3 sin(πt/3), 0.5196 +
0.3 sin(πt/3)]T . The initial conﬁguration of the manipulator is set
to be the same as the above. The controller parameters are chosen
as β = 3.0, γ = 3.0, Γk = 1100.0I3, Λ = 1.5I3, and Γd = 3.0I15.
The responses of the task-space position tracking errors and the scale
parameter estimates are shown in Fig. 7 and Fig. 8. The gains are
increased, in comparison with the the case of regulation, and this
is feasible since in the tracking problem here, the desired trajectory
starts at the current position of the manipulator.

B. Joint-Space Adaptive Control

Consider ﬁrst the outer loop version of the direct adaptive con-
troller proposed by Slotine and Li with the controller parameters

being chosen as ¯α = 2.0, Λ = 0.5I3, and Γd = 0.5I15. The
desired joint trajectory is set as qd = 36[(1−cos πt), sin πt, sin πt]T
deg. The initial parameter estimates are chosen as ˆw(0) = 03 and
ˆad(0) = 015. The responses of the joint tracking errors and scale
parameter estimates are shown in Fig. 9 and Fig. 10.

We next consider the case of using the composite adaptation in Sec.
IV-B with the controller parameters γ0, λf , and Λh being chosen as
γ0 = 1.0, λf = 1.0, and Λh = 2000.0I3 and the other controller
parameters the same as those of the direct adaptive controller. The
initial estimate of wh is set as ˆwh(0) = 03. The simulation results
are shown in Fig. 11 and Fig. 12, and in comparison with Fig. 9 and
Fig. 10, we see the improved tracking accuracy and responses of the
parameter estimates.

)

m

(
 
s
r
o
r
r
e
 
g
n
k
c
a
r
t

i

0.01

0.005

0

−0.005

−0.01

−0.015
 
0

 

∆x(1)
∆x(2)
∆x(3)

5

10

time (s)

15

20

0.5

0.4

0.3

0.2

0.1

s
e
t
a
m

i
t
s
e
 
r
e
t
e
m
a
r
a
p

 

l

e
a
c
s

0
 
0

 

estimate of w
1
estimate of w
2
estimate of w
3

5

10

time (s)

15

20

Fig. 7. Task-space position tracking errors (observer-based tracking control).

Fig. 10. Scale parameter estimates (direct adaptive controller).

)
g
e
d
(
 
s
r
o
r
r
e
 
g
n
k
c
a
r
t

i

2

1

0

−1

−2

−3

−4

−5
 
0

 

∆q(1)
∆q(2)
∆q(3)

5

10

time (s)

15

20

)
g
e
d
(
 
s
r
o
r
r
e
 
g
n
k
c
a
r
t

i

3

2

1

0

−1

−2

−3

−4

−5
 
0

11

 

∆q(1)
∆q(2)
∆q(3)

5

10

time (s)

15

20

Fig. 11.

Joint position tracking errors (composite adaptive controller).

Fig. 13.

Joint position tracking errors (ﬂexible joint case).

s
e
t
a
m

i
t
s
e

t

 
r
e
e
m
a
r
a
p
e
a
c
s

 

l

0.4

0.35

0.3

0.25

0.2

0.15

0.1

0.05

0
 
0

 

estimate of w
1
estimate of w
2
estimate of w
3

s
e
t
a
m

i
t
s
e

t

 
r
e
e
m
a
r
a
p
e
a
c
s

 

l

5

10

time (s)

15

20

0.5

0.4

0.3

0.2

0.1

0
 
0

 

estimate of w
1
estimate of w
2
estimate of w
3

5

10

time (s)

15

20

Fig. 12. Scale parameter estimates (composite adaptive controller).

Fig. 14. Scale parameter estimates (ﬂexible joint case).

C. Joint-Space Adaptive Control Considering Joint Flexibility

is

The joint

stiffness matrix Ks

set as Ks = 106 ×
diag[6.0, 3.0, 1.0] and the diagonal matrix Br = diag[0.30, 0.20,
0.15]. The controller parameters are chosen to be the same as the rigid
manipulator case. The simulation results are shown in Fig. 13 and
Fig. 14, and we see that the performance is comparable with the rigid
manipulator case. But one may need to be cautious about the choice
of the rotor inertias, and if the rotor inertias are too small [compared
with the manipulator inertia matrix due to the link motion, i.e., M0(q)
in (67)], it is hard to choose a group of controller parameters that can
stabilize the system. This is understandable as we recall the standard
practice in terms of the design of the motor inertia, i.e., in the case
that the motor inertia is strikingly smaller than the load inertia, the
whole system would be quite difﬁcult to stabilize and the use of
advanced control algorithms does not help much.
In particular, we perform a simulation for

re-
duced joint stiffness matrix, i.e., setting Ks to be Ks = 104 ×
diag[6.0, 3.0, 1.0] with the rotor inertias remaining unchanged. In
addition, as the joint becomes more ﬂexible,
is hard for the
manipulator to track a fast time-varying trajectory, and therefore
we slow down the evolution of the desired trajectory as qd =
36[1 − cos(πt/3), sin(πt/3), sin(πt/3)]T deg. The response of the
joint tracking errors is shown in Fig. 15. But as we reduce the rotor
inertias to, e.g., 50% of the original, it is very difﬁcult to stabilize
the system even with the joint stiffness being unchanged (relatively
high). To illustrate the reason behind this phenomenon, we calculate
the link inertia matrix M0(q) at q = q(0) = 03 and its value is

the case of

it

M0(q) =


18.9058

0

0

0
0

18.9290
9.4327

9.4327
5.1205


 .

the maximum load/rotor

The three eigenvalues of M0(q) are 0.3352, 18.9058, and 23.7143.
This means that
inertia ratio reaches
23.7143/0.3 ≈ 79 (happening at the second joint) and such a ratio
makes it challenging to stabilize the system. One solution to this
problem, as suggested by the standard results in the design of the
load/motor ratio, is to increase the joint stiffness, and in other words,
larger stiffness allows the speciﬁcation of larger load/rotor inertia
ratio. Fig. 16 gives the response of the joint tracking errors as the
stiffness is increased to Ks = 108 × diag[6.0, 3.0, 1.0] with the
desired joint position being still the same as the rigid manipulator
case. However, in the simulation, we have to decrease the integration
step size so that the stability of the numerical integration can be
ensured since the degree of stiffness of the system dynamics is
increased. In this particular case (i.e., increased joint stiffness and
decreased rotor inertia), the step size is decreased from 0.5 ms to
0.05 ms.

D. Further Remarks

One key issue in the above simulations is the choice of controller
parameters including those of the low-level PI controller. Different
from most theoretical results in the literature that design control
laws at the torque level, the system here actually has two loops
with strikingly different updating frequency, namely, the low-rate
outer loop and the high-rate inner joint servoing loop. Due to this
structure, to guarantee the robustness and performance of the whole
system, high gains are speciﬁed in the high-rate joint servoing loop
while low gains are speciﬁed in the low-rate outer loop. We naturally
produce a system that consists of two loops with two time-scales and
interestingly, it is the system constraint that gives rise to the two-time-
scale behavior of the closed-loop system that we cannot modify.

)
g
e
d
(
 
s
r
o
r
r
e
 
g
n
k
c
a
r
t

i

1

0.5

0

−0.5

−1

−1.5

−2

−2.5

−3
 
0

 

∆q(1)
∆q(2)
∆q(3)

5

10

time (s)

15

20

Fig. 15.

Joint position tracking errors (reduced joint stiffness).

 

∆q(1)
∆q(2)
∆q(3)

12

It might be worth discussing the roles of feedback separation in
the proposed controllers. Feedback separation is a design objective
introduced in the context of Cartesian-space control and visual servo-
ing control of robots with uncertain kinematics (see, e.g., [30], [31]),
and the consequence of feedback separation is to reduce the activity
of the dynamic compensation action. For instance, the ﬁlter-based
regulation algorithm in Sec. III-A actually does not achieve feedback
separation and thus the scaled dynamic compensation action given
in (10) involves an additional term −α ˆJ T (q)∆x (i.e., a stronger
compensation action is required). In contrast, both the observer-based
regulation and tracking controllers achieve the feedback separation,
beneﬁting from which,
the scaled dynamic compensation action
deﬁned in (21) no longer involves additional terms (of course, the
controller structure becomes more complex since an observer is
introduced). From a control viewpoint, this leads us to reconsider
the issue of the cancellation of indeﬁnite terms in the standard
backstepping-based control. The cancellation of indeﬁnite terms can
lead to a good form of the derivative of the Lyapunov function
but often gives rise to potentially decreased robustness and strong
coupling between different control loops. The realization of feedback
separation may help avoid the unfavorable cancellations of indeﬁnite
terms.

Furthermore, the proposed approach may possibly be applicable
to other classes of mechanical systems (e.g., space robots, mobile
robots, or aerial vehicles) that have a hidden torque/force control
loop yet admit the design of the velocity command.

)
g
e
d
(
 
s
r
o
r
r
e
g
n
k
c
a
r
t

 

i

3

2

1

0

−1

−2

−3

−4

−5
 
0

5

10

time (s)

15

20

REFERENCES

Fig. 16.
rotor inertias).

Joint position tracking errors (increased joint stiffness and decreased

Another issue often involved in practice is the computational
efﬁciency, especially in the case that the number of the DOFs of the
manipulator is very large. The typical solution to this problem is the
recursive implementation of the adaptive controllers—see, e.g., [32],
[44], [45]. The recursive direct adaptive controller as detailed in [32],
[44] has the complexity O(n) and the complexity of the recursive
composite adaptive controller in [45] is O(n2), where n denotes the
number of the DOFs of the manipulator. We may also note that all the
complicated computations of the nonlinear and coupling terms take
place in the low-rate outer loop with a powerful computer, and thus
the complexity up to O(n) or O(n2) is expected to be acceptable.

VI. CONCLUSION

In this paper, we have proposed a modularity approach to adaptive
control of robotic systems with inner/outer loop structure, and both
the task-space and joint-space control are taken into consideration
under this framework. The proposed adaptive outer loop controllers
take into full account the system dynamic effects while most existing
kinematic controllers rely on the ad hoc assumption of fast enough
joint servoing loop or the modiﬁcation of the low-level joint servoing
controller to be much more complicated one. From an application
perspective, most existing results cannot ensure the stability of the
system or convergence of the tracking/regulation error as applied to
robotic systems with inner/outer loop structure (e.g., most commer-
cial/industrial robotic systems) while the proposed adaptive outer loop
schemes can guarantee the stability and convergence of the system
without the need of modifying the low-level joint servoing loop. The
goal of the study here is to yield a module robot control system
where the adaptive outer loop is user-deﬁned and the inner loop is
factory-deﬁned and embedded.

[1] M. Aicardi, A. Caiti, G. Cannata, and G. Casalino, “Stability and
robustness analysis of a two layered hierarchical architecture for the
closed loop control of robots in the operational space,” in Proceedings of
the IEEE International Conference on Robotics and Automation, vol. 3,
Nagoya, Japan, 1995, pp. 2771–2778.

[2] J. Roy and L. L. Whitcomb, “Adaptive force control of position/velocity
controlled robots: Theory and experiment,” IEEE Transactions on
Robotics and Automation, vol. 18, no. 2, pp. 121–137, Apr. 2002.

[3] R. Kelly and J. Moreno, “Manipulator motion control in operational
space using joint velocity inner loops,” Automatica, vol. 41, no. 8, pp.
1423–1432, Aug. 2005.

[4] K. Camarillo, R. Campa, V. Santib´a˜nez, and J. Moreno-Valenzuela,
“Stability analysis of the operational space control for industrial robots
using their own joint velocity PI controllers,” Robotica, vol. 26, no. 6,
pp. 729–738, 2008.

[5] D. E. Whitney, “Resolved motion rate control of manipulators and hu-
man prostheses.” IEEE Transactions on Man-Machine Systems, vol. 10,
no. 2, pp. 47–53, Jun. 1969.

[6] M. W. Spong and M. Vidyasagar, Robot Dynamics and Control. New

York: John Wiley & Sons, Inc., 1989.

[7] M. Grotjahn and B. Heimann, “Model-based feedforward control in
industrial robotics,” The International Journal of Robotics Research,
vol. 21, no. 1, pp. 45–60, Jan. 2002.

[8] F. Sanﬁlippo, L. I. Hatledal, H. Zhang, M. Fago, and K. Y. Pettersen,
“Controlling Kuka industrial robots: Flexible communication interface
JOpenShowVar,” IEEE Robotics & Automation Magazine, vol. 22, no. 4,
pp. 96–109, Dec. 2015.

[9] J.-J. E. Slotine and W. Li, “On the adaptive control of robot manipula-
tors,” The International Journal of Robotics Research, vol. 6, no. 3, pp.
49–59, Sep. 1987.

[10] M. W. Spong, “Adaptive control of ﬂexible joint manipulators,” Systems

& Control Letters, vol. 13, no. 1, pp. 15–21, Jul. 1989.

[11] C. C. Cheah, C. Liu, and J.-J. E. Slotine, “Adaptive Jacobian tracking
control of robots with uncertainties in kinematic, dynamic and actuator
models,” IEEE Transactions on Automatic Control, vol. 51, no. 6, pp.
1024–1029, Jun. 2006.

[12] Y.-H. Liu, H. Wang, C. Wang, and K. K. Lam, “Uncalibrated visual
servoing of robots using a depth-independent interaction matrix,” IEEE
Transactions on Robotics, vol. 22, no. 4, pp. 804–817, Aug. 2006.

[13] W. E. Dixon, “Adaptive regulation of amplitude limited robot manipu-
lators with uncertain kinematics and dynamics,” IEEE Transactions on
Automatic Control, vol. 52, no. 3, pp. 488–493, Mar. 2007.

13

[40] J.-J. E. Slotine and W. Li, “Composite adaptive control of robot

manipulators,” Automatica, vol. 25, no. 4, pp. 509–519, Jul. 1989.

[41] M. W. Spong, “Adaptive control of ﬂexible joint manipulators: Com-
ments on two papers,” Automatica, vol. 31, no. 4, pp. 585–590, Apr.
1995.

[42] ——, “Modeling and control of elastic joint robots,” Journal of Dynamic
Systems, Measurement, and Control, vol. 109, no. 4, pp. 310–318, Dec.
1987.

[43] T. D. Ahlstrom, M. A. Diftler, R. B. Berka, J. M. Badger, S. Yayathi,
A. W. Curtis, and C. A. Joyce, “Robonaut 2 on the International Space
Station: Status update and preparations for IVA mobility,” in AIAA Space
Conference and Exposition, San Diego, CA, 2013, pp. 1–14.

[44] H. Wang, “On the recursive implementation of adaptive control for robot
manipulators,” in Chinese Control Conference, Beijing, China, 2010, pp.
2154–2161.

[45] ——, “Recursive composite adaptation for robot manipulators,” Journal
of Dynamic Systems, Measurement, and Control, vol. 135, no. 2, pp.
021 010–1–021 010–8, Mar. 2013.

[14] H. Wang, “Adaptive visual tracking for robotic systems without image-
space velocity measurement,” Automatica, vol. 55, pp. 294–301, May
2015.

[15] H. Wang, M. Jiang, W. Chen, and Y.-H. Liu, “Visual servoing of robots
with uncalibrated robot and camera parameters,” Mechatronics, vol. 22,
no. 6, pp. 661–668, Sep. 2012.

[16] M. W. Spong, “On the robust control of robot manipulators,” IEEE
Transactions on Automatic Control, vol. 37, no. 11, pp. 1782–1786,
Nov. 1992.

[17] B. Yao and M. Tomizuka, “Smooth robust adaptive sliding mode control
of manipulators with guaranteed transient performance,” Journal of
Dynamic Systems, Measurement, and Control, vol. 118, no. 4, pp. 764–
775, Dec. 1996.

[18] F. Caccavale and P. Chiacchio, “Identiﬁcation of dynamic parameters and
feedforward control for a conventional industrial manipulator,” Control
Engineering Practice, vol. 2, no. 6, pp. 1039–1050, Dec. 1994.

[19] J. Swevers, W. Verdonck, and J. D. Schutter, “Dynamic model identiﬁ-
cation for industrial robots,” IEEE Control Systems Magazine, vol. 27,
no. 5, pp. 58–71, Oct. 2007.

[20] C. C. Cheah, M. Hirano, S. Kawamura, and S. Arimoto, “Approximate
Jacobian control for robots with uncertain kinematics and dynamics,”
IEEE Transactions on Robotics and Automation, vol. 19, no. 4, pp. 692–
702, Aug. 2003.

[21] C. C. Cheah, C. Liu, and J.-J. E. Slotine, “Adaptive tracking control for
robots with unknown kinematic and dynamic properties,” The Interna-
tional Journal of Robotics Research, vol. 25, no. 3, pp. 283–296, Mar.
2006.

[22] X. Liang, H. Wang, W. Chen, and Y.-H. Liu, “Uncalibrated image-based
visual servoing of rigid-link electrically driven robotic manipulators,”
Asian Journal of Control, vol. 16, no. 3, pp. 714–728, May 2014.

[23] H. Wang and Y. Xie, “Prediction error based adaptive Jacobian tracking
for free-ﬂoating space manipulators,” IEEE Transactions on Aerospace
and Electronic Systems, vol. 48, no. 4, pp. 3207–3221, Oct. 2012.

[24] H. Wang, Y.-H. Liu, and W. Chen, “Uncalibrated visual tracking control
without visual velocity,” IEEE Transactions on Control Systems Tech-
nology, vol. 18, no. 6, pp. 1359–1370, Nov. 2010.

[25] A. C. Leite, A. R. L. Zachi, F. Lizarralde, and L. Hsu, “Adaptive
3D visual servoing without image velocity measurement for uncertain
manipulators,” in 18th IFAC World Congress, Milano, Italy, 2011, pp.
14 584–14 589.

[26] H. Wang and Y. Xie, “Observer-based task-space consensus of networked
robotic systems: A separation approach,” in Proceedings of the Chinese
Control Conference, Hangzhou, China, 2015, pp. 7604–7609.

[27] L. E. Weiss, A. C. Sanderson, and C. P. Neuman, “Dynamic sensor-
based control of robots with visual feedback,” IEEE Journal of Robotics
and Automation, vol. 3, no. 5, pp. 404–417, Oct. 1987.

[28] B. Siciliano, “A closed-loop inverse kinematic scheme for on-line joint-

based robot control,” Robotica, vol. 8, no. 3, pp. 231–243, Jul. 1990.

[29] S. Hutchinson, G. D. Hager, and P. I. Corke, “A tutorial on visual servo
control,” IEEE Transactions on Robotics and Automation, vol. 12, no. 5,
pp. 651–670, Oct. 1996.

[30] H. Wang, “Adaptive control of robot manipulators with uncertain kine-
matics and dynamics,” arXiv preprint arXiv:1403.5204 (conditionally
accepted by IEEE Transactions on Automatic Control), 2014.

[31] ——, “Passivity-based adaptive control for visually servoed robotic

systems,” arXiv preprint arXiv:1506.08762, 2015.

[32] G. Niemeyer and J.-J. E. Slotine, “Performance in adaptive manipulator
control,” The International Journal of Robotics Research, vol. 10, no. 2,
pp. 149–161, Apr. 1991.

[33] J. J. Craig, Introduction to Robotics: Mechanics and Control, 3rd ed.

Upper Saddle River, NJ: Prentice-Hall, 2005.

[34] M. W. Spong, S. Hutchinson, and M. Vidyasagar, Robot Modeling and

Control. New York: Wiley, 2006.

[35] J.-J. E. Slotine and W. Li, Applied Nonlinear Control.

Englewood

Cliffs, NJ: Prentice-Hall, 1991.

[36] C. A. Desoer and M. Vidyasagar, Feedback Systems: Input-Output

Properties. New York: Academic Press, 1975.

[37] M. M. Bridges, D. M. Dawson, and X. Gao, “Adaptive control of rigid-
link electrically-driven robots,” in Proceedings of the IEEE Conference
on Decision and Control, San Antonio, TX, 1993, pp. 159–165.

[38] H. Berghuis and H. Nijmeijer, “Global regulation of robots using only
position measurements,” Systems & Control Letters, vol. 21, no. 4, pp.
289–293, Oct. 1993.

[39] C. C. Cheah, C. Liu, and J.-J. E. Slotine, “Adaptive Jacobian vision
based control for robots with uncertain depth information,” Automatica,
vol. 46, no. 7, pp. 1228–1233, Jul. 2010.

