6
1
0
2

 
r
a

 

M
6
1

 
 
]

.

C
O
h
t
a
m

[
 
 

1
v
2
1
0
5
0

.

3
0
6
1
:
v
i
X
r
a

Selective model-predictive control for ﬂocking systems

G. Albi and L. Pareschi

Abstract— In this paper the optimal control of
alignment models composed by a large number of
agents is investigated in presence of a selective action
of the control. As a ﬁrst step toward a reduction of
computational cost, we introduce a model predictive
control (MPC) approximation by deriving a numer-
ical scheme with a feedback selective constrained
dynamics. Next, in order to cope with the numerical
solution of a large number of interacting agents, we
introduce a binary interaction algorithm [2] which is
able to simulate efﬁciently the selective constrained
dynamics. Consistency of the algorithm is also shown
in the context of standard kinetic theory. Finally,
some numerical simulations are reported to show the
efﬁciency of the proposed techniques.

I. INTRODUCTION

In this paper we focus on multi-agent systems
subject to a velocity alignment dynamic [12], [15],
[16], [23], [24], [28] inﬂuenced by an external
control, which can be used to study the exterior
inﬂuence on the system dynamics and to enforce
emergence of non spontaneous desired asymptotic
states. This type of problems has risen large interest
in several communities, see for example [1], [5],
[7], [8], [10], [21], [22].

We consider a Cucker-Smale type model [12],
where N agents described by their position and
velocity, (xi, vi) ∈ R2d evolve accordingly to

(1)
where H(·,·) is a general communication function
weighting the alignment towards the mean velocity,

This work was supported by EU-project HDSPCONTR.
G. Albi is with Faculty of Mathematics, TU M¨unchen, Garch-

ing, D-85748, Germany. giacomo.albi@ma.tum.de

L. Pareschi

is with the Department of Mathematics and
Computer Science, University of Ferrara, Ferrara, IT-44121,
Italy. lorenzo.pareschi@unife.it

˙xi = vi,

˙vi =

1
N

N(cid:88)

i=1

H(xi, xj)(vj − vi) + uS(xi, vi),

usually depending on the relative distance of the
agents. The control term u is deﬁned by the solution
of the following optimal control problem

(cid:90) T

JT (u(·)),

0

JT (u) =

min
u(·)∈Ub
1
2

(cid:2)L(x(t), v(t)) + ν|u(t)|2(cid:3) dt,
with the following choice of L(x, v) =(cid:80)N

(2)
where x = (x1, . . . , xN ), v = (v1, . . . , vN ), and
i=1 |vi −
vd|2/N, with vd ∈ Rd a desired velocity, ν > 0 a
regularization parameter, and Ub ⊂ Rd the set of
admissible bounded controls [17]. For simplicity in
the formulation (2) we consider a least–square type
cost functional, but other choices can be considered
and treated similarly. We denote with S(x, v) a
prescribed real-valued function, which tunes the in-
ﬂuence of the control on the single agent according
to its position and velocity, assuming |S(x, v)| ≤ 1,
bounded and positive. We call S(x, v) selective
function and the term uS(x, v) as selective control.
The dynamic in (1) describes an averaging process
of alignment between the velocities vi of the N
agents. The emergence of alignment, i.e. for every i,
vi collapses to a single velocity point, is strictly re-
lated to the structure of the communication function
H(·,·), [11], [12], [23], and is not always assured.
Therefore, the presence of a control dynamic can
be interpreted as a tool to enforce the emergence of
alignment or to steer the system towards a desired
trajectory, [3], [4], [6].

II. SELECTIVE MODEL PREDICTIVE CONTROL
For large values of N the solution of problem
(1)-(2) becomes prohibitive by standard methods
[18], [27], due to the high dimensionality and the
nonlinearities of the system. The ﬁrst step of our
approximation scheme is based on model predic-
tive control (MPC), also called receding horizon

M−1(cid:88)

strategy (RHS) or instantaneous control (IC) in
the engineering literature. This procedure instead
of solving the above control problem (1)-(2) over
the whole time horizon, ﬁnds an approximation
by an iterative solution over a sequence of ﬁnite
time steps. We refer for theoretical results on the
properties of u, for the quadratic cost functional and
linear and nonlinear dynamics to [9], [19], [20].

A. Receding horizon strategy

For simplicity we consider the 1−dimensional
setting, therefore u ∈ Ub = [uL, uR] and (xi, vi) ∈
R2. We split the time interval [0, T ] in M time
intervals of length ∆t and let tn = n∆t, and
we assume the control piecewise constant on time
intervals of length ∆t > 0,

u(t) =

unχ[tn,tn+1](t).

n=0

The RHS aims at determining the value of the
control ¯un by solving for the known state (xn
i , vn
i )
a (reduced) optimization problem on [tn, tn+1] in
order to obtain the new state (xn+1
). This
procedure is reiterated until n∆t = T is reached.
In this way it is possible to reduce the complexity
of the initial problem (1)-(2), to an optimization
problem in a single real–valued variable ¯un.

, vn+1

i

i

Moreover, the quadratic cost and a suitable dis-
cretization of (2) allows an explicit representa-
tion of ¯un in terms of ¯vi and vi(tn+1). In order
to do this, we discretize with an explicit Euler
scheme (2) and introduce the compact notation
j ) and
(¯v, ¯u, ¯p) = (vn+1, un, pn+1), H n
is the
Sn
i = S(xn
associated lagrangian multiplier of ¯vi. Thus we
deﬁne the following discrete Lagrangian
L∆t(¯v, ¯u, ¯p) = J∆t(¯v, ¯u) +

ij = H(xn
i ), where for every i, ¯pi

¯vi − vn
i +

i , xn

i , vn

¯pi

N(cid:88)

j=1

− ∆t
N

H n

ij(vn

j − vn

i ) − ∆t¯uSn

i

1
N

(cid:16)
N(cid:88)
 ,

i=1

(3)
where J∆t(v, u) = (L(x, v)+ν|u|2)/2. Computing
the derivatives of (3) with respect to ¯vi and ¯ui we

obtain the ﬁrst order optimality conditions

¯vi − vd + ¯pi = 0,

ν ¯ui +

∆t
N

¯piSn

j = 0,

(4)

which permits to express the control feedback w.r.t.
the state variables for every n = 0, . . . , M − 1

N(cid:88)

j=1

¯un = − ∆t
νN

(¯vj − vd)Sn
j .

(5)

B. The feedback controlled ﬂocking system

The feedback controlled system in the discretized

N(cid:88)

j=1

form results

vn+1
i

= vn

i +

− (∆t)2
νN

N(cid:88)
N(cid:88)

∆t
N

j=1

j=1

H n

ij(vn

j − vn
i )

j − vd)Sn
(vn+1

j Sn
i ,

vn
i = ¯vi,

(6)
where the action of the control is substituted by
an implicit term representing the relaxation toward
the desired velocity vd. In what follows we omit the
transport part, given by the ﬁrst equation of (6).

1) Derivation of

the forward system: Let us
introduce the parameter γ = ∆t/N, we can write
system (6) in matrix-vector notation as follows

N γ2

Snevd

(7)

Anvn+1 = vn − γLnvn +

ν

that (Ln)ii =(cid:80)

where Ln is the laplacian matrix at time n, such
ij, and
, and with

(cid:16)
ij and (Ln)ij = −H n

Id + N γ2
(Sn)ij = Sn
the following conventional notations,

ν Sn(cid:17)

j(cid:54)=i H n
j , An =

i Sn

e = (1, 1, . . . , 1)T , vn = (vn

1 , vn

2 , . . . , vn

N )T .

We remark that An enjoys the following properties,
namely its inverse can be expressed as

and having deﬁned Bn

(An)−1 = Id −

N γ2

Sn,

ν + N γ2(cid:16)(cid:80)N
ν + N γ2(cid:80)N

ν + N γ2trac(Sn)
i = (Ane)i, we have
j − Sn
i ))
j )2

j (Sn
j=1(Sn

j=1(Sn

(cid:17)

.

Bn

i =

sketched at the end of the section by introducing
a Povzner-Boltzmann-type equation, see [2], [13],
[25] for further details.

A. Binary Interaction Algorithm

+

(8)

We approximate the interaction sums in (9) by
considering pairwise interactions between agents,
thus for (i, j) we have

Through a straightforward computation we obtain
the fully explicit scheme
vn+1 = vn − γLnvn +

N γ2

·

ν + N γ2trac(Sn)

(cid:18) ν + N γ2trac(Sn)

(cid:19)

Bvd − vn

· Sn

ν

N γ3

+

ν + N γ2trac(Sn)

SnLnvn.

N(cid:88)

j=1

Expressing again the parameters γ in terms of ∆t
and scaling the regularization parameter ν = κ∆t
and omitting high order terms we have

∆t
N

vn+1
i

= vn

i +

N κ + ∆t(cid:80)N

∆t

+

+ O(∆t2).

H n

ij(vn

j − vn
i )
N(cid:88)

(cid:0)vd − vn

j

(cid:1) Sn

i Sn
j

j=1(Sn

j )2

j=1

(9)
Remark 2.1: Let us assume that H(xi, xj) =
H(xj, xi) and Si ≡ 1 for every i, if we introduce
the change of variables wi(tn) = vi(tn) − vd and

deﬁne m(tn) =(cid:80)N

i=1 wi(tn)/N we have
1 − ∆t

mn =

mn+1 = mn − ∆t

κ + ∆t

(cid:80)N

m0.
(10)
Therefore, for n → ∞, m∞ = 0 which implies
the
1
N
feedback control is able to control the mean of the
system but not to assure the global ﬂocking state.

j=1 vj(tn) = vd. Thus,

in this case,

κ + ∆t

(cid:19)n

(cid:18)

III. BINARY INTERACTION ALGORITHM

In order to reduce the computational complexity
interactions in the case of large
of the overall
number of agents, N (cid:29) 1 , we introduce a fast
numerical algorithm to approximate the interac-
tion dynamics [2]. Consistency of the algorithm is

v∗
i = vn
v∗
j = vn

i + αH n
j + αH n

ij(vn
ji(vn

j − vn
i − vn

i ) + αsn
ij
j ) + αsn
ji

(11)

where α is the strength parameter and the term
sij represents selective feedback control, deﬁned as
follows,

ij = βn(cid:0)vd − vn

j

sn

i Sn
j ,

(12)

and with the following choice of parameters

βn =

1

κ + 2∆tξn ,

ξn =

1
N

(Sn

j )2.

(13)

(cid:1) Sn
N(cid:88)

j=1

Thus we consider the following algorithm for the
computation of the velocities’ change of all agents.
Algorithm 3.1 (Binary Interaction Algorithm):
k), with k = 1, . . . , N.
k, v0
2) for n = 0 to M − 1

Given N agents (x0

1)

a) set Nc = Iround(N/2);
b) select Nc random pairs (i, j) uniformly
without repetition among all possible
pairs of individuals at time tn;
i , xn
j )

c) evaluate H(xn

j ), H(xn

i , xn

and

ji;
sn
ij, sn
ity changes v∗

d) Using relations (11), compute the veloc-
i , v∗
j for each pair (i, j)
i , v∗
, vn+1
i ),
(xn
=
)
j , v∗
all
for
) = (xn
j )
changed their

(xn+1
, vn+1
individuals

e) set

that

j

i

i

(xn+1
j
the
velocity,

f) (xn+1

, vn+1

) = (xn
remaining individuals.

h

h

h, vn

h ) for all

the

where ϕ∗ = ϕ(x, v∗) and ϕ = ϕ(x, v). Expanding
around v∗ − v we have

end for
function Iround(·) denotes

The
stochastic rounding deﬁned as

the

integer

λα

∇vϕ · [H(x, y)(w − v)

R4d
+ βn(vd − w)SnSn]f nf n dwdy dvdx

(cid:90)

+ λα2R[ϕ],

where R[ϕ] is the bounded remainder of the Taylor
expansion. Introducing the scaling λ = 1/ε, α = ε,
as ε → 0 it follows that λα = 1 and λα2R[ϕ] → 0.
Integrating by parts and reverting back the equation
in strong form we ﬁnally have
f n+1 = f n−∆t∇v · [

(H(x, y)(w − v)

(cid:90)

+ βn(vd − w)SnSn)f nf n dydw] ,
which for f (x, v) given by (14) coincides with (9).
Remark 3.1: The full numerical scheme consists
in solving iteratively two steps: transport and inter-
actions,

R2d

f (cid:63) = f n + ∆tv · ∇xf n,
f n+1 = (1 − τε) f (cid:63) + τεQ+

ε (f (cid:63), f (cid:63))

(T)
(I)

ε

where τε = ∆t/ε, and Q+
represents the gain
part of (16), which is computed through Algorithm
3.1. To preserve the positivity of f n+1 the algo-
rithm requires that ∆t ≤ ε, which in general is
restrictive since ε has to be small. On the other
hand, the interaction operator (16) is solved linearly
with O(N ) operations against the O(N 2) cost of
the direct evaluation. Therefore, the algorithms is
efﬁcient whenever ε (cid:29) 1/N. For further discussion
on the analysis and convergence of the method we
refer to [2].

IV. NUMERICAL TESTS

We consider

the Cucker-Smale model with
H(x, y) = 1/(1 + |x − y|2)γ and γ = 10.
Note that, with this choice of γ, alignment is not

(cid:40)

N(cid:88)

i=1

Iround(x) =

[x] + 1,
[x],

ζ < x − [x],
elsewhere

where ζ is a uniform [0, 1] random number and [·]
is the integer part.

B. Consistency of the algorithm

The algorithm has its roots in the classical Monte
Carlo methods of kinetic theory [2]. We denote with
f n = f (tn, x, v) the nonnegative empirical density,
describing the density of individuals at time tn ≥ 0
at position x ∈ Rd with velocity v ∈ Rd,

f n(x, v) =

1
N

δ(x − xn

i )δ(v − vn
i ).

(14)

(15)

Solving the binary dynamics is equivalent to solve
the following Boltzmann-like equation

(cid:90)

f n+1 = f n + ∆tλQn
Qn =

(cid:18) 1
J f n∗ f n∗ − f nf n

(cid:19)

R2d

dw dy,

(16)
where Qn = Q(f n, f n) is the interaction operator,
J (x, v; y, w) the Jacobian of the binary transfor-
mation (11), and f n∗ = f n(x∗, y∗) depicts the pre-
interaction density such that (x∗, v∗) → (x, v) after
interaction (11). Let us introduce the test function
ϕ(x, v) ∈ C 2(R2d; R), thus we can reformulate
(16) in weak form as follows

λ(cid:104)Qn, ϕ(cid:105) = λ

(ϕ∗ − ϕ)f nf n dwdy dvdx,

(cid:90)

R4d

guaranteed. An initial data of N = 2×105 points is
sampled from a normal distribution in space, with
center in zero and unitary variance, and in velocity,
uniformly distributed on a circumference of radius
5. Our goal is to enforce alignment with respect to
the desired velocity vd = (1, 1)T . The evolution of
system (9) is evaluated up to ﬁnal time T = 4 with
parameters ∆t = α = 0.01 for Algorithm 3.1.

A. Localized stabilization

We consider the following selective function

S(xi, vi) = χBR(0)(xi),

(17)
where BR(0) = {x|x ∈ R2,|x|2 ≤ R2}. In
Figure 1 we report the control’s action for R =
{0, 1, 2, 10} and κ = 1/4; in Figure 2 we explore
the range of parameters (R, κ) ∈ [0, 50] × [0, 10].

Fig. 1. Evolution of the empirical density for (9), with N =
2 × 105, with γ = 10. Selective control uS(x, v) is active
inside the white circle with κ = 1/4. First row, on the left no
control is active (R = 0), on the right radius is R = 1, and
no desired alignment is reached. Second row, on the left with
R = 2 still not all the density is steered to alignment, on the
right with R = 10 alignment is obtained.

(cid:80)N
Fig. 2. We set the region of parameters to be (R, κ) ∈
[0.1, 50]×[0.1, 10], and we study (left) the convergence to ﬁnal
j=1 |vj (T ) − vd|2, with T = 4,
ﬂocking state, AR,κ ≡ 1
darker regions represent closer state to global alignment; (right)
the total cost of the control CR,κ ≡ ∆t
j −
vd|2Sn(xj , vj ).

(cid:80)N
j=1 |vn

(cid:80)M−1

n=0

κT

N

B. Sparse stabilization

Selective control can be connected to the concept

of sparse control, [7], [10], [14], [26], deﬁning

S(xi, vi) =

(cid:113) 1

N

(cid:80)N
(vd − vi)χω(t)(xi)
j=1 |vd − vj|2χω(t)(xj)

,

where ω(t) is a subset of Rd. Thus, the selective
feedback control reads

1

κ + ∆t

(vd − vi) χω(t)(xi).

uS(xi, vi) =

(18)
We consider ω(t) = BR(xi∗ (t)), with i∗ deﬁned at
every time t as i∗ = arg maxi∈{1,...,N} |vd − vi|.
Therefore, the action of the control is mainly con-
centrated on the agent farthest from the desired
velocity. In Figure 3 we show that this strategy
is able to enforce more efﬁciently consensus with
respect to the tests of Figure 1, and selective control
(17) with R = 1 and R = 2.

V. ACKNOWLEDGMENTS

GA acknowledges

the ERC-Starting Grant
project High-Dimensional Sparse Optimal Control
(HDSPCONTR).

nol., pages 297–336. Birkh¨auser Boston Inc., Boston, MA,
2010.

[12] F. Cucker and S. Smale. Emergent behavior in ﬂocks.

IEEE Trans. Automat. Control, 52(5):852–862, 2007.

[13] M. Fornasier, J. Haskovec, and G. Toscani. Fluid dynamic
description of ﬂocking via Povzner-Boltzmann equation.
Physica D, 240:21–31, 2011.

[14] M. Fornasier, B. Piccoli, and F. Rossi. Sparse mean-ﬁeld
optimal control. Phil. Trans. A Math Phys. Eng. Sci.,
13:372(2028), 2014.

[15] V. Gazi and K. Passino. Stability analysis of swarms. IEEE

Trans. Auto. Control, 48:692–697, 2003.

[16] S. Y. Ha, T. Ha and J. Kim. Emergent behavior of a
Cucker-Smale type particle model with nonlinear velocity
couplings. IEEE Trans. Automatic Control. 55, 1679-1683,
2010.

[17] M. Herty, M. Zanella. Performance bounds for the mean-

ﬁeld limit of constrained dynamics. Preprint, 2015.

[18] M. Krstic, I. Kanellakopoulos, and P. Kokotovic. Nonlin-
John Wiley and Sons

ear and adaptive control design.
Inc., New York, 1995.

[19] D. Q. Mayne and H. Michalska. Receding horizon control
IEEE Trans. Automat. Control,

of nonlinear systems.
35(7):814–824, 1990.

[20] H. Michalska and D. Q. Mayne. Robust receding horizon
IEEE Trans.

control of constrained nonlinear systems.
Automat. Control, 38(11):1623–1633, 1993.

[21] N. Moshtagh and A. Jadbabaie Distributed geodesic
control laws for ﬂocking of nonholonomic agents. IEEE
Transactions on Automatic Control, 52(4) 681-686, 2007.
[22] N. Moshtagh, N. Michael, A. Jadbabaie, and K. Daniilidis.
Vision-based, distributed control laws for motion coordina-
tion of nonholonomic robots. Robotics, IEEE Transactions
on, 25(4):851–860, 2009.

[23] S. Motsch and E. Tadmor. Heterophilious dynamics
enhances consensus. SIAM review, 56(4):577–621, 2013.
[24] R. Olfati-Saber and R. M. Murray. Consensus problems
in networks of agents with switching topology and time-
delays. IEEE Transactions on Automatic Control, 49(9),
1520–1533, 2004. 2013.

[25] L. Pareschi and G. Toscani. Interacting multi-agent sys-
tems. Kinetic equations & Monte Carlo methods. Oxford
University Press, USA, 2013.

[26] B. Piccoli, F. Rossi and E. Tr´elat. Control to Flocking
of the Kinetic Cucker–Smale Model. SIAM Journal on
Mathematical Analysis, 47(6), 4685–4719, 2015.

[27] E. D. Sontag. Mathematical control theory, volume 6 of
Texts in Applied Mathematics. Springer-Verlag, New York,
second edition, 1998. Deterministic ﬁnite-dimensional
systems.

[28] T. Vicsek and A. Zafeiris. Collective motion. Physics

Reports, 517(3–4):71 – 140, 2012.

Fig. 3.
Sparse strategy (18) acting on [0, T ] with κ = 1/4
is enlighten in magenta. Two cases are considered: on the left
R = 1 and on the right R = 2, in both cases the control is able
to improve the alignment and compactness of the ﬂock.

REFERENCES

[1] G. Albi, M. Herty, and L. Pareschi. Kinetic description of
optimal control problems in consensus modeling. Comm.
Math. Sci., 13(6):1407–1429, 2015.

[2] G. Albi and L. Pareschi. Binary interaction algorithms
for the simulation of ﬂocking and swarming dynamics.
Multiscale Model. Simul., 11(1):1–29, 2013.

[3] G. Albi, L. Pareschi, and M. Zanella. Boltzmann type
control of opinion consensus through leaders. Phil. Trans.
A Math Phys. Eng. Sci., 13:372(2028), 2014.

[4] G. Albi, L. Pareschi, and M. Zanella. Uncertainty quan-
tiﬁcation in control problems for ﬂocking models. Math-
ematical problems in Engineering, 2015.

[5] M. Bongini, D. Kalise, and M. Fornasier. (Un)conditional
consensus emergence under perturbed and decentralized
feedback controls. NETCO 2014-New Trends in Optimal
Control. 2014.

[6] M. Bongini, M. Fornasier, F. Rossi, and F. Solombrino,
Mean-ﬁeld Pontryagin maximum principle, submitted,
(2015).

[7] M. Bongini and M. Fornasier, Sparse stabilization of
dynamical systems driven by attraction and avoidance
forces. Netw. Heterog. Media, 9 (2014), pp. 1–31.

[8] A. Borz`ı and S. Wongkaew. Modeling and control through
leadership of a reﬁned ﬂocking system. Math. Models
Methods Appl. Sci., 25, 255, 2015.

[9] E. Camacho and C. Bordons. Model predictive control.

Springer, USA, 2004.

[10] M. Caponigro, M. Fornasier, B. Piccoli, and E. Tr´elat.
Sparse stabilization and control of alignment models. sub-
mitted, 2012.

[11] J. A. Carrillo, M. Fornasier, G. Toscani, and F. Vecil.
Particle, kinetic, and hydrodynamic models of swarming.
In Mathematical modeling of collective behavior in socio-
economic and life sciences, Model. Simul. Sci. Eng. Tech-

