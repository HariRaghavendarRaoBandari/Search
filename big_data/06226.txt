6
1
0
2

 
r
a

 

M
0
2

 
 
]

M
D
.
s
c
[
 
 

1
v
6
2
2
6
0

.

3
0
6
1
:
v
i
X
r
a

On the complexity of the identiﬁable subgraph problem, revisited

University of Bonn, Institute of Computer Science, Friedrich-Ebert-Allee 144, D-53113 Bonn, Germany

Stefan Kratsch

kratsch@cs.uni-bonn.de

Martin Milaniˇc

University of Primorska, UP IAM, Muzejski trg 2, SI-6000 Koper, Slovenia

University of Primorska, UP FAMNIT, Glagoljaˇska 8, SI-6000 Koper, Slovenia

martin.milanic@upr.si

March 22, 2016

Abstract

A bipartite graph G = (L, R; E) with at least one edge is said to be identiﬁable if for every
vertex v ∈ L, the subgraph induced by its non-neighbors has a matching of cardinality |L| − 1.
An (cid:96)-subgraph of G is an induced subgraph of G obtained by deleting from it some vertices in
L together with all their neighbors. The Identifiable Subgraph problem is the problem of
determining whether a given bipartite graph contains an identiﬁable (cid:96)-subgraph.

We show that the Identifiable Subgraph problem is polynomially solvable, along with the
version of the problem in which the task is to delete as few vertices from L as possible together
with all their neighbors so that the resulting (cid:96)-subgraph is identiﬁable. We also complement a
known APX-hardness result for the complementary problem in which the task is to minimize the
number of remaining vertices in L, by showing that two parameterized variants of the problem
are W[1]-hard.

1

Introduction

A matching in a graph is a subset of pairwise disjoint edges. A bipartite graph G = (L, R; E) with
at least one edge is said to be identiﬁable if for every vertex in L, the subgraph of G induced by its
non-neighborhood has a matching of cardinality |L| − 1. Identiﬁable bipartite graphs were studied
in several papers [4–7]; the property arises in the context of low-rank matrix factorization and has
applications in data mining, signal processing, and computational biology. For further details on
applications of notions and problems discussed in this paper, we refer to [4, 5].

While the recognition problem for identiﬁable bipartite graphs is clearly polynomial using bipar-
tite matching algorithms, several natural algorithmic problems concerning identiﬁable graphs turn
out to be NP-complete (see [4, 5, 7]). In [4], three problems related to ﬁnding speciﬁc identiﬁable
subgraphs were introduced. To state these problems, we need to recall the notion of an (cid:96)-subgraph
of a bipartite graph (which appeared ﬁrst in [4] and, in a slightly modiﬁed form, which we will
adopt, in [7]). For a bipartite graph G = (L, R; E) and vertex sets X ⊆ L, Y ⊆ R, we denote by
G[X, Y ] the subgraph of G induced by X ∪ Y .

1

Deﬁnition 1. Let G = (L, R; E) be a bipartite graph. For a subset J ⊆ L, the (cid:96)-subgraph of G
induced by J is the subgraph G(J) = G[J, R \ N (L \ J)], where N (L \ J) denotes the set of all
vertices in R with a neighbor in L\ J. We say that a graph G(cid:48) is an (cid:96)-subgraph of G if there exists
a subset J ⊆ L such that G(cid:48) = G(J).

The following three problems are all related to ﬁnding identiﬁable (cid:96)-subgraphs of a given graph:

Identifiable Subgraph

Instance: A bipartite graph G = (L, R; E).
Question: Does G have an identiﬁable (cid:96)-subgraph?

Min-Identifiable Subgraph

Instance: A bipartite graph G = (L, R; E) and an integer k.
Question: Does G have an identiﬁable (cid:96)-subgraph induced by a set J with |J| ≤ k?

Max-Identifiable Subgraph

Instance: A bipartite graph G = (L, R; E) and an integer k.
Question: Does G have an identiﬁable (cid:96)-subgraph induced by a set J with |J| ≥ k?

In [4], the optimization version of the Min-Identifiable Subgraph problem was shown to be
APX-hard. In the same paper it was shown that all three problems are polynomially solvable for
trees, as well as for bipartite graphs G = (L, R; E) such that the maximum degree of vertices in
L is at most 2. In [7], restricted versions of the Identifiable Subgraph problem were studied,
parameterizing the instances according to the maximum degree ∆(R) of vertices in R. Formally:

k-bounded Identifiable Subgraph
Instance: A bipartite graph G = (L, R; E) with ∆(R) ≤ k.
Question: Does G have an identiﬁable (cid:96)-subgraph?

It was shown in [7] that the k-bounded Identifiable Subgraph problem for k ≥ 3 is as
hard as Identifiable Subgraph problem in general and that the 2-bounded Identifiable
Subgraph problem is solvable in linear time. The complexity of the Identifiable Subgraph
and Max-Identifiable Subgraph problems in general bipartite graphs was left open by previous
works.

In this paper, we establish the computational complexity of the Identifiable Subgraph and
Max-Identifiable Subgraph problems, showing that both problems are solvable in polynomial
time. The key idea to our approach is the observation that if the input graph G = (L, R; E) is not
identiﬁable, then one can compute in polynomial time a maximal subset K ⊆ L no vertex of which is
contained in any identiﬁable (cid:96)-subgraph of G. Such a set K is non-empty and can be safely deleted
from the graph together with all its neighbors, thus reducing the problem to a smaller graph. If the
algorithm ﬁnds an identiﬁable (cid:96)-subgraph of G, then it in fact ﬁnds an identiﬁable (cid:96)-subgraph of G
induced by a largest possible subset of L, thereby also solving the Max-Identifiable Subgraph
problem. The proof also shows that such a subgraph is unique.

2

In the second part of the paper, we complement the APX-hardness result for the optimization
version of the Min-Identifiable Subgraph problem from [4] by studying the problem from the
parameterized complexity point of view. We introduce two natural parameterized variants of the
Min-Identifiable Subgraph problem and prove that both are W[1]-hard, by giving parameter-
ized reductions from the well-known W[1]-hard Multicolored Clique(k) problem.

The paper is structured as follows. In Section 2, we give the necessary deﬁnitions. In Section 3,
we give a polynomial time algorithm that simultaneously solves the Identifiable Subgraph
and the Max-Identifiable Subgraph problems.
In Section 4, we study the NP-hard Min-
Identifiable Subgraph problem from the parameterized complexity point of view. Section 5
concludes the paper with some open questions.

2 Preliminaries

All graphs considered in this paper are ﬁnite, simple, and undirected. For a graph G, we denote
by V (G) the vertex set of G and by E(G) its edge set. A bipartite graph is a graph G = (V, E)
such that there exists a partition of V into two sets L and R such that L ∩ R = ∅ and E ⊆
{{(cid:96), r} ; (cid:96) ∈ L and r ∈ R}. In this paper, we will regard bipartite graphs as already bipartitioned,
that is, given together with a ﬁxed bipartition (L, R) of their vertex set, and hence use the notation
G = (L, R; E). For a graph G = (V, E) and a subset of vertices X ⊆ V , NG(X) denotes the
neighborhood of X, i.e., the set of all vertices in V \ X that have a neighbor in X. For a vertex
x ∈ V , we write NG(x) for NG({x}), and denote the degree of x with dG(x) = |NG(x)|. In NG(X),
NG(x), dG(x), we shall omit the subscript G if the graph is clear from the context. A clique in a
graph is a set of pairwise adjacent vertices.
A parameterized problem is a language Q ⊆ Σ∗ × N; the second component, k, of instances
(x, k) ∈ Σ∗ × N is called the parameter. A parameterized problem Q is ﬁxed-parameter tractable
(FPT) if there is a function f : N → N, a constant c, and an algorithm A that decides (x, k) ∈ Q
in time f (k)|x|c for all (x, k) ∈ Σ∗ × N. Let FPT denote the class of all ﬁxed-parameter tractable
parameterized problems. A parameterized reduction from Q ⊆ Σ∗×N to Q(cid:48) ⊆ Σ(cid:48)∗×N is a mapping
π : Σ∗ × N → Σ(cid:48)∗ × N such that there are functions g, h : N → N and a constant c with: (x, k) ∈ Q if
and only if π((x, k)) ∈ Q(cid:48), the parameter value k(cid:48) of (x(cid:48), k(cid:48)) = π((x, k)) is at most g(k), and π((x, k))
can be computed in time h(k)|x|c. It is well known that the existence of a parameterized reduction
from Q to Q(cid:48) and Q(cid:48) ∈ FPT imply that Q ∈ FPT as well, and that parameterized reducibility
is transitive. Accordingly, similarly to P vs. NP, there are hardness classes of problems that are
suspected not to be FPT. In particular, it is believed that FPT (cid:54)= W[1] and, under this assumption, a
parameterized reduction from any W[1]-hard problem rules out ﬁxed-parameter tractability. (Here
W[1]-hardness is with respect to parameterized reductions.)

For graph-theoretic deﬁnitions not given in the paper we refer to [2, 9], for further background

in matching theory to [8], and for background in parameterized complexity to [1, 3].

3 A polynomial time algorithm for the Identiﬁable Subgraph and

the Max-Identiﬁable Subgraph problems

In this section we give a polynomial time algorithm for the Identifiable Subgraph problem,
the problem of determining whether a given graph G = (L, R; E) has an identiﬁable (cid:96)-subgraph.

3

As a corollary of our approach we will also obtain a polynomial time algorithm for the Max-
Identifiable Subgraph problem.

The key ingredient for the algorithm is the following lemma.

Lemma 1. Let G = (L, R; E) be a non-identiﬁable bipartite graph with at least one edge and let
v ∈ L such that there is no matching of L\{v} into R\ N (v). Let K be an inclusion-wise minimal
subset of L\{v} that has no matching into R\ N (v). Such a set K is nonempty and always exists.
Moreover, no identiﬁable (cid:96)-subgraph of G contains a vertex of K.
Proof. Let K be a minimal subset of L \ {v} that has no matching into R \ N (v). By Hall’s
Theorem there must be a subset K(cid:48) ⊆ K with |N (K(cid:48)) ∩ (R \ N (v))| < |K(cid:48)|. Any such set K(cid:48) has
no matching into R\ N (v). Because K is a minimal set without a matching into R\ N (v) it follows
that |N (K)∩ (R\ N (v))| < |K|. Furthermore, every proper subset of K does have a matching into
R \ N (v).
Now, ﬁx an arbitrary set J ⊆ L such that the induced (cid:96)-subgraph G(cid:48) = G[J, R \ N (L \ J)] is
identiﬁable. We need to show that J ∩ K = ∅.
Assume for contradiction that K ∩ J (cid:54)= ∅. Let Kin = K ∩ J and Kout = K \ J. Because Kin (cid:54)= ∅
we have that Kout is a proper, possibly empty, subset of K. Hence, by the ﬁrst paragraph, we have
that |Kout| ≤ |N (Kout )∩ (R\ N (v))|. In the (cid:96)-subgraph GJ induced by J, by deﬁnition, none of the
neighbors of Kout are present. Thus, the vertices in Kin have at most those vertices as neighbors
that are adjacent to Kin but not to Kout . (Further vertices in L \ (J ∪ K) may imply that further
neighbors of Kin are not present, but this will not be important.) Thus, the number of neighbors
that Kin has in the vertices of R \ N (v) that are present in GJ is at most
|NGJ (K)| − |NGJ (Kout )| < |K| − |Kout| = |Kin|.

It follows immediately that Kin has no matching into R \ N (v) in GJ . If v ∈ J then testing the
identiﬁability condition for v would require such a matching. If v /∈ J then using that GJ must
have a matching of J into NGJ (J) means that we would need a matching of Kin into NGJ (Kin ) ⊆
R \ N (v). Thus, either way we get a contraction. This implies that J ∩ K = ∅, as claimed.

Given a graph G and vertex v as in Lemma 1 the set K can be found in a straightforward way by
folklore knowledge about bipartite matchings. We sketch a very simple algorithm by self-reduction
for completeness.
Lemma 2. Given a non-identiﬁable graph G = (L, R; E) and vertex v ∈ L such that there is no
matching of L \ {v} into R \ N (v), a minimal set K as in Lemma 1 can be found in polynomial
time.
Proof. Set K := L\{v} and repeat the following routine: Try each vertex w ∈ K and test whether
there is a matching of K \ {w} into R \ N (v). If there is then try the next vertex. If not then
update K := K \ {w} and repeat. Output the current set K if each K \ {w} has a matching of
K \ {w} into R \ N (v).
As an invariant, the set K never has a matching into R \ N (v). In particular, we can never
reach an empty set (and we can only reach a singleton vertex if it is isolated). Thus, the algorithm
must terminate with a nonempty set K such that each set K \ {w} has a matching into R \ N (v).
This also means that all smaller subsets of K have matchings into R \ N (v). Thus, K is a minimal
set with no matching into R \ N (v).

4

We know now that if G = (L, R; E) is not identiﬁable then we can eﬃciently ﬁnd a subset K ⊆ L
such that no vertex of K is contained in any identiﬁable (cid:96)-subgraph of G. We now prove formally
that we may safely delete K and N (K) from G while still retaining the same set of identiﬁable
(cid:96)-subgraphs.
Lemma 3. Let G = (L, R; E) a bipartite graph and let K ⊆ L. Every (cid:96)-subgraph of G that
contains no vertex of K is also an (cid:96)-subgraph of the (cid:96)-subgraph of G induced by L \ K, and vice
versa. Moreover, these (cid:96)-subgraphs are induced by the same sets J ⊆ L \ K.
Proof. Every (cid:96)-subgraph of a graph is deﬁned by the left part of its bipartition. We show that taking
the induced (cid:96)-subgraph for any J ⊆ L \ K gives the same graph from both G and G − N [K] =
G[L \ K, R \ N (K)]. Fix an arbitrary set J ⊆ L \ K.
Clearly, since J is a subset of the left part of the bipartition in both graphs, we get (cid:96)-subgraphs
of the form H1 = G[J, R1] and H2 = (G − N [K])[J, R2]. The latter is also an induced subgraph of
G so it simpliﬁes to H2 = G[J, R2]. It suﬃces to prove that R1 = R2.
By deﬁnition of (cid:96)-subgraph we have R1 = R \ NG(L \ J). Similarly, for the (cid:96)-subgraph of J in
G(cid:48) = G − NG[K] = G[L \ K, R \ NG(K)] we get

R2 = (R \ NG(K)) \ NG(cid:48)((L \ K) \ J) .

We can safely replace NG(cid:48)((L\ K)\ J) by NG((L\ K)\ J) because G(cid:48) is an induced subgraph of G
so the neighborhood is only aﬀected by restriction to R \ NG(K), the right part of the bipartition
of G(cid:48). Thus, in R2 we have the vertices of R that do not have a neighbor in K and that do not
have a neighbor in (L\ K)\ J. Because K and J are disjoint subsets of L this is the same as taking
out the neighbors of L \ J from R, i.e., taking R \ N (L \ J) = R1. Thus, both graphs are induced
subgraphs of G with left part J and right part R \ N (L \ J), so they are identical as claimed.

In particular, the lemma implies that if no identiﬁable (cid:96)-subgraph contains a vertex of a
nonempty set K ⊆ L then G and G− N [K] contain the same identiﬁable (cid:96)-subgraphs. Thus, when
seeking identiﬁable (cid:96)-subgraphs it is safe to eliminate N [K] for sets K obtained via Lemma 1.

Now we can put together the claimed polynomial time algorithm.

Theorem 4. The Identifiable Subgraph problem can be solved in polynomial time.
Proof. The algorithm works as follows. Given an input graph G = (L, R; E) it ﬁrst tests if E = ∅.
If E = ∅, then G is not identiﬁable and has no identiﬁable (cid:96)-subgraph; the algorithm reports
this fact and halts. If E (cid:54)= ∅, the algorithm proceeds iteratively. Identiﬁability can be eﬃciently
tested by |L| bipartite matching computations. If G is identiﬁable then graph G is output as an
identiﬁable (cid:96)-subgraph. If G is not identiﬁable then the algorithm picks an arbitrary v such that
there is no matching of L \ {v} into R \ N (v). By Lemma 1 there is a nonempty set K ⊆ L such
that no identiﬁable (cid:96)-subgraph of G contains a vertex of K; such a set can be found eﬃciently by
Lemma 2. Thus, if G has any identiﬁable (cid:96)-subgraph then every such subgraph must avoid K and,
hence, it is also an (cid:96)-subgraph of G− N [K] by Lemma 3. Conversely, G− N [K] contains no further
identiﬁable (cid:96)-subgraphs. The algorithm thus replaces G by G − N [K] and starts over. In case a
graph is output, Lemma 3 implies that the output graph is also an (cid:96)-subgraph of the initial graph
G.

In fact, it can be easily seen that the algorithm always returns a maximum identiﬁable (cid:96)-
subgraph and thus also solves the maximization variant of the problem, Max-Identifiable Sub-
graph, in polynomial time. (The proof also shows that this graph is unique.)

5

Corollary 5. The Max-Identifiable Subgraph problem can be solved in polynomial time.

Proof. Clearly, if the input graph is identiﬁable then returning it is optimal. If not then either
E = ∅ (in which case G has no identiﬁable (cid:96)-subgraph) or there is a vertex v such that L \ {v}
cannot be matched into R \ N (v) and, by Lemma 1 the algorithm ﬁnds a nonempty set K that is
avoided by all identiﬁable (cid:96)-subgraphs. Since G and G − N [K] have the same (cid:96)-subgraphs induced
by J ⊆ L \ K, in particular, any maximum identiﬁable (cid:96)-subgraph of G is also an identiﬁable (cid:96)-
subgraph of G− N [K]. Thus, continuing the iterative approach on G− N [K] will ﬁnd a maximum
solution, if one exists.

4 Parameterized complexity of Min-Identiﬁable Subgraph

In this section we study the parameterized complexity of the Min-Identifiable Subgraph prob-
lem, which was proved NP-hard in a previous work [4]. We consider the following parameterized
variants Min-Identifiable Subgraph(k) and Min-Identifiable Subgraph(|L| − k).

Min-Identifiable Subgraph(k)

Instance: A bipartite graph G = (L, R; E) and an integer k.
Parameter:
Question: Does G have an identiﬁable (cid:96)-subgraph induced by a set J with |J| ≤ k?

k.

Min-Identifiable Subgraph(|L| − k)

Instance: A bipartite graph G = (L, R; E) and an integer k.
Parameter:
Question: Does G have an identiﬁable (cid:96)-subgraph induced by a set J with |J| ≤ k?

|L| − k.

The two problems diﬀer only in the choice of parameter; the Min-Identifiable Subgraph(|L|−k)
problem can be reformulated as the problem of ﬁnding a set L0 ⊆ L of size at least k such that
G − N [L0] is identiﬁable. We show that both parameterizations are W[1]-hard, i.e., they are not
ﬁxed-parameter tractable unless FPT = W[1], which is deemed unlikely. For both problems we give
parameterized reductions from the well-known W[1]-hard Multicolored Clique(k) problem,
deﬁned as follows.

Multicolored Clique(k)

Instance: A graph G = (V, E), an integer k, and a function φ : V → {1, . . . , k}.
Parameter:
Question: Does G contain a clique C with φ(C) = {1, . . . , k}?

k.

Theorem 6. Min-Identifiable Subgraph(k) is W[1]-hard.

Proof. We give a parameterized reduction from Multicolored Clique(k) to Min-Identifiable
Subgraph(k). Let (G = (V, E), φ, k) be an instance of Multicolored Clique(k). Without loss
of generality assume that k ≥ 3 or else solve the instance in polynomial time (ﬁnding a clique

6

of size k ∈ {1, 2}). Let Vi := φ−1(i) for i ∈ {1, . . . , k}. We will construct a bipartite graph
G(cid:48) = (L, R; E(cid:48)) such that (G, k, φ) is yes for Multicolored Clique(k) if and only if (G(cid:48), k(cid:48)) is
yes for Min-Identifiable Subgraph(k).

Construction. We create an instance of Min-Identifiable Subgraph(k) with bipartite graph
G(cid:48) = (L, R; E(cid:48)) and parameter k(cid:48) = 2k. The set L consists of the vertices in V along with k special
vertices t1, . . . , tk. We now describe the set R along with the adjacencies between L and R:

• For each choice of 1 ≤ i < j ≤ k we create a set Eij of vertices, which is then added to R.

– For each edge {u, v} in G with u ∈ Vi and v ∈ Vj we add a vertex to Eij and make it
adjacent to u and v in G(cid:48). (We could also achieve this by starting with G, dropping the
(irrelevant) edges between vertices of the same set Vi, and then subdividing every edge.)
– Make the special vertex ti adjacent to all vertices of Eab with 1 ≤ a < b ≤ k and

i /∈ {a, b}.

• For each 1 ≤ i ≤ k create a set Fi of k · |Vi| vertices and add it to R.

– Make each vertex v ∈ Vi adjacent to k private vertices in Fi. No other vertices of V will

be adjacent to these vertices.

– Make each special vertex tj adjacent to all vertices of Fi with i (cid:54)= j.

This completes the construction of G(cid:48) = (L, R; E(cid:48)). It can be helpful to keep in mind that vertices
in Vi are only adjacent to (some) vertices in Fi or in Eab with i ∈ {a, b}, whereas each special vertex
ti is adjacent to all vertices in Fj with i (cid:54)= j and all vertices in Eab with i /∈ {a, b}. An example
construction is shown in Fig. 1.

Clearly, the construction can be performed in polynomial time. It remains to prove correctness,
that is, that G has a k-clique containing exactly one vertex of each set Vi if and only if (G(cid:48), k(cid:48)) is
a yes instance of Min-Identifiable Subgraph(k) for k(cid:48) = 2k.

Correctness. Assume ﬁrst that G contains a k-clique C with exactly one vertex from each
set Vi and let {vi} = C ∩ Vi. We claim that L(cid:48) = {v1, . . . , vk, t1, . . . , tk} induces an identiﬁable
(cid:96)-subgraph. Let R(cid:48) ⊆ R denote the vertices in R of the induced (cid:96)-subgraph, i.e., the vertices that
have no neighbor among L \ L(cid:48).
Let us ﬁrst check that there is a matching of L(cid:48) \ {ti} into R(cid:48) \ N (ti): The vertex ti is not
adjacent to Fi nor to sets Eab with i /∈ {a, b}. There are k vertices in Fi that are adjacent to
t1, . . . , ti−1, ti+1, . . . , tk as well as the vertex vi. These are contained in R(cid:48) since all their neighbors
are in L(cid:48). We can match the mentioned vertices of L(cid:48) to them. Because C is a clique there are edges
from vi to each other vertex of the clique; these give rise to vertices in E1i, . . . , Ei−1,i, Ei,i+1, . . . , Ei,k
corresponding to these edges that have no other neighbors in V ⊆ L (in G(cid:48)). Because ti is not
adjacent to such sets Eab all these vertices are present and each v1, . . . , vi−1, vi+1, . . . , vk can be
matched to the vertex representing its edge to vi.
Let us now check that there is a matching of L(cid:48) \{vi} into R(cid:48) \ N (vi): For each vj with j (cid:54)= i all
its neighbors in Fj are present since they have no other neighbor in V and all t1, . . . , tk are in the
(cid:96)-subgraph. Thus, each vj can be matched to such a neighbor. Because k ≥ 3 there are at least
two sets Fj and Fj(cid:48) with i /∈ {j, j(cid:48)} and a total of 2k − 2 vertices therein are not yet matched to.
Thus, all vertices t1, . . . , tk can be matched to these vertices. (E.g., all but tj to vertices of Fj and
tj to a vertex of Fj(cid:48).)

7

Figure 1: An example construction of the bipartite graph G(cid:48) = (L, R; E(cid:48)) from an input (G, k, φ)
to Multicolored Clique(k). In the example k = 3, vertices in L and R are colored black and
white, respectively, and a thick edge between vertex ti and a set Fj means that ti is adjacent to all
vertices in Fj.

(G(cid:48), 2k) is a yes instance of Min-Identifiable Subgraph(k).

Thus, the (cid:96)-subgraph induced by L(cid:48) is indeed identiﬁable. Since |L(cid:48)| = 2k this implies that
Now assume that (G(cid:48), 2k) is yes for Min-Identifiable Subgraph(k). Let L(cid:48) ⊆ L be a set
of size at most 2k such that the (cid:96)-subgraph of G(cid:48) induced by L(cid:48), namely G(cid:48)[L(cid:48), R(cid:48)] with R(cid:48) =
R\ N (L\ L(cid:48)), is identiﬁable. Our goal is to show that it includes all special vertices t1, . . . , tk along
with one vertex per set Vi and that the latter vertices form a k-clique in G.
We ﬁrst observe that L(cid:48) ∩ V (cid:54)= ∅ and L(cid:48) ∩ {t1, . . . , tk} (cid:54)= ∅ is required: Excluding either type of
vertex implies R(cid:48) = ∅ since each vertex in R is adjacent to at least one vertex of V and at least one
vertex ti.
Assume for contradiction that at least two special vertices, say ti and tj with i (cid:54)= j, are not in
L(cid:48). Thus, picking a third vertex t(cid:96) /∈ {ti, tj} we need a matching of L(cid:48) \ {ti, tk, t(cid:96)} into the vertices
of R that are not neighbors of (at least) ti, tj, and t(cid:96), but no such vertices exist: There is no Fa
with a = i and a = j and there is no Eab with i ∈ {a, b}, j ∈ {a, b}, (cid:96) ∈ {a, b}. Since we have at
least one vertex v ∈ L(cid:48) ∩ V we can observe that this vertex cannot be matched; a contradiction.
Now assume for contradiction that exactly one special vertex, say t1, is not contained in L(cid:48).
This requires a matching of L(cid:48) \ {t2} into R(cid:48) \ N (t2). Since both t1, t2 /∈ L(cid:48) \ {t2}, no vertex of a
set Eab may exist in R(cid:48) \ N (t2) except possibly for vertices of E12. Thus, no vertex of V3, . . . , Vk
may be in L(cid:48) since they would have no neighbors to match to. This in turn implies that no other
set Eab except for E12 has any vertices in R(cid:48). We complete the contradiction by considering the
requirement of a matching of L(cid:48) \ {t3} into R(cid:48) \ N (t3): Now, the vertices of E12 are not available
since they are adjacent to t3. Thus, there are no Eab vertices to match to. Similarly, absence of t1
and t3 eliminates all vertices of sets Fa. Since L(cid:48) \ {t3} must contain at least one vertex of V , we

8

V1V2V3GV1F2F3G0t3t2t1F1V2V3E12E23E13ﬁnd that such a vertex cannot be matched into R(cid:48) \ N (t3); a contradiction.
We now have the remaining case that {t1, . . . , tk} ⊆ L(cid:48). We also know already that at least one
vertex of V must be contained in L(cid:48), say V1∩L(cid:48) (cid:54)= ∅ and pick v1 ∈ V1∩L(cid:48). Assume for contradiction
that some set Vi with i (cid:54)= 1 has an empty intersection with L(cid:48). It follows that in R(cid:48) there are no
vertices of sets Eab with i ∈ {a, b} since each such vertex is adjacent to some vertex in Vi. We now
consider the requirement of a matching of L(cid:48) \ {ti} into R(cid:48) \ N (ti) to complete the contradiction:
This additionally ensures that there are no vertices of F1 left in R(cid:48) \ N (ti) as well as no vertices of
Eab with i (cid:54)∈ {a, b}, implying that there are no neighbors for v1 to match to; a contradiction.
Thus, we have {t1, . . . , tk} ⊆ L(cid:48) and L(cid:48) has a nonempty intersection with each set V1, . . . , Vk.
Because L(cid:48) has size at most 2k this directly implies that its size is exactly 2k and that it contains
exactly one vertex of each set Vi, say {vi} = L(cid:48) ∩ Vi. It remains to show that {v1, . . . , vk} is a
clique in G. Assume for contradiction that this is not the case, say that vi and vj for i (cid:54)= j are not
adjacent in G. Consider the requirement of a matching of L(cid:48) \ {ti} into R(cid:48) \ N (ti): Absence of ti
ensures that no vertex of Fj is present. Moreover, no vertices of Eab for i /∈ {a, b} are in R(cid:48) \ N (ti).
In particular, for vertex vj this only leaves vertices in Eij or Eji (depending on whether i < j or
i > j). Because vi and vj are not adjacent, however, and no other vertex of Vi is in L(cid:48), no such
vertices exist in R(cid:48) ⊇ R(cid:48) \ N (ti). Thus, vj cannot be matched; a contradiction.

It follows that the vertices v1, . . . , vk must indeed form a clique in G. This completes the

proof.

The above proof also shows that the problem of testing whether a given bipartite graph
G = (L, R; E) has an identiﬁable (cid:96)-subgraph induced by a set J ⊆ L with |J| = k is W[1]-hard
(with respect to parameter k).
Theorem 7. Min-Identifiable Subgraph(|L| − k) is W[1]-hard.
Proof. We give a parameterized reduction from Multicolored Clique(k) to Min-Identifiable
Subgraph(|L|− k). Let (G = (V, E), φ, k) be an instance of Multicolored Clique(k). W.l.o.g.,
assume k ≥ 3 or else solve the instance in polynomial time. Let n := |V | and let Vi := φ−1(i) for
i ∈ {1, . . . , k}. Assume w.l.o.g. that each set Vi contains at least two vertices (else we can restrict
the graph to the subgraph induced by the neighborhood of vi ∈ Vi and drop color i to get an
equivalent instance).
We will construct a bipartite graph G(cid:48) = (L, R; E(cid:48)) such that (G, k, φ) is yes for Multicolored
Clique(k) if and only if (G(cid:48), k(cid:48)) is yes for Min-Identifiable Subgraph(|L|− k) for k(cid:48) = |L|− k.
That is, (G, k, φ) should be yes if and only if the graph G(cid:48) contains an (cid:96)-identiﬁable subgraph
that is induced by a set L(cid:48) of size at most |L| − k. Note that (G(cid:48), k(cid:48)) has a parameter value of
|L| − k(cid:48) = |L| − (|L| − k) = k. Recall that we can equivalently ask for the existence of a set L0 ⊆ L
of size at least k such that G(cid:48) − N [L0] is identiﬁable since then L\ L0 is of size at most |L|− k and
can play the role of the requested set L(cid:48) (and conversely L \ L(cid:48) is a feasible choice for L0). Deﬁne
r := n + k; this value will be used in the construction.

Construction. The graph G(cid:48) = (L, R; E(cid:48)) is deﬁned as follows:
• The vertex set L consists of V as well as a set T of special vertices t1, . . . , tk.
• The set R contains for each vertex v ∈ V a set of k + 1 vertices pv,1, . . . , pv,k+1 whose only
neighbor in V will be v (so they are in a limited sense a private neighbors of v). Let Fi denote
the set of vertices pv,(cid:96) with v ∈ Vi for each i ∈ {1, . . . , k}. (The exact number of these vertices
per vertex v will be immaterial so long as they are at least k + 1.)

9

• The set R furthermore contains vertices derived from the edges of G. Let e = {vi, vj} be
any edge of G with vi ∈ Vi and vj ∈ Vj. Create r vertices qe,1, . . . , qe,r and add them to R.
Make each of them adjacent to all vertices of Vi \ {vi} and all vertices of Vj \ {vj}. Do this
for all edges for any 1 ≤ i < j ≤ k and let Eij contain the vertices qe,1, . . . , qe,r for edges e
between Vi and Vj in G. The set R is thus the union of sets Fa for 1 ≤ a ≤ k and sets Eab
for 1 ≤ a < b ≤ k. (Again, the exact value of r is not important so long as r ≥ n + k.)

• Make each vertex ti ∈ T ⊆ L adjacent to all vertices of each set Fa with 1 ≤ a ≤ k.

Furthermore, make each ti adjacent to all vertices of each set Eab with i /∈ {a, b}.

Deﬁne k(cid:48) = |L| − k and return the instance (G(cid:48), k(cid:48)). An example construction is shown in Fig. 2.

Figure 2: An example construction of the bipartite graph G(cid:48) = (L, R; E(cid:48)) from an input (G, k, φ)
to Multicolored Clique(k). In the example k = 3, vertices in L and R are colored black and
white, respectively, and an edge between vertex u ∈ L and a set S of vertices in R means that u is
adjacent to all vertices in S.

Clearly this construction can be performed in polynomial time and we already pointed out that
the parameter value of (G(cid:48), k(cid:48)) is equal to k. (Parameter value bounded by any function of k would
be enough for a parameterized reduction.) It remains to prove correctness, that is, that G has
a k-clique containing exactly one vertex of each set Vi if and only if (G(cid:48), k) is a yes instance of
Min-Identifiable Subgraph(|L| − k).

Correctness. Assume ﬁrst that (G, k, φ) is yes for Multicolored Clique(k). Thus, G contains
a clique C containing exactly one vertex of each set Vi. We claim that L(cid:48) := L \ C induces an
identiﬁable (cid:96)-subgraph in G(cid:48). The (cid:96)-subgraph induced by L(cid:48) is exactly G(cid:48)(cid:48) = G(cid:48)[L(cid:48), R(cid:48)] where
R(cid:48) = R \ N (L \ L(cid:48)) = R \ N (C). We need to show that G(cid:48) is identiﬁable.
Let us ﬁrst see that G(cid:48)(cid:48) has a matching of L(cid:48)\{w} into R(cid:48)\N (w) for any w ∈ V ∩L(cid:48). Fix any such
vertex w: Recall that in the construction we made for each vertex v ∈ V vertices pv,1, . . . , pv,k+1

10

V1V2V3G123456123456t1t2t3TVF1F2F3E12q{2,4},1,...,q{2,4},9p1,1,...,p1,4E13E23G0j(cid:48)(cid:0)Vj(cid:48) \ C(cid:1)∪{tj}, obtaining

argument for all j(cid:48) ∈ {1, . . . , k}\{i, j} we can also match vertices in(cid:83)

such that v is their only neighbor in V . For each vertex v ∈ V \ (L(cid:48) ∪ {w}) all these vertices pv,(cid:96)
exist in R(cid:48) \ N (w) = R\ N (C ∪{w}) since C ∪{w} ⊆ V so we can match each v to pv,1. Moreover,
for any v ∈ L(cid:48) \ {w} we can match all k vertices of T to pv,2, . . . , pv,k+1. (Here we tacitly assume
that G has more than k + 1 vertices, which is w.l.o.g.) This completes the required matching.
Let us now exhibit a matching in G(cid:48)(cid:48) of L(cid:48) \ {ti} into R(cid:48)(cid:48) = R(cid:48) \ N (ti) for any ti ∈ T ⊆ L(cid:48):
Note that R(cid:48)(cid:48) in particular does not contain vertices of sets Fa for 1 ≤ a ≤ k nor vertices of Eab
for i /∈ {a, b} since all those are adjacent to ti in G(cid:48) (so they are also adjacent to ti in G(cid:48)(cid:48)). It
remains to use vertices of Eab with i ∈ {a, b}, recalling that many of them are not present already
in R(cid:48) = R\ N (C). Fix j (cid:54)= i. Let {vi} := C ∩ Vi and {vj} := C ∩ Vj. Since C is a clique, vertices vi
and vj are adjacent in G. For the corresponding edge e = {vi, vj} we created vertices qe,1, . . . , qe,r
in Eij ⊆ R (or Eji if j < i). Each qe,l is adjacent to all of Vi \ {vi} and Vj \ {vj} but not to vi or
vj; they are not adjacent to any vertex of V \ (Vi ∪ Vj). Thus, all of these vertices are present in
R(cid:48) and hence also in R(cid:48)(cid:48) = R(cid:48) \ N (ti). We can therefore match all vertices of Vi \ {vi}, Vj \ {vj},
and T \ {ti, tj} to them since these are in total less than r = n + k vertices. By repeating the
a matching for all of L(cid:48) \ {ti} = L \ (C ∪ {ti}). (Here we need that k ≥ 3 so that we can match tj.)
It follows that the (cid:96)-subgraph induced by L(cid:48) is indeed identiﬁable. Since |L(cid:48)| ≤ |L|− k it follows
that (G(cid:48), k(cid:48)) is yes for Min-Identifiable Subgraph(|L| − k).
Assume now that (G(cid:48), k(cid:48)) is yes for Min-Identifiable Subgraph(|L| − k) and let L(cid:48) be a
subset of L of size at most k(cid:48) = |L| − k such that the (cid:96)-subgraph induced by L(cid:48), namely G(cid:48)(cid:48) :=
G(cid:48) − N [L(cid:48)] = G(cid:48)[L(cid:48), R(cid:48)] where R(cid:48) = R \ N (L \ L(cid:48)), is identiﬁable. Let C := L \ L(cid:48). This is a set
of size at least k. We will show that C is a subset of k vertices of V that form a clique in G with
|C ∩ Vi| = 1 for 1 ≤ i ≤ k. Note that R(cid:48) = R \ N (C).
We begin with some observations: If V ⊆ C then R(cid:48) = ∅ because each vertex of R is adjacent
to at least one vertex of V . In this case, G(cid:48)(cid:48) could not be identiﬁable since that requires having at
least one edge. Thus, V \ C (cid:54)= ∅ and we pick an arbitrary vertex v0 ∈ V \ C ⊆ L(cid:48) to be used later.
Similarly, if T ⊆ C then again R(cid:48) = ∅ and G(cid:48)[L(cid:48), R(cid:48)] cannot be identiﬁable. We pick t0 ∈ T \ C to
be used later. (Note that t0 = ti for some 1 ≤ i ≤ k.)
We will now prove several restrictions on C by contradiction-based arguments. The ﬁrst two
aim at proving that T ∩ C = ∅.
Assume for contradiction that |T ∩ C| ≥ 2. Thus, G(cid:48)(cid:48) being identiﬁable implies that there must
be a matching of L(cid:48) \ {t0} to R(cid:48) \ N (t0). Say ti, tj ∈ T ∩ C with i (cid:54)= j, then R(cid:48) \ N (t0) contains
no vertices of R that are adjacent to any of t0, ti, or tj. This is a contradiction since every vertex
of R is adjacent to at least one of them: Vertices in any Fa are adjacent to each vertex of T and
vertices in any Eab are only not adjacent to two vertices of T , namely ta and tb. Thus, |T ∩ C| ≤ 1.
Assume for contradiction that |T ∩ C| = 1 and assume w.l.o.g. that {t1} = T ∩ C. Because G(cid:48)(cid:48)
is identiﬁable there must be a matching of L(cid:48) \ {t2} into R(cid:48) \ N (t2) in G(cid:48)(cid:48). Note that in R(cid:48) \ N (t2)
there is no vertex of any set Fa. Similarly, vertices of Eab are not in R(cid:48) \ N (t2) unless 1 ∈ {a, b}
and 2 ∈ {a, b} since otherwise they are adjacent to at least one of t1 or t2. This in turn implies
that L(cid:48) contains no vertices from Va for a /∈ {1, 2} since they have no neighbors in R(cid:48) \ N (t2).
Consequently, even R(cid:48) ⊇ R(cid:48) \ N (t2) contains no vertex of any set Eab with (a, b) (cid:54)= (1, 2) because
the vertices of other sets Eab are all adjacent to some vertex of V \ (V1 ∪ V2) ⊆ L \ L(cid:48) = C. Now,
consider the requirement of a matching of L(cid:48) \ {t3} into R(cid:48) \ N (t3) in G(cid:48)(cid:48). We now get that there
are no vertices of sets Fa nor of sets Eab. The latter holds because in R(cid:48) only vertices of E12 can
exist but all those are adjacent to t3 and hence not in R(cid:48) \ N (t3). Thus, R(cid:48) \ N (t3) is empty and

11

we cannot match the vertex v0 anywhere; a contradiction.
We now know that C ∩ T = ∅. Assume that C contains at least two vertices of the same set
Vi, i.e., that |C ∩ Vi| ≥ 2. Let vi, v(cid:48)i ∈ C ∩ Vi with vi (cid:54)= v(cid:48)i. Crucially, for any 1 ≤ a < b ≤ k with
i ∈ {a, b}, all vertices in Eab are adjacent to at least one of vi and v(cid:48)i, by construction: A vertex qe,l
for e = {p, q} with p ∈ Vi and q ∈ Vj is adjacent to all vertices of Vi \ {p}. Because only one of vi
and v(cid:48)i can be equal to p it follows that qe,l is adjacent to at least one of the two. Thus, no vertex
of Ea,b is present in R(cid:48) ⊆ R \ N ({vi, v(cid:48)i}) for a and b with i ∈ {a, b}.
Now, because G(cid:48)(cid:48) must be identiﬁable there must be a matching of L(cid:48)\{ti} into R(cid:48)(cid:48) = R(cid:48)\ N (ti).
There are no vertices of any set Fa in R(cid:48)(cid:48) because all of them are adjacent to ti. For the same
reason there are no vertices of sets Eab when i /∈ {a, b}. From above we know that for Eab with
i ∈ {a, b} no such vertices are present in R(cid:48) ⊇ R(cid:48)(cid:48). Thus, vertex v0 ∈ V \C ⊆ L(cid:48) cannot be matched;
a contradiction.

At this point we know that C contains no vertices of T and at most one vertex of each set Vi.
Because the size of C is at least k this implies that C contains exactly one vertex of each set Vi
and no further vertices (it is of size exactly k). Let {vi} = C ∩ Vi for 1 ≤ i ≤ k. It remains to show
that the vertices v1, . . . , vk form a clique in G.
Assume for contradiction that vi ∈ Vi and vj ∈ Vj are not adjacent in G for some i (cid:54)= j;
w.l.o.g. i < j. Again the construction of the edge-related vertices qe,l is important here: Consider
any edge e = {v(cid:48)i, v(cid:48)j} with v(cid:48)i ∈ Vi and v(cid:48)j ∈ Vj. s(Here we also tacitly assume that there is such
an edge, which is w.l.o.g. as otherwise (G, k, φ) is a no instance to Multicolored Clique(k).)
Because there is no edge between vi and vj, we must have v(cid:48)i (cid:54)= vi or v(cid:48)j (cid:54)= vj (or both). This directly
implies that each vertex qe,l ∈ Eij is adjacent to vi or vj (or both) because it is adjacent to all of
Vi \ {v(cid:48)i} and all of Vj \ {v(cid:48)j}. It follows that there are no vertices of Eij in R(cid:48) ⊆ R \ N ({vi, vj}).
Because G(cid:48)(cid:48) is identiﬁable there must be a matching of L(cid:48) \ {ti} into R(cid:48) \ N (ti). In the latter
set there are no vertices of any set Fa because they are subsets of N (ti) and similarly no vertices of
Eab if i /∈ {a, b}. Consider any vertex v(cid:48)(cid:48)j ∈ Vj \ {vj} ⊆ L(cid:48) (using that C ∩ Vj = {vj} and |Vj| ≥ 2):
Its neighbors in G(cid:48) are in Fj and in sets Eab with j ∈ {a, b}. This leaves only the set Eij since we
need i ∈ {a, b} and j ∈ {a, b} or else none of the vertices are in R(cid:48), but we already know that no
vertices of Eij are in R(cid:48) ⊇ R(cid:48) \ N (tj); a contradiction.

It follows that the vertices of C form a clique in G, with exactly one vertex from each set Vi;

this proves that (G, k, φ) is yes for Multicolored Clique(k) and completes the proof.

5 Concluding remarks

In this paper, we showed that the Identifiable Subgraph and the Max-Identifiable Sub-
graph problems are polynomially solvable and that two natural parameterized variants of the
Min-Identifiable Subgraph problem are W[1]-hard. Regarding approximation issues, the
Min-Identifiable Subgraph problem was shown to be APX-hard [4], however,
its exact
(in)approximability status remains an open question.

In [4], two other NP-hard problems related to identiﬁability were studied: ﬁnding the minimum
number of edges that one must delete from a given identiﬁable graph to destroy identiﬁability
and ﬁnding the smallest size of a set R(cid:48) ⊆ R such that the graph G[L, R(cid:48)] is identiﬁable. The
hardness proof for the former problem shows that the problem is also W[1]-hard with respect to its
natural parameterization. More precisely, one can combine the NP-hardness proof from [4] and the
proof of the NP-hardness of the problem from which that reduction was made (ﬁnding the minimum

12

number of edges that one must delete from a given bipartite graph in order to decrease its matching
number) [10, Theorems 3.2 and 3.3 and their proofs] to obtain a parameter-preserving reduction
from the parameterized clique problem, with respect to its natural parameterization, which is W[1]-
hard. We leave for future research the determination of the parameterized complexity status of the
latter problem, as well as the (in)approximability status of both problems.

Acknowledgements

This work was supported in part by the Slovenian Research Agency (I0-0035, research program
P1-0285 and research projects N1-0032, J1-5433, J1-6720, J1-6743, and J1-7051). Part of this
research was carried out during the visit of M.M. to S.K. at University of Bonn; their hospitality
and support is gratefully acknowledged.

References

[1] M. Cygan, F. V. Fomin, (cid:32)L. Kowalik, D. Lokshtanov, D. Marx, M. Pilipczuk, M. Pilipczuk,

and S. Saurabh. Parameterized Algorithms. Springer, Cham, 2015.

[2] R. Diestel. Graph Theory, volume 173 of Graduate Texts in Mathematics. Springer, Heidelberg,

fourth edition, 2010.

[3] R. G. Downey and M. R. Fellows. Fundamentals of Parameterized Complexity. Texts in

Computer Science. Springer, 2013.

[4] E. Fritzilas, M. Milaniˇc, J. Monnot, and Y. A. Rios-Solis. Resilience and optimization of

identiﬁable bipartite graphs. Discrete Appl. Math., 161(4-5):593–603, 2013.

[5] E. Fritzilas, M. Milaniˇc, S. Rahmann, and Y. A. Rios-Solis. Structural identiﬁability in low-

rank matrix factorization. Algorithmica, 56(3):313–332, 2010.

[6] E. Fritzilas, Y. A. Rios-Solis, and S. Rahmann. Structural identiﬁability in low-rank matrix
factorization. In Computing and combinatorics, volume 5092 of Lecture Notes in Comput. Sci.,
pages 140–148. Springer, Berlin, 2008.

[7] M. Kami´nski and M. Milaniˇc. On the complexity of the identiﬁable subgraph problem. Discrete

Appl. Math., 182:25–33, 2015.

[8] L. Lov´asz and M. D. Plummer. Matching Theory, volume 121 of North-Holland Mathematics
Studies. North-Holland Publishing Co., Amsterdam; Akad´emiai Kiad´o (Publishing House of
the Hungarian Academy of Sciences), Budapest, 1986. Annals of Discrete Mathematics, 29.

[9] D. B. West. Introduction to Graph Theory. Prentice Hall, Inc., Upper Saddle River, NJ, 1996.

[10] R. Zenklusen, B. Ries, C. Picouleau, D. de Werra, M.-C. Costa, and C. Bentz. Blockers and

transversals. Discrete Math., 309(13):4306–4314, 2009.

13

