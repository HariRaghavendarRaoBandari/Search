6
1
0
2

 
r
a

 

M
6
1

 
 
]

.

C
O
h
t
a
m

[
 
 

1
v
5
0
2
5
0

.

3
0
6
1
:
v
i
X
r
a

Fast Reachable Set Approximations via State Decoupling Disturbances

Mo Chen*, Sylvia Herbert*, and Claire J. Tomlin

Abstract— With the recent surge of interest in using robotics
and automation for civil purposes, providing safety and perfor-
mance guarantees has become extremely important. In the past,
differential games have been successfully used for the analysis
of safe-critical systems. In particular, the Hamilton-Jacobi (HJ)
formulation of differential games provides a ﬂexible way to
compute the reachable set, which can characterize the set of
states which lead to either desirable or undesirable conﬁgu-
rations, depending on the application. While HJ reachability
in theory is applicable to many small practical systems, the
curse of dimensionality prevents the direct application of HJ
reachability to many larger systems. To address computation
complexity issues, various efﬁcient computation methods in the
literature have been developed for approximating or exactly
computing the solution to HJ partial differential equations, but
only when the system dynamics are of speciﬁc forms. In this
paper, we propose a ﬂexible method to trade off optimality
with computation complexity in HJ reachability analysis. To
achieve this, we propose to simplify system dynamics by treating
state variables as disturbances. We prove that the resulting
approximation is conservative in the desired direction, and
demonstrate our method using a 4D plane model.

I. INTRODUCTION

Optimal control problems and differential games are im-
portant and powerful theoretical tools for analyzing a wide
variety of systems, especially ones which are safety-critical.
They have been extensively studied in the past several
decades [1], [2], [3], [4], [5], [6], [7], and have been
successfully applied to practical problems such as pairwise
collision avoidance [5], aircraft in-ﬂight refueling [8], vehicle
platooning [9], and many others [10], [11]. With the recent
growing interest in using safety-critical autonomous systems
such as autonomous cars and unmanned aerial vehicles
(UAVs) for civil purposes [12], [13], [14], [15], [16], the
importance and necessity of having ﬂexible tools that can
provide safety guarantees have substantially increased.

Intuitively, in an optimal control problem, one seeks to
ﬁnd the cheapest way a system described by an ordinary
differential equation (ODE) model can perform a certain
task. In a differential game, a system is controlled by
two adversarial agents competing to respectively minimize
and maximize a joint cost function. Hamilton-Jacobi (HJ)
reachability is a common and effective way to analyze both
optimal control problems and differential games because of

This work has been supported in part by NSF under CPS:ActionWebs
(CNS-931843), by ONR under the HUNT (N0014-08-0696) and SMARTS
(N00014-09-1-1051) MURIs and by grant N00014-12-1-0609, by AFOSR
under the CHASE MURI (FA9550-10-1-0567). The research of M. Chen
has received funding from the “NSERC PGS-D” Program.

* Both authors contributed equally to this work. All authors are with the
Department of Electrical Engineering and Computer Sciences, University of
California, Berkeley. {mochen72, sylvia.herbert, tomlin}@berkeley.edu

the guarantees that it provides and its ﬂexibility with respect
to the system dynamics.

In a reachability problem, one is given some system
dynamics described by an ODE, and a target set which
describes the set of ﬁnal conditions under consideration.
Depending on the application, the target set can represent
either a set of desired or undesired states. The goal
in
reachability analysis is to compute the backwards reachable
set. When the target set
the
backwards reachable set represents the set of states from
which the system can be guaranteed to be driven to the target
set, despite the worst case disturbances. In contrast, when the
target set is a set of undesired states, the backwards reachable
set represents the set of states from which the system may
be driven into the target set under some disturbance, despite
its best control efforts to prevent this from happening.

is a set of desired states,

Because of the theoretical guarantees that reachability
analysis provides, it is ideal for analyzing the newest prob-
lems involving autonomous systems. However, in order to
compute the backwards reachable set, an HJ partial differ-
ential equation (PDE) must be solved on a grid representing
a discretization of the state space. This means that
the
complexity of computing a backwards reachable set grows
exponentially with the number of system states, making the
standard HJ reachability formulation intractable for systems
with higher than approximately ﬁve dimensions.

To address this difﬁculty, a number of approximation
techniques have been developed, such as those involving pro-
jections, approximate dynamic programming, and occupation
measure theory [17], [18], [19]. When the system dynamics
satisfy certain assumptions, a small number of algorithms
can perform computations in a space with fewer dimensions
than the full state space, substantially improving computation
efﬁciency without sacriﬁcing optimality [20], [21] .

In this paper, we propose a method to remove coupling in
systems by treating coupling variables as disturbances. This
uncoupling of dynamics transforms the system into a form
that is suitable for analysis using methods such as [20] and
[21], which exploit system structure. We show that our ap-
proach results in reachable sets which are conservative in the
desired direction – either under- or over-approximations, and
demonstrate the performance of our method when combined
with the decoupled formulation in [21].

II. PROBLEM FORMULATION

Consider a differential game between two players de-
scribed by the time-invariant system with state z ∈ Rn
evolving according to the ordinary differential equation

˙z = f (z, u, d)
t ∈ [−T, 0]
u ∈ U
d ∈ D

(1)

where u is the control of Player 1, and d is the control of
Player 2. For many applications, u and d are regarded as the
control and disturbance, respectively, of a system described
by (1). We assume f : Rn × U × D → Rn is uniformly
continuous, bounded, and Lipschitz continuous in z for ﬁxed
u, d, and the control functions u(·) ∈ U, d(·) ∈ D are drawn
from the set of measurable functions1. As in [1], [2], [5],
we allow Player 2 to only use nonanticipative strategies γ,
deﬁned by

γ ∈ Γ := {N : U → D |

u(r) = ˆu(r) a. e. r ∈ [t, s]
⇒ N [u](r) = N [ˆu](r) a. e. r ∈ [t, s]}

(2)

Suppose that

the state can be written as z = (x, y)
such that the control u and disturbance d can be written
as u = (ux, uy), d = (dx, dy), and such a decomposition of
the control leads to the following form of system dynamics:

˙x = g(x, y, ux, dx)
˙y = h(x, y, uy, dy)
t ∈ [−T, 0]

ux ∈ Ux, uy ∈ Uy
dx ∈ Dx, dy ∈ Dy

(3)

where x ∈ Rnx, y ∈ Rny , nx + ny = n, and g, h are the
system dynamics in the x and y components. Note that this
assumption on u and d is a mild one, and is satisﬁed by any
system in which the each of the control components ux, uy
and disturbance components dx, dy has independent control
sets Ux,Uy and disturbance sets Dx,Dy, respectively; note
that we can also write U = Ux × Uy, and D = Dx × Dy.
This decomposition is very common in real world systems,
where control input bounds such as maximum acceleration
and maximum turn rate are independent of each other.
For the system in the form of (3), we would like to
compute the backwards reachable set (BRS) V(T ) of time
horizon T . Intuitively, V(T ) is the set of states from which
there exists a control strategy to drive the system into a
corresponding target set L within a duration of T . Formally,
the reachable set is deﬁned as

V(t) ={z0 ∈ Rn : ∃γ ∈ Γ,∀u(·) ∈ U,

(3), z(−T ) = z0 ⇒ ∃s ∈ [−T, 0], z(s) ∈ L}

(4)

Standard HJ formulations exist for computing the BRS
in the full dimensionality n [3], [5], [6], [7]. In addition,
1A function f : X → Y between two measurable spaces (X, ΣX ) and
(Y, ΣY ) is said to be measurable if the preimage of a measurable set in
Y is a measurable set in X, that is: ∀V ∈ ΣY , f−1(V ) ∈ ΣX, with
ΣX , ΣY σ-algebras on X,Y .

special HJ formulations can be used to substantially reduce
computation complexity for systems with special properties
such as having terminal integrators or having fully decoupled
dynamics [20], [21]. The goal of this paper will be to
demonstrate how to take advantage of previous work on
BRS computation for systems of particular forms, even when
the actual system dynamics do not exactly satisfy necessary
assumptions. For concreteness, in this paper we will focus
on removing coupling to put systems into a fully decoupled
form that satisﬁes the assumptions in [21].

Our proposed approach computes an approximation of the
BRS in dimension max(nx, ny) instead of in dimension
n, dramatically reducing computation complexity. This is
done by removing coupling in the dynamics by treating cer-
tain variables as disturbances. The computed approximation
can be chosen to be an over-approximation or an under-
approximation of the true BRS.

III. SUMMARY OF FULL AND DECOUPLED HJ

FORMULATIONS

Given the system in (1), the BRS V(t) deﬁned in (4) can

be computed using the following terminal value HJ PDE:

DtV (t, z) + min{0, max

d∈D DzV (t, z) · f (z, u, d)]} = 0

u∈U min

V (0, z) = l(z)

(5)
In (5), the target set L is represented as the sub-zero level
set of the function l(z): L = {z ∈ Rn : l(z) ≤ 0}. The
BRS V(T ) is represented as the viscosity solution of (5)
V (t, z): V(t) = {z ∈ Rn : V (t, z) ≤ 0} [5], [22]. The
deﬁnition given in (4) assumes that the control u tries to
restrict the BRS from expanding as much as possible, and
the disturbance d tries to do the opposite. Similar deﬁnitions
of the BRS, for example one in which the control tries to
maximize its growth, can be computed by adjusting the inner
minimum and maximum. For simplicity, we will assume that
the BRS is deﬁned by (4), and thus determined by solving
V (t, z) given in (5). The computation complexity of solving
(5) is O(knT ), where k is the number of grid points used
in each dimension in the state space discretization and T is
the length of the time horizon.

In the case that the system is fully decoupled, [21] pro-
vides a method to exactly compute V (t, z). The computation
is done in each of the decoupled components, substantially
reducing computation complexity as long as the system is
decoupled. A system (1) is a decoupled system if it can
be split into N components, denoted {xi}N
i=1 where z =
(x1, . . . , xN ), xi ∈ Rni. Each component satisﬁes

˙xi = fi(xi, ui, di)

t ∈ [−T, 0]
ui ∈ Ui
di ∈ Di
i = 1, . . . , N

(6)

For a system in the form of (6), the HJ PDE (5) can
be solved in each decoupled component in the following
manner:

V (t, z) = max

i

V (t, z) = max

i

Vi(¯t(z), xi) ∀z ∈ F1(t)
∀z ∈ F2(t)
Vi(t, xi)

(7)

where Vi(t, xi), i = 1 . . . , N are the viscosity solutions to

DtVi(t, xi) + max
ui∈Ui

min
di∈Di

DxiVi(t, xi) · fi(xi, ui, di) = 0

F1(t) and F2(t) and given by
F1(t) = {z ∈ Rn | max
F2(t) = {z ∈ Rn | max

u∈U min
u∈U min
and ¯t(z) = inf τ >t{z ∈ F1(τ )}

Vi(0, xi) = li(xi),

(8)

d∈D DzV (t, z) · f (z, u, d) > 0}
d∈D DzV (t, z) · f (z, u, d) ≤ 0},
(9)

With the decoupled formulation, the computation com-
plexity of computing the BRS for a system of the form (6)
is O(kmaxi niT ). This substantial complexity reduction from
the O(knT ) complexity of the full formulation also does not
affect the optimality of the solution.

IV. COUPLING AS DISTURBANCE

The decoupled formulation summarized in Section III
enables the exact computation of n dimensional BRSs in
the space of the ni dimensional decoupled components.
However, this substantial computation beneﬁt can only be
gained if the system dynamics satisﬁes (6).

In the case where the dynamics are in the form of (3), the
decoupled formulation cannot be directly used. However, if
one treats y as a disturbance in the function g, and x as
a disturbance in the function h, the system would become
decoupled. Mathematically, (3) becomes the following:

x1 = x
x2 = y
u1 = ux
u2 = uy
d1 = (yd, dx)
d2 = (xd, dy)

(11)

This allows us to perform computation on the approximate
dynamics (10) using the decoupled HJ formulation (7), (8),
and (9), trading computation complexity for optimality.

Compared to the origin system dynamics given in (3),
the uncoupled dynamics given in (10) experiences a larger
disturbance, since the y dependence of the function g and the
x dependence on the function h are treated as disturbance.
With the deﬁnition of BRS in (4) the approximate BRS
computed using the dynamics (10) is an over-approximation
of the true BRS. We formalize this in the proposition below.
set be represented by
the implicit surface function l(x, y), where l(x, y) =
max{lx(x), ly(y)} for some lx, ly that represent the x and
y components of the target set. Let V (t, x, y) denote the
viscosity solution to (5) with state z = (x, y), target set
l(x, y), and dynamics f = [g h]T given in (3).

Proposition 1: Let

the target

Let ˆV (t, x, y) denote the value function computed using
the decoupled formulation in (7), (8), and (9), with state
z = (x, y), target set l(x, y), and dynamics f = [g h]T
given in (10). Then, ˆV (t, x, y) ≤ V (t, x, y) ∀t ∈ [−T, 0], x ∈
X , y ∈ Y.

Proof: Observe that (10) is a decoupled system, so by
the results of [21], ˆV (t, x, y) is also the viscosity solution to
(5) with state z = (x, y) and dynamics ˆf = [ˆg
ˆh]T given
in (10). It remains, then, to compare f and ˆf.

Rearranging (5) and writing z = (x, y), we have, with

dynamics f given in (3)

DtV (t, x, y) = −H(x, y, D(x,y)V (t, x, y))

V (0, x, y) = l(x, y)
H(x, y, p) = min{0, max

u∈U min
where u = (ux, uy) and d = (dx, dy).

d∈D p · f (x, y, u, d)}

With the dynamics ˆf given in (10), we instead have
Dt ˆV (t, x, y) = − ˆH(x, y, D(x,y)

ˆV (t, x, y))

(12)

˙x = ˆg(x, yd, ux, dx)
˙y = ˆh(y, xd, uy, dy)
t ∈ [−T, 0]
xd ∈ X , yd ∈ Y
ux ∈ Ux, uy ∈ Uy
dx ∈ Dx, dy ∈ Dy

V (0, x, y) = l(x, y)
ˆH(x, y, p) = min{0, max

u∈U min
ˆd∈ ˆD

p · ˆf (x, y, u, ˆd)}

(13)

(10)

where u = (ux, uy), ˆd = (xd, yd, dx, dy) = (xd, yd, d), and
ˆD = D × X × Y.

The only difference between (12) and (13) is the Hamilto-
nians H and ˆH. Rewriting the Hamiltonian in (13) to show
(xd, yd) explicitly, we have

ˆH(x, y, D(x,y)

ˆV (t, x, y)) =

min

0, max

u∈U min

d∈D min

ˆV (t, x, y) · ˆf (x, y, u, d, (xd, yd))(cid:9)(cid:111)

xd∈X ,yd∈Y

D(x,y)

(14)

where X ,Y represent the domain over which computation
is done. By treating the coupled variables as a disturbance,
we have uncoupled the original system dynamics (3), and
produced an approximate dynamics (10) that is decoupled.
More concretely, (3) becomes in the form of (10) if we make
the substitutions

(cid:110)

(cid:8)

Notice that if xd = x, yd = y, then

A. Examples of Decoupling System Dynamics

H(x, y, D(x,y)V (t, x, y)) = ˆH(x, y, D(x,y)

ˆV (t, x, y)).

However, since the expression for ˆH involves minimizing
over (xd, yd), we have that ˆH(x, y, p) ≤ H(x, y, p) ∀x, y, p.
Therefore, from (13) and (12), we have DtV (t, x, y) ≤
Dt ˆV (t, x, y). Since we have that V (0, x, y) = ˆV (0, x, y) =
l(x, y), we must have ˆV (t, x, y) ≤ V (t, x, y) ∀t ∈ [−T, 0].

By treating the coupled states as disturbance, the compu-
tation complexity reduces from O(knT ) for the full formu-
lation to O(kmax{nx,ny}T ) for the decoupled approximate
system (10).

V. DISTURBANCE SPLITTING

By treating coupling variables y and x as disturbances
in g and h, respectively, we introduce conservatism in the
BRS computation. This conservatism is always an over-
or under-approximation depending on the desired direction
of conservatism. In situations where X and Y are large,
the degree of conservatism can be reduced by splitting the
disturbance xd and yd into multiple sections, as long as the
target set L does not depend on the state variables being
split. For example, xd ∈ X can be split as follows:

d ∈ Xi, i = 1, 2, . . . , M
xi
Xi = X

M(cid:91)

where

i=1

(15)

˙x = g(x, yd, ux, dx)
˙y = h(y, xi
d, uy, dy)
t ∈ [−T, 0]
d ∈ X i, yd ∈ Y
xi
ux ∈ Ux, uy ∈ Uy
dx ∈ Dx, dy ∈ Dy
i = 1, 2, . . . , Mx

(16)

from which a backwards reachable set can be computed in
X i × Y. Since X i ⊆ X , the degree of conservatism of
the reachable set is reduced whenever the disturbance is
split into My, for a total of M = MxMy total “pieces”
of uncoupling disturbances. In addition,
the uncoupling
disturbance yd can also be split, further reducing conser-
vatism. This reduction in the conservatism comes at a slight
computation cost: the computation complexity in this case
becomes O(kmax{nx,ny}T M ). This is still much preferable
to the O(knT ) complexity of the full formulation due to the
exponential complexity scaling with respect to k, the number
of grid points per dimension.

This disturbance splitting results in the following family

of approximate system dynamics

˙z =

(17)

(18)

(19)

Our proposed method applies to any system of the form
(3), as we will demonstrate with the example in Section
(VI). Systems with light coupling between groups of state
variables are particularly suitable for the application or our
proposed method. Below are example systems for which
treating the coupling variables y in g or x in h as disturbances
would lead to decoupling.

Linear systems with large Jordan blocks, for example,

1

0
0
0

˙z =

 z + Bu

1
1
0
0

0
1
1
0

0
0
1
1

If the z3 is treated as a disturbance in the equation for ˙z2,
then we would obtain the two decoupled components (z1, z2)
and (z3, z4).

Constant Altitude Plane Model:

z4 cos(z3)


z4 sin(z3)

u1
u2

˙z =

where z1 and z2 are the x and y positions, respectively, z3 is
the heading angle, z4 is the longitudinal speed, and u1 and u2
are the turn rate and longitudinal acceleration, respectively.
As we will show in Section (VI), treating z4 as a disturbance
in the ˙z1 equation and z3 as a disturbance in the ˙z2 equation
will result in the decoupled components (z1, z3) and (z2, z4).

Lateral Quadrotor Dynamics near Hover [23]:



 +

 u

 0

0
0
n0

z2

g tan z3

z4

−d0z3 − d1z4

where z1 is the longitudinal position, z2 is the longitudinal
velocity, z3 is the pitch angle, z4 is the pitch rate, and u is the
desired pitch angle. These dynamics are valid for small pitch
angles. The system would become decoupled into the (z1, z2)
and (z3, z4) components if z3 is treated as a disturbance in
˙z2. In fact, the full 10D quadrotor dynamics given in [23]
can be decomposed into ﬁve decoupled components of 2D
systems, allowing an approximation of the 10D reachable set
to be computed in 2D space.

Although not considered in this paper, it is worth noting
that after decoupling the 4D system in (19) into two 2D
systems, each decoupled component is actually in the form
˙y = g(y, u), ˙x = b(y). This is exactly the form of the
dynamics in [20], allowing the 4D reachable set
to be
computed exactly in 1D!

In general, removing coupling by treating state variables as
disturbances may bring the system dynamics into a form that
is suitable for analysis using methods that require speciﬁc
assumptions on the dynamics, potentially greatly reducing
computation complexity.

VI. NUMERICAL RESULTS

A. Backwards Reachable Sets

We demonstrate our proposed method using a 4D model

of an aircraft ﬂying at constant altitude, given by

˙px = v cos ψ
˙py = v sin ψ
˙ψ = ω
˙v = a
|ω| ≤ ¯ω, a ≤ a ≤ ¯a

(20)

where (px, py) represent the plane’s position in the x and y
direction, ψ represents the plane’s heading, and v represents
the plane’s longitudinal velocity. The plane has a limited turn
rate ω and a limited longitudinal acceleration a as its control
variables. For our example, the computation bounds are

−40 m ≤px ≤ 40 m
−40 m ≤py ≤ 40 m
−π rad ≤ψ ≤ π rad
6 m/s ≤v ≤ 12 m/s

(21)

Using the decoupled approximation technique, we create
the following decoupled approximation of the system with
(px, ψ) and (py, v) as the decoupled components:

˙px = dv sin(ψ)
˙ψ = ω
ω ≤ |¯ω|
dv ≤ dv ≤ ¯dv

˙py = v sin(dψ)
˙v = a
a ≤ a ≤ ¯a
dψ ≤ dψ ≤ ¯dψ

(22)

We deﬁne the target set as a square of length 2 centered
at (px, py) = (0, 0), described by L = {(px, py, ψ, v) :
|px|,|py| ≤ 2}. This can be interpreted as an “unsafe” area
centered at the origin that must be avoided for all angles and
velocities within the computation bounds. From the target
set, we deﬁne l(z) such that l(z) ≤ 0 ⇔ x ∈ L. To analyze
our newly decoupled system we must likewise decouple the
target set by letting Li, i = 1, 2 be the following sets:

L1 = {(px, ψ) : |px| ≤ 2}
L2 = {(py, v) : |py| ≤ 2}

(23)

These target sets have corresponding implicit surface
functions li(xi), i = 1, 2, which then form the 4D target
set represented by l(z) = maxi li(xi), i = 1, 2.
We set L as the target set in our reachability problem and
computed the BRS V(T ) from L using both the direct 4D
computation as well as the proposed decoupled approxima-
tion method.

The BRS describes in this case the set of initial conditions
from which there is a possibility one would fall into the
target set after a given time period T . Outside of the BRS
the system is guaranteed to stay outside of the target set
over a duration of T despite worst possible disturbances. To
analyze the BRS we vary the degree of conservatism using
the coupling splitting method described in V. After applying
splitting, we arrive at the following piece-wise system:

v sin(ψ)

˙px = di
˙ψ = ω
ω ≤ |¯ω|
v ≤ di
di
i = 1, 2, . . . , Mv

v ≤ ¯di

v

(24)

˙py = v sin(dj
ψ)
˙v = a
a ≤ a ≤ ¯a
ψ ≤ dj
ψ ≤ ¯dj
dj
j = 1, 2, . . . , Mψ

ψ

We analyzed the decoupled approximation formulation
with Mv and Mψ ranging from 1 to 32. To visually depict
the computed 4D BRS, we plot 3D slices of the BRS in Fig.
1. In these slices the green sets are the BRS computed using
the full formulation, and the gray sets are the decoupled
approximations.

The top row of plots show the 3D slice at v = 9.5 m/s. The
bottom row of plots show the 3D slice at ψ = 2 rad. Moving
from left to right, each column of plots show the decoupled
approximations with an increasing number of split sections
Mv and Mψ. The decoupled approximations become less
conservative and more accurate as Mv and Mψ increase.

With the deﬁnition of BRS given in (4), all the decou-
pled approximations are made over approximations. From a
collision-avoidance point of view, we over-approximate the
set of initial conditions that one must avoid in order to not
crash into the target set.
B. Reconstruction Performance

To compare the degree of conservatism of the decoupled
approximations, we determined the total 4D volume of the
BRS computed using both methods. We then took the ratio of
the decoupled approximation volume to the full formulation
BRS volume. Since over-approximations are computed, a
higher volume ratio indicates a higher degree of conser-
vatism.

Fig. 2 shows this volume ratio as a function of Mv and
Mψ. For example, the purple curve represents the volume
ratio for Mψ = 1 across various values of Mv, and on the
other extreme, the yellow curve represents the the volume
ratio for Mψ = 32 across various values of Mv. The highest
number of sections computed was with Mv = Mψ = 32.
The volume ratio for this approximation was 1.29, meaning

Fig. 1: 3D slices of the target sets across a range of Mv and Mψ. The full formulation sets are in green, and the decoupled
approximation sets are in gray. The top row shows 3D slices at v = 9.5 m/s. The top left plot shows this slice for
Mψ = Mv = 1 with Mψ, Mv increasing as we move right in the list of plots, up to Mψ = Mv = 32 at top right. The
bottom ﬁgures show 3D slices at ψ = 2 rad, with Mψ = Mv = 1 at the bottom left up to Mψ = Mv = 32 at the bottom
right. As Mψ and Mv increase, the conservatism reduces and the accuracy increases.

on a 2015 MacBook Pro. The decoupled approximation is
orders of magnitude faster than the full formulation, and
therefore can be done with many more grid points in each
dimension.

For the decoupled approximation we graphed the com-
putation times for Mψ = Mv = 8, since this is where
the volume ratio begins to level off. We reconstructed the
decoupled approximation on the entire 4D computation do-
main up to 160 grid points in each dimension, after which
we ran out of memory (red curve). However, the decoupled
approximation can still be computed for even more grid
points, since the decoupled formulation allows for value
function computation at arbitrary subsets of the computation
domain. Therefore, we can compute the 2D components of
the decoupled approximation up to much higher numbers
of grid points (blue curve). The computation time increase
due to choosing a larger reconstruction domain is minimal
compared to the original full formulation. In both the case
where full reconstruction is done and where only the 2D
components are computed, the computation time is orders of
magnitude lower than the full 4D computation.

Fig. 2: Ratio of decoupled approximation volume to full 4D
formulation volume for different numbers of Mψ and Mv
split sections. As more sections are added the sets become
more accurate and less conservative.

that the decoupled approximation had a volume that is 129%
of the volume of BRS computed using the full formulation.

C. Computation Time Performance

In Fig. 3 we compare the computation time of the two
methods as a function of the number of grid points in each
dimension. The full formulation (yellow curve) can only be
computed up to 80 grid points in each dimension without
taking multiple days to complete and running out of memory

In general we recommend computing the value function
in only a region near a state of interest. Without full
reconstruction of the value function, we are able to obtain
results with many more grid points (blue curve), improving
the accuracy of the computation on a numerical numerical.

Mv Sections51015202530Volume Ratio1.522.533.544.555.566.5Mψ =1Mψ =2Mψ =4Mψ =8Mψ =16Mψ =32REFERENCES

[1] P. Varaiya, “On the existence of solutions to a differential game,” SIAM

Journal on Control, vol. 5, no. 1, pp. 153–162, 1967.

[2] L. C. Evans and P. E. Souganidis, “Differential games and repre-
sentation formulas for solutions of Hamilton-Jacobi-Isaacs equations,”
Indiana Univ. Math. J., vol. 33, no. 5, pp. 773–797, 1984.

[3] E. Barron, “Differential Games with Maximum Cost,” Nonlinear

analysis: Theory, methods & applications, pp. 971–989, 1990.

[4] C. J. Tomlin, J. Lygeros, and S. S. Sastry, “A game theoretic approach
to controller design for hybrid systems,” Proceedings of the IEEE,
vol. 88, no. 7, pp. 949 –970, July 2000.

[5] I. Mitchell, A. Bayen, and C. Tomlin, “A time-dependent Hamilton-
Jacobi formulation of reachable sets for continuous dynamic games,”
IEEE Transactions on Automatic Control, vol. 50, no. 7, pp. 947–957,
July 2005.

[6] O. Bokanowski, N. Forcadel, and H. Zidani, “Reachability and mini-
mal times for state constrained nonlinear problems without any con-
trollability assumption,” SIAM Journal on Control and Optimization,
pp. 1–24, 2010.

[7] J. F. Fisac, M. Chen, C. J. Tomlin, and S. S. Shankar, “Reach-avoid
problems with time-varying dynamics, targets and constraints,” in
18th International Conference on Hybrid Systems: Computation and
Controls, 2015.

[8] J. Ding, J. Sprinkle, S. S. Sastry, and C. J. Tomlin, “Reachability
calculations for automated aerial refueling,” in IEEE Conference on
Decision and Control, Cancun, Mexico, 2008.

[9] M. Chen, Q. Hu, C. Mackin, J. Fisac, and C. J. Tomlin, “Safe
platooning of unmanned aerial vehicles via reachability,” in IEEE
Conference on Decision and Control, 2015.

[10] A. M. Bayen, I. M. Mitchell, M. Oishi, and C. J. Tomlin, “Aircraft
autolander safety analysis through optimal control-based reach set
computation,” Journal of Guidance, Control, and Dynamics, vol. 30,
no. 1, 2007.

[11] H. Huang, J. Ding, W. Zhang, and C. Tomlin, “A differential game
approach to planning in adversarial scenarios: A case study on
capture-the-ﬂag,” in Robotics and Automation (ICRA), 2011 IEEE
International Conference on, 2011, pp. 1451–1456.

[12] Jointed Planning and Development Ofﬁce (JPDO), “Unmanned aircraft
systems (UAS) comprehensive plan – a report on the nation’s UAS
path forward,” Federal Aviation Administration, Tech. Rep., 2013.

[13] Amazon.com, Inc. (2016) Amazon prime air. [Online]. Available:

http://www.amazon.com/b?node=8037720011

[14] BBC

Technology.
service for 2017.
technology-34704868

(2016) Google

delivery
[Online]. Available: http://www.bbc.com/news/

drone

plans

[15] AUVSI News. (2016) Uas aid in south carolina tornado investigation.
[Online]. Available: http://www.auvsi.org/blogs/auvsi-news/2016/01/
29/tornado

[16] National Aeronautics and Space Administration. (2016) Challenge is
on to design sky for all. [Online]. Available: http://www.nasa.gov/
feature/challenge-is-on-to-design-sky-for-all

[17] I. M. Mitchell and C. J. Tomlin, “Overapproximating reachable sets by
hamilton-jacobi projections,” Journal of Scientiﬁc Computing, vol. 19,
no. 1-3, pp. 323–346, 2003.

[18] J. S. McGrew, J. P. How, L. Bush, B. Williams, and N. Roy, “Air
combat strategy using approximate dynamic programming,” AIAA
Guidance, Navigation, and Control Conference, Aug 2008.

[19] J. B. Lasserre, D. Henrion, C. Prieur, and E. Tr´elat, “Nonlinear optimal
control via occupation measures and lmi-relaxations,” SIAM Journal
Control and Optimization, vol. 47, no. 4, pp. 1643–1666, June 2008.
[20] I. M. Mitchell, “Scalable calculation of reach sets and tubes for
nonlinear systems with terminal integrators: A mixed implicit explicit
formulation,” in Proceedings of the 14th International Conference on
Hybrid Systems: Computation and Control, 2011, pp. 103–112.

[21] M. Chen and C. J. Tomlin, “Exact and efﬁcient hamilton-jacobi
reachability for decoupled systems,” in 54th IEEE Conference on
Decision and Control, December 2015.

[22] M. G. Crandall and P.-L. Lions, “Viscosity solutions of Hamilton-
Jacobi equations,” Transactions of the American Mathematical Society,
vol. 277, no. 1, pp. 1–42, 1983.

[23] P. Bouffard, “On-board model predictive control of a quadrotor he-
licopter: Design, implementation, and experiments,” Master’s thesis,
University of California, Berkeley, 2012.

Fig. 3: Computation time as a function of the number of grid
points in each dimension. The full formulation (yellow curve)
is orders of magnitude slower than the decoupled approxima-
tion. The decoupled approximation with reconstruction (red
curve) is not signiﬁcantly slower than the decoupled approxi-
mation without reconstruction (blue curve), but does run into
memory issues after 160 grid points in each dimension.

Fig. 4: Computation time to compute decoupled approxima-
tion sets without reconstruction as a function of Mv and Mψ.
As the number of sections increases, the computation time
increases approximately linearly.

In Fig. 4 we compare the computation time of the 2D
computations in the decoupled approximation as a function
Mv and Mψ. Each line of the graph represents the computa-
tion time for a ﬁxed number of Mψ across various values of
Mv. As the number of sections increases, the computation
time required increases approximately linearly, as expected.

VII. CONCLUSIONS AND FUTURE WORK

Hamilton-Jacobi reachability analysis can provide safety
and performance guarantees for many practical systems, but
the curse of dimensionality limits its application to systems
with less than approximately ﬁve state variables. By treating
state variables as disturbances, key state dependencies in
the system dynamics can be eliminated, reducing the system
dynamics to a simpler form and allowing reachable sets to
be calculated conservatively using available efﬁcient methods
in the literature. Future work includes exploring methods to
reduce conservatism, improve computation scalability, and
practical implementation.

Number of Grid Points50100150200250300Computation Time (s)×1040.511.522.53decoupled approx w/o reconstructiondecoupled approx w/ reconstructionfull formulationMv Sections51015202530Computation Time (s)100200300400500600700800Mψ=1Mψ=2Mψ=4Mψ=8Mψ=16Mψ=32