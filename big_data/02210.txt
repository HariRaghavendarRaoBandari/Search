6
1
0
2

 
r
a

 

M
4
2

 
 
]
h
p
-
t
n
a
u
q
[
 
 

2
v
0
1
2
2
0

.

3
0
6
1
:
v
i
X
r
a

Staggered Quantum Walks on Graphs

National Laboratory of Scientiﬁc Computing - LNCC

Renato Portugal

Av. Get´ulio Vargas 333,

25651-075, Petr´opolis, RJ, Brazil

(Dated: March 25, 2016)

The staggered quantum walk model allows to establish an unprecedented connection between
discrete-time quantum walks and graph theory. We call attention to the fact that a large subclass
of the coined model is included in Szegedy’s model, which in its turn is entirely included in the
staggered model.
In order to compare those three quantum walk models, we put them in the
staggered formalism and we show that the Szegedy and coined models are deﬁned on a special
subclass of graphs. This inclusion scheme is also true when the searching framework is added. We
use graph theory to characterize which staggered quantum walks can be reduced to the Szegedy
or coined quantum walk model. We analyze a staggered-based search that cannot be included in
Szegedy’s model and we show numerically that this search is more eﬃcient than a random-walk-
based search.

PACS numbers: 02.10.Ox, 03.67-a, 02.10.Ox

I.

INTRODUCTION

Ref.

including the searching framework,

[1] has deﬁned the staggered quantum walk
(SQW) model and has shown that the entire Sgezedy’s
model [2],
is con-
tained in the SQW model. On the other hand, Ref. [3] has
shown that the most interesting coined QWs (DTQWs)
are especial cases of Szegedy’s model including QWs us-
ing the abstract-search-algorithm scheme [4].
In other
words, Refs. [1, 3] have shown that

DTQW (cid:101)⊂ Szegedy’s ⊂ SQW,

where A(cid:101)⊂ B means the most interesting instances of set

A are included in set B. Ref. [3] has also shown that if
the DTQW on a graph Γ is included in Szegedy’s model,
then the DTQW model can be seen as coinless QW on
an enlarged graph Γ(cid:48). The coin space, which is internal
in the DTQW model, becomes explicit in the equivalent
SQW on Γ(cid:48).

The name of the SQW model comes from the staggered
fermion formalism [5–7], which was proposed to solve
some technical diﬃculties when dealing with fermionic
ﬁelds in the context of quantum ﬁeld theories. This for-
malism is useful to put fermionic ﬁelds on a hypercubic
lattice to be addressed in the context of the lattice ﬁeld
theory [8]. Key ideas of the staggered fermion formal-
ism were used in Ref. [9] to propose a nontrivial one-
dimensional quantum cellular automata avoiding the no-
go lemma [10]. Similar ideas were used in Ref. [11] to
propose coinless QWs on hypercubic lattices, the one-
dimensional case of which is essentially equivalent to the
one proposed in Ref. [9]. Refs. [12, 13] have shown that
the one-dimensional case can be included in the DTQW
model and Ref. [3] has shown that the higher dimensional
model can be included in Szegedy’s model. The higher di-
mensional versions, in the way presented in Ref. [11], use
nonlocal unitary operators violating the principle that

walkers must jump only to neighboring sites. The es-
cape for this problem, when the dimension is greater than
one, is to assume that the graph on which the QW has
been deﬁned is not the hypercubic lattice by adding edges
connecting some diagonally-opposed sites as discussed in
Ref. [1].

The basic ideas employed in Refs. [9, 11] can be sum-
marized in two points. First, they convert the inter-
nal spin or quirality state of the particle into extra de-
grees of freedom by adding new vertices to the lattice,
which becomes a larger lattice (noticeable only in the ﬁ-
nite case with some boundary conditions). Second, they
use two unitary operators with repeated alternating ac-
tion. Can those ideas be applied for the coined model
on a generic graph? Ref. [3] has addressed this prob-
lem for a subclass of ﬂip-ﬂop coined models characterized
by coins with (+1)-eigenvectors obeying special orthog-
onality properties, called orthogonal reﬂections. For d-
dimensional coins, the original graph of the coined model
must be enlarged by replacing each vertex by a d-clique
and by using two alternating unitary operators described
by the staggered QW model. The result is a coinless QW
on the enlarged graph equivalent to the coined model on
the original graph.

The staggered model provides a recipe to build quan-
tum walks on generic graphs by partitioning the ver-
tices into cliques. An element of the partition is called
polygon and the union of polygons is called tessellation.
Nontrivial SQWs use at least two tessellations, but de-
pending on the graph more tessellations are required,
for instance, the hipercubic lattice. We focus on con-
nected 2-tessellable graphs and we prove that a graph is
2-tessellable if and only if its clique graph is 2-colorable.
This work, besides reviewing some aspects of the SQW
model proposed in Ref. [1], characterizes the class of
graphs on which 2-tessellable SQWs are equivalent to
some Szegedy or coined QWs. We show that the Szegedy
and coined QW models are deﬁned in a restricted class of

graphs, which is included in the class of line graphs of bi-
partite graphs. SQWs that are equivalent to Szegedy’s
QWs inherits the results regarding the advantage of
Szegedy’s QWs over their classical counterparts, see for
instance Refs. [2, 14]. On the other hand, a SQW us-
ing two tessellations on graphs that are not line graphs
of bipartite graphs cannot be reduced to Szegedy’s QW
model.

One of the main applications of QWs is the spatial
search problem, whose data are spread out in a lattice, for
instance, and each step costs some resource. It was dis-
cussed initially by Benioﬀ [15], who tried without success
to use Grover’s algorithm to beat random-walk-based
searches. The ﬁrst eﬃcient quantum-walk-based search
seems to be the one in Ref. [16], which used the DTQW
model to search a marked vertex in a hypercube. In the
coined QW model, vertices are marked using coin (−I).
In the SQW model, vertices are marked using partial tes-
sellations. Ref. [17] used a SQW with three tessellations
to search a single marked vertex in a two-dimensional
criss-cross lattice (see Ref. [1]). In this work, we provide
the ﬁrst example of a 2-tessellable SQW search, which
is shown numerically to be more eﬃcient than random-
walk-based search.

The structure of the paper is as follows. In Sec. II, we
describe how to deﬁne the evolution operator of the SQW
model. In Sec. III, we show that a graph is 2-tessellable
if and only if its clique graph is 2-colorable and we discuss
the classes of graphs on which the SQW model reduces
to the Szegedy or coined models.
In Sec. IV, we de-
scribe how to convert a SQW into an equivalent form in
Szegedy’s QW model for graphs on a restricted class and
give nontrivial examples, namely the honeycomb lattice
and the three-state QW on the line. In Sec. V, we de-
scribe how to convert a SQW into an equivalent form in
the coined QW model for graphs on a restricted class.
In Sec. VI, we provide an example of an eﬃcient SQW
search, which cannot be put into other QW models. In
Sec. VII, we draw our conclusions. Appendix A is a glos-
sary of some terms in graph theory and appendix B gives
a formal deﬁnition of Szegedy’s QW. We write some of
the terms of graph theory in italics to indicate that they
are in the glossary.

II. DEFINING THE EVOLUTION OPERATOR

A quantum walk model is a recipe for building an evo-
lution operator based on local unitary operators. Local
operators obey the graph structure in the sense that if a
particle is on vertex v, it can move only to the vertices
that are in the neighborhood of v. In the discrete-time
models, one step of the quantum walk is a product of
such operators. The ﬂip-ﬂop coined QW model has an
internal space, which can become explicit when the coin
is an orthogonal reﬂection by converting the coin direc-
tions into extra vertices as described in Ref. [3]. In this
case, the Hilbert space is spanned by the vertices of the

2

extended graph. In this work, we address only QWs on
Hilbert space that are spanned by the vertices of the
graph. The following models are included in this analy-
sis: (1) the ﬂip-ﬂop coined QW models with coins that
are orthogonal reﬂections, (2) Szegedy’s QW model, and
(3) the staggered QW model.

Let us start with an example of a SQW that is included
neither in Szegedy’s model nor in the coined model. The
recipe to build the SQW on the graph of Fig. 1 is as
follows.

Figure 1: Procedure to deﬁne a SWQ on a graph. Panel (a)
describes the blue tessellation. Panel (b) describes the red
tessellation. Panel (c) presents the tessellation union, which

must cover all edges.

Step 1. Make a partition of the vertices so that each
element of the partition is a clique. An element of the
partition is called a polygon. The polygons do not over-
lap and their union contains all vertices. The polygon
union is called tessellation and we use the blue color for
the ﬁrst graph tessellation. Notice that some edges are
not in the blue tessellation, as we can check in Fig. 1(a).
A polygon is always a clique, but not necessarily a max-
imal clique. An edge is in a polygon if and only if the
endpoints of the edge are in the polygon.

1
2

Step 2. Associate a unit vector to each polygon so that
the vector belongs to the subspace spanned by the ver-
tices of the polygon. The simplest choice is the uniform
superposition given by

(cid:0)(cid:12)(cid:12)0(cid:11) +(cid:12)(cid:12)1(cid:11) +(cid:12)(cid:12)2(cid:11) +(cid:12)(cid:12)3(cid:11)(cid:1) ,
where(cid:12)(cid:12)α0
gon in the form of a triangle in Fig. 1(a) and(cid:12)(cid:12)α1
that(cid:12)(cid:12)α0

(cid:12)(cid:12)α0
(cid:11) =
(cid:12)(cid:12)α1
(cid:11) =(cid:12)(cid:12)4(cid:11),
(cid:11) is associated with (or induces) the blue poly-
(cid:11) is asso-
(cid:11) and(cid:12)(cid:12)α1
(cid:11) have no zero entry and unit l2-norm
U0 = 2(cid:12)(cid:12)α0
(cid:11)(cid:10)α0
(cid:12)(cid:12)αj(cid:48)(cid:11) = δjj(cid:48) for 0 ≤ j, j(cid:48) ≤ 1. U0 is local

is acceptable. Now we are ready to deﬁne the ﬁrst local
unitary operator, which has the following expression

(cid:12)(cid:12) + 2(cid:12)(cid:12)α1

(cid:11)(cid:10)α1

(cid:12)(cid:12) − I.

ciated with (or induces) the square. Any other choice so

(1)

because (cid:10)αj

By construction, U0 is unitary and Hermitian (U 2

0 = I)

because the particle does not leave the polygon. Since a

0(a)24310(b)24310(c)2431(cid:12)(cid:12)j(cid:48)(cid:11) = 0 if j(cid:48) is not a vertex
boring vertices because (cid:10)αj
(cid:12)(cid:12)j(cid:48)(cid:11) belongs to the subspace spanned by the vertices

polygon is a clique, the particle can move only to neigh-
of the polygon induced by αj and, if j(cid:48) is a vertex in αj,
U0
of αj.

Step 3. Now we are going to make a second vertex par-
tition in order to cover the edges that were not included
in the ﬁrst tessellation. Fig. 1(b) shows that this task is
doable for this graph. In the generic case, we may need
to use more than two tessellations.

Step 4. Similar to Step 2, we associate a unit vector
in the subspace spanned by the polygon vertices to each
polygon. Again, we use the uniform superposition

1√
2
1√
3

(cid:12)(cid:12)β0
(cid:11) =
(cid:12)(cid:12)β1
(cid:11) =
U1 = 2(cid:12)(cid:12)β0

(cid:0)(cid:12)(cid:12)0(cid:11) +(cid:12)(cid:12)1(cid:11)(cid:1) ,
(cid:0)(cid:12)(cid:12)2(cid:11) +(cid:12)(cid:12)3(cid:11) +(cid:12)(cid:12)4(cid:11)(cid:1) .
(cid:12)(cid:12) − I.
(cid:12)(cid:12) + 2(cid:12)(cid:12)β1
(cid:11)(cid:10)β1
(cid:11)(cid:10)β0


3 −3 3
0
3
−3
0
3
3
3
3 −3 4
1 1
1 1 −3 3
4
0 −2
4 4

0

1
6

 .

The second local unitary operator is

Step 5. Since we have covered all edges of the graph,
as we can check in Fig. 1(c), the evolution operator is
given by

Now we can generalize this construction for any N -
graph, whose edges can be covered by two tessellations
called α and β. The evolution operator is

where

U0 = 2

U1 = 2

U = U1U0,

k=0

m−1(cid:88)
(cid:12)(cid:12)αk
(cid:12)(cid:12) − I,
(cid:11)(cid:10)αk
n−1(cid:88)
(cid:12)(cid:12) − I,
(cid:12)(cid:12)βk
(cid:11)(cid:10)βk
(cid:88)
ak k(cid:48)(cid:12)(cid:12)k(cid:48)(cid:11),
(cid:88)
bk k(cid:48)(cid:12)(cid:12)k(cid:48)(cid:11),

k(cid:48)∈αk

k=0

(cid:11) =
(cid:11) =

and m and n are the number of polygons in each tessel-
lation, and

(cid:12)(cid:12)αk
(cid:12)(cid:12)βk
(cid:11) then ak,k(cid:48) (cid:54)= 0 otherwise ak,k(cid:48) = 0; likewise

where ak,k(cid:48) are nonzero complex amplitudes for k(cid:48) ∈ αk,
which means that if k(cid:48) is a vertex of the polygon induced
bk,k(cid:48) are nonzero complex amplitudes for k(cid:48) ∈ βk and zero
otherwise. Index k(cid:48) in akk(cid:48) and bkk(cid:48) runs from 0 to N −1.

by vector(cid:12)(cid:12)αk

k(cid:48)∈βk

(7)

(8)

U = U1U0 =

(3)

III. MAIN CLASSES OF GRAPHS

3

Formally, a tessellation is a clique graph partitioning,
that is, a tessellation is a partition of the vertex set such
that each element of the partition (called polygon) is a
clique. We can associate unitary and Hermitian oper-
ators with a tessellation of m polygons using the form
of the operator given by Eqs. (5) and (7). A unitary
and Hermitian operator is called orthogonal reﬂection if
it is associated with (or induces) a tessellation. A SQW
is deﬁned by an evolution operator that is a product of
orthogonal reﬂections such that the union of the tessel-
lations induced by the orthogonal reﬂections covers the
edges of the graph [1, 3].

An interesting class of orthogonal reﬂections is ob-
tained using polygons in uniform superposition. In this
case, Eq. (7) reduces to

(cid:12)(cid:12)αk

(cid:11) =

1(cid:112)|αk|

(cid:88)

(cid:12)(cid:12)k(cid:48)(cid:11),

k(cid:48)∈αk

(9)

where |αk| is the number of vertices in polygon αk. This
class generalizes ﬂip-ﬂop DTQWs with the Grover coin
in the sense that, when we convert the internal degrees of
freedom into extra vertices, the extended graph on which
the Grover walk is deﬁned is a line graph of a bipartite
graph while the SQW can be deﬁned on a wider class.

In this section, we use graph theory to classify the most
relevant classes of graphs that help to identify SQWs
that can be reduced into the Szegedy or coined model.
Since our focus in this work is the set of 2-tessellable
SQWs (those that have an evolution operator that is the
product of exactly two orthogonal reﬂections), we start
addressing the following question: Which graphs are 2-
tessellable? We give a necessary condition: Each vertex
of the graph must belong to at most two maximal cliques.
For example, graph Γ9 in Fig. 2 has a central vertex that
belongs to the intersection of ﬁve maximal cliques. To
deﬁne a SQW on this graph we need to employ at least
ﬁve tessellations. By inspection, we can check that only
graphs Γ2, Γ3, Γ4, Γ5, and Γ6 are 2-tessellable and those
graphs obey the necessary condition. This condition is
not suﬃcient. For instance, each vertex of Γ7 belongs
to two maximal cliques, but we need to employ at least
three tessellations to deﬁne a SQW on this graph.

To deﬁnitively answer the question, we need to use the
clique graph of the original graph because the clique graph
contains all information about the adjacency relation of
the maximal cliques of the original graph. The necessary
and suﬃcient condition is the clique graph must be 2-
colorable. To prove this we need the following lemma:

Lemma III.1 Each maximal clique of a 2-tessellable
graph is inside a polygon (blue or red).

(2)

(4)

(5)

(6)

4

This proposition shows that graph Γ7 in Fig. 2 is not
2-tessellable because the clique graph of Γ7 is a pentagon,
which is not 2-colorable.

It seems that Proposition III.2 cannot be easily ex-
tended for graphs with more than two tessellations. Take
for example the Haj´os graph (a triangle surrounded by
three triangles each one sharing an edge in common with
the central triangle). This graph is 3-tessellable and its
clique graph is not 3-colorable [18]. Besides, it is possi-
ble to have a maximal clique that does not belong to any
polygon.

Class 1 Graphs that are not line graphs

The nine forbidden Beineke induced subgraphs of Fig. 2
are used to check whether a graph is a line graph.
Beineke [19] has proved the following theorem:
Theorem III.3 Let Γ(cid:48) be a graph. There exists a graph
Γ such that Γ(cid:48) is the line graph of Γ if and only if Γ(cid:48)
contains no graph of Fig. 2 as an induced subgraph.

If we want to deﬁne a 2-tessellable SQW on a graph
that is not a line graph (Class 1), our graph on the one
hand cannot have Γ1, Γ7, Γ8, and Γ9 as an induced sub-
graph (their clique graphs are not 2-colorable) and on
the other hand it must have Γ2, Γ3, Γ4, Γ5, or Γ6 as an
induced subgraph (Beineke’s theorem).

The 2-tessellable SQWs on graphs in Class 1 have the
following property: There are necessarily one or more
edges in the intersection of the tessellations. This fol-
lows from the fact that Γ2, Γ4, Γ5, and Γ6 have maxi-
mal cliques sharing an edge and Γ3 have maximal cliques
sharing three edges. Take Γ6 for instance, it comprises
two 4-cliques having in common the central vertical edge.
SQWs on graphs in Class 1 can be included neither
in Szegedy’s model nor in the ﬂip-ﬂop coined model,
because Refs.
[1, 3] have shown that any Szegedy’s
QW or ﬂip-ﬂop coined walk using orthogonal reﬂections
are equivalent to SQWs on line graphs of the bipartite
graphs.

Class 2a Line graphs of nonbipartite graphs

To characterize this class of graphs we use the Krausz

partition.

Deﬁnition III.4 A Krausz partition is a collection C of
subgraphs of a graph Γ that satisﬁes the following items:
(1) each element of C is a clique, (2) each edge of Γ is
in exactly one element of C, and (3) each vertex is in
exactly two elements of C.

For example, Fig. 3 shows the Krausz partition of graph
Γ(cid:48) (the same of Fig. 1). Krausz [20] has proved the fol-
lowing theorem:

Figure 2: Nine forbidden Beineke induced subgraphs.

Proof Suppose that the graph is a clique. We state
that one tessellation must have a polygon that covers the
whole clique. In fact, if a blue polygon does not cover the
whole clique, the missed vertices are adjacent to all ver-
tices of that blue polygon. The red polygon must cover
all edges of the whole clique because, otherwise, there
will be at least one edge whose endpoints belong to poly-
gons with diﬀerent colors. This edge will not be in the
tessellation union violating the deﬁnition of 2-tessellable
SQWs. Then, all vertices of the whole clique must be in
the red polygon. The same argument is valid for each
maximal clique of a generic 2-tessellable graph.

Proposition III.2 A connected graph is 2-tessellable if
and only if its clique graph is 2-colorable.

If the clique
Proof Let us start with the suﬃciency.
graph is 1-colorable, the original graph is a clique, which
is 2-tessellable. If the clique graph is 2-colorable, we can
use the coloration induced by the clique graph on the
original graph, which generates a partial tessellation of
the original graph with two colors (some of the vertices
belong to two diﬀerent-colored polygons), and then we
complete the partial tessellations by deﬁning new poly-
gons that will cover the remaining vertices (those that do
not belong to the intersection of the induced colorations).
In the end, all vertices belong to two diﬀerent-colored
polygons. This proves the suﬃciency.

To prove the necessity, we take the original graph with
two tessellations and erase all polygons that are not max-
imal cliques. The union of the remaining polygons still
covers all vertices of the original graph because each ver-
tex belongs to a maximal clique (using the above lemma
here). The union of the remaining polygons also covers
all edges and is a 2-colorable clique cover. Those remain-
ing polygons induce a 2-coloration of the clique graph
unless the whole graph is a clique whose clique graph is
1-colorable.

ΓΓ12Γ3Γ4Γ5Γ6Γ7Γ8Γ9Theorem III.5 A graph Γ(cid:48) is a line graph of some graph
Γ if and only if Γ(cid:48) has a Krausz partition.

Krausz’s theorem is an alternative way to check whether
a graph is a line graph. The advantage of using the
Krausz partition is that it shows how to obtain the root
graph. Each element of the Krausz partition is associated
with a vertex of the root graph. Two vertices of the root
graph are adjacent if and only if the intersection of the
corresponding elements of the partition is nonempty. On
the other hand, it is known that a generic graph is bipar-
tite if and only it is 2-colorable. Then, the line graph of
a graph Γ has a 2-colorable Krausz partition if and only
if Γ is bipartite.

Figure 3: A line graph Γ(cid:48) with the Krausz partition and its
root graph Γ. There is an one-to-one map from the Krausz
partition and the vertices of the root graph displayed by the

colors. Notice that the Krausz partition is not 2-colorable

and Γ is not bipartite.

We can state that the class of graphs that are line
graphs of nonbipartite graphs is characterized by graphs
that have Krausz partition that are not 2-colorable. If
a graph of this class has a 2-colorable clique graph, then
the graph is 2-tessellable. The tessellation union cannot
coincide with the Krausz partition because the Krausz
partition is not 2-colorable. The intersection of two ele-
ments of the Krausz partition has no edge. If the graph
is 2-tessellable, there must be an edge in a polygon in-
tersection because the tessellation union splits the graph
into maximal cliques so that each vertex is in exactly two
cliques. The only escape using the deﬁnition of Krausz
partition is the following: There is an edge in the inter-
section of two polygons. This property is shared with
graphs that are not line graphs (Class 1).

Besides the correspondence between the elements of
the Krausz partition and the vertices of the root graph,
there is another correspondence, coming from the deﬁni-
tion of line graphs, between the edges of the root graph
and the vertices of the line graph. For example, there
is an one-to-one map between E(Γ) and V (Γ(cid:48)) of graphs
Γ and Γ(cid:48) of Fig. 3, which is displayed by the numerical
labels.

Summing up, we have proved so far that 2-tessellable
SQWs on graphs in Class 1 or 2a have at least one edge in
the tessellation intersection. Those SQWs cannot be cast
into Szegedy’s QW model because they are neither line
graphs nor line graphs of bipartite graphs. Ref. [1] has

5

shown that any Szegedy’s QW is equivalent to a SQW
on the line graph of a bipartite graph.

There are graphs in Class 2a that are not 2-tessellable,

for instance, the Haj´os graph.

Class 2b Line graphs of bipartite graphs

This class is comprised by graphs Γ that have 2-
colorable Krausz partition. Another way to characterize
graphs in Class 2b is by using the following theorem (see
for instance Ref. [21]):

Theorem III.6 Γ is the line graph of a bipartite graph
if and only if Γ is diamond-free and K(Γ) is bipartite.

Ref. [21] also has the following result:

Proposition III.7 A graph is diamond-free if and only
if any two maximal cliques intersect in at most one ver-
tex, which holds if and only if each edge lies in exactly
one maximal clique.

Graph Γ in Class 2b cannot have a diamond as an
induced subgraph and two maximal cliques of Γ do not
share a common edge. This means that any minimum
clique cover of Γ is also a minimum clique partition. All
graphs in this class are 2-tessellable because K(Γ) is bi-
partite and the 2-colorable Krausz partition induces the
blue and red tessellations. A SQW that use the tessel-
lations induced by the Krausz partition can be cast into
Szegedy’s model, as will be shown in Sec. IV.

To deﬁne a SQW on Γ that is not included in Szegedy’s
model, we have to choose tessellations blue and red with
an edge in the tessellation intersection. For example, the
tessellations of the graph in Fig. 4(a) have two edges in
the tessellation intersection while the tessellations of the
same graph in Fig. 4(b) have no edges in the tessellation
intersection. The tessellation union of Fig. 4(b) is a 2-
colorable Krausz partition conﬁrming that this graph is
in Class 2b.

Figure 4: A graph (a barbell) with two diﬀerent tessellation
patterns. A SQW with tessellation (a) does not belong to
Szegedy’s model while a SQW with tessellation (b) always

belongs to Szegedy’s model.

If we remove the elements of the Krausz partition that
are not maximal cliques, we have a 2-colorable mini-
mum clique partition. We must use this partition to de-
ﬁne the blue and red polygons of a 2-tessellable SWQ
because each maximal clique must be inside a polygon
(Lemma III.1). After this procedure, if there are vertices
that do not belong to two polygons, then we have to de-
ﬁne new polygons until both tessellations be complete

1Γ´3542Γ13542(b)(a)6

(all vertices must be in exactly two polygons). If there
are two or more vertices in the same blue polygon of the
2-colorable minimum clique partition that do not belong
to red polygons, we can put those vertices in a single
red polygon to have one or more edges in the tessellation
intersection. Such SQWs cannot be cast into Szegedy’s
model. If there are at most one vertex in each polygon of
the 2-colorable minimum clique partition that does not
belong to a second polygon (with a diﬀerent color), then
the SQW in this case can be cast into Szegedy’s model,
as will be shown in Sec. IV.

vertices in K(Γ). Two vertices in S2 are nonadjacent be-
cause there is an edge of the perfect matching between
the maximal cliques that correspond to those vertices in
Γ. Therefore, K(Γ) is bipartite.

Now let us show that Γ is the line graph of K(Γ). This
follows from the fact that the vertices of K(Γ) correspond
to the elements of the Krausz partition of Γ with two or
more vertices, which are maximal cliques; and two ver-
tices of K(Γ) are adjacent if and only if the intersection
of the corresponding elements of the Krausz partition is
nonempty. This shows that K(Γ) is the root graph of Γ.

Class 2b(cid:48) Line graphs of bipartite graphs with

perfect matching

Let us deﬁne subclass Class 2b(cid:48) (we will show that
Class 2b(cid:48) ⊂ Class 2b) of graphs Γ that obey the following
three conditions:

(1) Γ has a perfect matching.

(2) Each set of matched vertices is a maximal clique

of size two.

(3) If we delete the edges of the perfect matching (leav-
ing the endpoints), we obtain a disconnected set of
maximal cliques, some (or all) of them can have one
vertex.

The third condition is equivalent to state that the com-
plement of the perfect matching in Γ is a disconnected
set of maximal cliques.
Let us show that a graph Γ in Class 2b(cid:48) is the (or iso-
morphic to the) line graph of a bipartite graph. Condi-
tions (1) to (3) guarantee that Γ has a 2-colorable Krausz
partition. The edges of the perfect matching are the ele-
ments of the Krausz partition with the red color and the
maximal cliques in the complement of the perfect match-
ing in Γ are the elements with the blue color. Each ver-
tex is in exactly two elements of the partition (elements
with diﬀerent colors) establishing a well-deﬁned Krausz
partition. This Krausz partition is 2-colorable, then Γ
is the line graph of a bipartite graph. This proves that
Class 2b(cid:48) ⊂ Class 2b.

We can prove a stronger result which is: A graph Γ that
obeys conditions (1) to (3) is the line graph of its clique
graph K(Γ), which is bipartite. Let us show that K(Γ)
is bipartite. We can split the vertices of K(Γ) in two
set S1 and S2 deﬁned in the following way: The vertices
in S1 correspond to the edges in the perfect matching.
Each edge in the perfect matching is a maximal clique
of size two and produces a vertex in K(Γ). Two ver-
tices in S1 are nonadjacent by the deﬁnition of perfect
matching, that is, two elements of the perfect matching
are at least one edge apart and this edge produces an
intermediate vertex in K(Γ). The vertices in S2 corre-
spond to the maximal cliques in the complement of the
perfect matching in Γ (after removing isolated vertices).
The maximal cliques (size two or more) correspond to

IV. STAGGERED QWS THAT ARE IN

SZEGEDY’S MODEL

Szegedy [2] proposed a coinless discrete-time QW
model on bipartite graphs (Appendix B presents a formal
deﬁnition), which was used to build many algorithms, for
instance, for searching triangles in graphs [22] and for
searching webpages in complex networks [23].

Graphs in Class 2b have 2-colorable Krausz partitions.
If we use the Krausz partition to deﬁne the tessellations
(there is exactly one vertex in the polygon intersections),
then the SQWs are included in the extended Szegedy QW
model. This result is included in a more general one for
generic graphs:

Proposition IV.1 A 2-tessellable SQW with no edge in
the intersection of the tessellations can be cast into the
extended Szegedy QW model.

Proof Suppose that the 2-tessellable SQW is deﬁned on
an N -graph Γ. The labels of the vertex set of Γ run from
0 to N − 1 and the basis of the Hilbert space associated

with Γ is(cid:8)(cid:12)(cid:12)0(cid:11), ...,(cid:12)(cid:12)N − 1(cid:11)(cid:9).

We have shown in Sec. III that Γ belong neither to
Class 1 nor Class 2a because any 2-tessellable SQW on
graphs in those classes has an edge in the tessellation
intersection. Then, Γ must be in Class 2b, that is, Γ is
the line graph of a bipartite graph Γ(cid:48).

Since Γ is 2-tessellable, each maximal clique is inside
a blue or red polygon (Lemma III.1). Adjacent maxi-
mal cliques have diﬀerent color. Since there is no edge
in the tessellation intersection (there is exactly one ver-
tex in the polygon intersections), the tessellation union
is a 2-colorable Krausz partition. The root graph Γ(cid:48) is
bipartite with edges connecting set A (associated with
blue polygons) and set B (associated with red polygons).
No two vertices in A are adjacent and the same for B.
Let m, n be the number of polygons in the blue and red
tessellations, respectively. We label the vertices in A by
˜αk, 0 ≤ k < m, and the vertices in B by ˜βk, 0 ≤ k < n
using the one-to-one mapping between the elements of
the Krausz partition and the vertices of Γ(cid:48). Each vertex
k of Γ belongs to the intersection of two polygons αi and
βj for some 0 ≤ i < m and 0 ≤ j < n. Then, there is an
one-to-one mapping between the vertex set of Γ and the

edge set of Γ(cid:48) given by

k ↔ (˜αi, ˜βj)

(10)

(cid:11)⊗(cid:12)(cid:12) ˜βj

Let(cid:12)(cid:12)˜αi

where k is a vertex of Γ and ˜αi, ˜βj are the endpoints of
the edge of Γ(cid:48) that corresponds to k. Label k runs from
0 to N − 1 and labels i, j run over the edge set E(Γ(cid:48)),
whose cardinality is equal to N . Labels i, j run in the
whole range 0 ≤ i < m and 0 ≤ j < n if and only if Γ(cid:48) is
the complete bipartite graph.
be the computational basis of Hm⊗Hn using weird labels,
which help to remember the correspondence between the
vertices ˜αi and ˜βj of Γ(cid:48) and polygons αi and βj of Γ.
T : HN → Hm ⊗ Hn by

(cid:11), for 0 ≤ i < m and 0 ≤ j < n,

Using bijection (10), deﬁne the linear transformation

(cid:11) ≡(cid:12)(cid:12)˜αi, ˜βj

(11)
Using T , deﬁne the unitary operators R0 and R1 in Hm⊗
Hn by

R0 = 2

(cid:11) ⊗(cid:12)(cid:12) ˜βj
T(cid:12)(cid:12)k(cid:11) =(cid:12)(cid:12)˜αi
(cid:11).
m−1(cid:88)
(cid:12)(cid:12)φk
(cid:12)(cid:12) − I,
(cid:11)(cid:10)φk
n−1(cid:88)
(cid:12)(cid:12) − I,
(cid:12)(cid:12)ψk
(cid:11)(cid:10)ψk
(cid:88)
ak k(cid:48) T(cid:12)(cid:12)k(cid:48)(cid:11),
(cid:11) = T(cid:12)(cid:12)αk
(cid:11) =
(cid:88)
bk k(cid:48) T(cid:12)(cid:12)k(cid:48)(cid:11),
(cid:11) = T(cid:12)(cid:12)βk
(cid:11) =
(cid:11) and (cid:12)(cid:12)βk
akk(cid:48) and bkk are the entries of (cid:12)(cid:12)αk

(cid:12)(cid:12)φk
(cid:12)(cid:12)ψk

R1 = 2

k(cid:48)∈αk

k(cid:48)∈βk

where

k=0

k=0

(12)

(13)

(14)

(15)

(cid:11) given by

j

(16)

such that

ak;(k,j)

( ˜αk, ˜βj )∈E(Γ(cid:48))

Expressing (14) and (15) in the computational basis of

(cid:12)(cid:12)˜αk, ˜βj
(cid:11),
(cid:12)(cid:12)˜αi, ˜βk
(cid:11),

Eqs. (7) and (8). Now, let us show that W = R1R0 is
the evolution operator of a well-deﬁned extended Szegedy
QW on Γ(cid:48) equivalent to the SQW on Γ. The Hilbert space
associated with Γ(cid:48) is Hm ⊗ Hn.
Hm ⊗ Hn, we obtain

(cid:88)
(cid:12)(cid:12)φk
(cid:11) =
(cid:88)
(cid:12)(cid:12)ψk
(cid:11) =
where index k of (cid:12)(cid:12)φk
(cid:11) runs from 0 to m − 1 and index
k of (cid:12)(cid:12)ψk
(cid:11) runs from 0 to n − 1. The notation ak;(i,j)
T(cid:12)(cid:12)k(cid:48)(cid:11) =(cid:12)(cid:12)˜αi, ˜βj
(cid:11). Since k(cid:48) in Eq. (14) is in polygon αk,
T(cid:12)(cid:12)k(cid:48)(cid:11) =(cid:12)(cid:12)˜αk, ˜βj
(cid:11) for some 0 ≤ j < n. Since k(cid:48) in Eq. (15)
is in polygon βk, T(cid:12)(cid:12)k(cid:48)(cid:11) =(cid:12)(cid:12)˜αi, ˜βk
(cid:11) for some 0 ≤ i < m.

means that ak;(i,j) = ak;k(cid:48) for the value of k(cid:48) such that

( ˜αi, ˜βk)∈E(Γ(cid:48))

bk;(i,k)

such that

(17)

i

The same notation applies to bk;(i,j).

7

(cid:12)(cid:12)2

(cid:11), mapping (10), and the notation

of Appendix B, we deﬁne matrices P and Q whose di-
mensions are m × n and n × m and whose entries are
, respectively. P and
j=0 pkj = 1,
i=0 qki = 1, for 0 ≤ k < n because

(cid:11) and(cid:12)(cid:12)ψk
Using(cid:12)(cid:12)φk
(cid:12)(cid:12)2
and qki =(cid:12)(cid:12)bk;(i,k)
pkj =(cid:12)(cid:12)ak;(k,j)
Q are right-stochastic matrices. In fact, (cid:80)n−1
for 0 ≤ k < m and(cid:80)m−1
(cid:12)(cid:12)αk
(cid:11) and(cid:12)(cid:12)βk
(cid:11) have unit l2-norm. Let P (cid:48), Q(cid:48) be the matri-
the coeﬃcient of some(cid:12)(cid:12)k(cid:48)(cid:11) in(cid:12)(cid:12)αk
(cid:11). Vertex k(cid:48) in Γ is in
of(cid:12)(cid:12)k(cid:48)(cid:11) in βj also must be nonzero because k(cid:48) ∈ βj. Then

ces obtained from P, Q by replacing the nonzero entries
by 1. We have to show that P (cid:48) = Q(cid:48)T (see Deﬁnition B.1
and matrix (B.1)), or equivalently p(cid:48)
jk = 1.
kj = 1. Then ak;(k,j) (cid:54)= 0, where ak;(k,j) is
Suppose that p(cid:48)

the intersection of polygons αk and βj. The coeﬃcient
bj;(k,j) (cid:54)= 0 and q(cid:48)
other way around and if q(cid:48)

jk = 1. The same argument works the

kj = 1 ⇔ q(cid:48)

jk = 1 then p(cid:48)

kj = 1.

in HN , then using Eqs. (11), (12), and (16) we obtain

Now let us display the connection between the evolu-
tion operator U of the staggered model given by Eq. (4)
and W = R1R0 of Szegedy’s model. U and W are not
exactly equal in general because W may have an idle
subspace. Suppose that the ﬁrst vectors of the compu-

same order of the elements of the computational basis
of HN after using bijection (10). The order of the re-
maining (m · n − N ) vectors of the computational basis
of Hm ⊗ Hn does not matter.

tational basis of Hm ⊗ Hn are the vectors(cid:12)(cid:12)˜αi, ˜βj
(cid:11) in the
If (cid:12)(cid:12)˜αi, ˜βj
(cid:11) and (cid:12)(cid:12)˜αi(cid:48), ˜βj(cid:48)(cid:11) are vectors in the computa-
tional basis of Hm ⊗ Hn that correspond to(cid:12)(cid:12)k(cid:11) and(cid:12)(cid:12)k(cid:48)(cid:11)
(cid:10)˜αi, ˜βj

(cid:12)(cid:12)˜αi(cid:48), ˜βj(cid:48)(cid:11) =(cid:10)k(cid:12)(cid:12)U0
(cid:12)(cid:12)k(cid:48)(cid:11).
U0. If (cid:12)(cid:12)a, b(cid:11) is in the computational basis of Hm ⊗ Hn
(cid:12)(cid:12)a, b(cid:11) = −1 because
and (a, b) (cid:54)∈ E(Γ(cid:48)) then (cid:10)a, b(cid:12)(cid:12)R0
(cid:10)a, b(cid:12)(cid:12)φk
(cid:11) = 0, ∀k. The remaining entries of R0 are zero,
 .

This shows that the submatrix of R0 obtained by se-
lecting the ﬁrst N lines and columns of R0 is equal to

as we can systematically check. Summing up, we have
shown that

 U0

0 ···
0 −1 ···
...
. . .
0

0
0
...
...
0 ··· −1

(cid:12)(cid:12)R0

R0 =

(18)

(19)

It is straightforward to show that the same property
holds when we compare R1 and U1, that is, the submatrix
of R1 obtained by selecting the ﬁrst N lines and columns
of R1 is equal to U1, the remaining diagonal entries of
R1 are (−1), and the remaining nondiagonal entries are
zero. Summing up, we have shown that

 U 0 ··· 0

0 1 ··· 0
...
...
0 0 ··· 1

. . .

...

 ,

W =

(20)

where the number of 1’s in the diagonal is (m n − N ),
which is the dimension of the idle space in Szegedy’s
model.

The evolution operators of the Szegedy and SQW mod-
els are not exactly the same when the bipartite graph is
not complete because the dimension mn of the Hilbert
space of Szegedy’s model is larger than the dimension N

of the staggered model. We have shown that U(cid:12)(cid:12)ψ(cid:11) ↔
W(cid:12)(cid:12)ψ(cid:48)(cid:11) if(cid:12)(cid:12)ψ(cid:11) ↔(cid:12)(cid:12)ψ(cid:48)(cid:11), where(cid:12)(cid:12)ψ(cid:11) ↔(cid:12)(cid:12)ψ(cid:48)(cid:11) means that(cid:12)(cid:12)ψ(cid:48)(cid:11)
is obtained from (cid:12)(cid:12)ψ(cid:11) after using the bijection (10), or
equivalently, T U(cid:12)(cid:12)ψ(cid:11) = W T(cid:12)(cid:12)ψ(cid:11), ∀(cid:12)(cid:12)ψ(cid:11) ∈ HN , where T is

given by Eq. (11).

V. STAGGERED QWS THAT ARE IN THE

COINED MODEL

Coined QWs on graphs were deﬁned in Ref. [24] and
have been extensively analyzed in literature [25–29].
Ref. [3] has shown that the most interesting coined QWs
(DTQW) are especial cases of Szegedy’s model, which in
its turn is totally included in the staggered model.
The 2-tessellable SQWs on graphs Γ(V, E) in Class 2b(cid:48)
are included in the coined model if the tessellation that
covers the perfect matching uses vectors in uniform su-
perposition. This result follows from the demonstration
of Theorem. 4.2 of Ref. [3], which states that Szegedy’s
QWs on bipartite graphs Γ(X, Y, E) are equivalent to a
ﬂip-ﬂop coined QW on some |X|-multigraph, if the ver-
tices in Y have degree 2 and the edges incident on the
vertices in Y have equal weight.

We brieﬂy review this result using the blue and red
tessellations induced by the Krausz partition of Γ(V, E).
The red tessellation covers the perfect matching. If we
choose the vertex labels so that vertices in the blue poly-
gons are consecutive numbers, the unitary operator U0
associated with the blue tessellation will be a direct sum
of matrices each one associated with a blue polygon. U0
is the coin operator of a QW on a new graph Γ(cid:48)(V (cid:48), E(cid:48))
obtained from Γ(V, E) by shrinking the blue polygons
into single vertices so that a blue polygon that is a d-
clique becomes a d-degree vertex in V (cid:48). The cardinality
of V (cid:48) is the number of blue polygons. The edge set E(cid:48) is
the perfect matching. This shrinking process can produce
a multigraph [3].

The unitary operator U1 associated with the red tes-

sellation is

where

U1 = 2

(i,j)∈PM

(cid:88)
(cid:12)(cid:12)βij
(cid:11) =
(cid:88)

(cid:12)(cid:12) − I,

(cid:12)(cid:12)βij
(cid:11)(cid:10)βij
(cid:12)(cid:12)0(cid:11) +(cid:12)(cid:12)1(cid:11)
(cid:12)(cid:12)i(cid:11)(cid:10)j(cid:12)(cid:12) +(cid:12)(cid:12)j(cid:11)(cid:10)i(cid:12)(cid:12),

√

2

and PM is the perfect matching. Simplifying U1 we obtain

U1 =

(i,j)∈PM

(23)

and they split into two sets: When i = 0, the polygon
refers to a vertex that in the honeycomb has the form

8

which is a ﬂip-ﬂop shift operator on Γ(cid:48)(V (cid:48), E(cid:48)). U =
U1U0 is the evolution operator of a well-deﬁned ﬂip-ﬂop
coined model on Γ(cid:48)(V (cid:48), E(cid:48)).

In the next subsections, we show nontrivial examples
that display the connection between the staggered and
coined models.

A. Honeycomb lattice

Consider the SQW on the graph Γ of Fig. 5, which is
obtained from the hexagonal lattice (honeycomb) after
replacing the vertices by triangles. Graph Γ belongs to
Class 2b(cid:48) because it obeys conditions (1) to (3). The
vertex labels are chosen following a method similar to
the one used for two-dimensional lattices. Recall that in
the latter case, the vertex label (x, y) means that it is
represented by vector x(cid:126)ex + y(cid:126)ey, where (cid:126)ex and (cid:126)ey are the
unit canonical vectors along axes x and y, respectively.
For the honeycomb, the unit canonical vectors must be
replaced for the vectors (cid:126)ex and (cid:126)ey displayed in Fig. 6.
The position of half nonadjacent vertices are obtained
using vectors x(cid:126)ex + y(cid:126)ey, for 0 ≤ x, y < m, where m is the
even number of hexagons in the x- or y-directions (we are
using the cyclic or torus-like boundary conditions). The
other vertices are obtained using vectors x(cid:126)ex + y(cid:126)ey + (cid:126)a,
where (cid:126)a = ((cid:126)ex + (cid:126)ey)/3, as shown in Fig. 6. So, we use
labels (x, y, 0) for the ﬁrst set of vertices and (x, y, 1) for
the second set of vertices of the honeycomb. The labels
of graph Γ of Fig. 5 requires a fourth index k describing
the position of the vertices inside the triangle such as
(x, y, i, k), for 0 ≤ i ≤ 1 and 0 ≤ k ≤ 2.

Figure 5: Graph Γ on which a SQW is deﬁned. Labels

(x, y, i) used in Eq. (24) are shown inside the blue polygons.
Label k, which runs from 0 to 2 used in Eq. (25), are shown

outside the blue polygons.

Vectors α associated with the blue polygons are

(cid:12)(cid:12)α(i)

x,y

(cid:11) =

(cid:0)(cid:12)(cid:12)x, y, i, 0(cid:11) +(cid:12)(cid:12)x, y, i, 1(cid:11)+
(cid:12)(cid:12)x, y, i, 2(cid:11)(cid:1) ,

1√
3

(24)

(21)

(22)

000001010110101011000100111100001212Γ0001119

model on the hexagonal lattice corresponds to SQWs on
planar graphs. Coined models on the squared and tri-
angular lattice correspond to SQW on graphs that have
4-cliques and 6-cliques as induced graphs, which are non-
planar.

B. Three-state coined QWs

An interesting question is can we deﬁne a SQW on a
directed graph? The answer seems to be negative because
if the walker is on vertex v1 that has an edge pointing to
v2 and there is no edge from v2 pointing to v1 then there

(cid:11)(cid:12)(cid:12)i(cid:11) =(cid:12)(cid:12)v2
is a coin value i so that S(cid:12)(cid:12)v1
there is no coin value i so that S(cid:12)(cid:12)v2

(cid:11)(cid:12)(cid:12)j(cid:11) for some j and
(cid:11)(cid:12)(cid:12)j(cid:11), where
(cid:11)(cid:12)(cid:12)i(cid:11) =(cid:12)(cid:12)v1

S is the shift operator of a coined model on the directed
graph. This means that S2 (cid:54)= I. Since the staggered
model uses only Hermitian and unitary operators to pro-
duce the evolution operator, it seems that we cannot de-
ﬁne SQWs on directed graphs that would be equivalent
to the coined model. There is an exception when the
directed edges are loops. In the next example, we show
that a coined model on a directed graph is equivalent to
a SQW on a graph that is in Class 2b\Class 2b(cid:48).

Figure 7: Panel (a) describes a directed graph on which a

three-state coined QW is deﬁned. Panel (b) describes a

2-tessellable graph on which an equivalent SQW is deﬁned.

Consider the ﬂip-ﬂop three-state coined QW deﬁned
on the directed graph of Fig. 7(a), which was analyzed in
Refs. [34–36]. The evolution operator is U = S(C(ρ)⊗I),
where C(ρ) is the coin operator



−ρ2

1 − ρ2

1 − ρ2

2ρ2 − 1

ρ(cid:112)2 − 2ρ2
ρ(cid:112)2 − 2ρ2

ρ(cid:112)2 − 2ρ2
ρ(cid:112)2 − 2ρ2
(cid:88)
(cid:0)(cid:12)(cid:12)n + 1, 2(cid:11)(cid:10)n, 0(cid:12)(cid:12) +(cid:12)(cid:12)n, 1(cid:11)(cid:10)n, 1(cid:12)(cid:12)+
(cid:12)(cid:12)n − 1, 0(cid:11)(cid:10)n, 2(cid:12)(cid:12)(cid:1) .

−ρ2

n∈Z

S =

 , (28)

(29)

with parameter ρ ∈ (0, 1) and S is the ﬂip-ﬂop shift op-
erator

The ﬂip-ﬂop shift operator is interesting because it does
not use information that is external to the graph such
as go to the right or go to the left and can be easily ex-
√
tended to generic graphs. The familiar three-state Grover
walk [37] is recovered taking ρ = 1/

3.

Coin C(ρ) is an orthogonal reﬂection because it has

(cid:114)

only one (+1)-eigenvector, which is given by
1 − ρ2

1 − ρ2

(cid:12)(cid:12)0(cid:11) + ρ(cid:12)(cid:12)1(cid:11) +

(cid:11) =

(cid:12)(cid:12)αρ

(cid:12)(cid:12)2(cid:11).

2

2

(cid:114)

(30)

Figure 6: Graph Γ(cid:48) is obtained from Γ of Fig. 5 by replacing
the blue polygons by single vertices. Vectors (cid:126)ex and (cid:126)ey are
shown in red and the unit vector (cid:126)a in blue. We are taking
m = 2, because there are two hexagons in the x-direction

and two hexagons in the y-direction. The boundary

conditions are cyclic following the directions (cid:126)ex and (cid:126)ey. The
coined QW on Γ(cid:48) with the Grover coin is equivalent to the
SQW on Γ because they have the same evolution operator.

(x, y, 0), and when i = 1, the polygon refers to a ver-
tex that in the honeycomb has the form (x, y, 1). The
ﬁrst set consists of inverted triangles in Γ and the lat-

ter consists of usual triangles. Vectors (cid:12)(cid:12)α(i)

(cid:11) need not

x,y

necessarily be in uniform superposition and can assume
diﬀerent values on diﬀerent vertices. When they are in
uniform superposition, they produce the Grover coin at
each vertex.

Vectors β associated with the red polygons are

(cid:12)(cid:12)β(k)

x,y

(cid:11) =

(cid:0)(cid:12)(cid:12)x, y, 0, k(cid:11)+
(cid:12)(cid:12)x − δ1k, y − δ2k, 1, k(cid:11)(cid:1) ,

1√
2

(25)
for 0 ≤ k ≤ 2. They must be in uniform superposition.
The evolution operator is U = U1U0, where U0 induces

the blue tessellation and is given by

U0 = 2

m−1(cid:88)

x,y=0

xy

xy

xy

xy

(cid:16)(cid:12)(cid:12)α(0)
(cid:12)(cid:12)(cid:17) − I,
(cid:12)(cid:12) +(cid:12)(cid:12)α(1)
(cid:11)(cid:10)α(0)
(cid:11)(cid:10)α(1)
(cid:16)(cid:12)(cid:12)β(0)
m−1(cid:88)
(cid:12)(cid:12) +(cid:12)(cid:12)β(1)
(cid:12)(cid:12)+
(cid:11)(cid:10)β(0)
(cid:11)(cid:10)β(1)
(cid:12)(cid:12)(cid:17) − I.
(cid:12)(cid:12)β(2)
(cid:11)(cid:10)β(2)

x,y=0

xy

xy

xy

xy

xy

xy

U1 = 2

and U1 induces the red tessellation and is given by

(27)

U1 can be further simpliﬁed and reduced into the form
of Eq. (23). U is equal to the evolution operator of the
coined model analyzed in Ref. [30, 31]. In the continuous-
time case, the honeycomb was analyzed in Refs. [32, 33]
using the evolution operator of the continuous-time QW
model.

There are three regular

lattices:
squared, triangular, and hexagonal. Only the coined

two-dimensional

C(ρ) =

(26)

000001010100eayΓ´xe(b)......n=0n=1n=2...n=0n=1n=2000111222...(a)(31)

n∈Z

U0 = 2

(cid:12)(cid:12) − I,

Fig. 7(b) using labels (n, i), 0 ≤ i ≤ 2, for the vertices of
the graph. Notice that U0 = C(ρ) ⊗ I.

(cid:12)(cid:12) − I. Deﬁne
Then C(ρ) = 2(cid:12)(cid:12)αρ
(cid:11)(cid:10)αρ
(cid:88)
(cid:12)(cid:12)n, αρ
(cid:11)(cid:10)n, αρ
where vectors (cid:12)(cid:12)n, αρ
(cid:11) induce the blue polygons of
(cid:16)(cid:12)(cid:12)β(0)
(cid:88)
(cid:12)(cid:12) +(cid:12)(cid:12)β(1)
(cid:11)(cid:10)β(1)
(cid:11)(cid:10)β(0)
(cid:12)(cid:12)n, 0(cid:11) +(cid:12)(cid:12)n + 1, 2(cid:11)
(cid:12)(cid:12)β(0)
(cid:11) =
(cid:11) =(cid:12)(cid:12)n, 1(cid:11).
(cid:12)(cid:12)β(1)

using the red tessellation, whose polygons are induced by

(cid:12)(cid:12)(cid:17) − I,

Deﬁne U1 by

U1 = 2

n∈Z

(32)

(33)

√

n

n

n

n

n

n

2

,

After simplifying U1, we obtain U1 = S. Then, the
SQW on the graph of Fig. 7(b) with evolution opera-
tor U = U1U0 is equivalent to the ﬂip-ﬂop coined QW
on the directed graph of Fig. 7(a). The blue tessellation
represents the internal coin states and the red tessellation
represents the shift operator.

VI. SEARCHING

Searching in the staggered model on a graph Γ is imple-
mented using partial tessellations. A partial tessellation
is a tessellation of an induced subgraph of Γ (distinct
from Γ). The vertices in the missing polygons are the
marked ones. If the evolution operator is U = U1U0 and
both U0 and U1 are unitary operators associated with
partial tessellations, then we demand that the tessella-
tion union covers all vertices. The vertices that belong
to only one polygon are the marked ones and the ver-
tices that belong to two polygons are the ordinary ones.
If U0 induces a partial tessellation and U1 induces a com-
plete tessellation, the tessellation union always covers all
vertices of the graph because the tessellation induced by
U1 covers all vertices. A SWQ using at least one partial
tessellation is called generalized SQW.

The initial condition is the uniform superposition of all
vertices in order to avoid any bias on the location of the
marked vertices, that is

(34)

(cid:88)

(cid:12)(cid:12)v(cid:11),

(cid:12)(cid:12)ψ0
(cid:11) =
1(cid:112)|V |
(cid:11) = U t(cid:12)(cid:12)ψ0
(cid:11), where t is the running time.

v∈V

where V is the vertex set of Γ. The searching algorithm
consists of applying U in succession, that is, the ﬁnal

state is(cid:12)(cid:12)ψt

We present an example of a generalized SQW on a
graph in Class 1 that ﬁnds a marked vertex faster than
classical random walks. Let us deﬁne a generalized SQW
on the graph of Fig. 8. This example is included neither
in the coined nor in the Szegedy model because there are

10

Figure 8: Graph in Class 1 with blue 8-clique partial
tessellation and red 4-clique complete tessellation. The
vertices in the central 8-clique are the marked ones. The

4-cliques at the boundary are identiﬁed establishing a

torus-like topology.

edges in the tessellation intersection. This graph is in
Class 1 because graph Γ4 of Fig. 2, for instance, is an in-
duced subgraph. The graph consists of n2 8-cliques linked
by 2n2 4-cliques with a torus-like topology, which is ob-
tained by identifying the external 4-cliques. This graph
is 2-tessellable as can be checked in Fig. 8, which depicts
the case n = 3. The blue polygons cover the 8-cliques and
the red polygons cover the 4-cliques. There is a missing
blue polygon associated with the central 8-clique charac-
terizing a partial blue tessellation. The marked vertices
are the ones in the central 8-clique. All vertices are in
the tessellation union. Notice that there are edges that
do not belong to the tessellation union. This can happen
in the generalized model.

The Hilbert space associated with this graph has di-
mension N = 8n2. The vectors associated with the blue
polygons are

and the vectors associated with the red polygons are

2

2

k=0

√
1

7(cid:88)

(cid:12)(cid:12)αxy
(cid:12)(cid:12)x, y, k(cid:11),
(cid:11) =
(cid:12)(cid:12)β(0)
(cid:12)(cid:12)x, y(cid:11)(cid:0)(cid:12)(cid:12)0(cid:11) +(cid:12)(cid:12)7(cid:11)(cid:1) +
(cid:11) =
(cid:12)(cid:12)x + 1, y(cid:11)(cid:0)(cid:12)(cid:12)3(cid:11) +(cid:12)(cid:12)4(cid:11)(cid:1) ,
(cid:12)(cid:12)x, y(cid:11)(cid:0)(cid:12)(cid:12)1(cid:11) +(cid:12)(cid:12)2(cid:11)(cid:1) +
(cid:12)(cid:12)β(1)
(cid:11) =
(cid:12)(cid:12)x, y + 1(cid:11)(cid:0)(cid:12)(cid:12)5(cid:11) +(cid:12)(cid:12)6(cid:11)(cid:1) ,

xy

xy

1
2
1
2
1
2
1
2

(35)

(36)

(37)
for 0 ≤ x, y ≤ n − 1 and the arithmetic with the labels

of(cid:12)(cid:12)x, y(cid:11) is performed modulo n. The central 8-clique is

located at x = 0, y = 0 (with no blue polygon) and the
vertices have labels (x, y, k), where k runs from 0 to 7, as
shown in Fig. 8.

01234567The evolution operator is U = U1U0, where U0 induces

the blue tessellation, given by

n−1(cid:88)

(cid:12)(cid:12)αxy

(cid:11)(cid:10)αxy

(cid:12)(cid:12) − I,

U0 = 2

x,y=0

(x,y)(cid:54)=(0,0)

11

and U1 induces the red tessellation, given by

(cid:16)(cid:12)(cid:12)β(0)

xy

(cid:11)(cid:10)β(0)

xy

(cid:12)(cid:12) +(cid:12)(cid:12)β(1)

xy

(cid:11)(cid:10)β(1)

xy

(cid:12)(cid:12)(cid:17) − I.

U1 = 2

n−1(cid:88)

x,y=0

To perform a numerical analysis to obtain the eﬃciency
of the search algorithm based on U , we take three steps.
Firstly, we ﬁx a value of n and we plot the probability
of ﬁnding the walker in a marked vertex as a function of
the number of steps. This probability is given by

7(cid:88)

(cid:10)0, 0, k(cid:12)(cid:12)U t(cid:12)(cid:12)ψ0

(cid:11),

p(t) =

(38)

(39)

(40)

k=0

where t is the number of steps and ψ0 is the initial condi-
tion, given by the uniform superposition. The ﬁrst panel
of Fig. 9 shows p(t) for n = 30 and the ﬁtting curve. We
take the ﬁrst maximum of the ﬁtting curve as the success
probability and the corresponding abscissa as the running
time of the searching algorithm. This process is repeated
for many values of n. Secondly, we analyze how the run-
ning time increases as a function of the number of vertices
N , which is depicted in the second panel of Fig. 9. The
ﬁtting line shows that the running time is approximately
0.32N 0.57. Thirdly, we analyze how the success prob-
ability decreases as a function of N , which is depicted
in the third panel of Fig. 9. The ﬁtting line shows that
the success probability is approximately 0.53/(log N )0.60.
Joining those three steps and extrapolating for large N ,
we conclude that the total running time with a constant
success probability is O(N 0.57 log0.30 N ) because we use
the amplitude ampliﬁcation scheme [38].

VII. DISCUSSIONS AND CONCLUSIONS

An interesting question in this context is:

Is there
some advantage of using the SQW model? A partial an-
swer comes from the following four points: (1) When
coined QWs are converted into the SQW model, it be-
comes clear that the coin and shift operators have the
same nature and the distinction between them vanishes.
What matters is the alternate action of two unitary op-
erators. For example, decoherence by breaking edges of
the graph, called percolation [39–41], can be applied to
the edges that represent the coin. (2) The SQW model
helps to establish the equivalence between the coined and
Szegedy’s model. (3) The SQW model is an important
step to unify the description of discrete-time QW mod-
els. (4) The SQW model helps to show that coined QWs
and continuous-time QWs are non-equivalent.
In the

Figure 9: Three plots that allow us to determine the time

complexity of the searching algorithm. The ﬁrst panel

depicts the probability of ﬁnding the walker in a marked
vertex as a function of the number of steps. The second

panel depicts the loglog plot of the running time as function

of the number of vertices N . The third panel depicts the
semilog plot of the inverse of the success probability as

function of N . In all of them we included the ﬁtting curve

using the least-square method.

continuous-time model, when a particle is on a vertex,
the action of the evolution operator produces a proba-
bility ﬂux that goes through all edges incident on that
vertex, while, in the coined model in the form of a stag-
gered model, the probability ﬂux goes through the ver-
tices of the blue polygons, avoiding the edges incident on
vertices that belong to red polygons, and, subsequently,
goes through the vertices of the red polygons avoiding
this time the edges in the blue polygons. This alternate
ﬂux is a characteristic of discrete-time QWs.

In this paper we have characterized which graphs are

2-tessellable by proving that a graph is 2-tessellable if
and only if its clique graph is bipartite. The class of 2-
tessellable SQWs is large enough to encompass Szegedy’s
model. Since it is deﬁned using the product of only
two local operators, we can employ Szegedy’s spectral
lemma [1, 2] to ﬁnd the spectral decomposition of the
evolution operator. We have also shown that 2-tessellable
SQWs with no edge in the tessellation intersection can
be cast into Szegedy’s model.

Another contribution of this paper is to characterize
the classes of graphs that help to establish the equiv-
alence among discrete-time QW models. We use four
classes:

• Class 1 – graphs that are not line graphs.
• Class 2a – graphs that are line graphs of nonbipar-

tite graphs.

• Class 2b – graphs that are line graphs of bipartite

graphs.

• Class 2b(cid:48) – graphs that obey conditions (1) to (3)

described on page 6.

We have shown that if a SQW with two tessellations is
deﬁned in Class 2b(cid:48) then it can be reduced to the coined
model and any SQW deﬁned in Classes 1 and 2a are not
equivalent to Szegedy’s QW. Besides, any SQW that can
be cast into Szegedy’s model must be in Class 2b, but
there are SQWs in Class 2b that cannot be cast into
Szegedy’s model.

We have provided two examples of nontrivial 2-
tessellable SQWs that are equivalent to the coined model,
which help to understand the connection between the
coined and staggered models. We have also given an ex-
ample of a searching algorithm using a SQW on a graph
in Class 1, which cannot be reduced to Szegedy’s model.
A numerical analysis has shown that this algorithm is
more eﬃcient than its classical analogue using random
walks.

APPENDICES

Appendix A: Glossary of terms in graph theory

This appendix compiles the main deﬁnitions of graph

theory used in this work [42–44].

A simple and undirected graph Γ(V, E) is deﬁned by a
set V of vertices or nodes and a set E of edges so that
each edge links two vertices and two vertices are linked
by at most one edge. Two vertices linked by an edge are
called adjacent. Two edges that share a common ver-
tex are also called adjacent. A graph is connected when
there is a path between every pair of vertices, otherwise
it is called disconnected. The complete graph is a simple
graph in which every pair of distinct vertices is connected
by an edge. A directed graph is a graph whose edges have

12

a direction associated with them. A multigraph is an ex-
tension of the deﬁnition of graph that allows multiple
edges between vertices. We use the term graph as syn-
onym of simple and undirected graph.
A subgraph Γ(cid:48)(V (cid:48), E(cid:48)), where V (cid:48) ⊂ V and E(cid:48) ⊂ E, is
an induced subgraph of Γ(V, E) if it has exactly the edges
that appear in Γ over the same vertex set. If two vertices
are adjacent in Γ they are also adjacent in the induced
subgraph. A clique is a subset of vertices of a graph
such that its induced subgraph is complete. A maximal
clique is a clique that cannot be extended by including
one more adjacent vertex. A maximum clique is a clique
of maximum possible size. A clique can have one vertex.
Some references in graph theory use the term “clique” as
synonym of maximal clique. We avoid this notation here.
A bipartite graph is a graph whose vertex set V is the
union of two disjoint sets X and X(cid:48) so that no two ver-
tices in X are adjacent and no two vertices in X(cid:48) are
adjacent. A complete bipartite graph is a bipartite graph
such that every possible edge that could connect ver-
tices in X and X(cid:48) is part of the graph and is denoted by
K|X|,|X(cid:48)|, where |X| and |X(cid:48)| are the cardinalities of sets
|X| and |X(cid:48)|, respectively.

A clique graph K(Γ) of a graph Γ is a graph that every
vertex represents a maximal clique of Γ and two vertices
of K(Γ) are adjacent if and only if the underlying maxi-
mal cliques in Γ share at least one vertex in common.

A clique partition of a graph Γ is a set of cliques of Γ
that contains each edge of Γ exactly once. A minimum
clique partition is a clique partition with the smallest
set of cliques. A clique cover of a graph Γ is a set of
cliques of Γ that contains each edge of Γ at least once. A
minimum clique cover is a clique cover with the smallest
set of cliques.

A diamond graph is a graph with 4 vertices and 5 edges
consisting of a 4-clique minus one edge or two triangles
sharing a common edge. A graph is diamond-free if no
induced subgraph is isomorphic to a diamond graph.

A line graph (or derived graph or interchange graph)
of a graph Γ (called root graph) is another graph L(Γ)
so that each vertex of L(Γ) represents an edge of Γ and
two vertices of L(Γ) are adjacent if and only if their cor-
responding edges share a common vertex in Γ.

A matching is a set of edges without common vertices.
A vertex is matched if it is an endpoint of one of the
edges in the matching. A perfect matching is a matching
in which all vertices of the graph are matched.

A planar graph is a graph that can be drawn in a two-
dimensional plane in such a way that no edges cross each
other.

A proper coloring or simply coloring of a loopless graph
is a labeling of the vertices with colors such that no two
vertices sharing the same edge have the same color. A k-
colorable graph is the one whose vertices can be colored
with at most k colors so that no two adjacent vertices
share the same color. This concept can be used for edges
and other graph structures.

Appendix B: Deﬁnition of Szegedy’s QW

Let us deﬁne Szegedy’s QW model [2] using the de-
scription given in Ref. [3]. Consider a connected bipartite
graph Γ(X, Y, E), where X, Y are disjoint sets of vertices
and E is the set of non-directed edges. Let

(cid:18) 0 A

(cid:19)

AT 0

(B.1)

where

be the biadjacency matrix of Γ(X, Y, E). Using A, deﬁne
P as a probabilistic map from X to Y with entries pxy.
Using AT , deﬁne Q as a probabilistic map from Y to X
with entries qyx. If P is an m × n matrix, Q will be an
n × m matrix. Both are right-stochastic, that is, each
row sums to 1. Using P and Q, it is possible to deﬁne
unit vectors

pxy eiθxy(cid:12)(cid:12)x, y(cid:11),
xy(cid:12)(cid:12)x, y(cid:11),
(cid:12)(cid:12)φx(cid:48)(cid:11) = δxx(cid:48) and
that have the following properties: (cid:10)φx
(cid:12)(cid:12)ψy(cid:48)(cid:11) = δyy(cid:48). In Szegedy’s original deﬁnition, θxy =
(cid:10)ψy

θ(cid:48)
xy = 0. We call extended Szegedy’s QW the version
that allows nonzero angles.

(cid:11) =
(cid:11) =

(cid:88)
(cid:88)

y∈Y

(cid:12)(cid:12)φx
(cid:12)(cid:12)ψy

qyx eiθ(cid:48)

√

√

x∈X

(B.2)

(B.3)

13

Deﬁnition B.1 Szegedy’s QW on a bipartite graph
Γ(X, Y, E) with biadjacent matrix (B.1) is deﬁned on a
Hilbert space Hmn = Hm ⊗ Hn, where m = |X| and

n = |Y |, the computational basis of which is(cid:8)(cid:12)(cid:12)x, y(cid:11) : x ∈
X, y ∈ Y(cid:9). The QW is driven by the unitary operator

W = R1 R0,

(cid:12)(cid:12)φx
(cid:11)(cid:10)φx
(cid:12)(cid:12)ψy
(cid:11)(cid:10)ψy

(cid:12)(cid:12) − I,
(cid:12)(cid:12) − I.

(cid:88)
(cid:88)

x∈X

y∈Y

R0 = 2

R1 = 2

(B.4)

(B.5)

(B.6)

Notice that operators R0 and R1 are unitary and Hermi-
tian (R2

0 = R2

1 = I).

ACKNOWLEDGEMENTS

RP acknowledges ﬁnancial

from Faperj
(grant n. E-26/102.350/2013)
and CNPq (grants
n. 304709/2011-5, 474143/2013-9, and 400216/2014-0).
The author also acknowledges useful discussions with
Franklin Marquezino.

support

[1] R. Portugal, R. A. M. Santos, T. D. Fernandes, and D. N.
Gon¸calves. The staggered quantum walk model. Quan-
tum Information Processing, 15(1):85–101, 2016.

[2] Mario Szegedy. Quantum speed-up of Markov chain
based algorithms. In Proceedings of the 45th Symposium
on Foundations of Computer Science, pages 32–41, 2004.
[3] Renato Portugal. Establishing the equivalence between
Szegedy’s and coined quantum walks using the staggered
model. Quantum Information Processing (accepted),
arXiv:1509.08852, 2016.

[4] A. Ambainis, J. Kempe, and A. Rivosh. Coins make
quantum walks faster. In Proceedings of the 16th ACM-
SIAM Symposium on Discrete Algorithms, pages 1099–
1108, 2005.

[5] J. B. Kogut and L. Susskind. Hamiltonian formulation
of Wilson’s lattice gauge theories. Phys. Rev. D, 11:395–
408, 1975.

[6] Leonard Susskind. Lattice fermions. Phys. Rev. D,

16:3031–3039, 1977.

[7] H.S. Sharatchandra, H.J. Thun, and P. Weisz. Susskind
fermions on a euclidean lattice. Nuclear Physics B,
192(1):205 – 236, 1981.

[8] John B. Kogut. An introduction to lattice gauge theory

[11] A. Patel, K.S. Raghunathan, and P. Rungta. Quantum
random walks do not need a coin toss. Phys. Rev. A,
71:032347, 2005.

[12] M. Hamada, N. Konno, and E. Segawa. Relation between
coined quantum walks and quantum cellular automata.
RIMS Kokyuroku, 1422:1–11, 2005.

[13] R. Portugal, S. Boettcher, and S. Falkner.

One-
dimensional coinless quantum walks. Phys. Rev. A,
91:052319, 2015.

[14] H. Krovi, F. Magniez, M. Ozols, and J. Roland. Quantum
walks can ﬁnd a marked element on any graph. Algorith-
mica (on-line), pages 1–57, 2015.

[15] Paul Benioﬀ. Space searches with a quantum robot. AMS

Contemporary Math Series, 305, 2002.

[16] N. Shenvi, J. Kempe, and K. B. Whaley. Quantum
random-walk search algorithm. Phys. Rev. A, 67:052307,
2003.

[17] A. Ambainis, R. Portugal, and N. Nahimov. Spatial
search on grids with minimum memory. Quantum In-
formation & Computation, 15:1233–1247, 2015.

[18] Jayme. L. Szwarcﬁter. Recent Advances in Algorithms
and Combinatorics, chapter: A Survey on Clique Graphs,
pages 109–136. Springer, New York, 2003.

and spin systems. Rev. Mod. Phys., 51:659–713, 1979.

[19] Lowell W. Beineke. Characterizations of derived graphs.

[9] David A. Meyer. From quantum cellular automata to
quantum lattice gases. Journal of Statistical Physics,
85(5-6):551–574, 1996.

[10] David A Meyer. On the absence of homogeneous scalar
unitary cellular automata. Physics Letters A, 223(5):337
– 340, 1996.

Journal of Combinatorial Theory, 9(2):129–135, 1970.

[20] J´ozsef Krausz. D´emonstration nouvelle d’une th´eor`eme
de Whitney sur les r´eseaux. Mat. Fiz. Lapok, 50:75–85,
1943.

[21] Dale Peterson. Gridline graphs: a review in two dimen-
sions and an extension to higher dimensions. Discrete

14

Applied Mathematics, 126(23):223 – 239, 2003.

2014.

[22] F. Magniez, M. Santha, and M. Szegedy. Quantum algo-
rithms for the triangle problem. SIAM Journal on Com-
puting, 37(2):413–424, 2007.

[23] G. D. Paparo, M. M¨uller, F. Comellas, and M. A. Martin-
Delgado. Quantum Google in a Complex Network. Sci-
entiﬁc Reports, 3, 2013.

[24] D. Aharonov, A. Ambainis, J. Kempe, and U. Vazirani.
Quantum walks on graphs.
In Proceedings of the 33rd
ACM Symposium on Theory of computing, pages 50–59,
2001.

[25] S.E. Venegas-Andraca. Quantum walks: a comprehensive
review. Quantum Information Processing, 11(5):1015–
1106, 2012.

[26] Norio Konno. Quantum walks. In Uwe Franz and Michael
Schrmann, editors, Quantum Potential Theory, volume
1954 of Lecture Notes in Mathematics, pages 309–452.
Springer, Berlin, 2008.

[27] Vivien Kendon. Decoherence in quantum walks - a re-
view. Mathematical Structures in Computer Science,
17(6):1169–1220, 2007.

[28] Renato Portugal. Quantum Walks and Search Algo-

rithms. Springer, New York, 2013.

[29] K. Manouchehri and J. Wang. Physical Implementation

of Quantum Walks. Springer, Berlin, Heidelberg, 2014.

[30] G. Abal, R. Donangelo, F. L. Marquezino, and R. Por-
tugal. Spatial search on a honeycomb network. Math-
ematical Structures in Computer Science, 20:999–1009,
2010.

[31] C. Lyu, L. Yu, and S. Wu. Localization in quantum walks
on a honeycomb network. Phys. Rev. A, 92:052305, 2015.
[32] I. Foulger, S. Gnutzmann, and G. Tanner. Quantum
search on graphene lattices. Phys. Rev. Lett., 112:070504,

[33] I. Foulger, S. Gnutzmann, and G. Tanner. Quantum
walks and quantum search on graphene lattices. Phys.
Rev. A, 91:062323, 2015.

[34] M. Stefanak, I. Bezdekova, and I. Jex. Continuous defor-
mations of the grover walk preserving localization. The
European Physical Journal D, 66:142, 2012.

[35] S. Falkner and S. Boettcher. Weak limit of the three-state
quantum walk on the line. Phys. Rev. A, 90:012307, 2014.
[36] Takuya Machida. Limit theorems of a 3-state quantum
walk and its application for discrete uniform measures.
Quantum Information & Computation, 15(5&6):406–418,
2015.

[37] N. Inui, N. Konno, and E. Segawa. One-dimensional
three-state quantum walk. Phys. Rev. E, 72:056112, 2005.
[38] M. Boyer, G. Brassard, P. Høyer, and A. Tapp. Tight
bounds on quantum searching. Forstschritte Der Physik,
4:820–831, 1998.

[39] A. Romanelli, R. Siri, G. Abal, A. Auyuanet, and R. Do-
nangelo. Decoherence in the quantum walk on the line.
Physica A, 347(C):137–152, 2005.

[40] A. C. Oliveira, R. Portugal, and R. Donangelo. Decoher-
ence in two-dimensional quantum walks. Physical Review
A, 74(012312), 2006.

[41] B. Koll´ar, T. Kiss, J. Novotn´y, and I. Jex. Asymptotic
dynamics of coined quantum walks on percolation graphs.
Phys. Rev. Lett., 108:230505, 2012.

[42] Reinhard Diestel. Graph Theory, volume 173 of Graduate

texts in mathematics. Springer, 2012.

[43] A. Brandst¨adt, V. B. Le, and J. P. Spinrad. Graph
Classes: A Survey. Society for Industrial and Applied
Mathematics, Philadelphia, PA, USA, 1999.

[44] Frank Harary. Graph Theory. Addison-Wesley Series in

Mathematics. Perseus Books, 1994.

