Towards the Emulation of the Cardiac Conduction

System for Pacemaker Testing

Eugene Yip, Sidharta Andalam, Partha S. Roop, Avinash Malik, Mark Trew, Weiwei Ai, and Nitish Patel

1

6
1
0
2

 
r
a

 

M
8
1

 
 
]

Y
S
.
s
c
[
 
 

2
v
5
1
3
5
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—The heart is a vital organ that relies on the orches-
trated propagation of electrical stimuli to coordinate each heart
beat. Abnormalities in the heart’s electrical behaviour can be
managed with a cardiac pacemaker. Recently, the closed-loop
testing of pacemakers with an emulation (real-time simulation)
of the heart has been proposed. An emulated heart would
provide realistic reactions to the pacemaker as if it were a real
heart. This enables developers to interrogate their pacemaker
design without having to engage in costly or lengthy clinical
trials. Many high-ﬁdelity heart models have been developed, but
are too computationally intensive to be simulated in real-time.
Heart models, designed speciﬁcally for the closed-loop testing of
pacemakers, are too abstract to be useful in the testing of physical
pacemakers.

In the context of pacemaker testing, this paper presents
a more computationally efﬁcient heart model that generates
realistic continuous-time electrical signals. The heart model is
composed of cardiac cells that are connected by paths. Signiﬁcant
improvements were made to an existing cardiac cell model to
stabilise its activation behaviour and to an existing path model
to capture the behaviour of continuous electrical propagation.
We provide simulation results that show our ability to faithfully
model complex re-entrant circuits (that cause arrhythmia) that
existing heart models can not.

Index Terms—cardiac, electrophysiology, emulation, hybrid,

automata, modelling.

I. INTRODUCTION

The human heart is a vital organ and is responsible for
pumping blood around the body to other vital organs. Patients
can develop abnormal cardiac behaviour, such as bradycardia
(slow heart rate). Cardiac pacemakers can treat bradycardia by
monitoring the patient’s heart and delivering electrical stimuli
to the heart when needed. Pacemakers are life-critical medical
devices that must be certiﬁed against stringent safety stan-
dards, such as IEC 60601-1 [1]. Certiﬁcation is a costly and
time consuming process, yet 1,210 computer-related recalls
for medical devices were reported to the US Food and Drug
Administration between 2006 and 2011 [2].

Pacemakers must be validated by clinical trials as part of the
certiﬁcation process. This requires the pacemaker to be tested
in closed-loop with a patient’s heart. Since clinical trials are
the only times when a pacemaker is tested on a real heart, they
provide a glimpse of how well the pacemaker performs in the
real world. Clinical trials are usually performed late in the
product development phase, because they are costly and time

E. Yip was and S. Andalam, P. S. Roop, A. Malik, W. Ai, and N. Patel are
with the Department of Electrical and Computer Engineering, the University
of Auckland, New Zealand. M. Trew is with the Auckland Bioengineering
Institute, the University of Auckland, New Zealand.

E-mails: {eyip002, wai484}@aucklanduni.ac.nz and {sid.andalam, p.roop,

avinash.malik, nd.patel, m.trew}@auckland.ac.nz

consuming to manage. Thus, issues found during a clinical
trial may be costly and time consuming to ﬁx and a new
clinical trial may be required to re-evaluate the pacemaker.
Some limitations of clinical trials include: potentially small
sample of patients that are not representative of the general
population, difﬁculty in recruiting patients with speciﬁc heart
conditions, difﬁculty in interrogating a patient’s heart to better
understand design issues, and inherent risk to the patients.

Recently, the emulation of the heart has been proposed to
facilitate the closed-loop testing of pacemakers [3]. Emulation
is the real-time simulation of a heart model that can react to
a pacemaker’s electrical shocks and also output the heart’s
electrical activities for the pacemaker to sense. High-ﬁdelity
heart models provide realistic behaviour but are computation-
ally intensive [4], [5], thus, precluding them from emulation.
The following beneﬁts can be gained if high-ﬁdelity heart
models can be emulated: cheaper and quicker testing than
with clinical trials, earlier testing of pacemakers in closed-
loop in the development phase and outside of clinics, greater
testing coverage by emulating a range of heart conditions,
better understanding of design issues by interrogating the
emulated heart (e.g., replaying problematic test cases), and
having minimal risk to the patients. We envision the use of
emulated hearts alongside clinical trials to help accelerate the
certiﬁcation process.

In the context of testing cardiac pacemakers, a heart model

should possess the following properties:

• Abstraction: The model focusses on the important as-
pects by ignoring irrelevant details. For example, the
cardiac conduction system is the most important aspect
because it
is responsible for coordinating the heart’s
electrical activities. Irrelevant details may include hemo-
dynamics (e.g., blood ﬂow), mechanics (e.g., muscle
movement), and chemistry (e.g., cellular reactions).

• Accuracy: The model faithfully represents the cardiac
conduction system and demonstrates realistic behaviours.
A high-ﬁdelity model provides an accurate reﬂection of
reality but requires high computational power. A lower
ﬁdelity model requires less computational power but at
the risk of providing an inaccurate reﬂection of reality.
• Prediction: The model can answer questions about a real
heart, such as “How does the heart respond when setting
X of the pacemaker is used?”

• Inexpensiveness: The model should be cheaper and faster
to construct and use the emulated heart than to conduct
a clinical trial.

The heart models of Chen et al. [6], Jiang et al. [7], and

M´ery and Singh [8] consider just the emergent features of
the cardiac conduction system, which is composed of millions
of cells. They model the conduction system as a static, two-
dimensional, sparse network of cardiac cells. Jiang et al. [3]
also developed a hardware prototype that emulates the cardiac
conduction system as discrete events. When the logic of a
pacemaker’s software is tested in closed-loop with a heart
model, it may be sufﬁcient to use a heart model that produces
and responds to discrete events [7], [8]. However, when a
physical implementation of the pacemaker is tested in closed-
loop with a heart model, it is necessary to use a heart model
that produces and responds to continuous-time signals. This
is because the physical pacemaker expects a real heart as its
environment. The heart model of Chen et al. [6] simulates
the conduction system as continuous-time signals. However,
the signals are too abstract and bear little resemblance with
reality. Thus, the model lacks the accuracy and, therefore, the
predictive power.

A. Contributions

This paper reviews the state-of-the-art heart models [3], [6]–
[9] that have been designed speciﬁcally for the closed-loop
testing of cardiac pacemakers. Without introducing signiﬁcant
computational complexity, we propose signiﬁcant improve-
ments to the modelling of the cardiac conduction system to
create a heart model that produces realistic continuous-time
electrical signals that a pacemaker would sense. Our model
faithfully models forward and backward conduction, which is
essential in the modelling of complex re-entrant circuits [10]–
[12] that cause arrhythmia (abnormal heart rate). Our primary
contributions are:

• We develop a continuous-time model of the conduction
system as a two-dimensional network of cardiac cells.
Each cell produces an accurate continuous-time signal
that represents its electrical activities. These signals are
propagated continuously along the paths between the
cells. Complex conduction behaviours, such as arrhyth-
mias caused by re-entrant circuits, can be reproduced
faithfully by our model. Our heart model is easily cus-
tomised by modifying various parameters of the conduc-
tion system.

• Each cardiac cell in our heart model is based on the
hybrid automaton developed by Ye et al. [13]. We have
greatly improved the design of the hybrid automaton
to overcome the following limitations: the cell becomes
unstable when it is stimulated in quick succession, and
the cell is too sensitive to electrical stimulation from
its neighbours. Our improvements are elaborated in Sec-
tion IV.

• Each path in our heart model is modelled with timed
automata. The path model is inspired by that of Jiang
et al. [7] that was designed to propagate discrete events
rather than continuous-time signals. Our path model is
elaborated in Section V.

• We demonstrate in Section VII that a MathWorks R(cid:13)
Simulink R(cid:13) and Stateﬂow R(cid:13) implementation of our heart
model can simulate a wide range of heart conditions with
realistic results.

2

Fig. 1. Schematic of the heart and conduction system.

B. Paper Layout

Section II provides a background to the cardiac conduction
system and the important features of electrical activities that
are sensed by a pacemaker. Section III reviews the state-of-
the-art heart models for closed-loop testing of pacemakers.
Section IV reviews the computationally efﬁcient hybrid au-
tomata model of cardiac cells developed by Ye et al. [13].
We identify the limitations encountered with Ye et al.’s model
during simulation and how we corrected them. Section V
describes our path model that handles the propagation of
continuous-time signals. In Section VI, we create our proposed
heart model by composing instances of our cardiac cell and
path models into a network that replicates the conduction
pathway. Section VII evaluates the capabilities of our proposed
heart model with the recent heart model of Chen et al. [6].
Section VIII concludes this paper and discusses future work
for improving the proposed heart model.

II. BACKGROUND

The heart pumps blood around the body in a rhythmic
manner. Figure 1 is a schematic of the heart and shows
its four chambers: the right and left atriums and ventricles.
The right atrium and ventricle are responsible for pumping
deoxygenated blood through the lungs, while the left atrium
and ventricle are responsible for pumping oxygenated blood
through the body. The contractions of the chambers are coordi-
nated by electrical stimuli that propagate throughout the heart’s
conduction system. The conduction pathways are shown in
Figure 1 as solid black lines with dots at important locations.
The names of these locations are labelled with an acronym
and their full forms are given in Table I.

A. Cardiac Cycle

This section describes the major actions of the heart during
one cardiac cycle (one heart beat) with the help of Figure 2.
In the ﬁrst phase of the cardiac cycle, Figure 2a, the sinoa-
trial (SA) node generates an electrical stimulus that spreads
quickly throughout the right and left atriums. This causes

3

FULL NAMES OF NODES ALONG THE CONDUCTION PATHWAYS.

TABLE I

AV
BB
BH
CS
CT
FP
LA
LBB
LV
LVA

Atrioventricular
Bachmann’s bundle
Bundle of His
Coronary sinus
Crista terminalis
Fast path
Left atrium
Left bundle branch
Left ventricle
Left ventricular apex

LVS
OC
RA
RBB
RV
RVA
RVS
SA
SP

Left ventricular septum
Os cordis
Right atrium
Right bundle branch
Right ventricle
Right ventricular apex
Right ventricular septum
Sinoatrial
Slow path

(a) Phase 1

(b) Phase 2

(c) Phase 3

(d) Phase 4

Fig. 2. Phases of the cardiac cycle. Adapted from http://philschatz.com/
anatomy-book/contents/m46664.html#sinoatrial-sa-node.

the atriums to contract, pumping blood from the atriums into
the ventricles. In the second phase, Figure 2b, the electrical
stimulus reaches the atrioventricular (AV) node and is delayed
momentarily before it continues down into the ventricles.
This delay is very important because it gives the atriums
enough time to contract and fully ﬁll the (relaxed) ventricles.
In the third phase, Figure 2c, the electrical stimulus reaches
the right and left ventricular apexes and travels out to the
fast conducting Purkinje ﬁbers. This causes the right and left
ventricles to contract and pump out blood. In the fourth phase,
Figure 2d, the ventricles relax after pumping out all their
blood.

In a normal heart, each cardiac cycle begins from the
SA node, which generates periodic electrical stimuli
that
spread through the conduction system. The following sections
describe the genesis of the heart’s electrical activity and how
it appears to a pacemaker. Finally, we describe some common

Fig. 3. Phases of the action potential. Adapted from [14].

arrhythmias that a heart model should aim to capture.

B. Action Potentials of Cardiac Cells

Most of the heart’s electrical activities, that a pacemaker
senses, are generated by the myocytes (muscle cells) [15]. A
cell’s electrical activities result from the movement of ions
across its membrane, creating potential differences. The cell’s
electrical response to an electrical stimulus is described by
its action potential [16]. Figure 3 shows the four phases of
a typical action potential, which plots the cell’s membrane
potential over time. In the resting phase, the cell is inactive
and has a resting potential of approximately −85mV . The
cell enters the stimulated phase when excited electrically by
its neighbours or by an artiﬁcial pacemaker. The cell returns
to the resting phase if its membrane potential fails to cross
the threshold voltage VT of approximately −40mV when
the excitation stops. Otherwise, the cell enters the upstroke
phase and depolarises by allowing ions to move rapidly across
its membrane, causing its membrane potential to reach an
overshoot voltage VO of approximately +45mV . Then the cell
enters the plateau and early repolarisation phase. The cell
contracts and starts to repolarise, i.e., its membrane potential
starts to return to its resting potential. When the membrane
potential is less than the voltage VR of approximately −55mV ,
the cell has relaxed and returned to the resting phase.
All cardiac cells can only respond to subsequent excitations
in the later portion of its action potential, called the relative re-
fractory period. However, the membrane potential must cross
a higher threshold voltage. Figure 4 shows a normal action
potential at 0ms and some possible secondary excitations
between 160 and 300ms. For a secondary excitation at 180ms,
the resulting action potential has a lower overshoot voltage
VO and a shorter action potential duration. The secondary
excitation at 300ms results in a more normal action potential
because the cell has rested for a longer period.

Prominent biophysical cardiac cell models, which explain
the genesis of action potentials in terms of ionic ﬂow, in-
clude Luo-Rudy [16] and Hodgkin-Huxley [18]. Although
biophysical models have high-ﬁdelity, they are computation-
ally intensive. Ye et al. [13], [19] create computationally
efﬁcient cardiac cell models by considering just the emergent
features of the biophysical models, i.e., the action potential

4

(a) Three action potentials (APs) from different regions of the heart and
their corresponding electrograms (EGMs). Adapted from [21].

Fig. 4. Dynamic behaviour of secondary excitations. Adapted from [17].

and its dynamic response to secondary excitation. It should be
noted that the action potential duration of a human ventricular
myocyte is approximately twice that of an atrial myocyte.

C. Action Potentials and the Electrogram

A key function of any pacemaker is to sense the heart’s
electrical activity, by using one or more electrodes attached
to the inside of the heart wall. The electrical activity of
the cardiac cells in the electrode’s immediate vicinity are
sensed most strongly. A recording of the sensed activities is
called an electrogram (EGM) [20]. Figure 5a shows three
action potentials and their corresponding EGMs. To help
understand the EGM, Figure 5b shows that the EGM deﬂects
up and down whenever an electrical wavefront passes under
the electrodes [15]. The faster that the wavefront passes, the
steeper the deﬂection. In Figure 5a, two distinct deﬂections can
be seen in each EGM and they correspond with the upstroke
and resting phases of their respective action potential.

A heart model that produces distorted action potentials will
also produce distorted EGMs. Such distorted EGMs cannot be
used to reliably test a pacemaker’s ability to discern the timing
of important cardiac activities. Moreover, the predictive power
of a heart model is compromised when the action potentials
are distorted. For example, a heart model with accurate action
potentials might predict that a cell goes into its upstroke phase
because its neighbours’ voltages are high enough. However,
a heart model with distorted action potentials might instead
predict that the cell returns to its resting phase because its
neighbours’ voltages are too low. Thus, arrhythmia would be
predicted incorrectly.

(b) EGM deﬂections due to a travelling electrical wave-
front. Adapted from [15].

Fig. 5. Electrograms (EGMs).

are some common arrhythmias [11], [12], [20] that a heart
model for pacemaker testing should aim to capture:

• Heart block: This occurs when electrical stimuli has dif-
ﬁculty propagating through the AV node. The propagation
of the stimuli may be delayed for longer than usual or
may be prevented from propagating altogether.

• AV node re-entrant tachycardia: This occurs when
a re-entry circuit forms around the AV node, causing
tachycardia.

• Bundle branch block: This occurs when electrical stim-
uli travels slower or not at all down one of the bundle
branches.

• Wolff-Parkinson-White syndrome: This occurs when
there is an extra conduction pathway between the atriums
and ventricles. The extra pathway allows electrical stimuli
to bypass the AV node and create a feedback loop
between the atriums and ventricles.

• Long Q-T syndrome: This occurs when the repolarisa-
tion of the ventricles is delayed, i.e., their action potential
durations are longer than usual.

• VA conduction: This occurs when electrical stimuli from
the ventricles conduct backwards through the conduction
pathways and into the atriums.

D. Common Arrhythmias

Arrhythmias can be caused by abnormalities in the gener-
ation and propagation of action potentials through the con-
duction system. The abnormalities may be due to congenital
defects, side-effects of medication, or cell death. The following

Pacemakers can also cause arrhythmias when they are
unable to correctly sense the timing of the heart’s electrical
activities. For example, pacemaker-mediated tachycardia is
caused by the pacemaker inadvertently conducting electrical
stimuli from the ventricles back to the atriums. Pacemakers
that deliver electrical stimuli that are not synchronised with

5

QUALITATIVE COMPARISON OF HEART MODELS THAT ARE DESIGNED FOR TESTING CARDIAC MEDICAL DEVICES. AP = ACTION POTENTIAL. HA =

HYBRID AUTOMATA. TA = TIMED AUTOMATA.

TABLE II

Reality

Real Heart [22]

Less Abstract ←
Hi-Fi [23], [24]

Continuous APs
from biophysical
processes [25]

Continuous APs
from biophysical

models [25]

Continuous
propagations

from biophysical
processes [10]

3D tissue (layers

of bundles of
ﬁbers) that
deforms

Continuous
propagations
from reaction-

diffusion

equations [25]

3D ﬁnite-volume

that deforms

Cell
Model

Path
Model

Spatial
Model

UoA

Oxford [6]

UPenn [3], [7]

LORIA [8]

MES [9]

Heart Models

→ More Abstract

Continuous APs
from improved
Stony Brook

Continuous APs
from simpliﬁed
Stony Brook

HA [13]
Continuous
propagations
from TA and
contribution

function

HA [19]
Continuous
propagations

from

contribution

function

Discrete APs

from TA

Discrete

propagations

from TA

Discrete APs
from logico-
mathematics

Discrete

propagations
from cellular

automata

2D, static, and sparse network of cells along the conduction pathway

Continuous AV
signal generators

mimic whole
heart electrical

activity

Black boxes of

major heart
components

the heart’s cardiac rhythm can cause the heart to ﬁbrillate [26],
i.e., twitch uncontrollably.

III. RELATED WORK

the heart has been well

The electrophysiology of

re-
searched [10], [27], resulting in the proposal of many theories.
These theories are validated by creating high-ﬁdelity whole
heart models [23], [24] and ascertaining if they can reproduce
experimental observations, i.e., the models are accurate, re-
alistic, and predictive. These high-ﬁdelity models are useful
in predicting the prognosis of patient-speciﬁc heart condi-
tions [28] and in assisting with interventional cardiology [29].
On the other hand, abstract heart models have been de-
veloped with the goal of enabling the closed-loop testing
of cardiac pacemakers. Table II provides a qualitative com-
parison of existing heart models. The abstract heart models
from Oxford [6], UPenn [3], [7], LORIA [8], and MES [9]
are designed for testing the pacemaker logic. To enable the
formal veriﬁcation of the pacemaker logic, Oxford, UPenn,
and LORIA use hybrid automata (HA) or timed automata (TA)
to develop formal models of the cardiac conduction system.
UPenn and LORIA model the transitions between the resting,
upstroke, and early refractory phases of the action potential as
discrete events on a continuous timeline. These discrete events
are propagated between cells and the propagation is either
successful or unsuccessful. These abstractions result in heart
models that may produce more behaviours than is possible by
a real heart, i.e., an over-approximation. Thus, all problems
detected during closed-loop testing must be validated against
a more concrete heart model [7].

The heart model from Oxford [6] is more concrete than
those from UPenn and LORIA because Oxford models the
action potentials as continuous signals. Oxford uses a simpli-
ﬁed model of the cardiac cell that Ye et al. [19] developed
with hybrid automata. Oxford incorporates a g(~v) function
into the cell model to capture the continuous electrical ac-
tivity that a cell receives from its neighbours. However, the
g(~v) function does not consider the directional behaviour of
electrical propagation due to the refractory period of cardiac
cells. Noting these limitations, Sections IV and V describe our

Fig. 6. Comparison of the action potentials (APs) produced by Luo-Rudy [16],
Stony Brook [13], Oxford [6], and our improved version (UoA). Note that
the AP of UoA overlaps that of Stony Brook’s because they are identical.

improvements to the cell and path models. Our heart model
can faithfully simulate complex re-entrant circuits without a
signiﬁcant increase in computational complexity.

IV. CARDIAC CELL MODEL

The Oxford heart model [6] uses a simpliﬁed version of the
isolated cardiac cell model developed by Stony Brook [19].
The Stony Brook model is itself a simpliﬁcation of the Luo-
Rudy model [16] because it only models the action potential
and its dynamic response to secondary excitation. The Stony
Brook model uses three piecewise-continuous variables, called
vx, vy, and vz, to capture different features of the action
potential. The sum of these three variables produces the
action potential. The Oxford heart model discards the vy and
vz variables and retains just the vx variable. Unfortunately,
Figure 6 shows that the resulting action potential is no longer
realistic and this diminishes the predictive power of Oxford’s
heart model (Section II-C). Thus, for our heart model, we
retain all three variables and we use an updated Stony Brook
cardiac cell model [13]. This section describes the Stony Brook
model in more detail and our improvements that overcome
some of the model’s limitations.

xvx
yvy
zvz

q0 : Resting & FR
˙vx = α0
˙vy = α0
˙vz = α0
v = vx − vy + vz
{v ≤ VR}

[v ≤ VR]

v′
x = vx
v′
y = vy
v′
z = vz

xvx
yf (θ)vy
zvz

q3 : Plateau & ER
˙vx = α3
˙vy = α3
˙vz = α3
v = vx − vy + vz
{v ≥ VR}

[Vin 6= 0]
v′
x = vx
v′
y = vy
v′
z = vz

θ′ = v/VR

[Vin ≤ 0 ∧ v < VT ]

v′
x = vx
v′
y = vy
v′
z = vz

[v ≥ VO − 80.1√θ]

v′
x = vx
v′
y = vy
v′
z = vz

q1 : Stimulated
˙vx = α1
xvx + βxVin
˙vy = α1
yvy + βyVin
˙vz = α1
zvz + βzVin
v = vx − vy + vz
{v ≤ VT}

[v ≥ VT ]

v′
x = vx
v′
y = vy
v′
z = vz

xvx
yvy
zvz

q2 : Upstroke
˙vx = α2
˙vy = α2
˙vz = α2
v = vx − vy + vz
{v ≤ VO − 80.1√θ}

Fig. 7. Stony Brook cardiac cell model [13].

COEFFICIENTS AND CONSTANTS IN THE STONY BROOK CARDIAC CELL

MODEL [13].

TABLE III

α0

α0

x = −0.0087
y = −0.1909
z = −0.1904

α0

α1

α1

x = −0.0236
y = −0.0455
z = −0.0129

α1

α2

α2

x = −0.0069
y = 0.0759
z = 6.8265

α2

α3

α3

x = −0.0332
y = 0.0280
z = 0.0020

α3

VR = 30

VT = 44.5

βx = 0.7772

βy = 0.0589

VO = 131.1

βz = 0.2766

A. Stony Brook Cardiac Cell Model

The Stony Brook model [13] models the time course of
the action potential with the hybrid automaton (HA) shown
in Figure 7. The four phases of the action potential, described
in Section II-B, are represented as four locations in the HA.
In each location, the membrane potential is deﬁned by the
variable v as the sum of the variables vx, vy, and vz. The
rates at which the variables vx, vy, and vz change are deﬁned
by their derivatives ˙vx, ˙vy, and ˙vz, respectively. The values of
the coefﬁcients and constants are given in Table III. Note that
the Stony Brook model offsets all the voltages such that the
resting potential is at 0mV .

By default, the HA always starts in location q0, which is
the resting phase of the action potential. It stays in q0 as long
as the invariant v ≤ VR is true. The HA transitions from
location q0 to q1 when the voltage Vin around the cell is greater
than 0mV . During this transition, the last values of vx, vy,
and vz when leaving q0 are used to set their initial values
when entering q1. Recall from Figure 4 that the amplitude
and duration of the action potential depends on how long the
cell had been in the resting phase when it is stimulated. This is
approximated by assuming that the closer the cell’s membrane
potential is to 0mV , the longer the cell has been in location q0.
Thus, the time that the cell had been in the resting phase is
approximated by normalising the membrane potential v against
the voltage VR, i.e., θ = v/VR. In location q1, the rate at

6

Fig. 8. Action potentials shorten unnaturally for the Stony Brook model.
Stimulated at 200ms intervals

150

100

50

)
V
m

(

v

0

*
0

*
200

*
400

*
600

*
800

*
000

1

,

1

,

200

Time (ms)

Fig. 9. Action potentials for the UoA model when stimulated at 200ms
intervals.

which the cell’s membrane potential increases depends on the
strength of Vin. The HA transitions back to location q0 if the
voltage Vin around the cell fails to stimulate the cell above
the threshold voltage VT . However, if the cell’s membrane
voltage v is stimulated above VT , then the HA transitions to
location q2. The amplitude of the cell’s membrane potential

is calculated as VO − 80.1√θ, i.e., it depends on how long

the cell had been in the resting phase. The HA transitions to
location q3 and the cell’s membrane potential starts to drop.
The rate of repolarisation is determined by the function f (θ)
and depends on how long the cell had been in the resting
phase:

f (θ) = 0.29e62.89θ + 0.70e−10.99θ

(1)

A higher value for f (θ) means a faster rate of repolarisation.
Once the cell’s membrane voltage v drops below the resting
voltage VR, the HA transitions back to q0.

B. Improvement: Stabilising the Action Potential

The bottom plot in Figure 8 shows the action potentials pro-
duced by the Stony Brook model when stimulated at 200ms
intervals. We can see that the duration of the action potentials
shorten towards zero over time. This is unnatural because the
action potentials should settle to a constant duration when
stimulated at a constant interval [30]. The top three plots in
Figure 8 show the values of vx, vy, and vz, respectively, over
time. Note that vx describes the initial voltage drop of the

xvx
yvy
zvz

q0 : Resting & FR
˙vx = α0
˙vy = α0
˙vz = α0
v = vx − vy + vz
{v ≤ VT}

[v ≤ VR]

v′
x = vx
v′
y = vy
v′
z = vz

xf (θ)vx
yf (θ)vy
zvz

q3 : Plateau & ER
˙vx = α3
˙vy = α3
˙vz = α3
v = vx − vy + vz
{v ≥ VR}

[h(~v) > VT ]

v′
x = vx
v′
y = vy
v′
z = vz

θ′ = v/VR

[h(~v) ≤ 0 ∧ v < VT ]

v′
x = vx
v′
y = vy
v′
z = vz

[v ≥ VO − 80.1√θ]

v′
x = vx
v′
y = vy
v′
z = vz

xvx + βxh(~v)
yvy + βyh(~v)
zvz + βzh(~v)

q1 : Stimulated
˙vx = α1
˙vy = α1
˙vz = α1
v = vx − vy + vz
{v ≤ VT}

[v ≥ VT ]

v′
x = vx
v′
y = vy
v′
z = vz

xvx
yvy
zvz

q2 : Upstroke
˙vx = α2
˙vy = α2
˙vz = α2
v = vx − vy + vz
{v ≤ VO − 80.1√θ}

Fig. 10.

Improved cardiac cell model (UoA).

plateau phase. We can see that the vx variable takes too long to
decrease in location q0. Thus, each time the cell is stimulated,
it enters location q1 with a slightly higher value for vx. This
causes the values of θ and f (θ) to increase over time. An
increasing value of f (θ) causes a faster rate of repolarisation
and, hence, shorter action potential durations.

To prevent the unnatural shortening of the action potential,
the value of vx needs to be closer to zero when the cell
transitions from location q3 to q0. Thus, we increase the rate
at which vx decreases towards zero by including the function
f (θ) in location q3 for ˙vx. The improved HA is shown in
Figure 10. Figure 9 shows that the action potentials produced
by the improved HA have constant durations when stimulated
at 200ms intervals.

C. Improvement: Bounding the Rate of Repolarisation

In the Stony Brook model, the action potential duration
approaches zero if the cell was stimulated shortly after entering
location q0. This behaviour is unnatural because the minimum
action potential duration that a cardiac cell can achieve is
approximately 40ms. This problem is due to the function
f (θ). When the HA returns to location q0 from q3, the value
of v is VR. An immediate stimulation to location q1 would set
θ = VR/VR = 1. Consequently, f (1) = 5.96 × 1026, which
causes an extremely fast rate of repolarisation.
To prevent such a fast rate of repolarisation from occurring,
we limit the maximum value that function f (θ) can return.
Figure 11 shows that action potential durations of 35 ms are
produced when f (θ = 0.04) = 4.0395. Thus, we impose a
maximum value of 4.0395 for the function f (θ):

f (θ) = (cid:26) 0.29e62.89θ + 0.70e−10.99θ

4.0395

if θ < 0.04
if θ ≥ 0.04

D. Discussion

We improved the original Stony Brook cardiac cell
model [13] to stabilise the action potentials and to impose

7

Fig. 11. Relationship between the action potential duration (APD) and the
value of f (θ).

a reasonable minimum action potential duration. Figure 9
shows that the shape of the action potentials generated by
the improved model remains realistic. However, it is impor-
tant to demonstrate that the action potential durations vary
realistically in response to the timing of secondary excitations
(see Figure 4 for illustration). This dynamic behaviour can be
evaluated with a restitution curve [30]. To plot the restitution
curve, the cardiac cell is electrically stimulated at a constant
time period, called the base cycle length (BCL). The BCL
consists of two time intervals: the action potential duration
followed by the diastolic interval. The diastolic interval begins
when the action potential falls to 10% of its peak amplitude.
For a range of BCLs, the action potential duration from the
tenth BCL is plotted against the diastolic interval from the
ninth BCL.

Figure 12 shows the restitution curves for

the Stony
Brook [13], Oxford [6], and our improved (UoA) mod-
els. These models were implemented in MathWorks R(cid:13)
Simulink R(cid:13)/Stateﬂow R(cid:13). The Oxford implementation was pro-
vided by the original authors [6]. The restitution curve of the
Stony Brook model has been demonstrated [13] to behave real-
istically compared to the Luo-Rudy model. However, because
the Stony Brook model is unstable, we could only reproduce
its restitution curve by taking the action potential duration and
diastolic interval of the ﬁrst BCL. The restitution curve for our
improved model shows dynamic behaviour that is very similar
to Stony Brook. The difference is due to the changes described
in Section IV-B. The parameters in the cell model can be tuned
to produce a variety of restitution curves and is particularly
useful when modelling diseased cardiac cells. The Oxford
model, on the other hand, shows unrealistic behaviour. The
action potential duration is either 9ms or 98ms, depending
on whether the diastolic interval is greater or less than 51ms.

V. CARDIAC PATH MODEL

The Oxford heart model [6] models the conduction system
as a sparse network of cells (Figure 1). The cells are connected
electrically by a voltage contribution function gk(~v), which
calculates the voltage induced at cell k by its neighbours:

gk(~v) =

n

Xi=1

vi(t − δki)aki − vkdk

(2)

8

(a) Propagation from cell 1.

(b) Propagation has reached cell 5.

Fig. 12. Electrical restitution curves comparing the dynamic behaviour of
Luo-Rudy [16], Stony Brook [13], Oxford [6], and our improved version
(UoA).

(c) Another propagation from cell 10.

(d) Propagations collide.

Cell 1

)
~v
(
k
g

Cell 2

)
V
m

(

1

l
l
e
C

)
V
m

(

2

l
l
e
C

150

100

50

0

*

150

100

50

0

0

200

400

600

800

Time (ms)

Fig. 13. Two cardiac cells connected electrically by the Oxford voltage
contribution function gk(~v).

For a given cell k with n connected neighbours, ~v =
(v1 · · · vn) is a vector of all the neighbours’ membrane poten-
tials, such that vi is the membrane potential of neighbour i.
The membrane potential of cell k is vk. The time for cell i’s
action potential to propagate to cell k, called the conduction
time, is represented by δki. Thus, vi(t − δki)aki represents
the membrane potential of cell i that reaches cell k after a
delay of δki and with a gain of aki. The strength of cell k’s
membrane potential relative to its neighbours is taken into
account by vkdk, where dk is a distance coefﬁcient.

Figure 13 plots the action potentials of two cardiac cells
connected by Oxford’s function gk(~v). Only cell 1 receives
an external stimulus at 10ms and the time delay between the
cells is 90ms. The expected behaviour is for cell 1 to produce
an action potential that stimulates cell 2 to produce an action
potential. Cell 2’s action potential would not propagate back
to cell 1 because of the refractory feature of cardiac cells [11].
However, Figure 13 shows that both cells produce a sequence
of action potentials. This is because the term vi(t − δki) in
equation (2) requires cell 2’s action potential to be propagated
back to cell 1 after a time delay. This incorrect positive
feedback behaviour is shown in Figure 13 as arrows between
the action potentials.

To properly model the propagation of action potentials along
a path, its behaviour in real cardiac tissue needs to be reviewed.

(e) Propagations annihilated.

(f) The path model mimics the propa-
gation along a chain of cells.

Fig. 14. Propagation and collision of electrical stimuli along cardiac tissue.

Figure 14a shows a chain of cardiac cells where only cell 1
has entered its upstroke phase. The cells’ membrane potentials
are plotted above the cells along with their corresponding HA
location. In Figure 14a, cell 1’s membrane potential starts to
stimulate cell 2 to enter the upstroke phase. Cell 2 will then
stimulate its neighbour and so on. In Figure 14b, cell 5 enters
the upstroke phase, while cells 1 to 4 have entered the plateau
and early repolarisation phase. Cells 1 to 4 are unresponsive to
any electrical stimuli applied to them. This refractory feature
forces an action potential to propagate in one direction along a
path. When two action potentials propagate towards each other
(Figures 14c), they will collide (Figure 14d) and annihilate
each other (Figure 14e), i.e., the action potentials will not
pass through each other.

A computationally efﬁcient heart model can be created
by replacing chains of cardiac cells with paths that mimic
the propagation of action potentials (Figure 14f). The path
model of UPenn [7] does consider the refractory feature of
cardiac cells and can model the collision of electrical stimuli.
However, only the propagation of discrete action potential
events, rather than continuous-time signals, are modelled.
Moreover, a cell can only be stimulated by the electrical
activity of one neighbour at a time. We propose a new path
model that handles the collision of continuous-time action
potentials and calculates the overall voltage induced by a cell’s
neighbours with a reaction-diffusion [10] function.

A. Improved Path Model

Our timed automaton (TA) for determining whether an
action potential can propagate along a path is shown in
Figure 15a. To keep the path model simple, we assume that
the path is only long enough for one complete action potential
to propagate through. That is, we assume that the duration of
the propagating action potential is longer than its conduction

[t ≥ δij ]
starti!
last := i
t := 0

waiti
t ≤ δij

[last = 0 ∨ last = i]

[last = j
∧apj(t − δji) = q0]

relayi
t ≤ δj

directioni
t = 0

[t ≥ δj ]

[t ≥ δi]

[api = q2
∧apj 6= q2]
t := 0

idle

[apj = q2
∧api 6= q2]
t := 0

relayj
t ≤ δi

directionj
t = 0

9

[t ≥ δji]
startj!
last := j
t := 0

[last = 0 ∨ last = j]

[last = i
∧api(t − δij) = q0]

waitj
t ≤ δji

[api = q2
∧apj = q2]

[last = j
∧apj(t − δji) 6= q0]

[api 6= q2 ∧ apj 6= q2]
last := 0

[last = i
∧api(t − δij) 6= q0]

[apj = q2]

annihilate

[api = q2]

(a) TA to determine which action potentials can propagate.

(b) TA to relay the action potential of cell i at cell j.

(c) TA to relay the action potential of cell j at cell i.

Fig. 15.

Improved path model (UoA) consisting of a TA to detect collisions and two TA to relay the action potentials.

time through the path. An action potential from cell i will fail
to propagate to cell j under the following circumstances:

• Cell j enters the upstroke phase during the conduction

time.

• A recent propagation from cell j to cell i failed to
stimulate cell i, i.e., a partial propagation, and the cells
in between have not returned back to their resting phase.
To recognise these circumstances, the TA requires the follow-
ing information of the cardiac cells (Figure 10):

it reaches cell j after a conduction time of δij.

• api and apj: The phase of cell i and j’s action potential.
• api(t − δij): The phase of cell i’s action potential when
• apj(t − δji): The phase of cell j’s action potential when
In addition, the local variable last is needed to remember the
direction of the last propagation:

it reaches cell i after a conduction time of δji.

0
i
j

if the last propagation was annihilated
if the last propagation started from cell i
if the last propagation started from cell j

last = 


In Figure 15a, the left half of the TA determines if an
action potential from cell i can propagate to cell j. The TA
begins in the idle location and transitions to the annihilate
location if both cells i and j go into the upstroke phase q2.
A transition back to the idle location is made when both
cells exit their upstroke phase q2. If only cell i goes into the
upstroke phase q2, then a transition from the idle to directioni
location is made. Next, if a partial propagation from cell j
occurred recently, then a transition to the annihilate location
is made. Otherwise, a transition to the waiti location is made.
The TA transitions to the annihilate location if cell j enters
the upstroke phase q2 during cell i’s conduction time δij.
Otherwise, the TA remains in the waiti
location until the
conduction time has elapsed, at which point the signal starti is
emitted (denoted by “!”) and a transition to the relayi location

is made. Next, a transition to the idle location is made after a
time of δj has elapsed to ignore cell j’s upstroke phase. The
right half of the TA uses similar logic to determine if an action
potential from cell j can propagate to cell i.

The TA in Figure 15b relays cell i’s action potential at
cell j when the signal starti is received (denoted by “?”). The
relay stops when cell j has successfully depolarised or when
cell i’s action potential reaches the resting phase q0. Similar
logic is used by the TA in Figure 15c to relay cell j’s action
potential at cell i when the signal starti is emitted. A cell can
be connected to multiple neighbours and, therefore, receive
multiple action potentials simultaneously. We determine the
voltage induced at cell k by its n neighbours with the following
reaction-diffusion [10] function:

hk(~v) =

n

Xi=1

Γikσik
AmCm

(vout

i − vk)

(3)

where Γik is the cross-sectional area (units of mm2) from
cell i to k, σik is the electrical conductivity (units of mS/mm)
from cell i to k, Am is cell k’s surface area to volume (units of
mm−2), Cm is cell k’s speciﬁc membrane capacitance (units
of µF/mm2), and vout
is cell i’s membrane potential after
propagating along the path.

i

B. Discussion

We have developed an improved path model speciﬁcally
for continuous-time action potentials. We can successfully
model propagations that are annihilated by a full or partial
propagation from the opposite direction. This allows us to
model conduction block that only occur in one direction, e.g.,
due to the source-sink relationship [11], which the UPenn
path model [7] can not. Bartocci et al. [31] modelled cardiac
tissue with a high-resolution grid of Stony Brook cells [13]. In

(a) Full and partial propagations.

Cell i

Path

Cell j

Cell i

Path ik

Cell k

Path jk

Cell j

(b) Multiple neighbours needed to stimulate a cell.

Fig. 16. Examples of propagation behaviour that can be modelled by the
improved path model, but not by the Oxford [6] or UPenn [7] path models.

that model, the cells are connected electrically by a reaction-
diffusion equation because the conduction times between the
cells are not signiﬁcant.

Figure 16a demonstrates two cells i and j with a conduction
block from cell j to i. The conduction time between the cells
is 30ms. At 10ms, cell i generates an action potential that
successfully stimulates cell j. At 260ms, cell j generates
an action potential that does not stimulate cell i because of
conduction block. Shortly after at 360ms, cell i generates an
action potential that does not reach cell j because the cells
along the path have not returned back to the resting phase q0.
At 710ms, cell i generates an action potential that successfully
stimulates cell j.

Figure 16b demonstrates a cell k that will only stimulate
if the action potentials of its neighbours, cells i and j, arrive
together. At times 10ms and 260ms, cells i and j, respectively,
generate action potentials that take 30ms to propagate to
cell k. However, the voltage induced on cell k is neither
strong enough nor long enough to stimulate cell k. At time
610ms, both neighbours generate action potentials that arrive
simultaneously at cell k. This time, the voltage induced on
cell k is enough to stimulate it.

Figure 17 demonstrates atrioventricular node re-entrant
tachycardia (AVNRT [12]), caused by dual pathways around
the atrioventricular (AV) node shown in Figure 17a. An electri-
cal stimulus propagates faster down the left pathway than the

10

right pathway, called the fast and slow pathways, respectively.
In normal cardiac behaviour, shown in Figure 17a, an electrical
stimulus from the atriums splits and propagates down the fast
and slow pathways. The stimulus in the fast pathway will
reach the bottom of the AV node before the stimulus in the
slow pathway. The stimulus in the fast pathway continues to
propagate down into the ventricles and up the slow pathway
where it will annihilate the existing stimulus. Thus, only the
stimulus that propagates down the fast pathway will enter the
ventricles. Figure 17c demonstrates our ability to replicate this
normal behaviour by modelling the dual pathways around the
AV node with only four cells and paths.

An early electrical stimulus from the atriums can end
up propagating continuously around the AV node, shown
in Figure 17b. This is because the early stimulus cannot
propagate down the fast pathway, which has cells that are
still repolarising. The cells in the fast pathway take longer
to repolarise than those in the slow pathway and, hence, have
longer action potential durations. Due to this, the stimulus
can propagate down the slow pathway because its cells have
repolarised. By the time the stimulus reaches the bottom of
the AV node, the cells in the fast pathway have reached their
resting phase. Thus, the stimulus continues by propagating
up the fast pathway, during which time the cells in the slow
pathway reach their resting phase. The stimulus continues
by propagating back down the slow pathway and the cycle
continues. Every time the stimulus passes the bottom and top
of the AV node, a stimulus is propagated into the ventricles
and atriums, respectively. Figure 17d demonstrates our ability
to replicate this abnormal behaviour by modelling the dual
pathways around the AV node with only four cells and paths.

VI. UOA HEART MODEL

Following the approach of Oxford’s heart model [6], we
model the cardiac conduction system with a two-dimensional
network of 33 cardiac cells, shown in Figure 1. Our heart
model uses the improved cardiac cell and path models (Sec-
tions IV-B, IV-C, and V-A). The following cell and path
model parameters were modiﬁed to capture the range of
action potential durations, conduction velocities, and electrical
conductivities present in the conduction system:

• The value of α3

y in Figure 10 was increased to increase
the cell’s rate of repolarisation and, therefore, decrease
its action potential duration.

• The values of δij and δji in Figure 15 were increased to
increase the conduction time and, therefore, decrease the
conduction velocity.

• The value of σik in equation (3) was increased to increase

the conductivity.

Cardiac electrophysiology data in the literature [22], [32]
was used to estimate the parameters. The data of interest
include the morphology of myocyte action potentials and the
conduction velocities of electrical stimuli along the pathways.
Table IV provides a qualitative comparison of Oxford’s heart
model [6] with our improved heart model (UoA). Thanks to
improvements in our cell and path models, we are able to
model more heart conditions and with realistic results. This is

11

(a) Schematic of the fast and
slow pathways around the AV
node.

(b) Re-entry due to an early stim-
ulus from the atriums.

(c) Normal behaviour simulated. Cell 1 stimulated at 10 and 260ms.

(d) Abormal behaviour simulated. Cell 1 stimulated at 10
and 160ms.

Fig. 17. Atrioventricular node re-entrant tachycardia.

demonstrated in the next section where we provide simulation
results of the common arrhythmias described in Section II-D.

VII. SIMULATION RESULTS

We

implemented our heart model

in MathWorks R(cid:13)
Simulink R(cid:13) and Stateﬂow R(cid:13) R2015b Pro. A ﬁxed simulation
time step of 0.0005ms and the Dormand-Prince ODE45 solver
was used. Figure 19 shows the propagation of electrical stimuli
through the cardiac conduction system (Figure 1) during a
normal cardiac cycle. The membrane potential of each node
is denoted by a shade of grey, according to Figure 18. In the
following, we provide simulation results of the arrhythmias
described in Section II-D.

B. Bundle Branch Block

This is modelled similarly to heart block. For one of the
bundle branches,
the voltage induced by the AV node is
reduced and the conduction time along the branch is increased.
Figure 21 shows a simulation of bundle branch block where
propagation down the right branch is slower than the left
branch.

C. Long Q-T Syndrome

This is modelled by decreasing the value of α3

y in the
ventricular cells to decrease their rate of repolarisation, thereby
creating a longer action potential duration. Figure 22 shows a
simulation of the syndrome.

A. Heart Block

This is modelled by reducing the voltage that the neigh-
bouring atrial cells induce on the AV node and by increasing
the conduction time through the AV node. Figure 20 shows
a simulation of heart block where an electrical stimulus does
not propagate through the AV node.

D. VA Conduction

This is modelled by stimulating a ventricular node before
the SA node generates a stimulus. Figure 23 shows a simu-
lation of VA conduction by stimulating the RV1 node in the
right ventricle.

Fig. 18. Grayscale colourmap used to represent the voltage of each node.

12

(a) 35ms. Electrical stimulus propa-
gates from the SA node.

(b) 88ms. Electrical stimulus arrives
at the AV node.

(c) 193ms. Electrical stimulus propa-
gates into the ventricles.

(d) 245ms. Electrical stimulus propa-
gates up the ventricles.

Fig. 19. Simulation of a normal cardiac cycle. The SA node depolarises at 10ms.

(a) 35ms. Electrical stimulus propa-
gates from the SA node.

(b) 88ms. Electrical
blocked at the AV node.

stimulus

is

(c) 193ms. Electrical stimulus fails to
enter the ventricles.

(d) 245ms. Ventricles fail
larise.

to depo-

Fig. 20. Simulation of heart block. The SA node depolarises at 10ms.

(a) 35ms. Electrical stimulus propa-
gates from the SA node.

(b) 88ms. Electrical stimulus arrives
at the AV node.

(c) 193ms. Electrical stimulus propa-
gates slower into the right ventricle.

(d) 245ms. Right ventricle depolarises
after the left ventricle has depolarised.

Fig. 21. Simulation of right bundle branch block. The SA node depolarises at 10ms.

13

(a) 35ms. Electrical stimulus propa-
gates from the SA node.

(b) 193ms. Electrical stimulus propa-
gates into the ventricles.

(c) 640ms. Repolarisation of normal
ventricles would already have com-
pleted.

(d) 740ms. Repolarisation of the ven-
tricles ﬁnally completes.

Fig. 22. Simulation of long Q-T syndrome. The SA node depolarises at 10ms.

(a) 35ms. Electrical stimulus propa-
gates from the RV1 node.

(b) 150ms. Electrical stimulus arrives
at the AV node.

(c) 220ms. Electrical stimulus propa-
gates into the atriums.

(d) 311ms. Electrical stimulus propa-
gates down the atriums.

Fig. 23. Simulation of VA conduction. The RV1 node depolarises at 10ms.

(a) 35ms. Electrical stimulus propa-
gates from the SA node.

(b) 125ms. Electrical stimulus propa-
gates into the left ventricle via the LA1
→ LV1 accessory pathway.

(c) 176ms. Left ventricle depolarises
before the right ventricle.

(d) 245ms. Ventricles have depo-
larised.

Fig. 24. Simulation of Wolff-Parkinson-White syndrome. The SA node depolarises at 10ms.

14

(a) 88ms. Electrical stimulus arrives
at the AV node via fast path.

(b) 222ms. Early stimulation of the
SA node.

(c) 243ms. Early stimulus propagates
through the atriums.

(d) 320ms. Early stimulus arrives at
the AV node via the slow path.

(e) 400ms. Early stimulus re-enters
the atriums via the fast path.

(f) 430ms. Early stimulus re-enters
the slow path a second time.

(g) 515ms. Refractory of FP1 node
prevents a second re-entry into the
atriums.

(h) 570ms. Atriums and ventricles re-
polarise.

Fig. 25. Simulation of AV node re-entrant tachycardia. The SA node depolarises at 10 and 220ms.

DETAILED QUALITATIVE COMPARISON OF HEART MODELS FROM UOA

AND OXFORD.

TABLE IV

Heart
Anatomy
(Figure 1)

Morphology
of action
potentials
(Figure 6)

Electrical
Restitution
(Figure 12)

Path Model
(Figure 16)

UoA

Oxford [6]

2D conduction system

Realistic because a more
recent Stony Brook HA
model [13] is used (with
the improvements from
Sections IV-B and IV-C)

Unrealistic because a
simpliﬁed Stony Brook
HA model [19] is used

Shows good dynamic

behaviour

Shows limited dynamic

behaviour

Electrical propagation is time delayed, bi-directional,

and anisotropic.

Correctly disallows

Incorrectly allows

colliding electrical stimuli

colliding electrical stimuli

from passing through

each other

to pass through each

other

Disease
Conditions
(Figures 20
to 25)

Bradycardia and

tachycardia by modifying

the SA rate, AV node

re-entrant tachycardia, VA
conduction, heart blocks,
and long Q-T syndrome

Bradycardia and

tachycardia by modifying

the SA rate, and heart

blocks

E. Wolff-Parkinson-White Syndrome

This is modelled by creating an additional pathway between
the left atrium and left ventricle. Figure 24 shows a simulation
of the syndrome, which causes the left ventricle to depolarise
earlier than usual.

F. AV Node Re-entrant Tachycardia

This is modelled by the fast and slow pathways around the
SA node, demonstrated previously in Figure 17. Figure 25
simulates re-entrant tachycardia by stimulating the SA node a
second time with an early stimulus.

G. Time to Simulate the Cell and Heart Models

The execution time needed to simulate the cell and heart
models of Oxford and UoA are compared in this section. For a
fair comparison, we wanted to avoid the execution overhead of
the Simulink R(cid:13) environment. Thus, for each model, Simulink
CoderTM was used to generate a single-threaded executable C
program that is optimised for execution speed. Each C program
was then executed on a single core of a 3.40GHz Intel Core
i7-4770 processor with 16GB of RAM and running Microsoft
Windows 7 Enterprise. Each reported execution time is the
average of ten runs of the same program.

The Oxford cell model takes 12.376s to simulate 60s of
cell activity with a 1s base cycle length, compared with
9.586s for the UoA improved cell model. The Oxford cell

model takes longer to simulate because it uses a Stateﬂow R(cid:13)
block to manually check the transiton guards and produce
a corresponding Boolean event whenever a guard is true.
The Boolean event triggers another Stateﬂow R(cid:13) block to take
transitions between the hybrid automaton states. For our UoA
improved cell model, the hybrid automaton is modelled by
a single Stateﬂow R(cid:13) block. The hybrid automaton transition
guards are modelled directly as Stateﬂow R(cid:13) transition con-
ditions. Stateﬂow R(cid:13) (automatically) handles the checking of
transitions, which leads to a more efﬁcient simulation, even
though the Oxford cell model only uses the vx variable of the
Stony Brook 2005 cell model. Moreover, the UoA improved
cell model uses Simulink R(cid:13) components that are more efﬁcient
to simulate wherever possible.

The Oxford and UoA heart models use the same arrange-
ment of 33 nodes, as shown in Figure 1. The Oxford heart
model has a total of 34 paths between the nodes and takes
8.516s to simulate 1s of a normal cardiac cycle. The UoA
improved heart model has a total of 68 forward and backward
paths between the nodes and takes 30.771s to simulate 1s
of a normal cardiac cycle and 31.295s to simulate 1s of AV
node re-entrant tachycardia. The UoA improved heart model
takes longer to simulate because it implements a much more
complex path model that considers the backward propagation
and annihilation of electrical impulses throughout the cardiac
conduction system. Thus, it is imperative to further improve
the efﬁciency of the path model without sacriﬁcing its pre-
dictive power. The execution time of the UoA improved heart
model could be reduced by parallelising the simulation of the
nodes over multi-cores [5].

VIII. CONCLUSION

We carefully reviewed the heart models designed for the
closed-loop testing of pacemakers and identiﬁed key areas
of improvement. To this end, we advanced the state-of-the-
art in three ways: (1) stabilising and enforcing a minimum
action potential duration on the Stony Brook cardiac cell
model, (2) developing a path model that handles the partial
and full propagation of continuous-time action potentials, and
(3) demonstrating the predictive power of our heart model
through the extensive simulation of arrhythmias. We are able
to model many more arrhythmias than are possible with the
existing heart models.

For future work, we look to implement our heart model with
more computationally efﬁcient methods to achieve the goal of
real-time heart simulation, i.e., heart emulation. We also look
to investigate the automatic generation and parameterisation of
a network of cardiac cells and paths for patient-speciﬁc heart
modelling.

ACKNOWLEDGMENT

This research was funded by the University of Auckland
FRDF Postdoctoral grant No. 3707500. The authors would
like to express their gratitude to Prof. Marta Kwiatkowsk and
her research group from the University of Oxford for providing
an implementation of their heart model.

15

REFERENCES

[1] IEC 60601-1-11:2015, International Electrotechnical Commission Std.

2.0, Jan. 2015.

[2] H. Alemzadeh, R. K. Iyer, Z. Kalbarczyk, and J. Raman, “Analysis of
Safety-Critical Computer Failures in Medical Devices,” IEEE Security
Privacy, vol. 11, no. 4, pp. 14 – 26, 2013.

[3] Z. Jiang, M. Pajic, and R. Mangharam, “Cyber-Physical Modeling of
Implantable Cardiac Medical Devices,” Proceedings of the IEEE, vol.
100, no. 1, pp. 122 – 137, Jan. 2012.

[4] R. Bordas, B. Carpentieri, G. Fotia, F. Maggio, R. Nobes, J. Pitt-Francis,
and J. Southern, “Simulation of Cardiac Electrophysiology on Next-
Generation High-Performance Computers,” Philosophical Transactions
of the Royal Society of London A: Mathematical, Physical and Engi-
neering Sciences, vol. 367, no. 1895, pp. 1951 – 1969, 2009.

[5] E. Bartocci, E. M. Cherry, J. Glimm, R. Grosu, S. A. Smolka, and
F. H. Fenton, “Toward Real-time Simulation of Cardiac Dynamics,”
in Proceedings of the 9th International Conference on Computational
Methods in Systems Biology, ser. CMSB ’11. ACM, 2011, pp. 103 –
112.

[6] T. Chen, M. Diciolla, M. Kwiatkowska, and A. Mereacre, “Quantitative
Veriﬁcation of Implantable Cardiac Pacemakers over Hybrid Heart
Models,” Information and Computation, vol. 236, pp. 87 – 101, 2014,
special Issue on Hybrid Systems and Biology.

[7] Z. Jiang, M. Pajic, R. Alur, and R. Mangharam, “Closed-Loop Veri-
ﬁcation of Medical Devices with Model Abstraction and Reﬁnement,”
International Journal on Software Tools for Technology Transfer, vol. 16,
no. 2, pp. 191 – 213, 2014.

[8] D. M´ery and N. K. Singh, “Formalization of Heart Models Based
on the Conduction of Electrical Impulses and Cellular Automata,” in
Foundations of Health Informatics Engineering and Systems, ser. Lecture
Notes in Computer Science, Z. Liu and A. Wassyng, Eds.
Springer
Berlin Heidelberg, 2012, vol. 7151, pp. 140 – 159.

[9] J. Lian, H. Kr¨atschmer, and D. M¨ussig, “Open Source Modeling of Heart
Rhythm and Cardiac Pacing,” The Open Pacing, Electrophysiology &
Therapy Journal, vol. 3, pp. 28 – 44, 2010.

[10] A. G. Kl´eber and Y. Rudy, “Basic Mechanisms of Cardiac Impulse Prop-
agation and Associated Arrhythmias,” Physiological Reviews, vol. 84,
no. 2, pp. 431 – 488, 2004.

[11] P. Spector, “Principles of Cardiac Electric Propagation and Their Im-
plications for Re-entrant Arrhythmias,” Circulation: Arrhythmia and
Electrophysiology, vol. 6, no. 3, pp. 655 – 661, Jun. 2013.

[12] B. C. Mani and B. B. Pavri, “Dual Atrioventricular Nodal Pathways
Physiology: A Review of Relevant Anatomy, Electrophysiology, and
Electrocardiographic Manifestations,” Indian Pacing and Electrophys-
iology Journal, pp. 12 – 25, Jan. 2014.

[13] P. Ye, E. Entcheva, S. A. Smolka, and R. Grosu, “Modelling Excitable
Cells Using Cycle-Linear Hybrid Automata,” IET Systems Biology,
vol. 2, no. 1, pp. 24 – 32, Jan. 2008.

[14] C.-H. Luo and Y. Rudy, “A Dynamic Model of the Cardiac Ventricular
Action Potential: I. Simulations of Ionic Currents and Concentration
Changes,” Circulation Research, vol. 74, no. 6, pp. 1071 – 1096, Feb.
1994.

[15] T. J. Bunch, D. L. Hayes, C. D. Swerdlow, S. J. Asirvatham, and
P. A. Friedman, Pacing and Deﬁbrillation: Clinically Relevant Basics
for Practice. Wiley-Blackwell, 2013, pp. 1 – 39.

[16] C.-H. Luo and Y. Rudy, “A Model of the Ventricular Cardiac Action
Potential: Depolarization, Repolarization, and Their Interaction,” Circu-
lation Research, vol. 68, no. 6, pp. 1501 – 1526, Jun. 1991.

[17] F. Ou, “The Effects of Heart Structure on Action Potentials,” Car-
diac Electrophysiology Group, Auckland Bioengineering Institute, Tech.
Rep., 15.

[18] A. L. Hodgkin and A. F. Huxley, “A Quantitative Description of
Membrane Current and its Application to Conduction and Excitation
in Nerve,” The Journal of Physiology, vol. 117, no. 4, pp. 500 – 544,
1952.

[19] P. Ye, E. Entcheva, R. Grosu, and S. A. Smolka, “Efﬁcient Modeling of
Excitable Cells Using Hybrid Automata,” in Proceedings of Computa-
tional Methods in System Biology, 2005, pp. 216 – 227.

[20] F. Kusumoto, Understanding Intracardiac EGMs and ECGs, 1st ed.

Wiley-Blackwell, 2010.

[21] C. W. Haws and R. L. Lux, “Correlation Between In Vivo Trans-
membrane Action Potential Durations and Activation-Recovery Intervals
From Electrograms. Effects of Interventions That Alter Repolarization
Time,” Circulation, vol. 81, no. 1, pp. 281 – 288, 1990.

16

[22] D. Durrer, R. T. van Dam, G. E. Freud, M. J. Janse, F. L. Meijler,
and R. C. Arzbaecher, “Total Excitation of the Isolated Human Heart,”
Circulation, vol. 41, pp. 899 – 912, Jun. 1970.

[23] M. Sermesant, H. Delingette, and N. Ayache, “An Electromechanical
Model of the Heart for Image Analysis and Simulation,” IEEE Trans-
actions on Medical Imaging, vol. 25, no. 5, pp. 612 – 625, May 2006.
[24] B. H. Smaill and P. J. Hunter, “Computer Modeling of Electrical
Activation: From Cellular Dynamics to the Whole Heart,” in Cardiac
Electrophysiology Methods and Models, D. C. Sigg, P. A. Iaizzo, Y.-F.
Xiao, and B. He, Eds. Springer US, 2010, pp. 159 – 185.

[25] R. Clayton, O. Bernus, E. Cherry, H. Dierckx, F. Fenton, L. Mirabella,
A. Panﬁlov, F. Sachse, G. Seemann, and H. Zhang, “Models of Cardiac
Tissue Electrophysiology: Progress, Challenges and Open Questions,”
Progress in Biophysics and Molecular Biology, vol. 104, no. 1 3, pp.
22 – 48, 2011.

[26] A. A. McLeod and P. P. Jokhi, “Pacemaker Induced Ventricular Fibril-

Partha S. Roop received his Ph.D degree in com-
puter science (software engineering) from the Uni-
versity of New South Wales, Sydney, Australia, in
2001. He is currently an Associate Professor and is
the Director of the Computer Systems Engineering
Program with the Department of Electrical and Com-
puter Engineering, the University of Auckland, New
Zealand. Partha is an associated team member of
the SPADES team INRIA, Rhone-Alpes, France, and
held a visiting position in CAU Kiel, Germany, and
Iowa State University, USA. His research interests
include the design and veriﬁcation of embedded systems. In particular, he is
developing techniques for the design of embedded applications in automotive,
robotics, and intelligent
transportation systems that meet functional-safety
standards.

lation in Coronary Care Units,” British Medical Journal, May 2004.

[27] P. C. Franzone, L. F. Pavarino, and S. Scacchi, Eds., Mathematical
Cardiac Electrophysiology, ser. Modeling, Simulation & Applications.
Springer International Publishing, 2014, vol. 13.

[28] N. A. Trayanova, “Your Personal Virtual Heart,” IEEE Spectrum, vol. 51,

no. 11, pp. 34 – 59, Nov. 2014.

[29] S. M. Green, A. J. Klein, S. Pancholy, S. V. Rao, D. Steinberg,
R. Lipner, J. Marshall, and J. C. Messenger, “The Current State of
Medical Simulation in Interventional Cardiology: A Clinical Document
from the Society for Cardiovascular Angiography and Intervention’s
(SCAI) Simulation Committee,” Catheterization and Cardiovascular
Interventions, vol. 83, no. 1, pp. 37 – 46, 2014.

[30] J. B. Nolasco and R. W. Dahlen, “A Graphic Method for the Study of
Alternation in Cardiac Action Potentials,” Journal of Applied Physiol-
ogy, vol. 25, no. 2, 1968.

[31] E. Bartocci, F. Corradini, M. R. D. Berardini, E. Entcheva, S. A. Smolka,
and R. Grosu, “Modeling and Simulation of Cardiac Tissue using Hybrid
I/O Automata,” Theoretical Computer Science, vol. 410, no. 33 34, pp.
3149 – 3165, 2009.

[32] D. C. Sigg, P. A. Iaizzo, Y.-F. Xiao, and B. He, Eds., Cardiac Electro-

physiology Methods and Models. Springer US, 2010.

Eugene Yip received his B.E. (Hons) and Ph.D
degrees in electrical and computer systems engineer-
ing from the University of Auckland, New Zealand.
At the start of 2015, he joined the Heart-on-FPGA
research group in the Department of Electrical and
Computer Engineering, University of Auckland, as
a research assistant working on the real-time mod-
elling of cardiac electrical activity. In the middle
of 2015, he joined the SWT research group at the
University of Bamberg as a research assistant work-
ing on synchronous languages. His current research
interests include synchronous mixed-criticality systems, parallel programming,
static timing analysis, formal methods for organ modelling, and biomedical
devices.

Sidharta Andalam received his Ph.D degree from
the University of Auckland, New Zealand, in 2013,
where his thesis focused on developing a predictable
platform for safety-critical systems. He is currently
a research fellow in embedded systems at the Uni-
versity of Auckland, New Zealand. His principle
research interest is in the design, implementation,
and analysis of safety-critical applications. He has
worked at TUM CREATE, Singapore, exploring
safety-critical applications in the automotive domain.

Avinash Malik is a lecturer at the University of
Auckland, New Zealand. His main research interest
lies in programming languages for multicore and
distributed systems and their formal semantics and
compilation. He has worked at organisations such
as INRIA in France, Trinity College Dublin, IBM
research Ireland, and IBM Watson on the design
and the compilation of programming languages. He
holds B.E. and Ph.D degrees from the University of
Auckland.

Mark Trew attained a Bachelor of Engineering in
Engineering Science in 1992 and a Ph.D Engineer-
ing Science in 1999, both from the University of
Auckland, New Zealand. He is currently a Senior
Research Fellow at
the Auckland Bioengineering
Institute. Mark constructs computer models and
analysis tools for interpreting and understanding de-
tailed images of cardiac tissue and cardiac electrical
activity.

Weiwei Ai received the B.S. degree in 2003 from
Qingdao University, China, and the M.E. degree in
2006 from Beijing University of Technology, China.
From 2006 to 2013, she worked as a reliability and
failure analysis engineer in CEC Huada Electronic
Design Co.,Ltd. She is currently working towards
the Ph.D. degree at the the University of Auckland,
New Zealand. Her research interests are in veriﬁca-
tion and validation with a focus on medical devices.

Nitish Patel received the B.E. degree from Manga-
lore University, Karnataka, India, and the Ph.D. de-
gree from the University of Auckland, New Zealand.
He is currently a Senior Lecturer at the University of
Auckland. His research interests include embedded
systems, robotics, artiﬁcial neural networks, control
systems, and hardware implementation of real-time
systems for control.

