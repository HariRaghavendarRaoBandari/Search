Adaptive Mitigation of Multi-Virus Propagation: A

Passivity-Based Approach

Phillip Lee, Student Member, IEEE, Andrew Clark, Member, IEEE, Linda Bushnell, Senior Member, IEEE, and

Radha Poovendran, Fellow, IEEE

1

6
1
0
2

 
r
a

 

M
4
1

 
 
]

Y
S
.
s
c
[
 
 

1
v
4
7
3
4
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—Malware propagation poses a growing threat to net-
worked systems such as computer networks and cyber-physical
systems. Current approaches to defending against malware
propagation are based on patching or ﬁltering susceptible nodes
at a ﬁxed rate. When the propagation dynamics are unknown
or uncertain, however, the static rate that is chosen may be
either insufﬁcient to remove all viruses or too high, incurring
additional performance cost. In this paper, we formulate adaptive
strategies for mitigating multiple malware epidemics when the
propagation rate is unknown, using patching and ﬁltering-based
defense mechanisms. In order to identify conditions for ensuring
that all viruses are asymptotically removed, we show that the
malware propagation, patching, and ﬁltering processes can be
modeled as coupled passive dynamical systems. We prove that
the patching rate required to remove all viruses is bounded above
by the passivity index of the coupled system, and formulate the
problem of selecting the minimum-cost mitigation strategy. Our
results are evaluated through numerical study.

I. INTRODUCTION

The growing reliance on computer networks for commu-
nication creates a corresponding increase in the threat of
computer malware. A computer malware is an application that
infects and installs itself on a host, and then uses the resources
of that host to attempt to infect other devices. Infected hosts
often form large botnets that are controlled by one or more
malicious adversaries and used to mount attacks including
denial of service and spam campaigns [2]. Malware has been
growing in sophistication, with new attack vectors targeting
social networks [3] and mobile devices [4].

A variety of defense mechanisms have been developed
for thwarting the spread of malware. The standard approach
is to periodically patch nodes against known malware, thus
removing the infection and, depending on the type of malware,
preventing reinfection in the future. Proactive defenses include
scanning network trafﬁc with intrusion detection systems to
identify malware signatures and quarantine infected nodes [6].
While each defense mechanism mitigates the spread of mal-
ware, there is also an associated performance cost, including
host downtime during patching, delays due to packet ﬁltering,
and allocation of system resources to decoy networks. In order
to determine appropriate parameters (e.g., patching rate) of
a mitigation strategy that balance removal of malware with

P. Lee, L. Bushnell, and R. Poovendran are with the Network Security Lab,
Department of Electrical Engineering, University of Washington, Seattle, WA
98195-2500. Email: {leep3,lb2,rp3}@uw.edu.

A. Clark is with the Department of Electrical and Computer Engi-
neering, Worcester Polytechnic Institute, Worcester, MA 01609. Email:
aclark@wpi.edu

system performance, propagation models have been proposed
that describe the rate of malware propagation, the impact
of the attack, and the effectiveness of mitigation [8], [9].
These models provide an analytical framework for designing
a malware defense strategy.

Standard malware propagation models are based on epi-
demic dynamics such as Susceptible-Infected-Susceptible
(SIS), which depend on the network topology, scanning rate
of the malware, and probability that a scanned host becomes
infected. In general, however, propagation characteristics such
as the scanning rate are unknown a priori, leading to uncertain-
ties in the design of mitigation parameters. Such a mitigation
strategy could incur unnecessarily large overhead or fail to
control the spread of malware [11].

These uncertainties are especially pronounced when mul-
tiple malware strains propagate through a network simul-
taneously. The interactions between competing strains are
complex and inherently unpredictable. In the case of com-
peting malware, one malware strain may install anti-virus
software in order to remove or block other malware from
compromising the same host [12]. Co-existing or colluding
malware, in contrast, may reside together on a single host,
and the presence of one malware can facilitate other infec-
tions, e.g., by disabling ﬁrewalls and anti-virus. At present,
however, defense mechanisms that incorporate uncertainties
in the propagation of a single malware, let alone multiple co-
existing or competing malwares, are in the early stages.

In this paper, we develop a passivity-based approach to
modeling and mitigating multiple malware propagations, using
both static and adaptive defenses. Under our approach, when
an infection is detected through packet ﬁltering or patching,
the patching rate and ﬁltering probabilities are incremented. By
modeling the multi-virus propagation, patching, and ﬁltering
as passive dynamical systems, we develop intuitive rules for
updating the probability of packet inspection in order to guar-
antee removal of the viruses while minimizing performance
overhead. Our speciﬁc contributions are as follows:

• We develop a passivity framework for modeling multi-
virus propagation and mitigation under SIS propagation
dynamics. We prove that the multi-virus propagation and
mitigation can be viewed as coupled passive dynamical
systems, and show that
the required patching rate is
characterized by the passivity index of the system. We
formulate the problem of selecting the minimum-cost
mitigation strategy to remove multiple viruses.

• We consider the class of adaptive patching and ﬁltering-
based defenses. We propose two adaptive patching-based

2

defenses. In the ﬁrst defense, we derive an update rule
that is guaranteed to ensure asymptotic removal of all
viruses in this network. In the second defense, we derive
a rule that can drive the probability of infection to be
arbitrarily low in the single-virus case while minimizing
the performance overhead of mitigation.

• We analyze two performance characteristics of our patch-
ing and ﬁltering strategies, namely the convergence rate
of the network to the state where all viruses are removed,
and the total cost of mitigation. We derive bounds on both
performance characteristics as functions of the update
parameters.

• We evaluate our approach via numerical study. Our study
compares the convergence rates under coexisting and
competing malware propagation and veriﬁes convergence
of the adaptive patching and ﬁltering dynamics to the
desired steady-state.

The paper is organized as follows. Section II discusses the
related work. Section III presents the adversary and defense
models, and gives background on passivity. Section IV in-
troduces a dynamical model for the multi-virus propagation
and mitigation, and presents our passivity-based approach to
selecting a ﬁxed patching rate when the propagation rate
is known. Section V describes and analyzes our proposed
adaptive patching strategies. Section VI discusses adaptive
packet ﬁltering strategies. Section VII presents simulation
results. Section VIII concludes the paper.

II. RELATED WORK

Malware propagation models have received signiﬁcant re-
search attention in recent years. Standard approaches for mod-
eling propagation of a single malware are based on ordinary
differential equation models from epidemiology, such as the
Kermack-McKendrick model [15]. These models have been
extensively analyzed theoretically and empirically, including
applications to speciﬁc outbreaks such as the Code Red and
Slammer worms [8]. Eigenvalue bounds on the rate of malware
propagation, as well as the threshold rate for patching infected
nodes in order to eliminate viruses, were presented in [16].
Multi-virus propagation has also received recent study [18],
[19]. Propagation models have been developed to capture
features of speciﬁc application domains,
including mobile
phones [4] and social networks [3]. Control-theoretic tech-
niques for designing optimal malware propagation and attack
strategies were presented in [20].

Dynamical models of virus propagation provide an an-
alytical framework for designing mitigation strategies. An
optimal control approach to mitigating a single virus is given
in [9]. Geometric programming techniques for selecting the
least-costly patching and vaccination rates were developed in
[23]. Defenses against malware propagation in time-varying
networks were considered in [?]. Recently, an optimization
approach to defense against epidemics with uncertain prop-
agation parameters was proposed [11]. Under this approach,
ﬁxed mitigation parameters were selected to ensure robustness
to propagation parameters within an a priori known range. Our
approach, on the other hand, adaptively increases the level of

ﬁltering in the network and makes no assumptions regarding
the propagation parameters. An adaptive approach for virus
mitigation under budget constraints was presented in [?]
The preliminary conference version of this work presented a
passivity-based approach to modeling and mitigating multiple
viruses using patching-based defenses with a ﬁxed rate [24],
but did not consider adaptive network defense.

III. MODEL AND PRELIMINARIES

This section presents the model and assumptions of the
adversary and network defense. We then give background on
passivity.

A. Adversary Model

A set of malwares V attempts to infect network hosts. Once
a host has been compromised by malware v ∈ V , that host
will send malware trafﬁc (e.g., embedded in email, social
media, or other data ﬂows) to non-infected neighboring hosts
with a ﬁxed probability during each time interval, which we
model as a Poisson process with rate µv. The receiving host
becomes infected with probability pS,v, depending on the set
of malwares S currently infecting that host. This dependence
is due to the fact that malwares may either install or disable
anti-virus software onto a node, thus changing the difﬁculty
of re-infection by a different malware.

A pair of malwares v and w can either be co-existing or
competing. If v and w are co-existing, then both can be present
on the same host at any time. If v and w are competing,
then malware v will attempt to remove malware w if it is
successfully installed on a host; hence, malwares v and w
will never reside on the same host. We let Cv denote the set
of malwares that compete with malware v.

B. Network Defense Model

to node nj

We consider two types of defense mechanisms, namely,
patching and packet ﬁltering. In the patching defense, each
node ni is taken ofﬂine with a ﬁxed probability during each
time interval, which we model as a Poisson process with
rate βi, and patched against all known malwares. In the
packet ﬁltering defense, each packet that is sent from node
is randomly forwarded with probability q
ni
to an intrusion detection system, which inspects the packet
for malware signatures. If such signatures are detected, all
malwares are removed from the node that sent the malware
packet. The parameters βi and q vary over time, and are
assumed to be set by a centralized entity with knowledge of
the network topology, which is notiﬁed when a malware packet
or infected node is detected.

C. Background on Passivity

This section gives background on passivity. All deﬁnitions

can be found in [25].

Deﬁnition 1: A system is output feedback passive (OFP) if
there exists a positive semideﬁnite function W and a parameter
ρ such that

˙W (t) ≤ ρy(t)T y(t) + u(t)T y(t)

(1)

for all input u and output y for all time t. If ρ = 0, then the
system is passive.
The parameter ρ is deﬁned as the output feedback passivity
index of the system. If there exists a symmetric matrix Q
˙W (t) ≤ y(t)T Qy(t) + u(t)T y(t) then the output
such that
feedback passivity index ρ is given by ρ = λmax(Q), where
λmax denotes the largest eigenvalue.

Deﬁnition 2: Given a dynamical system x(t) = (x(t)) with
x(0) = x0, an equilibrium point ¯x is exponentially stable if
there exist positive constants c and α such that

||x(t)|| ≤ c exp (−αt)||x0||

for all initial states x0.
The following theorem gives a condition for exponential
stability as well as bounds on the parameters c and α.

Theorem 1: Let

˙x(t) = f (x(t)) be a dynamical system
with equilibrium point x. Suppose that there exists a positive
semideﬁnite function W such that W (x) = 0 and positive
constants c1, c2, c3, and p such that

c1||x||p ≤ W (x) ≤ c2||x||p
˙W ≤ −c3||x − x||p.

Then x is exponentially stable with rate of convergence given
by

(cid:19)1/p

(cid:18) c2

c1

(cid:18)

(cid:19)

exp

− c3
pc1

t

||x0||.

||x(t)|| ≤

IV. MULTI-VIRUS PROPAGATION DYNAMICS

In this section, a Markov model for the malware propagation
and mitigation is formulated. A state-space dynamical model is
then derived using a mean-ﬁeld approximation of the Markov
propagation model. We then prove that the propagation model
is output feedback passive, as a ﬁrst step towards a passivity-
based approach to designing a mitigation strategy. We formu-
late the problem of selecting a static patching rate when the
propagation parameters are known.

A. Markov Model and Mean-Field Approximation

The time-varying components of the system model deﬁned
in Section III consist of the set of viruses infecting each
time t, denoted Si(t) ⊆ V , as well as the
node ni at
patching rate βi(t) of each node ni and the probability of
packet ﬁltering, denoted q(t). The quantities βi(t) and q(t)
vary over time due to the adaptive defense. Taken together,
S(t) = (S1(t), . . . , Sn(t), β1(t), . . . , βn(t), q(t)) comprises
the state of the system.
Due to the Poisson assumption on the infection and patching
rates, the state S(t) deﬁnes a continuous-time Markov chain
with the following transition rates. For virus v, each infected
node sends malware packets to each uninfected neighbor with
rate µv. When a node ni receives a packet infected with
virus v at time t, node ni becomes infected with virus v
and all competing viruses (i.e., Si(t) ∩ Cv) are removed
with probability p(Si(t), v). Each node’s transition rate from
being infected with a set of viruses S to being infected with
S \ Cv ∪{v} due to a single neighbor infected with virus v is
denoted λS,v (cid:44) p(S, v)µv.

3

Transitions due to the ﬁltering process are described as fol-
lows. For any virus v with v ∈ Si(t)\ Sj(t) with nj ∈ N (ni),
node ni sends malware packets to nj with rate µv, which
are inspected with probability q(t). If the packet is inspected,
then the node ni is taken ofﬂine and all viruses in Si(t) are
removed, resulting in a transition from Si(t) to ∅ with rate
(t) (cid:44) q(t)µv. The last type of transition occurs due to the
v
λ
patching process. This results in a transition from Si(t) to ∅
with rate βi(t).

is exponential

The Markov model deﬁned in this fashion has a number
of states that
in the number of nodes and
viruses. For tractability of the computation and analysis,
we introduce a mean-ﬁeld approximation analogous to [15],
[18], [26]. The mean-ﬁeld model is described by the states
{xS
i (t) : i ∈ N, S ⊆ V }, deﬁned as the probability that node
i is infected with a set of viruses S at time t. In describing the
mean-ﬁeld dynamics, we ﬁrst observe that the set of subsets
of V that can transition to a set S is given by
{(S \ {v}) ∪ R : R ⊆ Cv}.

(cid:91)

v∈S

Hence the net transitions into state Si are described by

˙xS
i (t)
=

λ(S\{v}∪R,v)

j∈N (i)

v∈S
× P r(Si(t) = S \ {v} ∪ R, Sj(t) = T )]

T(cid:51)v

(cid:104)

R⊆Cv

(cid:88)
(cid:88)
−(cid:88)
(cid:88)
(cid:88)
−(cid:88)

(cid:88)
(cid:88)
(cid:104)
(cid:88)
(cid:88)

T(cid:51)v

λS,S∪{v}\Cv
× P r(Si(t) = S, Sj(t) = T )]

j∈N (i)

v /∈S

v∈S

j∈N (i)
i (t)

−βi(t)xS

T :v /∈T

λ(t)P r(Si(t) = S, Sj(t) = T ) (4)

(2)

(3)

(5)

In the above, Eq. (2) describes transitions to S due to infection,
while Eq. (3) describes transitions from S due to infection
with viruses not in S. Eqs. (4) and (5) describe the impact of
ﬁltering and patching, respectively. As an approximation, we
make an independence assumption that

P r(Si(t) = S, Sj(t) = T ) = xS\R∪{v}

i

xT
j

for all i, j, S, and T . With this assumption, the dynamics of
i (t) are rewritten as
xS

˙xS
i (t)
=

(cid:88)

v∈S

(cid:88)
(cid:88)
(cid:88)
−(cid:88)
−(cid:88)
(cid:88)

R⊆Cv

v /∈S

(cid:88)
(cid:88)
(cid:88)

T(cid:51)v

j∈N (i)

j∈N (i)

v∈S

j∈N (i)
i (t)

−βi(t)xS

T :v /∈T

λ(S\{v}∪R,v)xS\{v}∪R

i

T(cid:51)v
λS,S∪{v}\Cv xS

i xT
j

v

λ

(t)xS

i xT
j

xT
j

(6)

(7)

(8)

(9)

Note that, while the independence assumption is common
in models of malware propagation, it is known to overestimate
the propagation of a single virus [26] and underestimate the

4

Fig. 1. Representation of our passivity-based approach, consisting of coupled
dynamical systems representing propagation, ﬁltering, and patching.

Λvv =

λS,v.

w

λ

(t)xS

i (t)xw

j (t) − βi(t)xv

i (t).

where the inequality follows from the identity (2xS\{v}∪R
i )2 ≥ 0. Since
xS

i

−

The following theorem uses the results of Lemma 1 to es-
tablish output feedback passivity of the propagation dynamics,
using the storage function

Wi(x) =

(xS

i )2.

Lemma 2: In the SIS case,

˙Wi ≤ xT

i Qixi +

nj∈N (ni)
where Qi is a diagonal matrix with

(cid:88)

|N (ni)|

Qi(S, S) =

6

v∈S

R⊆Cv

xT
j Qxj + uT

i xi,

2|V \Cv|−1λS\{v}∪R,v

and Q = HΛH T . Here H is a 2|V | × |V | 0-1 matrix with
HSv = 1 if v ∈ S and Λ is a |V | × |V | diagonal matrix with

S(cid:54)=∅

1
2

(cid:88)
(cid:88)
(cid:88)

(cid:88)

S:v /∈S

1
12

˙Wi =

Proof: By Lemma 1,

(cid:104)
(cid:88)
(cid:88)
(cid:88)
˙Wi(x) is equal to
γS\{v}∪R→S(t)(−(xS\{v}∪R
(cid:105)
(cid:88)
(cid:88)
(cid:88)

S∈R
+xS\{v}∪R

R⊆Cv
xS
i )

v∈S

i

i

)2

≤ 1
4

S∈R

v∈S

λS\{v}∪R,vxv
j ,

R⊆Cv

R⊆Cv

nj∈N (ni)

nj∈N (ni)

λS\{v}∪R,vxv

(cid:2)γS\{v}∪R→S(t)(xS
i )2(cid:3)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:32) (cid:88)
(cid:88)
(cid:88)
(cid:88)

(cid:33)(cid:32) (cid:88)

λS\{v}∪R,v

(cid:88)

nj∈N (ni)

R⊆Cv

T :v∈T

S:v /∈S

λS,v

v∈V

S∈R

v∈S

R⊆Cv

j (xS

i )2

λS\{v}∪R,v(xv

j )2

λS\{v}∪R,v(xS

i )2

(cid:33)2
 (xS

xT
j

i )2.

γS\{v}∪R→S(t) =

S∈R

(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)

S∈R

v∈S

v∈S

˙Wi ≤ 1
4
≤ 1
12

+

1
6

˙Wi ≤ 1
12

(cid:88)

nj∈N (ni)
|N (ni)|

+

6

S∈R

v∈S
by the inequality abc ≤ 1
yields

nj∈N (ni)

R⊆Cv
3 (a2 + b2 + c2). Grouping like terms

Two special cases are a set of competing viruses, in which
Cv = V \ {v} for all v ∈ V , and coexisting viruses, in which
Cv = ∅ for all v ∈ V . In the coexisting virus case,
2|V |−1λS\{v},v,

|N (ni)|

(cid:88)

Qi(S, S) =

6

v∈S

B. Passivity Analysis of Malware Propagation

we have

propagation of multiple viruses [27]. In Section VII, we em-
pirically analyze the accuracy of our approximate dynamical
model.

Letting xv

i (t) denote the probability that node ni is infected
i (t), we have

S(cid:51)v xS

with virus v at time t, so that xv
that

i (t) =(cid:80)

v
˙x
i (t) =

λS,vxv

j (t)xS

i (t)

(cid:88)
−(cid:88)

S:v /∈S

(cid:88)
(cid:88)

j∈N (i)

(cid:88)

S(cid:51)v

w∈S

j∈N (i)

Our passivity-based analysis of malware propagation and
mitigation decomposes the propagation model into three cou-
pled dynamical systems, namely, multi-virus propagation,
ﬁltering-based mitigation, and patching based mitigation (Fig-
ure 1). The ﬁrst step in developing our approach is to prove
that the propagation dynamics (top block) are output feedback
passive. As a preliminary, we have the following result that
provides a storage function for systems characterized by
continuous-time Markov chains.

Lemma 1: Consider a continuous-time Markov chain with
a ﬁnite number of states V , where the time-varying transition
rate from v to u at time t is denoted as γv→u(t). Let xv(t)
denote the probability that the Markov process is in state v at
time t. Each state dynamics is given as

u(cid:54)=v

γu→v(t)xu −(cid:88)
(cid:88)
(cid:80)
(cid:88)
(cid:88)

v,
v x2
γv→u(t)(−x2

u(cid:54)=v

˙xv =

˙W =

For the storage function W = 1
2

v + xuxv).

v

u

The proof is straightforward and is omitted due to space
constraints.

γv→u(t)xv.

(10)

--while in the competing case

Qi(S, S) =

|N (ni)|

6

 .

λu,v + λ∅,v

(cid:88)

u(cid:54)=v

In general, the passivity index in the competing case will be
less than the passivity index in the coexisting case.

The following theorem implies that the multi-virus propaga-
tion is output-feedback passive, and hence that passivity-based
techniques can be developed to design a mitigation strategy.
Theorem 2: The mean-ﬁeld approximation (6)–(9) of the
multi-virus propagation dynamics is output feedback passive
from input (u1,i : i ∈ N ) to output (xi : i ∈ N ), with passivity
index ρ bounded by

where λmax(·) denotes the largest eigenvalue of a matrix.

By Lemma 2,

˙W (x) =

ρ ≤ max

{Qi + diQ},

i

˙Wi ≤(cid:88)

Proof: Select the storage function W (x) =(cid:80)
(cid:88)
(cid:88)
(cid:88)

i Qxi + uT x

(cid:88)

(cid:88)

(cid:88)

nj∈N (ni)

i Qixi +

i Qixi +

dixT

xT

xT

=

xT
i (Qi + diQ)xi + uT x,

=

i

i

i

i

i

i∈N Wi(x).

xT
j Qxj + uT x

i

implying that
maxi {λmax(Qi + diQ)}.

the system is OFP with passivity index

C. Design of Static Mitigation Strategies

If the compromise rates λS,v are known for all S and v, then
the results of Lemma 2 and Theorem 2 can be used to select
the patching rates {βi : i ∈ N} while minimizing a desired
cost function. The following proposition provides a sufﬁcient
condition for removal of all viruses at a desired rate .

Proposition 1: Let Bi = βiI(2|V |−1)×(2|V |−1), where I
denotes the identity matrix, and let B be a block diagonal
matrix with the Bi’s as diagonal entries. Deﬁne Q by

 Q1

...

0

 .

0

···
...
...
··· Qn

Q = A ⊗ Q +

If B − Q ≥ I, where “≥” denotes inequality in the semideﬁ-
||x(t)||2 ≤ √
nite cone, then all viruses will be removed in steady-state and

ne−t for all t ≥ 0.

Proof: Using the storage function W (x) = 1

2 xT x,

Theorem 2 implies that

˙W (x) ≤ xT QxT − xT BxT ≤ −xT x.

Hence

||x(t)||2 ≤ e−t||x||2 ≤ e−t

≤ √

ne−t,

(cid:88)

i∈N

(cid:88)

S⊆V

21/2

xS
i

5

(11)

since(cid:80)

i ≤ 1.

S xS

Proposition 1 implies that an optimal patching strategy can
be selecting using semideﬁnite programming, with the problem
formulation

minimize (cid:80)

s.t.

i∈N ci(βi)
B ≥ Q + I
βi ≥ 0 ∀i

When the infection parameters λS,v are known, the op-
timization problem (11) can be used to select an efﬁcient
mitigation strategy. In general, however,
these parameters
will be unknown. One approach to incorporating unknown
infection rates is through robust variations on (11), which
would select the minimum-cost mitigation strategy over a set
of possible mitigation strategies. Alternatively, an adaptive ap-
proach can be designed that dynamically adjusts the patching
rate based on previously observed infections. Developing such
an approach is the focus of the next section.

V. PATCHING-BASED ADAPTIVE MITIGATION

This section presents two adaptive strategies for tuning the
patching rate based on previous detections of infected nodes.
The convergence of the patching rate and infection probability
are analyzed for both rules.

A. Adaptive Patching Strategy

As in the previous section, we take a passivity-based
approach to designing the patching strategy; the approach,
however,
is based on an equivalent representation of the
malware propagation dynamics with different input and output.

S:v /∈S λS,v.
Proposition 2: The dynamics of xi are passive from input
ˆλ − βi) to output (xi)2.

i , deﬁned by
j − βixi.

(di

v∈V

nj∈N (ni)

(cid:88)

S xS
λ∅,vxv

˙xi = (1 − xi)

We use the state dynamics of xi =(cid:80)
(cid:88)
Deﬁne ˆλv =(cid:80)
Proof: Deﬁne the storage function V (x) =(cid:80)
(cid:88)
j −(cid:88)
≤(cid:88)
≤(cid:88)
≤ (cid:88)
(cid:88)

(cid:88)
(cid:88)
(cid:88)
ˆλxj −(cid:88)
ˆλxixj −(cid:88)
(cid:88)
ˆλ((xi)2 + (xj)2 −(cid:88)

Differentiating with respect to time gives

i∈N
βi(xi)2

xi(1 − xi)

xi(1 − xi)

nj∈N (ni)

nj∈N (ni)

λ∅,vxv

˙V (x) =

βi(xi)2

βi(xi)2

(i,j)∈E

j∈N (i)

i∈N

i∈N

i∈N

i∈N

i∈N

i∈N

v∈V

ˆλ − βi)(xi)2.

(di

=

i∈N

i∈N (xv

i )2.

βi(t)(xi)2

The existence of the storage function V satisfying the ﬁnal
inequality implies passivity of xi.

The passivity of the propagation dynamics implies that, in
order to ensure convergence to the state where all viruses are
removed, it sufﬁces to select an update rule ˙βi(t) that is passive

6

from input (xi)2 to output (di
is given by

ˆλ− βi). One such adaptive rule

˙βi(t) = αxi,

(12)

α

for some α > 0, which can be implemented by incrementing
βi(t) by
βi(t) when an infection of node ni is detected. This
rule requires that βi(0) > 0.
Theorem 3: Under the patching update rule ˙βi(t) = αxi(t),
limt→∞ xi(t) = 0 for all i ∈ N, implying that all malwares
are removed asymptotically from the network.

Proof: The proof is via the LaSalle Invariance Principle.

Deﬁne the energy storage function V (x, β) by

V (x, β) =

(xv

i )2 +

Γv

i (βi),

(cid:88)

(cid:88)

v∈V

i∈N

where

Γv

i (βi) =

2α (di
0,

ˆλv − βi)2, βi ≤ di

else

ˆλv

(cid:88)

i∈N

(cid:88)
(cid:26) 1

v∈V

By inspection, V is continuously differentiable. We now show
that

˙V (x, β) ≤ 0. By Proposition 2,
ˆλv − βi)(xv

(di

i )2 −(cid:88)

(cid:88)

˙Γv
i (βi)

˙V (x, β) ≤(cid:88)
(cid:88)

i∈N

(cid:88)
(cid:88)

v∈V

(cid:104)

(cid:105)

v∈V

i∈N
i )2 − ˙Γv

i (βi)

.

ˆλv − βi)(xv

(di

=

i∈N

v∈V

We will show that each term of the inner summation is
bounded above by zero. If βi ≤ di
ˆλv, then, the corresponding
term is given by

i

i ) ≤ 0,

i )2 − xv

ˆλv − βi)((xv
for xv

i )2 ≤ 0.

(di
i )2 ≤ xv
ˆλv, then the corresponding term is simply (di

i ∈ [0, 1]. On the other hand, if
ˆλv −

since (xv
βi > di
βi)(xv
converge to {(x, β) :
equal to {(x, β) : x = 0}. First, note that
˙V (x, β) is given by
β. On the other hand,

By the LaSalle Invariance Principle, all trajectories of (x, β)
˙V (x, β) = 0}. We show that this set is
˙V (0, β) = 0 for all

(cid:88)

(cid:88)

i∈N

v∈V

xv

i

(cid:32) (cid:88)

S:v /∈S

˙V (x, β) =

(cid:33) (cid:88)

λS,vxS
i

xv
j

(cid:105)
nj∈N (ni)
i )2 − ˙Γv
,
i = 0 for all i ∈ N

i (βi)

−βi(xv

which is identically zero if and only if xv
and v ∈ V .

B. Analysis of Adaptive Patching Rate

˙βi(t) = α(cid:80)

We now analyze the time required for the adaptive patching
ˆλ. As an approximation, we
rate to converge to βi(t) = di
i (t) instantaneously
assume that the malware propagation xv
i (β), and that xv
converges to a ﬁxed point, denoted sv
i
instantaneously converges to ﬁxed point si. We then have
i (β). In order to bound the convergence
i as follows. We have that
λ∅,vsv

rate, we derive a lower bound on sv

(cid:88)

(cid:88)

(1 − si)

j − βisi,

v∈V sv

v

nj∈N (ni)

(1 − si)

and hence the union bound(cid:80)
(cid:88)
(cid:88)
≤(cid:88)

λmindisi ≤ 2

(cid:88)

nj∈N (ni)

i∈N

(i,j)∈E

j ≥ sj implies that
v sv
λminsj ≤ βisi.

(cid:88)
(cid:88)

i∈N

i∈N

λminsisj +

βisi

diλmin(si)2 +

βisi.

i∈N

Summing over i and rearranging terms yields

We then arrive at the lower bound

si(λmindi − βi − diλminsi) ≤ 0.

(cid:88)

i∈N

(cid:88)

= α1T e(λA−B0)t1 ≤ α

n2 eµ1(λA−B0)t,

where µ1(λA − B0) denotes the maximum eigenvalue of the
matrix (λA − B0). Integrating yields

βi(t) ≤ βi(0)+

i∈N
giving a ﬁnal value β∗

mn2α

|µ1(λA − B0)| (1−exp (−|µ1(λA − B0)|t)),
i ≤ βi(0) +
(cid:40)

|µ1(λA−B0)|.

(cid:41)

n2α

This bound depends on the value of βi(0), and is valid

whenever βi(0) > λmaxdi. We therefore have

i ≤ min
β∗

1,...,n

n2α

|µ1(λA − B0)| +

(λdi + i)

.

(cid:88)

i∈N

(cid:88)

i∈N

Based on this inequality, we take the approximation si ≥
diλmin−βi

, leading to the dynamics

diλmin

(cid:88)

v∈V

(cid:88)

v∈V

i ≥ α
sv
(cid:18)

˙βi(t) = α

The resulting lower bound on βi(t) is then given by
− λ
di

βi(0) − αmdi
λ

βi(t) ≥ αmdi
λ

exp

+

1
diλv

min

(diλv

min − βi).
(cid:18)
(cid:19)

t

,

(cid:19)

where λ =(cid:80)

v∈V

1
λv

min

.

Next, we consider the ﬁnal value of βi that is reached after
the infection rates converge to zero. The approach is to upper
bound xi(t), leading to an upper bound on ˙βi(t) and hence
on βi(t). Since βi is nondecreasing over time, we have

˙xi(t) ≤ (cid:88)

j∈N (i)

≤ λv

max

(cid:88)

j∈N (i)

λmax(1 − xi)xj − βixi

xj − βi(0)xi

which can be expressed in matrix form as ˙x(t) = (λmaxA −
B0)x(t) where A denotes the adjacency matrix of the network
and B0 is a diagonal matrix with βi(0) on the i-th diagonal
entry. Hence

˙x(t) ≤ e(λA−B0)tx(t) ≤ e(λA−B0)t1.

Applying this bound gives

(cid:88)

i∈N

˙βi(t) ≤(cid:88)

(cid:88)

i∈N

v∈V

αe(λA−B0)t1

We apply the Greshgorin Circle Theorem to obtain a lower
bound

First, note that A is symmetric and is negative deﬁnite by

the Gershgorin Circle Theorem. We select a matrix P as

7

(cid:33)

(cid:32)
(cid:16)

P =

−1

τ A
(α+γ)

2γ

I

(α+γ)

I

2γ
(α+γ)2 τ A

γ

−1 − 

2γ A

(cid:17)

2

γ

 + (α+γ)2

with τ = − 1
. It can be shown that AT P +
P A = −I. Furthermore, P is symmetric since the matrices
−1 are symmetric. It remains to show that P is
A and A
positive deﬁnite. We apply the Schur complement theorem,
which states that P is symmetric if and only if

(cid:32)

(cid:18) (α + γ)

1
τ

(cid:19)2 1

2γ

τ


2γ

+

γ

(α + γ)2 τ A

−1 −

−1

A

(cid:33)

> 0 (14)

A > 0 (15)

where “>” denotes inequality in the positive deﬁnite cone.
Eq. (14) holds since A is negative deﬁnite and τ < 0. After
simplifying, Eq. (15) holds since γ > 0 and A is negative
deﬁnite. We have that there exists a positive deﬁnite matrix P
such that the Jacobian matrix A satisﬁes AT P + P A = −I,
implying that the linearized system matrix A is Hurwitz and
the ﬁxed point is asymptotically stable.

VI. ADAPTIVE PACKET FILTERING-BASED MITIGATION

This section proposes and analyzes an adaptive rule for
packet ﬁltering-based mitigation. Under the rule, the prob-
ability of ﬁltering each packet q is increased with each
malware packet that is detected. We ﬁrst formally deﬁne the
adaptive ﬁltering-based mitigation strategy, and then analyze
the convergence rate and overhead. A joint analysis of patching
and ﬁltering-based mitigation is then presented.

A. Adaptive Filtering Strategy

The ﬁrst step in developing the adaptive ﬁltering strategy is
to analyze the passivity of the propagation dynamics when the
output is equal to the information available to the packet ﬁl-
tering defense, namely, the rate of packets exchanged between
nodes ni and nj. These passivity properties are analyzed in
v
the following proposition. As a preliminary, deﬁne λ
= qµv.
Proposition 3: The multi-virus propagation dynamics are
) : v ∈ V ) to output (yv(t) :

max − λ

v

passive from input ((λv
(i, j) ∈ E, v ∈ V ), where

yv(t) =

µv(xv

i (1 − xv

j ) + xv

j (1 − xv
i ))

(cid:88)

(i,j)∈E

and µv is the rate at which malware v sends packets to
neighboring nodes.

Proof: Deﬁne a storage function by

n(cid:88)

(cid:88)

i=1

v∈V

V (x) =

1
2

(xv

i )2.

|µ1(λA − B0)| ≥ min{i : i = 1, . . . , n},

so that (cid:88)

i∈N

(cid:26) n2α

(cid:27)

i ≤ min
β∗

= λ|E| + 2n



+ λ|E| + n
√

nα.

This gives an average β∗
√
2

nα.

i value of approximately λdavg +

C. Non-Monotone Patching Strategy

The adaptive patching strategy (12) results in a patching
rate that is monotone nondecreasing in time, and hence may
overshoot the malware propagation rate. We now present a
patching strategy that can drive the probability of infection
to an arbitrarily small ﬁnal value without exceeding the
propagation rate λ, in the single-virus case. The patching
dynamics are deﬁned by

˙βi(t) = {αxi(t) − γ(1 − xi(t))}+.

(13)

α

This patching strategy can be implemented by incrementing
βi(t) when an infection is detected at node ni,
βi(t) by
γ
and decrementing βi(t) by
βi(t) when inspection of node ni
reveals that no virus is present.

Taken together with the single-virus propagation dynamics

˙xi(t) = λ(1 − xi(t))

(cid:88)

xj(t),

nj∈N (ni)

we have that the steady-state values for the infection prob-
ability and patching rate are given by x∗
α+γ and
β∗
α+γ diλ, respectively. Hence, the probability of infection
i = α
can be set arbitrarily low, and the patching rate can be set
arbitrarily close to the propagation rate, by decreasing γ
α.

i = γ

by the following theorem.

The local stability of these patching dynamics is governed
Theorem 4: The ﬁxed point (x, β) with x∗
β∗
i =

i = γ
diλ for all i ∈ N is asymptotically stable.

(cid:16) α

α+γ and

(cid:17)

α+γ

Proof: Linearizing the system around this ﬁxed point, we

obtain the Jacobian matrix

where I denotes the n × n identity matrix and A is deﬁned
by

(α + γ)I

A

(cid:18)
 −diλ,

λα
α+γ ,
0,

A =

Aij =

(cid:19)

− γ
α+γ I
0

i = j
nj ∈ N (ni)
else

We will now show that the matrix A is Hurwitz. By Lya-
punov’s Theorem, a necessary and sufﬁcient condition is to
construct a symmetric positive deﬁnite matrix P such that
AT P + P A = −I for some  > 0.

8

xv
(cid:88)

i

 (cid:88)

We then have

where λv
that

i=1

v∈V

v∈S

i )xv
j

j∈N (i)

j∈N (i)

u(1)
ij µvxS

i (1 − xv
j )



max(1 − xv
λv

˙V (x) ≤(cid:88)
n(cid:88)
− (cid:88)
(cid:88)
max = max{λS,v : v /∈ S}. Furthermore, we have
˙V (x) ≤(cid:88)
−(cid:88)
˙V (x) ≤(cid:88)

(cid:88)
(cid:88)
(cid:88)
j ≤ (xv

j (1 − xv
i xv
j ))
j )2(1 − xv

j (1 − xv
i xv
i )2(1 − xv

j )2, we have that
i )2(1 − xv
j )

i )2 + (xv
max − λ

)(cid:0)(xv

j ) ≥ µvxS

i (1 − xv
j )

i (1 − xw

λv
max(xv

j ) + (xv

i ) + xv

qµv((xv

(i,j)∈E

(i,j)∈E

µwxS

w∈S

i xv

i )).

v∈V

v∈V

(λv

v

for any v ∈ S, and hence

Now, since 2xv

v∈V

(i,j)∈E

+ (xv

j )2(1 − xv

This completes the proof of passivity.
Proposition 3 implies that the propagation dynamics are
passive from input (λ − λ) to output yv. We consider the
ﬁltering probability update rule

˙q(t) = γ

µv(xv

i (1 − xv

j ) + xv

j (1 − xv
i ))

q<1
(16)
This update rule can be implemented by incrementing q(t) by
γ
q(t) whenever a malware packet is detected, since q(t) and γ
are known parameters at each time t.
Theorem 5: The update rule (16) guarantees convergence of
i to 0 for all i ∈ N and v ∈ V .
xv
(cid:80)
(cid:80)

(cid:80)
(cid:80)
i∈N
2 (q − pmax)2,
2
+ 1
1
i∈N
2
Then ˙V (x, q) is bounded by
˙V (x, q)

Proof: Deﬁne a storage function V (x, q) by

 1

q < pmax
q ≥ pmax

v∈V (xv

v∈V (xv

V (x, q) =

i )2,

i )2

v∈V

(cid:88)
≤(cid:88)
(cid:88)
(cid:88)
(cid:88)
−(cid:88)

(i,j)∈E

v∈V

+

(i,j)∈E

i∈N

v∈V

µv(pv − q)((1 − xv

µv(q − pv)((1 − xv

i )2 ≤ −(cid:88)

(cid:88)

βi(xv

i∈N

v∈V

i )(xv

j )2 + (1 − xv
j + (1 − xv

i )xv

j )xv
i )

j )(xv

i )2)

βi(xv

i )2 < 0

when q < pmax and ˙V (x, q) < 0 when q ≥ pmax as well.
Hence, the function V is strictly decreasing and converges to
the set { ˙V = 0}, which occurs exactly when xv
i = 0 for all
i ∈ N and v ∈ V .

 (cid:88)

(cid:88)

(i,j)∈E

v∈V

i )(cid:1) .


B. Convergence Rate Analysis

The convergence rate of the ﬁltering probability to a suf-
ﬁciently large value will determine how quickly the network
defense is able to mitigate the malware propagation. In order
to analyze the convergence rate, we divide the time required
for all viruses to be removed into two intervals. The ﬁrst time
interval is the time for q(t) to increase until it approaches
max; this can be interpreted as the time required to “learn” the
pv
correct ﬁltering strategy. The second time interval is the time
required for all viruses to be removed after q(t) has reached
this threshold value.
We ﬁrst analyze the time required for q(t) to approach
i (q) : i ∈ N, v ∈ V } denote a ﬁxed
max − βi). Let {rv
(pv
i when q(t) is constant and equal to q; when q
point of xv
is small, there exists such a ﬁxed point with rv
i > 0 for all
i ∈ N and v ∈ V . In order to analyze the convergence rate of
q(t), we adopt an approximation where the dynamics of xv
i
converge instantaneously to rv

i for all i and v.

Under this approximation, the dynamics of q(t) are

(cid:88)

v∈V

(cid:88)

µv(cid:0)(1 − rv

(i,j)∈E

˙q(t) ≈ γ

i (q))rv

j (q)

i (q)(cid:1)(cid:9)

+(1 − rv

j (q))rv

.

(17)

q<1

(cid:18)

A lower bound on the convergence time is described as
follows.

Proposition 4: The ﬁltering probability q(t) satisﬁes
(n − dmin)λmax − βmin
˙q(t) ≤ γβmaxm
pmin − q
when q(t) ≤ pmin.

µmin(pmin − q)

dmin +

The proof is omitted due to space constraints. The upper
bound on q(t) can be used to analyze the time required for
the ﬁltering probability to converge to pmin.
Lemma 3: If pmin (cid:28) 1, then the time required for the
ﬁltering probability q(t) to equal pmin is bounded below by

(cid:19)

(18)

p3
minµmin

3γβmaxm((n − dmin)λmax − βmin)

.

The proof is omitted due to space constraints.

We brieﬂy remark on the tightness of the bound for a special
case. Consider a network with a complete graph topology and
a single propagating virus, in which all nodes have an identical
patching rate β. At the equilibrium ri, we have

ri = (p − q)µ

[ri(1 − rj) + rj(1 − ri)].

(cid:88)

i

β

(cid:88)

(i,j)

By symmetry, there exists r such that ri = r for all i ∈ N.
Hence the approximation (17) is equivalent to ˙q(t) = βγnr
p−q .
By symmetry, we have

(p − q)(n − 1)µ − β
(p − q)(n − 1)µ

(cid:18) µ(n − 1)p − β

,

(cid:19)

.

− q

r =

which implies that

˙q(t) ≥ γ

nβ
p

µ(n − 1)
This bound agrees exactly with (18).

C. Final Value of Filtering Probability

9

The ﬁltering probability q(t) is a monotone increasing
function that is bounded above by 1, and hence converges to
a value q∗ = limt→∞ q(t). If this ﬁnal value is approximately
equal to pmax, then the network will ﬁlter just enough packets
to ensure that all viruses are removed. On the other hand, if q∗
is approximately equal to 1, then almost all packets (including
non-malware packets) will be inspected, increasing the delays
experienced by legitimate network trafﬁc. In what follows, we
analyze the value of q∗ as a function of the parameters γ and
β.

Proposition 5: The ﬁnal value of q(t) satisﬁes

(cid:40)

(cid:41)

(cid:88)

i∈N

di
βi

q∗ ≤ min

pmax + mγ

, 1

.

(19)

The proof is omitted due to space constraints.

VII. SIMULATION STUDY

In this section, we conduct a numerical study via Matlab.
We conduct three numerical studies. First, we simulate the
effectiveness of the static patching strategies when the in-
fection rates λ values are known. Second, we simulate the
adaptive patching strategy where the patching rate for node
i is incrementally increased when the infection of node i
is detected. Finally, we conduct a numerical study for the
adaptive patching strategy proposed in Section V-C.

We consider a randomly generated network with 200 nodes
and an average node degree of 12, where the maximum degree
was 20. We assume there are two viruses v1, v2 propagating
through the network, and the infection rates are given as
λI,I∪{v1} = λ1 = 1 and λI,I∪{v2} = λ2 = 2 for all sets
I ⊂ {v1, v2} in the coexisting case, and the same infection
rates are given as λ∅,v1 = λv2,v1 = 1, λ∅,v2 = λv1,v2 = 2
in the competing case. We assume that initially, each node is
not infected with any virus with probability of 0.25, and the
remaining probability is distributed uniformly at random to
i = 0.75). We also assume that each node

other states ((cid:80)

I xI

is susceptible to all viruses.

We ﬁrst evaluate the impact of mitigation strategies for
different patching rates for the static patching strategy. Figure
2 shows that when the patching rate satisﬁes the sufﬁcient
conditions derived in Section IV-C, where the patching rate is
higher than the passivity index of the propagation dynamics,
the static patching strategy removes all malwares asymptot-
ically from the network for both competing and coexisting
cases.

Convergence of patching rates for the non-decreasing adap-
tive patching strategy for different α values are shown in
Figure 3 for both competing and coexisting cases. The network
conﬁguration is same as the static patching rate case, and the
initial β values were set to 10 for all nodes.

Figure 4 veriﬁes that

the average patching value will
converge to a ﬁnite ﬁnal patching rate. It is illustrated that
the larger values of the update parameter α ensures faster
convergence to the ﬁnal state where no node is infected with
any malware. However,
the large update parameter values
the
α also result

in higher ﬁnal average patching rate at

(a)

(b)

Fig. 2. Figures illustrating asymptotic convergence of expected number of
infected nodes for competing and coexisting cases. (a) the patching rate β =
25 is not sufﬁcient to remove all malwares. (b) the patching rate β = 30 is
sufﬁcient to remove all malwares for both competing and coexisting cases.

(a)

(b)

Fig. 3. Figures illustrating the convergence of average β value for competing
(a) and coexisting (b) cases. In both cases,
the non-decreasing adaptive
patching rule guarantee convergence of average patching rates. Higher values
of α ensures faster convergence rate to the ﬁnal value at the cost of higher
ﬁnal patching rates at the equilibrium.

equilibrium, resulting in unnecessarily high patching rates at
the equilibrium.

The adaptive update rule (13) was evaluated as follows. We
considered propagation of a single virus in an Erdos-Renyi
random graph with n = 100 and p = 0.05. The propagation
rate λ = 1, while α = 1 and γ = 0.1. For each node, the
initial infection probabilities and patching rates were chosen
independently and uniformly at random from [0, 1] and [0, 0.2],
respectively.

γ

The trajectory of xi(t) for i = 1, 2, 3 is shown in Figure
4(a). Each of the three trajectories converges to the ﬁxed point
α+γ from the initial state. We observed this behavior in all
independent trials that were run, leading us to conjecture that
convergence to the desired steady-state occurs from any initial
state and hence is not a purely local phenomenon. We plan to
investigate this conjecture in future work. The value of the
adaptive patching rates β is shown in Figure 4(b). As in the
case of the infection probabilities xi(t), we observed that the
patching rates converged to steady-state values di
α+γ λ for all
i. On the other hand, the patching rates appeared to converge
at a slower rate than the infection probabilities.

α

We compared the infection probability dynamics under
different values of α and γ in Figure 4(c). The ﬁgure shows
the mean-square deviation of the infection probabilities from
their steady-state values, deﬁned as
xi − γ

(cid:88)

(cid:19)2

(cid:18)

.

i∈N

α + γ

Convergence to the steady-state occurred from random initial
states for all values of the parameters. Larger values of α led
to faster convergence to the steady-state, even when the value

Time0200400600800100012001400160018002000Expected number of infected nodes 050100150 Expected number of infected nodes vs. time (β = 25)CompetingCoexsitingTime0200400600800100012001400160018002000Expected number of infected nodes 050100150 Expected number of infected nodes vs. time (β = 30)CompetingCoexsiting00.511.52x 1041015202530timeβ (t)Convergence of β (competing case)  alpha = 20alpha = 40alpha = 5000.511.52x 104101520253035timeβ (t)Convergence of β (coexisting case)  alpha = 20alpha = 40alpha = 5010

(a)

(b)

(c)

Fig. 4. Simulation of the adaptive patching rate (13) in an Erdos-Renyi graph with n = 100 and p = 0.05. The simulation considered a single virus
propagating with rate λ = 0.1. (a) Infection probabilities over time with α = 1 and γ = 0.1. The infection probabilities converged to the ﬁxed point
α+γ
from randomly chosen initial values during all independent random trials. (b) Dynamics of the patching rate under the adaptive rule. The patching rate of
each node i converged to the ﬁxed point. (c) Comparison of the mean-square deviation of the infection probabilities from the ﬁxed point for different values
of α and γ. Increasing the value of β led to faster convergence, even when γ was increased by a proportional amount.

γ

of γ was increased by a promotional amount. Furthermore, we
observed that the mean-square deviation was not strictly de-
creasing over time, although asymptotic convergence occurred
in all cases.

VIII. CONCLUSIONS

In this paper, we investigated static and adaptive mitigation
strategies against propagation of multiple competing and co-
existing malware. We developed a passivity-based framework,
and proved that patching and ﬁltering-based defenses can be
analyzed and designed jointly by modeling them as coupled
dynamical systems. In the case where the malware propagation
rates are known a priori, we characterized the needed patching
rate as a passivity index of the dynamical model. We formu-
lated the problem of selecting the minimum-cost mitigation
strategy to remove all viruses at a desired rate by leveraging
the derived passivity index.

When the propagation rates are not known a priori, we
proposed adaptive mitigation strategies that vary the rate of
patching a node, or the probability of ﬁltering a packet, in
response to the observed malware infections. We proposed two
adaptive patching strategies, namely, a monotone increasing
patching rate that guarantees removal of all viruses in steady-
state, as well as a non-monotone patching rate that can
approximate the propagation rate to any desired accuracy
by varying the mitigation parameters. We also proposed an
adaptive packet ﬁltering strategy for removing all viruses.

The adaptive update strategies proposed in this paper in-
volve each node updating its own patching rate based on
its observed infection probability. In future work, we plan to
investigate more adaptive strategies in which each node also
leverages infection information from other nodes, including its
neighbors, in order to more quickly converge to the optimal
patching rate. We will also investigate generalizations to other
propagation models, such as Susceptible-Infected-Recovered
(SIR).

REFERENCES

[1] P. Wang, L. Wu, B. Aslam, and C. C. Zou, “A systematic study on peer-
to-peer botnets,” Proceedings of 18th IEEE Internatonal Conference on
Computer Communications and Networks, pp. 1–8, 2009.

[2] G. Gu, P. A. Porras, V. Yegneswaran, M. W. Fong, and W. Lee,
“Bothunter: Detecting malware infection through ids-driven dialog cor-
relation.” Usenix Security, vol. 7, pp. 1–16, 2007.

[3] G. Yan, G. Chen, S. Eidenbenz, and N. Li, “Malware propagation in
online social networks: nature, dynamics, and defense implications,”
Proceedings of the 6th ACM Symposium on Information, Computer and
Communications Security, pp. 196–206, 2011.

[4] Y. Zhou and X. Jiang, “Dissecting android malware: Characterization
and evolution,” IEEE Symposium on Security and Privacy, pp. 95–109,
2012.

[5] F. B. Muhaya, M. K. Khan, and Y. Xiang, “Polymorphic malware
detection using hierarchical hidden markov model,” Dependable, Auto-
nomic and Secure Computing (DASC), 2011 IEEE Ninth International
Conference on, pp. 151–155, 2011.

[6] C. C. Zou, W. Gong, and D. Towsley, “Worm propagation modeling and
analysis under dynamic quarantine defense,” Proceedings of the 2003
ACM workshop on Rapid malcode, pp. 51–60, 2003.

[7] N. Provos and T. Holz, Virtual Honeypots: From Botnet Tracking to

Intrusion Detection. Pearson Education, 2007.

[8] C. C. Zou, W. Gong, and D. Towsley, “Code red worm propagation
modeling and analysis,” Proceedings of the 9th ACM Conference on
Computer and Communications Security, pp. 138–147, 2002.

[9] M. Bloem, T. Alpcan, and T. Bas¸ar, “Optimal and robust epidemic
response for multiple networks,” Control Engineering Practice, vol. 17,
no. 5, pp. 525–533, 2009.

[10] C. Nowzari, V. M. Preciado, and G. J. Pappas, “Analysis and control
of epidemics: A survey of spreading processes on complex networks,”
arXiv preprint arXiv:1505.00768, 2015.

[11] S. Han, V. M. Preciado, C. Nowzari, and G. J. Pappas, “Data-driven al-
location of vaccines for controlling epidemic outbreaks,” arXiv preprint
arXiv:1412.2144, 2014.

[12] M. Bailey, E. Cooke, F. Jahanian, and D. Watson, “The blaster worm:
Then and now,” IEEE Security & Privacy, vol. 3, no. 4, pp. 26–31, 2005.
[13] F. Castaneda, E. C. Sezer, and J. Xu, “Worm vs. worm: preliminary
study of an active counter-attack mechanism,” Proceedings of the 2004
ACM workshop on Rapid malcode, pp. 83–93, 2004.

[14] S. Wen, W. Zhou, J. Zhang, Y. Xiang, W. Zhou, W. Jia, and C. C. Zou,
“Modeling and analysis on the propagation dynamics of modern email
malware,” IEEE Transactions on Dependable and Secure Computing,
vol. 11, no. 4, pp. 361–374, 2014.

[15] J. O. Kephart and S. R. White, “Directed-graph epidemiological models
of computer viruses,” IEEE Computer Society Symposium on Research
in Security and Privacy, pp. 343–359, 1991.

[16] Y. Wang, D. Chakrabarti, C. Wang, and C. Faloutsos, “Epidemic
spreading in real networks: An eigenvalue viewpoint,” pp. 25–34, 2003.
[17] A. Ganesh, L. Massouli´e, and D. Towsley, “The effect of network

topology on the spread of epidemics,” pp. 1455–1466, 2005.

[18] S. Xu, W. Lu, and Z. Zhan, “A stochastic model of multivirus dynamics,”
IEEE Transactions on Dependable and Secure Computing, vol. 9, no. 1,
pp. 30–45, 2012.

[19] N. Watkins, C. Nowzari, V. Preciado, and G. Pappas, “Optimal resource
allocation for competing epidemics over arbitrary networks,” Proceed-
ings of the American Control Conference, pp. 1381–1386, 2015.

[20] M. H. R. Khouzani, S. Sarkar, and E. Altman, “Maximum damage

00.511.522.533.544.55Time×10400.10.20.30.40.50.60.70.80.9Infection probabilityMalware infection probabilities under adaptive patching, n=100Node 1Node 2Node 300.511.522.533.544.55Time×10400.511.522.533.544.55Infection probabilityPatching ratesNode 1Node 2Node 300.511.522.533.544.55Time×104012345678Mean-square deviation from fixed pointEffect of adaptive parameters on convergenceα=1, γ=0.1α=2, γ=0.2α=1, γ=0.2α=3, γ=0.611

malware attack in mobile wireless networks,” IEEE/ACM Transactions
on Networking, vol. 20, no. 5, pp. 1347–1360, 2012.

[21] W. Lu, S. Xu, and X. Yi, “Optimizing active cyber defense,” Decision

and Game Theory for Security, pp. 206–225, 2013.

[22] M. Khouzani, S. Sarkar, and E. Altman, “Saddle-point strategies in
malware attack,” IEEE Journal on Selected Areas in Communications,
vol. 30, no. 1, pp. 31–43, 2012.

[23] V. M. Preciado, M. Zargham, C. Enyioha, A. Jadbabaie, and G. Pappas,
“Optimal vaccine allocation to control epidemic outbreaks in arbitrary
networks,” 52nd IEEE Conference on Decision and Control (CDC), pp.
7486–7491, 2013.

[24] P. Lee, A. Clark, L. Bushnell, and R. Poovendran, “Passivity framework
for composition and mitigation of multi-virus propagation in networked
systems,” American Control Conference (ACC), pp. 2453–2460, 2015.
Prentice Hall Upper Saddle River,

[25] H. K. Khalil, Nonlinear Systems.

[26] P. Van Mieghem, J. Omic, and R. Kooij, “Virus spread in networks,”
IEEE/ACM Transactions on Networking, vol. 17, no. 1, pp. 1–14, 2009.
[27] N. J. Watkins, C. Nowzari, V. M. Preciado, and G. J. Pappas, “De-
terministic bounding systems for stochastic compartmental spreading
processes,” arXiv preprint arXiv:1507.05208, 2015.

[28] K. J. ˚Astr¨om and B. Wittenmark, Adaptive Control. Addison-Wesley,

2002.

1995.

