6
1
0
2

 
r
a

M
 
3
1

 
 
]
T
I
.
s
c
[
 
 

1
v
5
5
0
4
0

.

3
0
6
1
:
v
i
X
r
a

Construction of cyclic DNA codes over the Ring

Z4[u]/hu2 − 1i Based on the deletion distance

Sukhamoy Pattanayak1 and Abhay Kumar Singh2

Abstract. In this paper, we develop the theory for constructing DNA cyclic codes of
odd length over R = Z4[u]/hu2 − 1i based on the deletion distance. Firstly, we relate
DNA pairs with a special 16 elements of ring R. Cyclic codes of odd length over R
satisfy the reverse constraint and the reverse-complement constraint are discussed in
this paper. We also study the GC-content of these codes and their deletion distance.
The paper concludes with some examples of cyclic DNA codes with GC-content and
their respective deletion distance.

Keywords. Reversible cyclic codes; Cyclic DNA codes; Watson-Crick model; GC-content.

1. Introduction

Deoxyribonucleic acid (DNA) contains genetic instructions for the structure and biological developments of life. It
has the information on how the biological cell runs, reproduces builds and repair itself. DNA strands sequences consists
of four nucleotides; two purines: adenine (A) and guanine (G), and two pyrimidines: thymine (T ) and cytosine (C).
The two strands of DNA are linked with a rule that are name as Watson-Crick complement (WCC). According to WCC
rule; every (A) is linked with a (T), and every (C) with a (G), and vice versa. We write this is as A = T, T = A, G = C
and C = G. For example, if x = (GCAT AG), then its complement is x = (CGT AT C).

DNA computing links genetic data analysis with scientiﬁc computations in order to handle computationally
diﬃcult problems. Leonard Adleman [3] introduced an experiment involving the use of DNA molecules to solve a
hard computational problem in a test tube. His study was based on the WCC property of DNA strands. Several paper
have been discussed diﬀerent techniques to construct a set of DNA codewords that are unlikely to form undesirable
bonds with each other by hybridization. For example, in [13], four diﬀerent constraints i.e., the Hamming constraint, the
reverse constraint, the reverse-complement constraint, the ﬁxed GC-content constraint on DNA codes are considered.
The ﬁrst three constraints is to avoid undesirable hybridization between diﬀerent strands. The ﬁxed GC-content which
ensures all codewords have similar thermodynamic characteristic.

The design of DNA strands has several applications in genetics and bioengineering. For example, application of
biomolecular computing is the design of DNA chips for mutational analysis and for sequence. DNA strands are designed
so that each strand uniquely hybridizes with its WCC sequence and not to any other sequence. DNA strands focuses
on constructing large sets of DNA codewords with prescribed minimum Hamming distance. Recently D’yachkov et al.
discussed the deletion similarity distance which is more suitable then the Hamming distance in [6, 7].

Furthermore, cyclic DNA computing has generated great interest because of their more storage capacity than
silicon based computing systems, and this motivates many authors to study it. Since then, the construction of DNA
cyclic codes have been discussed by several Authors in [1, 4, 5], [8]-[11], [18, 17, 21]. Gaborit and King discussed linear
construction of DNA codes in [8]. In [1], DNA codes over ﬁnite ﬁeld with four elements were studied by Abualrub et
al. Later, Siap et al. considered DNA codes over the ﬁnite ring F2[u]/hu2 − 1i with four element in [18]. In [11], Liang
and Wang discussed cyclic DNA codes over four element ring F2 + uF2. Yildiz and Siap in [21] studied the ring with
16 elements over F2[u]/hu4 − 1i and their structure for DNA computing. In [4], codes over the ring F4 + vF4, v2 = v
with 16 elements are considered by Bayram et al. and discussed some DNA application. Zhu and Chen studied cyclic

1Department of Applied Mathematics, Indian School of Mines, Dhanbad, India. sukhamoy88@gmail.com
2Department of Applied Mathematics, Indian School of Mines, Dhanbad, India. singh.ak.am@ismdhanbad.ac.in

1

DNA codes over the non-chain ring F2[u, v]/hu2, v2 − v, uv − vui in [22]. In [5], Bennenni et al. considered the chain
ring F2[u]/hu6i with 64 elements and discussed DNA cyclic codes over this ring.

Codes over the ring Z4 + uZ4, u2 = 0 have been discussed in the papers [19, 20]. Later, Ozena et al.

in [15]
consider cyclic and some constacyclic codes over the ring Z4[u]/hu2 − 1i. Here, we study a construction of DNA cyclic
codes of a ﬁnite non-chain ring R with 16 elements.

The rest of the paper is organized as follows. The next section present the structure of the ring Z4 + uZ4, u2 = 1
as well as some basic description and deﬁnition of cyclic DNA codes. Also we establish a 1-1 correspondence θ between
the elements of the ring R and DNA double pair. We study cyclic codes satisfy the reverse constraint over R in
section 3. In section 4, we also discuss cyclic codes satisfy the reverse-complement constraint over R. We study the
GC-content and the deletion distance of DNA cyclic codes over R in section 5. In section 6, we discuss the examples
of cyclic DNA cyclic codes of diﬀerent length with deletion distance and GC-content. Section 7 concludes the paper.

2. Preliminaries

Let R be a commutative, characteristic 4 ring Z4 + uZ4 = {a + ub|a, b ∈ Z4} with u2 = 1. R can also be thought
of as the quotient ring Z4[u]/hu2 − 1i. The unit elements of R are {a + ub : either a or b is a unit in Z4}. R has a total
of seven ideals given by

{0}, h2ui, h1 + ui, h3 + ui, h2 + 2ui, h2u, 1 + ui and R.

R is a non-principal local ring with the maximum ideal h2u, 1 + ui. Here, R is a non-chain ring.

A cyclic code C of length n over R is a R-submodule of Rn which is invariant with respect to shift operator that
maps a codeword c = (c0, c1, . . . , cn−1) ∈ C to another codeword (cn−1, c0, . . . , cn−2) in C. It is well known that C
is cyclic code of length n over R if and only if C is an ideal in the ring Rn = R[x]/hxn − 1i. The Hamming weight
of a codeword c = (c0, c1, . . . , cn−1) denoted by wH (c) is the number of non zero entries in c. The Hamming distance
d(c1, c2) between two codewords c1 and c2 is the Hamming weight of the codeword c1 − c2.

Let SD4 = {A, T, G, C} represent the DNA alphabet. We deﬁne a DNA code of length n to be a set of codewords
(x0, x1, . . . , xn−1), where xi ∈ {A, T, G, C}. These codewords must satisfy the four constraints mentioned in the
introduction. We use the same notation for the set

SD16 = {AA, T T, GG, CC, AT, T A, GC, CG, GT, T G, AC, CA, CT, T C, AG, GA},

which is originally presented in [16]. Since the commutative ring R is of the cardinality 16, then we deﬁne the
map θ which gives a one-to-one correspondence between the elements of R and DNA double pairs SD16 , which are
given in Table 1. The elements {0, 1, 2, 3} of Z4 are in one-to-one correspondence with the nucleotide DNA bases
SD4 = {A, T, G, C} such that 0 → A, 1 → T, 2 → G and 3 → C. The codons satisfy the Watson-Crick complement
which is given by A = T, T = A, G = C, C = G.
Let x = x0x1 . . . xn−1 ∈ Rn be a vector. The reverse of x is deﬁned as xr = xn−1xn−2 . . . x1x0, the complement of
x is xc = x0 x1 . . . xn−1, and the reverse-complement, also called the Watson-Crick complement (WCC) is deﬁned as
xrc = xn−1 xn−2 . . . x1 x0.

Deﬁnition 1 A linear code C of length n over R is said to be reversible if xr ∈ C ∀ x ∈ C, complement if
xc ∈ C ∀ x ∈ C and reversible-complement if xrc ∈ C ∀ x ∈ C.

Deﬁnition 2 (D’yachkov et al. [6, 7]) Let 1 ≤ D ≤ n − 1 be a ﬁxed integer. A cyclic code C of length n is called
an (n, D) DNA code of distance D over R if

(i) C is a cyclic code, i.e., C is an ideal of R[x]/hxn − 1i ;

(ii) For any codeword X ∈ C, X 6= X rc and X rc ∈ C ;

(iii) S(X, Y ) ≤ n − D − 1, for any X, Y ∈ C, X 6= Y .

2

Deﬁnition 3 Let C be a code over R of arbitrary length n and c ∈ C be a codeword where c = (c0, c1, · · · , cn−1), ci ∈ R,
then we deﬁne

(a0 + ub0, a1 + ub1, . . . , an−1 + ubn−1) −→ (a0, a1, . . . , an−1, b0, b1, . . . , bn−1).

Φ(c) : C −→ S 2n
D4 ,

Table 1. θ-table for DNA correspondence

Elements of R Gray image DNA Codons

0
u
2u
3u
1

1 + u
1 + 2u
1 + 3u

2

2 + u
2 + 2u
2 + 3u

3

3 + u
3 + 2u
3 + 3u

(0, 0)
(0, 1)
(0, 2)
(0, 3)
(1, 0)
(1, 1)
(1, 2)
(1, 3)
(2, 0)
(2, 1)
(2, 2)
(2, 3)
(3, 0)
(3, 1)
(3, 2)
(3, 3)

AA
AT
AG
AC
T A
T T
T G
T C
GA
GT
GG
GC
CA
CT
CG
CC

For each polynomial f (x) = a0 + a1x + · · ·+ arxr with ar 6= 0, we deﬁne the reciprocal of f (x) to be the polynomial

f ∗(x) = xrf (1/x) = ar + ar−1x + · · · + a0xr.

It is easy to see that deg (f ∗(x)) ≤ deg (f (x)) and if a0 6= 0, then deg (f ∗(x)) = deg (f (x)). f (x) is called a
self-reciprocal polynomial if there is a constant m such that f ∗(x) = mf (x).

The structure of a cyclic code of odd length n over R has been brieﬂy studied in [15] by the projection map

ϕ(a + ub) = a − b from R to Z4, which is given as following theorem.

Theorem 2.1. Let n be an odd integer and C be a cyclic code of length n over R. Then C = hg1(x) + (1 + u)g2(x), (1 +
u)g3(x)i, where g1(x) and g3(x) are generator polynomials of cyclic codes over Z4 with g3(x)|g1(x)|(xn − 1) mod 2
and g2(x) is a polynomial over R. If g1(x) = g3(x), then C = hg1(x) + (1 + u)g2(x)i.

3. Reversible Codes over R

In this section, we study the reverse constraint on cyclic codes of odd length over R. First, we give some useful

lemma’s which use the following theorems.

Lemma 3.1. [2] Let f (x), g(x) be any two polynomials in R with deg f (x) ≥ deg g(x). Then

(i) [f (x)g(x)]∗ = f ∗(x)g ∗(x);

(ii) [f (x) + g(x)]∗ = f ∗(x) + x deg f −deg gg ∗(x).

Lemma 3.2. [14] Let C = hg(x)i be a cyclic code over Z4, then C is reversible if and only if g(x) is self-reciprocal.

Theorem 3.3. Let C = hg1(x) + (1 + u)g2(x)i be a cyclic code of odd length n over R. Then C is reversible if and
only if

(i) g1(x) is self-reciprocal;

3

(ii) (a) xig ∗

2(x) = g2(x). Or,

(b) g1(x) = xig ∗

2(x) + g2(x), where i = deg g1(x) − deg g2(x).

Proof : Suppose C = hg1(x) + (1 + u)g2(x)i is reversible over R, then C is reversible over Z4, then from Lemma

3.2., g1(x) is self-reciprocal. That implies

(g1(x) + (1 + u)g2(x))∗ = g ∗

1(x) + (1 + u)xig ∗
= g1(x) + (1 + u)xig ∗

2(x)
2(x)

where i = deg g1(x) − deg g2(x). Comparing the degree of (1) and (2), we get a(x) = c, where c ∈ R. Then

g1(x) + (1 + u)xig ∗

2(x) = c.g1(x) + (1 + u)c.g2(x).

= (g1(x) + (1 + u)g2(x))a(x) ∈ C,

(1)

(2)

(3)

Multiplying 2(1 + u) both side of (3) we get, 2(1 + u)g1(x) = c.2(1 + u)g1(x). Then the value of c may accepted as
1, 3, u, 3u, 1 + 2u, 2 + u, 2 + 3u, 3 + 2u. If c = 1, then xig ∗

2(x) = g2(x). For c = 3, we get from (3)

g1(x) + (1 + u)xig ∗
⇒ 2g1(x) = 3(1 + u)xig ∗

2(x) = 3g1(x) + 3(1 + u)g2(x)

2(x) + 3(1 + u)g2(x).

Multiplying (1 + u) both side of the above equation we have, g1(x) = xig ∗
deg g2(x). If c = u, then xig ∗

2(x) = g2(x). For c = 3u, then by (3) we have,

2(x) + g2(x) as u2 = 1, where i = deg g1(x) −

g1(x) + (1 + u)xig ∗
⇒ (1 + u)g1(x) = 3(1 + u)xig ∗

2(x) = 3ug1(x) + 3u(1 + u)g2(x)
2(x) + 3(1 + u)g2(x).

Multiplying (1 + u) both side we get, g1(x) = xig ∗
then by (3) we get,

2(x) + g2(x) as u2 = 1, where i = deg g1(x) − deg g2(x). If c = 1 + 2u,

g1(x) + (1 + u)xig ∗
⇒ 2ug1(x) = 3(1 + u)xig ∗

2(x) + 3(1 + u)g2(x).

2(x) = (1 + 2u)g1(x) + (1 + 2u)(1 + u)g2(x)

Similarly multiplying (1 + u) both side of the above equation we have, g1(x) = xig ∗
i = deg g1(x) − deg g2(x). For c = 2 + u, then by (3) we have,

2(x) + g2(x) as u2 = 1, where

g1(x) + (1 + u)xig ∗
⇒ 3(1 + u)g1(x) = 3(1 + u)xig ∗

2(x) = (2 + u)g1(x) + (2 + u)(1 + u)g2(x)

2(x) + 3(1 + u)g2(x).

Therefore, g1(x) = xig ∗

2(x) + g2(x), where i = deg g1(x) − deg g2(x). If c = 2 + 3u, then by (3) we get,

g1(x) + (1 + u)xig ∗
⇒ (1 + 3u)g1(x) + (1 + u)xig ∗

2(x) = (1 + u)g2(x).

2(x) = (2 + 3u)g1(x) + (2 + 3u)(1 + u)g2(x)

Multiplying (1 + u) both side we get, xig ∗
we have,

2(x) = g2(x), where i = deg g1(x) − deg g2(x). For c = 3 + 2u, then by (3)

g1(x) + (1 + u)xig ∗
⇒ 2(1 + u)g1(x) = (1 + u)xig ∗

2(x) + (1 + u)g2(x).

2(x) = (3 + 2u)g1(x) + (3 + 2u)(1 + u)g2(x)

Multiplying (1 + u) both side we have, xig ∗

2(x) = g2(x), where i = deg g1(x) − deg g2(x). On the other hand, we have

(g1(x) + (1 + u)g2(x))∗ = g ∗

1(x) + (1 + u)xig ∗
= g1(x) + (1 + u)xig ∗

2(x)
2(x)

where c = 1, 3, u, 3u, 1 + 2u, 2 + u, 2 + 3u or 3 + 2u, i = deg f1(x) − deg f2(x). Hence, C is reversible.

Theorem 3.4. Let C = hg1(x) + (1 + u)g2(x), (1 + u)g3(x)i with g3(x)|g1(x)|xn − 1 and g2(x) ∈ R[x] be a cyclic code
of odd length n over R. Then C is reversible if and only if

= (g1(x) + (1 + u)g2(x))c ∈ C,

4

(i) g1(x) and g3(x) are self-reciprocal;

(ii) g3(x)|(xig ∗

2(x) − g2(x)), where i = deg g1(x) − deg g2(x).

Proof : Suppose C = hg1(x) + (1 + u)g2(x), (1 + u)g3(x)i is reversible. Then hg1(x)i and hg3(x)i are reversible

over Z4, from Lemma 3.2., hg1(x)i and hg3(x)i are self-reciprocal. Since C is reversible this implies

(g1(x) + (1 + u)g2(x))∗ = g ∗

1(x) + (1 + u)xig ∗
= g1(x) + (1 + u)xig ∗

2(x)
2(x)

(i = deg f1(x) − deg f2(x))

= (g1(x) + (1 + u)g2(x))p(x) + (1 + u)g3(x)q(x).

Comparing the degree of (4) and (5), we have p(x) = c, where c ∈ R. Then

g1(x) + (1 + u)xig ∗

2(x) = c.g1(x) + c.(1 + u)g2(x) + (1 + u)g3(x)q(x).

(4)

(5)

(6)

Hence, 2(1 + u)g1(x) = c.2(1 + u)g1(x). Then the value of c may accepted as c = 1, 3, u, 3u, 1 + 2u, 2 + u, 2 + 3u, 3 + 2u.
If c = 1, then by (6) we get,

g1(x) + (1 + u)xig ∗
⇒ xig ∗

2(x) − g2(x) = g3(x)q(x).

2(x) = g1(x) + (1 + u)g2(x) + (1 + u)g3(x)q(x)

Which means (xig ∗
For c = 3, then by (6) we have,

2(x) − g2(x)) ∈ (g3(x)). Therefore, g3(x)|(xig ∗

2(x) − g2(x)).

g1(x) + (1 + u)xig ∗
⇒ 2g1(x) + (1 + u)xig ∗
⇒ xig ∗

2(x) = 3g1(x) + 3(1 + u)g2(x) + (1 + u)g3(x)q(x)

2(x) = 3(1 + u)g2(x) + (1 + u)g3(x)q(x)

2(x) − g2(x) = g3(x)q(x) (multiplying (1 + u) both side).

Which implies (xig ∗
Hence, g3(x)|(xig ∗
If c = 3u, then by (6) we get,

2(x) − g2(x)) ∈ (g3(x)) as u2 = 1, where i = deg g1(x) − deg g2(x).

2(x) − g2(x)). Similarly for c = u or c = 3 + 2u we get the same result.

2(x) = 3ug1(x) + 3u(1 + u)g2(x) + (1 + u)g3(x)q(x)
2(x) = 3(1 + u)g2(x) + (1 + u)g3(x)q(x)

g1(x) + (1 + u)xig ∗
⇒ (1 + u)g1(x) + (1 + u)xig ∗
⇒ 2(1 + u)g1(x) + 2(1 + u)xig ∗
⇒ g1(x) + xig ∗

2(x) − g2(x) = g3(x)q(x).

2(x) = 2(1 + u)g2(x) + 2(1 + u)g3(x)q(x)

Hence, g1(x) + xig ∗
xig ∗
For c = 2 + u, then by (6) we have,

2(x) − g2(x)). Since g3(x)|g1(x), we have g3(x)|(xig ∗

2(x) − g2(x)).

2(x) − g2(x) ∈ (g3(x)) as u2 = 1, where i = deg g1(x) − deg g2(x). Therefore, g3(x)|(g1(x) +

g1(x) + (1 + u)xig ∗
⇒ 3(1 + u)g1(x) + (1 + u)xig ∗
⇒ g1(x) + xig ∗

2(x) − g2(x) = g3(x)q(x).

2(x) = 2 + ug1(x) + (2 + u)(1 + u)g2(x) + (1 + u)g3(x)q(x)

2(x) = 3(1 + u)g2(x) + (1 + u)g3(x)q(x)

2(x) − g2(x) ∈ (g3(x)). Hence, g3(x)|(g1(x) + xig ∗

Which implies g1(x) + xig ∗
2(x) −
g2(x)) as g3(x)|g1(x), where i = deg g1(x) − deg g2(x). Similarly for c = 1 + 2u or c = 2 + 3u we get the above result.
Conversely, for C to be reversible it is suﬃcient to show that both (g1(x) + (1 + u)g2(x))∗ and ((1 + u)g3(x))∗ are in
C. Since g3(x) is self-reciprocal then (1 + u)g3(x) ∈ C. Also

2(x) − g2(x)). Therefore, g3(x)|(xig ∗

(g1(x) + (1 + u)g2(x))∗ = g ∗

1(x) + (1 + u)xig ∗

2(x)

(i = deg f1(x) − deg f2(x))

= (g1(x) + (1 + u)g2(x)) + (1 + u)xig ∗

2(x) − (1 + u)g2(x)

= (g1(x) + (1 + u)g2(x)) + (1 + u)g3(x)b(x) ∈ C.

5

Therefore, C is reversible.

4. Cyclic Reversible Complement Codes over R

In this section, cyclic codes of odd length over R satisfy the reverse-complement are examined. First, we give some

useful lemmas which can be easily check.

Lemma 4.1. For any a ∈ R we have a + a = 1 + u.

Lemma 4.2. For any a, b, c ∈ R, then

(i) a + b = a + b + 3(1 + u);

(ii) a + (1 + u)b = a + 3(1 + u)b.

Lemma 4.3. For any a ∈ R, we have a + 3(1 + u) = 3a.

Theorem 4.4. Let C = hg1(x)+(1+u)g2(x)i be a cyclic code of odd length n over R. Then C is a reverse-complement
if and only if

(i) g1(x) is self-reciprocal and 3(1 + u)((1 − xn)/(1 − x)) ∈ C;

(ii) (a) xig ∗

2(x) = g2(x). Or,

(b) g1(x) = xig ∗

2(x) + g2(x), where i = deg g1(x) − deg g2(x).

Proof : Let C = hg1(x) + (1 + u)g2(x)i be the cyclic code of odd length n over R. Since the zero codeword must

be in C, by hypothesis, the WCC of it should also be in C. But by Lemma 4.1., we have

3 (0, 0, . . . , 0) = 3(1 + u, 1 + u, . . . , 1 + u) = 3(1 + u)

1 − xn
1 − x

∈ C.

Now, let

where s > r. Then

g1(x) + (1 + u)g2(x)

g1(x) = 1 + a1x + · · · + as−1xs−1 + xs,
and g2(x) = 1 + b1x + · · · + br−1xr−1 + xr,

= (1 + a1x + · · · + as−1xs−1 + xs) + (1 + u)(1 + b1x + · · · + br−1xr−1 + xr)

= (2 + u) + (a1 + (1 + u)b1)x + · · · + (ar−1 + (1 + u)br−1)xr−1 + (ar + (1 + u))xr

+ ar+1xr+1 + · · · + as−1xs−1 + xs.

Hence,

(g1(x) + (1 + u)g2(x))rc =(1 + u)(1 + x + · · · + xn−s−2) + uxn−s−1 + as−1xn−s + · · ·

+ ar+1xn−r−2 + (ar + (1 + u))xn−r−1 + (ar−1 + (1 + u)br−1)xn−r
+ · · · + (a1 + (1 + u)b1)xn−2 + (2 + u)xn−1

=(1 + u)(1 + x + · · · + xn−s−2) + uxn−s−1 + as−1xn−s + · · ·

+ ar+1xn−r−2 + arxn−r−1 + 3(1 + u)xn−r−1 + ar−1xn−r
+ 3(1 + u)br−1xn−r + · · · + a1xn−2 + (1 + u)b1xn−2 + 3xn−1

=(1 + u)(1 + x + · · · + xn−s−2) + uxn−s−1 + as−1xn−s + · · ·

+ ar+1xn−r−2 + arxn−r−1 + · · · + a1xn−2 + uxn−1 + 3(1 + u)xn−r−1
+ 3(1 + u)br−1xn−r + · · · + (1 + u)b1xn−2 + 3(1 + u)xn−1 ∈ C.

6

Since C is linear code, we must have

(g1(x) + (1 + u)g2(x))rc + 3(1 + u)

1 − xn
1 − x

∈ C.

(7)

Then, from (7) we have

(g1(x) + (1 + u)g2(x))rc + 3(1 + u)((1 − xn)/(1 − x))

= 3xn−s−1 + (as−1 + 3(1 + u))xn−s + · · · + (a1xn−2 + 3(1 + u))xn−2 + 3xn−1
+ 3(1 + u)xn−r−1 + 3(1 + u)br−1xn−r + · · · + (1 + u)b1xn−2 + 3(1 + u)xn−1

= 3xn−s−1(1 + as−1x + · · · + a1xs−1 + xs)

3(1 + u)xn−r−1(1 + br−1x + · · · + b1xr−1 + xr)

= 3xn−s−1g ∗

1(x) + 3(1 + u)xn−r−1g ∗

2(x)

= 3xn−s−1(g ∗

1(x) + (1 + u)xs−rg ∗

2(x)).

Whence,

So we have,

1(x) + (1 + u)xs−rg ∗
g ∗

2(x) ∈ C.

1(x) + (1 + u)xs−rg ∗
g ∗

2(x) = (g1(x) + (1 + u)g2(x))a(x).

1(x) i.e., g1(x) s self-reciprocal. Also we have, xig ∗

2(x) = g2(x) and g1(x) = xig ∗

It is easy to see that the value of a(x) may be 1, 3, u, 3u, 1 + 2u, 2 + u, 2 + 3u or 3 + 2u. So by previous Theorem 3.3.,
2(x) + g2(x), where i = s − r.
g1(x) = g ∗
On the other hand, let c(x) ∈ C, then c(x) = (g1(x) + (1 + u)g2(x))a(x). Since g1(x) is self-reciprocal and also
xig ∗

2(x) + g2(x), where i = deg g1(x) − deg g2(x), then we can write,

2(x) = g2(x) and g1(x) = xig ∗

c∗(x) = ((g1(x) + (1 + u)g2(x))a(x))∗

1(x) + (1 + u)xig ∗
= (g ∗
= (g1(x) + (1 + u)xig ∗
= (g1(x) + (1 + u)xig ∗

2(x))a∗(x)
2(x))a∗(x)
2(x)).c.a∗(x),

where c = 1, 3, u, 3u, 1 + 2u, 2 + u, 2 + 3u or 3 + 2u. Therefore, c∗(x) ∈ C.
Since 3(1 + u)((1 − xn)/(1 − x)) ∈ C, we have

3(1 + u)

1 − xn
1 − x

= 3(1 + u) + 3(1 + u)x + · · · + 3(1 + u)xn−1 ∈ C.

Let c(x) = c0 + c1x + · · · + csxs ∈ C. As C is a cyclic code of length n, we have

xn−s−1c(x) = c0xn−s−1 + c1xn−s + · · · + csxn−1 ∈ C.

Whence,

3(1 + u) + 3(1 + u)x + · · · + 3(1 + u)xn−s−2 + (c0 + 3(1 + u))xn−s−1

+ (c1 + 3(1 + u))xn−s + · · · + (cs + 3(1 + u))xn−1

= 3(1 + u) + 3(1 + u)x + · · · + 3(1 + u)xn−s−2 + 3c0xn−s−1

+ 3c1xn−s + · · · + 3csxn−1

= 3((1 + u) + (1 + u)x + · · · + (1 + u)xn−s−2 + c0xn−s−1

We have c∗(x)rc ∈ C, therefore, (c∗(x)rc)∗ = c(x)rc ∈ C.

Theorem 4.5. Let C = hg1(x) + (1 + u)g2(x), (1 + u)g3(x)i with g3(x)|g1(x)|xn − 1 be a cyclic code of odd length n
over R. Then C is reverse-complement if and only if

+ c1xn−s + · · · + csxn−1) ∈ C.

7

(i) 3(1 + u)((1 − xn)/(1 − x)) ∈ C and g1(x) and g3(x) are self-reciprocal;

(ii) g3(x)|(xig ∗

2(x) − g2(x)), where i = deg g1(x) − deg g2(x).

Proof : Suppose Let C = hg1(x) + (1 + u)g2(x), (1 + u)g3(x)i with g3(x)|g1(x)|xn − 1 be a cyclic code of odd

length n over R. Since the zero codeword must be in C, by hypothesis, the WCC of it should also be in C, i.e.,

3 (0, 0, . . . , 0) = 3(1 + u, 1 + u, . . . , 1 + u) = 3(1 + u)

1 − xn
1 − x

∈ C.

Proceeding in the same way as previous theorem, we get

1(x) + (1 + u)xs−rg ∗
g ∗

2(x) ∈ C.

Where deg g1(x) = s, deg g3(x) = r. So we write,

1(x) + (1 + u)xs−rg ∗
g ∗

2(x) = (g1(x) + (1 + u)g2(x))p(x) + (1 + u)g3(x)q(x).

(8)

Here, we get the value of p(x) are 1, 3, u, 3u, 1 + 2u, 2 + u, 2 + 3u or 3 + 2u. So by Theorem 3.4., g1(x) = g ∗
g1(x) is self-reciprocal. Also we have, g3(x)|(xig ∗

2(x) − g2(x)), where i = s − r. Now suppose,

1(x) i.e.,

(1 + u)g3(x) = (1 + u) + (1 + u)d1x + · · · + (1 + u)dk−1xk−1 + (1 + u)xk.

Then

(1 + u)g3(x)rc

= (1 + u)(1 + x + · · · + xn−k−2) + xn−k−1 + (1 + u)dk−1xn−k + · · · + (1 + u)d1xn−2 ∈ C

Since C is linear code and 3(1 + u)((1 − xn)/(1 − x)) ∈ C, we must have

(1 + u)g3(x)rc + 3(1 + u)

1 − xn
1 − x

∈ C.

Hence,

(1 + u)g3(x)rc + 3(1 + u)((1 − xn)/(1 − x))

= 3(1 + u)xn−k−1 + ((1 + u)dk−1 + 3(1 + u))xn−k + · · · + ((1 + u)d1 + 3(1 + u))xn−2 + 3(1 + u)xn−1

= 3uxn−k−1 + 3(1 + u)dk−1xn−k + · · · + 3(1 + u)d1xn−2 + 3(1 + u)xn−1
= 3xn−k−1((1 + u) + (1 + u)dk−1x + · · · + (1 + u)d1xk−1 + (1 + u)xk)

= 3xn−k−1(1 + u)g ∗

3(x) ∈ C.

3(x).

Therefore, g3(x) = g ∗
Conversely, let c(x) ∈ C, then c(x) = (g1(x) + (1 + u)g2(x))p(x) + (1 + u)g3(x)q(x). Since g1(x) and g3(x) are
self-reciprocal, g3(x)|(xig ∗
then we write,

2(x) − g2(x)), where i = deg g1(x) − deg g2(x),

c∗(x) = ((g1(x) + (1 + u)g2(x))p(x))∗ + ((1 + u)g3(x)q(x))∗

1(x) + (1 + u)xig ∗

3(x)q∗(x)

= (g ∗
= (g1(x) + (1 + u)g2(x))p∗(x) + (1 + u)m∗(x)(xig ∗

2(x))p∗(x) + (1 + u)xjg ∗

2(x) − g2(x)) + (1 + u)xjg3(x)q∗(x)

= (g1(x) + (1 + u)g2(x))p∗(x) + (1 + u)g3(x)m(x)

Where i = deg g1(x) − deg g2(x) and j = deg (g1(x)p(x)) − deg (g3(x)q(x)).
Therefore, c∗(x) ∈ C.
As 3(1 + u)((1 − xn)/(1 − x)) ∈ C, we have

3(1 + u)

1 − xn
1 − x

= 3(1 + u) + 3(1 + u)x + · · · + 3(1 + u)xn−1 ∈ C.

8

Let c(x) = c0 + c1x + · · · + csxs ∈ C. As C is a cyclic code of length n, we have

xn−s−1c(x) = c0xn−s−1 + c1xn−s + · · · + csxn−1 ∈ C.

Hence,

3(1 + u) + 3(1 + u)x + · · · + 3(1 + u)xn−s−2 + (c0 + 3(1 + u))xn−s−1

+ (c1 + 3(1 + u))xn−s + · · · + (cs + 3(1 + u))xn−1

= 3(1 + u) + 3(1 + u)x + · · · + 3(1 + u)xn−s−2 + 3c0xn−s−1

+ 3c1xn−s + · · · + 3csxn−1

= 3((1 + u) + (1 + u)x + · · · + (1 + u)xn−s−2 + c0xn−s−1

Therefore, c∗(x)rc ∈ C and (c∗(x)rc)∗ = c(x)rc ∈ C.

+ c1xn−s + · · · + csxn−1) ∈ C.

5. The GC-content and the deletion distance D

In molecular biology, GC-content (or guanine-cytosine content) is the percentage of nitrogenous bases on a DNA
molecule that are either guanine(G) or cytosine(C). The G and C pair need three hydrogen bonds, while A and T
pairs need two hydrogen bonds. Since the chemical bonds between the WCC pairs are diﬀerent and the total energy
of the DNA molecule depends on the number of A and T pairs and the number of C and G pairs. As DNA with
high energy GC-content is more stable than DNA with low energy GC-content, it is always desirable in a DNA code
to have all codewords with the same GC-content, so that they have similar melting temperatures. In this section we
study the GC-content of a DNA cyclic code and its deletion distance D.

For two quaternary n-sequences X and Y the energy of DNA hybridization E(X, Y ) is the longest common
subsequence of either strand or the reverse complement of the other strand. We deﬁne the deletion similarity S(X, Y )
as the length of the longest common subsequence (LCS) for X and Y . Note that for any strands X and Y of length
n we have

S(X, X) = n and S(X, Y ) = S(Y, X).

The number of base pair bonds between X and Y rc recognize the deletion similarity S(X, Y ), i.e., we have

E(X, Y rc) = E(Y rc, X) = S(X, Y ) = S(Y, X).

Example 5.1. If X = T CAGG and Y = T ACGT then deletion similarity S(X, Y ) = 3 as T CG is the longest common
subsequence (LCS) for both X and Y . Note that T CG is not unique since T AG is another common subsequence of
length 3.

Deﬁnition 4 The Hamming weight enumerator, WC (y), of a code C is deﬁned as

WC (y) = X

Aiyi,

i

Where Ai = | {c ∈ C | w(c) = i} |, i.e., the number of codewords in C whose weights equal to i. The smallest non-zero
exponent of y with a non-zero coeﬃcient in WC (y) is equal to the minimum Hamming distance of the code.

Deﬁnition 5 [18] For any cyclic code C = (g1(x) + (1 + u)g2(x), (1 + u)g3(x)), deﬁne the subcode C1+u to consist of
all codewords in C that are multiples of (1 + u).

Theorem 5.2. Let C = (g1(x) + (1 + u)g2(x), (1 + u)g3(x)) be a cyclic code of odd length n. Then, C1+u =
((1 + u)g3(x)).

9

Proof : We note that

((1 + u)g3(x)) ⊆ C1+u.

Now we have to show that C1+u ⊆ ((1 + u)g3(x)). Let c ∈ C. Then,

c(x) = (g1(x) + (1 + u)g2(x))r(x) + (1 + u)g1(x)s(x) + (1 + u)g3(x)t(x),

where r(x), s(x), t(x) ∈ Z4[x]. If c is multiple of (1 + u), then we must have
xn − 1|(g1(x) + (1 + u)g2(x))r(x) and hence

c(x) = (1 + u)g1(x)s(x) + (1 + u)g3(x)t(x).

Since g3(x)|g1(x), then c(x) ∈ (1 + u)g3(x) and hence C1+u ⊆ ((1 + u)g3(x)).
Therefore, C1+u = ((1 + u)g3(x)).
We get the following theorem from [18].

Theorem 5.3. Let C = (g1(x) + (1 + u)g2(x), (1 + u)g3(x)) be a cyclic code of odd length n. Let c ∈ C, with
ω(c) = wH (c) where c ∈ Z4[x]. Further, all possible spectra of the GC-content of C are determined by the Hamming
weight enumerator of the binary code generated by a(x).

Theorem 5.4. Let C = (g1(x) + (1 + u)g2(x), (1 + u)g3(x)) be an (n, D) cyclic code of odd length n and D1+u be the
deletion similarity distance of the code C1+u. Then D = D1+u.

Proof : Since C1+u ⊆ C, then for any X, Y ∈ C we get

S(X, Y ) ≤ n − D − 1.

Which implies D1+u ≥ D. Now suppose there are two codewords A, B ∈ C such that

S(A, B) > n − D1+u − 1.

From Theorem 5.2., as A and B are in C, then (1 + u)A and (1 + u)B are two codewords in C1+u. So it is clear that

which contradict. Therefore, D = D1+u.

S((1 + u)A, (1 + u)B) > S(A, B) > n − D1+u − 1,

In this section, we give some examples of cyclic codes of diﬀerent lengths over the ring R to illustrate the above

6. Example

results.

Example 6.1. Let

x3 − 1 = (x − 1)(x2 + x + 1) = f1f2 ∈ Z4[x].

1. Let C = hg1(x) + (1 + u)g2(x)i, where g1(x) = g2(x) = f2 = (x2 + x + 1). It is easy to check that g1(x) is
self-reciprocal and xig ∗
2(x) = g2(x), where i = deg g1(x) − deg g2(x). C is a cyclic DNA code of length 3 with
R-C property and minimum Hamming distance 3. The image of C under the map Φ is a DNA code of length 6,
size 16 and minimum Hamming distance 3. These codewords are given in Table 2.

2. Let C = hg1(x) + (1 + u)g2(x), (1 + u)g3(x)i, where g1(x) = g2(x) = f1f2 and g3(x) = f2. We check that g1(x)
and g3(x) are self-reciprocal and g3(x)|((1 + u)xig ∗
2(x) + (1 + u)g2(x)). Then C is a cyclic DNA code of length
3 with R-C property and minimum Hamming distance 3. The image of C under the map Φ is a DNA code of
length 6, size 64 and minimum Hamming distance 2.

Table 2. A DNA code of length 6 obtained from

C = h(x2 + x + 1) + 2(x2 + x + 1)i

AAAAAA T T T T T T CCCCCC GGGGGG
AT AT AT
T AT AT A CT CT CT GAGAGA
AGAGAG T CT CT C CGCGCG GCGCGC
ACACAC T GT GT G CACACA GT GT GT

10

Here, X 6= X rc for all X ∈ C. Further, S(X, Y ) ∈ {0, 3} ∀ X, Y ∈ C and X 6= Y . Since the image of C under the
map Φ is a DNA code of length 6 and S(X, Y ) ≤ 3, we get D = 2. So, this is an (6, 2) DNA cyclic code.

Example 6.2. Let

x9 − 1 = (x − 1)(x2 + x + 1)(x6 + x3 + 1) = f1f2f3 ∈ Z4[x].

Let C = hg1(x) + (1 + u)g2(x)i, where g1(x) = g2(x) = f2f3. It is easy to check that g1(x) is self-reciprocal and
xig ∗
2(x) = g2(x), where i = deg g1(x) − deg g2(x). C is a cyclic DNA code of length 9 with R-C property and
minimum Hamming distance 9. The image of C under the map Φ is a DNA code of length 18 and minimum Hamming
distance 9. The number of codewords are 16 which are given in Table 3.

Table 3. A DNA code of length 18 obtained from the above code.

T T T T T T T T T T T T T T T T T T

AAAAAAAAAAAAAAAAAA
CCCCCCCCCCCCCCCCCC GGGGGGGGGGGGGGGGGG
AT AT AT AT AT AT AT AT AT
T AT AT AT AT AT AT AT AT A
GAGAGAGAGAGAGAGAGA
CT CT CT CT CT CT CT CT CT
AGAGAGAGAGAGAGAGAG
T CT CT CT CT CT CT CT CT C
CGCGCGCGCGCGCGCGCG GCGCGCGCGCGCGCGCGC
T GT GT GT GT GT GT GT GT G
ACACACACACACACACAC
CACACACACACACACACA
GT GT GT GT GT GT GT GT GT

Here, X 6= X rc for all X ∈ C. Further, S(X, Y ) ∈ {0, 9} for all X, Y ∈ C and X 6= Y . Since the image of C under the
map Φ is a DNA code of length 18 and S(X, Y ) ≤ 3, we get D = 8. So, this is an (18, 8) DNA cyclic code.

7. Conclusion

This paper constructed codes over an alphabet {A, C, G, T } relevant to the design of synthetic DNA strands used
in DNA microarrays, as DNA tags in chemical libraries and in DNA computing. Here, we developed the structure of
DNA cyclic codes over the ring R = Z4[u]/hu2 − 1i of odd length based on deletion distance which is motivated by the
simple and less complexity structure of these codes over R. Reversible codes and reverse-complement codes related to
cyclic codes are studied, respectively. GC-content of these codes and their deletion distance are discussed and proved
that the GC-content and deletion distance of a code C are related to a subcode of C. We add several examples of
cyclic DNA codes of diﬀerent lengths including their GC-content and the number of deletion errors a code can correct.
For future study, the algebraic structure of cyclic codes of even length and their relation to DNA codes is still an open
problem.

References

[1] Abualrub T., Ghrayeb A., Zeng X., Construction of cyclic codes over GF (4) for DNA computing, J. Franklin

Institute, 343(4-5), 448-457, (2006).

[2] Abualrub T., Siap I., Cyclic codes over the rings Z2 + uZ2 and Z2 + uZ2 + u2Z2, Des. Codes Cryptogr., 42,

273-287, (2007).

[3] Adleman L., Molecular computation of the solution to combinatorial problems, Science, 266, 1021-1024, (1994).

[4] Bayram A., Oztas E. S., Siap I., Codes over Fv + uF4 and some DNA applications, Designs,Codes and

Cryptography, DOI 10.1007/s10623-015-0100-8, (2015).

[5] Bennenni N., Guenda K., Mesnager S., New DNA cyclic codes over rings, arXiv: 1505.06263v1 [cs.IT], (2015).

[6] D’yachkov A., Macula A., Renz T., Vilenkin P., Ismagilov I., New results on DNA codes, International

Symposiumon Information Theory, 283-287, (September 2005).

11

[7] D’yachkov A., Erdos P., Macula A., Torney D., Tung C. H., Vilenkin P., White P. S., Exordium for DNA codes,

Journal of Combinatorial Optimization, 7, 369-379, (2003).

[8] Gaborit P., King O. D., Linear construction for DNA codes, Theor. Computer Science, 334(1-3), 99-113, (2005).

[9] Guenda K., Gulliver T. A., Sol´e P., On cyclic DNA codes, Proc. IEEE Int. Symp. Inform. Theory, Istanbul,

121-125, (2013).

[10] Guenda K., Aaron, Gulliver T., Construction of cyclic codes over F2 + uF2 for DNA computing, AAECC. 24,

445-459, (2013).

[11] Liang J., Wang L., On cyclic DNA codes over F2+uF2, J. Appl. Math. Comput., DOI 10.1007/s12190-015-0892-8,

(2015).

[12] Lipton R. J., DNA solution of hard computational problems, Science, 268, 542-545, (1995).

[13] Marathe A., Condon A. E., Corn R.M., On combinatorial DNA word design, J. Comput. Biol, 8, 201-220, (2001).

[14] Massey J. L., Reversible codes, I nf. Control, 7, 369-380, (1964).

[15] Ozena M., Uzekmeka F. Z., Aydin N., zzaima N. T., Cyclic and some constacyclic codes over the ring Z4[u]/hu2 −

1i, Finite Fields Appl., 38, (2016), 27-39.

[16] Oztas E. S., Siap I., Lifted polynomials over F16 and their applications to DNA codes, Filomat, 27, 459-466,

(2013).

[17] Pattanayak S., Singh A. K., On cyclic DNA codes over the Ring Z4 + uZ4, arXiv:1508.02015[cs.IT], (2015).

[18] Siap I., Abualrub T., Ghrayeb A., Cyclic DNA codes over the ring F2[u]/(u2 − 1) based on the deletion distance,

J. Franklin Institute, 346, 731-740, (2009).

[19] Yildiz B., Aydin N., On cyclic codes over Z4 + uZ4 and their Z4images, Int. J. Information and Coding Theory,

2(4), (2014), 226-237.

[20] Yildiz B., Karadeniz S., Linear codes over Z4 + uZ4, MacWilliams identities, projections, and formally self-dual

codes, Finite Fields Appl., 27, (2014), 24-40.

[21] Yildiz B., Siap I., Cyclic DNA codes over the ring F2[u]/(u4 − 1) and applications to DNA codes, Comput. Math.

Appl, 63, 1169-1176, (2012).

[22] Zhu S., Chen X., Cyclic DNA codes over F2 + uF2 + vF2 + uvF2, arXiv: 1508.07113v1 [cs.IT], (2015).

12

