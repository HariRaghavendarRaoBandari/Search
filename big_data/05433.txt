6
1
0
2

 
r
a

 

M
8
1

 
 
]

R
G
.
s
c
[
 
 

2
v
3
3
4
5
0

.

3
0
6
1
:
v
i
X
r
a

Degree reduction of composite B´ezier curves

Przemysław Gospodarczyk∗, Stanisław Lewanowicz, Paweł Woźny

Institute of Computer Science, University of Wrocław, ul. Joliot-Curie 15, 50-383 Wrocław, Poland

Abstract

This paper deals with the problem of multi-degree reduction of a composite B´ezier curve with the
parametric continuity constraints at the endpoints of the segments. We present a novel method
which is based on the idea of using constrained dual Bernstein polynomials to compute the control
points of the reduced composite curve. In contrast to other methods, ours minimizes the L2-error
for the whole composite curve instead of minimizing the L2-errors for each segment separately. As
a result, an additional optimization is possible. Examples show that the new method gives much
better results than multiple application of the degree reduction of a single B´ezier curve.

Keywords: Composite B´ezier curve, multi-degree reduction, parametric continuity constraints,
least-squares approximation, constrained dual Bernstein basis.

1. Introduction

In recent years, many methods have been used to reduce the degree of B´ezier curves with
constraints (see, e.g., [1–6, 8, 9, 11, 13–20]). Most of these papers give methods of multi-degree
reduction of a single B´ezier curve with constrains of endpoints (parametric or geometric) continuity
of arbitrary order with respect to L2-norm. Observe, however, that degree reduction schemes
often need to be combined with the subdivision algorithm, i.e., a high degree curve is replaced by
a number of lower degree curve segments, or a composite B´ezier curve, and continuity between
adjacent lower degree curve segments should be maintained. Intuitively, a possible approach in
such a case is applying the multi-degree reduction procedure to one segment of the curve after
another with properly chosen endpoints continuity constraints. However, in general, the obtained
solution does not minimize the distance between two composite curves.

In this paper, we give the optimal least-squares solution of multi-degree reduction of a com-
posite B´ezier curve with the parametric continuity constraints at the endpoints of the segments.
More speciﬁcally, we consider the following approximation problem.

Problem 1.1 (C r-constrained multi-degree reduction of the composite B´ezier curve). Let a = t0 <
t1 < . . . < ts = b be a partition of the interval [a, b]. Let there be given a degree n = (n1, n2, . . . , ns)
composite B´ezier curve P (t) (t ∈ [a, b]) in Rd that in the interval [ti−1, ti] (i = 1, 2, . . . , s) is
exactly represented as a B´ezier curve Pi(u) (u ∈ [0, 1]) of degree ni, i.e.,

P (t) = Pi(u) :=

ni

Xj=0

where hi := ti − ti−1, and

pi,j Bni

j (u)

(ti−1 ≤ t ≤ ti; u := (t − ti−1)/hi),

Bn

j (u) :=(cid:18)n

j(cid:19)uj(1 − u)n−j

(0 ≤ j ≤ n)

∗Corresponding author. Fax +48 71 3757801

Email addresses: pgo@ii.uni.wroc.pl (Przemysław Gospodarczyk), Stanislaw.Lewanowicz@ii.uni.wroc.pl

(Stanisław Lewanowicz), Pawel.Wozny@ii.uni.wroc.pl (Paweł Woźny)

are the Bernstein basis polynomials of degree n. Find a composite B´ezier curve Q(t) (t ∈ [a, b]) of
degree m = (m1, m2, . . . , ms) which in the interval [ti−1, ti] (i = 1, 2, . . . , s) is exactly represented
as a B´ezier curve Qi(u) (u ∈ [0, 1]) of degree mi < ni, i.e.,

Q(t) = Qi(u) :=

mi

Xj=0

such that the squared L2-error

qi,j Bmi

j

(u)

(ti−1 ≤ t ≤ ti; u := (t − ti−1)/hi),

(1.1)

where

Ei :=Z ti

ti−1

a

kP (t) − Q(t)k2 dt =

E :=Z b
kP (t) − Q(t)k2 dt = hiZ 1

0

Ei,

s

Xi=1

(1.2)

kPi(u) − Qi(u)k2 du,

reaches the minimum under the additional conditions that

=

djP (t)

dtj

djQ(t)

=

dtj

djP (t)

dtj

djQ(t)

dtj

djQ(t)

dtj

djQ(t)

dtj

(cid:12)(cid:12)(cid:12)t=t0
(cid:12)(cid:12)(cid:12)t=ti−
(cid:12)(cid:12)(cid:12)t=ts

=

(cid:12)(cid:12)(cid:12)t=t0
(cid:12)(cid:12)(cid:12)t=ti+
(cid:12)(cid:12)(cid:12)t=ts

(j = 0, 1, . . . , r0),

(1.3)

(i = 1, 2, . . . , s − 1; j = 0, 1, . . . , ri),

(1.4)

(j = 0, 1, . . . , rs),

(1.5)

where rj ≥ 0 (j = 0, 1, . . . , s) and ri−1 + ri < mi − 1 (i = 1, 2, . . . , s). We will say that the
curves P and Q satisfy the C r−continuity conditions at the points t0, t1, . . . , ts, where we use the
notation r := (r0, r1, . . . , rs). Here k · k is the Euclidean vector norm.

Remark 1.2. One may think that the conditions

djQ(t)

dtj

=

djP (t)

dtj

(cid:12)(cid:12)(cid:12)t=ti

(cid:12)(cid:12)(cid:12)t=ti

(i = 1, 2, . . . , s − 1; j = 0, 1, . . . , ri)

would be more natural than (1.4). However, in contrast to our new method, such an approach
leaves no room for additional optimization.

Remark 1.3. Sometimes, it may be useful to interpolate the endpoints of the original segments
(see Example 4.2), i.e., to demand that Q(ti) = P (ti) holds for i = 1, 2, . . . , s − 1. In such a case,
constraints (1.4) should be appropriately modiﬁed by restricting the range of j to 1, 2, . . . , ri.

The paper is organized as follows. In Section 2, we recall some results which are later applied
in the solution of the problem, given in Section 3. Several illustrative examples are presented in
Section 4. Finally, Section 5 contains some concluding remarks.

We end this section with introducing some notation. The shifted factorial is deﬁned by (c)0 :=
1, (c)j := c(c + 1) · · · (c + j − 1) (j = 1, 2, . . .). The iterated forward diﬀerence operator ∆j is given
by

∆jαk := ∆j−1αk+1 − ∆j−1αk

(j = 1, 2, . . .) and ∆0αk := αk.

Moreover, we adopt the convention that in an expression of the form ∆jγi,k the operator ∆j acts
on the second variable (ﬁrst variable being ﬁxed), e.g.,

∆2γi,k = ∆γi,k+1 − ∆γi,k = γi,k+2 − 2γi,k+1 + γi,k.

2

2. Preliminaries

Let us denote by Π(k,l)

k+1, Bm

k+2, . . . , Bm

m = span{Bm

m−l−1}, where k and l are natural numbers
such that k + l < m − 1, the space of all polynomials of degree at most m, whose derivatives of
order ≤ k at t = 0 and of order ≤ l at t = 1 vanish. There is a unique dual constrained Bernstein
basis of degree m (see, e.g., [10]), D(m,k,l)

, . . . , D(m,k,l)

, D(m,k,l)

m−l−1, satisfying DD(m,k,l)
(j, h = k + 1, k + 2, . . . , m − l − 1), where the inner product h·, ·i is given by hf, gi :=R 1

0 f (t)g(t) dt,
δj,h equals 1 if j = h, and 0 otherwise. The table of the coeﬃcients Cj,h ≡ Cj,h(m, k, l) in the
connection formulas

h E = δj,h

k+1

k+2

j

, Bm

D(m,k,l)

j

(x) =

m−l−1

Xh=k+1

Cj,h(m, k, l) Bm

h (x)

(j = k + 1, k + 2, . . . , m − l − 1)

(2.1)

can be eﬃciently computed using the following algorithm (by convention, Cj,h := 0 if j or h 6∈
{k + 1, . . . , m − l − 1}):

Algorithm 2.1 (Computing the C-table [12]).

1. Compute the entries of the ﬁrst row of the table by

Ck+1,m−l−1 :=(cid:18) m

k + 1(cid:19)−1(cid:18) m

l + 1(cid:19)−1

(−1)m−k−l−2(m + k + l + 3)!

(m − k − l − 2)!(2k + 2)!(2l + 2)!

,

Ck+1,h :=

(h − m)(h − k)(h + k + 3)
(h + 1)[(h − m)2 − (l + 1)2]

Ck+1,h+1

(h = m − l − 2, . . . , k + 2, k + 1).

2. For j = k + 1, k + 2, . . . , m − l − 2, compute

Cj+1,h =

1

A(j)

{2(j − h)(j + h − m) Cj,h + B(h) Cj,h−1 + A(h) Cj,h+1 − B(j) Cj−1,h}

(h = k + 1, k + 2, . . . , m − l − 1)

with A(u) := (u−m)(u−k)(u+k +2)/(u+1), B(u) := u(u−m−l−2)(u−m+l)/(u−m−1).

Remark 2.2. Note that the complexity of the algorithm is O(m2).
In [14, Proposition 3], Lu
observed that–due to some symmetries in the C-table–only part of the entries must be calculated
as in Algorithm 2.1.

In the solution of Problem 1.1 given in Section 3, we need the following lemma which follows

easily from the results obtained in [12, Thm 4.1] and [20, Thm 4.1].

Lemma 2.3 (Multi-degree reduction of a B´ezier curve with prescribed boundary control points). Let
there be given natural numbers n, m, k, l such that m < n and k + l < m − 1. Let P ∗ be the B´ezier
curve of degree n,

n

P ∗(u) :=

The B´ezier curve of degree m,

Q∗(u) :=

Xj=0

m

Xj=0

pj Bn

j (u)

(0 ≤ u ≤ 1).

qj Bm

j (u)

(0 ≤ u ≤ 1),

having the prescribed control points q0, q1, . . . , qk and qm−l, qm−l+1, . . . , qm, and the inner control
points

qj :=

m−l−1

Xh=k+1

Cj,h(m, k, l) vh −  k
Xh=0

+

m

Xh=m−l! Kj,h qh

3

(j = k + 1, k + 2, . . . , m − l − 1),

where

h(cid:19) n
Xi=0(cid:18)n

i + h(cid:19)−1
i(cid:19)(cid:18)n + m

pi,

vh := (n + m + 1)−1(cid:18)m
Kj,h :=(cid:18)m

h(cid:19)(cid:18)m

j(cid:19)−1 (−1)j−k−1(k + 1 − h)m−k−l−1(k + 2)h(l + 2)m−h

(j − h)(j − k − 1)!(m − l − j − 1)!(k + 2)j(l + 2)m−j

,

and Cj,h(m, k, l) are the coeﬃcients in (2.1), gives the least value of the squared L2-error

E∗ :=Z 1

0

kP ∗(u) − Q∗(u)k2 du,

equal to

d

E∗ =

Xh=1(cid:2)In,n(ph, ph) + Im,m(qh, qh) − 2In,m(ph, qh)(cid:3) ,

where we use the notation ph, qh for the vectors of hth coordinates of points p0, p1, . . . , pn and
q0, q1, . . . , qm, respectively, and where for x := [x0, x1, . . . , xN ] and y := [y0, y1, . . . , yM ], we deﬁne

IN,M (x, y) := (N + M + 1)−1

N

Xi=0

M

Xj=0(cid:18)N + M

i + j (cid:19)−1(cid:18)N

i(cid:19)(cid:18)M

j (cid:19)xiyj.

3. Main result

Recall that for an arbitrary B´ezier curve of degree N ,

WN (u) =

N

Xh=0

wh BN

h (u)

(0 ≤ u ≤ 1),

the following well-known formulas hold (see, e.g., [7, §5.3]):

djWN (u)

duj

djWN (u)

duj

(cid:12)(cid:12)(cid:12)u=0
(cid:12)(cid:12)(cid:12)u=1

Moreover, notice that

= (N − j + 1)j∆j w0 = (N − j + 1)j

= (N − j + 1)j∆j wN −j = (N − j + 1)j

j

(−1)j+h(cid:18)j
h(cid:19)wh,
Xh=0
(−1)j+h(cid:18)j
h(cid:19)wN −j+h.
Xh=0

j

djP (t)

dtj

djP (t)

dtj
djQ(t)

dtj

djQ(t)

dtj

(cid:12)(cid:12)(cid:12)t=t0
(cid:12)(cid:12)(cid:12)t=ts
(cid:12)(cid:12)(cid:12)t=ti+
(cid:12)(cid:12)(cid:12)t=ti−

= h−j
1

= h−j

s

= h−j
i+1

= h−j

i

djP1(u)

duj

djPs(u)

duj
djQi+1(u)

duj
djQi(u)

duj

,

,

(cid:12)(cid:12)(cid:12)u=0
(cid:12)(cid:12)(cid:12)u=1
(cid:12)(cid:12)(cid:12)u=0
(cid:12)(cid:12)(cid:12)u=1

4

(i = 0, 1, . . . , s − 1),

(i = 1, 2, . . . , s),

where the notation used is that of Problem 1.1. Using the above equations in (1.3) and (1.5), we
obtain

∆j p1,0 −

j (cid:19)−1
j (cid:19)(cid:18)m1
q1,j =(cid:18)n1
j (cid:19)(cid:18)ms
qs,ms−j = (−1)j(cid:18)ns

j (cid:19)−1

j−1

(−1)j+h(cid:18)j
Xh=0

∆j ps,ns−j −

h(cid:19)q1,h
(−1)h(cid:18)j
Xh=1

j

Similarly, conditions (1.4) imply that for i ∈ {1, 2, . . . , s − 1}, we have

h(cid:19)qs,ms−j+h



h

j(cid:19)ai,j λi,j,

(−1)j(cid:18)h
j(cid:19)ai+1,j λi,j

Xj=1
Xj=1(cid:18)h

h

hj
i

ai,j :=

(mi − j + 1)j

,

qi,mi−h = κi +

qi+1,h = κi +

where

(j = 0, 1, . . . , r0),

(3.1)

(j = 0, 1, . . . , rs).

(3.2)

(h = 0, 1, . . . , ri),

(3.3)

for an arbitrary point κi = (κ1
we have

i , κ2

i , . . . , κd

i ) and vectors λi,j = [λ1

i,j, λ2

i,j , . . . , λd

i,j ]. In particular,

qi,mi = κi,

qi,mi−1 = κi − ai,1λi,1,

qi+1,0 = κi,

qi+1,1 = κi + ai+1,1λi,1,

qi,mi−2 = κi − 2ai,1λi,1 + ai,2λi,2,

qi+1,2 = κi + 2ai+1,1λi,1 + ai+1,2λi,2,

qi,mi−3 = κi − 3ai,1λi,1 + 3ai,2λi,2 − ai,3λi,3,

qi+1,3 = κi + 3ai+1,1λi,1 + 3ai+1,2λi,2 + ai+1,3λi,3.

Coming back to the problem of constrained multi-degree reduction of a composite B´ezier curve
(see Problem 1.1), let us observe that for any i ∈ {1, 2, . . . , s} the formulas (3.1)–(3.3) with ﬁxed
parameters κi and λi,j constitute constraints of the form demanded in Lemma 2.3. Now, by
applying this lemma for i = 1, 2, . . . , s to P ∗ := Pi, Q∗ := Qi with n := ni, m := mi, k := ri−1
and l := ri, we obtain the set of the segments of the composite B´ezier curve Q (1.1) with control
points depending on the parameters. In order to solve Problem 1.1, we have to determine the
optimum values of the parameters (cf. Remark 1.2).

Let us denote

Λi := [κi, λi,1, λi,2, . . . , λi,ri]T = [κ1

i , . . . , κd

i ; λ1

i,1, . . . , λd

i,1; . . . ; λ1

i,ri , . . . , λd

i,ri ]T ∈ Rρi ,

where ρi := (ri + 1)d. The optimum values of the parameters can be obtained by minimizing the
error function (1.2),

E ≡ E(Λ1; . . . ; Λs−1)

= E1(Λ1) +

s−1

Xi=2

Ei(Λi−1; Λi) + Es(Λs−1),

where

d

Ei = hi

Xh=1(cid:2)Ini,ni(ph

5

i , ph

i ) + Imi,mi(qh

i , qh

i ) − 2Ini,mi(ph

i , qh

i )(cid:3) ,

(3.4)

(3.5)

E1 ≡ E1(Λ1), Ei ≡ Ei(Λi−1; Λi) (i = 2, 3, . . . , s − 1), Es ≡ Es(Λs−1), with ph
i being the
vectors of hth coordinates of points pi,0, pi,1, . . . , pi,ni and qi,0, qi,1, . . . , qi,mi , respectively. For
a minimum of E, it is necessary that the derivatives of E with respect to the parameters κh
i
and λh
i,j are zero, which yields a system of σ linear equations with σ unknowns, where σ :=
ρ1 + ρ2 + . . . + ρs−1. Hence, for i = 1, 2, . . . , s − 1, we have

i , qh

∂E
∂κh
i

∂E
∂λh
i,j

=

=

∂

∂κh
i

(Ei + Ei+1) = 0

(h = 1, 2, . . . , d),

∂
∂λh
i,j

(Ei + Ei+1) = 0

(j = 1, 2, . . . , ri; h = 1, 2, . . . , d).

(3.6)

(3.7)

Now, we summarise the whole idea in Algorithm 3.1. Note that for i = 1, 2, . . . , s, the use of
Lemma 2.3 requires computation of C-table (see Algorithm 2.1). The entries of ith C-table are
denoted by C(i)

j,h (j, h = ri−1 + 1, ri−1 + 2, . . . , mi − ri − 1).

Algorithm 3.1 (C r-constrained multi-degree reduction of composite B´ezier curves).
Input: s, ni, mi, pi,0, pi,1, . . . , pi,ni (i = 1, 2, . . . , s),

r0, r1, . . . , rs, a = t0 < t1 < . . . < ts = b

Output: solution qi,j (i = 1, 2, . . . , s; j = 0, 1, . . . , mi) of Problem 1.1

Step 1. For i = 1, 2, . . . , s, compute C(i)

j,h (j, h = ri−1 + 1, ri−1 + 2, . . . , mi − ri − 1) using Algo-

rithm 2.1, assuming that m := mi, k := ri−1, l := ri.

Step 2. Compute Ei (i = 1, 2, . . . , s) by (3.5).

Step 3. Solve the system of linear equations (3.6), (3.7).

Step 4. Compute q1,j (j = 0, 1, . . . , r0) by (3.1).

Step 5. Compute qs,ms−j (j = 0, 1, . . . , rs) by (3.2).

Step 6. Compute qi,mi−h and qi+1,h (i = 1, 2, . . . , s − 1; h = 0, 1, . . . , ri) by (3.3).

Step 7. For i = 1, 2, . . . , s, set P ∗ := Pi, Q∗ := Qi, n := ni, m := mi, k := ri−1, l := ri, and

compute the control points qi,j (j = ri−1 + 1, ri−1 + 2, . . . , mi − ri − 1) using Lemma 2.3.

Step 8. Return qi,j (i = 1, 2, . . . , s; j = 0, 1, . . . , mi).

Remark 3.2. In case, where interpolation conditions are imposed at the endpoints of the original
segments (see Remark 1.3), Algorithm 3.1 must be slightly modiﬁed. Note that the parameter
κi (i = 1, 2, . . . , s − 1) is the meeting point of the consecutive segments Qi and Qi+1, i.e., κi =
Qi(1) = Qi+1(0). Therefore, by setting κi := P (ti) (cf. (3.3)), and by removing the subsystem
(3.6) from the system, the goal is easily achieved.

4. Examples

This section provides of the application of our algorithm. We give the squared L2-errors Ei

(i = 1, 2, . . . , s) and E (see (3.5), (3.4)) as well as the maximum errors

kP (t) − Q(t)k ≈ max

kP (t) − Q(t)k,

t∈[ti−1, ti]

i

E∞

:= max
t∈Ui
E∞ := max
1≤i≤s

E∞

i

,

where Ui := {ti−1, ti−1 + δ, ti−1 + 2δ, . . . , ti} with δ := (ti − ti−1)/500.

Results of the experiments have been obtained in MapleTM13, using 32-digit arithmetic. The

system of linear equations (3.6), (3.7) is solved using MapleTM fsolve procedure.

6

Example 4.1. Assuming that s = 4 and t0 = 0, t1 = 0.18, t2 = 0.29, t3 = 0.53, t4 = 1,
the composite curve “Squirrel” is formed by four B´ezier segments of degrees 9, 12, 12, and 12,
respectively. Control points are given at http://www.ii.uni.wroc.pl/~pgo/squirrel.txt. For
the results of degree reduction, see Table 1 as well as the corresponding Figures 1a and 1b. This
example shows that Algorithm 3.1 may result in a lower error than multiple application of [20,
Algorithm 1]. Furthermore, the larger are ri’s, the bigger are diﬀerences in errors because we have
more degrees of freedom, i.e., parameters λi,j (see Remark 1.2).

Parameters

m = (7, 8, 8, 9)

r = (2, 0, 3, 2, 2)

Summary

m = (7, 8, 8, 9)

r = (3, 0, 4, 2, 3)

Summary

i

1
2
3
4

1
2
3
4

Algorithm 3.1

[20, Algorithm 1]

Ei

3.40e−8
4.98e−7
1.85e−6
1.28e−6

E∞

i

1.64e−3
5.20e−3
8.23e−3
3.02e−3

Ei

3.40e−8
7.82e−7
7.58e−6
3.24e−6

E∞

i

1.01e−3
5.36e−3
1.13e−2
5.07e−3

E

E∞

E

E∞

3.66e−6

8.23e−3

1.16e−5

1.13e−2

9.62e−8
7.26e−7
3.28e−6
3.03e−6

1.62e−3
6.26e−3
9.80e−3
4.34e−3

1.10e−7
1.14e−5
6.81e−4
9.37e−6

1.84e−3
1.95e−2
9.51e−2
8.24e−3

E

E∞

E

E∞

7.13e−6

9.80e−3

7.02e−4

9.51e−2

Table 1: Squared L2-errors and maximum errors for degree reduction of the composite B´ezier curve “Squirrel”.

Example 4.2. For s = 2 and t0 = 0, t1 = 0.49, t2 = 1, we consider the composite curve “L”
which consists of two B´ezier segments of degrees 8 and 12 having the control points {(0.313, 0.52),
(0.198, 0.493), (0.245, 0.412), (0.346, 0.446), (0.466, 0.528), (0.397, 0.518), (0.301, 0.553), (0.296,
0.473), (0.299, 0.418)}, and {(0.299, 0.418), (0.301, 0.38), (0.323, 0.342), (0.328, 0.294), (0.256, 0.252),
(0.23, 0.272), (0.173, 0.323), (0.237, 0.427), (0.294, 0.278), (0.35, 0.327), (0.4, 0.267), (0.417, 0.296),
(0.396, 0.323)}, respectively. The comparison of the results of Algorithm 3.1, algorithm described
in Remark 3.2, and [20, Algorithm 1] is given in Table 2 (see also Figure 2). Once again, we
observe that the new approach may lead to better results than the older one. Moreover, we note
that in some cases it is useful to interpolate the endpoints of the original segments (see Remarks
1.3 and 3.2).

Parameters

m = (6, 7)
r = (1, 3, 1)

Summary

i

1
2

Algorithm 3.1

Ei

E∞

i

Remark 3.2

[20, Algorithm 1]

Ei

E∞

i

Ei

E∞

i

1.00e−6
2.51e−6

3.98e−3
3.99e−3

1.23e−6
4.33e−6

3.10e−3
5.49e−3

4.74e−5
1.91e−5

1.58e−2
1.08e−2

E

E∞

E

E∞

E

E∞

3.51e−6

3.99e−3

5.56e−6

5.49e−3

6.65e−5

1.58e−2

Table 2: Squared L2-errors and maximum errors for degree reduction of the composite B´ezier curve “L”.

Example 4.3. Let there be given three B´ezier curves of degrees 8, 6, and 6, deﬁned by the con-
trol points {(0.313, 0.52), (0.198, 0.493), (0.245, 0.412), (0.346, 0.446), (0.466, 0.528), (0.397, 0.518),
(0.301, 0.553), (0.296, 0.473), (0.3, 0.422)}, {(0.305, 0.418), (0.308, 0.344), (0.408, 0.342), (0.415,
0.445), (0.405, 0.417), (0.402, 0.377), (0.4, 0.365)}, and {(0.403, 0.36), (0.395, 0.249), (0.372, 0.233),

7

(a)

(b)

Figure 1: Original composite B´ezier curve “Squirrel” of degree n = (9, 12, 12, 12) (blue solid line) and degree reduced
composite B´ezier curves computed using Algorithm 3.1 (red dashed line), and [20, Algorithm 1] (black dotted line).
Parameters: (a) m = (7, 8, 8, 9), r = (2, 0, 3, 2, 2); and (b) m = (7, 8, 8, 9), r = (3, 0, 4, 2, 3).

Figure 2: Original composite B´ezier curve “L” of degree n = (8, 12) (blue solid line) and degree reduced composite B´ezier
curves computed using Algorithm 3.1 (red dashed line), algorithm described in Remark 3.2 (green dash-dotted line), and
[20, Algorithm 1] (black dotted line). Parameters are speciﬁed in Table 2.

(0.225, 0.228), (0.302, 0.306), (0.297, 0.308), (0.311, 0.322)}, respectively. Note that these B´ezier
curves are not joined (see Figure 3a). In spite of that, we set t0 = 0, t1 = 0.45, t2 = 0.68, t3 = 1,

8

and apply Algorithm 3.1 with m = (6, 5, 5) and r = 1 := (1, 1, 1, 1). As a result, we obtain the
C 1-continuous composite B´ezier curve “G” illustrated in Figures 3b and 3c (errors: E1 = 9.94e−7,
E2 = 2.84e−6, E3 = 1.42e−6, E = 5.25e−6, E∞
3 = 9.11e−3,
E∞ = 1.42e−2). In addition, the degrees of the segments are reduced. This example shows that
our algorithm can serve as a tool for merging of several unconnected B´ezier curves into a smooth
composite B´ezier curve. Furthermore, in case of C0-continuous input curves, the algorithm can
eliminate possible rough edges and corners.

1 = 1.06e−2, E∞

2 = 1.42e−2, E∞

(a)

(b)

(c)

Figure 3: Three original B´ezier curves of degrees 8, 6, and 6 (blue solid line) and the C 1-continuous composite B´ezier
curve “G” of degree m = (6, 5, 5) computed using Algorithm 3.1 (red solid line) with r = 1 := (1, 1, 1, 1).

5. Conclusions

We propose a novel approach to the problem of multi-degree reduction of composite B´ezier
curves. In contrast to other methods, ours minimizes the L2-error for the whole composite curve
instead of minimizing the L2-errors for each segment separately. The main idea is to connect
consecutive segments of the searched composite curve using the conditions (1.4). As a result, an
additional optimization is possible. The new problem is solved eﬃciently using the properties of
constrained dual Bernstein polynomial basis. Examples 4.1 and 4.2 show that the new method
gives much better results than multiple application of the degree reduction of a single B´ezier
curve. Furthermore, we observe that a slight modiﬁcation of the method allows for interpolation
of endpoints of the original segments (see Remarks 1.3 and 3.2), which may be useful in some
cases (see Example 4.2). Moreover, merging of several unconnected B´ezier curves into a smooth
composite B´ezier curve is also possible (see Example 4.3).

Let us mention that we have studied also the extended version of Problem 1.1 where the
parametric continuity conditions (1.3)–(1.5) are replaced by geometric continuity constraints. We
have observed that in this case the error function E becomes a high degree polynomial function
of many variables, even for modest values of ri’s. Consequently, we have to deal with constrained
nonlinear programming problem in order to ﬁnd optimal values for the parameters. Experiments
show that calculations may be painfully long. So far, we have not been able to give an eﬃcient
algorithm of solving this task.

9

References

[1] Y.J. Ahn, Using Jacobi polynomials for degree reduction of B´ezier curves with C k-constraints,

Comput. Aided Geom. Des. 20 (2003), 423–434.

[2] Y.J. Ahn, B.-G. Lee, Y. Park, J. Yoo, Constrained polynomial degree reduction in the L2-
norm equals best weighted Euclidean approximation of B´ezier coeﬃcients, Comput. Aided
Geom. Des. 21 (2004), 181–191.

[3] R. Ait-Haddou, M. Bartoˇn, Constrained multi-degree reduction with respect to Jacobi norms,

Comput. Aided Geom. Des. 42 (2016), 23–30.

[4] G. Brunnett, T. Schreiber, J. Braun, The geometry of optimal degree reduction of B´ezier

curves, Comput. Aided Geom. Des. 13 (1996), 773–788.

[5] G.-D. Chen, G.-J. Wang, Optimal degree reduction of B´ezier curves with constraints of end-

points continuity, Comput. Aided Geom. Des. 19 (2002), 365–377.

[6] M. Eck, Least squares degree reduction of B´ezier curves, Comput. Aided Des. 27 (1995),

845–851.

[7] G.E. Farin, Curves and Surfaces for Computer-Aided Geometric Design. A Practical Guide,

ﬁfth edition, Academic Press, Boston, 2002.

[8] P. Gospodarczyk, Degree reduction of B´ezier curves with restricted control points area, Com-

put. Aided Des. 62 (2015), 143–151.

[9] P. Gospodarczyk, S. Lewanowicz, P. Woźny, Gk,l-constrained multi-degree reduction of B´ezier

curves, Numer. Algor. 71 (2016), 121–137.

[10] B. J¨uttler, The dual basis functions for the Bernstein polynomials, Adv. Comput. Math. 8

(1998), 345–352.

[11] B.-G. Lee, Y. Park, J. Yoo, Application of Legendre-Bernstein basis transformations to degree

elevation and degree reduction, Comput. Aided Geom. Des. 19 (2002), 709–718.

[12] S. Lewanowicz, P. Woźny, B´ezier representation of the constrained dual Bernstein polynomi-

als, Appl. Math. Comp. 218 (2011), 4580–4586.

[13] L. Lu, Explicit G2-constrained degree reduction of B´ezier curves by quadratic optimization,

J. Comput. Appl. Math. 253 (2013), 80–88.

[14] L. Lu, Gram matrix of Bernstein basis: Properties and applications, J. Comput. Appl. Math.

280 (2015), 37–41.

[15] L. Lu, G. Wang, Optimal degree reduction of B´ezier curves with G2-continuity, Comput.

Aided Geom. Des. 23 (2006), 673–683.

[16] L. Lu, G. Wang, Application of Chebyshev II-Bernstein basis transformations to degree re-

duction of B´ezier curves, J. Comput. Appl. Math. 221 (2008), 52–65.

[17] A. Rababah, B.-G. Lee, J. Yoo, A simple matrix form for degree reduction of B´ezier curves

using Chebyshev-Bernstein basis transformations, Appl. Math. Comp. 181 (2006), 310–318.
[18] A. Rababah, S. Mann, Iterative process for G2 multi-degree reduction of B´ezier curves, Appl.

Math. Comp. 217 (2011), 8126–8133.

[19] A. Rababah, S. Mann, Linear methods for G1, G2, and G3-multi-degree reduction of B´ezier

curves, Comput. Aided Des. 45 (2013), 405–414.

[20] P. Woźny, S. Lewanowicz, Multi-degree reduction of B´ezier curves with constraints, using

dual Bernstein basis polynomials, Comput. Aided Geom. Des. 26 (2009), 566–579.

10

