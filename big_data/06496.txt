Instance Inﬂuence Estimation for Hyperspectral Target
Signature Characterization using Extended Functions of

Multiple Instances

Sheng Zou and Alina Zare

Department of Electrical and Computer Engineering, University of Missouri, Columbia, USA

ABSTRACT

The Extended Functions of Multiple Instances (eFUMI) algorithm1 is a generalization of Multiple Instance
Learning (MIL). In eFUMI, only bag level (i.e. set level) labels are needed to estimate target signatures from
mixed data. The training bags in eFUMI are labeled positive if any data point in a bag contains or represents
any proportion of the target signature and are labeled as a negative bag if all data points in the bag do not
represent any target. From these imprecise labels, eFUMI has been shown to be eﬀective at estimating target
signatures in hyperspectral subpixel target detection problems. One motivating scenario for the use of eFUMI
is where an analyst circles objects/regions of interest in a hyperspectral scene such that the target signatures of
these objects can be estimated and be used to determine whether other instances of the object appear elsewhere
in the image collection. The regions highlighted by the analyst serve as the imprecise labels for eFUMI. Often, an
analyst may want to iteratively reﬁne their imprecise labels. In this paper, we present an approach for estimating
the inﬂuence on the estimated target signature if the label for a particular input data point is modiﬁed. This
instance inﬂuence estimation guides an analyst to focus on (re-)labeling the data points that provide the largest
change in the resulting estimated target signature and, thus, reduce the amount of time an analyst needs to
spend reﬁning the labels for a hyperspectral scene. Results are shown on real hyperspectral sub-pixel target
detection data sets.

Keywords: eFUMI, interactive labeling, inﬂuence, target proportion, residual error

1. INTRODUCTION

The Extended Functions of Multiple Instance (eFUMI) algorithm is a hyperspectral target characterization
method that estimates the spectral signature of a target of interest from training data with imprecise and
uncertain labels. The eFUMI algorithm addresses problems that are generalizations of those addressed by a
standard Multiple Instance Learning (MIL) framework.2 In MIL, the training points are grouped into “bags.” A
bag is a multi-set of training data points. Each bag is labeled as “positive” or “negative.” Under MIL, positive
bags are assumed to contains at least one target data point and negative bags contains exclusively non-target
points. Generally, MIL algorithms assume that each data point is either entirely a target or a non-target data
point. The eFUMI algorithm extends the MIL framework to address data points that are mixtures of target and
non-target signatures. Thus, in eFUMI, positive bags are assumed to contain at least one data point that has
some non-zero proportion of target. Negative bags in eFUMI are assumed to contain data points that all have
zero target proportion.

The advantage of MIL and eFUMI during hyperspectral image analysis is that they allow for bag-level (instead
of precise instance-level) training labels. Creating bag level labels is generally much less time consuming and,
often, much more feasible than assigning accurate data-point level training labels. For example, in the case of
sub-pixel target detection in remotely-sensed hyperspectral imagery, GPS coordinate of targets in training data
may be known but the accuray of the GPS coordinates may range across several pixels. Thus, the ground truth

6
1
0
2

 
r
a

 

M
1
2

 
 
]

V
C
.
s
c
[
 
 

1
v
6
9
4
6
0

.

3
0
6
1
:
v
i
X
r
a

author

information:

Further
sz9nf@mail.missouri.edu
The authors wish to thank the National Geospatial-Intelligence Agency for support of this research under the project
entitled “NIP: Functions of Multiple Instances for Hyperspectral Analysis.”

zarea@missouri.edu

(corresponding

Alina Zare:

author),

Sheng Zou:

in this case is inherently imprecise. Yet, it is feasible from this imprecise groundtruth data to create positive
bags associated with each ground truth point and include all pixels in a neighborhood based on the GPS unit
accuracy and, also, create negative bags which are far from all GPS target ground truth points.

Another scenario in which eFUMI may be useful is one in which an analyst circles regions of interest in
an image (and, thus, these regions become positive bags) and also circles regions of no-interest (these become
negative bags). Then, eFUMI can take these regions and produce an estimate of the target spectral signature
that is found in all positive bags (and not found in any negative bags). By being able to circle general regions
of interest using some sort of user interface, it is much more intuitive and easier for an analyst to generate label
maps as opposed to being required to create some sort of pixel level label maps.

However, diﬀerences in labeling may cause in diﬀerences in the eFUMI result. Thus, after obtaining an eFUMI
result, an analyst may wish to reﬁne their bags and bag-level labels. In this paper, we propose two methods for
identifying which pixels (or image regions) would cause the largest change in eFUMI results if relabeled. Our two
proposed inﬂuence estimation methods estimate the relative degree that the resulting eFUMI-estimated target
endmember will change after changing the labels of the respective pixels/regions.

2. EXTENDED FUNCTIONS OF MULTIPLE INSTANCES

xi = piT eT +(cid:80)M

The eFUMI algorithm is a method to learn a target signature from training data without the need of instance-
level labels.1 Speciﬁcally, the goal of eFUMI is to estimate a target signature, eT , non-target signatures, {ek}M
k=1,
the number of needed non-target signatures, M , and the function parameters, pi, which deﬁne the relationship
between each data point, xi, and the endmember signatures. These are estimated given a set of input training
data, {xi}N
i=1 ∈ RD which have been partitioned into K “bags,” B = {B1, . . . , BK}, with associated bag-level
labels, L = {L1, . . . , LK}. Each training point is assumed to be a function of target and non-target signatures,
xi = f (Ei, pi). In the results shown here, we consider the case of a convex combination for the functional form,
k=1 pik = 1, piT ≥ 0, pik ≥ 0, (cid:107)ek(cid:107)2 = 1,
and (cid:107)eT(cid:107)2 = 1. Furthermore, the bag-level labels are unspeciﬁc since, if for bag Bj with Lj = 1 (thus, Bj is
a positive bag), this indicates that there is at least one data point in Bj with a positive piT indicating some
presence of target, as in (1), where εi is an error term.

k=1 pikek subject to the constraints that piT +(cid:80)M
M(cid:88)

if Lj = 1,∃xi ∈ Bj s.t. xi = piT eT +

pikek + εi, piT > 0

(1)

However, the exact number of data points in a positive bag with a target contribution (i.e., piT > 0), is unknown,
also, the target proportion is unknown. Furthermore, if Bj is a negative bag (i.e., Lj = 0), then this indicates
that none of the data in Bj contain any target, as in (2).

k=1

M(cid:88)

if Lj = 0,∀xi ∈ Bj, xi =

pikek + εi

(2)

k=1

Given training data of this form, instance-level labels are unknown. eFUMI addresses this problem using an
Expectation Maximization (EM) approach in which the instance-level labels are the hidden, latent variables in the
EM model. The assumed complete data log-likelihood is proportional to a cost function3 with an approximation
error term (minimizing the L2 norm between training points and eFUMI-estimated reconstructed per-point
signatures), endmember constraint terms (minimizing the L2 norm between endmembers and global data mean)
and a sparsity promoting term (promoting the proportions associated with unnecessary endmembers to be zero).
The optimization of the cost function is solved by iteratively via EM. Since instance-level labels are unknown
for each training point, in the E-step, the conditional probability of an instance-level label given parameters and
bag-level label is computed. In the M-step, estimated endmembers and proportions are updated by minimizing
the expected value of cost function with respect to the latent instance-level label. The cost function is iteratively
minimized until some stopping criterion is reached. Full details of the eFUMI algorithm can be found in the
paper by Jiao and Zare.1

3. PROPOSED METHOD

Given the eFUMI algorithm outlined in the previous section, our goal in this paper is to estimate the inﬂuence
of each pixel or an image region on the result of the eFUMI algorithm. Speciﬁcally, our goal is to estimate which
pixels would cause the largest change in the target spectral signature estimated by eFUMI if their labels were
switched. By identifying which pixels would cause the largest change in the eFUMI algorithm, then one could
guide an analyst to focus on (re-)labeling only those pixels that would have a signiﬁcant inﬂuence on the eFUMI
result. Hopefully, this would result saving analyst time and eﬀort during analysis.

Given the goal of determining which pixels cause the largest change in the estimate target spectral signature,

we deﬁne inﬂuence of a pixel as:

Ii = (cid:107)eti − et(cid:107)2

(3)

where et is the estimated target endmember without changing any label values (i.e., the target estimation result
using an initial set of bag-level labels) and eti is the estimated target endmember after changing the label of point
xi (i.e., switching the label to be “negative” to “positive” or vice versa. One could certainly determine inﬂuence
of each pixel by laboriously switching the label of each pixel in series, re-running eFUMI for the modiﬁed label
set, and computing the resulting change in the estimated target signature. However, this would be extremely
time consuming and, thus, infeasible for the development of an interactive method for hyperspectral unmixing
analysis.

Therefore, this article proposes two fast methods to approximate the relative inﬂuence of a single point or
image region (e.g., a superpixel). Both of the proposed methods extremely reduce the time needed to estimate
relative inﬂuence as compared with original relabeling-rerunning process for each point/superpixel.
Instead,
only running eFUMI once is necessary. After running eFUMI with initial user-selected labels, the ﬁrst proposed
method estimates relative inﬂuence by appling the fully-constrained least-squares4 unmixing algorithm to all
data points using the endmembers esitmated from the initial run. Then, we propose to use the target proportion
value estimated for each point as a surrogate for the inﬂuence measure. Namely, for each point xi, we ﬁnd:

(4)

(5)

pi = arg minpi (cid:107)xi − Epi(cid:107)2

2

(cid:40)
(cid:80)M +1
j=1 pij ∀i, j

pij ≥ 0 ∀i, j

s.t.

where E is a matrix containing the estimated endmembers, pi is the proportion vector for point xi, pij is the
proportion value of endmember j, and M is the number of non-target endmembers. The surrogate inﬂuence
measure is set to pit, the proportion value estimated for the target endmember for the ith data point. This
method identiﬁes the data points with large target portion. Thus, changing the label of these data points would
have a large inﬂuence of the resulting estimated target endmember.

For the second proposed method, given the estimated endmembers and proportions for each point, the residual

error is computed:

ri = (cid:107)xi − Epi(cid:107)2

2

(6)

where E is the estimated endmembers, pi is the estimated proportion for point xi. This method identiﬁes the
data points that are not well represented by the estimated endmembers and, thus, lie outside the convex hull
deﬁned by the endmembers.

Experimental evaluations have been carried out to investigate the performance of the proposed methods.

4. EXPERIMENTAL RESULTS

4.1 Datasets

The proposed instance inﬂuence estimation methods were tested on two hyperspectral datasets.

(a)

(b)

Figure 1. Labeled ground truth on (a) Gulfport. 5-by-5 red regions are the target bags (Brown) and the rest are non-target
bags; (b) Pavia University. Red region is the target bag (Sidewalk) and green regions are the non-target bags

4.1.1 MUUFL Gulfport Data Set

The ﬁrst hyperspectral data set used in experiments in this paper was acquired by the CASI-1500 hyperspec-
tral imager over the campus of the University of Southern Mississippi-Gulfpark in Long Beach, Mississippi in
November 2010. The scene contains 325× 337 pixels and consists of 72 bands covering a wavelength range of 375
to 1050 nm with a 10 nm bandwidth. The spatial resolution is 1 m. Four diﬀerent types of colored fabric cloths
were placed throughout the scene as targets. The target colors (used to identify the diﬀerent target types) are
Brown, Dark Green, Faux Vineyard Green, and Pea Green. Each type of target varied in size from 0.5× 0.5 m2,
1 × 1 m2, to 3 × 3 m2. A 5-by-5 halo around the center of each target was considered as the target “bag” since
the accuracy of the GPS device used to collect the ground truth was 5 m.5

4.1.2 Pavia University Data Set

The second data set was collected by the Reﬂective Optics System Imaging Spectrometer (ROSIS) around the
Engineering School at the University of Pavia, Italy in July 2002. The ﬂight was operated by the Deutschen
Zentrum for Luftund Raumfahrt (DLR, the German Aerospace Agency) in the framework of the HySens project,
managed and sponsored by the European Union.6 The ROSIS generates 115 bands cover 430 to 860 nm with
4nm bandwidth. The scene contain 340 × 610 pixels and consists of 103 bands with 12 noisiest bands removed.
The spatial resolution is 1.3 m. We obtained this dataset from the website of Computational Intelligence Group
at the Basque University (UPV/EHU).7

The target of interest for this data set was selected as a region of sidewalk (found around the blue painted
metal sheets). The label of target bag and non-target bags were chosen to ensure that the target bag contains
the target material and non-target bags contained a variety of non-target materials such as painted metal sheets,
vegetation, red roof, bare soil and shadow.

4.2 Single Point Experiment

The ﬁrst experiment investigated the correlation between the inﬂuence of a single data point and the proposed
metrics. The eFUMI was ﬁrst run given an initial set of labels (as shown in Figure 1). When running eFUMI,
endmembers were initialized using the VCA algorithm8 and all proportion values were initialized as
M +1 where
M is the number of background endmembers and M + 1 is the total number of endmembers (given only one
target endmember). After this initial run, both of the proposed methods to approximate relative inﬂuence were
computed. Thus, the target proportion value and the residual error were computed for every data point. Then,
the labels of 1000 non-target data points were ﬂipped in series. For each data point, eFUMI was run again given
the new label set and the resulting inﬂuence value was computed. After the inﬂuence value was computed for a
data point, the label of that point was restored and the next label was ﬂipped to repeat the same process such
that the inﬂuence values for all 1000 points were calculated. This process is outlined in Alg. 1.

1

1

M +1

Algorithm 1 Single Point Experiment
1: Initialize Einit via VCA, Pinit as
2: E0, P0 ← eFUMI(L, X, Einit, Pinit) (where L is the initial label set and X is the data)
3: Compute residual error for each data point: r ← (cid:107)X − E0P0(cid:107)2
4: Obtain target proportion for each data point, pt via unmixing using (5)
5: for i=1:NumDataPoints do
6:
7:
8:
9:
10: end for
11: return

Flip the label li of point xi to obtain updated label set, Li: li ← li − 1
Ei, Pi ← eFUMI(Li, X, E0, P0)
Compute Inﬂuence: Ii using (3)
Restore the label li: li ← li − 1

2

(a)

(b)

(c)

(d)

Figure 2. Inﬂuence caused by selecting 1000 points randomly(a,b) or with high target proportion(c,d) from Gulfport and
changing labels, compared with their corresponding (a,c) target proportion, (b,d) residual error

Figure 2 (a) and (b) display the scatter plots of log of the inﬂuence value versus the target proportion
and residual error metrics, respectively, for 1000 randomly selected points. The Spearman’s rank correlation
coeﬃcients for both methods are ρpt = 0.3875 and ρre = 0.1005. Figure 2 (c) and (d) display the scatter plots of
log of the inﬂuence value versus the target proportion and residual error metrics, respectively, for the 1000 data
points with the largest target proportion value. The Spearman’s rank correlation coeﬃcients for both methods
are ρpt = 0.6434 and ρre = 0.5674. As can be seen in the scatter plots, points with large inﬂuence values tend
to also have large target proportion and large residual error values.

The proposed methods are also shown to be eﬀective on the Pavia University dataset. As is shown in Figure
1 (b), a sub-image of Pavia University was chosen as the test dataset. The red rectangular region was marked
as the target bag and green rectangular regions were identiﬁed as the non-target bags. In this example, the
target material was “sidewalk”. The labels of all non-target data points were ﬂipped sequentially, following
the procedure described above. As shown in Figure 3 (a), there is a strong relationship between high inﬂuence
value and high target proportion on this data set. Figure 3 (b) displays the relationship between inﬂuence value

Figure 3. Inﬂuence caused by selecting all data points in the non-target bags with the large target proportion value from
the Pavia data set and changing labels, compared with their corresponding (a) target proportion, (b) residual error

(a)

(b)

00.10.20.30.40.50.60.70.80.91target proportion10-510-410-310-210-1log(influence)00.511.5residual error10-510-410-310-210-1log(influence)0.20.30.40.50.60.70.80.91target proportion00.20.40.60.811.21.41.61.8influence00.20.40.60.811.21.41.61.82residual error00.20.40.60.811.21.41.6influence00.10.20.30.40.50.60.70.8target proportion00.20.40.60.811.21.41.61.82influence×10701234567residual error×10700.20.40.60.811.21.41.61.82influence×107and residual error. The data points that have a target proportion above 0.4 in Figure 3 (a) were identiﬁed as
pixels from red roof regions in the non-target bags. Further investigation shows that these red roof materials
have a similar spectral signature to the sidewalk in the area.
In this way, act as a “confuser” during target
characterization and, thus, they are inﬂunetial data points in the eFUMI algorithm. In this example, target
portion was seen to be more eﬀective than residual error in predicting high inﬂuence values (as can bee seen with
the divergence of inﬂuence valus in the scatter plot among points with large residual error).

4.3 Mislabeling and Recovery Experiment

In this experiment, we investigate the improvement in target endmember estimation by correcting the labels of
groups of mislabeled data points. Speciﬁcally, we compare the improvement of selecting points to relabel using
the proposed methods versus random selection.

The experiment was structured as follows. First, eFUMI was run with a ﬁxed set of correct initial labels.
The resulting endmembers and proportion values were labeled as Etrue and Ptrue. Then, 0.5% of the labels (500
non-target points) were randomly selected and changed to incorrect label values. eFUMI was run using these
incorrect labels and the results were named Eerr and Perr. Finally, 20% data points were selected using one
of three diﬀerent strategies: (1) selected 20% of the data points randomly, (2) selected 20% of the data points
with largest target proportion, and (3) selected 20% of the data points with the largest residual error. Among
the 20% of selected pixels, their labels were corrected if incorrect. These updated labels were then used to run
eFUMI. These ﬁnal set of estimated endmembers were named Erand, Ept, and Ere, respectively, depending on
the sample selection strategy. This process is outlined in Alg. 2.

1

M +1

1

M +1

2

Algorithm 2 Mislabeling and Recovery Experiment
1: Initialize Einit via VCA, Pinit as
2: Etrue, Ptrue ← eFUMI(L, X, Einit, Pinit) (where L is the initial label set and X is the data)
3: Compute residual error for each data point: r ← (cid:107)X − E0P0(cid:107)2
4: Obtain target proportion for each data point, pt via unmixing using (5)
5: Randomly select and ﬂip α% labels obtaining Lerr
6: Eerr, Perr ← eFUMI(Lerr, X, Einit, Pinit) (where L is the updated label set and X is the data)
7: Initialize E0 via VCA, P0 as
8: for i=1 to 3 do
9:
10:
11:
12:
13:
14:
15:

Randomly select β% labels and correct if wrong to obtain Lrand
Erand, Prand ← eFUMI(Lrand, X, E0, P0)
Compute DoIrand using (7)

end if
if i=2 then

if i=1 then

Select points with highest β% target proportions and correct their labels if wrong to obtain
Lpt
Ept, Ppt ← eFUMI(Lpt, X, E0, P0)
Compute DoIpt using (7)

16:
17:
18:
19:
20:

end if
if i=3 then

21:
22:
23:
24: end for
25: return

end if

Select points with highest β% residual errors and correct their labels if wrong to obtain
Lre
Ere, Pre ← eFUMI(Lre, X, E0, P0)
Compute DoIre using (7)

Degrees of improvement (DoI) for the target endmember spectra for the three methods (random, target

(a) Brown

(b) Dark Green

(c) Faux Vineyard Green

(d) Pea Green

Figure 4. Target endmembers on Gulfport estimated by label of (1) ground truth; (2) 0.5% ﬂipped; (3) correct 20%
randomly; (4) correct 20% based on inﬂuential points of method 1; (5) correct 20% based on inﬂuential points of method
2

proportion and residual error) were calculated using the following:
(cid:107)ettrue − eterr(cid:107)2 − (cid:107)ettrue − etk(cid:107)2

DoIk =

(cid:107)ettrue − eterr(cid:107)2

, k = rand, Pt, re,

(7)

where etm is the target endmember for em = true, err, rand, Pt, re. DoI for the three methods were computed as
DoIrand = 18.7%, DoIPt = 96.11%, DoIre = 99.42%, respectively, considering the brown target in the MUUFL
Gulfport data set. Figure 4 and the resulting DoIs show that the label correction obtained using the proposed
methods could better recover the estimated target signature as opposed to random selection.

The mislabeling and recovery experiment was repeated on the Pavia Dataset. 5% of the labels (58 non-target
points) was chosen as the mislabeling ratio and 10% was chosen as the correction ratio. The initial labels for
eFUMI was the same one shown in Figure 1 (b). The DoI for three methods were found to be DoIrand = 25.26%,
DoIPt = 73.4%, and DoIre = 28.06%. Similar to the single point experiment, it was found that the target
proportion metric was more eﬀective on this data set.

4.4 Superpixel Inﬂuence Experiment

A superpixel is deﬁned as a small, spatially continuous segment in an image. In this experiment, we investigate
the inﬂuence of modifying labels of superpixels (as opposed to invidiual pixels) in a hyperspectral data set. The
inﬂuence for superpixel was investigated since each superpixel generally contains data points with similar spectral
signatures (and, thus, the inﬂuence of the set of data points is likely to be similar) and because it is much easier
and more intuitive to relabel superpixel regions instead of individual pixels.

To understand the correlation between inﬂuence of superpixel and proposed approaches, the Gulfport dataset
was over-segmented into about seven thousand superpixels having similar sizes using a Normalized Cut method.9
Then, the rest of experiment was very similar with single point inﬂuence experiment with one diﬀerence which
is instead of computing the target proportion of all points in each superpixel, we relied on the largest target
proportion in each superpixel as the surrogate inﬂuence metric. This process is outlined in Alg. 3. Figure 5
(a) shows the superpixels of Gulfport dataset. Figure 6 illustrates the plot of log of the inﬂuence value versus
the log of largest target proportion, residual error, sum of target proportion, and sum of residual error in each
superpixel, respectively. As is shown in Figure 6, the log of the inﬂuence is most correlated with the largest
target proportion in each superpixel among all proposed estimation methods.

To further investigate superpixel inﬂuence, the same experiment was repeated on the Pavia dataset. Nearly
seven hundred segments was generated and shown in 5 (b). The average size of Pavia segments is much larger
than those in Gulfport. Figure 7 shows the inﬂuence value versus all of the proposed metrics for the Pavia data
set. The performance of the sum of target proportions and the sum of the residual errors were found to be
more eﬀective than the maximum values. We believe this to be the case because the sizes of the superpixels
on Pavia are much larger than Gulfport so that considering only one maximum point in the superpixel is not
comprehensive enough as compared to metrics that take into account all target proportions or residual errors in
each superpixel.

01020304050607080Band-0.100.10.20.30.40.50.60.70.8ReflectanceBrowntruechange labelrandomly correctcorrect based on Ptcorrect based on re01020304050607080Band-0.100.10.20.30.40.50.60.70.80.9ReflectanceDark Greentruechange labelrandomly correctcorrect based on Ptcorrect based on re01020304050607080Band-0.2-0.100.10.20.30.40.50.60.70.8ReflectanceFaux Vineyard Greentruechange labelrandomly correctcorrect based on Ptcorrect based on re01020304050607080Band-0.0500.050.10.150.20.25ReflectancePea Greentruechange labelrandomly correctcorrect based on Ptcorrect based on reFigure 5. Inﬂuence of Superpixel for (a) Gulfport. 7419 segments were generated via Normalize Cut;9 (b) Pavia University.
744 segments were generated via Normalize Cut

(a)

(b)

(a)

(b)

(c)

(d)

Figure 6. Inﬂuence of Gulfport superpixels caused by ﬂipping the labels of each superpixel compared with (a) maximum
target proportion in each superpixel, (b) maximum residual error in each superpixel, (c) sum of target proportions in each
superpixel, and (d) sum of residual errors in each superpixel

Algorithm 3 Superpixel Experiment
1: Segment input image into N superpixels
2: Initialize Einit via VCA, Pinit as
3: E0, P0 ← eFUMI(L, X, Einit, Pinit)
4: Compute residual error for each data point: r ← (cid:107)X − E0P0(cid:107)2

M +1

1

2, compute max(r) in each superpixel, compute

sum(r) in each superpixel

5: Obtain target proportion for each data point, pt via unmixing using (5), compute max(pt) in each superpixel,

compute sum(pt) in each superpixel

6: for i=1:N do
7:
8:
9:
10:
11: end for
12: return

Flip all of the labels for each data point in superpixel si to obtain Li
Ei, Pi ← eFUMI(Li, X, E0, P0)
Compute Inﬂuence: Ii using (3)
Restore the labels to L

10-510-410-310-210-1100log(max(Pt))10-510-410-310-210-1100101log(influence)10-310-210-110010110210310-510-410-310-210-1100101log(influence)max(re)10-510-410-310-210-1100101102log(sum(Pt))10-510-410-310-210-1100101log(influence)10-310-210-1100101102103log(sum(re)10-510-410-310-210-1100101log(influence)(a)

(b)

(c)

(d)

Figure 7. Inﬂuence of Pavia superpixels caused by ﬂipping the labels of each superpixel compared with (a) maximum
target proportion in each superpixel, (b) maximum residual error in each superpixel, (c) sum of target proportions in each
superpixel, (d) sum of residual errors in each superpixel

In this article, we proposed relative inﬂuence estimation metrics for the eFUMI algorithm. These provided a
mechanism to estimate relative pixel and superpixel inﬂuence in eFUMI. Generally, the target proportion metric
provided better performance as compared to the residual error metric.

5. SUMMARY

REFERENCES

[1] Jiao, C. and Zare, A., “Functions of multiple instances for learning target signatures,” IEEE Transactions

on Geoscience and Remote Sensing 53(8), 4670–4686 (2015).

[2] Maron, O. and Lozano-P´erez, T., “A framework for multiple-instance learning,” Advances in Neural Infor-

mation Processing Systems , 570–576 (1998).

[3] Zare, A. and Jiao, C., “Extended functions of multiple instances for target characterization,” in [6th IEEE
2014 Workshop on Hyperspectral Image and Signal Processing: Evolution in Remote Sensing (WHISPERS)],
1–4 (2014).

[4] Heinz, D. C. and Chang, C.-I., “Fully constrained least squares linear spectral mixture analysis method
for material quantiﬁcation in hyperspectral imagery,” IEEE Transactions on Geoscience and Remote Sens-
ing 39(3), 529–545 (2001).

[5] Gader, P., Zare, A., Close, R., Aitken, J., and Tuell, G., “Muuﬂ gulfport hyperspectral and lidar airborne

data set,” Univ. Florida, Gainesville, FL, USA, Tech. Rep. REP-2013-570 (2013).

[6] D´opido, I., Li, J., Marpu, P. R., Plaza, A., Bioucas Dias, J. M., and Benediktsson, J. A., “Semisupervised self-
learning for hyperspectral image classiﬁcation,” IEEE Transactions on Geoscience and Remote Sensing 51(7),
4032–4044 (2013).

[7] “Hyperspectral remote sensing scenes,” (2002).

http://www.ehu.eus/ccwintco/index.php?title=

Hyperspectral_Remote_Sensing_Scenes.

[8] Nascimento, J. M. and Dias, J. M. B., “Vertex component analysis: A fast algorithm to unmix hyperspectral

data,” IEEE Transactions on Geoscience and Remote Sensing 43(4), 898–910 (2005).

[9] Gillis, D. B. and Bowles, J. H., “Hyperspectral image segmentation using spatial-spectral graphs,” in [SPIE

Defense, Security, and Sensing ], 83901Q–83901Q, International Society for Optics and Photonics (2012).

10-310-210-1100log(max(Pt))102103104105106107log(influence)1051061071081091010log(max(re))102103104105106107log(influence)10-310-210-1100101102103log(sum(Pt))102103104105106107log(influence)1051061071081091010log(sum(r))102103104105106107log(influence)