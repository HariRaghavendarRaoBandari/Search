Superplot: a graphical interface for plotting and

analysing MultiNest output

ARC Centre of Excellence for Particle Physics at the Tera-scale, School of Physics and

Astronomy, Monash University, Melbourne, Victoria 3800 Australia

Andrew Fowlie

School of Physics and Astronomy, Monash University, Melbourne, Victoria 3800 Australia

Michael Hugh Bardsley

March 3, 2016

Abstract

We present an application, Superplot, for calculating and plotting statistical

quantities relevant to parameter inference from a “chain” of samples drawn from a

parameter space, produced by e.g., MultiNest. A simple graphical interface allows

one to browse a chain of many variables quickly, and make publication quality plots

of, inter alia, proﬁle likelihood, posterior pdf, conﬁdence intervals and credible re-

gions. In this short manual, we document installation and basic usage, and deﬁne

all statistical quantities and conventions.

6
1
0
2

 
r
a

M
 
2
 
 
]
n
a
-
a
t
a
d

.
s
c
i
s
y
h
p
[
 
 

1
v
5
5
5
0
0

.

3
0
6
1
:
v
i
X
r
a

1

Introduction

Many branches of physics are utilising sophisticated numerical methods to infer the param-

eters of a model from data. This typically involves a numerical exploration of a parameter

space with a Monte-Carlo algorithm, resulting in a collection of weighted samples drawn

from the parameter space (henceforth referred to as a chain). A modern example of such

an algorithm is nested sampling [1, 2]. The popular MultiNest [3–5] implementation of

nested sampling is utilised for parameter extraction in manifold areas of physics, including

supersymmetric ﬁts (see e.g., Ref. [6–8]), cosmological ﬁts (see e.g., Ref. [9–15]) and X-ray

analysis (see e.g., Ref. [16, 17]), and in a forthcoming general purpose ﬁtting program,
GAMBIT.1

We present an application, Superplot, for plotting parameters extracted by MultiNest

(or a similar code) with the matplotlib plotting library [18]. This should simplify the

ﬁnal step in parameter extraction: calculating and plotting results from a chain, such

as posterior density, proﬁle likelihood, credible regions or conﬁdence intervals. This is,
of course, already possible with private scripts or pippi [19], superEGO/CosmoloGUI2,
modiﬁed versions of the programs getplots/getdist [9, 10] and even ROOT [20]. The

advantage of Superplot is that a graphical interface allows one to quickly browse a chain

of many variables and make publication quality plots, with control over binning, without

writing any scripts or codes. We describe installation instructions in Sec. 2 and usage in

Sec. 3. Deﬁnitions and conventions of all statistical quantities are provided in Appendix A.

2

Installation

The simplest method of installing Superplot is via the pip package manager.3 The
command

pip install superplot

should install Superplot and all dependencies. Note, however, that on some operating

systems, pip may not be able to build all dependencies. Thus dependencies may have to

be separately installed; see Sec. 2.1.

If installation via pip is problematic, clone the source code from git-hub:

1See http://gambit.hepforge.org.
2See http://www.ft.uam.es/personal/rruiz/superbayes/index.php?page=html/gui.htm.
3pip is included in Python beginning in version 2.7.9. If your version of Python does not include pip,

see https://pip.pypa.io/en/latest/installing/

1

git clone https://github.com/michaelhb/superplot.git

or download the source code from https://github.com/michaelhb/superplot/archive/

master.zip. You may need to refer to Sec. 2.1 for instructions on installing dependencies.

Once all dependencies are satisﬁed, Superplot can be installed and run from the source

directory:

python setup.py install
python ./superplot/super_gui.py

By default, conﬁguration ﬁles and example data ﬁles are installed to ~/.local/share/superplot
on Linux and $USER\AppData\Local\superplot on Windows.

2.1 Dependencies

Superplot requires some common Python modules. The most obscure dependencies can

be installed via pip:

pip install appdirs prettytable simpleyaml

but should be installed automatically by pip install superplot. Others dependen-

cies may require OS-speciﬁc installation, including matplotlib [18] version 1.4 or newer,
numpy [21], scipy [22] and pandas [23] from the SciPy stack4 and PyGTK.5 For e.g., Ubuntu
users, dependencies may be installed via

apt-get install git python-pip python-numpy python-scipy python-pandas

libfreetype6-dev python-gtk2-dev

pip install --upgrade --user matplotlib

Whereas for Windows users, dependencies may be installed by

1. Installing the Anaconda Python distribution from https://www.continuum.io/

downloads

2. Installing the PyGTK all-in-one bundle from http://ftp.acc.umu.se/pub/GNOME/

binaries/win32/pygtk/2.24

3. Upgrading matplotlib, pip install --force-reinstall --no-deps --upgrade

matplotlib

4. Finally, installing Superplot, pip install superplot

4See http://www.scipy.org/install.html.
5See http://www.pygtk.org/downloads.html.

2

3 Quickstart

(a) First, open a *.txt ﬁle from

(b) Second, optionally, open a *.info

MultiNest.

ﬁle that labels columns in the *.txt

ﬁle.

(c) Finally, select a plot, and click Make plot. in the graphical interface

in Superplot.

Figure 1: Selecting data ﬁles for Superplot.

The main component of Superplot is superplot gui — a graphical interface for mak-

ing plots from a chain. To start superplot gui, from any directory run either:

superplot_gui # Linux OR
python -m superplot.super_gui # Linux/Windows

The latter is advised for Windows as it may avoid problems with stdout. You will be

prompted to select a MultiNest chain ending in *.txt (Fig. 1a). Superplot includes an

example chain from SuperBayeS [7] located by default in

~/.local/share/superplot/example/SB_MO_log_allpost.txt # Linux
$USER\AppData\Local\superplot\example\SB_MO_log_allpost.txt # Windows

3

Select this ﬁle and click Open.6 You will be asked whether you wish to select an information
ﬁle (Fig. 1b). This optional ﬁle could contain labels and metadata associated with the chain

(see Sec. 3.4). Select SB MO log all.info and click Open. If you select No information

file..., the variables in the chain will be assigned numerical labels based on column

order.

After the information ﬁle is selected, the main graphical interface appears (Fig. 1c).

The left-hand side of the window contains controls for conﬁguring the plot, including:

• Type of plot (Plot type); see Fig. 2 for examples. The possibilities are:

One-dimensional plot One-dimensional marginalised pdf, p(x), and/or proﬁle

likelihood, L(x).

One-dimensional chi-squared plot One-dimensional chi-squared with an theo-

retical error band.

Two-dimensional posterior pdf, filled contours only Two-dimensional cred-

ible regions of posterior pdf, illustrated by ﬁlled contours.

Two-dimensional profile likelihood, filled contours only Two-dimensional

conﬁdence intervals, illustrated by ﬁlled contours.

Two-dimensional posterior pdf Two-dimensional posterior pdf, p(x, y), illus-

trated by shading on a two-dimensional plane.

Two-dimensional profile likelihood Two-dimensional proﬁle likelihood, L(x, y),

illustrated by shading on a two-dimensional plane.

Three-dimensional scatter plot Three-dimensional scatter plot — all samples

scattered on a two-dimensional plane, shaded by the value of a third variable.

• Variables you wish to plot (e.g., x-axis variable).
• The axis labels e.g., type the x-axis label in text-box below x-axis variable. Labels
may include a LATEX math environment ($...$) and are, by default, rendered with
pdflatex. Any pdflatex errors should be printed to the terminal.

• Whether a variable should be logged (e.g., Log x-data). If selected, data is logged

and then binned. This diﬀers from binning and plotting on a logarithmic scale.

• The number of bins per dimension and bin limits.
6You may wish to press Ctrl-H if you cannot see hidden ﬁles in the ﬁle selector.

4

• The limits for the x- and y-axis.
• Plot title, legend title and legend position.
• Selection of optional plot elements, e.g., the best-ﬁt point or posterior mean.

Once you have selected the plot you wish, click the Make plot button, located below the

plot options. The desired plot should appear in the central window, as in Fig. 1c. If no
plot appears, check whether any e.g., LATEX errors were printed to the terminal. If so, ﬁx
any malformed LATEX and click Make plot.

(a) One-dimensional plot

(b) Two-dimensional posterior

pdf, ﬁlled contours only

(c) Two-dimensional proﬁle likeli-

(d) Two-dimensional posterior pdf

hood, ﬁlled contours only

Figure 2: Examples of ﬁgures produced by Superplot from a publicly released chain from

SuperBayeS [7].

The controls for saving plots are located below the central window. The option Save

image creates a high-quality PDF version of the displayed plot, Save statistics in

5

110115120125130mh(GeV)0.000.250.500.751.001.25CMSSMHiggsmassBest-ﬁtpointPosteriorMeanPosteriorMedianPosteriorModePosteriorpdfProﬁlelikelihood2σcredibleregion1σcredibleregion2σconﬁdenceinterval1σconﬁdenceinterval08001600240032004000m0(GeV)0400800120016002000m1/2(GeV)CMSSMCredibleregionsBest-ﬁtpointPosteriorMeanPosteriorMode2σregion1σregion02004006008001000mχ01(GeV)0.000.040.080.120.160.20Ωχh22σregion1σregionCMSSMProﬁlelikelihoodBest-ﬁtpointPosteriorMeanPosteriorMode0.000.250.500.751.00PL015304560tanβ−5000−2500025005000A0(GeV)2σregion1σregion1σregionCMSSMPosteriorpdfBest-ﬁtpointPosteriorMean0.000.250.500.751.00PDFplot writes a text ﬁle containing summary statistics and metadata about the plot, and
Save pickle of plot writes a serialised copy of the matplotlib plot object.7 After
selecting the desired outputs, press the Save plot button and select a location on disk.

3.1 Custom plot options

Beyond the control panel in the graphical interface, the appearance of a plot can be cus-

tomised by editing conﬁguration ﬁles included in Superplot. If Superplot was installed

via pip, conﬁguration ﬁles are located in the user data directory. On Linux/Ubuntu, the
user data directory is ~/.local/share/superplot. On Windows, the default is $USER\
AppData\Local\superplot. If the source code was downloaded, they are included with the

code in superplot/config.yml and superplot/plotlib/styles. For further documen-
tation of the code itself, see the API.8

The yaml ﬁle config.yml contains “schemes” which control the sizes, colours, sym-

bols and labelling of individual plot elements, e.g., the symbol for the best-ﬁt point.

These are speciﬁed using matplotlib conventions — see the ﬁle header for further in-
formation. The styles/ directory contains a set of matplotlib style sheets.9 Op-
tions such as line thickness, grid lines and fonts can be ﬁne-tuned by editing these ﬁles.

The ﬁle default.mplstyle contains options which apply to all plots. There are also

style sheets speciﬁc to each plot type. The individual style sheets take precedence over

default.mplstyle, allowing plot-speciﬁc customisation.

3.2 Summary statistics for chain

Superplot also includes a command that generates a table of statistics for a chain. This

can be launched by running either:

superplot_summary # Linux OR
python -m superplot.summary # Linux/Windows

You should select a chain and an (optional) information ﬁle in the same manner as in

superplot gui. A table containing the label, best-ﬁt point, posterior mean and 1σ credible

region for every variable in the chain is printed to the terminal.

7See http://matplotlib.org/users/whats_new.html#figures-are-picklable. A pickle is a seri-
alised copy of the plot object which can be loaded in a separate Python session. This may be useful if a plot

needs to be customised in a manner not otherwise possible. For an example, see example/load pkl.py.

8See http://superplot.readthedocs.org.
9See http://matplotlib.org/users/style_sheets.html.

6

3.3 Use with programs other than MultiNest

Superplot reads data from the MultiNest text ﬁle (*.txt), which is a plain-text array

of ﬂoats separated by at least one space. The ﬁrst and second columns are the posterior
weight and −2 lnL or chi-squared of each sample, respectively. Subsequent columns are
parameter values associated with each sample. Superplot would work with any data in

this format. If you consider only frequentist statistics and calculate only a chi-squared for

each sample, the ﬁrst column could be a place-holder — the frequentist quantities could

still be plotted.

3.4 Information ﬁle

We inherited the format of an information ﬁle from getdist. The information ﬁle (*.info)

provides labels for the parameters in the chain, beginning with the third column (i.e.,
ignoring posterior weight and −2 lnL). The *.info ﬁle is optional. If provided, Superplot
automatically labels columns of the chain with the *.info ﬁle. The format of an entry in

the *.info ﬁle is e.g.,

lab1 = $m_0$ (GeV)

This would label the ﬁrst parameter (i.e., third column) “m0 (GeV)”. You do not have to
provide labels for all columns. The label may include a LATEX math environment ($...$)
and should not be enclosed in e.g., quotes. Each label should be on a new line. All other

text in the *.info ﬁle is ignored.

4 Summary and bug reporting

We detailed a new application, Superplot, for plotting a chain from e.g., MultiNest. The

application should be easy to install and use, and simplify the ﬁnal step of parameter

inference from a chain. To keep track of developments, report any bugs or ask for help,

please see https://github.com/michaelhb/superplot/issues.

A Statistical functions

All statistical quantities in Superplot are calculated numerically. With the exception

of the best-ﬁt point, an error of about half a bin width is introduced in all quantities by

binning. We advise that a user chooses the number of bins carefully, compromising between

7

unnecessarily discarding information by coarse binning and noisy, comb-like distributions.

Out of the box, Superplot includes options for plotting many Bayesian and frequentist

statistical quantities. By default, conﬁdence intervals and credible regions are calculated

at 1σ and 2σ signiﬁcances, i.e., for probabilities

β = 1 − α = Φ(z)

(1)

for z = 1 and z = 2, where Φ is the cdf for the standard normal distribution. This results
in α ≈ 0.32 and α ≈ 0.046. All statistical functions were tested against data drawn from
Gaussian distributions with known properties.

A.1 Bayesian

We brieﬂy describe the Bayesian statistical quantities in Superplot, including our con-

ventions and ordering rules. See e.g., Ref. [24] for further discussion. Typically, quantities

based upon the posterior pdf are not parameterisation invariant. We note only exceptions

to this rule.

Marginalised posterior pdf Deﬁned

p(x) =

p(x, y) =

(cid:90)
(cid:90)

p(x, y, z,··· ) dy dz d···
p(x, y, z,··· ) dz d··· ,

(2)

(3)

in the one- and two-dimensional cases, respectively. The pdf is calculated with a

weighted histogram of samples in a chain with user-deﬁned binning.

One-dimensional credible regions Deﬁned by a symmetric ordering rule, i.e., an equal

probability is contained in each tail:

(cid:90) ∞

(cid:90) xa
(cid:90) xb

−∞

p(x) dx =

p(x) dx =

xb

p(x) dx = 1 − α,

xa

1
2

α,

(4)

(5)

with a user-deﬁned probability α. This is invariant for monotonic transforma-

tions. One-dimensional credible regions are calculated by summing one-dimensional

marginalised pdf and basic linear interpolation.

Two-dimensional credible regions Deﬁned by an ordering rule which is such that the

bility, i.e., a credible region is the region R such that(cid:82)

credible region is the smallest region containing a given fraction of the total proba-
R dx dy is minimised subject

8

to the constraint that

(cid:90)

R

p(x, y) dx dy = 1 − α

(6)

with a user-deﬁned probability α. Two-dimensional credible regions are calculated

by ﬁnding the posterior density pcrit such that

(cid:90)

(cid:90)

(cid:104)x(cid:105) =

is satisﬁed.

Posterior mean Deﬁned

Posterior median Deﬁned such that

p(x, y) dx dy = 1 − α

p(x,y)≥pcrit

(cid:90) x(cid:48)

x · p(x) dx.

(cid:90) ∞

p(x) dx =

−∞

x(cid:48)

p(x) dx = 0.5.

(7)

(8)

(9)

This is invariant for monotonic transformations. The posterior median is calculated

in a similar manner to a one-dimensional credible region.

Posterior modes Parameter values (i.e., bin centres in marginalised pdf) such that p(x)

or p(x, y) is maximised. Note that the modes of p(x) and p(y) may not coincide with

the mode of p(x, y).

A.2 Frequentist

We brieﬂy describe the frequentist statistical quantities in Superplot. Quantities based

upon the proﬁle likelihood are parameterisation invariant. See e.g., Ref. [25] for further

discussion.

Proﬁle likelihood Deﬁned

L(x) = max
L(x, y) = max

y,z,... L(x, y, z,··· )
z,... L(x, y, z,··· ),

(10)

(11)

in the one- and two-dimensional cases, respectively. Proﬁle likelihood is calculated

by binning the chain and ﬁnding the greatest likelihood within each bin.

One-dimensional ∆χ2 Deﬁned

maxL(x, y, z,··· )
This may be chi-squared distributed by Wilks’ theorem [26].

∆χ2(x) ≡ −2 ln

L(x)

.

(12)

9

Conﬁdence intervals Deﬁned via Wilks’ theorem in the one-dimensional case as the

region such that

− 2 ln

L(x)

maxL(x, y, z,··· ) ≤ F

−1
χ2
1

(1 − α)

and in the two-dimensional case, as the region such that

(13)

(14)

− 2 ln

L(x, y)

maxL(x, y, z,··· ) ≤ F

−1
χ2
2

(1 − α)

where F

−1
χ2
n

is the inverse cdf for a chi-squared distribution with n degrees of freedom

and α is a user-deﬁned conﬁdence level. We calculate whether each bin is excluded.

Conﬁdence intervals are not contiguous.

Best-ﬁt point Deﬁned as the parameter value (i.e., not the bin centre) for the sample

for which the likelihood is maximised.

References

[1] J. Skilling, “Nested Sampling,” AIP Conference Proceedings 735 no. 1, (2004)

395–405.

[2] J. Skilling, “Nested sampling for general Bayesian computation,” Bayesian Anal. 1

no. 4, (12, 2006) 833–859.

[3] F. Feroz and M. P. Hobson, “Multimodal nested sampling: an eﬃcient and robust

alternative to MCMC methods for astronomical data analysis,” Mon. Not. Roy.
Astron. Soc. 384 (2008) 449, arXiv:0704.3704 [astro-ph].

[4] F. Feroz, M. P. Hobson, and M. Bridges, “MultiNest: an eﬃcient and robust

Bayesian inference tool for cosmology and particle physics,” Mon. Not. Roy. Astron.
Soc. 398 (2009) 1601–1614, arXiv:0809.3437 [astro-ph].

[5] F. Feroz, M. P. Hobson, E. Cameron, and A. N. Pettitt, “Importance Nested

Sampling and the MultiNest Algorithm,” arXiv:1306.2144 [astro-ph.IM].

[6] A. Fowlie, “CMSSM, naturalness and the “ﬁne-tuning price” of the Very Large
Hadron Collider,” Phys. Rev. D90 (2014) 015010, arXiv:1403.3407 [hep-ph].

[7] R. R. de Austri, R. Trotta, and L. Roszkowski, “A Markov chain Monte Carlo

analysis of the CMSSM,” JHEP 05 (2006) 002, arXiv:hep-ph/0602028 [hep-ph].

10

[8] K. J. de Vries et al., “The pMSSM10 after LHC Run 1,” Eur. Phys. J. C75 no. 9,

(2015) 422, arXiv:1504.03260 [hep-ph].

[9] A. Lewis and S. Bridle, “Cosmological parameters from CMB and other data: a

Monte-Carlo approach,” Phys. Rev. D66 (2002) 103511, astro-ph/0205436.

[10] A. Lewis, “Eﬃcient sampling of fast and slow cosmological parameters,” Phys. Rev.

D87 (2013) 103529, arXiv:1304.4473 [astro-ph.CO].

[11] J. Zuntz, M. Paterno, E. Jennings, D. Rudd, A. Manzotti, S. Dodelson, S. Bridle,

S. Sehrish, and J. Kowalkowski, “CosmoSIS: Modular Cosmological Parameter

Estimation,” arXiv:1409.3409 [astro-ph.CO].

[12] G. Aslanyan, “Cosmo++: An Object-Oriented C++ Library for Cosmology,”

Comput. Phys. Commun. 185 (2014) 3215–3227, arXiv:1312.4961

[astro-ph.IM].

[13] M. J. Mortonson, H. V. Peiris, and R. Easther, “Bayesian Analysis of Inﬂation:
Parameter Estimation for Single Field Models,” Phys. Rev. D83 (2011) 043505,

arXiv:1007.4205 [astro-ph.CO].

[14] R. Easther and H. V. Peiris, “Bayesian analysis of inﬂation. II. Model selection and

constraints on reheating,” Phys. Rev. D85 no. 10, (May, 2012) 103533,

arXiv:1112.0326 [astro-ph.CO].

[15] J. Norena, C. Wagner, L. Verde, H. V. Peiris, and R. Easther, “Bayesian Analysis of

Inﬂation III: Slow Roll Reconstruction Using Model Selection,” Phys. Rev. D86

(2012) 023505, arXiv:1202.0304 [astro-ph.CO].

[16] M. Olamaie, F. Feroz, K. J. B. Grainge, M. P. Hobson, J. S. Sanders, and R. D. E.

Saunders, “Bayes-X: a Bayesian inference tool for the analysis of X-ray observations
of galaxy clusters,” Mon. Not. Roy. Astron. Soc. 446 (2015) 1799–1819,

arXiv:1310.1885 [astro-ph.CO].

[17] J. Buchner, A. Georgakakis, K. Nandra, L. Hsu, C. Rangel, M. Brightman,

A. Merloni, M. Salvato, J. Donley, and D. Kocevski, “X-ray spectral modelling of

the AGN obscuring region in the CDFS: Bayesian model selection and catalogue,”
Astron. Astrophys. 564 (2014) A125, arXiv:1402.0004 [astro-ph.HE].

[18] J. D. Hunter, “Matplotlib: A 2D graphics environment,” Computing In Science &

Engineering 9 no. 3, (2007) 90–95.

11

[19] P. Scott, “Pippi - painless parsing, post-processing and plotting of posterior and

likelihood samples,” Eur. Phys. J. Plus 127 (2012) 138, arXiv:1206.2245

[physics.data-an].

[20] R. Brun and F. Rademakers, “ROOT: An object oriented data analysis framework,”

Nucl. Instrum. Meth. A389 (1997) 81–86.

[21] S. v. d. Walt, S. C. Colbert, and G. Varoquaux, “The numpy array: A structure for

eﬃcient numerical computation,” Computing in Science & Engineering 13 no. 2,

(2011) 22–30.

[22] E. Jones, T. Oliphant, P. Peterson, et al., “SciPy: Open source scientiﬁc tools for

Python,” 2001. http://www.scipy.org/.

[23] W. McKinney, “Data structures for statistical computing in Python,” in Proceedings

of the 9th Python in Science Conference, S. van der Walt and J. Millman, eds.,

pp. 51 – 56. 2010.

[24] P. Gregory, Bayesian Logical Data Analysis for the Physical Sciences. Cambridge

University Press, 2005.

[25] F. James, Statistical Methods in Experimental Physics. World Scientiﬁc, 2006.

[26] S. S. Wilks, “The large-sample distribution of the likelihood ratio for testing

composite hypotheses,” The Annals of Mathematical Statistics 9 no. 1, (1938) 60–62.

12

