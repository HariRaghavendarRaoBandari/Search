Distributed Model Predictive Control Using a Chain of Tubes

Bernardo Hernandez1,a and Paul Trodden2

6
1
0
2

 
r
a

M
7

 

 
 
]

Y
S
.
s
c
[
 
 

1
v
4
4
0
2
0

.

3
0
6
1
:
v
i
X
r
a

Abstract—A new distributed MPC algorithm for the regulation
of dynamically coupled subsystems is presented in this paper.
The current control action is computed via two robust controllers
working in a nested fashion. The inner controller builds a nominal
reference trajectory from a decentralized perspective. The outer
controller uses this information to take into account the effects
of the coupling and generate a distributed control action. The
tube-based approach to robustness is employed. A supplementary
constraint is included in the outer optimization problem to
provide recursive feasibility of the overall controller.

I. INTRODUCTION

The current developments in ﬁelds such as wireless com-
munication and actuation capabilities have led to an increase
in the amount of information available to improve the task
of controlling processes [1]. However, due to reasons such as
limited computing capabilities and prohibitive cost of commu-
nication, standard centralized approaches are, sometimes, not
well posed to take advantage of this additional information
[2]. Model predictive control (MPC) falls into the former.
MPC is a mature control technique with guaranteed constraint
satisfaction and closed loop stability [3], [4] (under proper
assumptions and design), yet its implementation may turn
infeasible for plants with a large number of inputs, given
that it has to solve an optimization problem each time instant.
Moreover, certain plants are naturally spread over a wide area,
or arranged in an array of clearly deﬁned subsystems, thus
centralized control may not be the most practical choice [5].
A natural solution to this problem is to split the plant into
smaller, easier to handle, subsystems and the synthesis of local
controllers. Depending on the type of plant being considered,
and as a result of the division scheme, the subsystems may
interact with each other directly through the dynamics of
the global system, or through shared constraints; many non-
centralized approaches have been presented to tackle these
different conﬁgurations [2], [5].

Subsystems subject to dynamic coupling are of particular
interest due to the the source of the coupling. In order
to provide any guarantee on the global system’s behaviour,
some sort of coordination between subsystems must exist. In
the context of linear time invariant (LTI) subsystems, both
types of distributed approaches, cooperative [6], [7] and non-
cooperative [8], [9], have been proposed. The latter ones are
characterized, within the MPC framework, by locally deﬁned

1 Bernardo Hernandez is a PhD student at the Dept. of Automatic Control
and Systems Engineering, The University of Shefﬁeld, Shefﬁeld, S1 4DW,
UK bahernandezvicente1@sheffield.ac.uk

2Paul Trodden is with the Dept. of Automatic Control and Sys-
tems Engineering, The University of Shefﬁeld, Shefﬁeld, S1 4DW, UK
p.trodden@sheffield.ac.uk

aBernardo Hernandez acknowledges doctoral scholarship from CONICYT

- PFCHA/Concurso para Beca de Doctorado en el Extranjero - 72150125.

cost functions that depend only on the particular subsystem
variables. However, the different communication schemes al-
low the agents to obtain information about the future plans of
its neighbours (and hence, the coupling), thus a more informed
choice of the current control action can be made. Known
robust techniques, such as tube MPC [10], have been used to
provide a globally feasible and stabilizing control solution to
this type of system. In [11], reference trajectories are deﬁned
for each subsystem and the deviations from them are seen as
a disturbance. Each subsystem is robustly controlled to reject
these disturbances, and also to bound their own deviation. The
same approach is extended to output tracking in [12], and to
continuous time systems in [13]. A similar scheme is presented
in [14], where the tube approach is implemented twice, in
series, for each subsystem.

In this paper, a new distributed non-cooperative MPC
scheme is proposed for the regulation of dynamically coupled
systems. Each time instant, the control action for each subsys-
tem is computed through a two-step robust controller. First, the
whole dynamic interaction between neighbouring subsystems
is regarded as an additive external disturbance, and a robust
controller based on the tube technique is implemented. The
optimal trajectories (state and input) arising from this problem
are regarded as reference trajectories, and shared between
neighbouring subsystems. An outer controller, also based on
the robust tube approach, is designed to take advantage of
this information and further reﬁne the current control action
for every subsystem. A supplementary constraint is enforced
on the outer optimal control problem to guarantee recursive
feasibility of the overall distributed controller and closed-loop
asymptotic stability of the origin. The structure of the outer
controller is similar to the one presented in [11], [13]. The
main difference is that the source of the reference trajectories
is the inner decentralized controller, which means that no
arbitrary sequence is needed at initialization and that the whole
reference is allowed to change each time step. This favours a
reduction in conservativeness and an increase in performance.
The inner-outer conﬁguration is similar to the one presented in
[14] in that the tube approach is applied twice to compute the
current control action by every agent. However in the scheme
proposed in this paper, the tubes are applied in parallel (the
control action of the outer controller is not a linear function of
the inner controller result). The additional constraint enforced
over the outer controller fulﬁls, essentially, the same role as
the consistency constraint in [15] or the reference tracking
constraints in [11], but it is constructed following invariance
requirements for feasibility.

The paper is organized as follows: Section II deﬁnes the
problem and preliminaries. Section III develops the proposed
distributed controller. Recursive feasibility of the approach is

analysed in Section IV and the and guidelines for design are
discussed in Section V. Section VI shows the behaviour of the
proposed approach through a numerical simulation.

Notation: At time t, ˆxi

k/t denotes the prediction of ˆxi at
a future time k within the horizon. The operators ⊕ and
⊖ denote the Minkowski sum and the Pontryagin difference
(respectively), as deﬁned in [3]. The zero vector and the
identity matrix in Rn are, respectively, 0n and In. ||x||2
Q is the
weighted norm of x. X◦ represents the interior of the set X.
The symbol ⊂ represent strict inclusion. The set Bcn (δ) ⊂ Rn
represents the ball of radius δ centred at cn. The super index
⊤ represents the transpose of a vector or matrix.

II. PROBLEM STATEMENT AND PRELIMINARIES

Consider the problem of regulating an LTI system for which

a discrete time state space model is known,

xt+1 = Axt + But

(1)

where x ∈ Rn is the state vector, u ∈ Rm is the input vector
and (A, B) are the state and input matrices of corresponding
dimension. In many cases, it is convenient to represent (1)
as a collection of M coupled local subsystems. Suppose

that (1) is arranged such that x = (cid:0)x1⊤, x2⊤, . . . , xM ⊤(cid:1)⊤

represents a suitable non-overlapping decomposition of the
state vector, and deﬁne M = {1, . . . , M }. The dynamics of
each subsystem may be represented as follows,

xi
t+1 = Aiixi

t + Biiui

t + Xj∈Ni(cid:16)Aijxj

t(cid:17)
t + Bij uj

xi
t ∈ Xi, ui

t ∈ Ui,

∀t ≥ 0

(2a)

(2b)

where xi ∈ Rni and ui ∈ Rmi are the subsystem state and
input vectors, and (Aij, Bij ) are blocks, of appropriate size,
derived from the global matrices (A, B). The set Ni points
to all the dynamic neighbours of subsystem i, i.e.:

Ni = {j ∈ M | [Aij Bij ] 6= 0}

(3)

Assumption 1 (Stabilizability). The pairs
(A, B) and
(Aii, Bii) are stabilizable. Furthermore, there exists a block di-
agonal matrix K = diag (K11, . . . , KMM ) such that A+BK
and AKii

ii = Aii + BiiKii are Schur ∀i ∈ M.

Assumption 2 (Properties of constraint sets). For all i ∈ M,
the set Xi is closed and convex, and the set Ui is compact and
convex; both contain the origin in their interior.

III. DISTRIBUTED CONTROL ALGORITHM

In this section, the distributed control algorithm is devel-
oped. At time t, the control action, for each subsystem, is
obtained through a chain of two robust controllers. The outer
controller employs the information produced by the inner one,
to improve performance while rejecting disturbances generated
by the dynamic coupling. Tube MPC – a robust control
technique designed to cope with bounded additive disturbances
– is employed for the inner and outer controllers. It solves
the regulation problem for a nominal undisturbed model of
the plant (subject to tightened constraints), while guaranteeing

that the state of the true plant remains inside a robust positive
invariant (RPI) set centred around the nominal trajectory.

A. Decentralized reference deﬁnition

The inner controller is built from a decentralized approach,
thus the whole dynamic interaction generated by the cou-
pling with neighbouring subsystems is treated as an external
disturbance, making tube MPC a suitable choice. The local
dynamics in (2a) can be restated as,

t+1 = Aiixi
xi
t ∈ Wi = Mj∈Ni

wi

t + wi
t

t + Biiui
(Aij Xj ⊕ Bij Uj) , ∀t ≥ 0

(4a)

(4b)

which allows for a nominal undisturbed model to be deﬁned:

t+1 = Aii ˆxi
ˆxi
t + Bii ˆui
t
t ∈ ˆXi ⊆ Xi ⊖ Zi,
ˆxi
∀t ≥ 0
t ∈ ˆUi ⊆ Ui ⊖ KT,iZi. ∀t ≥ 0
ˆui

(5a)
(5b)
(5c)

KT,i is any stabilizing gain for the pair (Aii, Bii), guaranteed
to exists in view of Assumption 1. The set Zi is deﬁned as
t, when the
an RPI set [16] for the dynamics of zi
following disturbance rejection control policy is applied,

t = xi

t − ˆxi

ui
t = ˆui

t + KT,i(cid:0)xi

t − ˆxi
t(cid:1) .

(6)

At time t, the optimal nominal control action ˆui
from the optimization problem PN (xi

t):

t is obtained

min
[t:t+N −1]/t

ˆxi
t/t,ˆui

VN (cid:16)ˆxi

[t:t+N −1]/t, ˆui

[t:t+N −1]/t(cid:17)

subject to the dynamics in (5a) and:

xi
t − ˆxi
t/t ∈ Zi,
k/t ∈ ˆXi, ˆui
ˆxi
t+N/t ∈ ˆXF
ˆxi
i .

k/t ∈ ˆUi,

k = t, . . . , t + N − 1

(7)

(8a)

(8b)

(8c)

The solution of (7)–(8) is a pair of optimal (nominal) input and

state trajectories (cid:16)ˆxi∗

[t:t+N/t], ˆui∗

[t:t+N −1/t](cid:17). Constraints (8a)–

(8b) guarantee constraint satisfaction for the true plant in view
of the invariance of the error dynamics, while the terminal
constraint (8c) and the cost VN (·) are designed to guarantee
stability of the origin for the nominal system [3].

KT ,i
is positive invariant for the closed-loop system A
ii

Assumption 3 (Invariance of the inner terminal set). The set
ˆXF
i
Deﬁne the feasibility region of (7) under (8b)–(8c) as ˆX i
N ,
t ∈ ˆX i
if xi
N ⊕ Zi, and (6) is used to compute the true control
action, then a feasible solution exists at time t + 1, and the
optimization is recursively feasible. However, in the nested
approach presented here, (6) is not used to compute the true
control action. Instead, the optimized trajectories resulting
from the inner controller are broadcast amongst neighbours.

.

B. Distributed Tube MPC

The outer controller regards the decentralized optimized
trajectories as references of what
the subsystems will do,
which allows to reduce the uncertainty about the dynamic
coupling. In the following, the optimality super-index (∗) is
omitted. Deﬁne,

The structure of the optimization problem (13)–(14) differs
from a standard tube MPC only in the addition of constraint
(14d). This supplementary constraint has two purposes: guar-
antee recursive feasibility of the overall controller, and provide
a comprehensive way for computing the set Vi. The design of
the set Hi is discussed later.

(9a)

C. Control Algorithm

The proposed controller is summarized in Algorithm 1.

t/t + Bij ˆuj

t/t(cid:17)

di

vi

t/t = Xj∈Ni(cid:16)Aij ˆxj
t/t = Xj∈Ni(cid:16)Aij (cid:16)xj

where di
as,

t/t is known and vi

t − ˆxj

t/t − ˆuj

t/t(cid:17)(cid:17) (9b)
t/t(cid:17) + Bij (cid:16)uj
t/t ∈ Vi. This allows to recast (4a)

xi
t+1 = Aiixi

t + Biiui

t + di

t/t + vi

t/t

(10)

where vi
t/t is a bounded additive disturbance that represents the
deviation of the true plant trajectory, from the decentralized
nominal optimal trajectory. The objective of the outer con-
troller is to reduce the uncertainty about the dynamic coupling,
therefore the following assumption is in order:

Assumption 4 (Uncertainty reduction). Vi ⊂ W◦

i , ∀i ∈ M

The outer controller is also synthesized as a tube MPC. In

this case, the nominal model takes the following form,

t/t,

(11a)

t + di

t + Bii ˆˆui
t+1 = Aii ˆˆxi
ˆˆxi
k/t ∈ ˆˆXi ⊆ Xi ⊖ Si,
ˆˆxi
k/t ∈ ˆˆUi ⊆ Ui ⊖ ˆKiSi,
ˆˆui
where ˆKi
is any stabilizing gain for the pair (Aii, Bii),
guaranteed to exist in view of Assumption 1. The set Si is
t, when
deﬁned as an RPI set for the dynamics of si
the following disturbance rejection control law is applied,

t − ˆˆxi

t = xi

∀t ≥ 0

∀t ≥ 0

(11b)

(11c)

t = ˆˆui
ui

t + ˆKi(cid:16)xi

t(cid:17) .
t − ˆˆxi

(12)

At time t, the optimal nominal control action ˆˆui

t is obtained

from the optimization problem P2

min

ˆˆxi
t/t,ˆˆui

[t:t+N −1]/t

V 2

N (cid:16)ˆˆxi

[t:t+N −1]/t(cid:17)

(13)

subject to the dynamics in (11a) and:

t − ˆˆxi
xi
t/t ∈ Si
k/t ∈ ˆˆXi, ˆˆui
ˆˆxi
t+N/t ∈ ˆˆXF
ˆˆxi
i
k/t ∈ Hi.

ˆˆxi
k/t − ˆxi

(14a)
k/t ∈ ˆˆUi, k = t, . . . , t + N − 1 (14b)
(14c)

k = t + 1, . . . , t + N (14d)

where the terminal constraint sets must fulﬁl the following
assumption:

Assumption 5 (Invariance of the outer terminal set). The set
is a constraint admissible positive invariant

ˆˆXF = QM
set for the closed loop dynamics (cid:16)A + B ˆK(cid:17).

ˆˆXF
i

i=1

N (xi

t):
[t:t+N −1]/t, ˆˆui

Algorithm 1

if t = λT then

1: λ = 0
2: Measure xt
3: for i ∈ M do
4:
5:
6:
7:
8:

else
ˆxi

ˆui

9:
end if
10:
11: end for
12: Broadcast

Solve (7) subject to (8).
λ = λ + 1

[t:t+N −1]/t = hˆxi
[t:t+N −1]/t = hˆui

KT ,i
ˆxi
[t:t+N −1]/t−1 A
ii
[t:t+N −2]/t−1 KT,i ˆxi

t+N −1/t−1i
t+N −1/t−1i

the optimal solution provided by the inner

controller (cid:16)ˆxi

[t:t+N/t], ˆui

[t:t+N −1/t](cid:17) amongst neighbours.

13: for i ∈ M do
14:

15:

Solve (13) subject to (14).
Compute ui
plant.
16: end for
17: set t = t + 1 and go to step 2.

t/t + ˆKi(cid:16)xi

t = ˆˆui

t − ˆˆxi

t/t(cid:17) and apply to true

Steps 4–9 of Algorithm 1 deﬁne how the reference trajecto-
ries are updated. Each T time instants, the optimization (7)–
(8) is solved and the trajectories are updated in its whole. At
any other time instant, the reference trajectories are updated
making use of the local terminal controller deﬁned by KT,i.

IV. FEASIBILITY OF THE DISTRIBUTED CONTROLLER
This section analyses the recursive feasibility of the dis-
tributed controller through the design of the sets Hi. The
following results consider the controllers as they have been
presented up to know, in their most general form. A set of
simple design choices are presented in Section V.

A. Backwards recursive feasibility

Satisfaction of the RPI constraint (8a) guarantees zi

however, the control policy in use is (12) (not (6)) hence,

t/t ∈ Zi

t+1/t = Aiizi
zi

t/t + Bii ˆKisi

t/t + wi

t/t

(15)

which is not necessarily inside Zi. It follows then, that recur-
sive feasibility of the inner nominal problem could be broken.
Constraint (14d), called hereafter the backwards recursive
feasibility (BRF) constraint, is designed to account for this
effect. Consider the following result.

Theorem 1 (RPI sets inclusion). If Assumption 4 holds, then

there exists a pair of linear gains (cid:16)KT,i, ˆKi(cid:17) such that Si ⊂
Z◦
i .
Proof. The proof is omitted for brevity.

(cid:4)

In practice, theorem 1 allows for the existence of a positive
(δi) ⊆ Zi. Suppose from now on

scalar δi such that Si ⊕ B0ni
Hi ⊆ B0ni

(δi), then the following is easily derived:

(cid:16)ˆˆxi
t+1/t − ˆxi

t+1/t(cid:17) ∈ Hi

=⇒ zi

t+1/t ∈ Si ⊕ Hi ⊆ Zi

(16a)

(16b)

Hence, a proper selection of the linear gains, such that Si ⊂
Z◦
i , guarantees BRF.
B. Recursive feasibility

t ∈ ˆˆX i

Deﬁne the feasibility region of (13) under (14b)–(14c) as
ˆˆX i
N ⊕ Si, then a feasible solution exists at
N , then if xi
time t + 1, and the optimization is recursively feasible. To
provide a guarantee of recursive feasibility when the BRF
constraint (14d) is enforced, deﬁne ei
t and consider
the following design assumption,

t = ˆˆxi

t − ˆxi

Assumption 6 (Hi design condition). The sets Hi are designed
such that,

(cid:16)Aii + Bii ˆKi(cid:17) Hi ⊕(cid:16)Bii(cid:16) ˆKi − KT,i(cid:17) ˆˆXF

i (cid:17) ⊕ DF

i ⊆ Hi

DF

i = Mj∈Ni

(Aij + Bij KT,i) ˆXF
j

(17a)

(17b)

Theorem 2 (Recursive feasibility). If Assumptions 3, 5 and 6
hold, and a feasible solution exists for problems (7)–(8) and
(13)–(14) at time t, then a feasible solution exists, for both
optimization problems, at time t + 1.

Proof. The proof is omitted for brevity.

(cid:4)

C. Global feasibility

Up to this point, the recursive feasibility feature has been
addressed separately for both optimization problems. However,
it is important to note that constraint (14d) is parametrised by
the result of the inner optimization, hence the overall feasibility
region of the distributed controller could be small. To address
this issue, consider the following result,

Theorem 3 (Global recursive feasibility). If constraint (8a) is
replaced by,

t − ˆxi
xi

t/t ∈ Si ⊕ Hi

and the set DF
i

in Assumption 6 is replaced by,

Di = Mj∈Ni(cid:16)Aij ˆXj + Bij ˆUj(cid:17)

(18)

(19)

then a feasible solution of the optimization problem (7)–(8) at
time t, implies that,

ˆˆui
k/t = ˆui

k/t+ ˆKi(cid:16)ˆˆxi

k/t − ˆxi

k/t(cid:17) ,

k = t, . . . , t+N −1 (20)

is a feasible solution for the problem (13)–(14) at time t.

Proof. The proof is omitted for brevity.

(cid:4)

D. Disturbance computation

The second purpose of the additional constraint (14d) is to
provide a comprehensive way of computing the set Vi. To
deﬁne Vi it is necessary to bound the deviation between the
reference and true trajectories for both, state and input (9b).
According to (16), satisfaction of the RBF constraint (14d)
already bounds the state deviation to lie inside Zi throughout
the prediction horizon.

xi
k/t − ˆxi

k/t ∈ Zi

Now let the RBF constraint be restated as,

ei
k/t ∈ Hi,

k = t + 1, . . . , t + N

(21)

(22)

and deﬁne the dynamics of the error between both nominal
trajectories (throughout the horizon) as follows:

ei
k+1/t = Aiiei

k/t + Bii(cid:16)ˆˆui

k/t − ˆui

k/t(cid:17) + di

k/t

(23)

clearly then, satisfaction of the RBF constraint (14d) implies

k/t(cid:17), which in
an invariance inducing behaviour of (cid:16)ˆˆui
k/t(cid:17) must be bounded. Denominate
turn means that (cid:16)ˆˆui
the set that bounds the input deviation as ˆLi, it follows that,

k/t − ˆui

k/t − ˆui

(cid:16)ˆˆui
k/t − ˆui
=⇒ (cid:16)ui
k/t − ˆui

k/t(cid:17) ∈ ˆLi
k/t(cid:17) ∈ ˆKiSi ⊕ ˆLi ⊆ Li

(24a)

(24b)

The speciﬁc computation of the set ˆLi is out of the scope of
this paper, hence the deﬁnition of the auxiliary set Li. In view
of (21) and (24b), the disturbance set for the outer controller
can be deﬁned as,

Vi = Mj∈Ni

(Aij Zj + Bij Lj)

(25)

V. CONTROLLER DESIGN

Constraint (14d) adds complexity in the construction of the
controllers. However, a simple approach can be taken in the
selection of the key design parameters.

A. Linear gains for recursive feasibility

Suppose that Assumption 4 is fulﬁlled by the trivial choice,
¯ˆUi (where ¯ˆUi is a linear map of the set ˆUi by the
Li = Ui +
transformation matrix −Ini). Clearly then, setting ˆKi = KT,i
guarantees Si ⊂ Z◦
i . The trivial choice of the linear gains also
shortens (17a) to,

(cid:16)Aii + Bii ˆKi(cid:17) Hi ⊕ DF
which means that the set Hi ⊂ Zi ∩ Sc
i must be computed as
an RPI set for the closed loop dynamics (cid:16)Aii + Bii ˆKi(cid:17) under

the effect of a disturbance contained in DF
i .

i ⊆ Hi

(26)

B. Cost function for stability

A standard quadratic cost function with terminal state

penalty is chosen for the outer controller,

V 2

t+N −1

N (cid:16)ˆˆxi
Xk=t

[t:t+N ]/t, ˆˆui

(cid:18)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)

ˆˆxi

k/t(cid:12)(cid:12)(cid:12)

(cid:12)(cid:12)(cid:12)

2

[t:t+N −1]/t(cid:17) =
k/t(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)
+(cid:12)(cid:12)(cid:12)

(cid:12)(cid:12)(cid:12)

ˆˆui

Qi

2

Ri(cid:19) +(cid:12)(cid:12)(cid:12)

(cid:12)(cid:12)(cid:12)

ˆˆxi

t+N/t(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)

(27)

(28)

2

Pi

The weight matrices Qi, Ri and Pi are built following the
procedure depicted in [11] to guarantee global stability. For
comparison purposes and to facilitate the design, the same
cost function is used for the inner controller.

Theorem 4 (Asymptotic stability of the closed-loop system).
If the cost functions VN and V 2
N are design as in (27), and
the terminal sets following Assumptions 2 and 3, then the set
A := {0ni} × {0ni } × {0ni} is asymptotically stable for the
constrained composite system,
xi
t+1 = Aiixi
ˆxi
t+1 = Aii ˆxi
t+1 = Aii ˆˆxi
ˆˆxi

t + Biiui
t + Bii ˆui
t
t + Bii ˆˆui
t + di
t

t + wi
t

under the closed-loop control laws deﬁned by (12), (7)–(8),
and (13)–(14) respectively.

Proof. The proof is omitted for brevity.

(cid:4)

VI. SIMULATION RESULTS

A slightly modiﬁed version of the four truck system de-
picted in [14] is used in this section to show the behaviour
of the proposed control algorithm. The plant consists of four
trucks represented by point masses and dynamically coupled
through springs and dampers; each one is linked only to
its immediate neighbours. The control objective is to steer
the whole system towards the origin. Note that this plant is
marginally stable when uncontrolled.

The global system is composed of eight state variables
and 4 input variables. A smaller subsystem is associated to
each truck, M = 4, with two state variables representing its
horizontal position and velocity (w.r.t. an arbitrary equilibrium
point) and one input variable, representing an horizontal force
applied to the truck. The masses are: m1 = 3, m2 = 2,
m3 = 3, m4 = 6; the spring constants are k12 = 7.5,
k23 = 0.75, k34 = 1; the damper coefﬁcients are c12 = 4,
c23 = 0.25, c34 = 0.3. The coupling between trucks 1 and 2
is purposely designed higher than the rest, in order to increase
the size of W1,2 and show the behaviour of the proposed
approach under high and low couplings. Each truck is subject
to the following state and input constraints:

(cid:20)−2
−8(cid:21) ≤ xi ≤ (cid:20)2
Xi = (cid:26)xi (cid:12)(cid:12)(cid:12)
Ui = (cid:8)ui | − 4 ≤ ui ≤ 4(cid:9) ,

8(cid:21)(cid:27) ,

i = 1, 2, 3, 4

i = 1, 2, 3, 4

(29a)

(29b)

The distributed controller is designed following the ap-
proach described in Sections IV and V. A sampling time of
Ts = 0.1 [s] is used to discretize the system. For brevity, the

y
t
i
c
o
l
e
v

k
c
u
r
T

t
u
p
n
I

8

6

4

2

0

−2

−4

−6

x1
x2
x3
x4

−8

−2 −1.5 −1 −0.5

0

0.5

1

1.5

2

Truck position

Fig. 1: State trajectory of the global plant x.

4

2

0

−2

−4

0

u1
u2
u3
u4

0.4

0.8

1.2

1.6

2

Time t

Fig. 2: Input sequence of the global plant u.

values of each design parameter are not depicted in this paper.
The discretised system is initialised at a point that is feasible
but close to the feasibility boundaries,

x1

0 = (cid:20) 1.8

−2.0(cid:21) , x2

0 = (cid:20)0.5

7.1(cid:21) x3

0 = (cid:20)−0.9

−7.0(cid:21) , x4

0 = (cid:20)−1.8

2.0(cid:21) (30)

Figure 1 shows the state trajectory followed by all trucks
when the control action is compute using Algorithm 1. Figure
2 depicts the input signal applied to each truck (following
the disturbance rejection policy (12)). As expected, starting
from a point inside the region of attraction of the controller:
(i) the optimization is always feasible, (ii) global constraint
satisfaction is attained, and (iii) the global state converges
asymptotically to the origin.

Algorithm 1 is compared to three different approaches: (i) a
standard centralized MPC (CMPC), (ii) a decentralized scheme
(TMPC) where all the coupling is treated as a disturbance
(which amounts to use (6) as a control policy), and (iii) a non-
robust decentralized approach where the dynamic coupling is
entirely neglected (DeMPC). All four control architectures are
implemented using the same controller parameters (weight ma-
trices in the cost function, and local linear controllers). Figures
3 shows the true state trajectory of the ﬁrst truck under the
action of all control schemes. The path followed by the truck
under Algorithm 1 lies closer to the CMPC trajectory than the
result provided by the TMPC. This enhanced performance is
expected, as Algorithm 1 makes use of information that the
TMPC does not posses. Figure 4 shows the true trajectory of
truck number 3. Note how all distributed approaches have a

and the outer one uses this information (shared amongst neigh-
bours) to reduce uncertainty about the dynamical coupling and
improve performance. Under standard assumptions in the MPC
context, and trivial design choices, the controller proposed in
Algorithm 1 has recursive feasibility and provides a guarantee
of asymptotic stability of the origin and robust constraint
satisfaction. Future work will include comprehensive approach
for the computation of the input tracking set in (24) and the
inclusion of coupled constraints.

REFERENCES

[1] B. E. Ydstie, “New vistas for process control: Integrating physics and
communication networks,” AIChE J., vol. 48, no. 3, pp. 422–426, 2002.
[2] P. D. Christoﬁdes, R. Scattolini, D. Muñoz de la Peña, and J. Liu,
“Distributed model predictive control: A tutorial review and future
research directions,” Comput. Chem. Eng., vol. 51, pp. 21–41, apr 2013.
[3] J. B. Rawlings and D. Q. Mayne, Model Predictive Control: Theory and

Design, electronic ed. Madison, Wisconsin: Nob Hill, 2014.

[4] D. Q. Mayne, “Model predictive control: Recent developments and
future promise,” Automatica, vol. 50, no. 12, pp. 2967–2986, nov 2014.
[5] R. Scattolini, “Architectures for distributed and hierarchical Model
Predictive Control - A review,” J. Process. Contr., vol. 19, no. 5, pp.
723–731, may 2009.

[6] B. T. Stewart, A. N. Venkat, J. B. Rawlings, S. J. Wright, and G. Pannoc-
chia, “Cooperative distributed model predictive control,” Syst. Control
Lett., vol. 59, no. 8, pp. 460–469, aug 2010.

[7] A. N. Venkat, J. B. Rawlings, and S. J. Wright, “Implementable
distributed model predictive control with guaranteed performance prop-
erties,” in Proc. 2006 American Control Conf. Minneapolis, MN: IEEE,
2006, pp. 613–618.

[8] C. Conte, M. N. Zeilinger, M. Morari, and C. N. Jones, “Robust
Distributed Model Predictive Control of Linear Systems,” in Proc. 2013
European Control Conf. Zürich: IEEE, 2013, pp. 2764–2769.

[9] Z. Wang and C. J. Ong, “Distributed MPC of constrained linear systems
with online decoupling of the terminal constraint,” Syst. Control Lett.,
vol. 88, pp. 14–23, 2016.

[10] D. Q. Mayne, M. M. Seron, and S. V. Rakovi´c, “Robust model predic-
tive control of constrained linear systems with bounded disturbances,”
Automatica, vol. 41, no. 2, pp. 219–224, 2005.

[11] M. Farina and R. Scattolini, “Distributed predictive control: A non-
cooperative algorithm with neighbor-to-neighbor communication for
linear systems,” Automatica, vol. 48, no. 6, pp. 1088–1096, jun 2012.
[12] M. Farina, G. Betti, L. Giulioni, and R. Scattolini, “An Approach to
Distributed Predictive Control for Tracking–Theory and Applications,”
IEEE T. Contr. Syst. T., vol. 22, no. 4, pp. 1558–1566, 2014.

[13] M. Farina, G. Betti, and R. Scattolini, “Distributed predictive control of
continuous-time systems,” Syst. Control Lett., vol. 74, pp. 32–40, 2014.
[14] S. Riverso and G. Ferrari-Trecate, “Tube-based distributed control of
linear constrained systems,” Automatica, vol. 48, no. 11, pp. 2860–2865,
nov 2012.

[15] W. B. Dunbar, “Distributed Receding Horizon Control of Dynamically
Coupled Nonlinear Systems,” IEEE T. Automat. Contr., vol. 52, no. 7,
pp. 1249–1263, jul 2007.

[16] I. Kolmanovsky and E. G. Gilbert, “Theory and Computation of Dis-
turbance Invariant Sets for Discrete-Time Linear Systems,” Math. Probl.
Eng., vol. 4, no. 4, pp. 317 – 367, 1988.

TABLE I: Cost comparison between different controllers.

Controller

Global plant Truck i = 1 Truck i = 3

TMPC
DeMPC

Algorithm 1

CMPC

6.3637
6.3042
6.2798
6.2472

4.7977
4.7702
4.7509
4.7215

0.0600
0.0600
0.0600
0.0600

lower impact over the third truck. This behaviour is expected
due to the weak coupling between truck 3 and its neighbours.

1

0

−1

−2

−3

−4

−5

y
t
i
c
o
l
e
v

k
c
u
r
T

DeMPC

TMPC

Algorithm 1

CMPC

−6

−0.5

0

0.5

1

1.5

2

Truck position

Fig. 3: State trajectory of truck 1: x1

t=0, x1

t=50.

6

4

2

0

−2

−4

−6

y
t
i
c
o
l
e
v

k
c
u
r
T

DeMPC

TMPC

Algorithm 1

CMPC

−8

−1.2

−1

−0.8

−0.6

−0.4

−0.2

0

0.2

Truck position

Fig. 4: State trajectory of truck 3: x3

t=0, x3

t=50.

Table I shows the aggregated cost of the true trajectories
followed by the trucks after 50 time instants. TMPC shows the
higher cost (for the global plant and all independent trucks),
which is expected given its unnecessary conservativeness. The
costs obtained for truck 3 conﬁrm what is shown in ﬁgure 3,
that the distributed approaches have a small impact when the
coupling between neighbouring subsystems is weak. Truck 1
on the other hand, given its stronger coupling with truck 2,
beneﬁts more from the distributed framework. Algorithm 1
performs closer to the centralized controller than any of the
other approaches.

VII. CONCLUSIONS AND FUTURE WORK

In this paper, a new approach to the problem of distributed
control of dynamically coupled system has been devised. Each
time step, the optimal control action is obtained, for each agent,
through a chain of two robust controllers. The inner controller
deﬁnes a reference trajectory from a decentralized framework,

