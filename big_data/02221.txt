6
1
0
2

 
r
a

M
7

 

 
 
]

.

R
P
h
t
a
m

[
 
 

1
v
1
2
2
2
0

.

3
0
6
1
:
v
i
X
r
a

Monotonicity and complete monotonicity

for continuous-time Markov chains

Monotonie et monotonie complète

des chaînes de Markov à temps continu

Paolo Dai Pra a, Pierre-Yves Louis b, Ida Minelli a

aDipartimento di Matematica Pura e Applicata, Università di Padova, Via Belzoni 7, 35131 Padova, Italy

bInstitut für Mathematik, Potsdam Universität, Am neuen Palais,10 – Sans Souci, D-14 415 Potsdam, Germany

http://www.sciencedirect.com/science/article/pii/S1631073X06001646

Post-print of Comptes Rendus Mathematique,

Volume 342, Issue 12, 15 June 2006, pp. 965-970, ISSN 1631-073X

doi:10.1016/j.crma.2006.04.007

Creative Commons Attribution Non-Commercial No Derivatives License

Abstract

We analyze the notions of monotonicity and complete monotonicity for Markov Chains in continuous-time, taking
values in a ﬁnite partially ordered set. Similarly to what happens in discrete-time, the two notions are not equiv-
alent. However, we show that there are partially ordered sets for which monotonicity and complete monotonicity
coincide in continuous time but not in discrete-time. To cite this article: P. Dai Pra et al., C. R. Acad. Sci. Paris,
Ser. I 342 (2006).

Résumé

Nous étudions les notions de monotonie et de monotonie complète pour les processus de Markov (ou chaînes de
Markov à temps continu) prenant leurs valeurs dans un espace partiellement ordonné. Ces deux notions ne sont
pas équivalentes, comme c’est le cas lorsque le temps est discret. Cependant, nous établissons que pour certains
ensembles partiellement ordonnés, l’équivalence a lieu en temps continu bien que n’étant pas vraie en temps
discret. Pour citer cet article :P. Dai Pra et al., C. R. Acad. Sci. Paris, Ser. I 342 (2006)

Email addresses: daipra@math.unipd.it (Paolo Dai Pra), louis@math.uni-potsdam.de (Pierre-Yves Louis),

minelli@math.unipd.it (Ida Minelli).

Preprint submitted to Elsevier Science

2006

Version française abrégée

L’utilisation des chaînes de Markov dans le cadre des algorithmes MCMC soulève de nombreuses ques-
tions au sein desquelles la monotonie joue un rôle important. Deux notions de monotonie sont considérées
pour les chaînes de Markov à valeurs dans un espace partiellement ordonné (S, <) (poset selon la termi-
nologie anglaise). Nous supposons S ﬁni et les chaînes (resp. processus) de Markov homogènes en temps.
Dans la déﬁnition 1.1 nous reformulons la notion de monotonie, équivalente à la déﬁnition usuelle via
la propriété de stabilité des fonctions croissantes f sous l’action de l’opérateur de transition Ttf (y) :=
Px∈S f (x)Pt(x, y).
Pour diﬀérentes applications et en particulier à des ﬁns de simulation, une notion plus forte, dite de
monotonie complète a été introduite dans la Déﬁnition 1.2. En d’autres termes, cette monotonie complète
signiﬁe que l’on peut coupler simultanément tous les processus partant de toutes les conditions initiales
possibles, en préservant l’ordre entre ces processus. Cette propriété s’avère essentielle pour l’utilisation
de l’algorithme de Propp & Wilson (cf. [7]).

Aucune méthode générale n’existe pour caractériser simplement la monotonie complète à partir des
probabilités de transition ou du générateur inﬁnitésimal. De manière évidente, pour une chaîne (resp. pro-
cessus ) de Markov donnée à valeurs dans S, la monotonie complète implique la monotonie. La question
est alors de caractériser les posets S pour lesquels l’implication réciproque est vraie pour tout processus.
Pour les chaînes de Markov, i.e. lorsque le temps est discret, ce problème a été résolu dans [3] (cf. Theo-
rem 1.3 de la section 1). Dans cette note nous considérons cette question pour des processus de Markov
(ou chaînes de Markov à temps continu) réguliers.

Soient L = (Lx,y)x,y∈S le générateur inﬁnitésimal d’un processus de Markov régulier et

S2 := S × S \ {(x, x) : x ∈ S}. Le générateur L peut être identiﬁé à un élément du cône (R+)S2 .

Notre technique principale consiste à caractériser l’ensemble des générateurs monotones Gmon et celui

des générateurs complètement monotones Gc.mon comme des cônes de (R+)S2.

La monotonie d’un générateur L est reformulée de manière géométrique (2) dans la proposition 2.2
en fonction des vecteurs W Γ,x,y ∈ RS2 (déﬁnis par (1)) où x, y ∈ S, Γ up-set (cf. Déﬁnition 2.1). La
représentation (2) du cône Gmon comme intersection de demi-espaces est appelée H-représentation (cf. [4]).
Dans la proposition 2.3 la monotonie complète d’un générateur L est caractérisée par sa décomposi-
tion (4) en tant que combinaison linéraire à coeﬃcients positifs des vecteurs If ∈ (R+)S2 déﬁnis en (3)
où f ∈ M, i.e. où f est une fonction croissante de S dans S. La représentation (4) du cône Gc.mon via les
rayons extrémaux If est appelée V-représentation.

Puisque, pour toute fonction f croissante, Γ up-set, x, y ∈ S, on a hIf , W Γ,x,yi ≥ 0, on a bien l’inclusion
Gc.mon ⊆ Gmon. Il apparaît dans un premier temps (Proposition 2.4) que si l’équivalence entre les
deux notions de monotonie a lieu pour toute chaîne de Markov à valeurs dans un poset S, alors cette
équivalence demeure pour le poset S lorsque l’on considère des processus à temps continu. La réciproque
s’avère cependant fausse comme les résultats ci-après le prouve.

Nous donnons la liste complète des posets d’au plus cinq élements pour lesquels l’équivalence est fausse.
Nous n’avons malheureusement pas réussi à caractériser tous les posets pour lesquels l’équivalence entre
les deux notions de monotonie est vériﬁée, i.e. pour lesquels Gc.mon = Gmon a lieu. Nous prouvons :

Proposition 3.1 Les seuls posets S avec ♯S ≤ 5 tels que les deux notions de monotonie ne sont pas
équivalentes sont ceux dont le diagramme de Hasse (cf. déﬁnition in section 2 [3], p. 943) est représenté
dans la ﬁgure 1.

En particulier, cela signiﬁe que Gmon = Gc.mon pour les deux posets importants de cardinal quatre, à
savoir le diamant et le noeud-papillon, dont les diagrammes de Hasse sont respectivement, dans la ﬁgure 1,
S1 et S4 sans l’élément w. Remarquons que l’équivalence est fausse pour les chaînes de Markov à valeurs

2

dans ces deux posets (cf. les exemples 1.1 et 4.5 de [3]).

Bien plus, nous établissons la Proposition suivante qui se fonde sur une technique permettant de
« relever » les générateurs monotones non complétement monotones à valeurs dans un poset S′ (par
exemple de la ﬁgure 1) en un générateur monotone non complétement monotone à valeurs dans un
poset S contenant S′.

Proposition 3.3 Si un poset S admet comme sous-poset (cf. Déﬁnition 3.2) un poset S′ dont le
diagramme de Hasse est représenté dans les ﬁgures 1 et 2, alors les deux notions de monotonie ne sont
pas équivalentes sur S.

Grâce à ce résultat et à des calculs directs, nous établissons également une liste exhaustive des posets
de cardinal six où l’équivalence n’est pas vériﬁée. Nous renvoyons à la publication [2] pour plus de détails.
La ﬁgure 2 donne les exemples caractéristiques de cardinal six pour lesquels l’équivalence est fausse.

1. Introduction

The use of Markov chains in simulation has raised a number of questions concerning qualitative and
quantitative features of random processes, in particular in connection with mixing properties. Among the
features that are useful in the analysis of eﬀectiveness of Markov Chain Monte Carlo (MCMC) algorithms,
a relevant role is played by monotonicity. Two notions of monotonicity have been proposed, for Markov
chains taking values in a partially ordered set S (poset from now on). To avoid measurability issues, that
are not relevant for our purposes, we shall always assume S to be ﬁnite. Moreover, all Markov chains are
implicitely assumed to be time-homogeneous.
Deﬁnition 1.1 A Markov chain (ηt), t ∈ R+ or t ∈ Z+, on the poset S, with transition probabilities
Pt(x, y) := P (ηt = x|η0 = y), is said to be monotone if for each pair y, z ∈ S with y ≤ z there exists a
Markov chain (Xt(y, z)) on S × S such that

t (y, z) ≤ X 2

t (y, z) a.s.

t (y, z)), i = 1, 2 is a Markov chain on S with transition probabilities Pt(x, y).

(i) X0(y, z) = (y, z) a.s.
(ii) Each component (X i
(iii) for all t ≥ 0, X 1
There are various equivalent formulation of monotonicity. For instance, deﬁning the transition operator
Ttf (y) := Px∈S f (x)Pt(x, y), then the chain is monotone if and only if Tt maps increasing functions into
increasing functions. This characterization can be turned (see Proposition 2.2) into a simple algorithm for
checking monotonicity of Markov chains in terms of the element of the transition matrix (in discrete-time)
or in terms of the inﬁnitesimal generator (in continuous-time).

For various purposes, including simulation, a stronger notion of monotonicity has been introduced.

Deﬁnition 1.2 A Markov chain (ηt), t ∈ R+ or t ∈ Z+, on the poset S, with transition probabilities
Pt(x, y) := P (ηt = x|η0 = y), is said to be completely monotone if there exists a Markov chain (ξt(·)) on
SS such that

(i) ξ0(y) = y a.s.
(ii) For every ﬁxed z ∈ S, the process (ξt(z)) is a Markov chain with transition probabilities Pt(x, y).
(iii) If y ≤ z, then for every t ≥ 0 we have ξt(y) ≤ ξt(z) a.s.
In other words, complete monotonicity means that we can simultaneously couple in an order preserving
way all processes leaving any possible initial state. This property becomes relevant when one aims at
sampling from the stationary measure of a Markov chain using the Propp & Wilson algorithm (see [7]).
If the transition probabilities, or the inﬁnitesimal generator, are known, no simple general rule for checking
complete monotonicity is known. Since, obviously, complete monotonicity implies monotonicity, a natural

3

question is to determine for which posets the converse is true. This problem has been completely solved
in [3] for discrete-time Markov chain: in this case the following result holds.
Theorem 1.3 Every monotone Markov chain in the poset S is also completely monotone if and only if
S is acyclic, i.e. there is no loop x0, x1, . . . , xn, xn+1 = x0 such that, for i = 0, 1, . . . , n

(i) ∀j = 0, 1, . . . , n, j 6= i, xi 6= xj,
(ii) Either xi < xi+1 or xi > xi+1,
(iii) xi ≤ y ≤ xi+1 or xi ≥ y ≥ xi+1 implies y = xi or y = xi+1.
Our aim in this paper is to deal with the same problem in continuous-time, for regular Markov chains,
i.e. Markov chains possessing an inﬁnitesimal generator (or, equivalently, jumping a.s. ﬁnitely many
times in any bounded time interval). We have not been able to provide a complete link between discrete
and continuous-time. It turns out that if in a poset S monotonicity implies complete monotonicity in
discrete-time, then the same holds true in continous-time (see Proposition 2.4). The converse is not true,
however; in the two four-points cyclic posets (the diamond and the bowtie, following the terminology
in [3]) equivalence between monotonicity and complete monotonicity holds in continuous but not in
discrete-time. There are, however, ﬁve-points posets in which equivalence fails in continuous-time as well.
In this paper we do not achieve the goal of characterizing all posets for which equivalence holds. Via a
computer-aided (but exact) method we give a complete list of ﬁve and six point posets for which equiv-
alence fails. Moreover we show that in each poset containing one of the former as subposet, equivalence
fails as well (this does not follow in a trivial way).

In Section 2 we give some preliminary notions, whose aim is to put the complete monotonicity problem
in continuous-time on a ﬁrm basis. Our main results are given in Section 3. All details not contained in
this note will be given in the forthcoming paper [2].

2. Preliminaries

Let (S, <) be a ﬁnite poset, and L = (Lx,y)x,y∈S be the inﬁnitesimal generator of a regular Markov
chain. Let S2 := S ×S \{(x, x) : x ∈ S}. An inﬁnitesimal generator is a matrix L = (Lx,y)x,y∈S whose non-
diagonal elements are nonnegative, while the terms in the diagonal are given by Lx,x = −Py6=x Lx,y. Thus
L may be identiﬁed with an element of the cone (R+)S2. Our main tool for understanding the relations
between the two notions of monotonicity consists in representing the sets of generators of monotone and
completely monotone Markov chains as subcones of (R+)S2 .
Deﬁnition 2.1 A subset Γ ⊆ S is said to be an up-set if x ∈ Γ and x ≤ y ⇒ y ∈ Γ.
The following proposition is a reformulation of a result in [6]. By h·, ·i we denote the Euclidean scalar
product in (R)S2 .
Proposition 2.2 For given x, y ∈ S, Γ up-set, let W Γ,x,y ∈ RS2 be deﬁned by

W Γ,x,y

v,z =




1

for

−1 for

x ≤ y 6∈ Γ, v = y, z ∈ Γ or

x ≥ y ∈ Γ, v = y, z 6∈ Γ

x ≤ y 6∈ Γ, v = x, z ∈ Γ or

x ≥ y ∈ Γ, v = x, z 6∈ Γ

0

in all other cases.

(1)

Then the set Gmon of generators of monotone Markov chains is the subcone of the elements L ∈ (R+)S2
satisfying the inequalities

4

Let now M denote the set of increasing functions S → S. For f ∈ M, let If ∈ (R+)S2 be deﬁned by

hL, W Γ,x,yi ≥ 0 for every Γ, x, y.

(2)

(3)

(If )x,y = 


1 if f (x) = y

0 otherwise.

Our ﬁrst result is the following description of the set of generators of completely monotone Markov chains.
Its proof is a rather straightforward consequence of the existence of the completely monotone coupling
(the process (ξt) in Deﬁnition 1.2).
Proposition 2.3 The set Gc.mon of generators of completely monotone Markov chains is the cone given
by linear combination with nonnegative coeﬃcients of the vectors If , i.e.

L = X

f ∈M

Λf If , with Λf ≥ 0.

(4)

Note that, for each f ∈ M, Γ up-set, x, y ∈ S, we have hIf , W Γ,x,yi ≥ 0, i.e. we recover the inclusion
Gc.mon ⊆ Gmon. Our aim is to determine for which posets the converse inclusion holds true.

A partial result in this direction is given by the following proposition, which establishes a comparison
with the discrete-time case. Its proof relies on analogous representations in terms of cones for discrete-time
transition matrix.
Proposition 2.4 Suppose that in the poset S monotonicity and complete monotonicity are equivalent
notions for discrete-time Markov chains. Then the equivalence holds in continuous-time as well.

3. Extremal generators of monotone Markov chains: the monotonicity equivalence for
"small" posets and extension to larger posets

According to the previous subsection, the equivalence between the complete monotonicity and the

monotonicity of any Markov Chain on a poset S is equivalent to

Gc.mon = Gmon.

(5)

In this section we answer the question for posets with a small cardinality.

First note that the cases ♯S = 2, ♯S = 3 are obvious: in these cases S is linearly totally ordered
(following the terminology of [3]). According to Theorem 1.3, there is equivalence for all the discrete-time
Markov chains and using the result of Proposition 2.4 the equivalence holds for continuous-time Markov
chains as well.

In order to further investigate the equality (5) we developed computer computations. The cone Gmon
is deﬁned as intersection of half spaces in (2) (so called H-representation). The cone Gc.mon is deﬁned
by its extremal rays in (4) (so called V-representation). The software cdd+ (see [1]) is able to compute
exactly one representation given the other one. This is a C++ implementation for convex polyhedron of
the Double Description Method (see for instance [4]). Finding the extremal rays of the cone Gmon and the
(minimal) set of inequalities deﬁning the cone Gc.mon, we are then able to know if Gmon ⊆ Gc.mon holds.

We operated by ﬁrst using the software GAP (see [5]) in order to
(i) ﬁnd the up-sets Γ related to the poset S, the vectors W Γ,x,y ∈ RS2 and then identify the H-representation

of Gmon;

(ii) compute all the increasing functions f ∈ M, identify the vectors If ∈ (R+)S2 and then ﬁnd the

V-representation of Gc.mon.

5

We then use the software cdd+ to produce the other representations of the cones, and the software Scilab
(see [8]) to test if Gmon ⊆ Gc.mon.

The diﬃculty in applying this method to posets with a high cardinality relies on the combinatorial
complexity of the step (ii) and on the time the software cdd+ needs. Rather than to ♯S, this time is
related to the number of facets of the cones, which comes from the partial order structure. Nevertheless,
we were able to completely study the cases when ♯S ≤ 6.

Here we brieﬂy give the cases ♯S ≤ 6. For ♯S ≥ 6, the result of Proposition 3.3 gives the answer for

some posets. For a systematic analysis, we refer to the forthcoming work [2].

For ♯S = 4 the two relevant poset-structure are the diamond and the bowtie. Their Hasse-Diagram are,
in Figure 1, S1 and S4 respectively, without the node w. For those two posets, the computation procedure
gives us that Gmon = Gc.mon holds. Note that this result is known to be false in discrete-time, see for
instance examples 1.1 and 4.5 in [3].

For ♯S = 5, we can then state:

Proposition 3.1 The only posets S with ♯S ≤ 5 such that (5) does not hold are those whose Hasse-
Diagram are presented in Figure 1.

b


	


d


	


        
❃❃❃❃❃❃❃❃


	


a

❃❃❃❃❃❃❃❃
        


	


c

b


	


d


	


w

        
❃❃❃❃❃❃❃❃


	



	


a

❃❃❃❃❃❃❃❃
        


	


c

b


	


d


	


❃❃❃❃❃❃❃❃
        
❃❃❃❃❃❃❃❃❃❃❃❃❃❃❃❃

w

	


❃❃❃❃❃❃❃❃
❃❃❃❃❃❃❃❃
        

c


	



	


a


	


w

(S1)

c

d


	


w


	



	


❃❃❃❃❃❃❃❃❃❃❃❃❃❃❃❃
                


	


a


	


b

(S2)

(S3)

w


	


❃❃❃❃❃❃❃❃
        
❃❃❃❃❃❃❃❃❃❃❃❃❃❃❃❃
                

d


	



	


b

c


	



	


a

Figure 1. The ﬁve-points posets, for which there is no equivalence between the two notions of monotonicity.

(S4)

(S5)

f


	



	


a

e

d


	



	



	



	


b

❃❃❃❃❃❃❃❃
❃❃❃❃❃❃❃❃
♣♣♣♣♣♣♣♣♣♣♣♣
❃❃❃❃❃❃❃❃
❃❃❃❃❃❃❃❃
♣♣♣♣♣♣♣♣♣♣♣♣
        
        

e

c


	



	



	



	


f

a

b

d


	


b

c


	



	


f


	



	


a

d


	


e


	


❃❃❃❃❃❃❃❃
        

❃❃❃❃❃❃❃❃
        


	


c


	


b

e

f


	


❃❃❃❃❃❃❃❃
        
◆◆◆◆◆◆◆◆◆◆◆◆

	
 c



	


❃❃❃❃❃❃❃❃
        
♣♣♣♣♣♣♣♣♣♣♣♣

d


	



	


a

Figure 2. Some characteristic six-points posets, where there is no equivalence between the two notions of monotonicity.

We studied all ﬁve-points posets which are not linearly totally ordered. For the posets previously
mentioned, we found extremal rays L = (Lx,y)(x,y)∈S2 of Gc.mon which are not in Gmon. One example for
each poset is given in the ﬁgure 4. The non-mentioned components are equal to 0.

Furthermore we brieﬂy mention the following result, whose proof is to be found in [2].

Deﬁnition 3.2 A subset S′ of S is said to be an (induced) subposet if for all x, y ∈ S′, x ≤ y in S′ is
equivalent to x ≤ y in S.

6

Proposition 3.3 If a poset S admits as subposet a poset S′, whose Hasse-Diagram is presented in the
ﬁgures 1 and 2 then the monotonicity equivalence (i.e. the equality (5)) fails in S as well.
For instance, the poset of ﬁgure 3 admits the poset S4 as subposet (consider it without the node c) and
as consequence the equivalence of the two monotonicity does not hold on it.
Proposition 3.4 For ♯S = 6, the posets where the equivalence fails are either the ones of ﬁgure 2 or the
ones which admits as subposet a poset of ﬁgure 1.

b


	


d


	


        
❃❃❃❃❃❃❃❃


	


a

f


	


❃❃❃❃❃❃❃❃
        

	
 c


        
❃❃❃❃❃❃❃❃


	


e

Figure 3. Six-point poset, where there is no equivalence, since it admits S4 as subposet.

on S1, L1 : La,w = Lb,w = Lc,w = Ld,b = Ld,c = 1

on S2, L2 : La,b = Ld,b = Lw,b = Lc,d = Lc,a = 1

on S3, L3 : Ld,c = Lb,c = La,c = Lw,a = Lc,a = 1

on S4, L4 : La,b = Lw,b = Lc,d = Ld,b = Lb,d = 1

on S5, L5 : Lw,c = Lw,d = Lc,a = Ld,a = Lb,a = 1

Figure 4. Examples of monotone generators which are not complete monotone.

Acknowledgements

P.-Y. Louis thanks the Mathematics Department of the University of Padova for ﬁnancing stays at

Padova.

References

[1] cdd/cdd+ software, 1995–2004. available at http://www.cs.mcgill.ca/~fukuda/soft/cdd_home/cdd.html.

[2] P. Dai Pra, P.-Y. Louis, and I. Minelli. Complete monotone coupling for markov processes. in preparation.

[3] J. A. Fill and M. Machida. Stochastic monotonicity and realizable monotonicity. Ann. Probab., 29(2):938–978, 2001.

[4] K. Fukuda and A. Prodon. Double description method revisited. In Combinatorics and computer science (Brest, 1995),

volume 1120 of Lecture Notes in Comput. Sci., pages 91–111. Springer, Berlin, 1996.

[5] Gap software - groups, algorithms, programming - a system for computational discrete algebra, 1986–2006. available at

http://www.gap-system.org/~gap/.

[6] W. A. Massey. Stochastic orderings for Markov processes on partially ordered spaces. Math. Oper. Res., 12(2):350–367,

1987.

[7] J.G. Propp and D.B. Wilson. Exact sampling with coupled Markov chains and applications to statistical mechanics.

Random Structures and Algorithms, 9(1&2):223–252, 1996.

[8] Scilab software, 1989-2006. Copyright c(cid:13) INRIA ENPC, Scilab is a trademark of INRIA, available at http://www.

scilab.org/.

7

