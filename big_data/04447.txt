On the Efﬁciency of the Information Networks

in Social Media

Mahmoudreza Babaei

MPI-SWS, Germany

Przemyslaw Grabowicz

MPI-SWS, Germany

Isabel Valera

MPI-SWS, Germany

Krishna P. Gummadi

MPI-SWS, Germany

Manuel

Gomez-Rodriguez
MPI-SWS, Germany

6
1
0
2

 
r
a

 

M
4
1

 
 
]
I
S
.
s
c
[
 
 

1
v
7
4
4
4
0

.

3
0
6
1
:
v
i
X
r
a

ABSTRACT
Social media sites are information marketplaces, where users pro-
duce and consume a wide variety of information and ideas. In these
sites, users typically choose their information sources, which in
turn determine what speciﬁc information they receive, how much
information they receive and how quickly this information is shown
to them. In this context, a natural question that arises is how efﬁ-
cient are social media users at selecting their information sources.
In this work, we propose a computational framework to quantify
users’ efﬁciency at selecting information sources. Our framework
is based on the assumption that the goal of users is to acquire a
set of unique pieces of information. To quantify user’s efﬁciency,
we ask if the user could have acquired the same pieces of informa-
tion from another set of sources more efﬁciently. We deﬁne three
different notions of efﬁciency – link, in-ﬂow, and delay – corre-
sponding to the number of sources the user follows, the amount of
(redundant) information she acquires and the delay with which she
receives the information. Our deﬁnitions of efﬁciency are general
and applicable to any social media system with an underlying in-
formation network, in which every user follows others to receive
the information they produce.

In our experiments, we measure the efﬁciency of Twitter users
at acquiring different types of information. We ﬁnd that Twitter
users exhibit sub-optimal efﬁciency across the three notions of ef-
ﬁciency, although they tend to be more efﬁcient at acquiring non-
popular pieces of information than they are at acquiring popular
pieces of information. We then show that this lack of efﬁciency
is a consequence of the triadic closure mechanism by which users
typically discover and follow other users in social media. Thus, our
study reveals a tradeoff between the efﬁciency and discoverability
of information sources. Finally, we develop a heuristic algorithm
that enables users to be signiﬁcantly more efﬁcient at acquiring the
same unique pieces of information.

Categories and Subject Descriptors: H.1.2 [Information Sys-
tems]: Models and Principles – Human information processing

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
WSDM’16, February 22–25, 2016, San Francisco, CA, USA.
c(cid:13) 2016 ACM. ISBN 978-1-4503-3716-8/16/02. . . $15.00
DOI: http://dx.doi.org/10.1145/2835776.2835826

General Terms: Human Factors; Measurement; Performance.
Keywords: Efﬁciency; information network; social media; infor-
mation; cover set; rewiring algorithm; optimization; lossless.

1.

INTRODUCTION

Over the last decade, the advent of social media has profoundly
changed the way people produce and consume information online.
A characteristic feature of many social media sites (e.g., Twitter
or Pinterest) that distinguishes them from mainstream news me-
dia sites (e.g., CNN.com or NYTimes.com) is the information net-
work created by consumers following their preferred producers of
information [6, 18, 10]. However, the task of selecting informa-
tion sources from potentially tens to hundreds of millions of users
poses serious challenges and raises important questions that have
not yet been addressed. For example, recent studies have observed
that out of fear of missing out on important information, users tend
to follow too many other users [14]. In the process, they receive
a lot of redundant information [4], become overloaded, and effec-
tively miss the information they are interested in [12, 19]. More-
over, it is very hard to ascertain the quality, relevance, and credibil-
ity of information produced by social media users [2, 8, 11]. Also,
many users rely on their network neighborhood for discovering new
sources of information, as observed by the large number of triadic
closures [26, 13, 24] in link creation.

The motivation behind this work originates from two fundamen-
tal questions: 1) How efﬁcient are the users of a social media site
at selecting which other users to follow to acquire information of
their interest? and, 2) can we propose methods to enable a user to
acquire the same pieces of information from another set of users in
the social media site more efﬁciently? To answer these intertwined
questions, we view the structure of the information networks in so-
cial media sites as the outcome of a network formation game [17],
where a node (i.e., user) links to other nodes to solve a speciﬁc task
(i.e., acquire information relevant to the user). In this work, we pro-
pose a general computational framework to quantify and optimize
the efﬁciency of links created by users to acquire information.

With such a framework in place, we analyze the efﬁciency of
information networks of social media users, addressing several im-
portant additional questions. For instance, a user might aim to re-
ceive pieces of information of different popularity. However, can
popular information be covered as efﬁciently as non-popular in-
formation? Additionally, previous studies have identiﬁed triadic
closure [26, 13, 24] and information diffusion [28, 23, 3] as salient
mechanisms that trigger new link creation in social networks. How-
ever, how efﬁcient are information networks created with these
mechanisms? Similarly, it has been observed that in information

systems such as Wikipedia [29, 30], links are primarily established
to make related content more easily discoverable, rather than for
some nuanced notion of efﬁciency.
Is the link creation in user-
generated information networks such as Twitter driven by a similar
goal, i.e., discovering users in the network neighborhood, rather
than for efﬁciency in acquiring information?

Our computational framework is based on the following key con-
cept: given a set of unique ideas, pieces of information, or more
generally, memes I spreading through an information network, there
is an optimal set of nodes that, if followed, would enable us to get
to know I. Naturally, this concept relies on deﬁning what is an
optimal set. Here, we consider three notions of optimality, which
lead to three types of efﬁciencies:

I. Link efﬁciency. The optimal set U l(I) is the one that con-
tains the smallest number of users. Then, we compute link
efﬁciency by comparing the number of people a user follows,
i.e., the number of followees, with the size of the optimal set
U l(I). Finding the optimal set reduces to a minimum set
cover problem, which can be solved using a well-known and
efﬁcient greedy algorithm with provable guarantees [15].

II. In-ﬂow efﬁciency. The optimal set U f (I) is the one that
provides the least amount of tweets per time unit. Then,
we compute in-ﬂow efﬁciency by comparing the amount of
tweets per time unit a user receives from the people she fol-
lows with the amount of tweets per time unit she would have
received by following the users in the optimal set U f (I).
Finding the optimal set reduces to a minimum weighted set
cover problem, which again can be solved efﬁciently with
provable guarantees [15].

III. Delay efﬁciency. The optimal set U t(I) is the one that pro-
vides the memes as early as possible. Then, we compute
delay efﬁciency by comparing the average delay per meme
that the user achieves through the people she follows with
the average delay she would achieve by following the users
in the optimal set. Here, we deﬁne the delay at acquiring a
meme in a social media system as the difference between the
time when the user received the meme in her timeline and
the time when the meme was ﬁrst mentioned by a user in the
social media system. Finding the optimal set reduces to ﬁnd-
ing the set of users who made the ﬁrst mention of each of the
memes in the social media system.

Although the concept of link efﬁciency has been previously in-
troduced by us in [4], here we extend it to account for other def-
initions of efﬁciency, i.e., in-ﬂow and delay efﬁciency. Another
study related to ours uses set covers for efﬁcient detection of out-
breaks [21]. However, that related work does not compare the op-
timal sets to the sets encountered in reality.

In this study, we apply the three notions of efﬁciency to the infor-
mation network of Twitter users. Our analysis does not only show
how efﬁcient users are at acquiring information, but also helps us
in understanding the inﬂuence of different factors on efﬁciency:

1. We ﬁnd that users acquire information sub-optimally with
respect to the three notions of efﬁciency. However, the higher
is the coverage of information that they want to acquire, the
higher is the efﬁciency.

2. While the popular pieces of information are acquired inefﬁ-
ciently, less popular pieces of information are acquired more
efﬁciently.

(A) Users per meme

(B) The number of followees

Figure 1: The distributions of (A) the number of users posting a
unique meme and (B) the number of followees posting a speciﬁc
type of meme at least once. For (A), a power-law is ﬁtted (solid
lines) and the exponent α is given.

3. Users trade followees’ discoverability for information efﬁ-
ciency. While, for a typical Twitter user, many people in her
original ego-network may be discovered by triadic closure,
very few people in the optimized efﬁcient ego-networks can
be discovered in that way.

4. We introduce a heuristic algorithm that considerably increases
both user’s inﬂow and delay efﬁciencies and delivers to her
the same unique pieces of information, by rewiring user’s in-
formation network.

Our empirical ﬁndings also shed light on how our notion of efﬁ-
ciency relates to user’s ego-network structure (e.g., triangle closure,
clustering coefﬁcient).

2. DATASET

We use a large Twitter dataset, as reported in previous work [9],
which comprises the following three types of information: proﬁles
of 52 million users, 1.9 billion directed follow links among these
users, and 1.7 billion public tweets posted by the collected users.
The link information of the network is based on a snapshot taken
at the time of data collection, in September 2009. In our work, we
limit ourselves to tweets published during one week, from July 1,
2009 to July 7, 2009, and ﬁlter out users that did not tweet before
July 1, in order to be able to consider the social graph to be approx-
imately static. After this ﬁltering, we have 395,093 active users,
39,382,666 directed edges, and 78,202,668 tweets.

Then, we sample 10,000 users at random out of the 395,093
active users and reconstruct their timelines by collecting all tweets
published by the (active) people they follow (among all the 395,093
users), build their ego-networks (i.e., who follows whom among the
people they follow), and track all the unique memes they were ex-
posed to during the observation period. We consider four different
types of memes:

I. Hashtags. Hashtags are words or phrases inside a tweet
which are preﬁxed with the symbol “#”. They provide a
way for a user to generate searchable metadata, keywords
or tags, in order to describe her tweet, associate the tweet
to a (trending) topic, or express an idea. Hashtags have be-
come ubiquitous and are an integral aspect of the social Web
nowadays [25].

II. URLs. We extract all URLs mentioned inside tweets [22].
Since most of URLs in Twitter are shortened, we unwrap
them by calling the API of the corresponding shortening ser-
vice. Here, we considered seven popular URL shorteners:

10−1100101102103104105uniqueposters10−1010−910−810−710−610−510−410−310−210−1100101PDFHashtags,α=-2.16URLs,α=-2.1Newsdomains,α=-1.7YouTube,α=-2.7100101102103104105#followees10−910−810−710−610−510−410−310−210−1100PDFHashtagsURLsNewsdomainsYouTubebit.ly, tinyurl.com, is.gd, twurl.nl, snurl.com, doiop.com and
eweri.com, and discard any URL that could not be unwrapped.
In general, URLs correspond to online articles, posts, links,
or websites.

III. News domains. We extract all domain names mentioned
inside tweets that correspond to mainstream media sites in-
dexed by Google News [20]. News domains correspond to
media outlets, which may be specializing in the coverage of
some topics or perspectives.

IV. YouTube videos. We extract all URLs mentioned inside
tweets that match the pattern www.youtube.com/watch.
Here, each of these URLs corresponds to a different YouTube
video.

The above memes provide different levels of granularity. For
example, news domains are very generic, while YouTube videos
are fairly speciﬁc. In more detail, the set of active users mention
286, 219 unique hashtags, 379, 424 URLs, 18,616 news domains,
and 19, 998 YouTube videos. Figure 1A shows the distribution of
the number of unique posters for different types of memes, which
follows a power-law distribution. The tail of the distribution, as
expected, is the heaviest for news domains, while the lightest for
YouTube videos. Moreover, as shown in Figure 1B, the tail of the
distribution of the number of followees tweeting at least one of the
memes is also a power-law. In the remainder, we consider only such
followees.1 Also, we focus on users whose information network is
fairly developed by ﬁltering out any user following less than 20
followees.

Note that, although our methodology does not depend on the par-
ticular choice of meme, it does make two key assumptions. First, it
assumes we can distinguish whether two memes are equal or differ.
Distinguishing certain memes such as hashtags may be trivial but
distinguishing others, such as ideas, may be very difﬁcult. Second,
it assumes that receiving several copies of the same meme from
different users does not provide additional information, even if dif-
ferent users express different opinions about the meme. It would
be interesting to relax the second assumption in future work.

Importantly, in 2009 Twitter did not have features such as “Lists”
and “Personalized Suggestions”, so the main way users received
and processed information was through their feed, for which we
have complete data. The drawback of using older data is smaller
number of users and social activity.

3. DEFINITIONS OF EFFICIENCY

In this section, we introduce three different notions of efﬁciency,
namely, link, in-ﬂow and delay efﬁciency. For each type of ef-
ﬁciency, we provide a formal deﬁnition and propose a method to
approximately compute it with provable guarantees.2 Then, we use
the methods to investigate the efﬁciency of Twitter users at acquir-
ing information.
3.1 Link efﬁciency

Deﬁnition: Our deﬁnition of link efﬁciency follows from our
prior deﬁnition [4]. Consider a user u and the set of unique memes
Iu she is exposed to through her feed in a given time period, by
following |Uu| users. Then, we deﬁne the optimal set U l(Iu) as
the minimal set of users that, if followed, would expose the user to
1Considering all followees leads to qualitatively similar results, but
lower absolute values of efﬁciency.
2Delay efﬁciency, unlike link and in-ﬂow efﬁciencies, can be com-
puted exactly.

∗
1, u

u. We deﬁne link ef-
Figure 2: Our notion of link efﬁciency, El
ﬁciency as El
u = |U l(Iu)|/|Uu|, where Iu is the set of (unique)
memes (blue circles) a user u receives in her timeline by follow-
ing a set of followees Uu = {u1, . . . , u5} (left), and U l(Iu) =
∗
3} (right) is the minimal set cover (of users) that, if
{u
followed, would provide the same set of memes Iu. In the il-
lustration, each user ui posts the memes within the associated
ellipsoid. Hence, in this example, the link efﬁciency value is
El

u = 3/5.

∗
2, u

Algorithm 1: Greedy set cover for estimating link efﬁciency
Input: set of all users U; set of unique memes Iu; followee set
Set U l = ∅;
Set X = Iu;
while X (cid:54)= ∅ do

Uu; set of memes I v posted by user v

∗

= argminv∈U\U l

1

|X∩Iv| ;

Set v
Set U l = U l ∪ {v
;
Set X = X\I v

∗

∗

};

end
Output: U l

at least Iu, and deﬁne the link efﬁciency of a user u at acquiring
memes as

u = |U l(Iu)|
El
|Uu|

,

(1)

where 0 ≤ El
u ≤ 1. If the number of users she follows coincides
with the number of users in the minimal set, then her efﬁciency
value is El
u = 1. The larger the original number of followees in
comparison with the size of the minimal set, the smaller the link
efﬁciency. Figure 2 illustrates our deﬁnition of link efﬁciency.

Examples of link inefﬁciency: Our deﬁnition captures two types
of link inefﬁciency, which we illustrate by two extreme examples.
If a user u follows |Uu| other users, each of them mentioning differ-
ent (disjoint) sets of memes, and there is another user v /∈ Uu that
cover all the memes the followees cover, then the user’s efﬁciency
will be El
u = 1/|Uu|. If a user u follows |Uu| other users and all
these users mention exactly the same memes, then the user’s efﬁ-
ciency will be El
u = 0. The former
type of link inefﬁciency is due to following users that individually
post too few memes, while the latter is due to following users that
collectively produce too many redundant memes.

u = 1/|Uu| and lim|Uu|→∞ El

Computing link efﬁciency: In practice, computing El
u, as de-
ﬁned by Eq. 1, reduces to ﬁnding the minimal set of users U l(Iu),
which can be cast as the classical minimum set cover problem [16].
Although the minimum set cover problem is NP-hard, we can ap-
proximate U l(Iu) using a well-known and efﬁcient greedy algo-
rithm [15], which returns an O(log d) approximation of the min-

u. We deﬁne in-
Figure 3: Our notion of in-ﬂow efﬁciency, Ef
ﬂow efﬁciency as Ef
u = f (U f (Iu))/f (Uu), where Iu is the set
of (unique) memes (blue circles) a user receives in her timeline
by following a set of followees Uu = {u1, . . . , u5} (left), and
∗
3} (right) is the set cover (of users) with the
U f (Iu) = {u
smallest associated in-ﬂow f (U f (Iu)) that, if followed, would
provide the same set of memes Iu. In the illustration, each user
ui posts the memes within the associated ellipsoid and the red
values in the ellipsoid represent the in-ﬂow of each user. Hence,
in this case, the in-ﬂow efﬁciency value is Ef

u = 30/60 = 0.5.

∗
1, u

∗
2, u

Algorithm 2: Greedy set cover for estimating in-ﬂow efﬁciency
Input: set of all users U; set of unique memes Iu; number of
tweets N v posted by user v; set of memes I v posted
by user v

Set U f = ∅;
Set X = Iu;
while X (cid:54)= ∅ do

∗

end
Output: U f

= arg minv∈U\U f

N v

|Iv∩X| ;

Set v
Set U f = U f ∪ {v
Set X = X\I v

∗

∗

};

In-ﬂow efﬁciency

imum size set cover, where d = maxv∈U |I v| is the maximum
number of memes posted by any user. Refer to Algorithm 1 for a
full description of our procedure to approximate link efﬁciency.
3.2
Deﬁnition: Consider a user u and the set of unique memes Iu
she is exposed to through her feed in a given time period, by follow-
ing |Uu| users. Then, we deﬁne the optimal set U f(Iu) as the set of
users that, if followed, would expose the user to, at least, Iu, while
providing the least amount of tweets per time unit, i.e., the mini-
mum tweet in-ﬂow. In particular, we deﬁne the in-ﬂow efﬁciency
of a user u at acquiring memes as

Ef

u =

f (U f(Iu))
f (Uu)

,

(2)

where f (Uu) denotes the amount of tweets produced by the set of
users Uu per time unit (user u’s in-ﬂow) and 0 ≤ Ef
u ≤ 1. The
in-ﬂow efﬁciency Ef
u = 1 if user u’s in-ﬂow coincides with the
amount of tweets per time unit posted by the users in the optimal
set U f(Iu). Here, the larger is user u’s in-ﬂow in comparison with
the amount of tweets per time unit posted by the users in the opti-
mal set, the lower is her in-ﬂow efﬁciency. Figure 3 illustrates our
deﬁnition of in-ﬂow efﬁciency using an example.

Examples of in-ﬂow inefﬁciency: As in the case of link inefﬁ-
ciency, this deﬁnition captures several types of in-ﬂow inefﬁciency.

u = 1/(1 + (cid:104)ti − t0

Figure 4: Our notion of delay efﬁciency, Et
u. We deﬁne delay
i(cid:105)i∈Iu ), where ti is the time
efﬁciency as Et
in which a user receives meme i in her timeline, t0
i is the time
when the meme is ﬁrst mentioned by a user in the whole social
media system, Iu is the set of (unique) memes (blue circles) a
user receives in her timeline by following a set of followees Uu =
∗
{u1, . . . , u5} (left), and U t(Iu) = {u
5} (right) is the
set cover (of users) that, if followed, would provide the same
set of memes Iu as early as possible. In the illustration, each
user ui adopts the memes within the associated ellipsoid for the
ﬁrst time after a delay indicated by the red number. Hence, the
delay efﬁciency is Et

u = 1/(1 + 30/13).

∗
1, . . . , u

First, it is easy to see that the example of extreme link inefﬁciency
due to following users posting exactly the same memes, also leads
to in-ﬂow inefﬁciency.

Second, there is another type of in-ﬂow inefﬁciency, which we il-
lustrate by an additional extreme example. Consider user u that fol-
lows |Uu| other users and the amount of tweets produced by these
followees has a divergent mean, e.g., it has a Pareto distribution (a
power law) with exponent α ≤ 1. Then, if there exists another set
of |Uu| users mentioning the same unique memes and the amount
of tweets produced by them has a non-divergent mean, e.g., it is
a Pareto distribution with exponent α > 1, the user’s efﬁciency
will converge to zero as |Uu| increases, i.e., lim|Uu|→∞ El
u = 0.
Asymptotically, an inﬁnite in-ﬂow could be replaced with a ﬁnite
in-ﬂow that include the same set of unique memes.

Computing in-ﬂow efﬁciency: In practice, computing the opti-
mal set of users U f(Iu) reduces to solving the weighted set cover
problem, which is also NP-hard. Analogously, we can ﬁnd an ap-
proximate solution to U f(Iu) using a greedy algorithm [15], which
returns an O(log d) approximation to the set cover with minimum
in-ﬂow, where d = maxv∈U |I v| is the maximum number of memes
posted by any user. Refer to Algorithm 2 for a full description of
our procedure to approximate in-ﬂow efﬁciency with an approxi-
mation factor O(log d).
3.3 Delay efﬁciency
Deﬁnition: Consider a user u and the set of unique memes Iu
she is exposed to through her feed in a given time period, by fol-
lowing |Uu| users. Then, we deﬁne the optimal set U t(Iu) as the
set of users that, if followed, would expose the user to, at least,
Iu, with the smallest time delay. Here, we deﬁne the delay at ac-
quiring a meme provided by a set Uu as the difference between the
time when a user in Uu ﬁrst mentions the meme and the time when
the meme was ﬁrst mentioned during the given time period by any
user in the whole social media system. We then deﬁne the delay
efﬁciency of a user u at acquiring memes as

Et

u =

1

1 + (cid:104)ti − t0

i(cid:105)i∈Iu

,

(3)

(A) Link efﬁciency

(B) In-ﬂow efﬁciency

(C) Delay efﬁciency

Figure 5: The distributions of link, in-ﬂow, and delay efﬁciencies for the four types of memes.

Figure 6: The distribution of the ratio between the number of
received tweets and unique memes.

i is the
where ti is the time a user in Uu ﬁrst mentions meme i, t0
time when the meme is ﬁrst mentioned by a user in the whole social
media system, and (cid:104)ti−t0
i(cid:105)i∈Iu is an average delay over all memes
received by user u, measured in days. The delay efﬁciency Et
u = 1
if the followees of the user u are the ﬁrst to post the set of memes
Iu in the whole system. The delay efﬁciency becomes lower than
1 when the user is exposed to the memes at later times than their
time of birth. The larger is the average delay of received memes,
the smaller is the delay efﬁciency. Figure 4 illustrates our deﬁnition
of delay efﬁciency using an example.

Computing delay efﬁciency: In this case, we can compute the
delay efﬁciency directly by ﬁnding when each of the memes ap-
peared for the ﬁrst time in the system, without resorting to approx-
imation algorithms, as in the case of link and in-ﬂow efﬁciencies.
One can query the ﬁrst time of appearance for each meme in O(1)
by building a mapping between memes and their ﬁrst time of ap-
pearance in a hashtable.
3.4 Efﬁciency of Twitter users

Once we have the three deﬁnitions of users’ efﬁciency deﬁned by
Eqs. 1-3, we use them to investigate how efﬁcient Twitter users are
at acquiring four different types of memes: hashtags, URLs, news
domains and YouTube videos.

First, we estimate the empirical probability density function3
(PDF) for each type of efﬁciency and meme. We show the results
in Figure 5, in which we ﬁnd several interesting patterns. First, all
PDFs resemble a normal distribution, however, their peaks (modes)
and widths (standard deviations) differ across efﬁciencies and type
of memes. For most users and most types of memes, the efﬁ-
ciency value is signiﬁcantly below one, giving empirical evidence
that users are typically sub-optimal. Second, while the PDFs for

3The PDFs have been empirically estimated using kernel density
estimation [7].

(A) Link efﬁciency

(B) Inﬂow efﬁciency

Figure 7: The average link and in-ﬂow efﬁciencies versus the
percentage of covered memes.

link (Figure 5A) and delay (Figure 5C) efﬁciencies look quite sim-
ilar, the in-ﬂow efﬁciency differs signiﬁcantly (Figure 5B). Third,
users are most efﬁcient at acquiring YouTube videos, followed by
URLs and hashtags, and news domains. This order coincides with
the ordering of the exponents of the corresponding power-law dis-
tribution of memes’ popularity (Figure 1A), i.e., the exponent of
the power-law (its absolute value) is the highest for YouTube links,
followed by URLs and hashtags, and ﬁnally for news domains.
Note that the higher the exponent is, the higher the proportion of
non-popular memes with respect to the popular ones, and thus one
can conclude that users are more efﬁcient at acquiring non-popular
memes than popular memes. A plausible explanation is that users
posting non-popular memes are likely to be included in the opti-
mal set, since there is nobody else who posts these memes and,
as a consequence, the optimal set differs less from the original set
of followees. Moreover, note that in Figure 5B, the in-ﬂow ef-
ﬁciency of both news domains and YouTube videos is shifted to
the left (i.e., presents much lower efﬁciency values) compared to
the link efﬁciency in Figure 5A. This shift is due to the fact that,
as shown in Figure 6, ratio between the total number of received
tweets and unique memes is much larger for unique news domains
and YouTube video memes than for hashtags and URLs, which in
turn, translates into a lower in-ﬂow efﬁciency.

In the above measurements, we estimated the probability density
functions of user’s efﬁciency considering full coverage of the re-
ceived memes. Importantly, it is straightforward to extend our def-
initions of link and in-ﬂow efﬁciencies to account for partial cov-
erage, by simply considering a set of users that, if followed, would
expose the user to, at least, a percentage of the unique memes Iu,
by stopping the greedy algorithm whenever the given percentage is
reached. Note, however, that computing the efﬁciency for a partial

0.00.20.40.60.81.0LinkEfﬁciency,El0123456789PDFHashtagsURLsNewsdomainsYouTube0.00.20.40.60.81.0InﬂowEfﬁciency,Ef10−1100101102PDFHashtagsURLsNewsdomainsYouTube0.00.20.40.60.81.0DelayEfﬁciency,Eδ024681012PDFHashtagsURLsNewsdomainsYouTube10−210−1100101102103104In-ﬂow/#uniquecontagions10−710−610−510−410−310−210−1PDFHashtagsURLsNewsdomainsYouTube20%40%60%80%100%Coverage0.00.20.40.60.81.0LinkEfﬁciencyHashtagsURLsNewsdomainsYouTube20%40%60%80%100%Coverage0.00.20.40.60.81.0InﬂowEfﬁciencyHashtagsURLsNewsdomainsYouTube(A) Hashtags, URLs, news

(B) YouTube videos

(A) Effect of in-ﬂow efﬁciency
optimization on link efﬁciency

(B) Effect of delay efﬁciency
optimization on link efﬁciency

Figure 8: The average popularity of covered memes as a func-
tion of the percentage of covered memes.

(A) 100% Coverage

(B) 80% Coverage

Figure 9: In-ﬂow efﬁciency measured for hashtags appearing
in the time periods of different lengths. The results for other
efﬁciencies and meme types are qualitatively the same.

coverage based on the full set of followees would be unfair, since
some of the followees in Uu may be not tweeting any of the covered
memes. Thus, for the purpose of computing the efﬁciencies for par-
tial coverage, we take into account only the users in Uu who tweet
at least one of the covered memes. Figure 7 shows the average link
and in-ﬂow efﬁciencies against coverage for the same four memes.
As one may have expected, the higher the coverage, the higher the
link and in-ﬂow efﬁciency, since the memes that are covered ﬁrst
by the greedy algorithm are the popular ones, as shown in Figure 8.
This result conﬁrms that users are more efﬁcient at acquiring less
popular information, but less so at acquiring more popular infor-
mation. A plausible explanation is that less popular information
is produced by only a handful of users and so the optimization is
limited to this set of users.

Finally, we investigate if our results are consistent across differ-
ent time periods. In particular, we measure user efﬁciency based on
time periods of different lengths: one, two, four and eight weeks.
In Figure 9A, we can observe that as we increase the period, there
are more unique memes there to cover, which results in an increase
in the efﬁciency. However, the distribution of efﬁciency is nearly
unchanged for 80% coverage (Figure 9B). Thus, the ﬁndings pre-
sented in this study are qualitatively robust to the choice of time
period. Additionally, we ﬁnd that the choice of the week does not
inﬂuence the distributions of efﬁciency, however, these results are
not shown due to space limitation.

4. CROSS-EFFICIENCY

In our deﬁnitions of efﬁciency, the optimal set for a given user
is the set of users that minimizes the number of links, in-ﬂow or
delay, while covering the same set of unique memes. However,
this naturally raises the question as to how efﬁcient the optimal sets
for a given deﬁnition of efﬁciency are in terms of the other deﬁni-

(C) Effect of link efﬁciency
optimization on in-ﬂow eff.

(D) Effect of delay efﬁciency
optimization on in-ﬂow eff.

(E) Effect of link efﬁciency
optimization on delay eff.

(F) Effect of in-ﬂow efﬁciency
optimization on delay eff.

Figure 10: The effect of optimization of one of the efﬁciencies
on another efﬁciency, plotted as the ratio of the efﬁciency in the
optimized network and the original network against the num-
ber of followees. The dashed line marks the ratio equal to 1,
which corresponds to the lack of change in the efﬁciency due to
the respective optimization.

tions. For example, how efﬁcient is the link-optimal set with re-
spect to in-ﬂow or delay efﬁciency? In this section, we ﬁrst address
this question, then introduce the idea of ﬁnding sets of users that
jointly optimize multiple notions of efﬁciency, and ﬁnally develop
a heuristic algorithm that simultaneously improves both in-ﬂow and
delay efﬁciency of users.
4.1 Cross-efﬁciency of optimal sets

Given a user u and the set of unique memes Iu she is exposed
to in a given time period, our deﬁnitions of efﬁciency compare the
original set of followees with the optimal sets U l(Iu), U f(Iu) and
U t(Iu) in terms of number of links, in-ﬂow and average delay,
respectively. Here, we assess the efﬁciency of the optimal sets for
each deﬁnition of efﬁciency in terms of the other deﬁnitions, which
we call cross-efﬁciencies. More speciﬁcally, we compute the link
efﬁciency of the optimal sets for in-ﬂow and delay efﬁciency, i.e.,

the in-ﬂow efﬁciency of the optimal sets for link and delay efﬁ-

u,t = |U l(Iu)|
|U t(Iu)|

,

u,f = |U l(Iu)|
El
|U f(Iu)|

and El

20%40%60%80%100%Coverage02000400060008000100001200014000AveragepopularityHashtagURLsNewsdomains20%40%60%80%100%Coverage405060708090100AveragepopularityYouTube0.00.20.40.60.81.0Efﬁciency,Ef0.00.51.01.52.02.5PDF1week2weeks4weeks8weeks0.00.20.40.60.81.0Efﬁciency,Ef0123456789PDF1week2weeks4weeks8weeks101102103104105Numberoffollowees2−22−120212223242526Elu,f/EluHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees2−22−120212223242526Elu,t/EluHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees2−22−12021Efu,l/EfuHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees2−32−22−12021222324Efu,t/EfuHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees2−22−12021Etu,l/EtuHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees2−22−12021Etu,f/EtuHashtagsURLsNewsdomainsYouTubeciency, i.e.,

Ef

u,l =

f (U f(Iu))
f (U l(Iu))

and Ef

u,t =

f (U f(Iu))
f (U t(Iu))

,

and the delay efﬁciency of the optimal sets for link and in-ﬂow
efﬁciency, i.e.,

Et

u,l =

1
i − t0

and Et

u,f =

1
i − t0

,

i

i(cid:105)i∈Iu

1 + (cid:104)tf

1 + (cid:104)tl
i(cid:105)i∈Iu
where tl
i is the time a user in U l(Iu) ﬁrst mentions meme i and tf
is the time a user in U f(Iu) ﬁrst mentions meme i.
Typically, we would like to know if an efﬁciency of an optimized
information network is increased in comparison with the efﬁciency
of the original network. Thus, in the reminder of this section we
focus on measuring the ratio of an efﬁciency of the optimized and
original networks. If the ratio is higher than one for the given opti-
mization algorithm, then the corresponding efﬁciency is improved
by that algorithm with respect to the original set of followees. If
the ratio is below one then the respective efﬁciency is decreased by
the optimization algorithm.

We measure the ratio between the efﬁciency of the optimal sets
and the original set of followees for the three deﬁnitions of efﬁ-
ciency (see Figure 10). The ratio tends to be below one or close
to one for most meme types, which indicates that optimizing for
one deﬁnition of efﬁciency generally results in decreased efﬁciency
with respect to the other two deﬁnitions.

However, there are a few exceptions. For example, in terms of
link and in-ﬂow efﬁciency, the optimal sets for news domains are
more efﬁcient than the original sets (diamonds in Figures 10A, 10B,
and 10D). This observation may happen due to the following rea-
son: news domains tend to be more popular than the other types
of memes (as shown in Figure 1). As a consequence, a user may
receive multiple copies of the same news domain from various fol-
lowees, and it is very easy to ﬁnd efﬁcient sets in terms of in-ﬂow;
it is enough to simply remove some of their followees from the
network to improve both link and in-ﬂow efﬁciencies.4

Finally, in Figures 10A-10D, we note that the improvement in
the link and in-ﬂow efﬁciencies tends to grow with the number of
followees due to the increased number of redundant (non-unique)
information received by the users who follow many other people.
However, in Figures 10E-10F, the improvement in the delay efﬁ-
ciency tends to drop with the number of followees because it is
likely that users who receive many copies of the same meme re-
ceive it early on. Thus, for users with many followees, it is harder
to improve the delay efﬁciency.

4.2 Joint-optimization of efﬁciencies

So far, we have looked for optimal sets of users in terms of a
single efﬁciency (be it link, in-ﬂow or delay). Moreover, in the
previous section, we have shown that optimal sets in terms of a
single efﬁciency typically decrease the other efﬁciencies. There-
fore, one could imagine developing an algorithm a looking for sets
of users that are optimized with respect to several efﬁciencies; in
other words, a multi-objective algorithm. Given such an algorithm
a, we could compute the efﬁciency of the optimal set Ua(Iu) with

4In fact, over 85% of users receive less unique news domains than
they have followees.

Algorithm 3: Greedy set cover for jointly optimizing in-ﬂow
and delay efﬁciencies
Input: set of all users U; set of unique memes Iu; set of
Set U * = ∅;
Set X = Iu;
while X (cid:54)= ∅ do

memes I v posted by user v

= arg minv∈U\U f

v T β
N α
|Iv∩X| ;
v

∗

Set v
Set U * = U * ∪ {v
Set X = X\I v

∗

∗

};

end
Output: U *

respect to single quantities, i.e.,

u,a = |U l(Iu)|
El
|U a(Iu)|
Et
u,a =

, Ef

u,a =

1
i − t0

1 + (cid:104)ta

f (U f(Iu))
f (U a(Iu))
i(cid:105)i∈Iu

and

where ta
i is the time a user in U a(Iu) ﬁrst mentions meme i. Ideally,
we would like to ﬁnd optimal sets that are efﬁcient with respect to
the considered quantities. Here, as a proof of concept, we next de-
velop a heuristic method to ﬁnd sets of users optimized with respect
to both in-ﬂow and delay.

Joint optimization of in-ﬂow and delay efﬁciency
We leverage the greedy algorithm from the weighted set cover prob-
lem to design a heuristic method that ﬁnds sets of users with high
in-ﬂow and delay efﬁciencies, while delivering the same unique
In particular, in the
memes to the user (refer to Algorithm 3).
heuristic method, the weights are powers of tweets in-ﬂow N α
v and
average delay T β
v over all unique memes produced by the user v.
The exponents α and β can be readily adjusted to induce higher
or lower in-ﬂow efﬁciency and delay efﬁciency, respectively. Here,
we experiment with α = 1 and β = 0.5, which achieves a good
balance between in-ﬂow and delay efﬁciency.

We summarize the ratio of link, in-ﬂow and delay efﬁciency of
the set of users provided by our heuristic method and the original
set of followees in Figure 11. We discus several interesting obser-
vations. First, since the algorithm does not optimize with respect
to the number of links, the link efﬁciency is not improved by this
algorithm, i.e., the ratio between the link efﬁciency of the set pro-
vided by the heuristic method and the link efﬁciency of the original
set of followees ratio is around or below 1 for three out of four
meme types. Second, we ﬁnd that both in-ﬂow and delay efﬁcien-
cies are signiﬁcantly increased over the efﬁciency of the original set
of followees for all types of memes. The in-ﬂow efﬁciency is, on
average, 7.4-times higher for news domains, 1.8-times higher for
hashtags, 1.3-times higher for URLs, 1.2-times higher for YouTube
videos. The delay efﬁciency is, on average, 1.8-times higher for
news domains, 1.4-times higher for hashtags, 1.4-times higher for
URLs, 1.2-times higher for YouTube videos. There is always an in-
crease in in-ﬂow and delay efﬁciencies independently of the num-
ber of followees that the users have originally. However, while the
improvement in the in-ﬂow efﬁciency tends to be larger for users
with many followees, the improvement in the delay efﬁciency is
larger for users with fewer followees. Thus, we conclude that our
algorithm increases both in-ﬂow and delay efﬁciency of users.

(A) Effect on link efﬁciency

(B) Effect on in-ﬂow efﬁciency

(C) Effect on delay efﬁciency

Figure 11: The effect of optimization of both in-ﬂow and delay efﬁciencies on different types of efﬁciencies, plotted as the ratio of the
affected efﬁciency of the optimized network and the original network against the number followees.

(A) Original

(B) Minimal set cover

Figure 12: Ego-networks for a Twitter user (red node). Some
users (black nodes) only belong to one of the ego-networks
while others (gray nodes) belong to both. The original ego-
network contains more triangles than the ego-network induced
by the minimal set cover, whose structure is closer to a star.

5. STRUCTURE OF EGO NETWORKS:

ORIGINAL VS. OPTIMIZED

In the previous sections, we have introduced three meaningful
deﬁnitions of efﬁciency and applied them to show that Twitter users
tend to choose their information sources inefﬁciently. In this sec-
tion, we investigate the rationale behind this sub-optimal behavior
by comparing the structure of the user’s ego-networks associated
with both the original set of followees and the sets optimized for
efﬁciency. Here, we deﬁne a user’s ego-network as the network
of connections (who-follows-whom) between the ego user and her
followees.

First, as an example, we take one particular user and illustrate
the structure of her original ego-network and the ego-network of
an optimal set in terms of link efﬁciency (Figure 12). By visual
comparison of both ego-networks, we can see that while the ego-
network induced by the optimal set displays a structure much closer
to a star, the original ego-network contains many more triangles
and higher clustering coefﬁcient. Due to its proportionally lower
number of triangles, the optimal set is not discoverable by triadic
closure [26, 13, 24] or information diffusion [5], which have been
recently shown to be two major driving forces for link creation in
social networks [28, 23, 3].

Remarkably, this phenomenon happens systematically across all
users, efﬁciency deﬁnitions, and types of memes, as displayed in
Figure 13, which shows the distribution of local clustering coef-
ﬁcient (LCC) for the users’ original ego-networks and the ego-

(A) Hashtags

(B) URLs

(C) News domains

(D) YouTube videos

Figure 13: The distributions of local clustering coefﬁcient
(LCC) of the original ego-network (green circles) and the ego-
networks optimized for link (blue circles), in-ﬂow (red cir-
cles), delay (teal circles), and inﬂow-delay efﬁciency (black cir-
cles) for: (A) hashtags, (B) URLs, (C) news domains, (D) and
YouTube videos.

networks induced by different optimized sets. We ﬁnd that while
the LCC distribution for the original ego-networks is well spread
and centered at 0.15 − 0.30, the LCC distributions for the ego-
networks induced by the optimal sets are skewed towards zero.5
One could still think that this is simply a consequence of differ-
ences in the number of followees, i.e., the size of the ego-network.
However, Figure 14 rules out this possibility by showing a striking
difference of several orders of magnitude between the LCC of the
original ego-networks and the ego-networks induced by the opti-
mal sets across a wide range of number of followees. These ﬁnd-
ings suggest that the way in which social media users discover new
people to follow (e.g., triadic closure or information diffusion) or

5Note that the distribution of clustering coefﬁcient of inﬂow-delay
optimized network is located between distributions of in-ﬂow opti-
mized and delay optimized ego-networks.

101102103104105Numberoffollowees2−22−120212223242526Elu,a/EluHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees202122232425Efu,a/EfuHashtagsURLsNewsdomainsYouTube101102103104105Numberoffollowees202122Etu,a/EtuHashtagsURLsNewsdomainsYouTube0.00.20.40.60.81.0LCC01020304050PDFOriginalego-networksLinkoptimizedego-networksIn-ﬂowoptimizedego-networksDelayoptimizedego-networksInﬂow-delayoptimizedego-networks0.00.20.40.60.81.0LCC05101520253035PDFOriginalego-networksLinkoptimizedego-networksIn-ﬂowoptimizedego-networksDelayoptimizedego-networksInﬂow-delayoptimizedego-networks0.00.20.40.60.81.0LCC10−1100101102PDFOriginalego-networksLinkoptimizedego-networksIn-ﬂowoptimizedego-networksDelayoptimizedego-networksInﬂow-delayoptimizedego-networks0.00.20.40.60.81.0LCC10−1100101PDFOriginalego-networksLinkoptimizedego-networksIn-ﬂowoptimizedego-networksDelayoptimizedego-networksInﬂow-delayoptimizedego-networks(A) Hashtags

(B) URLs

(A) Hashtags

(B) URLs

(C) News domains

(D) YouTube videos

(C) News domains

(D) YouTube videos

Figure 14: Average local clustering coefﬁcient versus the num-
ber of followees in the original ego-network (green circles) and
the ego-networks optimized for link (blue squares), in-ﬂow (red
triangles), delay (teal triangles), and inﬂow-delay efﬁciency
(black triangles).

Figure 15: Local clustering coefﬁcient of the optimized ego-
networks versus the overlap between the original ego-network
and the ego-networks optimized for link (blue squares), in-
ﬂow (red triangles), delay (teal triangles), and inﬂow-delay efﬁ-
ciency (black triangles).

receive recommendations (e.g., pick people in a 2-hop neighbor-
hood [1]) can lead to sub-optimal information networks in terms of
(link, in-ﬂow and delay) efﬁciency.

We have argued that optimal sets typically differ from the orig-
inal set of followees due to their low number of triangles in the
associated ego-networks, and thus lack of discoverability. How-
ever, are optimal sets with higher number of triangles in efﬁcient
ego-networks easier to discover for users? Figure 15 answers this
question positively by showing the average local clustering coef-
ﬁcient in the ego-network induced by the optimal set against the
overlap between the users in the optimal set and the original set of
followees. Here, by overlap we mean the fraction of users in the
optimal set that are also in the original set of followees. In partic-
ular, we ﬁnd a positive correlation (Pearson’s 0.07 < r < 0.55,
−10) between the local clustering coefﬁcient and the over-
p < 10
lap, which indicates that if the nodes in the optimal set are discov-
erable through triadic closure, the user may be more likely to ﬁnd
them and decide to follow them.

6. DISCUSSION

We have deﬁned three intuitive notions of user’s efﬁciency in so-
cial media – link, in-ﬂow and delay efﬁciency – to assess how good
users are at selecting who to follow within the social media system
to acquire information. Our framework is general and applicable
to any social media system where every user follows others within
the system to receive the information they produce. We have then
leveraged our notions of efﬁciency to help us in understanding the
relationship between different factors, such as the popularity of re-
ceived information and the users’ ego-networks structure.

Here, we have focused on three deﬁnitions of efﬁciency (link,
in-ﬂow, and delay). However, we could leverage this idea to de-
ﬁne more complex notions of efﬁciency. For example, we could
deﬁne efﬁciency in terms of diversity, i.e., it would be interesting

to ﬁnd the set of users that, if followed, would cover the same
unique memes while maximizing the diversity of topics or per-
spectives that are delivered with the memes, and then compare this
set with the original set of followees in terms of diversity. This
would provide a framework to mitigate the effects of the ﬁltering
bubble and echo chamber present in current social media systems.
Moreover, some of the memes could be treated preferentially over
other memes. This could be achieved by means of covering a list
of non-unique memes favoring repetitions of a preferential subset
of memes, e.g., memes matching the user’s interests should be de-
livered to the user more often. Remarkably, these more complex
notions of efﬁciency can often be expressed as integer linear pro-
grams, similarly to the minimal set cover problem, which can be
solved using relaxation methods with provable guarantees [27].

Additionally, we have introduced a heuristic method that im-
proves both in-ﬂow and delay efﬁciency of users, while still de-
livering them the same unique memes. Similar heuristics can be
naturally designed to optimize efﬁciency with respect to multiple
quantities (be it link, in-ﬂow, delay, or diversity). In this context,
it would be very interesting to design methods with provable guar-
antees to ﬁnd sets of users that are optimal with respect to multiple
quantities.

Our work also opens other interesting venues for future work.
For example, we have deﬁned and computed a measure of efﬁ-
ciency for each user independently. However, one could also think
on global notions of efﬁciency for the Twitter information network
as a whole, perhaps using a multi set cover approach. Finally, since
we have applied our framework to study information efﬁciency
only on Twitter, it would be interesting to study information efﬁ-
ciency of other microblogging services (Weibo, Pinterest, Tumblr)
and social networking sites (Facebook, Google+).

7. REFERENCES

101102103104Numberoffollowees10−510−410−310−210−1100LCCOriginalLinkIn-ﬂowDelayInﬂow-delay101102103104Numberoffollowees10−510−410−310−210−1100LCCOriginalLinkIn-ﬂowDelayInﬂow-delay100101102103104Numberoffollowees10−510−410−310−210−1100LCCOriginalLinkIn-ﬂowDelayInﬂow-delay101102103104Numberoffollowees10−510−410−310−210−1100LCCOriginalLinkIn-ﬂowDelayInﬂow-delay0.00.20.40.60.81.0Overlap|N∗∩N|/|N|10−410−310−210−1100LCCLink,r=0.56In-ﬂow,r=0.5Delay,r=0.18Inﬂow-delay,r=0.120.00.20.40.60.81.0Overlap|N∗∩N|/|N|10−410−310−210−1100LCCLink,r=0.54In-ﬂow,r=0.47Delay,r=0.32Inﬂowdelay,r=0.280.000.050.100.150.200.250.30Overlap|N∗∩N|/|N|10−410−310−210−1100LCCLink,r=0.23In-ﬂow,r=0.0Delay,r=0.8Inﬂow-delay,r=0.70.00.20.40.60.81.0Overlap|N∗∩N|/|N|10−310−210−1100LCCLink,r=0.64In-ﬂow,r=0.53Delay,r=0.62Inﬂow-delay,r=0.52International Conference on World Wide Web, pages
591–600, 2010.

[19] K. Lerman and T. Hogg. Leveraging position bias to improve

peer recommendation. PLoS One, 9(6), 2014.

[20] J. Leskovec, L. Backstrom, and J. Kleinberg. Meme-tracking

and the dynamics of the news cycle. In Proceedings of the
15th ACM SIGKDD international conference on Knowledge
discovery and data mining, pages 497–506, 2009.
[21] J. Leskovec, A. Krause, C. Guestrin, C. Faloutsos,

J. VanBriesen, and N. Glance. Cost-effective outbreak
detection in networks. In Proceedings of the 13th ACM
SIGKDD international conference on Knowledge discovery
and data mining, pages 420–429. ACM, 2007.

[22] A. Mislove, M. Marcon, K. P. Gummadi, P. Druschel, and

B. Bhattacharjee. Measurement and analysis of online social
networks. In Proceedings of the 7th ACM SIGCOMM
conference on Internet measurement, pages 29–42, 2007.
[23] S. A. Myers and J. Leskovec. The bursty dynamics of the

twitter information network. In Proceedings of the 23rd
International Conference on World Wide Web, pages
913–924, 2014.

[24] D. M. Romero and J. Kleinberg. The directed closure process

in hybrid social-information networks, with an analysis of
link formation on twitter. In Proceedings of the 4th
International AAAI Conference on Weblogs and Social
Media, 2010.

[25] D. M. Romero, B. Meeder, and J. Kleinberg. Differences in

the mechanics of information diffusion across topics: idioms,
political hashtags, and complex contagion on twitter. In
Proceedings of the 20th International Conference on World
Wide Web, pages 695–704, 2011.

[26] G. Simmel. The Sociology of Georg Simmel. Free Press of

Glencoe, 1950.

[27] V. V. Vazirani. Approximation algorithms. Springer, 2001.
[28] L. Weng, J. Ratkiewicz, N. Perra, B. Gonçalves, C. Castillo,
F. Bonchi, R. Schifanella, F. Menczer, and A. Flammini. The
role of information diffusion in the evolution of social
networks. In Proceedings of the 19th ACM SIGKDD
international conference on Knowledge discovery and data
mining, pages 356–364, 2013.

[29] R. West and J. Leskovec. Automatic versus human

navigation in information networks. In Proceedings of the
6th International AAAI Conference on Weblogs and Social
Media, 2012.

[30] R. West and J. Leskovec. Human wayﬁnding in information

networks. In Proceedings of the 21st International
Conference on World Wide Web, pages 619–628, 2012.

[1] L. A. Adamic and E. Adar. Friends and neighbors on the

web. Social networks, 25(3):211–230, 2003.

[2] E. Agichtein, C. Castillo, D. Donato, A. Gionis, and

G. Mishne. Finding high-quality content in social media. In
Proceedings of the 1st International Conference on Web
Search and Data Mining, pages 183–194, 2008.

[3] D. Antoniades and C. Dovrolis. Co-evolutionary dynamics in

social networks: A case study of twitter. arXiv preprint
arXiv:1309.6001, 2013.

[4] M. Babaei, P. Grabowicz, I. Valera, and

M. Gomez-Rodriguez. On the users’ efﬁciency in the twitter
information network. In Proceedings of the 9th International
AAAI Conference on Weblogs and Social Media, 2015.

[5] E. Bakshy, I. Rosenn, C. Marlow, and L. Adamic. The role of

social networks in information diffusion. In Proceedings of
the 21st international conference on World Wide Web, pages
519–528, 2012.

[6] R. Bosagh Zadeh, A. Goel, K. Munagala, and A. Sharma. On

the precision of social and information networks. In
Proceedings of the ﬁrst ACM conference on Online social
networks, pages 63–74. ACM, 2013.

[7] A. W. Bowman and A. Azzalini. Applied smoothing
techniques for data analysis. Clarendon Press, 2004.
[8] C. Castillo, M. Mendoza, and B. Poblete. Information

credibility on twitter. In Proceedings of the 20th
International Conference on World Wide Web, pages
675–684, 2011.

[9] M. Cha, H. Haddadi, F. Benevenuto, and P. K. Gummadi.

Measuring User Inﬂuence in Twitter: The Million Follower
Fallacy. In Proceedings of the 4th International AAAI
Conference on Weblogs and Social Media, pages 10–17,
2010.

[10] N. A. Christakis and J. H. Fowler. Social network sensors for

early detection of contagious outbreaks. PloS one,
5(9):e12948, 2010.

[11] M. Farajtabar, M. Gomez-Rodriguez, N. Du, M. Zamani,

H. Zha, and L. Song. Back to the past: Source identiﬁcation
in diffusion networks from partially observed cascades. In
Proceedings of the 18th International Conference on
Artiﬁcial Intelligence and Statistics, 2015.

[12] M. Gomez-Rodriguez, K. Gummadi, and B. Schoelkopf.

Quantifying Information Overload in Social Media and its
Impact on Social Contagions. In Proceedings of the 8th
International AAAI Conference on Weblogs and Social
Media, pages 170–179, 2014.

[13] M. S. Granovetter. The strength of weak ties. American

journal of sociology, pages 1360–1380, 1973.

[14] N. Hodas and K. Lerman. How visibility and divided

attention constrain social contagion. In Proceedings of the
2012 ASE/IEEE International Conference on Social
Computing, pages 249–257, 2012.

[15] D. S. Johnson. Approximation algorithms for combinatorial
problems. In Proceedings of the ﬁfth annual ACM symposium
on Theory of computing, pages 38–49. ACM, 1973.

[16] R. M. Karp. Reducibility among combinatorial problems.

Springer, 1972.

[17] M. Kearns. Experiments in social computation.

Communications of the ACM, 55(10):56–67, 2012.

[18] H. Kwak, C. Lee, H. Park, and S. Moon. What is twitter, a

social network or a news media? In Proceedings of the 19th

