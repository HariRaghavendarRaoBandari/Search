6
1
0
2

 
r
a

 

M
1
2

 
 
]

.

O
C
h
t
a
m

[
 
 

1
v
1
2
3
6
0

.

3
0
6
1
:
v
i
X
r
a

TAMING RELUCTANT RANDOM WALKS IN THE POSITIVE

QUADRANT

JEREMIE LUMBROSO, MARNI MISHNA AND YANN PONTY

Abstract. A lattice walk model is said to be reluctant if the deﬁning step set has a
strong drift towards the boundaries. We describe eﬃcient random generation strategies
for these walks.

1. Introduction

Walks on lattices are fundamental combinatorial classes. They appear in many guises
particularly in formal language theory, queuing theory, and combinatorics as they naturally
encode common relations. A typical lattice path model is a set of walks deﬁned by a ﬁxed,
ﬁnite set of allowable moves (called the step set), and a region to which the walks are
conﬁned (typically a convex cone). The exact and asymptotic enumeration of lattice paths
restricted to the ﬁrst quadrant (known as quarter plane models) have been a particularly
active area of study of late because of some new and interesting techniques coming from
diﬀerent areas of computer algebra and complex analysis [5, 7, 18, 20].

Eﬃcient uniform random generation is useful to study the typical large scale behavior
of walks under diﬀerent conditions. Models which restrict walks to the upper half plane
can be speciﬁed by an algebraic combinatorial grammar [11, 3]. Consequently, eﬃcient
random generation schemes can be obtained using several systematic strategies, such as
recursive generation [14] and Boltzmann sampling [12].

Intriguingly, walks restricted to the ﬁrst quadrant are more complex. Rare is the quarter-
plane model with an algebraic generating function that cannot be trivially reformulated
as a half-plane model. Overwhelmingly, the cyclic lemma, combinatorial identities and
other grammar-based techniques that are so fruitful in the half-plane case, do not easily
apply. Furthermore, there is only a small proportion of models whose generating function
satisﬁes a diﬀerential equation with polynomial coeﬃcients1, again excluding a potential
source of direct, generic generation techniques [1].

Rejection sampling is the term for a general technique where one generates from a
simpler superclass, and then rejects elements until an element from the desired class is
obtained. In the case of lattice paths, a naive rejection strategy could use unrestricted
walks as a superset. This is only practical for those quarter-plane models whose counting
sequences grow essentially like those of the unrestricted walks. Such is the case when the
drift, or vector sum of the stepset, is positive coordinate-wise. Anticipated rejection can
also be used when the drift is 0, and provides a provably eﬃcient algorithm [2]. However,
any such strategy is demonstrably doomed to failure when the drift of the step set is
negative in any coordinate, as the probability of generating long unconstrained walks

1For example, amongst the 20 804 small step models with less than 6 steps in 3 dimensions, only around

150 appear to be D-ﬁnite [4].

1

2

JEREMIE LUMBROSO, MARNI MISHNA AND YANN PONTY

Figure 1. A random walk with 18 000 steps in the quarterplane
using the stepset S = {(1, 0), (0, 1), (−1, 0), (1,−1), (−1,−1), (−2,−1)}.

which remain in the ﬁrst quadrant becomes exponentially small. One strategy in the
literature is to change the probability on the allowable steps, and consequently forgo the
uniformity of the generation [6]. It appears then that the problem of eﬃcient, uniform
random generation algorithms for generic quarter plane lattice path models is a relatively
undeveloped topic.
Our contribution. The main result of this paper is an eﬃcient rejection algorithm for
the uniform random generation of walks in the quarter plane. It is an application of recent
results due Johnson, Mishna and Yeats [17], Garbit and Raschel [15] amongst others. It is
provably eﬃcient and straightforward to implement. It is most impressive on walks whose
drift is negative in both coordinates, a property we call reluctant, but it also oﬀers notable
gains for any model which tends to either boundary.

More precisely, we describe a strategy in which every walk of length n is generated with
equal likelihood. The eﬃcacy result holds for quarter plane models with any step set, and
is easily generalized to higher dimensions. Figure 1 illustrates a walk of over 18000 steps
that was generated uniformly at random for the quarter plane model with reluctant step
set

S = {(1, 0), (0, 1), (−1, 0), (1,−1), (−1,−1), (−2,−1)}.

6

The probability of generating a walk of this length by rejection from the set of unrestricted
18000 ∼ 1.75 · 10−926. However, with our strategy, it
sequences of steps S∗ is less than 5.3299
was generated (relatively quickly).

Rejection from an unrestricted walk is not the only competition. For the purposes of
comparison, we describe a recursive strategy which requires exact enumeration results to
be tabulated in advance. This has potential to be eﬃcient, and is insensitive to the drift
of the model, but does require a lot of storage. We discuss this algorithm in Section 3.2.
Our alternative sampler is based on a straightforward combinatorial interpretation of
an enumerative result. Roughly, we use that for any quarter plane model, there is a

TAMING RELUCTANT RANDOM WALKS IN THE POSITIVE QUADRANT

3

corresponding half plane model such that asymptotically, both models have the same
exponential growth factor. This implies that a rejection strategy from this half plane
has sub-exponential rate of rejection. The sub-exponential factors are conjectured to also
match in many cases, suggesting that it is in fact a particularly eﬃcient strategy.

Asymptotic enumerative results are recalled in the next section. A baseline algorithm,
based on a trivial recurrence, is presented in Section 3. Section 4 describes our main
rejection algorithm. Its practical implementation depends on the rationality of the slope of
the half-plane model, and is discussed in Subsection 4.4. We conclude with some remarks
regarding implementation aspects, along with possible extensions.

2. 2D lattice path basics

A 2D lattice path model is a combinatorial class consisting of walks on the 2D integer
lattice, starting at the origin, and taking steps from some ﬁnite multi-set S ⊂ Z2 of
allowable steps. In this work, we consider the restriction of such walks to the positive
quadrant Q = Z2(cid:62)0, although the general strategy works for a wider set of cones. We use
the half-plane Hθ deﬁned by a line through the origin:

Hθ = {x sin θ + y cos θ (cid:62) 0}.

For a ﬁxed, ﬁnite step set S ⊂ Z2, a given cone C, and positive integer n we deﬁne
walks(C, S, n) to be the class of walks of length n starting at the origin, taking steps in S,
and staying in C. Formally,

The complete class is given by walks(C, S) =(cid:83)

walks(C, S, n) = {x0, x1, . . . , xn | x0 = (0, 0) ∧ xj+1 − xj ∈ S ∧ xi ∈ C}.

n(cid:62)0 walks(C, S, n).

We use the following enumerative quantities in our analysis:

n = | walks(Q, S, n)| hS
qS

n(θ) = | walks(Hθ, S, n)|.

(1)
The asymptotic regime for qS
(2)
for real numbers ρ and r. We refer to ρ−1 as the exponential growth factor of the model.
The asymptotic regime critically (although not exclusively) depends on the drift of the
s∈S s. A walk model walks(Q, S) is said to be reluctant

step set S, deﬁned as drift(S) =(cid:80)

n is always of the form
n ∼ γ ρ−n n−r,
qS

when drift(S) = (δ1, δ2) with δ1 < 0 and δ2 < 0.

Reluctant models for the positive quadrant have exponential growth factors that are
lower than the number of steps. It follows that the naive algorithm that performs rejection
from unconstrained walks, has exponential time complexity, motivating our algorithmic
contribution. Indeed, even when one of δ1 < 0 or δ2 < 0, the exponential growth factor
can be less than the number of steps.

The exact value of qS

3. Basic recursive random generator
n can be expressed using a recurrence. This motivates a straightfor-
ward instance of the recursive method [21, 14], where steps are simply drawn sequentially,
using probabilities that depend both on the current position reached, and the number of
remaining steps.

4

JEREMIE LUMBROSO, MARNI MISHNA AND YANN PONTY

n(x, y) to be the number of positive suﬃxes
3.1. Exact enumeration of walks. Deﬁne qS
of walks in walks(Q, S, n) which start from the point (x, y) and remain in the positive
quadrant. Such suﬃx walks of length n can be factored as a ﬁrst step (i, j) ∈ S, keeping the
walk in the positive quadrant, followed by another positive suﬃx of length n − 1 starting
at (x + i, y + j). This leads to the recurrence:

(cid:88)



(i,j)∈S s.t.
x+i≥0,y+j≥0
1

qS
n−1(x + i, y + j)

if n > 0,

if n = 0

(3)

qS
n(x, y) =

n(0, 0).
A quadrant walk is also the positive suﬃx of a walk starting at (0, 0), thus qS
This recurrence can also be trivially adapted to handle general cones, higher dimensions,
or for further constraining the end-point, e.g. to count/generate meanders, or walks ending
on the diagonal.

n := qS

3.2. Algorithm and complexity analysis. Once the cardinalities qS
n(x, y) are available,
a uniform random walk is generated, by choosing one of the steps with probabilities
proportional to the number of possible suﬃxes.
n(cid:48)(x, y) for each n(cid:48) ∈ [0, n] and (x, y) ∈ [0, n · a] ×

(1) Preprocessing. Precompute qS
(2) Generation. Initially starting from (0, 0) and n(cid:48) := n, iterate until n(cid:48) = 0:

[0, n · b], where a := max(i,j)∈S i and b := max(i,j)∈S j;
(a) Choose a step (i, j) ∈ S with probability qS
(b) Add (i, j) to the walk, update the current point ((x, y) := (x + i, y + j)), and
decrease the remaining length (n(cid:48) := n(cid:48) − 1);

n(cid:48)−1(x + i, y + j)/qn(cid:48)(x, y);

Theorem 1 (Complexity/correctness). The random uniform generation of k 2-dimensional
walks conﬁned to the positive quadrant can be performed in Θ(k·n+n3) arithmetic operations,
using storage for Θ(n3) numbers.

Proof. The preprocessing stage should only be computed once in the generation of k
sequences. It involves Θ(|S| · nd+1) arithmetic operations, and requires storage for Θ(nd+1)
large numbers. The generation of a single walk requires the generation of Θ(n) random
numbers and, for each of them, their comparisons to Θ(|S|) other numbers.
An induction argument establishes the correctness of the algorithm. Assume that, for
all n(cid:48) < N and (x, y) ∈ [0, n(cid:48) · a] × [0, n(cid:48) · b], the positive suﬃxes are uniformly generated,
a fact that can be veriﬁed when n(cid:48) = 0. Then for n(cid:48) = N, the algorithm chooses a suitable
step (i, j) ∈ S, and then recursively generates a – uniform from the induction hypothesis –
suﬃx from the updated position. The probability of generating any such walk is therefore

P(w) =

qS
N−1(x + i, y + j)

qN (x, y)

×

1

qS
N−1(x + i, y + j)

=

1

qS
N (x, y)

and we conclude with the uniformity of the generation.

(cid:3)

In practice however, the memory consumption of the algorithm grows in Θ(n4) bits,
which limits the utility of this strategy to n < 500. Thus the above algorithm only serves
as a baseline for our alternative based on rejection.

TAMING RELUCTANT RANDOM WALKS IN THE POSITIVE QUADRANT

5

4. Efficient rejection sampler from 1D models

We recall some basics of rejection sampling for our analysis. Let A be a combinatorial
class which contains the sub-class C. Given a random sampler for A, we can use a rejection
strategy to make a random sampler for C. Let an and cn respectively count the number of
elements of size n in A and C. Following Devroye [10, Chapter II.3], we say that class A
eﬃciently covers C if

(cid:18) an

(cid:19)

cn

∈ O(np),

Here p ≥ 0 is some constant independent of n. In other words, asymptotically, the expected
number of elements drawn from A before generating an element in C is polynomial in n.
Ideally p is as small as possible.

4.1. Candidate superclass: Half-plane model. Our algorithm arises from the surpris-
ing observation made by Johnson, Mishna, and Yeats [17], later proven by Garbit and
Raschel [15]:
Theorem 2 (Garbit and Raschel [15]). Consider a step set S, let ρ(θ)−1 := limn→∞ hS
be the exponential growth factor of the half-plane model walks(Hθ, S), and deﬁne

n(θ)1/n

θ∗ := argmax0(cid:54)θ(cid:54)π/2 ρ(θ),

Then the growth factor ρ−1 := limn→∞(qS
(4)

n)1/n of walks in the positive quadrant Q satisﬁes:
ρ = ρ(θ∗).

This says that the exponential growth of the quarter-plane model is equal to the
exponential growth of a superclass half-plane model. Furthermore the value of θ∗ is
explicitly computable.
Corollary 3. The combinatorial class walks(Hθ∗, S) eﬃciently covers walks(Q, S).

Next we consider the sub-exponential factors, as this gives the polynomial complexity
of the rejection. On the side of the half-plane walks, the asymptotic formulas for hS
n(θ)
can be deduced from the complete generating function study of Banderier and Flajolet [3].
The sub-exponential factors are either n0, n−1/2, or n−3/2, depending on the drift of the
model (positive, zero and negative respectively).

For quarter-plane walks, the picture is less complete. The case of excursions for
models with zero drift was described by Denisov and Wachtel [9], and from this work
Duraj [13, Theorem II] was able to conclude explicit formulas for reluctant walks: Let
(i,j)∈S xiyj, and let (α, β) be the unique positive critical point of S(x, y). Such

S(x, y) =(cid:80)

a point always exists, provided that S satisﬁes some non-triviality conditions. Then,
(5)
where ρ and r satisfy

n ∼ γ ρ−n n−r,
qS

ρ =

1

S(α, β)

and r = 1 + π arccos

(cid:112)Sxx(α, β)Syy(α, β)

Sxy(α, β)

.

6

JEREMIE LUMBROSO, MARNI MISHNA AND YANN PONTY

Data: Reluctant step set S ⊂ Z2, length n
Result: w ∈ walks(Q, S, n) drawn uniformly at random
// Determine optimal slope m = arctan(θ∗) following [17]
if S is singular then m ← 0 else

Set S(x, y) =(cid:80)

(i,j)∈S xiyj;

Determine (x, y) = (α, β), the unique positive solution of
d
dx S(x, y) = d
if β = 1 then m = ∞else m = ln α/ ln β

dy S(x, y) = 0;

end
// Create suitable grammar G
if m = ∞ then p ← 1 and q ← 0 else if m is rational then ﬁnd p, q ∈ N so that
√
n-rational approximation to m A → {ip + jq : (i, j) ∈ S};
m = p/q else ﬁnd p/q, a 1/
G → grammar(A);
// Main rejection loop
repeat
until 2DMap(w) ∈ Q;
Algorithm 1: Outline of our rejection algorithm. UniformDraw(G, n) denotes a uni-
form sampler of walks of length n for the grammar G, and 2DMap(w) indicates the
reintepretation of w as a sequence of 2D steps.

w → UniformDraw(G, n)

4.2. The algorithm. Algorithm 1 implements a classic rejection from a carefully-chosen
half-plane model.
Theorem 4 (Complexity of Algorithm 1). Let S be a reluctant walk model and let M (n)
denote the time complexity of generating a walk for the half-plane model Hθ∗. The
expected time taken by Algorithm 1 to generate a walk in the positive quadrant is in

Θ(cid:0)M (n) × nr−3/2(cid:1) .

n(θ)/qS

This immediately follows from formula (5), from which we deduce that the expected
n ∈ Θ(nr−3/2). For reluctant small step models, one has 3.3 < r <
number of trials is hS
7.5. More recently, Garbit and Raschel have conjectured formulas for the sub-exponential
factor in the general case, and remarkably suggest that for many (non-reluctant) models,
n(θ)/qS
hS
Next we address the eﬃcient uniform random generation of walks in walks(Hθ∗, S).

n ∈ O(1).

4.3. Half plane models as unidimensional walks. We now describe eﬃcient samplers
for half-plane models walks(Hθ, S). Remark that walks in any half-plane can be generated
as positive 1D walks, by taking 1D steps that are the orthogonal projections of those in S
onto the half-plane boundary.
A unidimensional model is deﬁned by a set A ⊂ R. The nontriviality conditions imply
that A contains both a positive and a negative element. The associated class of walks
begins at 0, takes steps which are elements from A such that the sum over any preﬁx of
the walk is nonnegative. If A is a multiple of a set of integers, then the class is modelled
by a context free grammar, which we describe in the next section. Otherwise, the class
cannot be trivially modelled by a context-free grammar, as is proven in Section 4.5.1.

TAMING RELUCTANT RANDOM WALKS IN THE POSITIVE QUADRANT

7

Given S and θ, we deﬁne the associated unidimensional model

A(θ) = {i sin θ + j cos θ : (i, j) ∈ S}.

The classes walks(Hθ, S) and walks(A(θ), R(cid:62)0) are in a straightforward bijection.
Remark 1 ([17]). If S deﬁnes a non-trivial 2D quarterplane model, then A(θ) deﬁnes a
non-trivial unidimensional model. Moreover if S is relunctant, then the drift of A(θ) is
negative. Finally multiplying steps by a positive constant does not aﬀect the language of
positive walks.

Two cases arise, depending on whether or not A(θ∗) consists of rational-valued steps (up
to rescaling). This is equivalent to asking if the slope of the boundary of the half-plane,
m = tan(θ∗) is rational.
4.4. Case 1: Rational projected steps. When tan(θ∗) is rational, the steps in A(θ∗) can
be scaled to be integers, as mentioned in Remark 1, therefore we consider unidimensional
models A which consist of integer-valued steps.

Combinatorial speciﬁcations and, speciﬁcally, context-free grammars can then be used for
random generation. Context-free grammars are indeed suitable to describe objects following
rules which depend on a single, integer counter—and place certain, ﬁnite constraints on
this counter. For the purpose of random walks, this counter may typically keep track of
the height of the walk, and be constrained to always remain positive (i.e., the walk remains
above the x-axis). From a grammar, random objects can be sampled using a variety of
generic methods. More generally, this is equivalent to saying that grammars can describe
walks that are conﬁned within a half-plane.

To build the grammar grammar(A) for a unidimensional model deﬁned by step set A,

we ﬁrst distinguish the positive, negative and neutral steps

A+ := {a | a ∈ A and w(a) > 0},

A− := {a | a ∈ A and w(a) < 0},

A0 := {a | a ∈ A and w(a) = 0},

and deﬁne the largest upward and downward step lengths

¯a := max A+

¯b := − min A−.

Note that both of these lengths are positive, and are well-deﬁned when the step set satisﬁes
the conditions of non-triviality.

Using these three sets, and these two values we deﬁne the associated grammar grammar(A),

whose terminals are given by A, and non-terminals are deﬁned as follows:

P = D × Paux

Li =

a +

LkRk−i

(cid:88)
(cid:88)

a∈A
w(a)=i

min(¯a,i+¯b)(cid:88)
min(j+¯a,¯b)(cid:88)

k=i+1

¯a(cid:88)

(cid:88)

k=1

D =

Paux = ε +

Lk × Paux

Rj =

b +

Lk−jRk

max(¯a,¯b)(cid:88)

b∈A

w(b)=−j

k=j+1

Lk × D × Rk × D

c × D +

c∈S

w(c)=0

k=1

8

JEREMIE LUMBROSO, MARNI MISHNA AND YANN PONTY

Lk

a

D

k

Rk

D

b

Figure 2. Typical decomposition of a walk in D with ﬁrst step of height of
height a (cid:62) k.

This follows from Duchon [11], Bousquet-Mélou and Ponty [8], with minor corrections to
the indices that prevent the grammar from referencing undeﬁned rules. The decomposition
of a walk is unique and a schematic of a typical decompostion is presented in Figure 2.
Given the step set A, G = grammar(A) can be built in constant time (proportional to
max(¯a, ¯b)2). To generate an element from a context free grammar, one either uses recursive
methods [21] or Boltzmann generation [12]. The grammar here is straightforward, so most
common optimizations apply [16].
Theorem 5 (Complexity of rational half-plane sampling). Let walks(R(cid:62)0, A) be a non-
trivial unidimensional model deﬁned by a rational multiset A ⊂ Z. The uniform random
generation of k walks of length n in walks(R(cid:62)0, A) can be performed in O(k · n log n)
arithmetic operations using storage for O(1) numbers.
Corollary 6. When the step set S yields a rational A unidimensional projection, Algo-
rithm 1 generates k walks in the positive quadrant using O(k · nr−1/2 log n) arithmetic
operations, where r is the exponent of the subexponential term in the asymptotics of
walks(Q, S) .
4.5. Case 2: Non-rational projected steps. When the projected step set A(θ∗) con-
tains non-rational steps, then the associated language is not context-free, and grammars
can no longer be used directly. However, it is still possible to use a rational approximation
of the perfect half-plane model, at the expense of the algorithmic eﬃciency.

4.5.1. Contextuality of associated languages.
Lemma 7. Let S ⊂ Z2 be a ﬁnite set which deﬁnes a non-trivial quarterplane model.
Let θ∗ be angle determined by Theorem 2 and assume furthermore that m = tan(θ∗) is
irrational. Then, the language Lm whose alphabet is made from the pairs (i, j) ∈ S, and
the words are restricted to walks in walks(Hθ∗, S) is not context-free.
Proof. Consider two steps a, b ∈ A, encoded by symbols sa and sb, such that a > 0 and
b < 0 and a/b is irrational. The existence of such steps follows from the non-triviality
of S, and the irrationality of tan(θ∗). First, recall that the intersection of a context-free
language and a rational language is a context-free language. If the intersection language

m = {s∗
L∩
b} ∩ Lm = {si
b | a · i − b · j ≥ 0}
as∗
asj

is not context-free, then neither is Lm.
pumping lemma, which states that, if L∩

The fact that L∩

m is not context free can be proven using the context-free version of the
m is context-free, then there exists a word length p

TAMING RELUCTANT RANDOM WALKS IN THE POSITIVE QUADRANT

9

above which each word w ∈ L∩
|u.v| ≥ 1, and {x.ui.y.vi.z | i ∈ N} ⊂ L∩
m.

m can be decomposed as w = x.u.y.v.z such that |u.y.v| ≤ p,
Let ∆(w) = |w|sa · a − |w|sb · b denote the (signed) ﬁnal distance to the half plane, we

m, |w| < |w∗|.

establish the following technical lemma.
Lemma 8. For any p ≥ 0, there exists a word w∗ ∈ L∩
for all w ∈ L∩
Proof. Assume that p is given, and let ∆≤p denote the smallest distance to the half plane
of a word of length ≤ p, reached by some word sx•
ﬁnal distance to the half-plane is smaller than ∆≤p. Consider the word

First we constructively show the existence of a word of length greater than p, whose

m, |w∗| > p, such that ∆(w∗) < ∆(w)

m of length x• + y• ≤ p.

b ∈ L∩

a sy•

(cid:25)

∆≤p

.

(cid:24) b
(cid:19)

w◦ := sK·x•

a

sK·y•

b

sb where K :=

(cid:25)

· ∆≤p < ∆≤p.

(cid:18)(cid:24) b

∆(w◦) = K · ∆≤p − b =

Consider now the smallest word w∗ ∈ L∩

Since both the slope and ratio a/b are irrational, then ∆≤p (cid:54)= 0 and such a word exists.
The ﬁnal distance to the half plane of w◦ is given by:
− b
∆≤p

∆≤p
m such that ∆(w∗) < ∆≤p. Such a word exists
since ∆(w◦) < ∆≤p and clearly obeys |w∗| > p. Since w∗ is the smallest word such that
|w∗| > p and ∆(w∗) < ∆≤p, then one has ∆(w∗) < ∆≤|w∗| which proves our claim.
(cid:3)
Let us now investigate the possible factorizations as x.u.y.v.z of the word w∗, whose
existence is established by Lemma 8, and show that neither of them satisﬁes the pumping
lemma. Focusing on u and v, remark that neither of them should simultaneously feature
both kinds of steps, otherwise any word w[1] = x.u2.y.v2.z /∈ L∩
m, as it would feature at
least two peaks. It follows that any satisfactory decomposition must be of the form u = si
b, and the non-rationality of a/b implies that ∆(u.v) (cid:54)= 0. If ∆(u.v) < 0, then
a
and v = sj
the word w[2] = x.ur.y.vr.z, r > (cid:100)∆(w∗)/∆(u.v)(cid:101) is such that ∆(w[2]) < 0, and therefore
w[2] /∈ L∩
m. If ∆(u.v) > 0, then let us observe that u.v ∈ L∩
m and has total length i + j < p,
therefore Lemma 8 implies that ∆(u.v) > ∆|w(cid:48)|. It follows that the word w[3] = x.u0.y.v0.z
has ﬁnal distance to the slope ∆|w(cid:48)|− ∆(u.v) < 0 and therefore w[3] /∈ L∩
m. Having found all
possible decompositions lacking in some respect, we conclude that L∩
m is not a context-free
language, and neither is Lm.
(cid:3)
4.6. Rational approximations. All is not lost in the case of an irrational slope model,
however, as we can deﬁne an approximation to the slope that is suﬃciently close to the
optimal slope to ensure polynomial-time rejection.
Deﬁnition (δ-rational approximation). A half-plane model Hθr(S) is a δ-rational
approximation of a half-plane model Hθ(S) if and only if mr := tan θr ∈ Q and | tan θ −
tan θr| ≤ δ.
Proposition 9. For any model walks(Hθ, S) and δ > 0 a desired precision, there exists
a grammar with O(1/δ) non-terminals and O(1/δ2) rules, which generates a δ-rational
approximation walks(Hθr, S) of walks(Hθ, S).

10

JEREMIE LUMBROSO, MARNI MISHNA AND YANN PONTY

Remark that, as soon as | tan θ − tan θr| > 0, the exponential growth factor of the
half-plane model becomes greater than that of the quarter-plane model, and Algorithm 1
becomes exponential on n. On the other hand, for any length n ∈ N, setting δ := 1/(n + 1)
will deﬁne a model Hθr(S) which coincides with Hθ(S) on positive walks of length n. Indeed,
the accumulated error due to the approximation of the step set remains too small to lead
to the acceptance of some walk in Hθr(S) and not in Hθ(S) (and vice-versa).
Theorem 10 (Complexity of 1/(n + 1)-rational approximation). Let walks(R(cid:62)0, A, n) be
a non-trivial unidimensional model deﬁned by a non-rational multiset A. The uniform
random generation of k walks of length n in walks(R(cid:62)0, A, n) can be performed in:
• O(k · n log n + n3) arithmetic operations, using storage for O(n3) large integers [14];
• O(k·n3 log n+n2) arithmetic operations, using storage for O(n2) large integers [16];
• O(k·n2 +n2) arithmetic operations, using storage for O(n2) real values (Oracle) [12,

19].

√
Finally, we conjecture that a polynomial rejection is actually reached using a (1/

n)-

rational approximation.
Conjecture 1. Let hn(θ) be the number of walks of length n in an half-plane model Hθ(S),
there exists an inﬁnite sequence of angles {θn}n≤0 such that:

√
• For all n ≥ 0, Hθn(S) is a (1/
• The number of rejections in Algorithm 1 remains polynomial in n:

n)-rational approximation of Hθ∗(S);

∃p ∈ R,

lim
n→+∞

hn(θn)
hn(θ)

∈ O(np)

5. Remarks and future extensions

We have implemented this algorithm in Python, with external calls to Sage to compute
θ∗, and to Maple for Boltzmann Generation. Experimentally, in the case of irrational
projected steps, even crude approximations led to much improved empirical complexities
than both the default half-plane generation and the naive recursive generator. On the
other hand, increasingly precise approximations led to an overwhelming growth in the
size of the grammar, as could be expected from the asymptotic complexity. This raises
interesting questions about the precise interplay between the size of the grammar and the
complexity, starting with our conjecture which we hope to address in a future version of
this work.

There are many possible optimizations, notably, anticipated rejection. We expect this
should have a positive eﬀect on the complexity, particularly in the null-drift cases, possibly
after projection onto the targeted half-plane.
Natural extensions and generalizations. Finally, many natural extensions come to mind.
Generating excursions in the quarter plane is diﬃcult, but using our grammar-based
approach it is completely straightforward. Finally, there are analogous “best hyperplane”
theorems in higher dimensions, and for more general cones, and our general approach
could in principle generalize to these cases.

Acknowledgements. We are very grateful for discussions with Kilian Raschel and Julien
Courtiel.

TAMING RELUCTANT RANDOM WALKS IN THE POSITIVE QUADRANT

11

References

[1] Axel Bacher, Olivier Bodini, and Alice Jacquot. Exact-size sampling for motzkin trees in linear time

via boltzmann samplers and holonomic speciﬁcation. In ANALCO, pages 52–61. SIAM, 2013.

[2] Axel Bacher and Andrea Sportiello. Anticipated rejection algorithms and the darling?mandelbrot

distribution. In AofA, 2014.

[3] Cyril Banderier and Philippe Flajolet. Basic analytic combinatorics of directed lattice paths. Theoret.

Comput. Sci., 281(1-2):37–80, 2002. Selected papers in honour of Maurice Nivat.

[4] Alin Bostan, Mireille Bousquet-Mélou, Manuel Kauers, and Stephen Melczer. Three dimensional

lattice walks restricted to the positive octant. Annals of Combinatorics, to appear.

[5] Alin Bostan and Manuel Kauers. Automatic classiﬁcation of restricted lattice walks. In DMTCS
Proceedings of the 21st International Conference on Formal Power Series and Algebraic Combinatorics
(FPSAC’09), Hagenberg, Austria, pages 203–217, 2009.

[6] Mireille Bousquet-Mélou. On the importance sampling of self-avoiding walks. Combinatorics, Proba-

bility and Computing, pages 1–24, 2011.

[7] Mireille Bousquet-Mélou and Marni Mishna. Walks with small steps in the quarter plane. In Algorithmic
probability and combinatorics, volume 520 of Contemp. Math., pages 1–39. Amer. Math. Soc.,
Providence, RI, 2010.

[8] Mireille Bousquet-Mélou and Yann Ponty. Culminating paths. Discrete Math. Theor. Comput. Sci.,

10(2):125–152, 2008.

[9] Denis Denisov and Vitali Wachtel. Random walks in cones. Ann. Probab., 43(3):992–1044, 2015.
[10] Luc Devroye. Nonuniform random variate generation. Springer-Verlag, New York, 1986.
[11] Philippe Duchon. On the enumeration and generation of generalized Dyck words. Discrete Math.,

225(1-3):121–135, 2000. Formal power series and algebraic combinatorics (Toronto, ON, 1998).

[12] Philippe Duchon, Philippe Flajolet, Guy Louchard, and Gilles Schaeﬀer. Random sampling from
Boltzmann principles. In Peter Widmayer et al., editor, Automata, Languages, and Programming,
number 2380 in Lecture Notes in Computer Science, pages 501–513. Springer Verlag, 2002.

[13] Jetlir Duraj. Random walks in cones: the case of nonzero drift. Stochastic Process. Appl., 124(4):1503–

1518, 2014.

[14] Philippe Flajolet, Paul Zimmerman, and Bernard Van Cutsem. A calculus for the random generation

of labelled combinatorial structures. Theoretical Computer Science, 132(1-2):1–35, 1994.

[15] Rodolphe Garbit and Kilian Raschel. On the exit time from a cone for Brownian motion with drift.

Electron. J. Probab., 19:no. 63, 27, 2014.

[16] Massimiliano Goldwurm. Random generation of words in an algebraic language in linear binary space.

Information Processing Letters, 54(4):229 – 233, 1995.

[17] Samuel Johnson, Marni Mishna, and Karen Yeats. Towards a combinatorial understanding of lattice

path asymptotics. arXiv:1305.7418, 2013.

[18] Irina Kurkova and Kilian Raschel. Random walks in (Z+)2 with non-zero drift absorbed at the axes.

Bull. Soc. Math. France, 139(3):341–387, 2011.

[19] Carine Pivoteau, Bruno Salvy, and MichÃĺle Soria. Boltzmann oracle for combinatorial systems.
In Algorithms, Trees, Combinatorics and Probabilities, pages 475 – 488. Discrete Mathematics and
Theoretical Computer Science, 2008. Proceedings of the Fifth Colloquium on Mathematics and
Computer Science. Blaubeuren, Germany. September 22-26, 2008.

[20] Kilian Raschel. Counting walks in a quadrant: a uniﬁed approach via boundary value problems. J.

Eur. Math. Soc. (JEMS), 14(3):749–777, 2012.

[21] Herbert S. Wilf. A uniﬁed setting for sequencing, ranking, and selection algorithms for combinatorial

objects. Advances in Mathematics, 24:281–291, 1977.

JL: Department of Computer Science, Princeton University, Princeton, NJ, USA; MM:
Department of Mathematics, Simon Fraser University, Canada; YP: CNRS – LIX and
AMIB project, Ecole Polytechnique and Inria Saclay, France

