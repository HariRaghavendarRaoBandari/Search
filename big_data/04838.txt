6
1
0
2

 
r
a

 

M
5
1

 
 
]

V
C
.
s
c
[
 
 

1
v
8
3
8
4
0

.

3
0
6
1
:
v
i
X
r
a

Hierarchical image simpliﬁcation and segmentation based on

Mumford-Shah-salient level line selection

Yongchao Xu∗†, Thierry G´eraud∗, Laurent Najman‡

Abstract

Hierarchies, such as the tree of shapes, are popular representations for image simpliﬁcation and segmentation
thanks to their multiscale structures. Selecting meaningful level lines (boundaries of shapes) yields to simplify
image while preserving intact salient structures. Many image simpliﬁcation and segmentation methods are driven
by the optimization of an energy functional, for instance the celebrated Mumford-Shah functional. In this paper, we
propose an eﬃcient approach to hierarchical image simpliﬁcation and segmentation based on the minimization of
some energy functional. This method conforms to the current trend that consists in producing hierarchical results
rather than a unique partition. Contrary to classical approaches which compute optimal hierarchical segmentations
from an input hierarchy of segmentations, we rely on the tree of shapes, a unique and well-deﬁned representation
equivalent to the image. Simply put, we compute for each level line of the image an attribute function that
characterizes its persistence under the energy minimization. Then we stack the level lines from meaningless ones to
salient ones through a saliency map based on extinction values deﬁned on the tree-based shape space. Qualitative
illustrations and quantitative evaluation on Weizmann segmentation evaluation database demonstrate the state-of-
the-art performance of our method.

1 Introduction

In natural images, meaningful contours are usually smooth
and well-contrasted. Many authors (e.g., [10, 6]) claim
that signiﬁcant contours of objects in images coincide with
segments of the image level lines. The level lines are the
boundaries of the connected components described by the
tree of shapes proposed in [21], and also known as topo-
graphic map in [10]. Image simpliﬁcation or segmentation
can then be obtained by selecting meaningful level lines in
that tree. This subject has been investigated in the past
by [26, 6, 7]. In [20], the authors have proposed a tree sim-
pliﬁcation method for image simpliﬁcation purpose based
on the binary partition tree.

Classically, ﬁnding relevant contours is often tackled
using an energy-based approach.
It involves minimizing
a two-term-based energy functional of the form Eλs =
λsC + D, where C is the regularization term controlling
the regularity of contours, D is a data ﬁdelity term, and
λs is a parameter. A popular example is the seminal work
of [22]. Curve evolution methods are usually used to solve

46 rue Barrault, 75013 Paris, France

rue Voltaire, FR-94276 Le Kremlin-Bicˆetre, France

∗EPITA Research and Development Laboratory (LRDE), 14-16,
†Department of Signal and Image Processing, Telecom ParisTech,
‡Universit´e Paris-Est, Laboratoire d’Informatique Gaspard-
Monge (LIGM), A3SI, ESIEE Paris, Cit´e Descartes, BP 99,
FR-93162 Noisy-le-Grand, France
{yongchao.xu, thierry.geraud}@lrde.epita.fr,
E-mails:
l.najman@esiee.fr
The paper is under consideration at Pattern Recognition Letters.

this minimization problem. They have solid theoretical
foundations, yet they are often computational expensive.
Current trends in image simpliﬁcation and segmentation
are to ﬁnd a multiscale representation of the image rather
than a unique partition. There exist many works about
hierarchical segmentations such as the geodesic saliency of
watershed contours proposed in [25] and gpb-owt-ucm pro-
posed by [2] and references therein. Some authors propose
to minimize a two-term-based energy functional subordi-
nated to a given input hierarchy of segmentations, in order
to ﬁnd an optimal hierarchical image segmentations in the
sense of energy minimization. Examples are the works
of [16, 18]. Yet, the choice or the construction of the input
hierarchy of segmentations for these methods is an inter-
esting problem in itself. [27] compared diﬀerent choices of
morphological hierarchies for supervised segmentation.

In this paper we propose a novel hierarchical image sim-
pliﬁcation and segmentation based on minimization of an
energy functional (e.g., the piecewise-constant Mumford-
shah functional). The minimization is performed subor-
dinated to the shape space given by the tree of shapes, a
unique and equivalent image representation. The basis of
our proposal was exposed in our previous study in [38], in
which we proposed an eﬃcient greedy algorithm comput-
ing a meaningfully locally optimal solution of the energy
minimization problem. The basic idea is to take into ac-
count the meaningfulness of the set of level lines so that we
very quickly get a “good” (in the sense of getting a well-
simpliﬁed image while preserving the salient structures)
locally optimal solution. The current paper extends this

1

idea to hierarchical simpliﬁcation and segmentation. More
precisely, following the same principle but without ﬁxing
the parameter λs in the two-term-based energy, we com-
pute an attribute function that characterizes the persis-
tence of each shape under the energy minimization. Then
we compute a saliency map, a single image presenting the
complete hierarchical simpliﬁcations or segmentations. To
do so, we rely on the idea of hierarchy transformation via
extinction value proposed by [35] and on the framework of
tree-based shape space introduced in [40]. This scheme of
hierarchy transformation has been ﬁrst used in [39] for a
diﬀerent input hierarchy and attribute function. Related
algorithms were presented in [37]. The present paper ex-
tends on these ideas, focusing on the computation of an
attribute function related to energy minimization.

Note that although the tree of shapes (see Section 2.1) is
also a hierarchical image representation, it is very diﬀerent
from a hierarchy of segmentations (see Section 2.2). Each
cut of the tree of shapes is a subset of the image domain,
while each cut of the later one forms a partition of the im-
age domain (see [28]). This basic diﬀerence prohibits the
direct use of the classical works of ﬁnding optimal hierar-
chical segmentations by energy minimization to the tree
of shapes. In this sense, our approach can be seen as an
extension of the scale-set theory proposed in [16] to the
tree of shapes.

The main contributions of this current paper are: 1)
A novel hierarchical image simpliﬁcation and segmenta-
tion method based on energy minimization subordinated
to the tree of shapes; This extends the scale-set theory pro-
posed by [16] to the tree of shapes. Note that the current
work is quite diﬀerent from our previous work in [39] in
terms of input hierarchy and attribute function. In [39],
the input hierarchy is a hierarchy of segmentations, and
the attribute, inspired by [14], is a local measure of the in-
terest of merging two regions. 2) A detailed discussion of
the method compared with some related works. 3) Some
illustrations of the proposed method on color images, as
well as a quantitative evaluation of the method on a public
segmentation dataset. Note that our proposal is a general
framework. We have tested it with a very simple segmenta-
tion model in this paper. Despite its simplicity, we obtain
results that are competitive with the ones of some state-
of-the-art methods on the classical segmentation dataset
from [1]. In particular, they are on par with Gpb-owt-ucm
proposed in [2] on this dataset.

The rest of this paper is organized as follows: Some
background information is provided in Section 2. Section 3
is dedicated to depict the proposed method, followed by
some illustrations and experimental results in Section 4.
Section 5 compares the proposed method with some similar
works. We then conclude in Section 6.

2

Figure 1: An image (left) and its tree of shapes (right).

2 Background

2.1 The Tree of shapes
For any λ ∈ R or Z, the upper level sets Xλ and lower
level sets X λ of an image f : Ω → R or Z are respec-
tively deﬁned by Xλ(f ) = {p ∈ Ω | f (p) ≥ λ} and
X λ(f ) = {p ∈ Ω | f (p) ≤ λ}. Both upper and lower level
sets have a natural inclusion structure: ∀ λ1 ≤ λ2, Xλ1 ⊇
Xλ2 and X λ1 ⊆ X λ2 , which leads to two distinct and dual
representations of an image, the Max-tree and the Min-
tree.

Another tree has been introduced in [21] via the notion
of shapes. A shape is deﬁned as a connected component of
an upper or lower level set where its holes have been ﬁlled
in. Thanks to the inclusion relationship of both kinds of
level sets, the set of shapes gives a unique tree, called tree
of shapes. This tree is a self-dual, non-redundant, and
complete representation of an image. It is equivalent to
the input image in the sense that the image can be re-
constructed from the tree. And it is invariant to aﬃne
contrast changes. Such a tree also inherently embeds a
morphological scale-space (the parent of a node/shape is a
larger shape). An example on a synthetic image is depicted
in Fig. 1. Recently, an extension of the tree of shapes for
color images has been proposed by [9] through the inclu-
sion relationship between the shapes of its three grayscale
channels.

2.2 Hierarchy of image segmentations or

saliency maps

A hierarchy of image segmentation H is a multiscale rep-
resentation that consists of a set of nesting partitions from
ﬁne to coarse: H = {Pi | 0 ≤ i ≤ n,∀j, k, 0 ≤ j ≤ k ≤ n ⇒
Pj (cid:118) Pk}, where Pn is the partition {Ω} of Ω into a single
region, and P0 represents the ﬁnest partition of the image
f . Pj (cid:118) Pk implies that the partition Pj is ﬁner than Pk,
which means ∀ R ∈ Pj,∃ R(cid:48) ∈ Pk such that R ⊆ R(cid:48).

As a multiscale representation, a hierarchy of segmen-
tation satisﬁes the most fundamental principle for multi-
scale analysis: the causality principle presented by [19].
From this principle, for any couple of scales λs2 > λs1, the
“structures” found at scale λs2 should ﬁnd a “cause” at
scale λs1 . In the case of a hierarchy of segmentation, fol-
lowing the work of [16], the causality principle is applied

I,3E,0D,3A,0B,3C,2F,1G,1H,0ABDEA∪B∪CA∪B∪C∪D∪E∪FA∪B∪C∪D∪E∪F∪G∪H∪IG∪HG≤0≤2≤1≤0≤0≤3≥3≥3≥1to the edges associated to the set of partitions spanned by
H: for any pair of scales λs2 > λs1 , the boundaries of par-
tition Pλs2
are in a one-to-one mapping with a subset of
the boundaries of Pλs1
(their “cause”). The pair (H, λs)

is called an indexed hierarchy.

A useful representation of hierarchical image segmenta-
tions was originally introduced in [25] under the name of
saliency map. A saliency map is obtained by stacking a
family of hierarchical contours. This representation was
then rediscovered independently by [16] through the no-
tion of scale-set theory for visualization purposes, and it
is then popularized by [2] under the name of ultrametric
contour map for boundary extraction and comparing hi-
erarchies. It has been proved theoretically in [23] that a
hierarchy of segmentations is equivalent to a saliency map.
Roughly speaking, for a given indexed hierarchy (H, λ),
the corresponding saliency map can be obtained by weigh-
ing each contour of the image domain with the highest
value λs such that it appears in the boundaries of some
partition represented by the hierarchy H. The low level
(resp. upper level) of a hierarchy corresponds to weak
(resp.
strong) contours, and thus an over-segmentation
(resp. under-segmentation) can be obtained by threshold-
ing the saliency map with low (resp. high) value.

2.3 From shape-space ﬁltering to hierar-

chy of segmentations

The three morphological trees reviewed in Section 2.1 and
the hierarchies of segmentations reviewed in Section 2.2
have a tree structure. Each representation is composed
of a set of connected components C. Any two diﬀerent
elements Ci ∈ C, Cj ∈ C are either disjoint or nested:
∀ Ci ∈ C, Cj ∈ C, Ci ∩ Cj (cid:54)= ∅ ⇒ Ci ⊆ Cj or Cj ⊆ Ci.
This property leads to the deﬁnition of tree-based shape
space in [40]: a graph representation GC = (C, EC), where
each node of the graph represents a connected component
in the tree, and the edges EC are given by the inclusion
relationship between connected components in C. In [40],
we have proposed to ﬁlter this shape space by applying
some classical operators, notably connected operators on
GC. We have shown that this shape-space ﬁltering encom-
passes some classical connected operators, and introduces
two families of novel connected operators: shape-based
lower/upper leveling and shaping.

Instead of ﬁltering the shape space, another idea is to
consider each region of the shape space as a candidate re-
gion of a ﬁnal partition. For example, we weigh the shape
space by a quantitative meaningfulness measurement A.
Then each local minimum of the node-weighted shape
space is considered as a candidate region of a partition.
The importance of each local minimum (i.e., each region)
can be measured quantitatively by the extinction value E
proposed by [35]. Let ≺ be a strict total order on the set
of minima m1 ≺ m2 ≺ . . ., such that mi ≺ mi+1 when-
ever A(mi) < A(mi+1). Let CC be the lowest lower level
connected component (deﬁned on the shape space) that

3

Figure 2: Illustration of the extinction values E of three
minima. The order is A ≺ C ≺ B. B merges with C, C
merges with A.

contains both mi+1 and a minimum mj with j < (i + 1).
The extinction value for the minimum mi+1 is deﬁned as
the diﬀerence of level of CC and A(mi+1). An example
of extinction values for three minima is depicted in Fig 2.
We weigh the boundaries of the regions corresponding to
the local minima with the extinction values. This yields
a saliency map representing a hierarchical image simpliﬁ-
cation or segmentation. This scheme allows to transform
any hierarchical representation into a hierarchical segmen-
tation.
It has been ﬁrstly used in [39], where the input
hierarchy is a minimum spanning tree and the attribute is
computed locally inspired from the work of [14]. For the
sake of completeness, the algorithm [37] for the extinction-
based hierarchy transformation is presented in Section 3.4.

2.4 Energy-based simpliﬁcation and seg-

mentation

There exist several works of hierarchical image segmen-
tations based on energy minimization (see [16] and [18]).
A general formulation of these methods involves minimiz-
ing a two term-based energy functional of the form Eλs =
λsC + D. C is a regularization term, D is data ﬁdelity
term, and λs is a parameter. Let {R} = R1 (cid:116) ··· (cid:116) Rn be
a partition of the image domain. If the energy functional

can be written by Eλs = (cid:80)

(cid:0)λsC(Ri) + D(Ri)(cid:1),

Ri∈{R}

then Eλs is called an aﬃne separable energy functional.
Furthermore, if either the regularization term C decreases
or the data ﬁdelity term D increases, the energy Eλs is
multiscale aﬃne separable. A popular instance of such an
energy functional that we will use as an example through
this paper is the piecewise-constant Mumford-Shah func-
tional proposed by [22]. For an image f , it is given by

(cid:90)(cid:90)

Eλs (f, ∂{R}) =
(cid:82)(cid:82)

( ˜fi − f )2 dxdy + λs |∂{R}|,

{R}

(1)

f dxdy inside each region Ri∈ {R},
where ˜fi = 1|Ri|
∂{R} is the set of contour, and |·| denotes the cardinality.

Ri

ABCCBA3 Hierarchical

image simpliﬁca-
tion and segmentation via level
line selection

3.1 Main idea

The current proposal extends the method of image simpli-
ﬁcation by selecting salient level lines based on Mumford-
Shah energy functional minimization, which has been pre-
sented in a preliminary version of this study in [38]. We
review this non-hierarchical version in Section 3.2, using a
more general multiscale aﬃne separable energy.
It has
been shown in [38] that the non-hierarchical version of
the proposed method belongs to the class of morphologi-
cal shapings in the framework of shape-space ﬁltering. In
this current paper, we compute for each level line an at-
tribute function related to the energy’s regularization pa-
rameter λs, and use the idea of hierarchy transformation
based on extinction values and on a tree-based shape space
to achieve hierarchical image simpliﬁcation and segmenta-
tion. This is detailed in Section 3.3. Section 3.4 provide
algorithms for the whole process.

3.2

Image simpliﬁcation by salient level
line selection

For a given tree of shapes T composed of a set of shapes
{τi}, any two successive shapes of T are related by an
edge reﬂecting the inclusion relationship, also known as
the parenthood between nodes of the tree. This tree
structure T provides an associated partition of the image
{RT } = Rτ1 (cid:116)···(cid:116) Rτn , where Rτ = {p| p ∈ τ, p /∈ Ch(τ )}
with Ch(τ ) representing all the children of the shape τ .
We denote by Eλs (f,T ) the energy functional (see Sec-
tion 2.4) subordinated to the tree by considering its asso-
ciated partition {RT }. This energy minimization is given
by:

minT (cid:48) Eλs(f,T (cid:48)),

(2)
where T (cid:48) is a simpliﬁed version of T by removing some
shapes from T and by updating the parenthood relation-
ship.

The basic operation of the energy minimization problem
given by Eq. (??) is to remove the contours of some shapes
{τ} included in their corresponding parents {τp}, which
= Rτp ∪ Rτ for each shape
triggers the update of R(cid:48)
τ . The parent of its children τc1, . . . , τck should also be
updated to the τp. Fig. 3 shows an example of a such
merging operation.

τp

Observe that the minimization problem of Eq. (??) is a
combinatorial optimization. The computation of the op-
timum has an exponential complexity. Hence a greedy
algorithm is usually applied to compute a local optimum
instead of a global optimum (see also [4]). It iteratively re-
moves the shapes to decrease the energy functional. The

4

Figure 3: Suppressing the node τ makes the “region” Rτ
(covered with red oblique lines) merge with Rτp ; the result
(depicted in the right image) is a simpliﬁed image.

greedy algorithm stops when no other shape can be re-
moved that favors a decrease of the energy. The remov-
ability of a shape τ is decided by the sign of the energy
variation ∆Eτ
while τ is suppressed. For the multiscale
λs
aﬃne separable energy described in Section 2.4, ∆Eτ
is
λs
given by:

∆Eτ
λs

= D(R(cid:48)

τp

)−D(Rτ )−D(Rτp )−λs

(cid:0)C(Rτ )+C(Rτp )−C(R(cid:48)

τp

)(cid:1).

(3)
Taking the piecewise-constant Mumford-Shah functional
given by Eq. (??) as an energy example, and let S(f, Ri)
be the sum of value of all the pixels inside Ri, Then the
functional variation ∆Eτ
λs

is given by:

∆Eτ
λs

=

S2(f, Rτ )

|Rτ| +

S2(f, Rτp )

|Rτp| − S2(f, R(cid:48)
|R(cid:48)

τp

)

τp

| − λs|∂τ|.

If ∆Eτ
λs

(4)
is negative, which means the suppression of τ
decreases the functional, then we remove τ . According to
Eq. (??), the removability of a shape τ depends only on
Rτ and Rτp . As the suppression of the shape τ triggers the
update of Rτp , the removal of τ impacts also the remov-
ability of its parent, its children and siblings. So the order
of level line removal is critical. In [38], we proposed to ﬁx
the order by sorting the level lines in increasing order of a
quantitative meaningfulness attribute A (e.g., average of
gradient’s magnitude along the level line A∇).

Meaningful contours in natural images are usually well-
contrasted and smooth. Indeed, the minimization of en-
ergy functional in Eq (??) favors the removal of level lines
having small contrast (by data ﬁdelity term) or being com-
plex (by regularization term). So the shapes having small
(resp. great) meaningfulness attribute A are easier (resp.
more diﬃcult) to ﬁlter out under the energy minimization
process of Eq. (??). Consequently, the level line sorting
based on meaningfulness attribute A provides a reasonable
order to perform the level lines suppression that makes the
energy functional decrease. Indeed, initially, each region
Rτ has only several pixels. At the beginning, many “mean-
ingless” regions are removed, which forms more proper re-
gions in Eq. (??) for the “meaningful” regions. The re-
moval decisions for these “meaningful” regions based on
the sign of Eq. (??) are more robust.

3.3 Hierarchical salient level line selection

The parameter λs, in the multiscale aﬃne separable en-
ergy, controls the simpliﬁcation/segmentation degree for

τs2τs1τpτRτpτc1τc2Rττs2τs1τpτc1τc2Rτp=Rτp∪Rτ'Figure 4: Illustration of causality principle violation. Left:
input image; Middle and right: randomly colorized simpli-
ﬁed image with λs1 = 100 and respectively λs2 = 500.
The orange shape on top middle of the right image (sur-
rounded by a black circle) is preserved for λs2 = 500, while
it is removed for λs1 = 100 in the middle image.

the method described in Section 3.2, which is however not
hierarchical. Because some level line τ may be removed
with a parameter λs1, but preserved for a bigger λs2 > λs1.
This contradicts the causality principle for hierarchical im-
age simpliﬁcation/segmentation described in Section 2.2.
An example is given in Fig. 4. Note that the simpliﬁcation
algorithm of [4] is not hierarchical either.

Instead of ﬁxing the parameter λs in the energy func-
tional (e.g., λs in Eq (??)), we propose to compute an
individual λs for each shape of the tree following the same
principle of the energy minimization. For a given λs, the
removability of a shape τ is based on the sign of energy
variation ∆Eτ
in Eq. (??), which is a linear decreasing
λs
function w.r.t. λs (e.g., the Eq (??) for the piecewise-
constant Mumford-Shah functional). When λs is bigger
than some value λsmin , ∆Eτ
will be negative, which im-
λs
plies the removal of this shape decreases the energy func-
tional. Thus λsmin is a value of the transition for the re-
moval decision of the underlying shape. Let us denote this
value of transition as the attribute function Aλs, which is
given by:

Aλs (τ ) =

D(R(cid:48)
C(Rτ ) + C(Rτp ) − C(R(cid:48)

) − D(Rτ ) − D(Rτp )
)

τp

τp

,

(5)

For the piecewise-constant energy functional in Eq. (??),
it is given by:

(cid:1) /|∂τ|.

Aλs(τ ) =(cid:0) S2(f, Rτ )

|Rτ| +

S2(f, Rτp )

|Rτp| − S2(f, R(cid:48)
|
|R(cid:48)

τp

τp

)

(6)
Note that for a given shape τ , the attribute function
Aλs (τ ) deﬁned in Eq (??) depends on Rτ and Rτp , which
means Aλs(τ ) is decided by the shape τ itself, its parent,
its siblings, and its children. Because the attribute func-
tion Aλs is computed under the hypothesis that the shape
τ under scrutiny is suppressed, we also need to update Rτp ,
and update the parenthood relationship for its children to
its parent. These update operations will also aﬀect the
computation of Aλs for the parent, children and siblings
of τ . So the computation order is again important. We
follow the same principle as described in Section 3.2 to
compute Aλs , which is detailed as below:
step 1: Compute Aλs for each shape τ ∈ T supposing
that only the shape under scrutiny is removed, and sort

5

the set of shapes {τ | τ ∈ T } in increasing order of shape
meaningfulness indicated by an attribute A (e.g., A∇).
step 2: Propagate the sorted shapes in increasing order,
and remove the shape one by one. Compute the new value
Aλs for the underlying shape τ , and update it if the value
is greater than the older one. Update also the parenthood
relationship and the corresponding information for Rτp .
This attribute function Aλs is related to the minimiza-
tion of the energy functional. It measures the persistence
of a shape to be removed under the minimization problem
of Eq (??). A bigger Aλs(τ ) means that it is more diﬃcult
to remove the shape τ . Thus the attribute function Aλs
is also some kind of quantitative meaningfulness deduced
from the energy minimization.
We use the inverse of the attribute Aλs described above
as the ﬁnal attribute function: A↓
Aλs (τ ). The local minima of the shape space weighted
by this attribute function correspond to a set of candidate
salient level lines. We make use of the scheme of hierar-
chy transformation described in Section 2.3 to compute a
saliency map ME . This saliency map ME represents hier-
archical result of level line selections. Each thresholding of
this map ME selects salient (of certain degree) level lines
from which a simpliﬁed image can be reconstructed.

(cid:0)Aλs(τ(cid:48))(cid:1)−

(τ ) = max
τ(cid:48)∈T

λs

An example of the proposed scheme on a synthetic im-
age is illustrated in Fig. 5. The input image in Fig. 5 (a)
is both blurred and noisy. This blurring is also visible
in Fig. 5 (b) that illustrates the evolution of the average
of gradient’s magnitude A∇ along the contours of shapes
starting from regions inside the triangle, pentagon, and
square regions to the root of the tree. The evolution of the
initial values of the Attribute Aλs obtained at step 1 on
the same branches of the tree are provided in Fig. 5 (c). It
is not surprising that those initial values Aλs are not eﬀec-
tive to measure the meaningfulness of the shapes: indeed,
this is due to the very small size of each region in {RT }.
The evolution of the ﬁnal values of the attribute Aλs (of
step 2) is depicted in Fig. 5 (d). We can see that the sig-
niﬁcant regions are highlighted by Aλs. This experiment
also demonstrates the relevance of the increasing order of
average of gradient’s magnitude along the contour A∇ as
a criterion to update the value of Aλs. The saliency map
ME using the attribute Aλs and one of the possible seg-
mentations that can be obtaiend by thresholding ME are
depicted in Fig. 5. (e) and (f).

3.4 Implementation

The proposed method is composed of four main steps:
1) Construction of tree of shapes; 2) Computation of at-
tribute function Aλs; 3) Computation of extinction values
E; 4) Computation of saliency map ME .

For the tree construction, we use an immersion algo-
rithm based on the union-ﬁnd process proposed by [34].
The algorithm starts by sorting the pixels in root-to-leaf
order. Then a union-ﬁnd process propagates the pixels in

(a) Input image.

(b) Gradient’s magnitude
A∇.

(c) Initial Aλs of step 1.

(d) Final Aλs of step 2.

(e) Saliency map ME .

(f) A segmentation.

Figure 5: An example of the proposed scheme on a syn-
thetic image. (b-d): Evolution of attribute value starting
from leaf regions (left end of each curve) inside the triangle
(red), pentagon (green), and squares (blue) to the root of
the tree (right end of each curve). Note that the length of
these three branches is diﬀerent (it explains that the root
node appears at diﬀerent abscissas.)

leaf-to-root order to construct the tree, followed by a sec-
ond propagation in root-to-leaf order to canonize the tree.
For further details, we refer the reader to [24, 5, 8]. Dur-
ing the tree construction, some useful information A for
computing the attribute function Aλs can be updated in-
crementally: 1) Information accumulated on region, such
as the area A and the sum of gray levels Sf ; 2) Informa-
tion accumulated on contour, such as the contour length L
and the sum of gradient’s magnitude along the contour S∇.
Note that the computation of information on contour relies
on the use of Khalimsky’s grid proposed by [17]. A region
boundary is composed of a set of elements materialized by
1-faces and 0-faces that lie between pixels (2-faces). An
example is depicted in Fig. 6. We refer the reader to [37]
for more details about these eﬃcient information compu-
tations.

Once we have the tree structure T represented by the
parenthood image parent, and the corresponding infor-
mation A (e.g., A, Sf , L, and S∇) for each node of the
tree, we are able to compute the attribute function Aλs.
The computation of this attribute function Aλs is detailed
in Algorithm 1. We start by computing the initial val-
ues of attribute AλS according to Eq (??) by considering
that only the underlying shape is removed (see line 11).
Then we sort the shapes by increasing order of the aver-
age of gradient’s magnitude along the shape contour A∇.

6

Figure 6: Materialization of pixels with 0-faces (blue
disks), 1-faces (green strips), and 2-faces (red squares).
The original pixels are the 2-faces, the boundaries are ma-
terialized with 0-faces and 1-faces. The contour of the cyan
region is composed of black 1-faces and 0-faces.

λs

We process the shapes in this order. For each underlying
shape τ , we compute a new value according to Eq (??) (see
line 15), and update the value Aλs (τ ) if the new value is
greater. Then we remove the shape τ from the tree and
update the tree structure as well as the corresponding in-
formation.
The third step is to compute the extinction values E for
the local minima of the tree-based shape space weighted by
the attribute A↓
. This is achieved thanks to a Min-tree
representation T T constructed on the tree-based shape
space. The algorithm is described in Algorithm 2. The
image original min tracks the smallest local minimum in-
side a lower level connected component CC of the tree-
based shape space. For each local minimum shape τ , the
lowest CC that contains τ and a smaller minimum is the
lowest ancestor node whose smallest local minimum shape
is diﬀerent from τ .
To compute the ﬁnal saliency map ME based on the
extinction value, we weigh the boundaries (composed of
1-faces and 0-faces in the Khalimsky’s grid) of each shape
by the corresponding extinction value E. More precisely,
we weigh each 1-face e (resp. 0-face o) by the maximal
extinction value of the shapes whose boundaries contain
e (resp. o). The algorithm is given in Algorithm 3.
It
relies on two images appear and vanish deﬁned on the
1-faces that are computed during the tree construction.
The value appear (e) encodes the smallest region Na in the
tree whose boundary contains the 1-face e, while vanish(e)
denotes the smallest region Nv that contains the 1-face e
inside it.

4

Illustrations and experiments

In this section, we illustrate our proposed general frame-
work with a simple segmentation model:
piecewise-
constant Mumford-Shah model. Using some more evolved
energy functional will be one of our future work. For
generic natural images, contours of signiﬁcant objects usu-
ally coincide with segments of level lines. Our proposed
method yields a hierarchical simpliﬁcation rather than a
hierarchical segmentation. So only qualitative illustrations
are depicted in Section 4.1 for some images taken from the
BSDS500 dataset introduced in [2]. For the Weizmann

100170210180230156246810121416182022020406080100120140160180TrianglePentogonSquaresbacde00.050.100.150.200.250.300.350.400.45020406080100120140160180TrianglePentogonSquaresbacde01234567bacdeTrianglePentogonSquares020406080100120140160180x104cdeba3

4

6

7

8

1 COMPUTE ATTRIBUTE(parent, T , A)
2 for all τ ∈ T do

AR
Sf,R

9 for all τ ∈ T do

5 for all τ ∈ T do

AR(τ ) ← A(τ ), Sf,R(τ ) ← Sf (τ );
if τ (cid:54)= parent(τ ) then Ch(parent(τ )).insert(τ );
if τ (cid:54)= parent(τ ) then

(cid:0)parent(τ )(cid:1) ← AR(parent(cid:0)τ )(cid:1) − A(τ );
(cid:0)parent(τ )(cid:1) ← Sf,R(parent(cid:0)τ )(cid:1) − Sf (τ );
(cid:1)/L(τ );
(cid:1)/L(τ );

A∇(τ ) ← S∇(τ )/L(τ ), τp ← parent(τ );
(cid:0) S2
Aλs (τ ) ←
AR(τp) − (Sf,R(τp)+Sf,R(τ ))2
f,R(τ )
AR(τ ) +
λt ←(cid:0) S2

AR(τp) − (Sf,R(τp)+Sf,R(τ ))2

12 RT ← SORT NODES(T , A∇)
13 for i ← 0 to NT do
τ ← RT (i), τp ← parent(τ );

f,R(τ )
AR(τ ) +

AR(τp)+AR(τ )

AR(τp)+AR(τ )

S2

f,R(τp)

S2

f,R(τp)

10

11

14

15

16

17

18
19

20

21

22

if λt > Aλs (τ ) then Aλs(τ ) ← λt;
Ch(τp).remove(τ );
for all τc ∈ Ch(τ ) do
parent(τc) ← τp;
Ch(τp).insert(τc);

AR(τp) ← AR(τp) + AR(τ );
Sf,R(τp) ← Sf,R(τp) + Sf,R(τ );

23 return Aλs
Algorithm 1: Computation of attribute function Aλs.
During the tree computation, we also compute four at-
tribute information A: region size A, region’s contour
length L, sum of gray level Sf inside the region, and sum
of gradient’s magnitude along the region contour S∇.

segmentation database proposed by [1], the objects’ con-
tours coincide with almost full level lines. Our method
provides a hierarchical segmentation. Quantitative results
using the associated evaluation framework are depicted in
Section 4.2.

4.1 Hierarchical

color

image

pre-

segmentation

In Fig. 7, we test our method on color images in the seg-
mentation evaluation database proposed in [1]. Each im-
age contains two objects to be segmented. We use the
color tree of shapes proposed by [9], where the input im-
age f in Eq (??) is a color image. A high parameter value
λs = 8000 is used, and the grain ﬁlter proposed in [21] is
applied to get rid of too tiny shapes (e.g., smaller than 10
pixels). Less than 100 level lines are selected, which results
in a ratio of level line selection around 1157. These se-
lected level lines form less than 200 regions in each image.
The simpliﬁed images illustrated in Fig. 7 are obtained
by taking the average color inside each region, where the
boundaries between salient regions remain intact. Find-
ing an actual segmentation becomes a lot easier with such
a pre-segmentation. The extinction-based saliency maps
ME using the attribute A↓
are depicted on the bottom of
this ﬁgure. They represent hierarchical pre-segmentations.
Some illustrations of the extinction-based saliency map

λs

7

5

6

7
8

9
10

11

1 COMPUTE EXTINCTION VALUE(T , A)
2 (parentT ,RT ) ← COMPUTE TREE(A);
3 for all τ ∈ T do original min(τ ) ← undef;
4 for i ← 0 to NT do

τ ← RT (i), τp ← parentT (τ );
if original min(τ ) = undef then
original min(τ ) = τ ;
if original min(τp) = undef then

else

original min(τp) ← original min(τ );
if A(original min(τp)) > A(original min(τ ))
then

original min(τp) ← original min(τ );

else

13
14
15
16

if τ is not a local minimum then

12 for all τ ∈ T do
E(τ ) ← 0;
τp ← parentT (τ );
while
original min(τp) = τ & τp (cid:54)= parentT (τp) do
τp ← (parentT (τp));
E(τ ) ← A(τp) − A(τ );

17

18

19

20 return E

Algorithm 2: Computation of extinction values E on a
tree-based shape space weighted by an attribute A. The
image original min tracks the smallest local minimum
shape inside a connected component of T T . Note that
parentT encodes the Min-tree T T constructed on the
shape space.

ME applied on images in the dataset of BSDS500 [2] are
also shown in Fig. 8. Again, the input image f is a color
image, and the color tree of shapes is used. As shown
in Fig. 8, meaningful level lines are highlighted in ME
employing the attribute A↓
. Hierarchical image sim-
pliﬁcation results can then be obtained by thresholding
ME . The saliency maps for all the images in the dataset
of BSDS500 is available on http://publications.lrde.
epita.fr/xu.hierarchymsll.

λs

We have also tested our method on some cellular images,
where the method is applied on the color input image f . As
illustrated in Fig. 9, the cellular image is strongly simpli-
ﬁed, which almost leads to a uniform background. Finding
an actual cellular segmentation result would become much
easier.

4.2 Evaluation in context of segmentation

We have also evaluated our hierarchical image simpliﬁca-
tions in context of segmentation on Weizmann segmenta-
tion evaluation database in [1]. For the 100 images con-
taining 2 objects in this database (See Fig. 7 for several
examples), the saliency maps are thresholded with a ﬁxed
thresholding value to yield a partition result. And we
ﬁlter out the regions whose area is less than 100 pixels.
Note that, in order to perform a fair comparison with the
state-of-the art, the saliency maps are constructed using
grayscale tree of shapes computed by [15] on grayscale ver-
sions of the input images f . We performed two tests as

(a) Input image.

(b) Saliency map.

(c) Slightly simpliﬁed.

(d) Moderately simpli-
ﬁed.

(e) Strongly simpliﬁed.

Figure 9: Illustration of the proposed hierarchical pre-segmentations on a cellular image.

← λM

s − Aλs(τ );

λs

);

λs

s ← 0;

s ← max(cid:0)λM

s ,Aλs (τ )(cid:1);

1 COMPUTE SALIENCY MAP(f )
2 (parent,T ,A) ← COMPUTE TREE(f);
3 Aλs ← COMPUTE ATTRIBUTE(parent, T , A);
4 λM
5 for all τ ∈ T do λM
6 for all τ ∈ T do A↓
7 E ← COMPUTE EXTINCTION VALUE(T ,A↓
8 for all 1-face e do ME (e) ← 0;
9 for all e do
10
11
12

ME (e) ← max(cid:0)E(Na),ME (e)(cid:1),
max(cid:0)ME (e1),ME (e2),ME (e3),ME (e4)(cid:1);

Na ← appear(e), Nv ← vanish(e);
while Na (cid:54)= Nv do

13 for all 0-face o do
14 ME (o) ←
15 return ME
Algorithm 3: Computation of saliency map ME repre-
senting a hierarchical result of level line selections. The
1-faces e1, e2, e3, e4 are the 1-faces adjacent to o.

Na ← parent(Na);

presented in [1] based on F-measure and number of frag-
ments. For a segmentation Seg and a ground truth seg-
mentation of the object GT, the F-measure is deﬁned by
F = 2 × precision × recall/(precision + recall), where
precision = |Seg ∩ GT|/|Seg|, recall = |Seg ∩ GT|/|GT|.
The number of fragments is the number of regions selected
from a partition to form the object segmentation result
Seg.

In the ﬁrst test, for each foreground object, we select
the segment that ﬁts it the best based on F-measure score.
The results of this single segment coverage test is depicted
in Table 1 (See [1] for implementation details on the set-
tings for the other methods).
In this test, our method
achieves F-measure score on par with the state-of-the-art
methods, especially when replacing, in the attribute A∇,
the classical grayscale gradient with the (learned) gradi-
ent computed (on the grayscale input image f ) by [12]
(see “Our2”). By using another gradient, we change the
order in which the nodes of the tree are processed; thus
this result highlights the importance of the sorting step in
our algorithm. In Table 1, note that Gpb-owt-ucm with-

8

Figure 7: Some pre-segmentation results obtained with our
proposed method on the segmentation evaluation database
in [1]. Top: input images; Middle: pre-segmentations ob-
tained with the simpliﬁcation method; Bottom:
inverted
saliency maps for hierarchical simpliﬁcations.

out texture denotes the method of Gpb-owt-ucm computed
without taking into account the texture information in the
Gpb part. More precisely, in this case, the Gpb is com-
puted using only brightness and color gradients. Note also
that our method does not explicitely use any texture in-
formation either.

In the second test, a combination of segments whose area
overlaps considerably the foreground objects is utilized to
assess the performance. For each union of segments, we
measure the F-measure score and the number of segments
composing it. This test is a compromise between good
F-measure and low number of fragments. The results of
this fragmentation test is given in Table 2.
In this test
the averaged F-measure of diﬀerent methods is fairly sim-
ilar. However, our method, as a pre-segmentation method
without using any texture information has a relatively high
number of fragments.

The saliency maps for these images containing two ob-
jects in the Weizmann dataset is available on http://
publications.lrde.epita.fr/xu.hierarchymsll.

Table 2: Fragmented coverage test results for the two objects dataset proposed by [1]: compromise between good F-
measure and low number of fragments. Our results are comparable to the state-of-the-art. “Our2” stands for our method
with the attribute A∇ using the gradient computed by [12].

Method

SWA in [31]

Our2

Method in [1]
N-Cuts in [32]

Gpb reported in [1]

Our

Gpb-owt-ucm in [2]

Gpb-owt-ucm without texture

MeanShift in [11]

Averaged

Larger object

Smaller object

F-measure #fragments F-measure #fragments F-measure #fragments

0.88
0.86
0.85
0.84
0.84
0.83
0.82
0.81
0.78

3.13
2.40
1.67
2.64
2.95
3.16
1.57
2.72
3.65

0.91
0.85
0.87
0.88
0.87
0.85
0.84
0.82
0.85

3.88
3.00
2.00
3.34
3.60
4.10
1.79
3.32
4.49

0.84
0.86
0.84
0.80
0.81
0.81
0.81
0.80
0.71

2.37
1.81
1.33
1.93
2.30
2.23
1.35
2.12
2.81

Table 1: Results of single segment coverage test using F-
measure on the two objects dataset in [1]. “Our2” stands
for our method with the attribute A∇ using the gradient
computed by [12].

Method

Our2

Gpb-owt-ucm

Our

Gpb-owt-ucm without texture

Gpb in [1]

Method in [1]
SWA in [31]
MeanShift

N-Cuts

Average

0.80
0.79
0.77
0.76
0.72
0.68
0.66
0.61
0.58

Larger
0.79
0.80
0.77
0.76
0.70
0.70
0.74
0.65
0.66

Smaller

0.81
0.78
0.76
0.75
0.75
0.65
0.57
0.58
0.49

5 Comparison with similar works

The tree of shapes has been widely used in connected op-
erators, ﬁltering tools that act by merging ﬂat zones for
image simpliﬁcation and segmentation. The simpliﬁcation
and segmentation relies on relevant shapes extraction (i.e.,
salient level lines), usually achieved by tree ﬁltering based
on some attribute function. A detailed review of tree ﬁlter-
ing strategies can be found in [30]. In all these strategies,
the attribute function A characterizing each node plays
a very important role in connected ﬁltering. The classical
connected operators make ﬁltering decisions based only on
attribute function itself or the inclusion relationship of the
tree (e.g., [40]). They are usually performed by removing
the nodes whose attributes are lower than a given thresh-
old. The method we propose in this paper combines this
idea of classical connected operators with the energy min-
imization problem of Eq (??).
It also makes use of the
spatial information of the original image from which the
tree is constructed. This might give more robust ﬁltering
decision.

In this paper, we focus particularly on hierarchical
relevant shapes selection by minimizing some multiscale

s and λ−

aﬃne separable energy functional (e.g., piecewise-constant
Mumford-Shah functional). The closely related work is the
one in [16], where the authors proposed the scale-set the-
ory, including an eﬃcient greedy algorithm to minimize
this kind of energy on a hierarchy of segmentations. More
precisely, the authors use dynamic programming to eﬃ-
ciently compute two scale parameters λ+
s for each
s (resp., λ−
region R of the input hierarchy H, where λ+
s )
corresponds to the smallest parameter λs such that the
region R ∈ H belongs (resp.. does not belong) to the opti-
mal solution of segmentation by minimizing Eλs, we have
λ−
s (R(cid:48)). There may exist some regions
s (R) = min
R such that λ−
s (R), which implies that the region
R ∈ H does not belong to any optimal cut of H by min-
imizing the energy Eλs. One removes these regions from
the hierarchy H and updates the parenthood relationship
which yields a hierarchy H(cid:48), a hierarchy of global optimal
segmentations on the input hierarchy. This work has been
continued and extended by [18]. These methods work on
an input hierarchy of segmentations, which is very diﬀer-
ent from the tree of shapes (a natural and equivalent image
representation). In this sense, our method can be seen as
the extension of scale-set theory to the tree of shapes.

R(cid:48)∈H,R⊂R(cid:48)λ+
s (R) ≤ λ+

Another related work is the one in [4].

It also selects
meaningful level lines for image simpliﬁcation and segmen-
tation by minimizing the piecewise-constant Mumford-
Shah functional. For this method, at each step the level
line is selected which inﬂicts the largest decrease of func-
tional. As a consequence, the iterative process of [4] re-
quires not only computing a lot of information to be able to
update the functional after each level line suppression, but
also to ﬁnd at each step, among all remaining level lines,
the one candidate to the next removal. Consequently, the
optimization process has a O(N 2T ) time complexity w.r.t.
the number of nodes NT of the tree. A heap-based imple-
mentation may improve the time complexity, but since at
each removal, one has to update the corresponding energy
variation for its children, parent, siblings, maintaining the
heap structure is a costly process. In practice, the gain us-

9

Table 3: Comparison of computation times on seven clas-
sical images. The size for image “House” and “Camera”
is 256 × 256, and 512 × 512 for the other images.

Image

Depth #Nodes

House
Camera

Lena

Peppers

Boat

Barbara
Mandrill

126
126
141
176
255
131
185

23588
24150
84699
97934
100518
106285
153029

Time (s)
[4]
4.11
4.19
27.77
48.18
87.24
51.87
200.22

Our
0.22
0.23
0.92
0.93
0.94
0.99
1.34

It is worth noticing that the minimization of Mumford-
Shah-like functional has also been applied to shape analy-
sis in [33]. It consists of adding a non-local term, which is
the squared average of the ﬁeld in the energy functional.
Its minimization tends to form negative ﬁeld values on
narrow or small parts as well as on protrusions, and posi-
tive ﬁeld values on central part(s) of the input shape. The
negative and positive regions inside the input shape yield
some saddle points at which a crossing of a level curve oc-
curs. This leads to a binary partition hierarchy Hb of the
shape. Then a probability measure based on the obtained
ﬁeld values inside the shape is assigned to each node of
the partition hierarchy Hb. A set of hierarchical represen-
tations of the shape is obtained by removing some nodes
from Hb and update the parenthood relationship. Each
candidate hierarchical representation is assigned with a
saliency measure given by the products of the probability
measure of the removed nodes. These hierarchical repre-
sentations of the shape associated with the global saliency
are used to analyze the shape. Our proposal is diﬀerent
from this framework in terms of the use of energy mini-
mization. In [33], the energy minimization is used to cre-
ate an image with negative and positive regions for a given
shape. Then one constructs a binary hierarchy of parti-
tions of the created image via its saddle points, and weighs
each node based on the obtained image values. In our case,
the energy minimization is performed on an input image
subordinated to its hierarchical representation by the tree
of shapes. This yields a quantitative meaningfulness mea-
sure for each node of the tree of shapes.

6 Conclusion

In this paper, we have presented an eﬃcient approach of
hierarchical image simpliﬁcation and segmentation based
on minimizing some multiscale separable energy functional
on the tree of shapes, a unique and equivalent image rep-
resentation. It relies on the idea of hierarchy transforma-
tion based on extinction values and on a tree-based shape
space to compute a saliency map representing the ﬁnal
hierarchical image simpliﬁcation and segmentation. The

Figure 8: Illustration of the hierarchical image simpliﬁca-
tion using the attribute function A↓
, applied on some
images from the dataset of BSDS500 proposed by [2].
From top to bottom: input images; inverted saliency maps;
slight simpliﬁcation; moderate simpliﬁcation; strong sim-
pliﬁcation.

λs

ing heap-based implementation is relatively insigniﬁcant.
Hence [4] is computationally expensive. We propose to ﬁx
that issue thanks to a reasonable ordering of level lines
based on their quantitative meaningfulness measurement
A. The time complexity of our optimization process is lin-
ear w.r.t. the number of nodes NT . We have implemented
the method of [4] using the same tree construction algo-
rithm and the same data structure based on heap. We
have compared the running time on 7 classic images on
a regular PC station. The comparison is detailed in Ta-
ble. 3. Our proposal is signiﬁcantly faster than that of [4].
Our approach is almost linear w.r.t. the number of nodes
in the tree. Yet, the method of [4] seems to depend also
on the depth of the tree. In [4], the authors proposed ap-
plying the simpliﬁcation scheme successively with a set of
augmenting parameters λs so that to construct the input
hierarchy. Then they employed the scheme of scale-set the-
ory proposed by [16] on the obtained hierarchy to achieve
a ﬁnal hierarchy of optimal segmentations.
In our case,
rather than using a ﬁxed parameter λs or a set of ﬁxed
parameters, we propose to assign a measure related to λs
to each shape as an attribute function. Then we use the
hierarchy transformation (reviewed in Section 2.3) based
on extinction values and on a tree-based shape space to
compute a hierarchical salient level lines selection.

10

salient structures in images are highlighted in this saliency
map. A simpliﬁed image with preservation of salient struc-
tures can be obtained by thresholding the saliency map.
Some qualitative illustrations and quantitative evaluation
in context of image segmentation on a public segmenta-
tion dataset demonstrate the eﬃciency of the proposed
method. A binary executable of the proposed approach is
available on http://publications.lrde.epita.fr/xu.
hierarchymsll.

In the future, we would like to explore some applications
employing a strongly simpliﬁed image as pre-processing
step. We believe that this could be useful for analyz-
ing high-resolution satellite images and images with texts,
where the contours of meaningful objects in images usu-
ally coincide with full level lines. Besides, as advocated
in Table 1 for Gpb-owt-ucm, the texture provides impor-
tant information for image segmentation. An interesting
perspective is to incorporate texture information in our
proposed framework. Since the tree of shapes is a natural
representation of the input image, a possible way to in-
tegrate texture information might consist in replacing the
original image with a new grayscale image incorporating
texture features. Although this is not directly appicable
to our case, probability map incorporating region features,
such as proposed in [3], are worth exploring. Computing
the tree of shapes of such probability maps has already
been proved valuable (see
In another direction,
it would be interesting to investigate some other energy
functionals for some speciﬁc tasks. Examples are the rate
distortion optimization used in image or video compression
coding system (see [29, 4]) and the energy based on spec-
tral unmixing used for hyperspectral image segmentation
in [36]. The energy functionals in these works are aﬃne
separable, which straightforwardly allows to use them in
our proposed framework. Last, but not the least, given
that using a learned gradient improves the results, a major
research avenue is to combine our approach with learning
techniques.

[13]).

References

[1] S. Alpert, M. Galun, A. Brandt, and R. Basri. Im-
age segmentation by probabilistic bottom-up aggrega-
tion and cue integration. IEEE Transactions on Pat-
tern Analysis and Machine Intelligence, 34(2):315–
327, 2012.

[2] P. Arbelaez, M. Maire, C. Fowlkes, and J. Malik. Con-
tour detection and hierarchical image segmentation.
IEEE Transactions on Pattern Analysis and Machine
Intelligence, 33(5):898–916, 2011.

[3] X. Bai and G. Sapiro. Geodesic matting: A frame-
work for fast interactive image and video segmenta-
tion and matting. International Journal of Computer
Vision, 82(2):113–132, 2009.

11

[4] C. Ballester, V. Caselles, L. Igual, and L. Garrido.
Level lines selection with variational models for seg-
mentation and encoding. Journal of Mathematical
Imaging and Vision, 27:5–27, 2007.

[5] C. Berger, T. G´eraud, R. Levillain, N. Widynski,
A. Baillard, and E. Bertin. Eﬀective component tree
computation with application to pattern recognition
in astronomical imaging. In IEEE International Con-
ference on Image Processing, volume 4, pages 41–44,
2007.

[6] F. Cao, P. Mus´e, and F. Sur. Extracting meaningful
curves from images. Journal of Mathematical Imaging
and Vision, 22(2-3):159–181, 2005.

[7] J. Cardelino, G. Randall, M. Bertalmio,

and
V. Caselles. Region based segmentation using the tree
of shapes. In IEEE International Conference on Im-
age Processing, pages 2421–2424, 2006.

[8] E. Carlinet and T. G´eraud. A comparative review
of component tree computation algorithms.
IEEE
Transactions on Image Processing, 23(9):3885–3895,
Sept. 2014.

[9] E. Carlinet and T. G´eraud. MToS: A tree of shapes
for multivariate images. IEEE Transactions on Image
Processing, 24(12):5330–5342, 2015.

[10] V. Caselles, B. Coll, and J.-M. Morel. Topographic
maps and local contrast changes in natural images.
International Journal of Computer Vision, 33(1):5–
27, 1999.

[11] D. Comaniciu and P. Meer. Mean shift: A robust ap-
proach toward feature space analysis. IEEE Transac-
tions on Pattern Analysis and Machine Intelligence,
24(5):603–619, 2002.

[12] P. Doll´ar and C. L. Zitnick. Fast edge detection us-
ing structured forests. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 37(8):1558–1570,
2015.

[13] A. Dubrovina, R. Hershkovitz, and R. Kimmel. Im-
age editing using level set trees.
In IEEE Interna-
tional Conference on Image Processing, pages 4442–
4446, 2014.

[14] P. Felzenszwalb and D. P. Huttenlocher. Eﬃcient
graph-based image segmentation. International Jour-
nal of Computer Vision, 59(2):167–181, sep 2004.

[15] T. G´eraud, E. Carlinet, S. Crozet, and L. Najman. A
quasi-linear algorithm to compute the tree of shapes
of nD images. In International Symposium on Math-
ematical Morphology, pages 98–110, 2013.

[16] L. Guigues, J. P. Cocquerez, and H. Le Men. Scale-
sets image analysis. International Journal of Com-
puter Vision, 68(3):289–317, 2006.

[17] E. Khalimsky, R. Kopperman, and P. R Meyer. Com-
puter graphics and connected topologies on ﬁnite or-

[33] S. Tari and M. Genctav. From a non-local ambrosio-
tortorelli phase ﬁeld to a randomized part hierarchy
tree. Journal of mathematical imaging and vision,
49(1):69–86, 2014.

[34] R. Tarjan. Eﬃciency of a good but not linear set union
algorithm. Journal of the ACM, 22(2):215–225, 1975.

[35] C. Vachier and F. Meyer. Extinction value: a new
measurement of persistence. In IEEE Workshop on
Nonlinear Signal and Image Processing, volume 1,
pages 254–257, 1995.

[36] M. A. Veganzones, G. Tochon, M. Dalla-Mura, A. J.
Plaza, and J. Chanussot. Hyperspectral image seg-
mentation using a new spectral unmixing-based bi-
nary partition tree representation.
IEEE Transac-
tions on Image Processing, 23(8):3574–3589, 2014.

[37] Y. Xu, E. Carlinet, T. G´eraud, and L. Najman. Ef-
ﬁcient computation of attributes and saliency maps
on tree-based image representations.
In Interna-
tional Symposium on Mathematical Morphology, vol-
ume 9082 of LNCS, pages 693–704. Springer, 2015.

[38] Y. Xu, T. G´eraud, and L. Najman. Salient level lines
selection using the mumford-shah functional. In IEEE
International Conference on Image Processing, pages
1227–1231, 2013.

[39] Y. Xu, T. G´eraud, and L. Najman. Two applications
of shape-based morphology: Blood vessels segmenta-
tion and a generalization of constrained connectivity.
In International Symposium on Mathematical Mor-
phology, pages 390–401, 2013.

[40] Y. Xu, T. G´eraud, and L. Najman. Connected ﬁlter-
ing on tree-based shape-spaces. IEEE Transactions
on Pattern Analysis and Machine Intelligence, 2015.
to appear.

dered sets. Topology and its Applications, 36(1):1–17,
1990.

[18] B. R. Kiran and J. Serra. Global-local optimizations
by hierarchical cuts and climbing energies. Pattern
Recognition, 47(1):12–24, 2014.

[19] J. J. Koenderink. The structure of images. Biological

Cybernetics, 50(5):363–370, 1984.

[20] H. Lu, J. C. Woods, and M. Ghanbari. Binary par-
tition tree analysis based on region evolution and its
application to tree simpliﬁcation. IEEE Transactions
on Image Processing, 16(4):1131–1138, 2007.

[21] P. Monasse and F. Guichard. Fast computation of a
contrast-invariant image representation. IEEE Trans-
actions on Image Processing, 9(5):860–872, 2000.

[22] D. Mumford and J. Shah. Optimal approximations
by piecewise smooth functions and associated varia-
tional problems. Communications on Pure and Ap-
plied Mathematics, 42(5):577–685, 1989.

[23] L. Najman. On the equivalence between hierarchical
segmentations and ultrametric watersheds. Journal of
Mathematical Imaging and Vision, 40:231–247, 2011.

[24] L. Najman and M. Couprie. Building the component
tree in quasi-linear time. IEEE Transactions on Im-
age Processing, 15(11):3531–3539, 2006.

[25] L. Najman and M. Schmitt. Geodesic saliency of wa-
tershed contours and hierarchical segmentation. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence, 18(12):1163–1173, 1996.

[26] A. Pardo. Semantic image segmentation using mor-
In IEEE International Conference

phological tools.
on Image Processing, pages 745–748, 2002.

[27] B. Perret, J. Cousty, J. C. R. Ura, and S. J. F.
Guimar˜aes. Evaluation of morphological hierarchies
for supervised segmentation.
In International Sym-
posium on Mathematical Morphology, pages 39–50.
Springer, 2015.

[28] C. Ronse. Ordering partial partitions for image seg-
mentation and ﬁltering: Merging, creating and in-
ﬂating blocks. Journal of Mathematical Imaging and
Vision, 49(1):202–233, 2014.

[29] P. Salembier and L. Garrido. Binary partition tree as
an eﬃcient representation for image processing, seg-
mentation and information retrieval. IEEE Transac-
tions on Image Processing, 9(4):561–576, 2000.

[30] P. Salembier and M. H. Wilkinson. Connected op-
erators. Signal Processing Magazine, 26(6):136–157,
2009.

[31] E. Sharon, M. Galun, D. Sharon, R. Basri, and
A. Brandt. Hierarchy and adaptivity in segmenting
visual scenes. Nature, 442(7104):810–813, 2006.

[32] J. Shi and J. Malik. Normalized cuts and image seg-
mentation. IEEE Transactions on Pattern Analysis
and Machine Intelligence, 22(8):888–905, 2000.

12

