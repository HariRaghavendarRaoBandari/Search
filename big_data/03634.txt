6
1
0
2

 
r
a

 

M
1
1
 
 
]

.

C
O
h
t
a
m

[
 
 

1
v
4
3
6
3
0

.

3
0
6
1
:
v
i
X
r
a

A SEMIDEFINITE HIERARCHY FOR DISJOINTLY CONSTRAINED

MULTILINEAR PROGRAMMING

KAI KELLNER

Abstract. Disjointly constrained multilinear programming concerns the problem of
maximizing a multilinear function on the product of ﬁnitely many disjoint polyhedra.
While maximizing a linear function on a polytope (linear programming) is known to be
solvable in polynomial time, even bilinear programming is NP-hard. Based on a refor-
mulation of the problem in terms of sum-of-squares polynomials, we study a hierarchy
of semideﬁnite relaxations to the problem. It follows from the general theory that the
sequence of optimal values converges asymptotically to the optimal value of the multi-
linear program. We show that the semideﬁnite hierarchy converges generically in ﬁnitely
many steps to the optimal value of the multilinear problem.

We outline two applications of the main result. For nondegenerate bimatrix games,
a Nash equilibrium can be computed by the sum of squares approach in ﬁnitely many
steps. Under an additional geometric condition, the NP-complete containment problem
for projections of H-polytopes can be decided in ﬁnitely many steps.

1. Introduction

A disjointly constrained multilinear programming problem is the optimization problem
of maximizing a multilinear function on the product of ﬁnitely many disjoint polyhedra.
To be more precise, let l ≥ 2 and f (x1, x2, . . . , xl) be a real-valued function linear in the
variable tuples xi = (xi,1, . . . , xi,di) for i = 1, . . . , l. Consider nonempty polyhedra Pi ⊆ Rdi
as given by the intersection of ﬁnitely many halfspaces and an aﬃne subspace. Then a
(disjointly constrained) multilinear program has the form

(1.1)

f ∗ := max f (x1, x2, . . . , xl)

s.t. (x1, . . . , xl) ∈ P1 × · · · × Pl .

If l = 1, this reduces to linear programming. Throughout the paper we assume l ≥ 2. For
l = 2, problem (1.1) is known as bilinear programming or indeﬁnite quadratic optimiza-
tion. This NP-hard problem lies in-between linear and quadratic optimization. Originally,
bilinear programming has been considered as a generalization of bimatrix games in game
theory. Today it is motivated by a various of applications, including (constrained) bimatrix
games [17], quantum information theory [1], and geometric containment problems [9, 11].
Prominent approaches to solve bilinear and multilinear programs are based on vertex
tracking algorithms [6, 12].

In this note we state a semideﬁnite hierarchy to multilinear programs based on the
concept of sum of squares; see, e.g., the books of Blekherman et. al. [2], or Lasserre [14],
or the survey by Laurent [15]. To that end the problem is rewritten as a program with a
nonnegativity constraint. This constraint is then replaced by a weaker condition, namely

1

2

KAI KELLNER

being a sum of polynomial squares which can be formulated as a semideﬁnite constraint.
A particular question is whether the multilinear structure can be used in sum of squares
certiﬁcates in order to state convergence statements. Indeed, we show ﬁnite convergence in
generic cases by using an extension of Putinar’s Positivstellensatz stated by Marshall [19].
This has impact on various applications including polyhedral containment and game the-
ory.

It is well-known in game theory that a bimatrix game (cf. Section 4.2) has a formulation
as a disjointly constrained bilinear optimization problem. The sum of squares approach
to (polynomial) games has been considered by Laraki and Lasserre [13], and Parrilo [22].
They did not establish ﬁnite convergence. By our main result a Nash equilibrium of a
nondegenerate bimatrix game can be computed via sums of squares in ﬁnitely many
steps. This can be extended to ﬁnite l-person games.

In [11] Theobald and the author formulated the problem of whether an H-polytope is
contained in a V-polytope as a bilinear programming problem and proved ﬁnite conver-
gence for the sum of squares hierarchy under some conditions. In Section 4.1 we extend
this result to the NP-complete projective polyhedral containment problem, the problem of
whether the (coordinate) projection of an H-polyhedron is contained in the projection
to another H-polyhedron [9]. Note that the projection of an H-polyhedron is again a
polyhedron but a projection-free representation is not easy to achieve.

The paper is structured as follows. In Section 2 we outline some basic geometric behavior
of multilinear programs. A semideﬁnite hierarchy based on sum of squares and a proof
of its convergence in well-deﬁned cases is given in Section 3. In Section 4 we sketch the
application of our main result to polyhedral containment and game theory.

2. Multilinear Programming

Note that a multilinear function f = f (x1, x2, . . . , xl) can be written as

Q(L)(xi : i ∈ L) =

f = X∅6=L⊆[l]

d1

Xj1=1

· · ·

dl

Xjl=1

Q(1,...,l)

j1...,jl x1,j · · · xl,j + · · · +

l

di

Xi=1

Xji=1

Q(i)

ji xi,ji

for tensors Q(L) ∈ R×{di | i∈L} with ∅ 6= L ⊆ [l] := {1, . . . , l} and Q[l] 6= 0. For i ∈ [l] let
a(i) ∈ Rmi, A(i) ∈ Rmi×di, b(i) ∈ Rni, B(i) ∈ Rni×di. Deﬁne the polytopes

We set P1,...,l := P1 × . . . × Pl and often use P if there is no risk of confusion.

Pi =(cid:8)xi ∈ Rdi | a(i) ≥ A(i)xi, b(i) = B(i)xi(cid:9) .

Throughout the paper we make the following assumptions on the representations of the

polytopes Pi.

Assumption 2.1. For i ∈ [l]:

(1) The equality constraints are linearly independent, i.e., the dimension of the aﬃne

subspace Bi := {x ∈ Rdi | b(i) = B(i)xi} equals di − ni and di − ni > 0.

(2) {x ∈ Rdi | a(i) ≥ A(i)x} is full-dimensional in the aﬃne subspace Bi, i.e., dim{x ∈

B | a(i) ≥ A(i)x} = di − ni.

MULTILINEAR PROGRAMMING

3

The ﬁrst assumption can be achieved by Gaussian elimination. The second assumption
particularly implies nonemptyness of P1, . . . , Pl. It can be tested (and achieved) by linear
programming methods in polynomial time. We understand relative interior of a polytope
Pi as with respect to the aﬃne subspace Bi.

Given a polytope Pi, the outer normal cone Ci of a boundary point v of Pi is the cone
in span{(B(i))T } generated by the outer normals of the constraints that are active at that
point, i.e., Ci = pos{(A(i)
i v, j ∈ [mi]} ⊆ span{(B(i))T }. Note that the
deﬁnition of a normal cone here diﬀers slightly from the usual one as we restrict it to the
subspace span{(B(i))T }. The usual normal cone is given by Ci + span{(B(i))T }.

j )T | a(i)

j = A(i)

The boundary of the product polytope ∂(P) = ∂(P1 × . . . × Pl) equals the product
of the boundaries ∂P1 × . . . × ∂Pl. Moreover, F is a face of P1 × . . . × Pl if and only if
F = F1 × . . . × Fl for faces Fi of Pi. In particular, any vertex of P is given by a tuple of
vertices of P1, . . . , Pl.

We state a basic result on multilinear programming. For a proof we refer to Konno [12];

see also Drenick [4].

Proposition 2.2. Let P1, . . . , Pl be nonempty polytopes. Then the set of optimal solutions
to (1.1) is part of the boundary and the maximum is attained at a tuple of vertices of
P1, . . . , Pl.

We state two corollaries that will be used in the next section.

Corollary 2.3. The set of optimal solutions to (1.1) is an union of proper faces F =
F1 × . . . × Fl of P.

Proof. Let (¯x1, . . . , ¯xl) be an optimal solution. By Proposition 2.2 (¯x1, . . . , ¯xl) ∈ ∂(P1 ×
. . . Pl). Let F¯xi be the minimal face containing ¯xi. Then for any (x1, . . . , xl) ∈ F¯x1 ×
. . . × F¯xl, we have f (¯x1, . . . , ¯xl) = f (x1, . . . , ¯xi, . . . , xl) by the linearity of f in every
xi = (xi,1, . . . , xi,di), i ∈ [l].
(cid:3)

The second corollary follows directly from the latter one.

Corollary 2.4. Problem (1.1) has ﬁnitely many optimal solutions if and only if every
optimal solution of the problem is a vertex of P.

3. A Semidefinite hierarchy based on sum of squares

In this section, we apply sum of squares techniques to multilinear programming prob-
lems. Our main goal is to show that the outcoming hierarchy of semideﬁnite programs
converges after ﬁnitely many steps in generic cases (in a well-deﬁned sense); see Theo-
rem 3.1.

The multilinear problem (1.1) can equivalently be stated as a nonnegativity question

f ∗ = max {f (x1, . . . , xl) | xi ∈ Pi, i ∈ [l]}

= min {µ | µ − f (x1, . . . , xl) ≥ 0 for (x1, . . . , xl) ∈ P} .

Replacing the nonnegativity condition by sum of squares is a common method in polyno-
mial optimization. A polynomial p(x) ∈ R[x] is a sum of squares (sos) if and only if there

4

KAI KELLNER

exists a positive semideﬁnite matrix M of appropriate size such that p(x) = [x]T
t M[x]t,
where [x]t is the vector of monomials up to degree t for some nonnegative integer t. We
denote the set of all sos-polynomials in the variables x by Σ[x] ⊆ R[x]. While every
sos-polynomial is nonnegative, the converse is not true in general. Thus replacing nonneg-
ativity by being a sum of squares in the above problem (where the equality constraints
have to be treated separately) yields a upper bound for f ∗,

f ∗ ≤ min {µ | µ − f (x1, . . . , xl) ∈ QM +I} ,

where

QM =(σ0 +

σij (a(i) − A(i)xi)j | σij ∈ Σ[x])

l

mi

Xi=1

Xj=1

is the quadratic module generated by the linear inequality constraints and

I =( l
Xi=1

ni

Xj=1

τij(b(i) − B(i)xi)j | τi,j ∈ R[x])

is the ideal generated by the linear equality constraints.

The idea is to test membership of µ − f (x1, . . . , xl) in truncations of the quadratic
module and the ideal. Testing membership in these sets can be done by deciding feasibility
of a certain semideﬁnite inequality system, which is solvable in polynomial time if the
degrees are ﬁxed. To be precise, deﬁne the t-th truncation as

QMt =(σ0 +

and

It =( l
Xi=1

The t-th sos program is then

l

mi

σij (a(i) − A(i)xi)j | σij ∈ Σ2t−2[x])

Xi=1
Xj=1
τij(b(i) − B(i)xi)j | τi,j ∈ R2t−1[x]) .

ni

Xj=1

(3.1)

ft

:= inf {µ | µ − f (x1, . . . , xl) ∈ QMt +It}

with f ∗ ≤ . . . ≤ fl+1 ≤ fl. Note that the ﬁrst relaxation order making sense is t = l as
the degree of f is l.

We state our main result.

Theorem 3.1. Let P1, P2, . . . , Pl be polytopes with nonempty relative interior satisfying
Assumption 2.1.

(1) The sequence (ft)t of optimal values (3.1) converges asymptotically from above to

the optimal value f ∗.

(2) If the multilinear programming problem (1.1) has only ﬁnitely many optimal solu-
tions, then f ∗−f ∈ QM +I. Thus the sequence of the optimal values (ft)t converges
in ﬁnitely many steps to the optimal value f ∗.

MULTILINEAR PROGRAMMING

5

The proof of Theorem 3.1 extends the one for the containment problem of an H-polytope
in a V-polytope in [11]. We start with the proof of part (1) of the statement as it follows
directly from the general theory.

Proposition 3.2 (Putinar’s Positivstellensatz [23]). Let S = {x ∈ Rd | g(x) ≥ 0 ∀g ∈
G, h(x) = 0 ∀h ∈ H} for some ﬁnite subsets G, H ⊆ R[x]. If the quadratic module

QM(G) = {σ0 +Pg∈G σgg | σ0, σg ∈ Σ[x]} is Archimedean, then the sum of the quadratic

module with the ideal generated by H, QM(G) + I(H), contains every polynomial p ∈ R[x]
positive on S.

A quadratic module is called Archimedean if N −xT x ∈ QM for some positive integer N.
Archimedeaness of the quadratic module implies compactness of the set S, but the converse
is generally not true. In our speciﬁc situation with only linear constraint polynomials
deﬁning a polytope, this condition is always satisﬁed [18, Theorem 7.1.3].

Proof of Theorem 3.1 (1). By Proposition 3.2, f ∗ − f + ε ∈ QM +I for every ε > 0. The
claim follows by letting ε tend to zero.
(cid:3)

Proving part (2) is more involved. Our goal is to apply Marshall’s Nichtnegativstellen-
satz, an extension of Putinar’s result. To that end, we introduce some necessary notation.
See Nie [21] for a similar application of Marshall’s result to general polynomial optimiza-
tion problems.

Given a variety V ⊆ Rn of dimension d, denote by I(V ) the vanishing ideal of V and

by R[V ] = R[x]/I(V ) the coordinate ring of V .

Proposition 3.3 (Marshall’s Nichtnegativstellensatz [18, Theorem 9.5.3]). Let V ⊆ Rn
be a variety of dimension d and let f, g1, . . . , gm ∈ R[V ] with S = {x ∈ V | gi(x) ≥
0, i ∈ [m]}. Assume that the quadratic module M generated by g1, . . . , gm is Archimedean
in R[V ]. Further suppose that for any global maximizer ¯x of f on S the following holds:

(1) ¯x is a nonsingular point of V ,
(2) there exist local parameters t1, . . . , td and an index set I of size 1 ≤ k ≤ d such

that ti = gi for i ∈ I,

(3) the linear part of f in the localizing parameters equals Pi∈I citi for some negative

(4) the quadratic part of f in the localizing parameters is negative deﬁnite on the ti = 0

coeﬃcients ci, i ∈ I, and

for i ∈ I.

Then fmax − f ∈ M, where fmax denotes the global maximum of f on S.

The last two conditions in Proposition 3.3 are called boundary Hessian condition (BHC);

see [18, 19]. To prove Theorem 3.1 we need one more lemma.

Lemma 3.4. Let P1, . . . , Pl be nonempty polytopes and c0 − cT xi ≥ 0 be a redundant
inequality in the representation of some Pi. Then it is also redundant in the hierarchy (3.1).

The lemma follows by a simple application of the aﬃne version of Farkas’ Lemma; see

e.g. [11].

6

KAI KELLNER

Proof of Theorem 3.1 (2). Let ¯x = (¯x1, . . . , ¯xl) ∈ P = P1 × . . . × Pl be an arbitrary but
ﬁxed optimal solution to (1.1). As by Assumption 2.1 the linear equality constraints are
linearly independent for each Pi, the rank of the gradient equals the number of equations
for every point in the variety. Thus every point is nonsingular (cf. [3, Theorem 9]).

Since f is linear in xi for any i ∈ [l], its derivative w.r.t. xi has the form

∂
∂xi

f (x1, . . . , xl) = X∅6=L⊆[l], i∈L

Q(L)(xj : j ∈ L\{i}) ,

a di-dimensional vector with entries in the polynomial ring R[x1, . . . , xi−1, xi+1, . . . , xl].
Every component is a multilinear function in (x1, . . . , xi−1, xi+1, . . . , xl).

Fix i ∈ [l]. Assume ∂
∂xi

f (¯x) lies in the sum of the outer normal cone (in span{(B(i))T })
of an at least one-dimensional face Fi of Pi and the linear subspace span{(B(i))T }. By
Corollary 2.3, we have

(cid:18) ∂

∂xi

f (¯x)(cid:19) (ˆxi) = max(cid:26)(cid:18) ∂

∂xi

f (¯x)(cid:19) (xi) | xi ∈ Pi(cid:27) =(cid:18) ∂

∂xi

f (¯x)(cid:19) (¯xi)

for every ˆxi ∈ Fi and thus

f (¯x) = X∅6=L⊆[l], i∈L

Q(L)(¯xj : j ∈ L) + X∅6=L⊆[l], i6∈L

Q(L)(¯xj : j ∈ L)

Q(L)(¯xj : j ∈ L)

Q(L)(¯xj : j ∈ L)

=(cid:18) ∂
=(cid:18) ∂

∂xi

∂xi

f (¯x)(cid:19) (¯xi) + X∅6=L⊆[l], i6∈L
f (¯x)(cid:19) (ˆxi) + X∅6=L⊆[l], i6∈L

= f (¯x1, . . . , ˆxi, . . . , ¯xl) ,

∂xi

in contradiction to Corollary 2.4 and the assumption in part (2) of the theorem. Hence
∂
f (¯x) lies in the sum of the outer normal cone Ci of ¯xi and the subspace span{(B(i))T }.
As ¯xi is a vertex of Pi, Ci is full-dimensional in the (di −ni)-dimensional linear subspace
span{(B(i))T }. Thus there exist di − ni points in the outer normal cone such that ∂
f (¯x)
∂xi
is a (strictly) positive combination of these points. The points correspond to redundant
inequalities in the representation of Pi that are active in ¯xi. As by Lemma 3.4 redundant
constraints do not aﬀect (existence and degree of) the sum of squares certiﬁcates, we can
assume that the representation of Pi is given in a form such that there exists an index
set Ii ⊆ [mi] of cardinality |Ii| = di − ni corresponding to linearly independent, active
constraints and there exist α(i) ∈ Rmi and β(i) ∈ Rni with

(3.2)

∂
∂xi

f (¯x) = (A(i))T α(i) + (B(i))T β(i) α(i)

j > 0 for j ∈ Ii and α(i)

j = 0 for j 6∈ Ii .

MULTILINEAR PROGRAMMING

7

Let I1, . . . , Il be index sets as constructed in the previous paragraph. W.l.o.g. set Ii =

[di − ni] for i ∈ [l]. Consider the aﬃne variable transformation

φ : Rd1+···+dl → Rd1+···+dl,

(x1, . . . , xl) 7→

The new variables (s1, . . . , sl) := (s11, . . . , s1d1 . . . , sl1, . . . , sldl) serve as localizing param-
eters on the variety deﬁned by sij = (b(i) − B(i)xi)j = 0, j ∈ [di]\Ii, i ∈ [l] as in
Proposition 3.3. The inverse of φ is given by









(a(1) − A(1)x1)I1

b(1) − B(1)x1

...

(a(l) − A(l)xl)Il

b(l) − B(l)xl





s1
...
sl

=:



 .

I1

B(1)#−1
"A(1)
B(l)#−1
"A(l)

Il

·  a(1)
...
·  a(l)

Il

I1

b(1)! − s1!

b(l)! − sl!

.





φ−1 : Rd1+···+dl → Rd1+···+dl,

(s1, . . . , sl) 7→

Setting ¯A(i) = [A(i)

Ii , B(i)]T , ¯a(i) = (a(i)

Ii , b(i))T , the objective function f has the form

f ◦ Φ−1(s1, . . . , sl) = X∅6=L⊆[l]

Q(L)(cid:0)( ¯A(i))−1(cid:0)¯a(i) − si(cid:1) : i ∈ L(cid:1)

= X∅6=L⊆[l] XM ⊆L

Q(L)(cid:0){−( ¯A(i))−1si : i ∈ M} ∪ {( ¯A(i))−1¯a(i) : i ∈ L\M}(cid:1)

in the parameterization space. The homogeneous degree-1 part of f in (s1, . . . , sl) is

f1 := X∅6=L⊆[l]Xi∈L

Q(L)(cid:0){−( ¯A(i))−1si} ∪ {( ¯A(j))−1¯a(j) : j 6= i}(cid:1) .

In order to show that f satisﬁes the conditions in Proposition 3.3, we show that the
Il − β(l)). Then f1 has only

gradient of f1 w.r.t s1, . . . , sl equals (−α(1)
negative coeﬃcients on the variety deﬁned by the equality constraints, i.e.,

I1 − β(1), . . . , −α(l)

f1 = (α(1)

I1 )T (s1)I1 + · · · + (α(l)

Il )T (sl)Il

on (si)[di]\Ii = 0, i ∈ [l] ,

and thus the third condition of Proposition 3.3 is satisﬁed. Since |I1| + · · · + |Il| = d1 −
n1 + . . . + dl − nl equals the dimension of the variety deﬁned by the equality constraints
in P1 × · · · × Pl, the last condition is obsolete. Marshall’s Nichtnegativstellensatz then
implies f ∗ − f (x1, . . . , xl) ∈ QM +I.

It remains to show the desired equality for the gradient of f1. To that end note that

(¯x1, . . . , ¯xl) = φ−1(0) = (( ¯A(1))−1¯a(1), . . . , ( ¯A(l))−1¯a(l)) .

8

We have

∂
∂si

KAI KELLNER

(( ¯A(i))−1)T Q(L)(( ¯A(j))−1¯a(j) : j ∈ L\{i})

f1(0) = − X∅6=L⊆[l], i∈L
= −(( ¯A(i))−1)T ∂
∂xi

f (¯x)

= −α(i)

Ii − β(i) ,

where the last equation follows from (3.2). This completes the proof.

(cid:3)

4. Applications

4.1. Geometric containment problems. As outlined in the introduction, this note is
motivated by geometric containment problems. More precisely, Theobald and the author
studied the classical problem (cf. [5, 7, 8]) to decide whether a given H-polytope is con-
tained in a given V-polytope. While the converse containment problem, V-in-H, is solvable
in polynomial time, the H-in-V problem is co-NP-complete. The main result in [11] is the
formulation as a certain bilinear programming problem and the proof of ﬁnite conver-
gence in some cases. Theorem 3.1 extends this results to disjointly constrained multilinear
programs.

In [9] the author gave a bilinear formulation of the projective polyhedral containment

problem: For a ∈ Rk and b ∈ Rl let

P =(cid:8)(x, y) ∈ Rd+m | a ≥ Ax + A′y(cid:9) and Q =(cid:8)(x, y′) ∈ Rd+n | b ≥ Bx + B′y′(cid:9)

be nonempty polyhedra and consider their projection to Rd, denoted by π(P ) and π(Q).
The projective polyhedral containment problem asks whether π(P ) ⊆ π(Q). Note that the
projection of a polyhedron is again a polyhedron but a projection-free description is not
easy to achieve. Indeed, while deciding containment of P in Q is solvable in polynomial
time, it is shown in [10, Theorem 3.2.4] that deciding containment of π(P ) in π(Q) is
co-NP-complete. This hardness statement holds true for m = 0.
Proposition 4.1. [9, Theorem 3.1] Let ker(B′T ) ∩ Rl
only if

+ 6= {0}. Then π(P ) ⊆ π(Q) if and

(4.1)

where ∆l = {z ∈ Rl | 1T

min(cid:8)zT (b − Bx) | π(P ) ×(cid:0)ker(B′T ) ∩ ∆l(cid:1)(cid:9) ≥ 0 ,

l z = 1, z ≥ 0} is the l-simplex.

Suﬃcient for condition ker(B′T ) ∩ Rl

+ 6= {0} being satisﬁed is boundedness of π(Q). If
+ = {0}, then the simplex ∆l in (4.1) has to be replaced by the nonnegative
+, and thus the feasible set of the bilinear program is unbounded; see [9, Theorem

ker(B′T ) ∩ Rl
orthant Rl
3.1]. If m = 0, we can apply Theorem 3.1.
Theorem 4.2. Let P ⊆ Rd be a nonempty polytope with m = 0 and ker(B′T ) ∩ ∆l 6= ∅.
Assume that every optimal solution to (4.1) is a pair of vertices of P and ker(B′T ) ∩ ∆l.
Then hierarchy (3.1) decides containment in ﬁnitely many steps.

As a special case the theorem covers H-in-V containment since every V-polytope can

be represented as a projection of an H-polytope.

MULTILINEAR PROGRAMMING

9

4.2. (Constrained) bimatrix games. A bimatrix game (A, B) is given by a pair of
payoﬀ matrices A, B ∈ Rm×n and the sets of mixed strategies for player 1, ∆m = {x ∈
Rm | 1T
n y = 1, y ≥ 0}. The payoﬀs
are given by xT Ay for player 1 and by xT By for player 2. Both players want to maximize
their payoﬀ. A pair of mixed strategies (¯x, ¯y) is called a (Nash) equilibrium if

mx = 1, x ≥ 0}, and player 2, ∆n = {y ∈ Rn | 1T

¯xT A¯y ≥ xT A¯y ∀x ∈ ∆m

and

¯xT B ¯y ≥ ¯xT By ∀y ∈ ∆n .

Mangasarian showed that the set of equilibria corresponds to a subset of the vertices
of certain polyhedra and can be computed via quadratic programming; see [16, 17]. As
adding a positive constant to every entry of the matrices A, B does not change the set
of equilibria (see, e.g., [24]), we assume that A, B are entrywise positive. Then using a
projective transformation boundedness of the polyhedra can be achieved. Deﬁne

P1 := {x ∈ Rm | BT x ≤ 1n, x ≥ 0} and P2 := {y ∈ Rn | Ay ≤ 1m, y ≥ 0} .

Proposition 4.3. [17] Let A, B ∈ Rm×n have only positive entries. A pair (¯x, ¯y) solves
the bilinear program

(4.2)

max xT (A + B)y − xT 1m − 1T

n y

x ∈ P1, y ∈ P2

if and only if ( ¯x

¯y
n ¯y ) ∈ ∆m × ∆n is an equilibrium point for the bimatrix game (A, B).
1T
A bimatrix game is called nondegenerate if in any basic feasible solution to the system

m ¯x,

1T

Ay + s = 1m, BT x + t = 1n, x, y, s, t ≥ 0

all basic variables have positive values. (See the survey by von Stengel [24] for equivalent
deﬁnitions of nondegeneracy.) In the case of a nondegenerate bimatrix game, the number
of equilibria is ﬁnite as they only appear at vertices of P1 × P2; see [24].

Theorem 4.4. Let (A, B) be a nondegenerate bimatrix game. Then a equilibrium can be
computed by hierarchy (3.1) in ﬁnitely many steps.

Proof. By the nondegeneracy assumption, the polytopes in (4.2) are full-dimensional and
all optima of the bilinear problem are vertices. Thus we can apply Theorem 3.1.
(cid:3)

Note that the bilinear formulation of bimatrix games can be extended to a multilinear
formulation of ﬁnite l-person games; see Mills [20]. However, other than bimatrix games,
the geometry of l-person games is not well understood. In constrained bimatrix games,
the probability simplices are replaced by arbitrary polytopes. A formulation as a bilinear
program is along the same lines as for the non-constrained case. In both cases, an l-person
game and a constrained game, as long as the number of equilibria is known to be ﬁnite,
Theorem 4.4 holds true.

References

[1] M. Berta, O. Fawzi, and V. B. Scholz. Quantum bilinear optimization. Preprint arXiv:1506.08810,

2015.

[2] G. Blekherman, P. A. Parrilo, and R. Thomas. Semideﬁnite Optimization and Convex Algebraic

Geometry. SIAM Series on Optimization. Society for Industrial and Applied Mathematics, 2013.

10

KAI KELLNER

[3] D. A. Cox, J. Little, and D. O’Shea. Ideals, Varieties, and Algorithms: An Introduction to Computa-
tional Algebraic Geometry and Commutative Algebra. Undergraduate Texts in Mathematics. Springer
New York, 2008.

[4] R. F. Drenick. Multilinear programming: Duality theories. Journal of Optimization Theory and Ap-

plications, 72(3):459–486, 1992.

[5] R. M. Freund and J. B. Orlin. On the complexity of four polyhedral set containment problems. Math.

Program., 33(2):139–145, 1985.

[6] G. Gallo and A. ¨Ulk¨uc¨u. Bilinear programming: An exact algorithm. Math. Program., 12(1):173–194,

1977.

[7] P. Gritzmann and V. Klee. Computational complexity of inner and outer j-radii of polytopes in

ﬁnite-dimensional normed spaces. Math. Program., 59(2, Ser. A):163–213, 1993.

[8] P. Gritzmann and V. Klee. On the complexity of some basic problems in computational convexity.

I. Containment problems. Discrete Math., 136(1-3):129–174, 1994.

[9] K. Kellner. Containment problems for projections of polyhedra and spectrahedra. Preprint

arXiv:1509.02735, 2015.

[10] K. Kellner. Positivstellensatz Certiﬁcates for Containment of Polyhedra and Spectrahedra. PhD thesis,

Goethe-Universit¨at Frankfurt am Main, 2015.

[11] K. Kellner and T. Theobald. Sum of squares certiﬁcates for containment of H-polytopes in V-

polytopes. To appear in SIAM J. Disc. Math., Preprint, arXiv:1409.5008, 2016.

[12] H. Konno. A cutting plane algorithm for solving bilinear programs. Math. Program., 11(1):14–27,

1976.

[13] R. Laraki and J. B. Lasserre. Semideﬁnite programming for min–max problems and games. Math.

Program., 131(1):305–332, 2010.

[14] J. B. Lasserre. An Introduction to Polynomial and Semi-Algebraic Optimization. Cambridge Texts

in Applied Mathematics. Cambridge University Press, 2015.

[15] M. Laurent. Sums of squares, moment matrices and optimization over polynomials. In M. Putinar
and S. Sullivant, editors, Emerging Applications of Algebraic Geometry, volume 149 of IMA Vol.
Math. Appl., pages 157–270. Springer, New York, 2009.

[16] O. L. Mangasarian. Equilibrium points of bimatrix games. J. Soc. Ind. Appl. Math., 12(4):778–780,

1964.

[17] O. L. Mangasarian and H. Stone. Two-person nonzero-sum games and quadratic programming. J.

Math. Anal. Appl., 9(3):348–355, 1964.

[18] M. Marshall. Positive Polynomials and Sums of Squares. Mathematical surveys and monographs.

American Mathematical Society, 2008.

[19] M. Marshall. Representation of non-negative polynomials, degree bounds and applications to opti-

mization. Canad. J. Math, 61(205-221), 2009.

[20] H. Mills. Equilibrium points in ﬁnite games. J. Soc. Ind. Appl. Math., 8(2):397–402, 1960.
[21] J. Nie. Optimality conditions and ﬁnite convergence of Lasserre’s hierarchy. Math. Program., pages

1–25, 2012.

[22] P. A. Parrilo. Polynomial games and sum of squares optimization. In Proc. of the 45th IEEE Con-

ference on Decision and Control, pages 2855–2860. IEEE, 2006.

[23] M. Putinar. Positive polynomials on compact semi-algebraic sets. Indiana Univ. Math. J., 42(3):969–

984, 1993.

[24] B. Von Stengel. Computing equilibria for two-person games. Handbook of game theory with economic

applications, 3:1723–1759, 2002.

Goethe-Universit¨at, FB 12 – Institut f¨ur Mathematik, Postfach 11 19 32, D–60054

Frankfurt am Main, Germany

E-mail address: kellner@math.uni-frankfurt.de

