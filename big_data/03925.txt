6
1
0
2

 
r
a

 

M
2
1

 
 
]

V
C
.
s
c
[
 
 

1
v
5
2
9
3
0

.

3
0
6
1
:
v
i
X
r
a

Image Captioning with Semantic Attention

Quanzeng You1, Hailin Jin2, Zhaowen Wang2, Chen Fang2, and Jiebo Luo1

1Department of Computer Science, University of Rochester, Rochester NY 14627, USA

2Adobe Research, 345 Park Ave, San Jose CA 95110, USA

{qyou,jluo}@cs.rochester.edu, {hljin,zhawang,cfang}@adobe.com

Abstract

Automatically generating a natural language description
of an image has attracted interests recently both because
of its importance in practical applications and because
it connects two major artiﬁcial intelligence ﬁelds: com-
puter vision and natural language processing. Existing
approaches are either top-down, which start from a gist of
an image and convert it into words, or bottom-up, which
come up with words describing various aspects of an image
and then combine them. In this paper, we propose a new
algorithm that combines both approaches through a model
of semantic attention. Our algorithm learns to selectively
attend to semantic concept proposals and fuse them into
hidden states and outputs of recurrent neural networks.
The selection and fusion form a feedback connecting the
top-down and bottom-up computation. We evaluate our
algorithm on two public benchmarks: Microsoft COCO and
Flickr30K. Experimental results show that our algorithm
signiﬁcantly outperforms the state-of-the-art approaches
consistently across different evaluation metrics.

1. Introduction

Automatically generating a natural language description
of an image, a problem known as image captioning, has
recently received a lot of attention in Computer Vision. The
problem is interesting not only because it has important
practical applications, such as helping visually impaired
people see, but also because it is regarded as a grand
challenge for image understanding which is a core problem
in Computer Vision. Generating a meaningful natural
language description of an image requires a level of image
understanding that goes well beyond image classiﬁcation
and object detection. The problem is also interesting in that
it connects Computer Vision with Natural Language Pro-
cessing which are two major ﬁelds in Artiﬁcial Intelligence.

Figure 1. Top: an overview of the proposed framework. Given
an image, we use a convolutional neural network to extract a top-
down visual feature and at the same time detect visual concepts
(regions, objects, attributes, etc.). We employ a semantic attention
model to combine the visual feature with visual concepts in a re-
current neural network that generates the image caption. Bottom:
We show the changes of the attention weights for several candidate
concepts with respect to the recurrent neural network iterations.

There are two general paradigms in existing image cap-
top-down and bottom-up. The top-
tioning approaches:
down paradigm [4, 35, 26, 16, 8, 36, 25] starts from a “gist”
of an image and converts it into words, while the bottom-up
one [12, 19, 23, 9, 20, 11, 22] ﬁrst comes up with words
describing various aspects of an image and then combines
them. Language models are employed in both paradigms
to form coherent sentences. The state-of-the-art is the top-
down paradigm where there is an end-to-end formulation
from an image to a sentence based on recurrent neural
networks and all the parameters of the recurrent network
can be learned from training data. One of the limitations
of the top-down paradigm is that it is hard to attend to
ﬁne details which may be important in terms of describing
the image. Bottom-up approaches do not suffer from this
problem as they are free to operate on any image resolution.
However, they suffer from other problems such as there

1

RNN...CNNattentionwaveridingmansurfboardoceanwatersurfersurfingpersonboard00.10.20.3surfboardwavesurfinglacks an end-to-end formulation for the process going from
individual aspects to sentences. There leaves an interesting
question: Is it possible to combine the advantages of these
two paradigms? This naturally leads to feedback which is
the key to combine top-down and bottom-up information.

Visual attention [17, 30] is an important mechanism in
the visual system of primates and humans.
It is a feed-
back process that selectively maps a representation from
the early stages in the visual cortex into a more central
non-topographic representation that contains the properties
of only particular regions or objects in the scene. This
selective mapping allows the brain to focus computational
resources on an object at a time, guided by low-level image
properties. The visual attention mechanism also plays an
important role in natural language descriptions of images
In particular, people do not
biased towards semantics.
describe everything in an image.
Instead, they tend to
talk more about semantically more important regions and
objects in an image.

In this paper, we propose a new image captioning ap-
proach that combines the top-down and bottom-up ap-
proaches through a semantic attention model. Please refer
to Figure 1 for an overview of our algorithm. Our deﬁnition
for semantic attention in image captioning is the ability
to provide a detailed, coherent description of semantically
important objects that are needed exactly when they are
needed. In particular, our semantic attention model has the
following properties: 1) able to attend to a semantically
important concept or region of interest in an image, 2)
able to weight the relative strength of attention paid on
multiple concepts, and 3) able to switch attention among
concepts dynamically according to task status. Speciﬁcally,
we detect semantic concepts or attributes as candidates for
attention using a bottom-up approach, and employ a top-
down visual feature to guide where and when attention
should be activated. Our model is built on top of a Recurrent
Neural Network (RNN), whose initial state captures global
information from the top-down feature. As the RNN state
transits, it gets feedback and interaction from the bottom-
up attributes via an attention mechanism enforced on both
network state and output nodes. This feedback allows the
algorithm to not only predict more accurately new words,
but also lead to more robust inference of the semantic gap
between existing predictions and image content.

1.1. Main contributions

The main contribution of this paper is a new image cap-
tioning algorithm that is based on a novel semantic attention
model. Our attention model naturally combines the visual
information in both top-down and bottom-up approaches
in the framework of recurrent neural networks. Our algo-
rithm yields signiﬁcantly better performance compared to
the state-of-the-art approaches. For instance, on Microsoft

COCO and Flickr 30K, our algorithm outperforms compet-
ing methods consistently across different evaluation metrics
(Bleu-1,2,3,4, Meteor, and Cider). We also conduct an
extensive study to compare different attribute detectors and
attention schemes.

It is worth pointing out that [36] also considered using
attention for image captioning. There are several important
differences between our work and [36]. First,
in [36]
attention is modeled spatially at a ﬁxed resolution. At every
recurrent iteration, the algorithm computes a set of attention
weights corresponding to pre-deﬁned spatial locations. In-
stead, we can use concepts from anywhere at any resolution
in the image.
Indeed, we can even use concepts that do
not have direct visual presence in the image. Second, in
our work there is a feedback process that combines top-
down information (the global visual feature) with bottom-
up concepts which does not exist in [36]. Third, in [36] uses
pretrained feature at a particular spatial location. Instead,
we use word features that correspond to detected visual
concepts. This way, we can leverage external image data for
training visual concepts and external text data for learning
semantics between words.

2. Related work

There is a growing body of literature on image caption-
ing which can be generally divided into two categories:
top-down and bottom-up. Bottom-up approaches are the
“classical” ones, which start with visual concepts, objects,
attributes, words and phrases, and combine them into sen-
tences using language models. [12] and [19] detect concepts
and use templates to obtain sentences, while [23] pieces
together detected concepts. [9] and [20] use more powerful
language models. [11] and [22] are the latest attempts along
this direction and they achieve close to the state-of-the-art
performance on various image captioning benchmarks.

Top-down approaches are the “modern” ones, which for-
mulate image captioning as a machine translation problem
[31, 2, 5].
Instead of translating between different lan-
guages, these approaches translate from a visual represen-
tation to a language counterpart. The visual representation
comes from a convolutional neural network which is often
pretrained for image classiﬁcation on large-scale datasets
[18]. Translation is accomplished through recurrent neural
networks based language models. The main advantage of
this approach is that the entire system can be trained from
end to end, i.e., all the parameters can be learned from
data. Representative works include [35, 26, 16, 8, 36, 25].
The differences of the various approaches often lie in what
kind of recurrent neural networks are used. Top-down
approaches represent the state-of-the-art in this problem.

Visual attention is known in Psychology and Neuro-
science for long but is only recently studied in Computer
Vision and related areas.
In terms of models, [21, 33]

model has a unique way to utilize and combine different
sources of visual information. The CNN image feature v
is only used in the initial input node x0, which is expected
to give RNN a quick overview of the image content. Once
the RNN state is initialized to encompass the overall visual
context, it is able to select speciﬁc items from {Ai} for task-
related processing in the subsequent time steps. Speciﬁ-
cally, the main working ﬂow of our system is governed by
the following equations:

x0 = φ0(v) = W x,vv
ht = RNN(ht−1, xt)
Yt ∼ pt = ϕ(ht,{Ai})
xt = φ(Yt−1,{Ai}), t > 0,

(1)
(2)
(3)
(4)

where a linear embedding model is used in Eq.
(1) with
weight W x,v. For conciseness, we omit all the bias terms of
linear transformations in the paper. The input and output at-
tention models in Eq. (3) and (4) are designed to adaptively
attend to certain cognitive cues in {Ai} based on the current
model status, so that the extracted visual information will
be most relevant to the parsing of existing words and the
prediction of future word. Eq. (2) to (4) are recursively
applied, through which the attended attributes are fed back
to state ht and integrated with the global information from
v. The design of Eq. (3) and (4) is discussed below.

3.2. Input attention model

In the input attention model φ for t>0, a score αi

t is
assigned to each detected attribute Ai based on its relevance
with the previous predicted word Yt−1. Since both Yt−1
and Ai correspond to an entry in dictionary Y, they can be
encoded with one-hot representations in R|Y| space, which
we denote as yt−1 and yi respectively. As a common
approach to model relevance in vector space, a bilinear
t:
function is used to evaluate αi

t ∝ exp(cid:0)yT

αi

˜U yi(cid:1),

t−1

(5)
where the exponent is taken to normalize over all the {Ai}
in a softmax fashion. The matrix ˜U ∈ R|Y|×|Y| contains
a huge number of parameters for any Y with a reasonable
vocabulary size. To reduce parameter size, we can ﬁrst
project the one-hot representations into a low dimensional
word vector space with Word2Vec [27] or Glove [29]. Let
the word embedding matrix be E ∈ Rd×|Y| with d (cid:28) |Y|;
Eq. (5) becomes

t ∝ exp(cid:0)yT

t−1ET U Eyi(cid:1) ,

αi

(6)

where U is a d × d matrix.

Once calculated, the attention scores are used to mod-
ulate the strength of attention on different attributes. The

Figure 2. The framework of the proposed image captioning sys-
tem. Visual features of CNN responses v and attribute detec-
tions {Ai} are injected into RNN (dashed arrows) and get fused
together through a feedback loop (blue arrows). Attention on
attributes is enforced by both input model φ and output model ϕ.

approach it with Boltzmann machines while [28] does
with recurrent neural networks.
In terms of applications,
[6] studies it for image tracking, [1] studies it for image
recognition of multiple objects, and [15] uses for image
generation. Finally, as we discuss in Section 1, we are not
the ﬁrst to consider it for image captioning. In [36], Xu et
al., propose a spatial attention model for image captioning.

3. Semantic attention for image captioning
3.1. Overall framework

We extract both top-down and bottom-up features from
an input image. First, we use the intermediate ﬁler re-
sponses from a classiﬁcation Convolutional Neural Net-
work (CNN) to build a global visual description denoted
by v. In addition, we run a set of attribute detectors to get a
list of visual attributes or concepts {Ai} that are most likely
to appear in the image. Each attribute Ai corresponds to an
entry in our vocabulary set or dictionary Y. The design of
attribute detectors will be discussed in Section 4.

All the visual features are fed into a Recurrent Neural
Network (RNN) for caption generation. As the hidden state
ht ∈ Rn in RNN evolves over time t, the t-th word Yt
in the caption is drawn from the dictionary Y according to
a probability vector pt ∈ R|Y| controlled by the state ht.
The generated word Yt will be fed back into RNN in the
next time step as part of the network input xt+1 ∈ Rm,
which drives the state transition from ht to ht+1. The
visual information from v and {Ai} serves as as an external
guide for RNN in generating xt and pt, which is speciﬁed
by input and output models φ and ϕ. The whole model
architecture is illustrated in Figure 2.

Different from previous image captioning methods, our

htptxtv{Ai}Yt~  RNNImageCNNAttrDet 1AttrDet 2AttrDet 3AttrDet Nt = 0Wordweighted sum of all attributes is mapped from word em-
bedding space to the input space of xt together with the
previous word:

xt = W x,Y(cid:0)Eyt−1 + diag(wx,A)

tEyi(cid:1),

(cid:88)

(7)

αi

i

where W x,Y ∈ Rm×d is the projection matrix, diag(w)
denotes a diagonal matrix constructed with vector w, and
wx,A ∈ Rd models the relative importance of visual
attributes in each dimension of the word space.
3.3. Output attention model

The output attention model ϕ is designed similarly as the
input attention model. However, a different set of attention
scores are calculated since visual concepts may be attended
in different orders during the analysis and synthesis pro-
cesses of a single sentence. With all the information useful
for predicting Yt captured by the current state ht, the score
t for each attribute Ai is measured with respect to ht:
βi

t ∝ exp(cid:0)hT

t V σ(Eyi)(cid:1) ,

βi

(8)
where V ∈ Rn×d is the bilinear parameter matrix. σ
denotes the activation function connecting input node to
hidden state in RNN, which is used here to ensure the same
nonlinear transform is applied to the two feature vectors
before they are compared.
t} are used to modulate the attention on all
the attributes, and the weighted sum of their activations is
used as a compliment to ht in determining the distribution
pt. Speciﬁcally, the distribution is generated by a linear
transform followed by a softmax normalization:

pt ∝ exp(cid:0)ET W Y,h(ht + diag(wY,A)

tσ(Eyi))(cid:1),

Again, {βi

(cid:88)

βi

i

(9)
where W Y,h ∈ Rd×n is the projection matrix and wY,A ∈
Rn models the relative importance of visual attributes in
each dimension of the RNN state space. The ET term
is inspired by the transposed weight sharing trick [25] for
parameter reduction.
3.4. Model learning

The training data for each image consist of input image
features v, {Ai} and output caption words sequence {Yt}.
Our goal is to learn all the attention model parameters
ΘA = {U , V , W ∗,∗, w∗,∗} jointly with all RNN param-
eters ΘR by minimizing a loss function over training set.
The loss of one training example is deﬁned as the total
negative log-likelihood of all the words combined with
regularization terms on attention scores {αi

t} and {βi
t}:

log p(Yt) + g(α) + g(β),

(10)

−(cid:88)

t

min

ΘA,ΘR

Figure 3. An example of top 10 detected visual attributes on an
image using different approaches.

t and βi

where α and β are attention score matrices with their (t, i)-
th entries being αi
t. The regularization function g
is used to enforce the completeness of attention paid to
every attribute in {Ai} as well as the sparsity of attention
at any particular time step. This is done by minimizing the
following matrix norms of α (same for β):

(cid:88)

(cid:88)

g(α) =(cid:107)α(cid:107)1,p + (cid:107)αT(cid:107)q,1
αi
t]p]1/p +

=[

[

(cid:88)

(cid:88)

[

(αi

t)q]1/q,

(11)

i

t

t

i

where the ﬁrst term with p>1 penalizes excessive attention
paid to any single attribute Ai accumulated over the en-
tire sentence, and the second term with 0<q<1 penalizes
diverted attention to multiple attributes at any particular
time. We use a stochastic gradient descent algorithm with
an adaptive learning rate to optimize Eq. (10).

4. Visual attribute prediction

The prediction of visual attributes {Ai} is a key com-
ponent of our model in both training and testing. We pro-
pose two approaches for predicting attributes from an input
image. First, we explore a non-parametric method based
on nearest neighbor image retrieval from a large collection
of images with rich and unstructured textual metadata such
as tags and captions. The attributes for a query image
can be obtained by transferring the text information from
the retrieved images with similar visual appearances. The
second approach is to directly predict visual attributes from
the input image using a parametric model. This is mo-
tivated by the recent success of deep learning models on
visual recognition tasks [10, 18]. The unique challenge for
attribute detection is that usually there are more than one
visual concepts presented in an image, and therefore we are
faced with a multi-label problem instead of a multi-class
problem. Note that the two approaches to obtain attributes
are complementary to each other and can be used jointly.
Figure 3 shows an example of visual attributes predicted for
an image using different methods.
4.1. Non-parametric attribute prediction

Thanks to the popularity of social media, there is a
growing number of images with weak labels, tags, titles

vase flowers bathroom table glass sink blue  small white cleark-NNsitting table small many little glass different flowers vase shownMulti-label Rankingvase flowers table glass sitting kitchen water room white filledFCNand descriptions available on Internet. It has been shown
that these weakly annotated images can be exploited to learn
visual concepts [37], text-image embedding [14] and image
captions [7]. One of the fundamental assumptions is that
similar images are likely to share similar and correlated
annotations. Therefore, it is possible to discover useful
annotations and descriptions from visual neighbors in a
large-scale image dataset.

We extract key words as the visual attributes for our
model from a large image dataset. For fair comparison with
other existing work, we only do nearest neighbor search
on our training set to retrieve similar ones to test images.
It is expected that the attribute prediction accuracy can be
further improved by using a larger web-scale database. We
use the GoogleNet feature [32] to evaluate image distances,
and employ simple Term-Frequency (TF) to select the most
frequent words in the ground-truth captions of the retrieved
training images. In this way, we are able to build a list of
words for each image as the detected visual attributes.

4.2. Parametric attribute prediction

In addition to retrieved attributes, we also train para-
metric models to extract visual attributes. We ﬁrst build a
set of ﬁxed visual attributes by selecting the most common
words from the captions in the training data. The resulting
attributes are treated as a set of predeﬁned categories and
can be learned as in a conventional classiﬁcation problem.
The advance of deep learning has enabled image analysis
to go beyond the category level. In this paper we mainly
investigate two state-of-the-art deep learning models for
attribute prediction: using a ranking loss as objective func-
tion to learn a multi-label classiﬁer as in [13], and using a
Fully Convolutional Network (FCN) [24] to learn attributes
from local patches as in [11]. Both two methods produce
a relevance score between an image and a visual attribute,
which can be used to select the top ranked attributes as input
to our captioning model. Alternatives may exist which can
potentially yield better results than the above two models,
which is not in the scope of this work.

5. Experiments

We perform extensive experiments to evaluate the pro-
posed models. We report all the results using Microsoft
COCO caption evaluation tool1, including BLEU, Meteor,
Rouge-L and CIDEr [3]. We will ﬁrst brieﬂy discuss the
datasets and settings used in the experiments. Next, we
compare and analyze the results of the proposed model with
other state-of-the-art models on image captioning.

5.1. Datasets and settings

We choose the popular Flickr30k and MS-COCO to
evaluate the performance of our models. Flickr30k has a
total of 31, 783 images. MS-COCO is more challenging,
which has 123, 287 images. Each image is given at least
ﬁve captions by different AMT workers. To make the
results comparable to others, we use the publicly avail-
able splits2 of training, testing and validating sets for both
Flickr30k and MS-COCO. We also follow the publicly
available code [16] to preprocess the captions (i.e. building
dictionaries, tokenizing the captions).

Our captioning system is implemented based on a Long
Short-Term Memory (LSTM) network [35]. We set n =
m = 512 for the input and hidden layers, and use tanh
as nonlinear activation function σ. We use Glove feature
representation [29] with d = 300 dimensions as our word
embedding E.

The image feature v is extracted from the last 1024-
dimensional convolutional layer of the GoogleNet [32]
CNN model. Our attribute detectors are trained for the same
set of visual concepts as in [11] for Microsoft COCO data
set. We build and train another independent set of attribute
detectors for Flickr30k following the steps in [11] using
the training split of Flickr30k. The top 10 attributes with
highest detection scores are selected to form the set {Ai} in
our best attention model setting. An attribute set of such
size can maintain a good tradeoff between precision and
recall.

In training, we use RMSProp [34] algorithm to do model
updating with a mini-batch size of 256. The regularization
parameters are set as p = 2, q = 0.5 in (11).

In testing, a caption is formed by drawing words from
RNN until a special end word is reached. All our results are
obtained with the ensemble of 5 identical models trained
with different initializations, which is a common strategy
adopted in other work [35].

In the following experiments, we evaluate different ways
to obtain visual attributes as described in Section 4, includ-
ing one non-parametric method (k-NN) and two parametric
models trained with ranking-loss (RK) and fully-connected
network (FCN). Besides the attention model (ATT) de-
scribed in Section 3, two fusion-based methods to utilize
the detected attributes {Ai} are tested by simply taking the
element-wise max (MAX) or concatenation (CON) of the
embedded attribute vectors {Eyi}. The combined attribute
vector is used in the same framework and applied at each
time step.
5.2. Performance on MS-COCO

Note that the overall captioning performance will be af-
fected by the employed visual attributes generation method.

1https://github.com/tylin/coco-caption

2https://github.com/karpathy/neuraltalk

Dataset

Flickr30k

MS-COCO

Model
Ours-GT-ATT
Ours-GT-MAX
Ours-GT-CON
Google NIC [35]
Toronto [36]
Ours-GT-ATT
Ours-GT-MAX
Ours-GT-CON
Google NIC [35]
Toronto [36]

B-1
0.824
0.719
0.708
0.663
0.669
0.910
0.790
0.766
0.666
0.718

B-2
0.679
0.542
0.534
0.423
0.439
0.786
0.635
0.617
0.451
0.504

B-3
0.534
0.396
0.388
0.277
0.296
0.654
0.494
0.484
0.304
0.357

–

0.588
0.529
0.516

0.269
0.230
0.222

B-4 METEOR ROUGE-L CIDEr
0.949
0.412
0.747
0.283
0.276
0.685
0.183
0.199
0.534
0.379
0.377
0.203
0.250

0.185
0.341
0.279
0.279

0.667
0.580
0.582

1.685
1.161
1.237

–
–

–
–

–
–

–
–

–

0.230

Table 1. Performance of the proposed models using the ground-truth visual attributes on MS-COCO and Flickr30k. (–) indicates unknown
scores.

–

B-1
0.663
0.60
0.587

Model
Google NIC [35]
m-RNN [26]
LRCN [8]
MSR/CMU [4]
0.669
Toronto [36]
Ours-CON-k-NN 0.619
0.623
Ours-CON-RK
Ours-CON-FCN
0.639
Ours-MAX-k-NN 0.622
Ours-MAX-RK
0.623
0.633
Ours-MAX-FCN
0.618
Ours-ATT-k-NN
0.617
Ours-ATT-RK
Ours-ATT-FCN
0.647

B-2
0.423
0.41
0.39

–

0.439
0.426
0.432
0.447
0.426
0.429
0.444
0.428
0.424
0.460

Flickr30k
B-3
0.277
0.28
0.25

–

0.296
0.291
0.295
0.309
0.287
0.294
0.306
0.290
0.286
0.324

–
–
–

B-4 METEOR
0.183
0.19
0.165
0.126
0.199
0.197
0.200
0.213
0.193
0.202
0.21
0.195
0.193
0.230

0.164
0.185
0.179
0.179
0.188
0.178
0.178
0.181
0.172
0.177
0.189

B-1
0.666
0.67
0.628

–

0.718
0.675
0.647
0.700
0.673
0.655
0.699
0.676
0.679
0.709

B-2
0.451
0.49
0.442

–

0.504
0.503
0.472
0.532
0.501
0.478
0.530
0.505
0.506
0.537

MS-COCO
B-3
0.304
0.35
0.304

–

0.357
0.373
0.338
0.398
0.371
0.344
0.398
0.375
0.375
0.402

–
–
–

B-4 METEOR
0.203
0.25
0.21
0.19
0.250
0.279
0.237
0.300
0.279
0.245
0.301
0.281
0.282
0.304

0.204
0.230
0.227
0.204
0.238
0.227
0.208
0.240
0.227
0.231
0.243

Table 2. Performance in terms of BLEU-1,2,3,4 and METER compared with other state-of-the-art methods. For those competing methods,
we extract their performance from their latest version of paper. The numbers in bold face are the best known results and (–) indicates
unknown scores.

Therefore, we ﬁrst assume ground truth visual attributes are
given and evaluate different ways (CON, MAX, ATT) to
select these attributes. This will indicate the performance
limit of exploiting visual attributes for captioning. To
be more speciﬁc, we select the most common words as
visual attributes from their ground-truth captions to help the
generation of captions. Table 1 shows the performance of
the three models using the ground-truth visual attributes.
These results can be considered as the upper bound of the
proposed models, which suggest that all of the proposed
models (ATT, MAX and CON) can signiﬁcantly improve
the performance of image captioning system, if given visual
attributes of high quality.

Now we evaluate the complete pipeline with both at-
tribute detection and selection. The right half of Table 2
shows the performance of the proposed model on the valida-
tion set of MS-COCO. In particular, our proposed attention
model outperforms all the other state-of-the-art methods in

most of the metrics, which are commonly used together for
fair and overall performance measurement. Note that B-1
is related to single word accuracy, the performance gap of
B-1 between our model and [36] may be due to different
preprocessing for word vocabularies.

In Table 2,

the entries with preﬁx “Ours” show the
performance of our method conﬁgured with different com-
binations of attribute detection and selection methods. In
general, attention model ATT with attributes predicted by
FCN model yields better performance than other combina-
tions over all benchmarks.

For attribute fusion methods MAX and CON, we ﬁnd
using the top 3 attributes gives the best performance. Due
to the lack of attention scheme, too many keywords may
increase the parameters for CON and may reduce the dis-
tinction among different groups of keywords for MAX.
Both models have comparable performance. The results
also suggest that FCN gives more robust visual attributes.

Alg

B-1

c5

B-2

B-3

B-4

c5

c40

c5

c40

c5

c40

METEOR
c40
c5

ROUGE-L
c40
c5

CIDEr

c5

c40

c40
0.92

ATT
0.7311
0.5651 0.8152 0.4241 0.7092 0.3161 0.5992 0.2503 0.3354 0.5351 0.6821 0.9431 0.9581
OV
0.7136 0.8953 0.5426 0.8024 0.4074 0.6944 0.3092 0.5873 0.2541 0.3461 0.5302 0.6821 0.9431 0.9462
MSR Cap 0.7155 0.9071 0.5435 0.8191 0.4074 0.7101 0.3083 0.6011 0.2484 0.3392 0.5264 0.6803 0.9313 0.9373
mRNN
0.7164 0.8906 0.5454 0.7986 0.4046 0.6876 0.2996 0.5756 0.2429 0.3258 0.5216 0.6666 0.9174 0.9354

Table 3. Performance of the proposed attention model on the online MS-COCO testing server (https://www.codalab.org/
competitions/3221#results), comparing with other three leading methods. The subscripts indicate the current ranking of the
individual algorithms with respect to the evaluation metrics. ATT refers to our entry, OV refers to the entry of OriolVinyals, MSR Cap
refers to MSR Captivator, and mRNN refers to mRNN share.JMao.

MAX and CON can also outperform the state-of-the-art
models in most evaluation metrics using visual attributes
predicted by FCN. Attention models (ATT) on FCN visual
attributes show the best performance among all the pro-
posed models. On the other hand, visual attributes predicted
by ranking loss (RK) based model seem to have even worse
performance than k-NN. This is possible due to the lack
of local features in training the ranking loss based attribute
detectors.

Performance on MS-COCO 2014 test server We also
evaluate our best model, Ours-ATT-FCN, on the MS COCO
Image Captioning Challenge sets c5 and c40 by uploading
results to the ofﬁcial test server.
In this way, we could
compare our method to all the latest state-of-the-art meth-
ods. Despite the popularity of this contest, our method
has held the top 1 position by many metrics at the time
of submission. Table 3 lists the performance of our model
and other leading methods. Besides the absolute scores,
we provide the rank of our model among all competing
methods for each metric. By comparing with two other
leading methods, we can see that our method achieves better
ranking across different metrics. All the results are up-to-
date at time of submission.
5.3. Performance on Flickr30k

We now report the performance on Flickr30k dataset.
Similarly, we ﬁrst train and test our models by using
the ground-truth visual attributes to get an upper-bound
performance. The obtained results are listed in Table 1.
Clearly, with correct visual attributes, our model is able
to improve caption results by a large margin comparing
to other methods. We then conduct the full evaluation.
As shown in the left half of Table 2, the performance of
our models are consistent with that on MS-COCO, and
Ours-ATT-FCN achieves signiﬁcantly better results over
all competing methods in all metrics, except B-1 score,
for which we have discussed potential causes in previous
section.
5.4. Visualization of attended attributes

We now provide some representative captioning exam-
ples in Figure 4 for better understanding of our model. For

B-1 B-2 B-3 B-4 MT RG CD
Alg
0.88 0.75 0.62 0.50 0.33 0.65 1.56
Input
Output 0.89 0.76 0.62 0.50 0.33 0.65 1.58
Full
0.91 0.79 0.65 0.53 0.34 0.67 1.68

Table 4. The performance of different models with input attention
(ﬁrst row), output attention (second row), and both attentions
(third row) using the ground-truth visual attributes on MS-COCO
validation dataset. We use abbreviations MT, RG and CD to stand
for METEOR, ROUGE-L and CIDEr respectively.

each example, Figure 4 contains the generated captions for
t and the
several images with the input attention weights αi
output attention weights βi
t plotted at each time step. The
generated caption sentences are shown under the horizontal
time axis of the curve plots, and each word is positioned
at the time step it is generated. For visual simplicity, we
only show the attention weights of top attributes from the
generated sentence. As captions are being generated, the at-
tention weights at both input and output layers vary properly
as sentence context changes, while the distinction between
their weights shows the underlying attention mechanisms
are different.
In general, the activations of both α and
β have strong correlation with the words generated. For
example, in the Figure 4(a), the attention on “swimming”
peaks after “ducks” is generated for both α and β.
In
Figure 4(d), the concept of “motorcycle” attracts strong
attention for both α and β. The β peaks twice during the
captioning process, one after “photo of” and the other after
“riding a”, and both peaks reasonably align with current
contexts.
It is also observed that, as the output attention
weight, β correlates with output words more closely; while
the input weights α are allocated more on background
context such as the “plate” in Figure 4(b) and the “group”
in Figure 4(c). This temporal analysis offers an intuitive
perspective on our visual attributes attention model.
5.5. Analysis of attention model

As described in Section 3.2 and Section 3.3, our frame-
work employs attention at both input and output layers to
the RNN module. We evaluate the effect of each of the
individual attention modules on the ﬁnal performance by

(a)

(d)

Figure 4. Examples of attention weights changes along with the generation of captions. Second row: input attention weights α. Third
row: output attention weights β. The X-axis shows the generated caption for each image and the Y -axis is the weight. We only show the
change of weights on three top visual attributes for each example.

(b)

(c)

Figure 5. Qualitative analysis on impact of visual attributes. The left six examples (green solid box) shows that the visual attributes help
generate more accurate captions. The right two examples (red dashed box) indicate that incorrect visual attributes may mislead the model.

turning off one of the attention modules while keeping the
other one in our ATT-FCN model. The two model variants
are trained on MS-COCO dataset using the ground-truth
visual attributes, and compared in Table 4. The performance
of using output attention is slightly better than only using
input attention on some metrics. However, the combination
of this two attentions improves the performance by several
percents on almost every metric. This can be attributed
to that fact that attention mechanisms at input and output
layers are not the same, and each of them attend to different
aspects of visual attributes. Therefore, combining them may
help provide a richer interpretation of the context and thus
lead to improved performance.

tention model (ATT) with Google NIC, which corresponds
to the LSTM model used in our framework. Figure 5 shows
several examples. We can ﬁnd that visual attributes can
help our model to generate better captions, as shown by
the examples in the green box. However, irrelevant visual
attributes may disrupt the model to attend on incorrect
concepts. For example, in the left example in the red
dashed box, “clock” distracts our model to the clock tower
in background from the main objects in foreground. In the
rightmost example, and “tower” may be the culprit of the
word “building” in the predicted caption.

6. Conclusion

5.6. The role of visual attributes

We also conduct a qualitative analysis on the role of
visual attributes in caption generation. We compare our at-

In this work, we proposed a novel method for the task
of image captioning, which achieves state-of-the-art per-
formance across popular standard benchmarks. Different
from previous work, our method combines top-down and

0   0.050.1 0.150.2 swimmingbirdslake0   0.050.1 0.150.2 agroupofducksswimminginapond0   0.050.1 0.150.2 platesandwichsalad0   0.050.1 0.150.2 awhiteplatetoppedwithasandwichandsalad0   0.050.1 0.150.2 grouptablesitting0   0.050.1 0.150.2 agroupofpeoplesittingaroundatable0   0.050.1 0.150.2 ridingmotorcycleswhite0   0.050.1 0.150.2 ablackandwhitephotoofamanridingamotorcycleGoogle NICTop-5 visual attributesATT-FCNa white plate topped with a variety of food.a plate with a sandwich and french fries.plate broccoli fries food frencha baby with a toothbrush in its mouth.a baby is eating a piece of paper.teeth brushing toothbrush holding babya traffic light is on a city street.a street with cars and a clock tower.street sign cars clock traffica yellow and black train on a track.a train traveling down tracks next to a building.train tracks clock tower downa close up of a plate of food on a table.a table topped with a cake with candles on it.a teddy bear sitting on top of a chair .a white teddy bear sitting next to a stuffed animal .a person is holding colorful umbrella.a black umbrella sitting on top of a sandy beach .a woman is holding a cell phone in her hand .a woman holding a pair of scissors in her hands .cake table plate sitting birthdayteddy cat bear stuffed whiteumbrella beach water sitting boatwoman bathroom her scissors manbottom-up strategies to extract richer information from an
image, and couples them with a RNN that can selectively
attend on rich semantic attributes detected from the image.
Our method, therefore, exploits not only an overview under-
standing of input image, but also abundant ﬁne-grain visual
semantic aspects. The real power of our model lies in its
ability to attend on these aspects and seamlessly fuse global
and local information for better caption. For next steps,
we plan to experiment with phrase-based visual attribute
with its distributed representations, as well as exploring new
models for our proposed semantic attention mechanism.

Acknowledgment

This work was generously supported in part by
Adobe Research and New York State through the Go-
ergen Institute for Data Science at
the University of
Rochester.

References
[1] J. Ba, V. Mnih, and K. Kavukcuoglu. Multiple object recog-
nition with visual attention. Proceedings of the International
Conference on Learning Representations (ICLR), 2015. 3

[2] D. Bahdanau, K. Cho, and Y. Bengio. Neural machine trans-
lation by jointly learning to align and translate. Proceedings
of the International Conference on Learning Representations
(ICLR), 2014. 2

[3] X. Chen, H. Fang, T.-Y. Lin, R. Vedantam, S. Gupta, P. Dol-
lar, and C. L. Zitnick. Microsoft coco captions: Data collec-
tion and evaluation server. arXiv preprint arXiv:1504.00325,
2015. 5

[4] X. Chen and C. L. Zitnick. Mind’s eye: A recurrent visual
representation for image caption generation. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 2422–2431, 2015. 1, 6

[5] K. Cho, B. Van Merri¨enboer, C. Gulcehre, D. Bahdanau,
F. Bougares, H. Schwenk, and Y. Bengio. Learning phrase
representations using rnn encoder-decoder for statistical ma-
chine translation. Conference on Empirical Methods in
Natural Language Processing (EMNLP 2014), 2014. 2

[6] M. Denil, L. Bazzani, H. Larochelle, and N. de Freitas.
Learning where to attend with deep architectures for image
tracking. Neural computation, 24(8):2151–2184, 2012. 3

[7] J. Devlin, S. Gupta, R. Girshick, M. Mitchell, and C. L.
Zitnick. Exploring nearest neighbor approaches for image
captioning. arXiv preprint arXiv:1505.04467, 2015. 5

[8] J. Donahue, L. A. Hendricks, S. Guadarrama, M. Rohrbach,
S. Venugopalan, K. Saenko, and T. Darrell. Long-term
recurrent convolutional networks for visual recognition and
description. In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, pages 2626–2634,
2015. 1, 2, 6

[9] D. Elliott and F. Keller.

Image description using visual
dependency representations. In EMNLP, pages 1292–1302,
2013. 1, 2

[10] V. Escorcia, J. C. Niebles, and B. Ghanem. On the relation-
ship between visual attributes and convolutional networks.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 1256–1264, 2015. 4

[11] H. Fang, S. Gupta, F. Iandola, R. Srivastava, L. Deng,
P. Doll´ar, J. Gao, X. He, M. Mitchell, J. Platt, et al. From
captions to visual concepts and back. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 1473–1482, 2015. 1, 2, 5

[12] A. Farhadi, M. Hejrati, M. A. Sadeghi, P. Young,
C. Rashtchian, J. Hockenmaier, and D. Forsyth. Every
picture tells a story: Generating sentences from images. In
Computer Vision–ECCV 2010, pages 15–29. Springer, 2010.
1, 2

[13] Y. Gong, Y. Jia, T. Leung, A. Toshev, and S. Ioffe. Deep
convolutional ranking for multilabel image annotation. Pro-
ceedings of the International Conference on Learning Rep-
resentations (ICLR), 2014. 5

[14] Y. Gong, L. Wang, M. Hodosh, J. Hockenmaier, and
S. Lazebnik. Improving image-sentence embeddings using
In Computer
large weakly annotated photo collections.
Vision–ECCV 2014, pages 529–545. Springer, 2014. 5

[15] K. Gregor, I. Danihelka, A. Graves, and D. Wierstra. Draw:
arXiv

A recurrent neural network for image generation.
preprint arXiv:1502.04623, 2015. 3

[16] A. Karpathy and L. Fei-Fei. Deep visual-semantic align-
In The IEEE
ments for generating image descriptions.
Conference on Computer Vision and Pattern Recognition
(CVPR), June 2015. 1, 2, 5

[17] C. Koch and S. Ullman. Shifts in selective visual attention:
towards the underlying neural circuitry. In Matters of intelli-
gence, pages 115–141. Springer, 1987. 2

[18] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
Advances in neural information processing systems, pages
1097–1105, 2012. 2, 4

[19] G. Kulkarni, V. Premraj, S. Dhar, S. Li, Y. Choi, A. C. Berg,
and T. L. Berg. Baby talk: Understanding and generating
In Proceedings of the 24th CVPR.
image descriptions.
Citeseer, 2011. 1, 2

[20] P. Kuznetsova, V. Ordonez, A. C. Berg, T. L. Berg, and
Y. Choi. Collective generation of natural image descriptions.
In Proceedings of the 50th Annual Meeting of the Associa-
tion for Computational Linguistics: Long Papers-Volume 1,
pages 359–368. Association for Computational Linguistics,
2012. 1, 2

[21] H. Larochelle and G. E. Hinton. Learning to combine foveal
glimpses with a third-order boltzmann machine. In Advances
in neural information processing systems, pages 1243–1251,
2010. 2

[22] R. Lebret, P. O. Pinheiro, and R. Collobert. Simple image
description generator via a linear phrase-based approach.
Proceedings of the International Conference on Learning
Representations (ICLR), 2015. 1, 2

[23] S. Li, G. Kulkarni, T. L. Berg, A. C. Berg, and Y. Choi.
Composing simple image descriptions using web-scale n-
In Proceedings of the Fifteenth Conference on
grams.

Computational Natural Language Learning, pages 220–228.
Association for Computational Linguistics, 2011. 1, 2

[24] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
June 2015. 5

[25] J. Mao, W. Xu, Y. Yang, J. Wang, Z. Huang, and A. Yuille.
Learning like a child: Fast novel visual concept learning
In ICCV, 2015. 1,
from sentence descriptions of images.
2, 4

[26] J. Mao, W. Xu, Y. Yang, J. Wang, and A. Yuille. Deep
captioning with multimodal recurrent neural networks (m-
rnn). arXiv preprint arXiv:1412.6632, 2014. 1, 2, 6

[27] T. Mikolov, I. Sutskever, K. Chen, G. S. Corrado, and
J. Dean. Distributed representations of words and phrases
and their compositionality. In Advances in neural informa-
tion processing systems, pages 3111–3119, 2013. 3

[28] V. Mnih, N. Heess, A. Graves, et al. Recurrent models
In Advances in Neural Information

of visual attention.
Processing Systems, pages 2204–2212, 2014. 3

[29] J. Pennington, R. Socher, and C. D. Manning. Glove: Global
vectors for word representation. Proceedings of the Em-
piricial Methods in Natural Language Processing (EMNLP
2014), 12:1532–1543, 2014. 3, 5

[30] M. W. Spratling and M. H. Johnson. A feedback model of vi-
sual attention. Journal of cognitive neuroscience, 16(2):219–
237, 2004. 2

[31] I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to sequence
learning with neural networks. In Advances in neural infor-
mation processing systems, pages 3104–3112, 2014. 2

[32] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed,
D. Anguelov, D. Erhan, V. Vanhoucke, and A. Rabinovich.
In The IEEE Conference
Going deeper with convolutions.
on Computer Vision and Pattern Recognition (CVPR), June
2015. 5

[33] Y. Tang, N. Srivastava, and R. R. Salakhutdinov. Learning
In Advances in
generative models with visual attention.
Neural Information Processing Systems, pages 1808–1816,
2014. 2

[34] T. Tieleman and G. Hinton. Lecture 6.5 - rmsprop, coursera:

Neural networks for machine learning. 2012. 5

[35] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan. Show
and tell: A neural image caption generator. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 3156–3164, 2015. 1, 2, 5, 6

[36] K. Xu, J. Ba, R. Kiros, A. Courville, R. Salakhutdinov,
R. Zemel, and Y. Bengio. Show, attend and tell: Neural im-
age caption generation with visual attention. arXiv preprint
arXiv:1502.03044, 2015. 1, 2, 3, 6

[37] B. Zhou, V. Jagadeesh, and R. Piramuthu. Conceptlearner:
Discovering visual concepts from weakly labeled image
In The IEEE Conference on Computer Vision
collections.
and Pattern Recognition (CVPR), June 2015. 5

