6
1
0
2

 
r
a

 

M
4
1

 
 
]
E
M

.
t
a
t
s
[
 
 

1
v
6
9
1
4
0

.

3
0
6
1
:
v
i
X
r
a

Unbiased local solutions of partial diﬀerential

equations via the Feynman-Kac Identities

Jake Carson1∗, Murray Pollock1 and Mark Girolami12

1 University of Warwick, Department of Statistics, UK.

2 The Alan Turing Institute for Data Science, British Library, UK.

Abstract

The Feynman-Kac formulae (FKF) express local solutions of par-

tial diﬀerential equations (PDEs) as expectations with respect to some

complementary stochastic diﬀerential equation (SDE). Repeatedly sam-

pling paths from the complementary SDE enables the construction of

Monte Carlo estimates of local solutions, which are more naturally

suited to statistical inference than the numerical approximations ob-

tained via ﬁnite diﬀerence and ﬁnite element methods. Until recently,

simulating from the complementary SDE would have required the use

of a discrete-time approximation, leading to biased estimates. In this

paper we utilize recent developments in two areas to demonstrate that

∗Email: Jake.Carson@warwick.ac.uk

1

it is now possible to obtain unbiased solutions for a wide range of PDE

models via the FKF. The ﬁrst is the development of algorithms that

simulate diﬀusion paths exactly (without discretization error), and

so make it possible to obtain Monte Carlo estimates of the FKF di-

rectly. The second is the development of debiasing methods for SDEs,

enabling the construction of unbiased estimates from a sequence of

biased estimates.

Keywords: Debiasing; Exact algorithms; Feynman Kac formula; Multi-

level Monte Carlo; Partial diﬀerential equations; Stochastic diﬀerential equa-

tions.

1. Introduction

Partial diﬀerential equations (PDEs) describe many natural and physical

phenomena, and have long been the foundation of mathematical models used

for the study of complex behaviour. These can be considered forward models,

in the sense that for some given set of model parameters they generate a set

of possible observations. In many situations the goal is to use observations

to estimate the model parameters, and in so doing, better understand the

underlying processes of the system. This is known as the inverse problem,

which is detailed in, for example, Stuart (2010).

In most cases analytical

solutions to PDEs of interest are unavailable, and so solutions are usually

obtained using a numerical approximation. Approaches such as ﬁnite element

and ﬁnite diﬀerence methods provide discrete space-time approximations to

the solutions at speciﬁed grid-points over regions of interest. These approx-

2

imate solutions contain systematic errors induced by the discretization of

the PDEs. Whilst the convergence properties of these methods are usually

known as the grid is reﬁned, the magnitude of the error is almost always un-

available. This is problematic when performing statistical inference in both

the forward and inverse problems, as it is often not possible to construct

valid conﬁdence intervals, or Bayesian credible intervals.

An alternative approach is to use the Feynman-Kac formulae (FKF) (Kac,

1951), which describe the relationship between the local solutions to certain

classes of PDEs and the expectations of initial and boundary functions with

respect to the law of complementary stochastic diﬀerential equations (SDEs).

The FKF approach can only be applied to certain classes of PDEs, but for

such cases this approach may have a number of advantages when perform-

ing statistical inference. Computationally, the FKF approach may be more

eﬃcient in high dimensional problems as the number of grid-points in global

solvers increases exponentially with the number of dimensions, whereas the

cost of simulating from the complementary SDEs grows sub-exponentially.

An additional advantage in the inverse problem is that the number of obser-

vations will typically be far fewer than the number of grid points required

in a ﬁnite diﬀerences or ﬁnite elements solution, and so obtaining only the

required local solutions may further reduce the computational cost. The es-

timates of each local solution are also independent, and so can be run in

parallel, drastically reducing wall-clock times. Finally, the Monte Carlo er-

ror can be studied using, for example, the central limit theorem, oﬀering a

3

more natural approach for statistical inference than the error bounds of ﬁnite

diﬀerence and ﬁnite element methods. The unbiased local solutions can then

be embedded in either a Bayesian or maximum likelihood framework in order

to study the inverse problem.

Analytical solutions to the FKF are rarely available, but it is usually

possible to obtain Monte Carlo estimates by sampling a ﬁnite number of

random paths from the complementary SDE. Owing to the diﬃculty of sim-

ulating from SDEs, existing applications of the FKF have suﬀered various

limitations. The random walk on spheres (WOS) algorithm (Muller, 1956),

for example, was proposed to obtain Monte Carlo solutions to the Dirichlet

problem of Laplace’s equation. The WOS algorithm has since been extended

(see for example (Hwang and Mascagni, 2001; Hwang, Mascagni and Given,

2003)), but is still restricted to a narrow class of models, in particular re-

quiring that the drift and diﬀusion functions of the complementary SDE are

constant. In all cases solutions are approximate as simulated paths are ter-

minated in a region near the boundary, rather than on the boundary itself.

A more recent modiﬁcation is the random walk on rectangles (WOR) al-

gorithm (Deaconu and Lejay, 2006). If the domain is a polytope then the

WOR algorithm can be used to simulate the absorption time exactly, and so

the only error in the estimate of the FKF is that associated with the Monte

Carlo approximation. In many situations the drift and/or volatility functions

will be non-constant, preventing the application of the WOS and WOR algo-

rithms. In such cases estimates of the FKF can be obtained by using discrete

4

time approximations of the SDE, such as the Euler-Maruyama approximation

(Kloeden and Platen, 1992), for example. This approach was used in Her-

bei and Berliner (2014) to perform inference on an ocean-circulation model.

However, such numerical schemes lead to biased estimates of the FKF due

to discretization errors.

In this article we demonstrate how advancements in two areas can be

used to obtain unbiased estimates of the FKF for a wider range of mod-

els. The ﬁrst is the recent development of exact algorithms (EA). These

are rejection algorithms that use Brownian motion proposals to obtain ﬁnite

representations of SDEs of interest, and are exact in the sense that they do

not contain discretization errors.

In particular we extend the localisation

approach of Chen and Huang (2013) to multiple dimensions, and design an

adaptive scheme to simulate the exact ﬁrst passage time from a hyperrect-

angle, allowing us to directly obtain Monte Carlo estimates of solutions to

certain Dirichlet problems. The EA approach imposes restrictions on the

drift and volatility functions of the complementary SDE, and so is not al-

ways available. The second is the development of debiasing techniques for

expectations with respect to SDEs. Debiasing techniques construct unbiased

estimates using a weighted sum of biased estimates that are obtained from

numerical approximations. Since debiasing only requires that we are able to

simulate from the SDE using approximate (but convergent) schemes, it has

fewer restrictions than EA, and so can be more generally applied, albeit at

the cost of larger work-variance products.

5

The layout of this paper is as follows. In Section 2 we discuss the FKF,

demonstrating how to represent local solutions of PDEs as expectations with

respect to the law of complementary SDEs.

In Section 3 we discuss how

exact algorithms can be used to obtain unbiased local solutions to PDEs via

exactly simulating from the complementary SDEs. In Section 4 we discuss

how unbiased estimates can be obtained using discrete-time approximations

of the complementary SDEs via debiasing. In Section 5 we give some nu-

merical examples in order to compare the two approaches. In Section 6 we

conclude and discuss future directions for research.

2. Feynman-Kac Formulae

The FKF relate solutions of a class of deterministic second order PDEs

with expectations of initial and boundary functions with respect to the law

of complementary SDEs. An introduction is available in Oksendal (2000),

and covered in more detail in Pardoux and R˘a¸scanu (2014). Consider the

case where u(xxx, t) ∈ C 2,1(cid:0)Rd × [0,∞)(cid:1) is the solution of a system described

by the PDE

∂u
∂t

=

1
2

d

Xi,j=1

aij(xxx, t)

∂2u

∂xi∂xj

+

d

Xi=1

bi(xxx, t)

∂u
∂xi − c(xxx, t)u,

xxx ∈ Rd, t > 0.
(1)

with the initial condition u(xxx, 0) = f (xxx). This is known as the initial value

problem. We assume that c(xxx, t) is positive and bounded above, and that

the coeﬃcients in (1) satisfy the necessary conditions to ensure the existence

6

of a unique solution (see Evans (1998), for example). The FKF allow us

to represent the local solution of the PDE, u(xxx, t), as the expectation of

the initial function, f (xxx), with respect to the law of a complementary SDE

satisfying

dXXX x

s = b(XXX x

s , t − s)ds + σσσ(XXX x

s , t − s)dWWW s,

(2)

where WWW s ∈ Rd is a vector of independent Brownian motions at time s,
s ∈ Rd is the state of the SDE at time s and initialised at xxx, i.e. XXX x
XXX x
0 = xxx,
and σσσ satisﬁes aaaij(xxx, s) =Pk σik(xxx, s)σkj(xxx, s). In this speciﬁc case,

u(xxx, t) = E(cid:26)f (XXX x

t ) exp(cid:18)−Z t

0

c (XXX x

s , t − s) ds(cid:19)(cid:27) .

(3)

Note that we have further assumed that bbb(xxx, s) and σσσ(xxx, s) are suﬃciently

regular to ensure a unique, non-explosive, weak solution to (2) (see Karatzas

and Shreve (1991), for example).

In nontrivial cases (3) will need to be estimated using Monte Carlo meth-

ods. In comparison to deterministic solvers we have replaced the determin-

istic discretization error with Monte Carlo error, and so the error analysis of

(3) can be performed with the Central Limit Theorem (CLT), for example

(Graham et al., 1996). This probabilistic approach is more naturally suited

for performing statistical inference.

2.1. Bounded Domains

In many situations the PDE is bounded on the domain Ω. Common

7

boundary conditions are Dirichlet boundary conditions, deﬁned by

u(xxx, t) = g(xxx, t)

xxx ∈ ∂Ω,

where ∂Ω is the boundary of the domain, and Neumann boundary conditions,

deﬁned by

∂u(xxx, t)

∂nnn

= h(xxx, t)

xxx ∈ ∂Ω,

where nnn denotes the normal to the boundary. The FKF can be modiﬁed to

include such boundary conditions by modifying the law of the complementary

SDE (Pardoux and R˘a¸scanu, 2014; Skorokhod, 1962). For example, consider

a system on the domain Ω with Dirichlet boundary conditions. We now have

a PDE of the form

∂u
∂t

=

1
2

d

Xi,j=1

aij(xxx, t)

∂2u

∂xi∂xj

+

d

Xi=1

bi(xxx, t)

∂u
∂xi − c(xxx, t)u,

xxx ∈ Ω, t > 0,

with initial and boundary conditions

u(xxx, 0) = f (xxx), xxx ∈ Ω,
u(xxx, t) = g(xxx), xxx ∈ ∂Ω, t > 0.

The expectation in the FKF is now with respect to the law of an absorbed

Brownian motion. Deﬁne a stopping time,

γx,t

Ω = inf(cid:8)s ≥ 0 | XXX x

s ∈ Rd\Ω,(cid:9)

8

which is the ﬁrst time at which the stochastic process hits the boundary,

∂Ω, and is absorbed. Deﬁne a second stopping time, ˆt = min(γx,t

Ω , t), which

returns t if the process does not hit the boundary before time t, and returns

the ﬁrst time at which the stochastic process hits the boundary otherwise.

For convenience, deﬁne:

f (xxx),

if ˆt = t,

g(xxx),

if ˆt < t,

k(xxx) =


In this case the FKF takes the form

u(xxx, t) = E(k(cid:0)XXX x

ˆt(cid:1) exp −Z ˆt

0

c (XXX x

s , t − s) ds!) .

(4)

In the case of Neumann boundary conditions a similar modiﬁcation can be

used, in which the Brownian motion is reﬂected rather than absorbed (Par-

doux and R˘a¸scanu, 2014).

3. Obtaining FKF estimates via path space importance sampling

The law of the complementary SDE is rarely available in closed-form.

We must resort to numerical simulation of the SDE in order to obtain a

Monte Carlo estimate of the integrals in (3) and (4). Until recently this

would require the use of a discrete time approximation, such as the Euler-

Maruyama method, leading to bias in the FKF estimates. The development

of path space importance sampling algorithms (commonly referred to as exact

9

algorithms, or EA) have now made exact simulation (without discretisation

error) from a wide range of SDEs possible.

In turn, by constructing the

proposal in a particular manner, it is possible to obtain unbiased estimates of

local solutions of parabolic/elliptic PDEs with Dirichlet boundary conditions

on polytopal domains. These developments are described in the remainder

of this section. For notational convenience we will limit the initial discussion

to time-homogenous univariate diﬀusions, and cover relevant extensions at

the end of the section. In addition to the assumptions given in Section 2, for

the remainder of the section we assume:

1. Continuity assumption: The drift coeﬃcient b(x, s) ∈ C 1, and the

volatility coeﬃcient is strictly positive and σ(x, s) ∈ C 2.

2. Growth bound assumption: There exists some constant K > 0 such

that |b(x)| + |σ(x)| ≤ K(1 + |x|2) for all x ∈ R.

These assumptions are suﬃcient for the EA methodology presented here. In

particular, for application of EA it is typically necessary for the target SDE

to have unit volatility, ensuring that standard Brownian motion provides an

equivalent measure. Assumptions 1 and 2 permit the use of the Lamperti

transform (A¨ıt-Sahalia, 2002), as follows: From the complementary SDE,

construct a new process

dY y

s = η(X x

s ) =Z X x

z

s

1

σ(v)

dv,

10

so that transformed SDE then takes the form

dY y

s = α(Y y

s )ds + dWs,

where superscript y indicates that Y y

0 = y, and

α(v) =

b ((η−1(v))
σ ((η−1(v)) −

1
2

σ′(cid:0)η−1(v)(cid:1) .

EA utilises rejection sampling (von Neumann, 1951) to sample a skeleton

of an SDE of interest. A skeleton is an exact (without discretisation error)

sample of the SDE at a ﬁnite number of time points, which additionally

contains information about the time interval of the path, [0, t], and path

space information that ensures the sample path is almost surely constrained

to some compact interval (Pollock, Johansen and Roberts, 2014). Denoting

the target measure (the law of the SDE) as T[0,t], skeletons are obtained via

sampling from an equivalent proposal measure, P[0,t], which is often taken to

be standard Brownian motion. The probability of accepting proposed paths

is proportional to the Radon-Nikod´ym derivative of T[0,t] with respect to P[0,t]

(Oksendal, 2000).

In order to propose sample paths, we utilise the methodology developed

in Chen and Huang (2013), which can be considered as a localised EA (LEA)

approach. The localised approach partitions the simulation of a sample path

by ﬁrst ﬁxing an interval around the initial value and then probabilistically

samples an exit time and location for the proposed path. The simulated exit

11

point then becomes the initial value in the next iteration of the algorithm,

and this continues until the entire path is sampled. More formally, consider

the sequence of ﬁrst passage times

ζ (i) = inf(cid:0)s ≥ 0 :(cid:12)(cid:12)Yζ (i) − Yζ (i−1)(cid:12)(cid:12) > θ(cid:1) , i ≥ 1

for some user deﬁned constant θ, which gives the half-width of the interval.

Furthermore denote (ζ (0) = 0, Yζ (0) = y) as the start point of the (trans-

formed) complementary SDE. In LEA the pairs (ζ (i), Yζ (i)) are sequentially

simulated until the target time, t, has been surpassed. This requires the simu-
lation of two random variables, ∆ζ (i) = ζ (i)−ζ (i−1) and ∆Y (i) = Yζ (i)−Yζ (i−1),
which bound the path of Ys.

Brownian motion is used as the proposal distribution, requiring that we
are able to sample ∆ς (i) = ς (i) − ς (i−1) and ∆W (i) = Wζ (i) − Wζ (i−1), where
Ws is a standard Brownian motion, and

ς (i) = inf(s ≥ 0 : |Wς (i) − Wς (i−1)| > θ), i ≥ 1,

with (cid:0)ς (0) = 0, Wς (0) = y(cid:1). The ﬁrst passage times of Brownian motion from

a symmetric interval can be eﬃciently sampled using the rejection algorithm

developed in Devroye (2009), which has a rejection rate of less than 0.001.

Once the ﬁrst passage time is sampled, the symmetric property of Brownian

12

motion means that

P (∆W (i) = θ) = P (∆W (i) = −θ) =

1
2

.

The value of θ does not need to remain constant, and we could instead

consider selecting a sequence of constants, θ(i). In particular, when the SDE

is bounded as in the Dirichlet problem, then we can exactly simulate the

absorption time of the path by adaptively choosing θ(i) so that one side of the

interval coincides with the nearest boundary. It is also beneﬁcial to include

an upper limit, ˜θ = √t − ς (i−1), where t is the target time, in order to avoid

the extra computational expense incurred when sampled ﬁrst passage times

are signiﬁcantly larger than the target time. When a sampled ς (i) exceeds

the target time, the terminal value, Wt, can be sampled using the law of a

Bessel bridge with minimum (or maximum) Wς (i).

Denoting Q[ς (i−1),ς (i)∧t] as the law of the transformed SDE, and W[ς (i−1),ς (i)∧t]
as the law of a standard Brownian motion, the Radon-Nikod´ym derivative

of Q[ς (i−1),ς (i)∧t] with respect to W[ς (i−1),ς (i)∧t] is

dQ[ς (i−1),ς (i)∧t]
dW[ς (i−1),ς (i)∧t]

(Y ) ∝ exp(A(Wς (i)∧t) −Z ς (i)∧t

ς (i−1)

φ(Ys)ds) ,

(5)

0 α(z)dz, and φ(v) = 1

2 (α(v)2 + α′(v)).

It was noted in

where A(v) = R v

Chen and Huang (2013) that the continuity of φ(v) ensures that the Radon-

Nikod´ym derivative is bounded, allowing the construction of a valid accep-

13

tance probability proportional to (5). This requires calculating an upper

bound for exp(A(v)), and upper and lower bounds for φ(v) over the current

interval. For the Dirichlet problem it is possible to obtain bounds over the

entire domain, which can then be applied to every interval. Whether this is

a more computationally eﬃcient approach than evaluating tighter bounds in

each iteration will be problem dependent. Whilst it is not possible to com-

pute the acceptance probability directly as it requires the full sample path,

an unbiased acceptance probability can be obtained using Poisson thinning

(Lewis and Shedler, 1979), which requires only a ﬁnite dimensional repre-

sentation of the sample path (Beskos, Papaspiliopoulos and Roberts, 2006a;

Chen and Huang, 2013).

Accepted simulations from EA can be used to obtain Monte Carlo es-

timates of the FKF by using the inverse of the Lamperti transform. Since

the function c(x, t) is required to be bounded, say by Lc and Mc, the path

weighting term in (3) and (4) can also be estimated using Poisson thinning.

A naive Monte Carlo estimate is then given by

ˆu (xxx, t) =

ˆu(i),

1
N

N

Xi=1

where each ˆu(i) are of the form

ˆu(i) = κ(η−1(Yˆt))

Np

Yj=1(cid:0)Mc − c(η−1(Yrj ), t − rj)(cid:1)

Mc − Lc

· exp(cid:8)−Lcˆt(cid:9) ,

14

and rj, j = 1, ..., Np are times sampled from a Poisson process with intensity
Mc−Lc over [0, ˆt]. The variance of this estimator can be reduced by sampling
Np from alternative distributions, as discussed in Section 4 of Fearnhead,

Papaspiliopoulos and Roberts (2008). Note also that we can simulate values

of ˆu(i) from the proposal measure by using LEA with the modiﬁed function

˜φ(u) = φ(u) + c(u), rather than use a two-step process.

We now consider extending LEA to multiple dimensions. Whilst the Lam-

perti transformation is usually available for univariate diﬀusions, it is rarely

available in the multivariate case (A¨ıt-Sahalia, 2008). This is the ﬁrst major

restriction on the applicability of exact algorithms to multivariate diﬀusions.

In the remainder of this article we assume that such a transformation is

possible, and denote the transformed process

dYYY y

s = ααα(YYY y

s)ds + dWWW s.

For the proposal we use d independent Brownian motions, although we could

in principle use correlated Brownian motions if required. When the do-

main of the PDE of interest forms a hyperrectangle we adaptively choose

the bounding interval lengths in each path segment, θθθ(i) = (θ(i)

(1), ..., θ(i)

(d)), to

coincide with the nearest boundary in each dimension. The methodology

presented here can be adapted to any polytopal domain with appropriate

rotation of the coordinate axes and selection of bounding intervals. As this

algorithm shares many features with the random walk on rectangles algo-

15

rithm, insight into selecting bounding intervals on polytopal domains can

be found in Deaconu and Lejay (2006). Applying EA to other domains is

considered in Section 6. We require the multivariate analogues of the func-

this is φ(vvv) = 1

tions φ(v) and A(v), which are derived in Beskos et al. (2006b). For φ(v)
2 (kααα(vvv)k2 + ∇ · ααα(vvv)), and A(vvv) is deﬁned through the re-
lation ∇A(vvv) = ααα(vvv). Requiring the latter is the second major restriction
regarding applicability of EA, as no such potential function, A(vvv), exists for

a large number of SDEs. Finally, for time-inhomogenous diﬀusions deﬁne

φ(uuu, s) = 1

relation ∇A(uuu, s) = ααα(uuu, s).

2(cid:0)kααα(uuu, s)k2 + ∇ · ααα(uuu, s) + 2 ∂

∂s A(uuu, s)(cid:1), and A(uuu, s) through the

4. Obtaining FKF Estimates via Debiasing

For applications for which EA is not viable, it is possible to resort to

numerical simulation of the SDE in order to obtain Monte Carlo estimates

of (3) and (4). Take for example the Euler-Maruyama scheme, which divides

the time domain [0, t] in to M equal intervals of size h = t

M , and then

simulates a path by iteratively drawing values from the multivariate Gaussian

distribution

˜XXX

x

(m+1)h ∼ Nd(cid:16) ˜XXX

x

mh + bbb( ˜XXX

x

mh, t − mh)h, aaa( ˜XXX

x

mh, t − mh)h(cid:17) ,

for m = 0, ..., M−1, subject to the condition ˜XXX
the mean and variance of the distribution respectively. Oﬀ-grid values can be

x
0 = xxx. The two arguments are

16

interpolated using, for example, a linear or piecewise constant process. An

approximate Monte-Carlo approximation of (3) is then obtained by sampling

h = f ( ˜XXX
˜u(i)

x

M h) exp −h

M−1

Xm=0

c(cid:16) ˜XXX

x

mh, t − mh(cid:17)! ,

for i = 1, ..., N, and averaging

˜uh(xxx, t) =

1
N

N

Xi=1

˜u(i)
h .

(6)

An error analysis of (6) is available in Graham et al. (1996). For an approxi-

mate Monte-Carlo approximation of (4) the simulation is stopped as soon as

the path exits the domain. The estimate ˜uh(xxx, t) is biased for any h > 0, but

E {˜uh(xxx, t)} → u(xxx, t) as h → 0. Traditionally, h and N would be selected so
that the Monte Carlo error is comparable to the bias, optimising the conver-

gence rate. This approach is limited by the computational expense, which is

proportional to N (cid:30)h. Alternatively, we can consider debiasing the estima-

tor using such a numerical scheme, which is described in the remainder of

this section. The reader is referred to Rhee and Glynn (2014) for debiasing

expectations with respect to SDEs, and McLeish (2011) for a more general

discussion of debiasing Monte Carlo estimators.

17

Consider a monotonically decreasing series of step sizes, {hj}∞j=0, and note

∞

Xj=1

E(cid:8)(cid:0)˜uhj (xxx, t) − ˜uhj−1(xxx, t)(cid:1)(cid:9)

u(xxx, t) = E {˜uh0(xxx, t)} +
En ˜∆jo ,

Xj=0

∞

=

where we have denoted ˜∆j = ˜uhj (xxx, t)−˜uhj−1(xxx, t), and deﬁned ˜uh−1(xxx, t) = 0.
It is possible to obtain an unbiased estimator of u(xxx, t) by drawing a ﬁnite

halting value, H, from some probability distribution P(H) that is indepen-
dent of (cid:8)˜uhj (xxx, t)(cid:9)∞

j=0, and for which P (H ≥ j) > 0 for all j ≥ 0. Deﬁne

H

u†(xxx, t) =

Xj=0
where ωj = 1(cid:30)P (H ≥ j), and note that

ωj ˜∆j,

ωj ˜∆j) = E( ∞
E(cid:8)u†(xxx, t)(cid:9) = E( H
Xj=0
Xj=0
E {IH≥j} ωjEn ˜∆jo =
Xj=0

IH≥jωj ˜∆j)
Xj=0

∞

En ˜∆jo = u(xxx, t),

∞

=

where Ij≤H is the indicator function

1

0

IH≥j =


if H ≥ j,
otherwise.

18

If

En(cid:0)˜uhj−1(xxx, t) − ˜uh∞(xxx, t)(cid:1)2o

P (H ≥ j)

< ∞

∞

Xj=1

then u†(xxx, t) is an unbiased estimator of u(xxx, t) with

E(cid:8)u†(xxx, t)2(cid:9) =
Xj=0

∞

P (H ≥ j)

En(cid:0)˜uhj−1(xxx, t) − ˜uh∞(xxx, t)(cid:1)2o − En(cid:0)˜uhj (xxx, t) − ˜uh∞(xxx, t)(cid:1)2o

.

(7)

The necessary proof is given in Theorem 1 of Rhee and Glynn (2014). Note

that this proof requires that κ(xxx) be continuous. Whilst this will usually be

the case for PDEs on inﬁnite domains, it is not generally true of Dirichlet

problems. In the following we set N = 1 (each level of the approximation is

estimated using a single sample path from the discretized SDE), and deﬁne
{hj}∞j=0 through h0 = t, and the relation hj+1 = hj(cid:30)2.

It is clear from (7) that the eﬃciency of the debiasing approach depends

strongly on the convergence rate of ˜uh(xxx, t), and hence how(cid:8)˜uhj (xxx, t)(cid:9)∞

jointly generated (termed the coupling). In Rhee and Glynn (2014) the view

j=0 are

is taken that a single Brownian motion drives every level of the discretization.

This can be achieved by either simulating the entire Brownian path at the

ﬁnest discretisation level (conditional on the halting value), and then sum-

ming the components as necessary to evaluate the lower levels, or through

the use of Brownian bridges from the Brownian path obtained at the initial

level. Using this coupling, En(cid:0)˜uhj (xxx, t) − ˜uh∞(xxx, t)(cid:1)2o is O(2−jp), where p

19

is the strong order of the numerical discretization scheme. A lower variance

estimator can be obtained by averaging over multiple, say N†, independent

draws of u†(xxx, t),

u‡(xxx, t) =

u†(i)(xxx, t).

N †

Xi=1

The expected computation time is proportional to P∞j=0 2jP (H ≥ j). A
comparison with (7) shows that the choice of distribution P(H) reﬂects a
trade-oﬀ between lowering the variance of the estimator and computability.

In Rhee and Glynn (2014) it is shown that if the strong order of the numer-

ical scheme is greater than 0.5 then unbiased estimates can be obtained in

ﬁnite expected computation time with square-root convergence rates. For

unbounded SDEs the Milstein approximation has strong order 1, giving an

eﬀective way of obtaining FKF estimates for PDEs on inﬁnite domains. How-

ever, when the SDE is bounded, such as in the Dirichlet problem, the strong

order is reduced to 0.5. This is a result of ignoring possible boundary inter-

actions between discretely simulated points. With the slower rate of conver-

gence, a ﬁnite variance estimator can be obtained by selecting P(H) so that
P (H ≥ j) = 2−jr for some r < 2p, but computability may be an issue.

5. Numerical Examples

5.1. 1D Example

The ﬁrst example is a 1D advection-diﬀusion model. Consider the follow-

ing parabolic PDE, which has previously been used to study ﬁnite diﬀerence

20

approaches (Thongmoon and McKibbin, 2006),

∂u(x, t)

∂t

+ b

∂u(x, t)

∂x

= a

∂2u(x, t)

∂x2

,

t ≥ 0, x ∈ [0, 1],

with initial and boundary conditions

u(x, 0) = 100x, x ∈ [0, 1],
u(0, t) = 0,

u(1, t) = 100,

t ≥ 0,
t ≥ 0.

The complementary SDE for this system is

dX x

s = −b ds + √2a dWs,

which, when transformed using the Lamperti transform, becomes

dY y

s = −

b
√2a

ds + dWs,

= −α ds + dWs,

. The boundaries for the transformed SDE are 0 and 1√2a
where y = x√2a
Note that accepting proposed paths from this SDE does not require sampling

.

from a Poisson process, owing to the fact that φ(v) is constant. Whilst this

example is not fully demonstrative of the EA approach, it oﬀers an analytical

solution for comparison (Thongmoon and McKibbin, 2006).

21

A comparison of 95% conﬁdence intervals for the solution of the 1D

advection-diﬀusion model obtained using CLT via the EA and debiasing ap-

proaches, over a range of parameter values at t = 5, x = 0.9, is given in

Table 1, along with the average time taken to obtain each estimate. For the

EA approach, the conﬁdence interval is constructed from 1000 replicates of

ˆu(x, t), each obtained using 10 000 simulations, and for debiasing 1000 repli-

cates of u‡(x, t), each obtained using N† = 10000. The halting value for the

debiasing approach is drawn from a geometric distribution with parameter

0.45.

Table 1: A comparison of 95% conﬁdence intervals of the solution to the
advection-diﬀusion example at t = 5, x = 0.9, for a range of drift values.

a

b

True

0.01
0.01
0.01
0.01

0.1
0.2
0.3
0.4

56.13
19.03
5.223
1.833

95% Conﬁdence Interval
EA

Debiasing

56.11 ± 2.3 × 10−2
19.03 ± 2.2 × 10−2
5.227 ± 1.3 × 10−2
1.831 ± 8.7 × 10−3

55.90 ± 2.8 × 10−1
18.94 ± 6.5 × 10−1
5.330 ± 3.6 × 10−1
2.141 ± 3.7 × 10−1

Average Time (s)
EA Debiasing
0.140
0.378
1.248
5.316

0.436
0.460
0.216
0.392

Over the entire parameter range the EA approach has a lower work-

variance product, showing that it is a more eﬃcient approach than debiasing

in this case. With regards to EA approaches, Brownian motion is a poor

proposal when the P´eclet number (proportional to b(cid:30)a) is large, leading to

a large rejection rate. As can be seen in Table 1, as the P´eclet number in-

creases, the computational expense of obtaining the estimate increases, owing

to the low acceptance rate of the proposed paths. This limitation is shared

22

with ﬁnite diﬀerence and ﬁnite element methods, in which the resolution of

the grid needs to be suﬃciently large in order to avoid numerical instabilities

when the P´eclet number is large O˜nate (2000). The debiasing estimates are

more variable in time taken to obtain an estimate, with the most expen-

sive estimate taking 113 seconds in these experiments. This demonstrates

that extreme draws for the halting value can add a signiﬁcant amount of

computational expense

5.2. 2D Example

Now consider the following 2D PDE system,

∂u(xxx, t)

∂t

= ∇k(xxx) · ∇u(xxx, t) +

1
2∇2u(xxx, t),

t ≥ 0, xxx ∈ [0, 1] × [0, 1],

with initial and boundary conditions

u(xxx, 0) = x(1)x(2), x(1) ∈ [0, 1], x(2) ∈ [0, 1],
u(xxx, t) = 0,

x(1) ∈ [0, 1], x(2) = 0, t ≥ 0,
x(1) ∈ [0, 1], x(2) = 1, t ≥ 0,
x(1) = 0, x(2) ∈ [0, 1], t ≥ 0,
x(1) = 1, x(2) ∈ [0, 1], t ≥ 0,

u(xxx, t) = x(1),

u(xxx, t) = 0,

u(xxx, t) = x(2),

Here we choose

k(xxx) = exp(cid:18)1

2

x(1)x(2)(cid:19) .

23

The complementary SDE is

dX(1) =

dX(2) =

1
2
1
2

2

X(2) exp(cid:18)1
X(1) exp(cid:18)1

2

X(1)X(2)(cid:19) ds + dW(1)
X(1)X(2)(cid:19) ds + dW(2).

This reﬂects a challenging problem as the complementary SDE is nonlinear

and we need exact ﬁrst passage information for the boundary. Note that both

of the major restrictions of our EA approach are met. The complementary

SDE has unit volatility, and the potential function A(xxx) is given by k(xxx).

Since no analytical solution to this PDE exists, we compare an estimate

obtained via EA with estimates obtained using the Euler-Murayama scheme

with decreasing step sizes. It is known that in the limit of zero step size,

the weak approximation error of the Euler-Murayama approach reduces to

0 (Gobet, 2000). Hence, the Euler-Murayama estimates should converge to

(within Monte Carlo error of) the EA estimate as the discretisation interval

is reduced. The comparison is shown in Figure 1 for t = 2, xxx = (0.2, 0.2)T

and xxx = (0.8, 0.8)T , where 106 simulations were used for each estimate, and

we see that this is indeed the case. The EA estimates took 18 seconds and

13 seconds respectively to obtain, roughly the same as the Euler-Maruyama

estimate with 1024 steps, and 512 steps respectively per unit interval. The

discretisation error at this level of reﬁnement is larger than the Monte Carlo

error. These comparisons demonstrate that the EA approach is more com-

putationally eﬃcient in this example.

24

e
t
a
m

i
t
s
E

5
2
.
0

0
2
.
0

5
1
.
0

0
1
.
0

5
0
.
0

20

22

24

28

26
Intervals per unit time

212

210

214

e
t
a
m

i
t
s
E

5
0
.
1

5
9
.
0

5
8
.
0

5
7
.
0

5
6
.
0

216

218

20

22

24

28

26
Intervals per unit time

212

210

214

216

218

Figure 1: Estimates of the FKF for the 2D PDE model at t = 2, xxx =
c(0.2, 0.2)T (left), and t = 2, xxx = c(0.8, 0.8)T (right). In each case the Euler-
Maruyama approximation (points) converges to the EA estimate (horizontal
line).

To compare the EA and debiasing approaches, we use the same setup

as the 1D example. The 95% conﬁdence interval from the EA approach for
xxx = (0.2, 0.2)T is (5.29 ± 0.01) × 10−2, and from the debiasing approach
is (5.49 ± 0.39) × 10−2. The average time per estimate was 0.185 seconds
for the EA approach, and 0.662 seconds for the debiasing approach. For
xxx = (0.8, 0.8)T the 95% conﬁdence intervals were (6.81 ± 0.001) × 10−1 for
EA and (6.84 ± 0.21) × 10−1 for debiasing, with average computation times
per estimate of 0.126 s for EA, and 0.977 for debiasing. As with the 1D

example, the EA approach gives lower variance estimators with a lower com-

putational expense.

6. Conclusions

In this paper we have demonstrated how the FKF, combined with recent

25

advancements in exact simulation of SDEs and debiasing methods, provides a

way to obtain unbiased estimates of local solutions to a class of second order

parabolic PDEs. The practice of using ﬁnite diﬀerence or ﬁnite element

methods to solve such problems leads to discretisation errors, and requires

obtaining global solutions. The FKF approach presented here therefore seems

to be a more eﬃcient approach in situations in which only local solutions are

required. A well known example is the Bayesian inverse problem (Stuart,

2010), in which local solutions are required in order to obtain likelihood

estimates given a set of data. The fact that the estimates presented here are

unbiased means that it is possible to design exact Monte Carlo algorithms

to sample from the posterior distributions, as shown in Herbei and Berliner

(2014). Even in situations where data are abundant, it is trivial to implement

the FKF approach in parallel, limiting the computational expense to the

single most expensive estimate.

Exact simulation methods seem to outperform debiasing approaches, which

suﬀer from both large estimator variance and computational expense when

the domain of the PDE is bounded. However, current restrictions on ex-

act algorithms, particularly in multiple dimensions, mean that they can not

be used for a large number of interesting models. The reasons for this are

twofold: in multiple dimensions it is not typically possible to transform an

SDE to have unit diﬀusion, and the drift function must be of a suitable form

to bound the Raydon-Nikod´ym derivative. It seems unlikely that these issues

will be overcome in the current class of EA algorithms. On the other hand, if

26

improved convergence methods are developed for bounded SDEs, it is likely

that debiasing will be more competitive with EA. In Giles (2008) it is empir-

ically shown in one dimension that using stochastic interpolation techniques

with discrete time approximations of SDEs speed up the convergence rates

when the SDE is bounded. To our knowledge no theoretical results have

followed, and so we did not attempt this here.

A number of recent advances enable the use of FKF for a wider class of

PDEs than those considered here. In Pollock, Johansen and Roberts (2014)

exact algorithms are combined with ǫ-strong simulation in order to estimate

boundary crossing times to arbitrary precision. Although this approach is

not unbiased, it can be applied to non-polytopal domains. Jenkins (2013)

develops EA methodology for reﬂecting Brownian motion, enabling unbiased

estimates of certain Neumann boundary problems. Taylor (2015) develops

methodology for exact estimation of local times, extending the potential ap-

plication to Neumann problems. Finally, since the original formulation of

the Feynman-Kac formulae there have been numerous extensions relating

SDEs to other classes of PDEs, for example semilinear PDEs and nonlinear

PDEs with forward-backwards SDEs (Pardoux and R˘a¸scanu, 2014; Pham,

2014), and higher order PDEs with iterated stochastic processes (Thieullen

and Vigot, 2015). Simulating from the complementary SDE remains an es-

sential step when using these extended formulas, and it is hoped that the

work presented here will be built upon in these areas.

27

Acknowledgements

JC and MG were supported by EPSRC (ref: EP/L014165/1), and MP

was supported by EPSRC (ref: EP/K014463/1).

References

A¨ıt-Sahalia, Y. (2002). Maximum likelihood estimation of discretely sampled diﬀusions: a closed-

form approximation approach. Econometrica. 70, 223-262.

A¨ıt-Sahalia, Y. (2008). Closed-form likelihood expansions for multivariate diﬀusions. Annals of

Statistics. 36, 906-937.

Beskos, A., Papaspiliopoulos, O. and Roberts, G. O. (2006a). Retrospective exact simulation of

diﬀusion sample paths with applications. Bernoulli. 12, 1077-1098.

Beskos, A., Papaspiliopoulos, O., Roberts, G.O. and Fearnhead, P. (2006b). Exact and computa-

tionally eﬃcient likelihood-based estimation for discretely observed diﬀusion processes (with

discussion). Journal of the Royal Statistical Society B (Statistical Methodology). 68, 333-382.

Chen, N. and Huang. Z. (2013). Localization and exact simulation of Brownian motion-driven

stochastic diﬀerential equations. Mathematics of Operations Research. 38, 591-616.

Deaconu, M. and Lejay, A. (2006). A random walk on rectangles algorithm. Methodology and

Computing in Applied Probability. 8, 135-151.

Devroye, L. (2009). On exact simulation algorithms for some distributions related to Jacobi theta

functions. Statistics and Probability Letters. 79, 2251-2259.

Evans, L. C. (1998). Partial Diﬀerential Equations, American Mathematical Society, Providence,

Rhode Island.

28

Fearnhead, P., Papaspiliopoulos, O. and Roberts, G. O. (2008). Particle ﬁlters for partially ob-

served diﬀusions. Journal of the Royal Statistical Society B (Statistical Methodology). 70,

755-777.

Giles, M. B. (2008). Improved multilevel Monte Carlo convergence using the Milstein scheme,

pp.343-358 in Monte Carlo and Quasi-Monte Carlo Methods 2006, Springer Berlin Heidel-

berg.

Gobet, E. (2000). Weak approximation of killed diﬀusion using Euler schemes. Stochastic Processes

and their Applications. 87, 167-197.

Graham, C., Kurtz, Th. G., M´el´eard, M., Protter, Ph. E., Pulvirenti, M. and Talay D. (1996).

Probabilistic models for nonlinear partial diﬀerential equations, Springer Berlin Heidelberg.

Herbei, R. and Berliner, M. (2014). Estimating ocean circulation: an MCMC approach with ap-

proximated likelihoods via the Bernoulli factory. Journal of American Statistical Association.

109, 944-954.

Hwang, C. -O. and Mascagni, M. (2001). Eﬃcient modiﬁed “walk on spheres” algorithm for the

linearized Poisson-Boltzmann equation. Applied Physics Letters. 78, 787-789.

Hwang, C. -O., Mascagni, M. and Given, J. A. (2003). A Feynman-Kac path-integral imple-

mentation for Poisson’s equation using an h-conditioned Green’s function. Mathematics and

Computers in Simulation. 62, 347-355.

Jenkins, P. A. (2013). Exact simulation of the sample paths of a diﬀusion with a ﬁnite entrance

boundary. arXiv:1311.5777.

Kac, M. (1951). On some connections between probability theory and diﬀerential and integral

equations. Proceedings of the Second Berkeley Symposium on Mathematical Statistics and

Probability. 189-215.

29

Karatzas, I. and Shreve, S. E. (1991). Brownian motion and stochastic calculus, Springer, New

York.

Kloeden, P. E. and Platen, E. (1992). Numerical solution of stochastic diﬀerential equations,

Springer, Berlin Heidelberg.

Lewis, P. A. W. and Shedler, G. S. (1979). Simulation of nonhomogenous Poisson processes by

thinning. Naval Research Logistics Quarterly. 26, 403-413.

McLeish, D. (2011). A general method for debiasing a Monte Carlo estimator. Monte Carlo

Methods and Applications. 17, 301-315.

Muller, M. E. (1956). Some continuous Monte Carlo methods for the Dirichlet problem. Annals

of mathematical statistics. 27, 569-589.

Oksendal, B. (2000). Stochastic diﬀerential equations, Springer, Berlin Heidelberg.

O˜nate, E. and Manzan, M. (2000). Stabilization Techniques for Finite Element Analysis of

Convection-Diﬀusion Problems. International Center for Numerical Methods in Engineer-

ing. 183, 1-43.

Pardoux, E. and R˘a¸scanu, A. (2014). Stochastic diﬀerential equations, backward SDEs, partial

diﬀerential equations. Stochastic Modelling and Applied Probability. 69.

Pham, H. (2014). Feynman-Kac representations of

fully nonlinear PDEs and applications.

arXiv:1409.0625.

Pollock, M., Johansen, A. M. and Roberts, G. O. (2014). On the exact and ǫ-strong simulation

of (jump) diﬀusions. Bernoulli. To appear.

Rhee, C. and Glynn, P. W. (2014). Unbiased Estimation with Square Root Convergence for SDE

Models. Operations Research. To appear.

Skorokhod, A. V. (1962). Stochastic equations for diﬀusion processes in a bounded region. II.

30

Theory of Probability and Its Applications. 7, 3-23.

Stuart, A. M. (2010). Inverse problems: a Bayesian perspective. Acta Numerica. 19, 451-559.

Taylor, K. B. (2015). Exact algorithms for simulation of diﬀusions with discontinuous drift and ro-

bust curvature Metropolis-adjusted Langevin algorithms, PhD thesis, University of Warwick,

2015.

Thieullen, M. and Vigot, A. (2015). Iterated stochastic processes: simulation and relationship with

high order partial diﬀerential equations. Methodology and Computing in Applied Probability.

To appear.

Thongmoon, M. and McKibbin, R. (2006). A Comparison of Some Numerical Methods for the

Advection-Diﬀusion Equation. Research Letters in the Information and Mathematical Sci-

ences. 10, 49-62.

von Neumann, J. (1951). Various techniques used in connection with random digits. National

Bureau of Standards Applied Mathematics Series. 12, 36-38.

31

