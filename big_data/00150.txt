GOGMA: Globally-Optimal Gaussian Mixture Alignment

Australian National University

National ICT Australia (NICTA)∗

Dylan Campbell and Lars Petersson

{dylan.campbell,lars.petersson}@anu.edu.au

6
1
0
2

 
r
a

M
1

 

 
 
]

V
C
.
s
c
[
 
 

1
v
0
5
1
0
0

.

3
0
6
1
:
v
i
X
r
a

Abstract

Gaussian mixture alignment is a family of approaches
that are frequently used for robustly solving the point-set
registration problem. However, since they use local optimi-
sation, they are susceptible to local minima and can only
guarantee local optimality. Consequently, their accuracy
is strongly dependent on the quality of the initialisation.
This paper presents the ﬁrst globally-optimal solution to
the 3D rigid Gaussian mixture alignment problem under
the L2 distance between mixtures. The algorithm, named
GOGMA, employs a branch-and-bound approach to search
the space of 3D rigid motions SE(3), guaranteeing global
optimality regardless of the initialisation. The geometry of
SE(3) was used to ﬁnd novel upper and lower bounds for
the objective function and local optimisation was integrated
into the scheme to accelerate convergence without voiding
the optimality guarantee. The evaluation empirically sup-
ported the optimality proof and showed that the method
performed much more robustly on two challenging datasets
than an existing globally-optimal registration solution.
1. Introduction

Gaussian Mixture Alignment (GMA), the problem of
ﬁnding the transformation that best aligns one Gaussian
mixture with another, has been investigated extensively in
computer vision and robotics.
It has a natural applica-
tion to point-set registration, which endeavours to solve the
same problem as GMA for discrete point-sets in Rn. In-
deed, the Iterative Closest Point (ICP) algorithm [4, 56] and
several other local registration algorithms [11, 10, 47, 33]
can be interpreted as special cases of GMA [25]. Applica-
tions include merging multiple partial scans into a complete
model [5, 24]; using registration results as ﬁtness scores for
object recognition [26, 3]; registering a view into a global
coordinate system for sensor localisation [34, 37]; and ﬁnd-
ing relative poses between sensors [52, 20].

The dominant solution for 2D and 3D rigid registration
is the ICP algorithm [4, 56] and variants, due to its concep-
tual simplicity, ease of use and good performance. How-
∗NICTA is funded by the Australian Government through the Department of Communications and the Australian

Research Council through the ICT Centre of Excellence Program.

ever, ICP is limited by its assumption that closest point
pairs should correspond, which fails when the point-sets
are not coarsely aligned, or the moving ‘model’ point-set is
not a proper subset of the static ‘scene’ point-set. The for-
mer means that, without a good initialisation, ICP is very
susceptible to local minima, producing erroneous estimates
without a reliable means of detecting failure. The latter
regularly occurs, since differing sensor viewpoints and dy-
namic objects lead to occlusion and partial-overlap.

Gaussian mixture alignment [10, 47, 25, 8] was intro-
duced to address these shortcomings. By aligning point-sets
without establishing explicit point correspondences, GMA
is less sensitive to missing correspondences from partial
overlap or occlusion and mitigate the problem of local min-
ima by widening the basin of convergence. Robust objec-
tive functions can also be applied, such as the L2 distance
between mixtures [25, 8]. However, GMA still requires a
good initialisation and cannot guarantee global optimality.
Go-ICP [54, 53] was the ﬁrst globally-optimal algorithm
for the 3D rigid registration problem deﬁned by ICP. Specif-
ically, it used a branch-and-bound approach to ﬁnd the
global minimum of the ICP error metric, the L2 norm of
closest-point residuals. Despite solving the problem of local
minima, Go-ICP inherits the non-robust ICP cost function
that is susceptible to occlusion and partial overlap. Yang
et al. [54] proposed a trimming strategy to handle outlier
correspondences. However, this increased the runtime and
required an additional trimming parameter to be set.

This work is the ﬁrst to propose a globally-optimal so-
lution to the 3D Gaussian mixture alignment problem un-
der Euclidean (rigid) transformations.
It inherits the ro-
bust L2 density distance objective function of L2 GMA
while avoiding the problem of local minima. The method,
named GOGMA, employs the branch-and-bound algorithm
to guarantee global optimality regardless of initialisation,
using a parametrisation of SE(3) space that facilitates
branching. The pivotal contribution is the derivation of the
objective function bounds using the geometry of SE(3). In
addition, local GMA optimisation is applied whenever the
algorithm ﬁnds a better transformation, to accelerate con-
vergence without voiding the optimality guarantee.

1

2. Related Work

The large quantity of work published on ICP, its vari-
ants and other registration techniques precludes a compre-
hensive list. The reader is directed to the surveys on ICP
variants [40, 37] and recent 3D point-set and mesh regis-
tration techniques [46] for additional background. To im-
prove the robustness of ICP to occlusion and partial over-
lap, approaches included trimming [9] and outlier rejec-
tion [56, 22]. To enlarge ICP’s basin of convergence, ap-
proaches included LM-ICP [19], which used the Levenberg-
Marquardt algorithm [32] and a distance transform to opti-
mise the ICP error, without establishing explicit point cor-
respondences. The family of Gaussian mixture alignment
approaches also sought to improve robustness to poor ini-
tialisations, noise and outliers. Notable GMA-related al-
gorithms for rigid and non-rigid registration include Robust
Point Matching [12], Coherent Point Drift [33], Kernel Cor-
relation [47] and GMMReg [25]. GMMReg [25] deﬁnes
an equally-weighted Gaussian at every point in the set with
identical and isotropic covariances and minimises the robust
L2 distance between densities. The Normal Distributions
Transform (NDT) algorithm [30, 45] deﬁnes Gaussians for
every cell in a grid and estimates full data-driven covari-
ances. SVR [8] uses an SVM to construct a Gaussian mix-
ture with non-uniform weights that adapts to the structure
of the point-set and is robust to occlusion and partial over-
lap. While more robust than ICP, these methods all employ
local optimisation, which is dependent on the initial pose.

There are many heuristic or stochastic methods for
global alignment that are not guaranteed to converge. One
class utilises stochastic optimisation techniques, such as
particle ﬁltering [42], genetic algorithms [44, 39] and sim-
ulated annealing [5, 36]. Another class is feature-based
alignment, which exploits the transformation invariance of
a local descriptor to build sparse feature correspondences,
such as fast point feature histograms [41]. The transfor-
mation can be found from the correspondences using ran-
dom sampling [41], greedy algorithms [26], Hough trans-
forms [50] or branch-and-bound [21, 2]. SUPER 4PCS [31]
is a recent example of a method that uses random sampling
without features. It is a four-points congruent sets method
that exploits a clever data structure to achieve linear-time
performance, extending the original 4PCS algorithm [1].

In contrast, globally-optimal techniques avoid local min-
ima by searching the entire transformation space, often us-
ing the branch-and-bound paradigm. Existing 3D meth-
ods [29, 35, 6, 54] are often very slow or make restric-
tive assumptions about the point-sets, correspondences or
transformations. For example, Li and Hartley [29] min-
imised a Lipschitzized L2 error function using branch-and-
bound, but assumed that the point-sets were the same size
and the transformation was pure rotation. Olsson et al. [35]
found optimal solutions to point-to-point/line/plane regis-

tration using branch-and-bound and bilinear relaxation of
rotation quaternions, but assumed correspondences were
known. Recently, Bustos et al. [6] achieved efﬁcient run-
times using stereographic projection techniques for optimal
3D alignment, but assumed that translation was known. Fi-
nally, Yang et al. [54, 53] proposed the Go-ICP algorithm,
which ﬁnds the optimal solution to the closest point L2 er-
ror between point-sets and is accelerated by using local ICP
as a sub-routine. However, it is sensitive to occlusion and
partial overlap, due to its non-robust cost function. The pro-
posed trimming strategy goes some way to alleviating this,
but increases the runtime, requires an estimate of the over-
lap percentage and may lead to ambiguity in the solution.

The rest of the paper is organised as follows: we out-
line Gaussian mixture alignment in Section 3, we develop a
parametrisation of the domain of 3D motions, a branching
strategy and a derivation of the bounds in Section 4, we pro-
pose an algorithm for globally-optimal GMA in Section 5
and we evaluate the its performance in Section 6.

3. Gaussian Mixture Alignment

The alignment of Gaussian Mixture Models (GMMs)
to solve the point-set registration task is a well-studied
problem [10, 47, 30, 25, 8]. GMMs can be constructed
from point-set data using Kernel Density Estimation (KDE)
[25, 17, 13, 51], Expectation Maximisation (EM) [15, 16] or
a Support Vector Machine (SVM) [8]. Once the point-sets
are in GMM form, the registration problem can be posed
as minimising a discrepancy measure between GMMs. We
use the L2 distance formulation of Jian and Vemuri [25],
which can be expressed in closed-form and efﬁciently im-
plemented. The L2E estimator minimises the L2 distance
between densities and is inherently robust to outliers [43].
j }n
jY , φY
be GMMs constructed from point-sets X and Y, with means
jY, mixture weights φX
xi and yj, variances σ2
i and
φY
j and number of components m and n respectively. Also
let T (G, R, t) be the function that rigidly transforms G with
rotation R ∈ SO(3) and translation t ∈ R3. The L2 dis-
tance D between transformed GX and GY is given by

i=1 and GY ={yj, σ2

Let GX ={xi, σ2

iX and σ2

iX , φX

i }m

j=1

R3

D(R, t) =

(p (p|T (GX , R, t)) − p (p|GY ))2 dp (1)
where p (p|G) is the probability of observing a point p
given a mixture model G = {µi, σ2

i=1, that is

i , φi}(cid:96)

(cid:90)

(cid:96)(cid:88)

φiN(cid:0)p(cid:12)(cid:12)µi, σ2

(cid:1)

p (p|G) =

i=1

where N(cid:0)p(cid:12)(cid:12)µ, σ2(cid:1) is the probability of the Gaussian at p.

Expanding (1), [p (p|T (GX , R, t))]2 is invariant under rigid
transformations and [p (p|GY )]2 is independent of (R, t).

i

(2)

The integral of the −2p (p|T (GX , R, t)) p (p|GY ) term has
a closed form, derived by applying the identity

(cid:90)

R3

N(cid:0)p(cid:12)(cid:12)µ1, σ2

1

(cid:1) dp

(cid:1)N(cid:0)p(cid:12)(cid:12)µ2, σ2
= N(cid:0)0(cid:12)(cid:12)µ1 − µ2, σ2

2

1 + σ2
2

(cid:1) .

(3)

π

τ

Therefore, by substituting in (2) and (3), the objective func-
tion for Gaussian Mixture Alignment (GMA) is given by

f (R, t) = −

p (p|T (GX , R, t)) p (p|GY ) dp

j N(cid:0)0(cid:12)(cid:12)Rxi + t− yj, σ2
− [eij (R, t)]2
(cid:104)

exp

(cid:105)

jY(cid:1)
 (4)

iX + σ2

φX
i φY

i φY
φX
Z

j

2

iX + σ2
σ2
jY

R3

(cid:90)
= − m(cid:88)
= − m(cid:88)

i=1

n(cid:88)
n(cid:88)

j=1

i=1

j=1

where Z is the normalisation factor and eij (R, t) is the
pairwise residual error. For local GMA, we use the quasi-
Newton L-BFGS-B algorithm [7] to minimise (4).

β

(a) Rotation Domain

(b) Translation Domain

Figure 1. Parametrisation of SE(3). (a) The rotation space SO(3)
is parametrised by angle-axis 3-vectors within a solid radius-π
(b) The translation space R3 is parametrised by 3-vectors
ball.
within a cube of half side-length τ. The joint domain is branched
using a hyperoctree data structure, with a sub-hypercube depicted
as two sub-cubes in the rotation and translation dimensions.

Rr0x

ρ

x + t0

4. Branch-and-Bound

Branch-and-Bound (BB) [27] is a global optimisation
technique that
is frequently used to solve non-convex
and NP-hard problems [28]. To apply the technique to
3D GMA, a suitable means of parametrising and branch-
ing (partitioning) the domain of 3D rigid transformations
SE(3) must be found, as well as an efﬁcient way to ﬁnd the
upper and lower bounds of each branch. The latter is critical
for the time and memory efﬁciency of the algorithm, since
tight bounds that are quick to evaluate reduce the search
space by allowing suboptimal branches to be pruned.
4.1. Parametrising and Branching the Domain

For the globally-optimal alignment problem, the objec-
tive function (4) must be minimised over the domain of 3D
motions, that is, the group SE(3) = SO(3)×R3. One min-
imal parametrisation of SO(3) is the angle-axis representa-
tion, where a rotation is parametrised as a 3-vector r with a
rotation angle (cid:107)r(cid:107) and rotation axis r/(cid:107)r(cid:107). We use the no-
tation Rr ∈ SO(3) to denote the rotation matrix obtained
from the matrix exponential map of the skew-symmetric
matrix [r]× induced by r. The Rodrigues’ rotation formula
can be used to efﬁciently calculate this mapping. The space
of all 3D rotations can therefore be represented as a solid
ball of radius π in R3. The mapping is one-to-one on the in-
terior of the π-ball and two-to-one on the surface. For ease
of manipulation, we use the 3D cube circumscribing the π-
ball as the rotation domain [29]. The translation domain is
chosen as the bounded cube [−τ, τ ]3. If the GMMs were
constructed from point-sets scaled to ﬁt within [−0.5, 0.5]3,

O
(a) Rotation Uncertainty Region
(b) Translation Uncertainty Region
Figure 2. Uncertainty region induced by hypercube C = Cr × Ct.
(a) Rotation uncertainty region for Cr with centre Rr0 x. The op-
timal rotation of x may be anywhere within the heavily-shaded
umbrella-shaped uncertainty region, which is entirely contained
by the lightly-shaded spherical cap deﬁned by Rr0 x and β.
(b) Translation uncertainty region for Ct with centre x + t0. The
optimal translation of x may be anywhere within the cube, which
is entirely contained by the circumscribed sphere with radius ρ.

choosing τ = 1 would ensure that the domain covered every
feasible translation. In practice, a smaller τ is acceptable, if
a minimum detectable bounding box overlap is acceptable.
Together, these domains form a 6D hypercube, shown
separately in Figure 1. During BB, the hypercube is
branched using a hyperoctree data structure. The uncer-
tainty region induced by a hypercube on a point x is shown
for rotation and translation separately in Figure 2. The
transformed point may lie anywhere in the uncertainty re-
gion, which is the Minkowski sum of a spherical patch and
a cube for rotation and translation dimensions respectively.
4.2. Bounding the Branches

The success of a BB algorithm is predicated on the qual-
ity of its bounds. For rigid 3D Gaussian mixture alignment,
the GMA objective function (4) within a transformation do-
main Cr × Ct needs to be bounded. To simplify the bounds,
the GMMs are assumed to have isotropic covariances. The
translation component t ∈ Ct can be bounded by a sin-
gle value ρ by observing that the translation cube can be
inscribed in a sphere (Figure 2b), as in [54].

Lemma 1. (Translation sphere radius) Given a 3D point x
and a translation cube Ct of half side-length δt centred at
t0, then ∀t ∈ Ct,

(cid:107)(x + t) − (x + t0)(cid:107) (cid:54) √

.
= ρ.

3δt

(5)

Proof. Inequality (5) can be derived by observing that
(cid:107)(x + t)− (x + t0)(cid:107) = (cid:107)t− t0(cid:107) and max(cid:107)t− t0(cid:107) =
3δt
(the half space diagonal) for t ∈ Ct.

√

To bound the rotation component r ∈ Cr, Lemmas 1 and
2 from [23] are used. For reference, the relevant parts are
merged into Lemma 2, as in [53]. The lemma indicates that
the angle between two rotated vectors is less than or equal to
the Euclidean distance between their rotations’ angle-axis
representations in R3.
Lemma 2. For an arbitrary vector x and two rotations,
represented as Rr1 and Rr2 in matrix form and r1 and r2
in angle-axis form,

∠(Rr1x, Rr2 x) (cid:54) (cid:107)r1 − r2(cid:107).

(6)

From this, the maximum angle β between a vector x ro-
tated by r0 and x rotated by r ∈ Cr can be found as follows.
Lemma 3. (Maximum aperture angle) Given a 3D point x
and a rotation cube Cr of half side-length δr centred at r0,
then ∀r ∈ Cr,

√
∠(Rrx, Rr0x) (cid:54) min(

3δr, π)

.
= β.

Proof. Inequality (7) can be derived as follows:
∠(Rrx, Rr0x) (cid:54) min((cid:107)r − r0(cid:107), π)

√
(cid:54) min(

3δr, π)

where (8) follows from Lemma 2 and (9) follows from
max(cid:107)r − r0(cid:107) =
3δr (the half space diagonal of the rota-
tion cube) for r ∈ Cr.

√

As a ﬁrst step towards bounding the GMA objective
function, bounds for the pairwise residual error eij(Rr, t)
need to be found. This eij(Rr, t) represents the minimal L2
distance between the Gaussian means (Rrxi +t) and yj for
(r, t) ∈ (Cr × Ct). For convenience, let y(cid:48)
j = (yj − t0).
Theorem 1. (Bounds of the pairwise residual error) For
the 3D transformation domain Cr × Ct centred at (r0, t0)
with translation sphere radius ρ, the upper bound ¯eij and
the lower bound
eij of the optimal pairwise residual error
¯
eij(Rr, t) for xi and yj can be chosen as

¯eij(Rr, t) = eij(Rr0, t0)

eij(Rr, t) = max
¯

(cid:17)
(cid:16)(cid:12)(cid:12)(cid:107)xi(cid:107) − (cid:107)yj − t0(cid:107)(cid:12)(cid:12) − ρ, 0

(10)

(11)

.

(7)

(8)
(9)

Proof. The validity of the upper bound ¯eij follows from the
error eij at a speciﬁc point within the domain being larger
than the minimal error within the domain, that is

eij(Rr0, t0) (cid:62)

min

∀(r,t)∈(Cr×Ct)

eij(Rr, t).

(12)

The validity of the lower bound
eij is proved as follows.
Observe that ∀(r, t) ∈ (Cr × Ct),
¯
eij(Rr, t) = (cid:107)Rrxi + t − yj(cid:107)

(13)
(14)
(15)

= (cid:107)Rrxi − (yj − t0) − (t0 − t)(cid:107)

(cid:62)(cid:12)(cid:12)(cid:107)Rrxi − y(cid:48)
j(cid:107) − (cid:107)(t0 − t)(cid:107)(cid:12)(cid:12)
(cid:62) max(cid:0)(cid:107)Rrxi − y(cid:48)
j(cid:107) − (cid:107)(t0 − t)(cid:107), 0(cid:1) (16)
(cid:62) max(cid:0)(cid:107)Rrxi − y(cid:48)
j(cid:107) − ρ, 0(cid:1)
j(cid:107)(cid:12)(cid:12) − ρ, 0(cid:1)
(cid:62) max(cid:0)(cid:12)(cid:12)(cid:107)Rrxi(cid:107) − (cid:107)y(cid:48)
= max(cid:0)(cid:12)(cid:12)(cid:107)xi(cid:107) − (cid:107)yj − t0(cid:107)(cid:12)(cid:12) − ρ, 0(cid:1)

(17)
(18)
(19)

where (14) adds and subtracts t0, (15) follows from the re-
verse triangle inequality (cid:107)x− y(cid:107) (cid:62) |(cid:107)x(cid:107)−(cid:107)y(cid:107)|, (16) from
the absolute value of a quantity being positive, (17) follows
from (5), and (18) from the reverse triangle inequality.

The geometric intuition of Theorem 1 is that all valid
points (Rrxi + t) lie within ρ of the rotation sphere cen-
tred at t0 with radius (cid:107)xi(cid:107). However, the gap between this
‘sphere distance’ pairwise lower bound and the pairwise up-
per bound does not converge to zero as the sub-cube sizes
decrease, since the lower bound is independent of the ro-
tation sub-cube size δr. We can ﬁnd a converging lower
bound by observing that all valid points, neglecting transla-
tion uncertainty, lie on a spherical cap. Letting x0
i = Rr0 xi,
the spherical cap is deﬁned by the sphere of radius (cid:107)xi(cid:107)
all points (x + t0) on the cap. Now let x(cid:48)
i = Rxi be an
arbitrary point on the origin-centred spherical cap and let
x∗
i and y(cid:48)
ij = Rxi be the point coplanar with x0
j on the
i , x∗

centred at t0 with the constraint that ∠(cid:0)x0
edge of the spherical cap, such that ∠(cid:0)x0

i , x(cid:1) (cid:54) β for
(cid:1) = β.

ij

Theorem 2. (Tight lower bound of the pairwise residual
error) For the 3D transformation domain Cr × Ct centred
at (r0, t0) with translation sphere radius ρ, the lower bound
eij of the optimal pairwise residual error eij(Rr, t) for xi
¯
and yj can be chosen as

(cid:105)

max

j(cid:107)(cid:12)(cid:12)−ρ, 0
(cid:105)
j(cid:107)−ρ, 0

max
(cid:104)(cid:12)(cid:12)(cid:107)xi(cid:107)−(cid:107)y(cid:48)
(cid:104)(cid:107)x∗
α = ∠(cid:0)x0
β = ∠(cid:0)x0

ij−y(cid:48)
(cid:1)
(cid:1) = min(

i , y(cid:48)
i , x∗

j

ij

√

3δr, π).

for α(cid:54) β

for α > β

(20)

(21)
(22)

eij(Rr, t) =
¯

where α and β are shown in Figure 3 and are given by

(27)

t0

Proof. Observe that ∀(r, t) ∈ (Cr × Ct),

j(cid:107) − ρ, 0(cid:1)
eij(Rr, t) (cid:62) max(cid:0)(cid:107)Rrxi − y(cid:48)
(cid:62) max(cid:0) min(cid:107)Rrxi − y(cid:48)
j(cid:107) − ρ, 0(cid:1)
(cid:62) max(cid:0) min(cid:107)x(cid:48)
j(cid:107) − ρ, 0(cid:1)
max
(cid:104)(cid:12)(cid:12)(cid:107)xi(cid:107)−(cid:107)y(cid:48)
(cid:105)
j(cid:107)(cid:12)(cid:12)−ρ, 0
(cid:105)
(cid:104)(cid:107)x∗
j(cid:107)−ρ, 0

ij−y(cid:48)

i − y(cid:48)

max

=

for α(cid:54) β

for α > β

(23)
(24)
(25)

(26)

where (23) is transferred from (17), (25) states that the min-
imum distance to a constrained point on the spherical cap is
greater than or equal to the minimum distance to an uncon-
strained point on the cap and (26) is from Theorem 3.

Theorem 3. (Spherical cap distance) For the spherical cap
i ) (cid:54) β,
deﬁned by the vector x(cid:48)
the minimum distance from a point yj to the spherical cap
is given by

i + t0 constrained by ∠(x(cid:48)

i, x0

(cid:40)(cid:12)(cid:12)(cid:107)xi(cid:107) − (cid:107)yj − t0(cid:107)(cid:12)(cid:12) for α(cid:54) β

ij − (yj − t0)(cid:107) for α > β

(cid:107)x∗

min(cid:107)x(cid:48)

i+t0−yj(cid:107) =

where α and β are as per Theorem 2, shown in Figure 3.

(cid:21)

(cid:20)

Proof. Dropping the subscripts and translating everything
by (−t0), an arbitrary point x(cid:48) on the spherical cap can be
expressed as the rotation of the point x0 about the sphere
centre towards y(cid:48) by an angle γ ∈ [0, β], followed by a
rotation of this intermediate vector about the axis x0 by θ.
By two applications of the Rodrigues’ rotation formula,

sα

x0+

sγ
sα

x(cid:48) =

cγ − cα sγ cθ

x0 × y(cid:48)
(cid:107)y(cid:48)(cid:107) +

sγ cθ (cid:107)x(cid:107)
sα (cid:107)y(cid:48)(cid:107) y(cid:48) (28)
where sA = sin A and cA = cos A. By substitution, the
squared distance between the point y(cid:48) and an arbitrary point
on the spherical cap is given by
(cid:107)x(cid:48)−y(cid:48)(cid:107)2 =(cid:107)x(cid:107)2+(cid:107)y(cid:48)(cid:107)2−2 [cαcγ+ sαsγcθ](cid:107)x(cid:107)(cid:107)y(cid:48)(cid:107) (29)
and is minimised when θ = 0. Therefore,
min(cid:107)x(cid:48)−y(cid:48)(cid:107)2 = (cid:107)x(cid:107)2+(cid:107)y(cid:48)(cid:107)2−2 cos[α−γ](cid:107)x(cid:107)(cid:107)y(cid:48)(cid:107). (30)
When α (cid:54) β (Case 1), (30) is minimised when γ = α:

min(cid:107)x(cid:48) − y(cid:48)(cid:107)2 = ((cid:107)x(cid:107) − (cid:107)y(cid:48)(cid:107))2

∴ min(cid:107)x(cid:48) − y(cid:48)(cid:107) =(cid:12)(cid:12)(cid:107)x(cid:107) − (cid:107)y(cid:48)(cid:107)(cid:12)(cid:12) for α (cid:54) β.

When α > β (Case 2), (30) is minimised when γ = β:

min(cid:107)x(cid:48) − y(cid:48)(cid:107)2 = (cid:107)x∗ − y(cid:48)(cid:107)2

∴ min(cid:107)x(cid:48) − y(cid:48)(cid:107) = (cid:107)x∗ − y(cid:48)(cid:107) for α > β.

The full proof is left for the appendix.

(31)
(32)

(33)
(34)

Rr0 xi +t0

¯e(cid:48)
ij (Rr, t)

yj

e(cid:48)
ij (Rr, t)
¯

||yj − t0||

α

β

t0

||xi||

(a) Case 1: yj is within the rotation cone (α (cid:54) β).

Rr0xi +t0

¯e(cid:48)
ij (Rr, t)
e(cid:48)
ij (Rr, t)
¯

x∗
ij + t0

α

β

||xi||

yj

||yj − t0||

(b) Case 2: yj is outside the rotation cone (α > β).

Figure 3. Upper and lower bound of the pairwise residual error,
neglecting translation. A 2D cross-section of the plane deﬁned by
points {Rr0 xi + t0, yj, t0} is shown.

The geometric intuition, shown in Figure 3, for Theo-
rems 2 and 3 is that the minimum distance to the spheri-
cal cap is equal to (i) the radial distance to the sphere if y
lies within the rotation cone (α (cid:54) β) or (ii) the distance to
the edge of the cap. This ‘spherical cap distance’ pairwise
lower bound is a tighter bound than (11) and the gap be-
tween it and the upper bound converges to zero. This can
be shown by observing that the size of the spherical cap di-
minishes with the size of the rotation sub-cube (7) and like-
wise for the translation sphere and translation sub-cube (5).
It is also a tighter bound than that in [54], which uses the
distance to a sphere enclosing the spherical cap.

The bounds of the objective function are found by sum-
ming the kernelised upper and lower bounds of the pairwise
residual errors in (10) and (20) for all m× n Gaussian pairs.

Corollary 1. (Bounds of the objective function) For the
3D transformation domain Cr × Ct centred at (r0, t0)
with translation sphere radius ρ, the upper bound ¯f and
the lower bound
f of the optimal objective function value
¯
f (Rr, t) can be chosen as
i φY
φX
Z
i φY
φX
Z

¯f (Rr, t) =− m(cid:88)
f (Rr, t) =− m(cid:88)

(cid:34)
− [¯eij (Rr, t)]2
(cid:34)
iX + σ2
jY

2(cid:2)σ2
2(cid:2)σ2

eij (Rr, t)]2
− [
¯
iX + σ2
jY

n(cid:88)
n(cid:88)

(cid:3)(cid:35)
(cid:3)(cid:35)

(35)

(36)

exp

exp

j=1

i=1

¯

.

j

j

i=1

j=1

5. The GOGMA Algorithm

In this implementation,

The Globally-Optimal Gaussian Mixture Alignment
(GOGMA) algorithm is outlined in Algorithm 1.
It em-
ploys branch-and-bound with depth-ﬁrst search using a
priority queue where the priority is inverse to the lower
bound (Line 4). The algorithm terminates with -optimality,
whereby the difference between the best function value f∗
f is less than  (Line 5).
so far and the global lower bound
¯
the upper and lower bounds
of 4096 sub-cubes are found simultaneously on the GPU
(Line 6). A higher branching factor can be used, although
memory considerations must be taken into account to en-
sure that the priority queue does not increase much faster
than it can be pruned. A branching factor of 4096 per-
forms well and does not require a high-end GPU. Other than
bound calculation, the code is executed entirely on the CPU.
Lines 1 and 8 show how the local Gaussian Mixture
Alignment (GMA) algorithm is integrated. Firstly, the best-
so-far function value f∗ and the associated transformation
parameters are initialised using GMA (Line 1). Within the
main loop, GMA is run whenever the BB algorithm ﬁnds
a sub-cube Ci that has an upper bound less than the best-
so-far function value f∗ (Line 8). GMA is initialised with
(r0i, t0i), the centre transformation of Ci. In this way, BB
and GMA collaborate, with GMA quickly converging to
the closest local minimum and BB guiding the search into
the convergence basins of increasingly lower local minima.
Hence, BB jumps the search out of local minima and GMA
accelerates convergence by reﬁning f∗.
Importantly, the
faster f∗ is reﬁned, the more sub-cubes are discarded, since
those with lower bounds higher than f∗ are culled (Line 9).
The algorithm is designed in such a way that early ter-
mination outputs the best-so-far transformation. Hence, if a
limit is set on the runtime, a best-guess transformation can
be provided for those alignments that exceed the threshold.
While -optimality will not be guaranteed for them, in prac-
tise this is often adequate. In view of this, and to accelerate
the removal of redundant sub-cubes, Line 8 may be mod-
iﬁed such that GMA is run for every sub-cube of the ﬁrst
subdivision and f∗ is updated with the best function value
of that batch. We denote this as batch-initialised GOGMA.
6. Experimental Results

GOGMA was evaluated using many different point-sets,
including 3D data collected in the lab and in the ﬁeld. In
order to test the algorithms across a uniformly-distributed
sample of SO(3), the 72 base grid rotations from Incremen-
tal Successive Orthogonal Images (ISOI) [55] were used.
Translation perturbations were not applied, since centring
and scaling the point-sets to [−1, 1]3 before conversion to
GMM removes these perturbations. The transformation do-
main was set to be [−π, π]3×[−0.5, 0.5]3. This corresponds
to a minimum detectable bounding box overlap of ~42%.

Algorithm 1 GOGMA: An algorithm for globally-optimal
Gaussian mixture alignment in SE(3)
Input: mixture models GX and GY, parametrised by means
x and y respectively, variances σ2 and mixture weights
φ; threshold ; initial transformation hypercube C =
Cr × Ct centred at (r0, t0).

Output: -optimal value f∗ and corresponding r∗, t∗.
1: Run GMA: (f∗, r∗, t∗) ← GMA(r0, t0)
2: Add hypercube C to priority queue Q
3: loop
4:
5:
6:
7:
8:
9:

Remove cube C with lowest lower-bound
if f∗ −
In parallel, evaluate ¯fi and
for all sub-cubes Ci do

f from Q
¯

f (cid:54)  then Terminate
¯

fi for all sub-cubes of C
¯
if ¯fi < f∗ then (f∗, r∗, t∗) ← GMA(r0i, t0i)
fi < f∗ then Add Ci to queue: Q ← Ci
if
¯

Except where otherwise speciﬁed,

the convergence
threshold was set to  = 0.1, the number of Gaussian com-
ponents was set to m, n ≈ 50, batch initialisation was used
and the GMMs were Support Vector–parametrised Gaus-
sian Mixtures (SVGMs), whereby an SVM and a mapping
are used to efﬁciently construct an adaptive GMM from
point-set data [8]. SVGMs allow the user to specify the ap-
proximate number of components and set equal variances
automatically, based on the desired number of components.
Although GOGMA is a general-purpose Gaussian mix-
ture alignment algorithm, the runtime results include the
time required for GMM construction, to facilitate compari-
son with other point-set registration algorithms. All exper-
iments were run on a PC with a 3.7GHz Quad Core CPU
with 32GB of RAM and a Nvidia GeForce GTX 980 GPU.
The GOGMA code is written in unoptimised C++ and uses
the VXL numerics library [49] for local GMA optimisation.
It is crucial to observe that ﬁnding the global optimum
does not necessarily imply ﬁnding the ground-truth trans-
formation. For GMMs that describe partially overlapping
point-sets, there may exist an alignment that produces a
smaller function value than the ground-truth alignment.
However, the L2 density distance objective function is much
less susceptible to partial overlap than others [8], including
the L2 norm closest point error that is minimised by ICP.
6.1. Optimality

To demonstrate optimality of the algorithm with respect
to the objective function, the reconstructed DRAGON [14]
and BUNNY [48] point-sets were aligned with transformed
copies of themselves, using the 72 ISOI rotations. Identical
point-sets were required to obtain the ground-truth optimal
objective function values. The global optimum was found
for all 144 registrations, with mean separations from the op-
timal value being 9×10−8 and 3×10−7 and mean runtimes
being 17s and 14s for DRAGON and BUNNY respectively.

(a) DRAGON

(b) BUNNY

Figure 4. Evolution of the upper and lower bounds for the recon-
structed DRAGON and BUNNY models. The objective function
value is plotted against time. Note the logarithmic scale.
Table 1. Effect of GMM type on the accuracy and runtime of the
GOGMA algorithm. The mean/max translation error (in metres),
rotation error (in degrees) and runtime (in seconds) are reported.
GMM Type
Translation
Rotation
Runtime

0.14/0.21
116/167
15/15

1.5/2.7
34/50

0.004/0.008

SVGM

EM

0.02/0.18

7.2/80

4960/4965

KDE

For batch initialisation, the mean runtimes were 33s and
29s. The evolution of the global upper and lower bounds is
shown in Figure 4. It can be seen that BB and GMA collab-
orate to reduce the upper bound: BB guides the search into
the convergence basins of increasingly lower local minima
and GMA reﬁnes the bound by jumping to the nearest local
minimum. Discontinuities in the lower bound occur when
an entire sub-cube level has been explored. With batch ini-
tialisation, the global minimum is generally captured at the
start of the algorithm. The remaining time is spent increas-
ing the lower bound until -optimality can be guaranteed.
While sometimes slower for simpler datasets or larger , it
usually reduces runtime and is the preferred setting.
6.2. Fully-Overlapping Registration

In these experiments, we evaluated the performance of
GOGMA by aligning single-view partial scans with a full
3D model. We used the DRAGON dataset, consisting of
one reconstructed model (DRAGON-RECON) and 15 partial
scans (DRAGON-STAND). The 72 base ISOI rotations were
used as the initial transformations for the partial scans. For
the standard parameter settings, GOGMA found the correct
alignment in all 1080 cases, as shown in Table 1 (SVGM).
To investigate the effect of other GMM types on the ac-
curacy and runtime of the algorithm, we repeated the ex-
periment with ﬁxed-bandwidth Kernel Density Estimation
(KDE) [25] and Expectation Maximisation (EM) [15]. The
number of components was ﬁxed (m, n = 50), but the vari-
ances and mixture weights were set by the algorithms. For
KDE, the variance was found by parameter search and the
point-sets were randomly downsampled to m points. The
results were poor, due to the small number of components
imposed by GOGMA for tractability. The EM results show
that it is a suitable input to GOGMA in terms of alignment

(a) Scan (in red) aligned to model

(b) Runtime versus m, n

(c) Runtime versus 

(d) Runtime versus lower bound

Figure 5. Mean runtime of GOGMA on the DRAGON dataset with
respect to different factors, for the alignment of DRAGON-RECON
with point-set 0 of DRAGON-STAND, transformed by 72 uniformly
distributed rotations. Note the logarithmic scale in (c).

accuracy, however the implementation [18] took 4 663s to
process the model and ~256s to process each scan, making
it impractical unless more efﬁciently implemented. Consid-
ering both speed and accuracy, SVGMs are recommended.
To investigate the effect of other factors on the runtime,
one was varied while the others were kept at the defaults.
The 72 ISOI rotations were applied to scan 0 and the mean
runtimes were reported for standard and batch initialisa-
tions. The scan, aligned by GOGMA, is shown in Figure 5a
in red. The results for differing numbers of Gaussian com-
ponents m, n are shown in Figure 5b. The quadratic shape
reﬂects the O(mn) per-iteration complexity. The results for
differing values of the convergence threshold  are shown
in Figure 5c. For values of  close to zero, the runtime in-
creases steeply, while larger values allow the algorithm to
terminate quicker, albeit with a looser optimality guarantee.
We found that  = 0.1 was a suitable default, having a 100%
success rate. The runtime is also affected by the quality
of the lower bound, as shown in Figure 5d. The GOGMA
lower bound is tighter than the Go-ICP lower bound [54],
which uses the distance to an uncertainty sphere containing
the spherical cap, as reﬂected in the runtimes.

6.3. Partially-Overlapping Registration

To evaluate the performance of GOGMA on large-scale
ﬁeld datasets, we used the two challenging laser scanner
datasets in Table 2 [38]. STAIRS is a structured in/outdoor
dataset with large and rapid variations in scanned volumes.
WOOD-SUMMER is an unstructured outdoor dataset with
dynamic objects. The symmetric inlier fraction was used
to calculate the overlap: the fraction of points from the joint

051015−100−10−1Time (s)  UBLBBBGMA051015−100−10−1Time (s)  UBLBBBGMA20406080020406080Number of ComponentsTime (s)  StandardBatch0.10.20.30.40.5151050100500EpsilonTime (s)  StandardBatchGOGMAGo−ICP0100200300Lower Bound TypeTime (s)  StandardBatchTable 2. Characteristics of the large-scale ﬁeld datasets [38].
Dataset
# Point-Sets
Mean # Points
Mean Overlap

182 000

191 000

77%

37

WOOD-SUMMER

STAIRS

31

76%

Table 3. Alignment results for STAIRS. The mean translation error
(in metres), rotation error (in degrees), coarse (C), medium (M)
and ﬁne (F) registration inlier rates (deﬁned in the text) and mean
runtime (in seconds) are reported. GOGMA is denoted by [*],
GOGMA with reﬁnement by [*]+, Go-ICP with  = 10−4 by [54]a,
Go-ICP with  = 5×10−5 by [54]b, ICP by [4] and CPD by [33].
[33]
Method
5.24
Translation
Rotation
88.8
38.8
Inlier % (C)
28.6
Inlier % (M)
7.1
Inlier % (F)
Runtime
4.2

[54]b
1.17
19.4
80.9
51.9
21.2
103

[54]a
1.63
30.9
71.8
48.5
19.6
31.6

[*]+
0.04
0.32
100
100
99.7
71.2

[*]
0.26
1.25
100
100
80.0
49.6

[4]
4.67
107
15.5
13.4
6.5
0.38

Table 4. Alignment results for WOOD-SUMMER.
[4]
7.37
109
11.3
10.8
5.4
0.44

Method
Translation
Rotation
Inlier % (C)
Inlier % (M)
Inlier % (F)
Runtime

[54]b
0.69
5.19
84.1
64.5
27.5
77.7

[54]a
1.33
9.66
78.2
36.6
13.2
26.2

[*]+
0.13
0.68
100
99.9
99.9
49.6

[*]
0.72
3.09
100
75.0
16.7
29.5

[33]
8.13
90.7
39.5
19.3
0.8
4.2

(a) STAIRS point-sets 4 & 5

(b) WOOD-SUMMER point-sets 0 & 1
Figure 6. Qualitative results for two large-scale datasets. The blue
scan was aligned by GOGMA from an arbitrary initial pose against
the red scan, followed by GMA reﬁnement. Best viewed in colour.

set within 10 ¯d of a point from the other point-set, where ¯d is
the mean closest point distance. Sequential point-sets were
aligned using GOGMA with/out reﬁnement, Go-ICP [54],
ICP [4] and CPD [33] with the 72 ISOI rotations as initial
transformations. GOGMA was reﬁned by running GMA
from the output transformation with m, n ≈ 1000 compo-
nents. The coarse, medium and ﬁne registration inlier rates
are deﬁned as the fraction of alignments with translation
and rotation errors less than 2m/10◦, 1m/5◦ and 0.5m/2.5◦
respectively. Tables 3 and 4 and Figure 6 show the results.
GOGMA signiﬁcantly outperformed Go-ICP in these ex-
periments, ﬁnding the correct transformation in all cases
under the coarse criterion. Crucially, the success of the re-
ﬁnement step in ﬁnding the correct transformation in virtu-
ally all cases under the ﬁne criterion indicates that GOGMA
found the correct alignment, up to the granularity of the 50

Table 5. Sensor localisation results for APARTMENT. The mean
translation error (in metres), rotation error (in degrees), runtime
(in seconds) and ﬁne (F) registration inlier rates are reported.
D
Room Scan
0.35
Translation
Rotation
2.35
100
Inlier % (F)
Runtime
409

A
0.16
0.93
100
328

B
0.22
0.89
100
383

C
0.40
1.95
100
379

A

C

B

D

Figure 7. Coarse pose estimates (black spheres) of the sensor lo-
cations for 4 room scans (red, blue, green and purple) found by
aligning each scan with the entire map (grey) using GOGMA.

component representation. Go-ICP performed poorly with
the loose convergence threshold  = 10−4 and N = 50
points. With  an order of magnitude smaller (10−5), N
an order of magnitude greater (500), or any trimming, the
runtime became prohibitively slow. The tightest feasible 
(5×10−5) failed to coarsely align 19% of cases for STAIRS
and 16% for WOOD-SUMMER. Finally, the results show
that ICP and CPD both perform poorly without a good pose
prior, converging to local minima for most initialisations.

A speciﬁc application is the kidnapped robot problem:
ﬁnding the pose of a sensor within a 3D map. We perturbed
4 scans of different rooms in the APARTMENT dataset [38]
by the 72 ISOI rotations to simulate being lost and used
GOGMA to localise the scans within the map. As shown in
Table 5 and Figure 7, all positions were correctly localised.

7. Conclusion

In this paper, we have introduced a globally-optimal so-
lution to 3D Gaussian mixture alignment under the L2 dis-
tance, with an application to point-set registration. The
method applies the branch-and-bound algorithm to guaran-
tee global optimality regardless of initialisation and uses lo-
cal optimisation to accelerate convergence. The pivotal con-
tribution is the derivation of the objective function bounds
using the geometry of SE(3). The algorithm performed
very well on challenging ﬁeld datasets, due to an objec-
tive function that is robust to outliers induced by partial-
overlap and occlusion. There are several areas that warrant
further investigation. Firstly, runtime beneﬁts could be re-
alised by implementing the local optimisation on the GPU.
Dynamic branching factors would allow more parallelism
for the same memory requirements. Finally, extending the
lower bound to handle full covariances would enable the al-
gorithm to be applied to more general Gaussian mixtures.

References
[1] D. Aiger, N. J. Mitra, and D. Cohen-Or. 4-points congruent
sets for robust pairwise surface registration. In ACM Trans.
Graphics, volume 27, page 85. ACM, 2008. 2

[2] J.-C. Bazin, Y. Seo, and M. Pollefeys. Globally optimal con-
In Proc.
sensus set maximization through rotation search.
Asian Conf. Comput. Vision, pages 539–551. Springer, 2012.
2

[3] S. Belongie, J. Malik, and J. Puzicha. Shape matching and
object recognition using shape contexts. IEEE Trans. Pattern
Anal. Mach. Intell., 24(4):509–522, 2002. 1

[4] P. J. Besl and N. D. McKay. A method for registration of 3-D
shapes. IEEE Trans. Pattern Anal. Mach. Intell., 14(2):239–
256, 1992. 1, 8

[5] G. Blais and M. D. Levine. Registering multiview range data
IEEE Trans. Pattern Anal.

to create 3D computer objects.
Mach. Intell., 17(8):820–824, 1995. 1, 2

[6] A. J. P. Bustos, T.-J. Chin, and D. Suter. Fast rotation
search with stereographic projections for 3d registration. In
Proc. 2014 Conf. Comput. Vision Pattern Recognition, pages
3930–3937. IEEE, 2014. 2

[7] R. H. Byrd, P. Lu, J. Nocedal, and C. Zhu. A limited mem-
ory algorithm for bound constrained optimization. SIAM J.
Scientiﬁc Comput., 16(5):1190–1208, 1995. 3

[8] D. Campbell and L. Petersson. An adaptive data representa-
tion for robust point-set registration and merging. In Proc.
2015 Int. Conf. Comput. Vision, pages 4292–4300, Santiago,
Chile, 2015. IEEE. 1, 2, 6

[9] D. Chetverikov, D. Stepanov, and P. Krsek. Robust Euclidean
alignment of 3D point sets:
the trimmed iterative closest
point algorithm. J. Image Vision Comput., 23(3):299–309,
2005. 2

[10] H. Chui and A. Rangarajan. A feature registration framework
using mixture models. In Proc. 2000 Workshop Math. Meth-
ods Biomedical Image Anal., pages 190–197. IEEE, 2000. 1,
2

[11] H. Chui and A. Rangarajan. A new algorithm for non-rigid
point matching. In Proc. 2000 Conf. Computer Vision and
Pattern Recognition, volume 2, pages 44–51. IEEE, 2000. 1
[12] H. Chui and A. Rangarajan. A new point matching algo-
rithm for non-rigid registration. J. Computer Vision Image
Understanding, 89(2):114–141, 2003. 2

[13] D. Comaniciu. An algorithm for data-driven bandwidth se-
lection. IEEE Trans. Pattern Anal. Mach. Intell., 25(2):281–
288, 2003. 2

[14] B. Curless and M. Levoy. Dragon, Stanford Computer
Graphics Laboratory. http://graphics.stanford.
edu/data/3Dscanrep/, 2014. 6

[15] A. P. Dempster, N. M. Laird, and D. B. Rubin. Max-
imum likelihood from incomplete data via the EM algo-
rithm. J. Royal Statistical Society. Series B (Methodologi-
cal), 39(1):1–38, Jan. 1977. 2, 7

[16] T. Deselaers, G. Heigold, and H. Ney. Object classiﬁcation
by fusing SVMs and Gaussian mixtures. J. Pattern Recogni-
tion, 43(7):2476–2484, 2010. 2

[17] R. Detry, N. Pugeault, and J. H. Piater. A probabilistic frame-
work for 3D visual object representation. IEEE Trans. Pat-
tern Anal. Mach. Intell., 31(10):1790–1803, 2009. 2

[18] M. A. Figueiredo and A. K. Jain. Unsupervised learning of
ﬁnite mixture models. IEEE Trans. Pattern Anal. Mach. In-
tell., 24(3):381–396, 2002. 7

[19] A. Fitzgibbon. Robust registration of 2D and 3D point sets.

J. Image Vision Comput., 21(13):1145–1153, 2003. 2

[20] A. Geiger, F. Moosmann, O. Car, and B. Schuster. Automatic
camera and range sensor calibration using a single shot. In
Proc. 2012 Int. Conf. Robotics and Automation, pages 3936–
3943, 2012. 1

[21] N. Gelfand, N. J. Mitra, L. J. Guibas, and H. Pottmann. Ro-
bust global registration. In Proc. Eurographics Symp. Geom-
etry Processing, volume 2, page 5, 2005. 2

[22] S. Granger and X. Pennec. Multi-scale EM-ICP: A fast and
robust approach for surface registration. In Proc. 2002 Euro-
pean Conf. Computer Vision, volume 2353, pages 418–432,
2002. 2

[23] R. I. Hartley and F. Kahl. Global optimization through rota-
tion space search. Int. J. Comput. Vision, 82(1):64–79, 2009.
4

[24] D. F. Huber and M. Hebert. Fully automatic registration of
multiple 3D data sets. J. Image Vision Comput., 21(7):637–
650, 2003. 1

[25] B. Jian and B. C. Vemuri. Robust point set registration using
Gaussian mixture models. IEEE Trans. Pattern Anal. Mach.
Intell., 33(8):1633–1645, 2011. 1, 2, 7

[26] A. E. Johnson and M. Hebert. Using spin images for efﬁ-
cient object recognition in cluttered 3D scenes. IEEE Trans.
Pattern Anal. Mach. Intell., 21(5):433–449, 1999. 1, 2

[27] A. H. Land and A. G. Doig. An automatic method of solving
discrete programming problems. Econometrica: Journal of
the Econometric Society, pages 497–520, 1960. 3

[28] E. L. Lawler and D. E. Wood. Branch-and-Bound methods:

A survey. Operations Research, 14(4):699–719, 1966. 3

[29] H. Li and R. Hartley. The 3D-3D registration problem revis-
ited. In Proc. 2007 Int. Conf. Computer Vision, pages 1–8.
IEEE, 2007. 2, 3

[30] M. Magnusson, A. Lilienthal, and T. Duckett. Scan regis-
tration for autonomous mining vehicles using 3D-NDT. J.
Field Robotics, 24(10):803–827, 2007. 2

[31] N. Mellado, D. Aiger, and N. J. Mitra. Super 4PCS fast
global pointcloud registration via smart indexing. Comput.
Graph. Forum, 33(5):205–215, 2014. 2

[32] J. Mor´e. The Levenberg-Marquardt algorithm: Implemen-
tation and theory. J. Numerical Analysis, pages 105–116,
1978. 2

[33] A. Myronenko and X. Song. Point set registration: Co-
herent point drift. IEEE Trans. Pattern Anal. Mach. Intell.,
32(12):2262–2275, 2010. 1, 2, 8

[34] A. N¨uchter, K. Lingemann, J. Hertzberg, and H. Surmann.
J. Field

6D SLAM–3D mapping outdoor environments.
Robotics, 24(8-9):699–722, 2007. 1

[35] C. Olsson, F. Kahl, and M. Oskarsson. Branch-and-bound
IEEE Trans.
methods for euclidean registration problems.
Pattern Anal. Machine Intelligence, 31(5):783–794, 2009. 2

and Augmented Reality, pages 181–188, Adelaide, Australia,
2013. 1

[53] J. Yang, H. Li, D. Campbell, and Y. Jia. Go-ICP: a glob-
ally optimal solution to 3D ICP point-set registration. IEEE
Trans. Pattern Anal. Mach. Intell., PP(99):1–1, 2016. 1, 2, 4
[54] J. Yang, H. Li, and Y. Jia. GoICP: Solving 3D registration
efﬁciently and globally optimally. In Proc. 2013 Int. Conf.
Comput. Vision, pages 1457–1464, Sydney, Australia, 2013.
IEEE. 1, 2, 4, 5, 7, 8

[55] A. Yershova, S. Jain, S. M. Lavalle, and J. C. Mitchell. Gen-
erating uniform incremental grids on SO(3) using the Hopf
ﬁbration. Int. J. Robot. Res., 2009. 6

[56] Z. Zhang.

Iterative point matching for registration of
Int. J. Computer Vision,

free-form curves and surfaces.
13(2):119–152, 1994. 1, 2

[36] C. Papazov and D. Burschka. Stochastic global optimization
for robust point set registration. Computer Vision and Image
Understanding, 115(12):1598–1609, 2011. 2

[37] F. Pomerleau, F. Colas, R. Siegwart, and S. Magnenat. Com-
paring ICP variants on real-world data sets. Autonomous
Robots, 34(3):133–148, 2013. 1, 2

[38] F. Pomerleau, M. Liu, F. Colas, and R. Siegwart. Challenging
data sets for point cloud registration algorithms. Int. J. Robot.
Res., 31(14):1705–1711, Dec. 2012. 7, 8

[39] C. Robertson and R. B. Fisher. Parallel evolutionary registra-
tion of range data. Computer Vision and Image Understand-
ing, 87(1):39–50, 2002. 2

[40] S. Rusinkiewicz and M. Levoy. Efﬁcient variants of the ICP
algorithm. In Proc. Int. Conf. 3D Digital Imaging and Mod-
eling, pages 145–152, 2001. 2

[41] R. Rusu, N. Blodow, and M. Beetz. Fast Point Feature His-
tograms (FPFH) for 3D registration. In Proc. 2009 Int. Conf.
Robotics and Automation, pages 3212–3217, 2009. 2

[42] R. Sandhu, S. Dambreville, and A. Tannenbaum. Point set
registration via particle ﬁltering and stochastic dynamics.
IEEE Trans. Pattern Anal. Mach. Intell., 32(8):1459–1473,
2010. 2

[43] D. W. Scott. Parametric statistical modeling by minimum in-
tegrated square error. Technometrics, 43(3):274–285, 2001.
2

[44] L. Silva, O. R. P. Bellon, and K. L. Boyer. Precision range
image registration using a robust surface interpenetration
measure and enhanced genetic algorithms. IEEE Trans. Pat-
tern Anal. Mach. Intell., 27(5):762–776, 2005. 2

[45] T. D. Stoyanov, M. Magnusson, H. Andreasson, and
A. Lilienthal. Fast and accurate scan registration through
minimization of the distance between compact 3D NDT rep-
resentations. Int. J. Robot. Res., 2012. 2

[46] G. K. Tam, Z.-Q. Cheng, Y.-K. Lai, F. C. Langbein, Y. Liu,
D. Marshall, R. R. Martin, X.-F. Sun, and P. L. Rosin. Regist-
ration of 3D point clouds and meshes: A survey from rigid to
nonrigid. IEEE Trans. Vis. Comput. Graphics, 19(7):1199–
1217, 2013. 2

[47] Y. Tsin and T. Kanade. A correlation-based approach to ro-
bust point set registration. Proc. 2004 European Conf. Com-
puter Vision, pages 558–569, 2004. 1, 2

[48] G. Turk and M. Levoy. Stanford Bunny, Stanford Computer
Graphics Laboratory. http://graphics.stanford.
edu/data/3Dscanrep/, 2014. 6

[49] VXL. VXL 1.14.0: C++ Libraries for Computer Vision.

http://vxl.sourceforge.net/, 2014. 6

[50] O. J. Woodford, M.-T. Pham, A. Maki, F. Perbet, and
Demisting the hough transform for 3D
Int. J. Comput. Vision,

B. Stenger.
shape recognition and registration.
106(3):332–341, 2014. 2

[51] H. Xiong, S. Szedmak, and J. Piater. A study of point cloud
registration with probability product kernel functions.
In
Proc. 2013 Int. Conf. 3D Vision, pages 207–214, Seattle,
USA, 2013. IEEE. 2

[52] J. Yang, Y. Dai, H. Li, H. Gardner, and Y. Jia. Single-shot ex-
trinsic calibration of a generically conﬁgured RGB-D cam-
In Proc. Int. Symp. Mixed
era rig from scene constraints.

