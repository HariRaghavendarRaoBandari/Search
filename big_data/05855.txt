A POSTERIORI ERROR ESTIMATES

FOR THE VIRTUAL ELEMENT METHOD

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

Abstract. An posteriori error analysis for the virtual element method (VEM) applied to gen-
eral elliptic problems is presented. The resulting error estimator is of residual-type and applies
on very general polygonal/polyhedral meshes. The estimator is fully computable as it relies only
on quantities available from the VEM solution, namely its degrees of freedom and element-wise
polynomial projection. Upper and lower bounds of the error estimator with respect to the VEM
approximation error are proven. The error estimator is used to drive adaptive mesh reﬁnement
in a number of test problems. Mesh adaptation is particularly simple to implement since ele-
ments with consecutive co-planar edges/faces are allowed and, therefore, locally adapted meshes
do not require any local mesh post-processing.

6
1
0
2

 
r
a

M
 
8
1

 
 
]

.

A
N
h
t
a
m

[
 
 

1
v
5
5
8
5
0

.

3
0
6
1
:
v
i
X
r
a

1. Introduction

The virtual element method (VEM) is a numerical framework introduced in [7] for the approxi-
mation of solutions of partial diﬀerential equations (PDEs). Key attributes of VEM are its ability
to permit the use of meshes with very general polygonal/polyhedral elements [2, 11, 8, 17, 4, 9, 20]
and the seamless incorporation of approximation spaces with arbitrary global regularity [11]. There
has been a strong interest in recent years in the development of numerical methods on general
polygonal/polyhedral meshes [10, 38, 7, 25, 19, 18, 29, 21, 24, 26, 43], not least due to the potential
appeal of such mesh generality in the context of Lagrangian and/or adaptive reﬁnement/coarsening
algorithms. The virtual element method revolves around a virtual element space of trial and test
functions, deﬁned implicitly through local PDE problems on each element. The local spaces are
designed to contain a space of (physical frame) polynomials, ultimately responsible for the accu-
racy of the method, as well as a complementary space of more general non-polynomial functions.
In this respect, VEM belongs to the wide family of Generalised FEM [5], as do other approaches to
general meshes such as the Polygonal FEM [38], numerical multiscale methods (see, e.g., [27, 1, 32]
and the references therein), and, so-called, Treﬀtz-type methods in general [6, 28, 30, 37]. Quite
diﬀerently from all the above approaches, though, the virtual element method does not require
the evaluation of non-polynomial functions, even in a rough fashion. Instead, to produce fully
computable and accurate VEM formulations on general meshes, the method’s degrees of freedom
are carefully chosen so that relevant projections of the local virtual element functions into the local
subspace of polynomials are computable. A crucial consequence of this approach is that the VEM
computed solution is not available in the form of a (virtual element) function. Rather, the solution
is represented via the values of its degrees of freedom, from which we can access, for instance, the
piecewise polynomial projection of the corresponding complete virtual element function.

Given the virtual nature of the method, the design and analysis of fully computable a posteriori
error bounds for the VEM is a challenging task. In [12], a posteriori error bounds for the C 1-
conforming VEM for the two-dimensional Poisson problem are proven. The C 1-continuity in the
VEM space was employed to circumvent the non-availability of the inter-element normal ﬂuxes
of the virtual basis functions in the more standard C 0-conforming method. Furthermore, the
analysis in [12] relies on a Cl´ement-type interpolant construction requiring quadratic (or higher-
order) virtual element spaces only. To the best of our knowledge, [12] is the only a posteriori error
analysis for VEM currently available in the literature.

1

2

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

In this work, we present a new residual-type a posteriori error analysis for the C 0-conforming
VEM introduced in [20] for the discretization of second order linear elliptic reaction-convection-
diﬀusion problems with non-constant coeﬃcients in two and three dimensions. We circumvent the
lack of availability of the VEM solution normal ﬂuxes by replacing them by a suitable projection
of the ﬂuxes instead, resulting to the introduction of virtual inconsistency terms in the a posteriori
error estimator to account for this replacement error. Moreover, the analysis is based on a new
Cl´ement-type VEM interpolant in two and three dimensions, which, crucially, allows for minimal
regularity interpolation by linear VEM functions. This new interpolant, which may be of inde-
pendent interest, is constructed starting from the standard ﬁnite element Cl´ement interpolant on
a regular sub-triangulation; cf. also [34] for a related idea for a two-dimensional VEM interpolant.
The resulting constants in the Cl´ement interpolation estimate are dependent on the respective
FEM Cl´ement interpolant on a regular sub-triangulation, which are in principle available [41, 39],
along with other computable quantities. Once equipped with the above developments, the proof
of a posteriori bounds are derived by careful treatment of the inconsistency terms, whereby ap-
propriate projection operators are introduced into the discrete problem formulation; we refer to
[36] for a related general framework for a posteriori analysis of inconsistent discontinuous Galerkin
methods. Although the focus of this work is the VEM introduced in [20], the proof of the a
posteriori error bounds is quite general, and can be straightforwardly adapted (with some care)
to other VEM approaches, such as the VEM proposed in [9], cf. the discussion in Section 7 below.
Adaptive mesh reﬁnement driven by a posteriori error estimators is a well established tool for
the eﬃcient numerical solution of PDEs exhibiting local, numerically challenging, solution features.
In this context, the extreme mesh ﬂexibility allowed by the VEM approach oﬀers a number of po-
tential advantages. For instance, locally adapted meshes do not require any local post-processing:
very general polygonal/polyhedral meshes are admissible due to the physical frame polynomial
subspaces included in the VEM space, therefore removing any restrictions posed by maximum
angle conditions or mesh-distortion, as is the case for standard adaptive FEM. Moreover, VEM
avoids the need to introduce additional degrees of freedom for hanging node/face removal (‘green
reﬁnement’) during mesh reﬁnement: hanging nodes introduced by the reﬁnement of a neigh-
bouring element are simply treated as new nodes since adjacent co-planar elemental interfaces
are perfectly acceptable. Furthermore, in the VEM context, coarsening becomes trivial and inex-
pensive to implement as node removal does not necessitate any further local mesh modiﬁcation.
The latter is particularly attractive in the context of numerical solution of evolution PDEs where
mesh-coarsening is standard practice to track evolving fronts and/or singularities eﬃciently. In-
deed, apart from making mesh change straightforward to implement, the mesh ﬂexibility oﬀered
by VEM may have the potential to provide complexity reduction with respect to standard FEM on
traditional simplicial and or box-type meshes. At the time of writing, no results in this direction
are available.

The remainder of this work is structured as follows. In Section 2, we detail the model problem
and in Section 3 we introduce the virtual element method, while some fundamental approximation
results are presented in Section 4. The a posteriori error estimator is introduced in Section 5 and
upper and lower bounds are presented. The a posteriori error bound is then used in Section 6
within an automatic mesh adaptivity algorithm in a series of numerical examples, conﬁrming
numerically its optimality. Finally, in Section 7 we give some concluding remarks.
Below, we shall use standard notation for the relevant function spaces. For a Lipschitz domain
ω ⊂ Rd, d = 2, 3, we denote by H s(ω) the Hilbert space of index s ≥ 0 of real–valued functions
deﬁned on ω, endowed with the seminorm | · |s,ω and norm (cid:107) · (cid:107)s,ω; further (·,·)ω stands for the
standard L2 inner-product. Finally, |ω| denotes the d–dimensional Hausdorﬀ measure of ω.

Let Ω ⊂ IRd be a polygonal domain for d = 2 or a polyhedral domain for d = 3 and consider

2. The Continuous Problem

the linear second order elliptic boundary value problem

−∇ · (κ(x)∇u) + β(x) · ∇u + γ(x)u = f (x)

u = 0

in Ω,

on ∂Ω.

(2.1)

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

3

We assume that γ, f ∈ L∞(Ω), β ∈ [W 1,∞(Ω)]d and that κ ∈ [L∞(Ω)]d×d is a strongly elliptic
symmetric diﬀusion tensor, i.e., there exist κ∗, κ∗ > 0, independent of (cid:126)v and x, such that

for almost every x ∈ Ω and for any (cid:126)v ∈ [H 1
on IRd. Finally, we assume that, for almost every x ∈ Ω, there exists a constant µ0 such that

(2.2)
0 (Ω)]d, with |·| denoting the standard Euclidean norm

κ∗|(cid:126)v(x)|2 ≤ (cid:126)v(x) · κ(x)(cid:126)v(x) ≤ κ∗|(cid:126)v(x)|2,

µ(x) := γ(x) − 1
2

∇ · β(x) ≥ µ0 > 0.

(2.3)

Problem (2.1) can be written in variational form, reading: Find u ∈ H 1
∀v ∈ H 1

(κ∇u,∇v) + (β · ∇u, v) + (γu, v) = (f, v)

(2.4)
with (·,·) denoting the (standard) L2 inner-product over Ω. Following [20], we split the bilinear
form on the left-hand side of (2.4) into its symmetric and skew-symmetric parts

0 (Ω) such that
0 (Ω),

a(u, v) := (κ∇u,∇v) + (µu, v) ,

(2.5a)

(2.5b)

(2.6)

b(u, v) :=

[(β · ∇u, v) − (u, β · ∇v)] ,

1
2

and we consider the problem written in the equivalent form: ﬁnd u ∈ H 1
0 (Ω).

A(u, v) := a(u, v) + b(u, v) = (f, v)

∀v ∈ H 1

0 (Ω) such that

Rewriting the bilinear form in this fashion is a useful step in view of preserving the coercivity of
A at the virtual (discrete) level, independently of the mesh size. An alternative VEM based on
the original variational form (2.4) and without assuming coercivity is presented in [9], whose well-
posedness relies on selecting suﬃciently small mesh size. The a posteriori error analysis presented
below can be also applied with to the method of [9], with minor modiﬁcations, cf., Section 7.

3. The Virtual Element Method

3.1. Polygonal and polyhedral partitions. Let {Th} be a family of partitions of the do-
main Ω into non-overlapping simple polygonal/polyhedral elements with maximum size h; a poly-
gon/polyhedron is termed simple when its boundary is not self-intersecting. We further assume
that the boundary ∂E of each element E ∈ Th is made of a uniformly bounded number of inter-
faces: line segments if d = 2 and planar polygons with a uniformly bounded number of straight
edges if d = 3. Elemental interfaces are either part of the boundary of Ω or shared with another
element in the decomposition. By s we shall denote the generic (d− 1)-dimensional mesh interface
(either an edge when d = 2, or a face when d = 3) of a mesh element E ∈ Th; the set of all mesh
interfaces in Th will be denoted by Sh, which is subdivided into the set of boundary interfaces
S bdry
. Also, νE will be
the (uniformly bounded) number of interfaces s ∈ ∂E.

:= {s ∈ Sh : s ⊂ ∂Ω} and the set of internal interfaces S int

h := Sh \ S bdry

h

h

We note that, in particular, partitions including non-convex elements are allowed, as also are
elements with consecutive co-planar edges/faces, such as those typical of locally reﬁned meshes
with hanging nodes. We also make the following mesh regularity assumptions which are standard
in this context, cf. [2, 20].

Assumption 1. (Mesh regularity). We assume the existence of a constant ρ > 0 such that

(1) for every element E of Th and every interface s of E, hs ≥ ρhE;
(2) every element E of Th is star-shaped with respect to a ball of radius ρhE;
(3) for d = 3, every interface s ∈ Sh viewed as a 2-dimensional element satisﬁes assumptions

(1) and (2).

(cid:99)Th :=(cid:83)

Remark 2 (Global shape regularity). An immediate consequence of the above mesh regularity
assumptions is that each element E admits a sub-triangulation T E
h , a partition of E into triangles
when d = 2 and tetrahedra when d = 3, in such a way that the resulting global triangulation
T E
h is shape regular. For d = 2 this is is obtained by joining each vertex of E with
a point with respect to which E is starred. For d = 3 the same procedure can be applied starting
from the similar triangulation of each face.

E∈Th

4

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

Throughout the paper, we denote by Π0

onto the space P(cid:96)(E) of polynomials with total degree (cid:96), for any E ∈ Th and (cid:96) ∈ N ∪ {0}.

(cid:96) : L2(E) → P(cid:96)(E) the L2(E)-orthogonal projection

3.2. Virtual Element Space. We begin by recalling the construction of the conforming virtual
element space from [20]. For each Th and p ∈ N, we shall construct a virtual element space
Vh ⊂ H 1
0 (Ω) of order p in an element-wise fashion; Vh will be of order p ∈ N if, for each element
E ∈ Th, the space V E
h := Vh|E contains the space Pp(E) of polynomials of degree p on E. In
general, the space V E
h will also contain non-polynomial functions. However, the distinctive idea
of VEM is the computability based on degrees of freedom, which stems from the view that the
complement of Pp(E) in V E
Deﬁnition 3 (Computability). A term is computable if it may be evaluated using the data of the
problem, the degrees of freedom, and the polynomial component of the virtual element space only.

h is made up of functions which are deemed expensive to evaluate.

We shall consider two types of degrees of freedom: nodal values and polynomial moments.

Deﬁnition 4 (Degrees of freedom). Let ω ⊂ IRd, 1 ≤ d ≤ 3, be an d-dimensional polytope, that
is, a line segment, polygon, or polyhedron, respectively. For any regular enough function v on ω,
we deﬁne the following sets of degrees of freedom:

z is a vertex};

• N ω are the nodal values. For a vertex z of ω, N ω
• Mω

z (v) := v(z) and N ω := {N ω
(cid:19)α
l are the polynomial moments up to order l. For l ≥ 0,

z

(cid:18) x − xω

:

and

|α| ≤ l,

Mω

α(v) =

1
|ω| (v, mα)ω

with mα :=

hω

where α is a multi-index with |α| := α1 + ··· + αd and xα := xα1
coordinate system, and xω denoting the barycentre of ω. Further, Mω
The deﬁnition is extended to l = −1 by setting Mω−1 := ∅.

1 . . . xαd
l = {Mω

d

in a local
α : |α| ≤ l}.

The local virtual space is constructed recursively in space dimensions. We ﬁrst consider the
h := Pp(s) and we deﬁne the auxiliary space

case d = 2. On each edge interface s ∈ ∂E we take V s
W E

h :=(cid:8)vh ∈ H 1(Ω) : ∆vh ∈ Pp(E) and vh|s ∈ V s

h for all s ∈ ∂E(cid:9) ,

W E

h as

(3.1)

h ⊂ C 0(E). The elements of W E

h can be uniquely identiﬁed by the

noting that Pp(E) ⊂ W E
following set of degrees of freedom [2, 20]:
h ) := {N E, Ms

DoF(W E

p−2 for each edge interface s ∈ ∂E, ME
p }.

(3.2)

pvh and Π0

The crucial property Pp(E) ⊂ W E

p−1∇vh computable for any vh ∈ W E
pvh is given directly by the internal degrees of freedom ME
p .

These degrees of freedom make the terms Π0
for instance, the projection Π0
h would still be satisﬁed by the smaller space obtained by
requiring ∆vh ∈ Pp−2(E) instead of ∆vh ∈ Pp(E) in (3.1). This is, indeed, the original virtual
element space introduced in [7]. However, since the elemental projection Π0
p is not computable in
the original VEM space of [7], a diﬀerent subspace of W E
h with the same dimension as the original
space of [7] was introduced [2]. In the latter subspace deﬁnition, the L2-projection onto Pp(E) is
computable using the extra higher-order moments.
p \
h , the moments in ME
h →
p : W E
ME
Pp(E) which only depend on the reduced set of degrees of freedom

The crucial observation is that, in the polynomial space Pp(E) ⊂ W E
p−2 are redundant. Hence, it is possible to construct L2-stable projection operators Π∗

h [20];

DoF(V E

h ) := {N E, Ms

p−2 for each edge interface s ∈ ∂E, ME

p−2}.

(3.3)

In particular, and following [20], this can simply be taken as the projection corresponding to the
Euclidean inner product on DoF(V E
h ). This is, indeed, the choice used in all numerical tests
presented in Section 6.

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

5

p = 1

p = 2

p = 3

p = 4

Figure 1. The VEM degrees of freedom for a hexagonal mesh element for p =
1, 2, 3, 4; nodal values and edge moments are marked by a circle; internal moments
are marked by a square. The number of moments per edge is given by N1,p−2 =
0, 1, 2, 3 and the number of internal moments is given by N2,p−2 = 0, 1, 3, 6 for
p = 1, 2, 3, 4, respectively.

Given any such projection operator Π∗

by clamping the internal higher-order moments:

h : (vh, mα)E =(cid:0)Π∗

V E
h :=

vh ∈ W E

(cid:110)

(cid:1)

pvh, mα

∀mα with p − 1 ≤ |α| ≤ p

E

p, we can deﬁne a local virtual element space V E

(cid:111)

.

h ⊂ W E

h

(3.4)

h is identiﬁed by the degrees of freedom DoF(V E

By construction, the space V E
h ) of (3.3), used to
deﬁne Π∗
p. A counting argument shows that the cardinality of the above sets of degrees of freedom
is NE = νE + νEN1,p−2 + N2,p−2. Representative examples are illustrated in Fig. 1. Further,
we note that it is also possible to compute Π0
h just from the
reduced set of degrees of freedom since we can access the higher order moments through Π∗
p; we
refer to [20, Section 4.1] for the details.
h on each face s ∈ ∂E to be the 2-dimensional virtual
space given by (3.4). The construction of the local virtual element space on E now follows by
deﬁning the auxiliary space W E
h of (3.4) in exactly the same way as
the 2-dimensional case. In the 3-dimensional case, V E
h is identiﬁed by the following set of degrees
of freedom [20]:

p−1∇vh for each vh ∈ V E

For the case d = 3, we ﬁrst (re-)deﬁne V s

h of (3.1) and ﬁnal space V E

pvh and Π0

DoF(V E

h ) := {N E, Me

p−2 for each edge e ∈ ∂E, Ms

p−2 for each face s ∈ ∂E, ME

p−2}.

Therefore, the dimension of the local space for d = 3 is NE = ν(cid:48)(cid:48)
N3,p−2 where ν(cid:48)(cid:48)
Representative examples are illustrated in Fig. 2.

(3.5)
EN1,p−2 + νEN2,p−2 +
E denote, respectively, the number of vertices and edges of E; cf., [20].

E and ν(cid:48)

E + ν(cid:48)

Finally, the global space is constructed from these local spaces as
∀E ∈ Th

0 (Ω) : vh|E ∈ V E

h

Vh :=(cid:8)vh ∈ H 1

(cid:9) ,

(3.6)

and the global degrees of freedom are obtained by collecting the local ones, with the nodal and
interface degrees of freedom corresponding to internal entities counted only once. Those on the
boundary are ﬁxed to be equal to zero in accordance with the ambient space H 1

0 (Ω).

(cid:88)

(cid:88)

3.3. Discrete formulation. We shall now recall the VEM for (2.6) introduced in [20]. For every
E ∈ Th, let aE and bE be the elemental continuous forms obtained by restriction of the forms
in (2.5a) and (2.5b) onto the element E, respectively. A virtual bilinear form Ah : Vh × Vh → IR,
is constructed elementwise as

Ah(uh, vh) =

AE

h (uh, vh) =

aE
h (uh, vh) + bE

h (uh, vh),

E∈Th
h is a bilinear form over the space V E

E∈Th

for any uh, vh ∈ Vh. Here, AE
symmetric and skew-symmetric discrete bilinear forms aE
forms aE and bE, respectively. To deﬁne AE
admissible stabilising forms.

h , which is split into the
h corresponding to the continuous
h precisely, we begin by introducing the concept of

h and bE

6

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

p = 1

p = 2

p = 3

p = 4

Figure 2. The VEM degrees of freedom for a cubic mesh element for p =
1, 2, 3, 4; nodal values and edge moments are marked by a circle; face moments
are marked by a hexagon; internal moments are marked by a square. Only the
internal degrees of freedom and those of the visible faces and edges are marked.
The numeric labels indicate the number of degrees of freedom when there are
more than 1. The number of moments per edge is given by N1,p−2 = 0, 1, 2, 3,
the number of interface moments is given by N2,p−2 = 0, 1, 3, 6, and the number
of internal moments is given by N3,p−2 = 0, 1, 4, 10 for p = 1, 2, 3, 4, respectively.

Deﬁnition 5 (Admissible stabilising forms). Let E ∈ Th. Two computable (in the sense of
h /Pp(E) →
Deﬁnition 3), symmetric, and positive deﬁnite bilinear forms SE
IR are said to be local admissible bilinear forms for stabilising the diﬀusion and reaction terms
in (2.5a), if they, respectively, satisfy

h /Pp(E)× V E

0 : V E

1 , SE

(cid:90)

C−1

stab

(cid:90)

κ|∇vh|2 d x ≤SE
h d x ≤SE

1 (vh, vh) ≤ Cstab
0 (vh, vh) ≤ Cstab

µv2

E

C−1

for all vh ∈ V E

stab

h d x,
h /Pp(E) for some constant Cstab independent of E and h.

E

E

µv2

κ|∇vh|2 d x,

(cid:90)
(cid:90)

E

A practical choice of admissible stabilising bilinear forms is given in (6.1). We note here a trivial
h /Pp(E),

consequence of the above deﬁnition which will be useful in the analysis: for all vh ∈ V E
we have

(cid:107)∇vh(cid:107)2

0,E ≤ Cstab
κE∗

SE

1 (vh, vh),

(cid:107)vh(cid:107)2

0,E ≤ Cstab
µE
0

SE

0 (vh, vh),

(3.7)

where κE∗ , µE

0 are the local counterparts of κ∗, µ0, respectively.

A virtual element stabilising term SE may then be deﬁned as the linear combination of any

pair of admissible diﬀusion and reaction stabilising forms:

SE := s1SE

1 + s0SE
0 ,

1 , SE

with SE
0 admissible stabilising bilinear forms and s1, s0 positive constants. We prefer to keep
the dependence of the stabilising form explicit with respect to the constants s1, s0, to be able to
study their inﬂuence on the constants in the a posteriori bounds below.

For every E ∈ Th, the local symmetric and skew-symmetric discrete bilinear forms aE

h and bE
h

are deﬁned by

aE
h (uh, vh) := (κΠ0

p−1∇uh, Π0

p−1∇vh)E + (µΠ0

bE
h (uh, vh) :=

p−1∇uh, Π0

pvh) − (Π0

(cid:2)(β · Π0

1
2

puh, Π0
puh, β · Π0

pvh) + SE((I−Π0

p−1∇vh)(cid:3) ,

p)uh, (I−Π0

p)vh),

(3.8)

(3.9)

respectively, for all uh, vh ∈ V E
and p− 1 makes all terms in (3.8) and (3.9) computable since Π0
for any vh ∈ V E

h (and SE is computable by assumption).

h . Notice the inﬂuence of the computable L2 projection of degree p
p−1∇vh are computable

pvh and Π0

342222222223361033333333366A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

7

Remark 6 (Polynomial consistency and stability). If p, q ∈ Pk(E) ⊂ V E
h (p, q) = aE(p, q)
and bE
h (p, q) = bE(p, q); this property is referred to as polynomial consistency in the VEM liter-
ature [7]. Further, Deﬁnition 5 ensures the following stability property: there exists a positive
constant Cstab independent of h and the mesh element E, such that

h , then aE

(Cstab)−1aE(vh, vh) ≤ aE

h (vh, vh) ≤ CstabaE(vh, vh),

for all vh ∈ V E
coercivity of Ah. We refer to [20] for the details.

h . This, together with the obvious identity bE

The virtual element method (VEM) then reads: ﬁnd uh ∈ Vh such that

h (vh, vh) = 0 for all vh ∈ V E

h yields the

(3.10)

Ah(uh, vh) = (fh, vh) ∀vh ∈ Vh.

(3.11)

where fh := Π0

p−1f .

It may be shown that the problem (3.11) possesses a unique solution whenever (3.10) is satis-
ﬁed [20, Theorem 1], along with optimal order a priori error bounds for the VEM solution in the
H 1 and L2 norms [20, Theorems 5 & 6].

4. Approximation properties

The conforming virtual space introduced above satisﬁes optimal properties for approximating
suﬃciently smooth functions. In particular, the theory in [16] for star-shaped domains may be used
to prove the following theorem regarding the approximation properties of the L2(E)-orthogonal
projection to polynomials.

Theorem 7 (Approximation using polynomials). Suppose that Assumption 1 is satisﬁed. Let
E ∈ Th and let Π0
(cid:96) : L2(E) → P(cid:96)(E), for (cid:96) ≥ 0, denote the L2(E)-orthogonal projection onto the
polynomial space P(cid:96)(E). Then, for any w ∈ H m(E), with 1 ≤ m ≤ (cid:96) + 1, it holds

(cid:107)w − Π0

(cid:96) w(cid:107)0,E + hE|w − Π0

(cid:96) w|1,E ≤ Cprojhm

E|w|m,E.

The positive constant Cproj depends only on the polynomial degree (cid:96) and the mesh regularity.

We shall make use of standard bubble functions on polygons below. A bubble function ψE ∈
H 1
0 (E) for a polygon E can be constructed piecewise as the sum of the (polynomial) barycentric
bubble functions (cf. [40, 3]) on each d-simplex of the shape-regular sub-triangulation of the mesh
element E discussed in Remark 2.
Lemma 8 (Interior bubble functions). Let E ∈ Th and let ψE be the corresponding bubble function.
There exists a constant Cbub, independent of p and hE such that for all p ∈ Pp(E)

bub(cid:107)p(cid:107)2
C−1

0,E ≤

ψEp2 d x ≤ Cbub(cid:107)p(cid:107)2

0,E,

(cid:90)

E

(cid:90)

s

and

bub(cid:107)p(cid:107)0,E ≤ (cid:107)ψEp(cid:107)0,E + hE(cid:107)∇(ψEp)(cid:107)0,E ≤ Cbub(cid:107)p(cid:107)0,E.
C−1

Lemma 9 (Edge bubble functions). For E ∈ Th, let s ⊂ ∂E be a mesh interface and let ψs be the
corresponding edge bubble function. There exists a constant Cbub, independent of p and hE such
that for all p ∈ Pp(E)

bub(cid:107)p(cid:107)2
C−1

0,s ≤

ψsp2 ds ≤ Cbub(cid:107)p(cid:107)2

0,s,

and

−1/2
h
E

(cid:107)ψsp(cid:107)0,E + h1/2

E (cid:107)∇(ψsp)(cid:107)0,E ≤ Cbub(cid:107)p(cid:107)0,e.

We shall ﬁrst use the above two results to prove an inverse inequality for virtual element
functions, made possible by the fact that functions in W E
h have polynomial Laplacians.
Lemma 10 (Inverse inequality). Suppose that Assumption 1 is satisﬁed. Let E ∈ Th and let
w ∈ H 1(E) be such that ∆w ∈ Pk(E). There exists a constant Cinv, independent of w, h and E,
such that

h and V E

(cid:107)∆w(cid:107)0,E ≤ Cinvh−1

E |w|1,E

8

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

Proof. We ﬁrst require an auxiliary polynomial inverse inequality (cid:107)q(cid:107)0,E ≤ Cinvh−1
E (cid:107)q(cid:107)H−1(E),
valid for all q ∈ Pp(E). This may be proven by selecting v = qψE in the deﬁnition of the dual
norm, viz.,

(cid:107)q(cid:107)H−1(E) :=

sup
0(cid:54)=v∈H 1

0 (E)

≥

E ψEq2 d x
(cid:107)∇q(cid:107)0,E

,

(4.1)

(cid:82)

(cid:82)
E qv d x
(cid:107)∇v(cid:107)0,E

and using Lemma 8. Applying this to ∆w ∈ Pp(E), we ﬁnd that
E (cid:107)∆w(cid:107)H−1(E).
Now, using (4.1), along with an integration by parts, we deduce

(cid:107)∆w(cid:107)0,E ≤ Cinvh−1

(cid:82)

(cid:107)∆w(cid:107)H−1(E) =

sup
0(cid:54)=v∈H 1

0 (E)

E ∆wv d x
(cid:107)∇v(cid:107)0,E

=

sup
0(cid:54)=v∈H 1

0 (E)

The result then follows by applying the Cauchy-Schwarz inequality.

−(cid:82)

E ∇w · ∇v d x
(cid:107)∇v(cid:107)0,E

.

(cid:3)

The above inverse estimate will be used to prove an approximation theorem (Theorem 11 below)
for the virtual element spaces considered in this work. The proof of Theorem 11 is inspired by [34,
Prop. 4.2], where a related result is obtained in the much simpler setting of the original virtual
element space of [7] for d = 2 only. As the construction in [34, Prop. 4.2] does not appear to
generalize to d = 3, we use a diﬀerent construction for the Cl´ement-type interpolant below.

for any v ∈ H 1(Ω):

We begin by recalling some classical polynomial interpolation results on simplicial triangu-
lations. Remark 2 asserts that Assumption 1 implies the existence of a globally shape-regular

sub-triangulation(cid:99)Th of Th. We use this to deﬁne vc as the classical Cl´ement interpolant [23] of v
of degree p over the sub-triangulation (cid:99)Th. Then, the following approximation estimates hold [23]
for all T ∈(cid:99)Th, with ˆCClem a positive constant depending only on the polynomial degree p and on
the mesh regularity. Here, (cid:101)T denotes the usual ﬁnite element patch relative to T .

(cid:107)v − vc(cid:107)0,T + h|v − vc|1,T ≤ ˆCClemh|v|1,(cid:101)T ,

(4.2)

Theorem 11 (Approximation using virtual element functions). Suppose that Assumption 1 is
satisﬁed and let Vh denote the virtual element space (3.6). For v ∈ H 1(Ω), there exists a vI ∈ Vh,
such that, for all elements E ∈ Th, we have

(cid:107)v − vI(cid:107)0,E + h|v − vI|1,E ≤ CClemh|v|1,(cid:101)E,

CClem being a positive constant, depending only on the polynomial degree p and the mesh regularity.

Proof. We denote by vc the Cl´ement interpolant deﬁned over a sub-triangulation (cid:99)Th and satisfy-
sub-triangulation(cid:99)Th, cf. Remark 2.

ing (4.2). It is assumed that all edges of the polygonal/polyhedral mesh Th are also edges of the
Case d = 2. We start by interpolating vc into the enlarged virtual element space Wh. More

speciﬁcally, we deﬁne wI elementwise as the solution of the problem

(4.3)
pvc ∈ Pp−2(E) ⊂ Pp(E) and vc is a polynomial of degree p on each edge of E, we
h . Moreover, since vc is continuous on Ω, it follows that wI ∈ Wh.

wI = vc

Then, since ∆Π0
may conclude that wI|E ∈ W E

in E,
on ∂E.

(cid:40)−∆wI = −∆Π0

pvc

Arguing as in [34, Proposition 4.2], we may show that
≤ |vc − Π0

|wI − Π0

pvc|

pvc|

1,E

and, therefore,

|vc − wI|1,E ≤ 2|vc − Π0

pvc|

.

1,E

1,E

,

(4.4)

(4.5)

Now, wI allows us to construct an interpolant vI ∈ Vh using the deﬁnition of V E
h (given in (3.4)) on
each E ∈ Th. By deﬁnition, the two interpolants vI and wI are equal on the mesh skeleton Sh and

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

9

for all E ∈ Th, ME
α(vI) = ME
Consider, now, |wI − vI|1,E on each E ∈ Th. Integration by parts yields

α(wI) if |α| ≤ p − 2, while ME

α(vI) = ME

α(Π∗

pwI) if p − 1 ≤ |α| ≤ p.

as wI and vI coincide on ∂E. Since wI − vI ∈ W E
Pp(E)/Pp−2(E) be deﬁned by pp,p−1 = ∆(wI − vI) − Π0
rewritten as

|wI − vI|2

1,E = −(∆(wI − vI), wI − vI)E,

(4.6)
h , we have ∆(wI − vI) ∈ Pp(E). Let pp,p−1 ∈
p−2∆(wI − vI). Identity (4.6) can then be

|wI − vI|2

pwI)E,
since vI and wI have the same moments of up to degree p − 2, while vI and Π∗
moments of degree p and p − 1. The Cauchy-Schwarz inequality then implies that

1,E = −(pp,p−1, wI − vI)E = −(pp,p−1, wI − Π∗

pwI share the same

|wI − vI|2

1,E ≤ (cid:107)pp,p−1(cid:107)0,E(cid:107)wI − Π∗

pwI(cid:107)

.

0,E

Further, from the stability of the L2 projection we get
p−2)∆(wI − vI)(cid:107)

(cid:107)pp,p−1(cid:107)0,E = (cid:107)(I−Π0

≤ (cid:107)∆(wI − vI)(cid:107)0,E,

0,E

|wI − vI|2

where I denotes the identity operator on the space Pp(E). Thus,
≤ Cinvh−1

1,E ≤ (cid:107)∆(wI − vI)(cid:107)0,E(cid:107)wI − Π∗

pwI(cid:107)
by Lemma 10. Further, adding and subtracting Π0
Poincar´e inequality [39] applied to wI − Π0

pwI, we obtain

0,E

E |wI − vI|1,E(cid:107)wI − Π∗
pwI and using the stability of Π∗

pwI(cid:107)

,

0,E

p and then the

|wI − vI|1,E ≤ Cinv(1 + C∗

0 )h−1

E (cid:107)wI − Π0

pwI(cid:107)

0,E

≤ CPCinv(1 + C∗

0 )|wI − Π0

pwI|

,

1,E

for some C∗
and (4.5) imply that

0 , CP > 0. Then, the triangle inequality, the stability of Π0

p with constant, say, C0,

pwI|
+ |Π0
+ C0|vc − wI|1,E)
pvc|
Finally, the triangle inequality, the above bound, and (4.5), imply

|wI − vI|1,E ≤ CPCinv(1 + C∗
= CPCinv(1 + C∗
≤ CPCinv(1 + C∗

0 )(|wI − Π0
0 )(|wI − Π0
0 )(1 + 2C0)|vc − Π0

pvc − Π0

pvc|
pvc|

1,E

1,E

1,E

.

1,E

)

|vc − vI|1,E ≤ |vc − wI|1,E + |wI − vI|1,E ≤ C1|vc − Π0

pvc|

,

1,E

(4.7)

subtracting v and Π0
and applying the bounds (4.2) and Theorem 4.7.

with C1 := (2 + CPCinv(1 + C∗
apply the Poincar´e inequality to obtain a bound on (cid:107)vc − vI(cid:107)0,E, with an extra power of hE.

0 )(1 + 2C0)). From this, given vI and vc are equal on ∂E, we may
The required bounds of |v − vI|r,E, r = 0, 1, now follow by the triangle inequality, adding and
pv to the right-hand side of (4.7), using once again the triangle inequality,
Case d = 3. The proof in this case is based on using on each face s ∈ ∂E the construction just
Let W s

considered for d = 2 and then extending this inside E.
h be the interface spaces respectively deﬁned by (3.1) and (3.4) applied to the
interface. For each s ∈ ∂E, we consider ws
h as the solution of the 2-dimensional boundary
value problem (4.3) set on s, with vc representing the three-dimensional Cl´ement interpolant of v

with respect to the 3-dimensional sub-triangulaiton(cid:99)Th.

I ∈ W s

h and V s

Further, from ws

I we may use the 2-dimensional construction to obtain vs

I ∈ V s

h . This face

interpolant satisﬁes (4.7) with s in place of E, namely:

|vc − vs

I |1,s ≤ C1|vc − Π0,s

p vc|

,

1,s

(4.8)

with Π0,s
deﬁnitions we obtain a continuous interpolant v∂E

p vc denoting the L2-projection of the restriction of vc to s. Collecting the face-wise
on ∂E. With this, we ﬁrst construct wI on E

I

10

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

as the solution of the problem

(cid:40)−∆wI = −∆Π0

wI = v∂E

I

on ∂E.

pvc in E,

Similarly to the d = 2 case, we have wI ∈ W E
problem implies that

h by deﬁnition, cf. (3.1). Furthermore, the above

|wI − Π0

pvc|

1,E

≤ Creg(cid:107)v∂E

I − Π0

pvc(cid:107)

,

1/2,∂E

for some positive constant Creg. From this, using the Trace Theorem and adding and subtracting
vc, we obtain

|wI − Π0

pvc|

1,E

≤ Creg
≤ Creg

I − vc(cid:107)1/2,∂E + (cid:107)vc − Π0
I − vc(cid:107)1/2,∂E + (cid:107)vc − Π0

pvc(cid:107)
pvc(cid:107)

.

(4.9)

(cid:16)(cid:107)v∂E
(cid:16)(cid:107)v∂E

(cid:17)

(cid:17)

1/2,∂E

1,E

It just remains to bound the ﬁrst term on the right-hand side. To this end, we resort to the
Sobolev Interpolation Theorem and Poincar´e inequality once again:

(cid:107)v∂E

I − vc(cid:107)2

((cid:107)vs

I − vc(cid:107)2

I − vc|1,s)

1/2,∂E ≤ (cid:88)

s∈∂E

≤ (CPhE + CS)CPhE

≤ (CPhE + CS)CPC1hE

I − vc(cid:107)0,s|vs
0,s + CS(cid:107)vs
(cid:88)
|vs
I − vc|2
(cid:88)
|vc − Π0,s

s∈∂E

1,s

s∈∂E

p vc|2

1,s

,

(4.10)

for some positive constant CS, having used (4.8) applied to each s ∈ ∂E to obtain the last bound.
The interface terms above are further bounded by applying Theorem 7, yielding

|vc − Π0,s

p vc|

1,s

≤ Cproj|vc|1,s ≤ Cprojh

−1/2
E

|vc|1,E.

Using this bound in (4.10) and the latter in (4.9), we ﬁnally obtain

|wI − Π0

pvc|

1,E

≤ C2|vc|1,E,

(4.11)

with C2 > 0 depending on the (uniformly bounded) number νE of interfaces of E and on the
constants CT, CP, CS, Cinv, Creg, and Cproj.
Now, given wI, we can construct an interpolant vI ∈ Vh exactly as in the 2-dimensional case and
following the same (dimension-independent) argument derive the bound (4.7). This latter bound,
combined with (4.11), yields

+ |wI − Π0

1,E

1,E

(4.12)

From (4.12) we can derive the required bound in the L2-norm by resorting to the scaled Poincar´e-

|vc − vI|1,E ≤ 2|vc − Π0
for some C3 > 0 depending on C1 and C2.
(cid:18)

Friedrichs inequality [15] and recalling (4.12):

pvc|

(cid:107)vc − vI(cid:107)0,E ≤ CP

hE|vc − vI|1,E + h
≤ CP(C3hE|vc|1,E + h1/2

E

∂E

(cid:107)vc − vs

I (cid:107)0,s)

(4.13)

≤ C3|vc|1,E,
(cid:19)

(vc − vI)ds|

pvc|
(cid:90)

|

−1/2
E

(cid:88)

s∈∂E

The interface terms on the right-hand side can be further bounded using the Poincar´e inequality
once more and (4.8):

(cid:107)vc − vs

I (cid:107)0,s ≤ CPhE|vc − vs

I |1,s ≤ CPC1hE|vc − Π0,s
≤ CPC1CprojhE|vc|1,s ≤ CPC1Cprojh1/2

p vc|
E |vc|1,E.

1,s

Finally, combining this bound with (4.13) yields

(cid:107)vc − vI(cid:107)0,E ≤ C4hE|vc|1,E,

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

with C4 > 0 depending on C3, νE.

The statement of the theorem now follows, as in the case d = 2.

11

(cid:3)

We shall now derive a residual-type a posteriori error bound for the error in the standard energy

5. A Posteriori Error Analysis

norm:

|(cid:107)v(cid:107)|2

ω := (cid:107)√

κ∇v(cid:107)2

0,ω + (cid:107)√

µv(cid:107)2

(5.1)
for v ∈ H 1(ω), for any ω ⊆ Ω. The coercivity and continuity of the bilinear form A in this norm
follow from the assumptions on the coeﬃcients κ and µ, which ensure that for v ∈ H 1

0,ω,

(Cequiv)−1(cid:107)v(cid:107)1,Ω ≤ |(cid:107)v(cid:107)|Ω ≤ (cid:98)Cequiv(cid:107)v(cid:107)1,Ω,

where Cequiv := (cid:112)(1 + CPF)/κ∗, with CPF the Poincar´e-Friedrichs constant, and (cid:98)Cequiv :=
(cid:112)max{κ∗,(cid:107)µ(cid:107)∞}, cf. [20]. The coercivity and continuity of Ah in this norm are then inherited

0 (Ω),

from A through the virtual element stability property (3.10).

To account for the eﬀects of data oscillation, we introduce the following piecewise-polynomial

approximations to the PDE coeﬃcients:
κh ≈ κ,

βh ≈ β,

γh ≈ γ.

(5.2)

s ⊂ ∂E+ ∩ ∂E−. Denote by v± the trace of v|E± on s from within E± and by n±

For quantities which may be discontinuous across the mesh skeleton, we deﬁne the jump operator
h , then there exist E+ and E− such that
s the unit
, then

(cid:74)·(cid:75) across a mesh interface s ∈ Sh as follows. If s ∈ S int
outward normal on s from E±. Then,(cid:74)v(cid:75) := v+n+
(cid:74)v(cid:75) := vns, with v representing the trace of v from within the element E having s as an interface

s . If, on the other hand, s ∈ S bdry

s + v−n−

h

and ns is the unit outward normal on s from E.
5.1. The residual equation. Deﬁne e := u − uh ∈ H 1
respectively,

0 (Ω), and let v ∈ H 1

0 (Ω). Then, we have,

A(e, v) = (f, v) − A(uh, χ) − A(uh, v − χ)

= (f, v) − (fh, χ) + Ah(uh, χ) − A(uh, χ) − A(uh, v − χ)
= (f − fh, χ) + (f, v − χ) + Ah(uh, χ) − A(uh, χ) − A(uh, v − χ)

(5.3)
for any χ ∈ Vh, since u satisﬁes the weak form of the PDE problem and uh is the virtual element
solution. Notice that, in contrast to a posteriori bounds for standard ﬁnite element approximations,
additional terms appear in the virtual element residual equation. These terms represent the virtual
inconsistency of the VEM.

5.2. A posteriori error bound. We shall estimate each term on the right-hand side of (5.3)
separately, to arrive to a computable error bound. To this end, an integration by parts and
straightforward manipulation yields the identity

0 (Ω). Using this and the data approximations introduced in (5.2), (5.3) may be

(cid:90)

(cid:88)

(cid:113)κΠ0
p−1)∇uh, w) + (γ(I−Π0

p−1∇uh(cid:121)w ds+
p)uh, w(cid:1) ,

s∈Sh

s

p−1∇uh + β · Π0

puh, w(cid:1) +

A(uh, w) =(cid:0)−∇ · κΠ0
+(cid:0)κ(I−Π0
(cid:0)(RE, v − χ) + (θE, v − χ) + BE(uh, v − χ)(cid:1) − (cid:88)

p−1∇uh + γΠ0
p−1)∇uh,∇w) + (β · (I−Π0

(cid:88)

for any w ∈ H 1
rewritten as

A(e, v) =

(cid:16)

E∈Th

+ (f − fh, χ) + Ah(uh, χ) − A(uh, χ)

(Js, v − χ)0,s + (θs, v − χ)0,s

s∈Sh

(cid:17)

(5.4)

12

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

for any v ∈ H 1

0 (Ω), χ ∈ Vh, where

RE := (fh + ∇ · κhΠ0

p−1∇uh(cid:121)(cid:12)(cid:12)s
Js := (cid:113)κhΠ0
θs := (cid:113)(κ − κh)Π0

θE := (f − fh + ∇ · (κ − κh)Π0
,

p−1∇uh(cid:121)(cid:12)(cid:12)s

,

p−1∇uh − βh · Π0

p−1∇uh − γhΠ0

puh)|E,

p−1∇uh − (β − βh) · Π0

p−1∇uh − (γ − γh)Π0

puh)|E,

(5.5)

(5.6)

(5.7)

(5.8)

are the element and edge residuals, and the element and edge data oscillation terms, respectively,
and

BE(wh, v) := (κ(I−Π0

p−1)∇wh,∇v)E + (β · (I−Π0

p−1)∇wh, v)E + (γ(I−Π0

p)wh, v)E,

is the ‘virtual’ residual.
Theorem 12 (Upper bound). Let uh ∈ Vh be the virtual element solution to problem (3.11).
Then, there exists a constant C, independent of h, u and uh, such that

|(cid:107)u − uh(cid:107)|2

Ω ≤ C

where

(ηE + ΘE + SE + ΨE),

E∈Th

(cid:88)
(cid:88)
s⊂∂E
E(cid:107)f − fh(cid:107)2
p − I)uh),

hs(cid:107)Js(cid:107)2

ηE := h2

0,E +

E(cid:107)RE(cid:107)2
E(cid:107)θE(cid:107)2

ΘE := h2

SE = SE((Π0

0,E + h2
p − I)uh, (Π0

0,s,

0,E +

(cid:88)

s⊂∂E

hs(cid:107)θs(cid:107)2

0,s,

and ΨE encompasses the virtual inconsistency terms, deﬁned as the sum of

p−1 − I)(κΠ0

1 = (cid:107)(Π0
ΨE
ΨE
2 = h2
3 = (cid:107)(Π0
ΨE
4 = h2
ΨE

E(cid:107)(Π0

p − I)(β · Π0
p−1 − I)(βΠ0
p − I)(µΠ0

E(cid:107)(Π0

0,E

p−1∇uh)(cid:107)2

,
p−1∇uh)(cid:107)2
puh)(cid:107)2
puh)(cid:107)2

0,E

.

,

0,E

,

0,E

Proof. Let eI ∈ Vh be the interpolant of e satisfying the bounds of Theorem 11. Then, upon
setting v = e and χ = eI in (5.4), coercivity yields

E∈Th

(cid:16)
(cid:88)
(RE, e − eI)E + (θE, e − eI)E + (f − fh, eI)E + BE(uh, e − eI)
h (uh, eI) − AE(uh, eI)(cid:1)(cid:17) − (cid:88)
+(cid:0)AE
(Js, e − eI)0,s + (θs, e − eI)0,s
(cid:17) − (cid:88)
(cid:16)
(cid:88)

I + II + III + IV + V

V I + V II

(cid:16)
(cid:16)

s∈Sh

(cid:17)

.

(cid:17)

|(cid:107)e(cid:107)|2

Ω =

=:

E∈Th

s∈Sh

For I and II, we use the Cauchy-Schwarz inequality and the bounds of Theorem 11 to ﬁnd that

I = (RE, e − eI)E ≤ CClemhE(cid:107)RE(cid:107)0,E(cid:107)e(cid:107)1,E,
II = (θE, e − eI)E ≤ CClemhE(cid:107)θE(cid:107)0,E(cid:107)e(cid:107)1,E.

For III, we use the properties of the L2-projection to ﬁnd that

III = (f − fh, eI − Π0

p−1eI)E ≤ CprojhE(cid:107)e(cid:107)1,E(cid:107)f − fh(cid:107)0,E.

Bounding the edge terms V I and V II requires the use of the scaled trace inequality (cid:107)v(cid:107)2

0,s ≤
0,E), for v ∈ H 1(E), along with the bounds of Theorem 11 and the mesh

0,E + hE(cid:107)∇v(cid:107)2

E (cid:107)v(cid:107)2

Ctr(h−1

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

13

regularity assumption, yielding

V I ≤ (cid:107)Js(cid:107)0,s(cid:107)e − eI(cid:107)0,s ≤ CtrCClemρ− 1
V II ≤ (cid:107)Js(cid:107)0,s(cid:107)e − eI(cid:107)0,s ≤ CtrCClemρ− 1

2(cid:107)e(cid:107)1,ωs
2(cid:107)e(cid:107)1,ωs

1
2

s (cid:107)Js(cid:107)0,s,
h
s (cid:107)θs(cid:107)0,s,
h

1
2

where ωs = E+∪E− with E+ and E− the elements meeting at the edge s, and hωs = max{hE+, hE−}.

(cid:16)(cid:107)κ(I−Π0
(cid:16)(cid:16)
(cid:16)(cid:16)

For IV , we have, respectively,
p−1)∇uh(cid:107)
IV ≤ CClem
≤ CClem
E + hE(cid:107)β(cid:107)∞,E
κ∗
≤ CClem
E + hE(cid:107)β(cid:107)∞,E
κ∗

0,E

(cid:17)(cid:107)(I−Π0
(cid:17)(cid:107)∇(I−Π0

+ hE(cid:107)β · (I−Π0
p−1)∇uh(cid:107)
p)uh(cid:107)

0,E

p−1)∇uh(cid:107)

+ hE(cid:107)γ(I−Π0
p)uh(cid:107)

+ hE(cid:107)γ(cid:107)∞,E(cid:107)(I−Π0

0,E

0,E

+ hE(cid:107)γ(cid:107)∞,E(cid:107)(I−Π0

p)uh(cid:107)

0,E

p)uh(cid:107)

(cid:17)(cid:107)e(cid:107)1,E
(cid:17)(cid:107)e(cid:107)1,E
(cid:17)(cid:107)e(cid:107)1,E,

0,E

0,E

(5.9)

noting that

(cid:107)(I−Π0

(5.10)
Using, now, (3.7), and introducing the mesh Pecl´et number by PeE := hE(cid:107)β(cid:107)1,∞,E/κE∗ , we arrive
to

0,E

0,E

0,E

.

≤ (cid:107)∇(I−Π0

p)uh(cid:107)

Focussing on V , we begin by observing the identity (due to the properties of the L2-projection)
aE(uh, eI) − aE

p−1∇uh,∇eI)E +(cid:0)(I−Π0

p)uh, µeI

E

p)µΠ0

puh, (I−Π0

0)eI

IV ≤

√

E
κE∗

+ PeE

κE∗ SE

(cid:17)2

p)uh(cid:107)

1 ((I−Π0

= (cid:107)(I−Π0

p−1)∇uh(cid:107)

(cid:18)(cid:16) κ∗

2CClem(cid:107)e(cid:107)1,E

p−1)∇(I−Π0
(cid:17)2
(cid:16)(cid:107)γ(cid:107)∞,E
p−1)∇uh,∇eI)E +(cid:0)(I−Π0
h (uh, eI) = (κ(I−Π0
+ ((I−Π0
(cid:16)
− SE((I−Π0
p)uh, (I−Π0
≤ (cid:107)eI(cid:107)1,E
E(cid:107)∇(I−Π0
κ∗
+(cid:107)(I−Π0

p−1)κΠ0

h2
EµE

0 SE

µE
0

0,E

+

p)eI)
p)uh(cid:107)
p−1)κΠ0
p)uh, (I−Π0

p−1∇uh(cid:107)
p)eI).

− SE((I−Π0

p)uh, (I−Π0

p)uh)

0 ((I−Π0

p)uh)

p)uh, (I−Π0
(cid:1)

(cid:19)1/2

.

(cid:1)

E

+ (cid:107)µ(cid:107)∞,E(cid:107)(I−Π0

p)uh(cid:107)

0,E

+ CprojhE(cid:107)(I−Π0

p)µΠ0

puh(cid:107)

0,E

0,E

(cid:17)

with the last bound resulting from straightforward use of the Cauchy-Schwarz inequality and
Theorem 7. From Deﬁnition 5 and Theorem 7, we may bound the ﬁnal term by

SE((I−Π0
≤ (s2

(cid:90)

p)uh))1/2(cid:16)
p)uh))1/2(cid:16)

Cstab

p)uh, (I−Π0
p)eI)
1 ((I−Π0
p)uh, (I−Π0
1SE
(cid:16)
0 ((I−Π0
p)uh, (I−Π0
1 ((I−Π0
1κ∗
ESE
(s2
0(cid:107)µ(cid:107)∞,Eh2
+(s2

+ (s2
0SE
stab(cid:107)eI(cid:107)1,E

Cstab
p)uh, (I−Π0
0 ((I−Π0
ESE

E

≤ C 1/2

p)uh))1/2
p)uh, (I−Π0
Combining the last two bounds, along with (3.7), we conclude
aE(uh, eI) − aE

h (uh, eI) ≤ (cid:107)eI(cid:107)1,E

p−1)κΠ0

κ∇((I−Π0

p)eI) · ∇((I−Π0
(cid:17)1/2

p)eI)2 d x

µ((I−Π0

(cid:90)

E

p)eI) d x

p)uh))1/2(cid:17)

.

(cid:17)1/2

+ CprojhE(cid:107)(I−Π0
p)uh, (I−Π0

1 ((I−Π0

p)µΠ0

(cid:17)1/2
puh(cid:107)

0,E

p)uh)

0,E

(cid:17)
p−1∇uh(cid:107)
κ∗
(cid:17)(cid:107)µ(cid:107)∞,ESE
ESE

0h2
E

+ s2
1

+ s2

0 ((I−Π0

p)uh, (I−Π0

p)uh)

(cid:17)1/2(cid:19)(cid:19)

.

(cid:16)(cid:107)(I−Π0
(cid:18)(cid:16)(cid:16) κ∗
(cid:16)(cid:16)(cid:107)µ(cid:107)∞,E

+ C 1/2
stab

E
κE∗

+

µE
0

14

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

The skew-symmetric terms can be treated completely analogously, yielding
bE(uh, eI) − bE

CPFhE(cid:107)β(cid:107)∞,E + CprojhE(cid:107)β(cid:107)1,∞,E

h (uh, eI) ≤ 1
2

(cid:16)(cid:16)

(cid:17)(cid:107)∇(I−Π0

p−1)βΠ0

+ CprojhE(cid:107)(I−Π0
p)uh(cid:107)

p)βΠ0

+ (cid:107)(I−Π0

p−1∇uh(cid:107)
, noting that (I−Π0

0,E

p)uh has zero average, and us-

p)uh(cid:107)

≤ CPFhE(cid:107)∇(I−Π0

as (cid:107)(I−Π0
ing (5.10). The stability bound (3.7), further implies
bE(uh, eI) − bE

C 1/2

(cid:16)

0,E

h (uh, eI) ≤ 1
2

0,E

stab(CPF + Cproj)(cid:0)Pe2
(cid:18)

p)βΠ0

p−1∇uh(cid:107)

+ CprojhE(cid:107)(I−Π0

E κE∗ SE

1 ((I−Π0
+ (cid:107)(I−Π0

p)uh, (I−Π0
puh(cid:107)
p−1)βΠ0

0,E

AE(uh, eI) − AE

Combining the bounds for the symmetric and skew-symmetric terms above, we deduce
puh(cid:107)
puh(cid:107)

h (uh, eI) ≤ (cid:107)eI(cid:107)1,E

p−1∇uh(cid:107)

(cid:107)(I−Π0

(cid:107)(I−Π0

p−1)βΠ0

+ CprojhE

p)µΠ0

1
2

0,E

p−1)κΠ0
(cid:107)(I−Π0
p)βΠ0
1 ((I−Π0

+
p−1∇uh(cid:107)
p)uh, (I−Π0

(cid:17)(cid:107)µ(cid:107)∞,ESE

+ s2

0h2
E

0,E

+ (cid:107)(I−Π0

(cid:17)1/2
p)uh)
p)uh, (I−Π0
0 ((I−Π0

˜s1κE∗ SE

0,E

(cid:17)
(cid:17)1/2(cid:19)

0,E

p)uh)

,

p)uh(cid:107)
puh(cid:107)

0,E

0,E

(cid:17)(cid:107)∇eI(cid:107)0,E,
p)uh)(cid:1)1/2
(cid:17)(cid:107)∇eI(cid:107)0,E.

0,E

2

+ C 1/2
stab

(cid:16) 1
(cid:16)
(cid:16)(cid:16)(cid:107)µ(cid:107)∞,E
(cid:17)2
(cid:16) κ∗

µE
0

+

+ s2
1

E
κE∗

κ∗
E
κE∗

with

˜s1 :=

+ (CPF + Cproj)2 Pe2

E .

The result then follows by combining the individual bounds above and using the equivalence of
(cid:3)

the energy- and H 1-norms.

The terms of ηE echo the standard element and edge residual terms while ΘE are data oscillation
terms, familiar from the residual a posteriori analysis of ﬁnite element methods [40, 3, 42]. In the
present virtual context, however, these terms involve only the polynomial part of uh, as they
would, in principle, not be computable for uh itself. As a result, remainder terms, collected in ΨE,
also appear in the estimator. The term SE, on the other hand, provides a computable estimate
for the quality of the approximation Π0

puh of uh.

Remark 13. We note that the term ΨE
3 does not vanish when the PDE coeﬃcients are constant, as
ΨE
i , i = 1, 2, 4 do. It is possible to circumvent this quite easily by modifying the skew-symmetric
bilinear form bE
h to use the degree p projection of the gradient. The resulting method and the
respective (modiﬁed) estimators are still computable in just the same manner as the current method
(cf. [20]), since the virtual element functions are polynomials of degree p on each edge.

The estimator of Theorem 12 is also an estimator for the error between u and the projection

of uh, and we have the following result.

Corollary 14 (Bound for the projected solution). Let ηE, ΨE, SE and ΘE be the terms of the
estimator in Theorem 12. Then,
|(cid:107)u − Π0

(ηE + ΨE + SE + ΘE).

puh(cid:107)|2

Proof. Using the triangle inequality and the deﬁnition of the stabilising term, we have

|(cid:107)u − Π0

puh(cid:107)|2

Ω ≤ 2|(cid:107)u − uh(cid:107)|2

Ω +

2Cstab

min{s1, s0} SE(uh − Π0

puh, uh − Π0

puh).

The result follows by Theorem 12.

(cid:3)

(cid:88)
Ω ≤ C
(cid:88)

E∈Th

E∈Th

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

15

5.3. Lower bound. We shall now prove local lower bounds of between the a posteriori estimate
presented above and the error in the energy norm. To this end, we shall make use of element and
edge bubble functions, satisfying the bounds of Lemma 8 and Lemma 9 respectively.

Theorem 15 (Local lower bound). Let ηE, SE and ΘE as in Theorem 12. Then,

(cid:88)

(cid:16)|(cid:107)u − uh(cid:107)|2

E(cid:48) + SE(cid:48)

+ ΘE(cid:48)(cid:17)

,

ηE ≤ C

E(cid:48)∈ωE

where ωE := {E(cid:48) ∈ Th : µd−1(∂E(cid:48) ∩ ∂E) (cid:54)= 0} is the patch consisting of the element E and
its neighbours, and µd−1 denotes the (d − 1)-dimensional measure. The constant C depends on

Cstab,(cid:98)Cequiv, Cbub, ρ, Ω and the PDE coeﬃcients, but is independent of h, u and uh.

Proof. First observe that RE ∈ Pp+q(E) for some q ∈ N ∪ {0} representing the degree of the
polynomials used for the data approximations in (5.2). From (5.4) with χ = 0 and the fact that
ψE|∂E = 0, we deduce

A(e, ψERE) = (RE, ψERE)E + (θE, ψERE)E + BE(uh, ψERE).

Arguing as in (5.9), (with ψERE in place of e − eI,) we ﬁnd that

BE(uh, ψERE) ≤ C(SE)

1

2(cid:107)ψERE(cid:107)1,E,

and, consequently, using the properties of the interior bubble functions given in Lemma 8,

C(cid:107)RE(cid:107)2

0,E ≤ (RE, ψERE)E

= AE(e, ψERE) − (θE, ψERE)E − BE(uh, ψERE)
≤ C

(cid:16)|(cid:107)e(cid:107)|E + (SE)
(cid:16)|(cid:107)e(cid:107)|E + (SE)

(cid:17)(cid:107)ψERE(cid:107)1,E + (cid:107)θE(cid:107)0,E(cid:107)ψERE(cid:107)0,E
(cid:17)(cid:107)RE(cid:107)0,E + (cid:107)θE(cid:107)0,E(cid:107)RE(cid:107)0,E,

0,E ≤ h−1

E

1
2

1
2

C(cid:107)RE(cid:107)2

Using Lemma 8 again, this becomes

and, therefore, we arrive at

Ch2

E(cid:107)RE(cid:107)2

0,E ≤ |(cid:107)e(cid:107)|2

E + SE + h2

E(cid:107)θE(cid:107)2

0,E.

(cid:88)

E(cid:48)∈ωs

A(e, ψsJs) =

For the face residual, we start by extending Js into ωs through a constant prolongation in the
h with E+ ∩ E− = s.

direction normal to the face s, yielding Js ∈ Pp(ωs) ⊂ V ωs
Then, (5.4) gives

h ∪ V E−

:= V E+

h

(cid:88)

(cid:2)(RE(cid:48), ψsJs)E(cid:48) + (θE(cid:48), ψsJs)E(cid:48) + BE(uh, ψsJs)(cid:3) − (Js, ψsJs)0,s − (θs, ψsJs)0,s .
(cid:16)(cid:107)RE(cid:107)0,E(cid:48) + (cid:107)θE(cid:107)0,E(cid:48)
(cid:105)

(cid:104)(cid:16)|(cid:107)e(cid:107)|E(cid:48) + (SE(cid:48)
(cid:104)
(hs/hE(cid:48))1/2(cid:16)|(cid:107)e(cid:107)|2

(cid:17)(cid:107)ψsJs(cid:107)1,E(cid:48) +
E(cid:48) + SE(cid:48)(cid:17)

+ (hshE(cid:48))1/2(cid:107)θE(cid:48)(cid:107)2

(cid:88)

E(cid:48)∈ωs

, we

0,s +

0,E(cid:48)

)

1
2

.

Applying Lemma 9 again, using the bound for the element residual, and multiplying by h1/2
obtain

s

Arguing as before and using Lemma 9, we ﬁnd that
C(cid:107)Js(cid:107)2

0,s ≤ (cid:107)θs(cid:107)0,s(cid:107)ψsJs(cid:107)0,s +

Chs(cid:107)Js(cid:107)2

0,s ≤ hs(cid:107)θs(cid:107)2

E(cid:48)∈ωs

(cid:17)(cid:107)ψsJs(cid:107)0,E(cid:48)

(cid:105)

.

Using Assumption 1 and putting these bounds together completes the proof.

(cid:3)

This local lower bound then immediately provides a corresponding global lower bound, by

simply summing the local estimates over the whole of Th.

Theorem 15 and triangle inequality, also provide us with the following lower bound on the error

between the solution u and the projected virtual element solution Π0

puh.

16

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

Corollary 16 (Lower bound for the projected solution). Let ηE, SE and ΘE be deﬁned as in
Theorem 12. Then,

(cid:88)

(cid:16)|(cid:107)u − Π0

E(cid:48)∈ωE

ηE ≤ C

puh(cid:107)|2

E(cid:48) + SE(cid:48)

+ ΘE(cid:48)(cid:17)

,

where ωE := {E(cid:48) ∈ Th : µd−1(∂E(cid:48) ∩ ∂E) (cid:54)= 0} is the patch consisting of the element E and its
neighbours, and µd−1 denotes the (d − 1)-dimensional measure.

In addition to a lower bound for the residual part of the estimator, ηE, we have the following
control on the virtual inconsistency terms ΨE indicating that these are also of optimal order up
to data oscillation.

(cid:18)

Lemma 17 (Lower bound for the inconsistency terms). We have

ΨE ≤ C

|(cid:107)u − uh(cid:107)|2

E + SE + (cid:107)(Π0
p−1 − I)βu(cid:107)2

E

+ (cid:107)(Π0

p−1 − I)κ∇u(cid:107)2

E

+ h2

p − I)β · ∇u(cid:107)2

E

(cid:19)
E(cid:107)(Π0

+ h2

E(cid:107)(Π0

p − I)µu(cid:107)2

E

.

Proof. We have, respectively,

(cid:18)
1 ≤ 2
(cid:107)Π0
ΨE
p−1(κ(Π0
p−1(κ∇u) − κ∇u(cid:107)2
≤ 2(cid:107)Π0
≤ 2(cid:107)Π0
p−1(κ∇u) − κ∇u(cid:107)2

0,E

0,E

p−1∇uh − ∇u))(cid:107)2

0,E

+ (cid:107)Π0
+ 4(cid:107)κ(∇u − Π0
+ 8κ∗2(cid:107)∇u − ∇uh(cid:107)2

p−1(κ∇u) − κ∇u(cid:107)2
p−1∇uh)(cid:107)2

0,E

0,E

0,E + 8κ∗2(cid:107)∇uh − Π0

p−1∇uh(cid:107)2

,

0,E

(cid:19)

+ (cid:107)κ∇u − κΠ0

p−1∇uh(cid:107)2

0,E

using the stability of the L2 projection operator and (2.2). Using (5.10) and (3.7), now, the ﬁnal
term can be controlled by the stabilising term, resulting to the required bound. A completely
(cid:3)
analogous argument can be applied to each of the remaining terms of ΨE.

6. Numerical Results

We present a series of numerical experiments aimed at testing the practical behaviour of the
estimator derived in Theorem 12. In addition, we propose an adaptive algorithm based on the
estimator which is applied to a variety of test problems.

1 , SE

0 and for the projector Π∗

The above analysis is valid by only requiring a set of abstract assumptions for the stabilisation
forms SE
h through (3.4)), giving
rise to a number of possibilities. Here, we focus on a speciﬁc scheme, by providing precise choices
h × V E
for Π∗

p (which, in turn, deﬁnes the space V E
0 . More speciﬁcally, we deﬁne the bilinear form I E : V E

h → IR by

1 and SE

p, SE

NE(cid:88)

I E(vh, wh) :=

dof r(vh) dof r(wh),

r=1

with dof r(wh) denoting the value of the rth degree of freedom of wh subject to an arbitrary
but ﬁxed ordering of the degrees of freedom on the element E. This bilinear form corresponds
to the Euclidean inner product on the space IRNE consisting of vectors of degrees of freedom.
Following [20, Section 4.1], we deﬁne Π∗
p to be the orthogonal projection onto the polynomial
space Pp(E) with respect to I E(·,·), and we ﬁx
E I E(uh, vh),

1 (uh, vh) := κEhd−2
SE

SE
0 (uh, vh) := µEhd

EI E(uh, vh),

(6.1)

where κE, and µE are some constant approximations of κ, and µ over E (e.g., local averages),
respectively, resulting in

SE(uh, vh) := hd−2

E

(cid:0)s0κE + h2

Es1µE

(cid:1) I E(uh, vh).

Remark 18. Note that the internal degrees of freedom of (I−Π0
the above stablilising term reduces to a term active only on the mesh skeleton.

p)vh are equal to zero, and hence

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

17

6.1. Uniformly generated meshes. As a ﬁrst test, we consider the approximation of the prob-
lem

−∆u = f in Ω,

u = 0 on ∂Ω,

(6.2)

for Ω = (0, 1)2, and ﬁx f such that the exact solution is given by u(x, y) = sin(πx) sin(πy), on a
uniformly generated sequence of meshes consisting of non-convex polygonal elements, to test the
asymptotic behaviour of the estimator. The ﬁrst two meshes in the uniform sequence are shown in
Fig. 3. Fig. 4 depicts the convergence history of the H 1(Ω)-seminorm error and of the estimator,
in this sequence of meshes, indicating that both converge at the optimal rate when for polynomial
degrees p = 1, 2 and 3. The eﬀectivity of the estimator is deﬁned by

(cid:0)(cid:80)

E∈Th

ηE + ΘE + ΨE + SE(cid:1) 1

2

eﬀectivity :=

(cid:107)∇(u − Π0

puh)(cid:107)

0,Ω

,

(6.3)

with ηE, ΘE, SE and ΨE as in Theorem 12. Asymptotically the eﬀectivity becomes constant
throughout the mesh sequence, tending to approximately 5.7 for p = 1, 3 for p = 2, and 1.84 for
p = 3.

(a) The ﬁrst mesh, with 25 elements.

(b) The second mesh with 100 elements.

Figure 3. The ﬁrst two non-convex, in general, meshes used in the uniform
sequence described in §6.1. Vertices are marked with a dot, and may separate
coplanar edges.

Ω
,
0
(cid:107)
)
h
u
0k
Π
−
u
(
∇
(cid:107)

100

10−1

10−2

10−3

10−4

10−5

10−6

p = 1
p = 2
p = 3
dofs−0.5
dofs−1.0
dofs−1.5

101

100

10−1

10−2

10−3

10−4

10−5

Ω
,
0
(cid:107)
)
h
u
−
u
(
∇
(cid:107)

f
o

r
o
t
a
m

i
t
s
e

e
h
t

p = 1
p = 2
p = 3
dofs−0.5
dofs−1.0
dofs−1.5

102

103

104

105

Number of degrees of freedom

(a) The error (cid:107)∇(u − Π0

kuh)(cid:107)0,Ω.

102

103

104

105

Number of degrees of freedom

(b) Estimated error.

Figure 4. Convergence history of the H 1(Ω)-seminorm error and estimator for
the example (6.2) on meshes consisting mostly of non-convex elements.

18

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

6.2. Adaptive reﬁnement. We shall use a typical adaptive algorithm for elliptic problems read-
ing: solve→estimate→mark→reﬁne. In this context, given a polygonal subdivision of Ω, one solves
the VEM problem, estimates the error using the a posteriori error bound (Theorem 12), marks a
subset of elements for reﬁnement and, subsequently, reﬁnes. The D¨orﬂer/bulk marking strategy
is used below for the mark step, marking the subset of mesh elements M ⊂ Th with the largest
estimated errors such that

ηE + ΘE + ΨE + SE(cid:17) 1

2 ≤ θ

ηE + ΘE + ΨE + SE(cid:17) 1

2

(6.4)

(cid:16) (cid:88)

E∈M

(cid:16) (cid:88)

E∈Th

for some θ ∈ (0, 1). Here, we pick θ = 0.4.

To reﬁne a polygonal element we divide elements by connecting the midpoint of each planar
element face to its barycentre; see Fig. 5 for an illustration for a hexagon. Note that this strategy
simply reduces to the standard reﬁnement strategy for a square element. By reﬁning in this

P

Q

R

Figure 5. An illustration of the reﬁnement strategy used for polygonal elements.
Edges and vertices of the original element are shown by solid lines and points. To
reﬁne the element, the midpoint of each planar face of its boundary is connected
to the barycentre of the element. Note that the two edges P Q and QR are not
bisected as the reﬁnement treats P R as a single planar face, adding only a new
edge from Q to the barycentre. Consequently, the result of reﬁning two neighbours
in the mesh is independent of the order in which they are reﬁned.

fashion, hanging nodes may be introduced. Nevertheless, this is trivially accounted for in the
VEM setting as VEM is able to handle polygonal elements with arbitrary number of faces; a
ﬂexibility which we take advantage of in these examples by imposing no restriction on the number
of hanging nodes allowed on each face. In this extreme mesh ﬂexibility, more exotic reﬁnement
strategies are certainly possible, but we leave the development of these for future work.

We consider the general convection-reaction-diﬀusion problem
−∇ · (κ∇u) + β · ∇u + γu = f,

with coeﬃcients

κ =

(cid:20)1

0

(cid:21)

0
1

(cid:20)cos(x) exp(y)
(cid:21)

exp(x) sin(y)

, β =

,

γ = sin(2πx) sin(2πy),

and forcing function f chosen in accordance with two diﬀerent benchmark solutions:
Problem 1: posed over an L-shaped domain contained within [−1, 1]×[−1, 1] (depicted in Fig. 8(a))
and exhibiting low regularity at the reentrant corner, located at the origin along with
a sharp Gaussian at the point (0.5, 0.5) which initially is not resolved by the mesh.
This problem has the solution

u(x, y) = r2/3 sin(2θ/3) + exp(−(1000(x − 0.5)2 + 1000(y − 0.5)2)),

(6.5)

where (r, θ) are the usual polar coordinates centred around the point (x, y) = (0, 0),
depicted in Fig. 7(e);

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

19

Problem 2: posed over Ω = (0, 1)2 with a sharp layer in the interior of the domain and solution

u(x, y) = 16x(1 − x)y(1 − y) arctan(25x − 100y + 50),

(6.6)

depicted in Fig. 9(e).

The behaviour of the error and estimator under adaptive reﬁnement for Problem 1 and a
representative set of the meshes obtained are shown in Fig. 7 and 8, respectively. The same
results are shown for the Problem 2 in Fig. 9 and 10. We ﬁrst observe that, once the asymptotic
regime is reached in each case, the error measured in the H 1(Ω)-seminorm (shown in Fig. 7(a) for
Problem 1 and in Fig. 9(a) for Problem 2) converges with the theoretical optimal rate of N−p/2,
despite the low regularity of the true solution around the reentrant corner for Problem 1.

The initial rapid drop-oﬀ in error for Problem 1 is explained by examining the magnitudes of
the various components of the estimator for p = 1, given in Fig. 7(d). In particular, it is clear that
the data oscillation term initially dominates the estimator and, comparing with the mesh after
28 iterations, shown in Fig. 8(b), it appears to be driving the reﬁnement around the Gaussian
centred at (0.5, 0.5). Once this is suﬃciently resolved, the element and face residual terms begin
to dominate, resulting to the expected reﬁnement around the singularity at the reentrant corner.
This is shown in Fig. 8(c), after 40 iterations.

Focusing on Problem 2, now, whose key diﬃculty is the presence of an interior sharp layer
which is completely unresolved by the initial mesh. To test the resilience of the estimator in this
challenging context, the initial mesh is chosen to consist of warped hexagons which are not aligned
with the interior layer; see Fig. 10(a) for an illustration. As with Problem 1, the data oscillation
terms initially dominate the estimator until the the mesh starts to resolve the layer. After this
point the element and edge residuals become the dominant terms of the estimator.

For both problems, the eﬀectivity plots in Fig. 7(c) and 9(c), calculated as in (6.3), indicate a

good level of agreement between the estimated and calculated error.

6.3. Jumping diﬀusion coeﬃcient. We now consider the Kellogg problem [31], in which the
diﬀusion coeﬃcient κ is piecewise constant across the domain Ω = (0, 1)2, such that

(cid:40)

κ(x, y) =

b
1

for (x − a)(y − a) ≥ 0,
otherwise,

for ﬁxed 0 < a < 1 and b > 0, and no reaction or convection terms. This problem has weak
solution u(r, θ) = rαg(θ), where (r, θ) denote the polar coordinates centred at the point (a, a), and



g(θ) :=

2 − σ)α) cos((θ − π
cos(( π
4 )α)
4 α) cos((θ − π + σ)α)
cos( π
cos(σα) cos((θ − 5π
4 )α)
2 − σ)α)
4 α) cos((θ − 3π
cos( π

for 0 ≤ θ < π
2 ,
2 ≤ θ < π,
for π
for π ≤ θ < 3π
2 ,
2 ≤ θ < 2π.
for 3π

The parameters σ, α and b are required to satisfy a certain set of nonlinear relations [31], and follow-
ing [14] we take the approximate values σ = 5.49778714378214, α = 0.25, b = 25.27414236908818.
The Kellogg problem is a common example used to test a posteriori estimators on a problem
with pathological coeﬃcients and a known weak solution. Typically, this problem is studied in
the case when κ is piecewise constant with respect to the initial mesh, see, e.g., [35, 33, 22, 13].
Recently, the case of non-alignment of the initial mesh with the diﬀusion jumps has been studied
in [14] in the context of adaptive FEM. To really test the applicability of our estimator, we consider
both cases here on a variety of diﬀerent meshes.

Whether the mesh is aligned with the problem or not is dictated by the parameter a. We ﬁrst
consider a = 2
5 on a square mesh, so the discontinuities of κ are matched by the initial mesh.
The behaviour of the error and estimator for this problem are shown in Fig. 11. Moreover, for
this problem, we also compare the eﬀect of limiting the mesh to have just one hanging node per
edge, or allowing an unlimited number of hanging nodes to be produced. In both cases, we use the
D¨orﬂer strategy from (6.4) with θ = 0.6 to select the subset of elements to be reﬁned. For either
a limited or unlimited number of hanging nodes per edge, the error under adaptive reﬁnement

20

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

(a) The lines along which κ is discontinuous
pass close to the centre of the element.

(b) After reﬁnement, the discontinuities of κ
are suddenly very close to mesh edges.

Figure 6. The element of the mesh containing the intersection of the lines along
which κ is discontinuous, before and after reﬁnement. Solid lines indicate edges
in the mesh, dotted lines indicate the lines along which κ jumps.

eventually decays at the theoretical optimal rate of N−1/2, where N is the number of degrees of
freedom. It may also be seen that the H 1-seminorm error is slightly lower for the case of a limited
number of hanging nodes, although the estimated error is approximately the same for both cases.
Consequently, the eﬀectivity of the estimator is slightly better for the method with no limit on
the number of hanging nodes.
√
Next, we consider a = 2
2
5 .

In this case, it is not possible for the discontinuities of κ to
align with any mesh in the sequence. In the spirit of keeping the mesh fully unﬁtted from the
discontinuities in κ, we also test the method on a Voronoi mesh and a randomised quadrilateral
mesh alongside a more standard square mesh. For brevity, we only report here the results when an
unlimited number of hanging nodes were allowed in the mesh, as limiting the number of hanging
nodes, leads to almost identical results in terms of convergence. There are, however, diﬀerences
in the ﬁnal meshes obtained in each case: illustrations of the initial meshes and the ﬁnal meshes
for both limited and unlimited hanging nodes are given in Fig. 14. Fig. 13 shows the behaviour
of the error and estimator under adaptive reﬁnement on the three sequences of meshes: the error
in the H 1(Ω)-seminorm (Fig. 13(a)) appears to reach the theoretical optimal convergence rate of
N−1/2 on the square and randomised quadrilateral meshes, and maintains a near-optimal rate of
approximately N−0.35 on the Voronoi mesh. These rates are also reﬂected by the convergence of
the estimator, shown in Fig. 13(b), resulting in good eﬀectivities (Fig. 13(c)) which remain roughly
constant on the Voronoi and randomised quadrilateral meshes.

We note the sudden jump in the magnitude of the estimated error after 7 iterations of adaptive
reﬁnement starting from the square mesh in Fig. 13(d). Comparing with Figure 13(d), which
shows the relative magnitudes of the various terms comprising the estimator on the square mesh,
it is apparent that this jump is caused by a jump in the value of the data oscillation term Θ.
Noting that, for p = 1, the coeﬃcient approximation κh is piecewise constant, we conclude that
it is in fact only the edge data oscillation term which is non-zero and, thus, responsible for this
eﬀect. Further investigation indicates that this jump occurs in situations such as that illustrated in
Fig. 6, and is due to the fact that although the mesh cannot exactly align with the discontinuities
of κ, it is possible for it to get arbitrarily close. This is a highly desirable trait from the point of
view of generating a well-adapted mesh. Nonetheless, the standard (isotropic) reﬁnement strategy
used on squares produces a mesh with edges close to the diﬀusion discontinuity, such as the ones
depicted in Fig. 6(b), only if the previous iteration contains elements as in Fig. 6(a) with the lines
of discontinuity of κ passing close to its centre. This is problematic because the roughly equal
distribution of the central element in Figure 6(a) and its four neighbours among the diﬀerent
zones of κ mean that the approximation κh will be very similar on each of the ﬁve elements, and
thus the edge term of the data oscillation indicator will be very small. However, once this parent
is reﬁned, each child is almost entirely in a single zone of κ, so the approximations κh will be
very diﬀerent on each of the children. This will, then, cause the reported error to dramatically
increase. Moreover, since the discontinuities of κ lie along lines with irrational coordinates, it
is clear that this situation could occur an arbitrary number of times in the reﬁnement sequence,

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

21

causing problems with the eﬀectivity of the estimator. Clearly the real culprit here is the symmetry
of the situation and, consequently, a way to prevent such problems occurring is to use unstructured
meshes. This claim can be substantiated by the fact that the same diﬃculty does not occur with
the randomised quadrilateral or Voronoi meshes.

7. Conclusions and extensions

A residual posteriori error estimate for the conforming virtual element method of [20] applied to
general second order elliptic problems with nonconstant coeﬃcients was derived and analysed. This
analysis has given rise to a fully computable a posteriori error estimator which we have shown to be
equivalent to the error between the true solution and the virtual element approximation, measured
in the energy norm. The analysis rests crucially on a new Cl´ement-type interpolation result. We
have also used this estimator to drive an adaptive algorithm on a variety of problems using several
families of meshes, consisting of general polygonal elements, and presented an extensive set of
numerical results.

We stress that the analysis above can also be applied to other related virtual element for-
mulations of the same problem subject to only minor modiﬁcations. For instance, the same a
posteriori analysis can be applied to the corresponding VEM obtained by discretising directly
problem (2.4), without resorting to the splitting of the diﬀerential operator into its symmetric and
skew-symmetric parts. The resulting local discrete bilinear form would take the form

p−1∇uh, Π0
puh, Π0

p−1∇vh)E + (βΠ0
pvh)E + SE((I−Π0

p−1∇uh, Π0
p)uh, (I−Π0

pvh)E+
p)vh),

AE

h (uh, vh) :=(κΠ0

+ (γΠ0

(see [9] for a similar approach). The analysis would provide the same a posteriori error estimator
presented in Theorem 12, but without the term ΨE
3 .

Acknowledgements

AC was partially supported by the EPSRC (Grant EP/L022745/1). OS was supported by an

EPSRC Doctoral Training Grant. All this support is gratefully acknowledged.

References

[1] Abdulle, A., E, W., Engquist, B., and Vanden-Eijnden, E. The heterogeneous multiscale method. Acta

Numer. 21 (2012), 1–87.

[2] Ahmad, B., Alsaedi, A., Brezzi, F., Marini, L. D., and Russo, A. Equivalent projectors for virtual element

methods. Comput. Math. Appl. 66, 3 (2013), 376–391.

[3] Ainsworth, M., and Oden, J. T. A posteriori error estimation in ﬁnite element analysis. Pure and Applied

Mathematics (New York). Wiley-Interscience [John Wiley & Sons], New York, 2000.

[4] Ayuso de Dios, B., Lipnikov, K., and Manzini, G. The nonconforming virtual element method.

ArXiv:1405.3741v2 e-prints (May 2014).

[5] Babuvska, I., and Osborn, J. E. Generalized ﬁnite element methods: their performance and their relation

to mixed methods. SIAM J. Numer. Anal. 20, 3 (1983), 510–536.

[6] Babuvska, I., and Osborn, J. E. Finite element methods for the solution of problems with rough input data.
In Singularities and constructive methods for their treatment (Oberwolfach, 1983), vol. 1121 of Lecture Notes
in Math. Springer, Berlin, 1985, pp. 1–18.

[7] Beir˜ao da Veiga, L., Brezzi, F., Cangiani, A., Manzini, G., Marini, L. D., and Russo, A. Basic principles

of virtual element methods. Math. Models Methods Appl. Sci. (2013).

[8] Beir˜ao da Veiga, L., Brezzi, F., Marini, L. D., and Russo, A. The hitchhiker’s guide to the virtual element

method. Math. Models Methods Appl. Sci. 24, 8 (2014), 1541–1573.

[9] Beir˜ao da Veiga, L., Brezzi, F., Marini, L. D., and Russo, A. Virtual Element Method for general second-

order elliptic problems on polygonal meshes. Math. Models Methods Appl. Sci. 26, 4 (2016), 729–750.

[10] Beir˜ao da Veiga, L., Lipnikov, K., and Manzini, G. The mimetic ﬁnite diﬀerence method for elliptic

problems, vol. 11 of MS&A. Modeling, Simulation and Applications. Springer, Cham, 2014.

[11] Beir˜ao da Veiga, L., and Manzini, G. A virtual element method with arbitrary regularity. IMA J. Numer.

Anal. 34, 2 (2014), 759–781.

[12] Beir˜ao da Veiga, L., and Manzini, G. Residual a posteriori error estimation for the virtual element method

for elliptic problems. ESAIM Math. Model. Numer. Anal. 49, 2 (2015), 577–599.

[13] Bernardi, C., and Verf¨urth, R. Adaptive ﬁnite element methods for elliptic equations with non-smooth

coeﬃcients. Numer. Math. 85, 4 (2000), 579–608.

22

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

[14] Bonito, A., DeVore, R. A., and Nochetto, R. H. Adaptive ﬁnite element methods for elliptic problems

with discontinuous coeﬃcients. SIAM J. Numer. Anal. 51, 6 (2013), 3106–3134.

[15] Brenner, S. C. Poincar´e-Friedrichs inequalities for piecewise H 1 functions. SIAM J. Numer. Anal. 41, 1

(2003), 306–324.

[16] Brenner, S. C., and Scott, L. R. The mathematical theory of ﬁnite element methods, third ed., vol. 15 of

Texts in Applied Mathematics. Springer, New York, 2008.

[17] Brezzi, F., Falk, R. S., and Marini, L. D. Basic principles of mixed virtual element methods. ESAIM Math.

Model. Numer. Anal. 48, 4 (2014), 1227–1240.

[18] Cangiani, A., Dong, Z., Georgoulis, E. H., and Houston, P. hp-version discontinuous Galerkin methods for
advection-diﬀusion-reaction problems on polytopic meshes. ESAIM: Mathematical Modelling and Numerical
Analysis to appear (2015).

[19] Cangiani, A., Georgoulis, E. H., and Houston, P. hp-version discontinuous Galerkin methods on polygonal

and polyhedral meshes. Math. Models Methods Appl. Sci. 24, 10 (2014), 2009–2041.

[20] Cangiani, A., Manzini, G., and Sutton, O. J. Conforming and nonconforming virtual element methods for

elliptic problems. arXiv:1507.03543 (July 2015).

[21] Chen, L., Wang, J., and Ye, X. A posteriori error estimates for weak Galerkin ﬁnite element methods for

second order elliptic problems. J. Sci. Comput. 59, 2 (2014), 496–511.

[22] Chen, Z., and Dai, S. On the eﬃciency of adaptive ﬁnite element methods for elliptic problems with discon-

tinuous coeﬃcients. SIAM J. Sci. Comput. 24, 2 (2002), 443–462 (electronic).

[23] Cl´ement, P. Approximation by ﬁnite element functions using local regularization. Rev. Franccaise Automat.

Informat. Recherche Op´erationnelle S´er. Analyse Num´erique 9, R-2 (1975), 77–84.

[24] Cockburn, Bernardo, Antonio Di Pietro, Daniele, and Ern, Alexandre. Bridging the hybrid high-order

and hybridizable discontinuous galerkin methods. ESAIM: M2AN (2015).

[25] Di Pietro, D. A., and Ern, A. Hybrid high-order methods for variable-diﬀusion problems on general meshes.

C. R. Math. Acad. Sci. Paris 353, 1 (2015), 31–34.

[26] Droniou, Jerome, Eymard, Robert, and Herbin, Raphaele. Gradient schemes: Generic tools for the

numerical analysis of diﬀusion equations. ESAIM: M2AN (2015).

[27] Efendiev, Y., and Hou, T. Y. Multiscale ﬁnite element methods, vol. 4 of Surveys and Tutorials in the

Applied Mathematical Sciences. Springer, New York, 2009. Theory and applications.

[28] Fries, T.-P., and Belytschko, T. The extended/generalized ﬁnite element method: an overview of the

method and its applications. Internat. J. Numer. Methods Engrg. 84, 3 (2010), 253–304.

[29] Giani, S., and Houston, P. hp-adaptive composite discontinuous Galerkin methods for elliptic problems on

complicated domains. Numer. Methods Partial Diﬀerential Equations 30, 4 (2014), 1342–1367.

[30] Hiptmair, R., Moiola, A., and Perugia, I. Plane wave discontinuous Galerkin methods for the 2D Helmholtz

equation: analysis of the p-version. SIAM J. Numer. Anal. 49, 1 (2011), 264–284.

[31] Kellogg, R. B. On the Poisson equation with intersecting interfaces. Applicable Anal. 4 (1974/75), 101–129.

Collection of articles dedicated to Nikolai Ivanovich Muskhelishvili.

[32] M˚alqvist, A., and Peterseim, D. Localization of elliptic multiscale problems. Math. Comp. 83, 290 (2014),

2583–2603.

[33] Mekchay, K., and Nochetto, R. H. Convergence of adaptive ﬁnite element methods for general second order

linear elliptic PDEs. SIAM J. Numer. Anal. 43, 5 (2005), 1803–1827 (electronic).

[34] Mora, D., Rivera, G., and Rodr´ıguez, R. A virtual element method for the Steklov eigenvalue problem.

Math. Models Methods Appl. Sci. 25, 8 (2015), 1421–1445.

[35] Morin, P., Nochetto, R. H., and Siebert, K. G. Convergence of adaptive ﬁnite element methods. SIAM

Review 44, 4 (2002), 631–658 (electronic) (2003).

[36] Pryer, T. An a posteriori analysis of some inconsistent, nonconforming Galerkin methods approximating

elliptic problems. Submitted for publication.

[37] Rjasanow, S., and Weißer, S. FEM with Treﬀtz trial functions on polyhedral elements. J. Comput. Appl.

Math. 263 (2014), 202–217.

[38] Sukumar, N., and Tabarraei, A. Conforming polygonal ﬁnite elements. Internat. J. Numer. Methods Engrg.

61, 12 (2004), 2045–2066.

[39] Veeser, A., and Verf¨urth, R. Poincar´e constants for ﬁnite element stars. IMA J. Numer. Anal. 32, 1 (2012),

30–47.

[40] Verfurth, R. A review of a posteriori error estimation and adaptive mesh-reﬁnement techniques. Advanced

Numerical Mathematics. Wiley-Teubner, 1996.

[41] Verf¨urth, R. Error estimates for some quasi-interpolation operators. M2AN Math. Model. Numer. Anal. 33,

4 (1999), 695–713.

[42] Verf¨urth, R. Robust a posteriori error estimates for stationary convection-diﬀusion equations. SIAM J.

Numer. Anal. 43, 4 (2005), 1766–1782 (electronic).

[43] Weisser, S. Residual based error estimate and quasi-interpolation on polygonal meshes for high order BEM-

based EM. arXiv:1511.08993v1 (2015).

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

23

(A. Cangiani and O. J. Sutton) Department of Mathematics, University of Leicester, University Road,

Leicester LE1 7RH, UK

E-mail address: Andrea.Cangiani@le.ac.uk, ojs4@le.ac.uk

(E. H. Georgoulis) Department of Mathematics, University of Leicester, University Road, Leicester
LE1 7RH, UK and Department of Mathematics, School of Mathematical and Physical Sciences, National
Technical University of Athens, Zografou 157 80, Greece

E-mail address: Emmanuil.Georgoulis@le.ac.uk

(T. Pryer) Department of Mathematics and Statistics, University of Reading, Whiteknights, PO Box

220, Reading RG6 6AX, UK

E-mail address: t.pryer@reading.ac.uk

24

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

101

100

10−1

p = 1
p = 2
p = 3
dofs−0.5
dofs−1.0
dofs−1.5

102

101

100

p = 1
p = 2
p = 3

p = 1
p = 2
p = 3
dofs−0.5
dofs−1.0
dofs−1.5

70

60

50

40

30

20

10

0

102

103

Number of degrees of freedom

(a) (cid:107)∇(u − Π0

kuh)(cid:107)0,Ω.

102

103

Number of degrees of freedom

102

103

Number of degrees of freedom

(b) Estimated error.

(c) Eﬀectivity of the estimator.

(cid:0)(cid:80) ηE(cid:1)1/2
(cid:0)(cid:80) ΨE(cid:1)1/2
(cid:0)(cid:80) ΘE(cid:1)1/2
(cid:0)(cid:80) SE(cid:1)1/2

102

101

100

10−1

102

103

Number of degrees of freedom

(d) The estimator components for p = 1.

(e) Adaptive approximation.

Figure 7. The behaviour of the error and estimator when applied to Problem 1
with solution (6.5) under adaptive reﬁnement, each plotted against the number
of degrees of freedom.

(a) The initial mesh.

(b) After 28 reﬁnement steps.

(c) After 40 reﬁnement steps.

Figure 8. Some representative meshes from the adaptive reﬁnement sequence
for p = 1 when solving Problem 1 with solution (6.5) together with the adaptive
approximation on the ﬁnal mesh.

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

25

p = 1
p = 2
p = 3
dofs−0.5
dofs−1.0
dofs−1.5

102

101

103.8

102.4

102.6

p = 1
p = 2
p = 3
dofs−0.5
dofs−1.0
dofs−1.5

25

20

15

10

5

103.8

102.4

102.6

103

102.8
Number of degrees of freedom

103.4

103.2

103.6

101

100

102.4

102.6

103

102.8
Number of degrees of freedom

103.2

103.4

103.6

p = 1
p = 2
p = 3

103.8

103

102.8
Number of degrees of freedom

103.2

103.4

103.6

(a) (cid:107)∇(u − Π0

kuh)(cid:107)0,Ω.

(b) Estimated error.

(c) Eﬀectivity of the estimator.

(cid:0)(cid:80) ηE(cid:1)1/2
(cid:0)(cid:80) ΨE(cid:1)1/2
(cid:0)(cid:80) ΘE(cid:1)1/2
(cid:0)(cid:80) SE(cid:1)1/2

102.4

102.6

102.8

103

103.2

103.4

103.6

Number of degrees of freedom

102

101

100

10−1

10−2

(d) The estimator components for p = 1.

(e) Adaptive approximation after 40 reﬁnement
steps.

Figure 9. The behaviour of the error and estimator when applied to Problem 2
with solution (6.6) under adaptive reﬁnement.

(a) The initial mesh.

(b) After 25 reﬁnement steps.

(c) After 40 reﬁnement steps.

Figure 10. Some representative meshes from the adaptive reﬁnement sequence
for p = 1 when solving Problem 2 with solution (6.6).

26

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

10−0.4

10−0.6

10−0.8

10−1

10−1.2

limited

unlimited
dofs−0.5

100.8

100.6

100.4

100.2

100

10−0.2

102

103

Number of degrees of freedom

(a) (cid:107)∇(u − Π0

kuh)(cid:107)0,Ω.

limited

unlimited
dofs−0.5

102

103

Number of degrees of freedom

20

18

16

14

12

10

8

6

4

limited

unlimited

102

103

Number of degrees of freedom

(b) Estimated error.

(c) Eﬀectivity of the estimator.

(limited)

(cid:16)(cid:80)(cid:107)Js(cid:107)2
(cid:17)1/2
(cid:17)1/2
(cid:16)(cid:80)(cid:107)Js(cid:107)2
(cid:0)(cid:80) SE(cid:1)1/2
(cid:0)(cid:80) SE(cid:1)1/2

0,s

0,s

(unlimited)

(limited)

(unlimited)

101

100

10−1

102

103

Number of degrees of freedom

(d) The non-zero components of the estimator.

(e) Adaptive approximation.

Figure 11. The behaviour of the estimator for the Kellogg problem (§6.3) when
the discontinuities of κ are matched by the initial mesh, with p = 1 and either
one (‘limited’) or an unlimited number of hanging nodes per edge (‘unlimited’).

(a) The initial mesh.

(b) The ﬁnal mesh with at most
one hanging node per edge.

(c) The ﬁnal mesh with no
limit on the number of hanging
nodes.

Figure 12. The initial and ﬁnal adapted meshes when solving the Kellogg prob-
lem (see §6.3) when the discontinuity in κ is aligned with the initial mesh.

A POSTERIORI ERROR ESTIMATES FOR THE VIRTUAL ELEMENT METHOD

27

100

10−0.2

squares
Voronoi

random quadrilaterals

dofs−0.5

Ω
,
0
(cid:107)
)
h
u
0k
Π
−
u
(
∇
(cid:107)

10−0.4

10−0.6

102

103

Number of degrees of freedom

(a) The error (cid:107)∇(u − Π0

kuh)(cid:107)0,Ω.

squares
Voronoi

random quadrilaterals

10−0.8

y
t
i
v
i
t
c
e
ﬀ
E

30

25

20

15

10

5

squares
Voronoi

random quadrilaterals

dofs−0.5

102

103

Number of degrees of freedom

(b) Convergence of the estimator.

(cid:16)(cid:80)(cid:107)Js(cid:107)2
(cid:17)1/2
(cid:0)(cid:80) ΨE(cid:1)1/2
(cid:0)(cid:80) ΘE(cid:1)1/2
(cid:0)(cid:80) SE(cid:1)1/2

0,s

Ω
,
0
(cid:107)
)
h
u
−
u
(
∇
(cid:107)

f
o

r
o
t
a
m

i
t
s
e

e
h
t

100.8

100.6

100.4

100.2

s
t
n
e
n
o
p
m
o
c

r
o
t
a
m

i
t
s
E

101

100

10−1

102

103

Number of degrees of freedom

102

103

Number of degrees of freedom

(c) Eﬀectivity of the estimator.

(d) The non-zero components of the estimator on the
square mesh.

Figure 13. The behaviour of the estimator for the Kellogg problem (see §6.3)
when the discontinuities in κ cannot align with any mesh in the sequence, using
p = 1 and three diﬀerent types of mesh, depicted in Figure 14.

28

ANDREA CANGIANI, EMMANUIL H. GEORGOULIS, TRISTAN PRYER, AND OLIVER J. SUTTON

(a) The initial square mesh

(b) The initial Voronoi mesh

(c) The
initial
quadrilateral mesh

randomised

(d) The ﬁnal square mesh with
no limit on the number of hang-
ing nodes

(e) The ﬁnal Voronoi mesh with
no limit on the number of hang-
ing nodes

ﬁnal

(f) The
randomised
quadrilateral mesh with no
limit on the number of hanging
nodes

(g) The ﬁnal square mesh with
one hanging node per edge

(h) The ﬁnal Voronoi mesh with
one hanging node per edge

ﬁnal

(i) The
randomised
quadrilateral mesh with one
hanging node per edge

Figure 14. The initial and ﬁnal adapted meshes when solving the Kellogg prob-
lem (see §6.3) when the discontinuity in κ cannot align with any mesh in the
sequence.

